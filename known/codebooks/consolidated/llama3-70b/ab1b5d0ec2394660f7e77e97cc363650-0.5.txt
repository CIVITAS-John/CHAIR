You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another and please do not merge them.
Determine the logical relationship between concepts within each code, such as inclusion, parallel, or intersection.
Write clear and generalizable criteria for each code and do not introduce unnecessary details. Then, write an accurate verb phrase as label for the combined concept.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (7 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Label: {A consolidated verb phrase of code 1}
...
7. 
Concepts: {Repeat the input 7}
Relationship: {What is logical relationship between concepts in code 7, or N/A if not applicable}
Criteria: {Who did what, and how for code 7}
Label: {A consolidated verb phrase of code 7}
---
~~~
1.
Concepts: seeking context, clarifying scenarios
- The designer asks questions to understand the context or background of the users, and expressing interest in or asking about the user's context or situation.
- Designer asks a question about a specific scenario or context, and user or designer provides context or background information for a question.

2.
Concepts: confirm understanding, align with user needs
- The designer seeks or confirms understanding from a user or community member.
- Designer inquires about the user's request or needs, confirming or acknowledging alignment with user needs.

3.
Concepts: ask a question about the app, inquires about technical details
- Asking a question about the app or its features
- A user asks a technical question about the platform or its features.

4.
Concepts: clarifying platforms, providing platform-specific information
- Clarifying platform-related questions or issues, and technical information is provided to clarify a specific point or issue.
- Designer provides information specific to a platform, clarifying or updating users.

5.
Concepts: provide positive feedback, expresses feature satisfaction
- User or designer expresses praise or appreciation for the product or service.
- A user acknowledges or appreciates a feature or functionality.

6.
Concepts: encourage problem reporting, improving usability
- User or designer encourages others to report problems or issues.
- Instances where suggestions or changes are made to improve the usability of the software, identifying or reporting usability issues.

7.
Concepts: engage with feedback
- Designers address and acknowledge user feedback and suggestions, seeking input, opinions, or feedback from users or the community.
- A user acknowledges or responds to a message with a brief affirmation, and responding to information with a brief acknowledgment, or discussing plans to implement feedback.
===
Here are the definitions for each code:

---
1.
Concepts: seeking context, clarifying scenarios
Relationship: Inclusion (clarifying scenarios is a way of seeking context)
Criteria: Designer asks questions to understand user context or scenario, and user or designer provides context or background information.
Label: Seeking context clarification

2.
Concepts: confirm understanding, align with user needs
Relationship: Parallel (confirming understanding and aligning with user needs are two related but distinct concepts)
Criteria: Designer seeks or confirms understanding from user or community member, and inquires about user needs or requests.
Label: Confirming user needs alignment

3.
Concepts: ask a question about the app, inquires about technical details
Relationship: Inclusion (inquiring about technical details is a way of asking a question about the app)
Criteria: User or designer asks a question about the app or its features, seeking technical information.
Label: Inquiring about app details

4.
Concepts: clarifying platforms, providing platform-specific information
Relationship: Inclusion (providing platform-specific information is a way of clarifying platform-related questions or issues)
Criteria: Designer provides technical information to clarify platform-related questions or issues, or updates users on platform-specific information.
Label: Providing platform clarification

5.
Concepts: provide positive feedback, expresses feature satisfaction
Relationship: Inclusion (expressing feature satisfaction is a way of providing positive feedback)
Criteria: User or designer expresses praise or appreciation for the product or service, acknowledging a feature or functionality.
Label: Expressing satisfaction

6.
Concepts: encourage problem reporting, improving usability
Relationship: Parallel (encouraging problem reporting and improving usability are two related but distinct concepts)
Criteria: User or designer encourages problem reporting or suggests changes to improve usability, identifying or reporting usability issues.
Label: Fostering usability improvement

7.
Concepts: engage with feedback
Relationship: Inclusion (responding to feedback and seeking input are ways of engaging with feedback)
Criteria: Designers address and acknowledge user feedback and suggestions, seeking input or opinions from users or the community.
Label: Engaging with user feedback