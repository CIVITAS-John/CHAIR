You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: make a request, request enhancements, request features
- Users make specific requests or suggestions for new features.
- Users request new features or improvements.
- Users request additional features or functionalities.

2.
Concepts: request educational tools, suggest educational enhancements
- User requests specific educational tools or features.
- A user suggests or requests educational enhancements or features.

3.
Concepts: suggest expansion, expand feature scope, feature expansion suggestions
- Users suggest expanding the scope or features of the software.
- Users suggest expanding the scope of features or experiments.
- Suggesting or requesting additional features

4.
Concepts: enhance usability, considering usability
- Suggestions are made to improve the usability of the software.
- A user provides feedback or suggestions about the usability of the software.

5.
Concepts: make a suggestion, provide suggestions
- Users or designers make suggestions for improvement or feature addition.
- Users provide suggestions or ideas for improving the software.
- Users suggest improvements or refinements to features.

6.
Concepts: suggest features, suggest new features, propose usability features
- Users suggest new features or functionalities for the software.
- A user suggests a new feature or functionality.
- User suggests adding a feature or functionality to improve usability.

7.
Concepts: express enthusiasm, demonstrate interest
- Users express enthusiasm or interest in updates.
- Users demonstrate interest or curiosity about updates.

8.
Concepts: express interest in platform features, express interest in community features
- Users express interest in platform-specific features or development.
- A user expresses interest in a specific feature or functionality, especially related to community features.

9.
Concepts: explaining educational practice, highlight institutional practices
- Users explain common practices or conventions in schools or educational settings.
- User highlights common practices or constraints in educational institutions.

10.
Concepts: sharing school needs, share school resources
- Users mention or share their school's needs or requirements.
- Users provide context or information about their school resources, infrastructure, or constraints.

11.
Concepts: school context, describing school context
- User highlights a school-related context or issue.
- Users describe their school context or educational environment.

12.
Concepts: align with educational needs, aligning with educational needs
- Designers align software with educational needs or goals.
- Designers align updates or features with educational needs or goals.

13.
Concepts: emphasizing quality layouts, emphasize auto-generated quality
- Designers emphasize the importance of quality in auto-generated layouts.
- A designer emphasizes the importance of auto-generated quality in the software.

14.
Concepts: emphasizing quality, emphasizing quality values
- Designers emphasize the importance of quality.
- A user or designer places importance on quality craftsmanship or attention to detail.

15.
Concepts: emphasizing design integrity, emphasizing attention to detail
- Designers emphasize the importance of design integrity.
- Designers emphasize the importance of attention to detail.

16.
Concepts: advocating for user-driven design, advocating for usability improvements
- Users or designers advocate for user needs or requirements in software design.
- Users advocate for an improved or enhanced user experience.

17.
Concepts: specify educational needs, educational need identification
- A user provides detailed educational needs or requirements.
- User highlights educational needs or requirements.

18.
Concepts: explaining the need, identify user needs
- Designer explains the purpose or goal of a specific task or feature.
- Designer indicates and identifies user needs for specific functionality.

19.
Concepts: identify feature needs, highlight usability need
- Identify or highlight the need for a specific feature or functionality.
- Highlighting the need for improved usability or user experience.

20.
Concepts: providing feedback, providing constructive feedback
- A user provides feedback or suggestions for improvement, often with specific details.
- A user provides constructive feedback or suggestions for improvement.

21.
Concepts: reiterate needs, reiterate need for feature
- The user reiterates or re-emphasizes a need or requirement.
- Reiterate or repeat a request or suggestion made earlier.

22.
Concepts: addressing ambiguity, providing clarification
- Addressing ambiguity or unclear information.
- Providing clarification or explanation to resolve confusion or doubts.

23.
Concepts: sharing personal anecdotes, sharing anecdotal evidence
- Users share personal anecdotes or experiences to provide context or insight.
- Users share personal anecdotes or experiences to illustrate a point or provide context.

24.
Concepts: share experiences, sharing user experiences
- A user shares their experiences or updates with the online community.
- Users share their personal experiences or anecdotes.

25.
Concepts: contribute expertise, providing expertise context
- User shares knowledge or expertise about a specific topic.
- Users provide context or background information about their expertise.

26.
Concepts: providing context, providing additional context
- Users provide context or background information about their question or issue.
- Users provide context or clarification about a topic or conversation.
- Users provide additional context or information to clarify their concerns or questions.

27.
Concepts: highlighting outdated systems, mentioning outdated systems
- A user highlights outdated systems or technology.
- A user mentions or describes outdated systems or technology.

28.
Concepts: highlighting barriers to access, highlighting technical challenges
- A user highlights or mentions barriers or limitations to accessing or using the software.
- A user highlights or identifies technical challenges or limitations that need to be addressed.

29.
Concepts: explain user constraints, describing technical limitations
- A user explains constraints or limitations they face in their environment.
- A user or designer mentions technical limitations or constraints that affect the software's use.

30.
Concepts: appreciate quality, appreciate craftsmanship
- User reflects on the quality of the software.
- User appreciates the craftsmanship of the software.

31.
Concepts: praise software, compliment software design, provide positive feedback
- A user expresses positive opinions or praise about the software.
- User compliments the design or functionality of the software.
- The user expresses praise or admiration for a specific aspect of the software.

32.
Concepts: make comparisons, compare software usability
- A user or designer compares the software or its features to something else.
- Comparing the usability or practicality of different software.
===
Here are the definitions for each code:

---
1.
Concepts: make a request, request enhancements, request features
Relationship: The concepts are related as they all involve users asking for something new or improved.
Criteria: Users make specific requests or suggestions for new features or improvements.
Phrase: Requesting new features.

2.
Concepts: request educational tools, suggest educational enhancements
Relationship: The concepts are related as they both involve users asking for educational-related features or tools.
Criteria: Users request specific educational tools or features.
Phrase: Requesting educational tools.

3.
Concepts: suggest expansion, expand feature scope, feature expansion suggestions
Relationship: The concepts are related as they all involve users suggesting or requesting additional features or scope.
Criteria: Users suggest expanding the scope or features of the software.
Phrase: Suggesting feature expansion.

4.
Concepts: enhance usability, considering usability
Relationship: The concepts are related as they both involve improving the user experience.
Criteria: Suggestions are made to improve the usability of the software.
Phrase: Improving usability.

5.
Concepts: make a suggestion, provide suggestions
Relationship: The concepts are related as they both involve users providing ideas or suggestions.
Criteria: Users or designers make suggestions for improvement or feature addition.
Phrase: Providing suggestions.

6.
Concepts: suggest features, suggest new features, propose usability features
Relationship: The concepts are related as they all involve users suggesting new features or functionalities.
Criteria: Users suggest new features or functionalities for the software.
Phrase: Suggesting new features.

7.
Concepts: express enthusiasm, demonstrate interest
Relationship: The concepts are related as they both involve users showing excitement or interest.
Criteria: Users express enthusiasm or interest in updates.
Phrase: Expressing enthusiasm.

8.
Concepts: express interest in platform features, express interest in community features
Relationship: The concepts are related as they both involve users showing interest in specific features.
Criteria: Users express interest in platform-specific features or development.
Phrase: Expressing interest in features.

9.
Concepts: explaining educational practice, highlight institutional practices
Relationship: The concepts are related as they both involve users explaining or highlighting educational practices or conventions.
Criteria: Users explain common practices or conventions in schools or educational settings.
Phrase: Explaining educational practices.

10.
Concepts: sharing school needs, share school resources
Relationship: The concepts are related as they both involve users sharing information about their school.
Criteria: Users mention or share their school's needs or requirements.
Phrase: Sharing school needs.

11.
Concepts: school context, describing school context
Relationship: The concepts are related as they both involve users describing their school environment.
Criteria: User highlights a school-related context or issue.
Phrase: Describing school context.

12.
Concepts: align with educational needs, aligning with educational needs
Relationship: The concepts are related as they both involve designers aligning with educational goals or needs.
Criteria: Designers align software with educational needs or goals.
Phrase: Aligning with educational needs.

13.
Concepts: emphasizing quality layouts, emphasize auto-generated quality
Relationship: The concepts are related as they both involve designers emphasizing quality in layouts or auto-generated content.
Criteria: Designers emphasize the importance of quality in auto-generated layouts.
Phrase: Emphasizing quality layouts.

14.
Concepts: emphasizing quality, emphasizing quality values
Relationship: The concepts are related as they both involve designers or users emphasizing the importance of quality.
Criteria: Designers emphasize the importance of quality.
Phrase: Emphasizing quality.

15.
Concepts: emphasizing design integrity, emphasizing attention to detail
Relationship: The concepts are related as they both involve designers emphasizing the importance of design integrity or attention to detail.
Criteria: Designers emphasize the importance of design integrity.
Phrase: Emphasizing design integrity.

16.
Concepts: advocating for user-driven design, advocating for usability improvements
Relationship: The concepts are related as they both involve users or designers advocating for user needs or improvements.
Criteria: Users or designers advocate for user needs or requirements in software design.
Phrase: Advocating for user needs.

17.
Concepts: specify educational needs, educational need identification
Relationship: The concepts are related as they both involve users providing specific educational needs or requirements.
Criteria: A user provides detailed educational needs or requirements.
Phrase: Specifying educational needs.

18.
Concepts: explaining the need, identify user needs
Relationship: The concepts are related as they both involve designers explaining or identifying user needs.
Criteria: Designer explains the purpose or goal of a specific task or feature.
Phrase: Explaining user needs.

19.
Concepts: identify feature needs, highlight usability need
Relationship: The concepts are related as they both involve identifying or highlighting specific needs or requirements.
Criteria: Identify or highlight the need for a specific feature or functionality.
Phrase: Identifying feature needs.

20.
Concepts: providing feedback, providing constructive feedback
Relationship: The concepts are related as they both involve users providing feedback or suggestions.
Criteria: A user provides feedback or suggestions for improvement, often with specific details.
Phrase: Providing feedback.

21.
Concepts: reiterate needs, reiterate need for feature
Relationship: The concepts are related as they both involve users re-emphasizing or reiterating their needs or requirements.
Criteria: The user reiterates or re-emphasizes a need or requirement.
Phrase: Reiterating needs.

22.
Concepts: addressing ambiguity, providing clarification
Relationship: The concepts are related as they both involve addressing unclear information or providing clarification.
Criteria: Addressing ambiguity or unclear information.
Phrase: Providing clarification.

23.
Concepts: sharing personal anecdotes, sharing anecdotal evidence
Relationship: The concepts are related as they both involve users sharing personal experiences or anecdotes.
Criteria: Users share personal anecdotes or experiences to provide context or insight.
Phrase: Sharing anecdotes.

24.
Concepts: share experiences, sharing user experiences
Relationship: The concepts are related as they both involve users sharing their experiences or updates.
Criteria: A user shares their experiences or updates with the online community.
Phrase: Sharing experiences.

25.
Concepts: contribute expertise, providing expertise context
Relationship: The concepts are related as they both involve users sharing their knowledge or expertise.
Criteria: User shares knowledge or expertise about a specific topic.
Phrase: Contributing expertise.

26.
Concepts: providing context, providing additional context
Relationship: The concepts are related as they both involve users providing additional information or context.
Criteria: Users provide context or background information about their question or issue.
Phrase: Providing context.

27.
Concepts: highlighting outdated systems, mentioning outdated systems
Relationship: The concepts are related as they both involve users highlighting or mentioning outdated systems or technology.
Criteria: A user highlights outdated systems or technology.
Phrase: Highlighting outdated systems.

28.
Concepts: highlighting barriers to access, highlighting technical challenges
Relationship: The concepts are related as they both involve users highlighting barriers or limitations to accessing or using the software.
Criteria: A user highlights or mentions barriers or limitations to accessing or using the software.
Phrase: Highlighting barriers to access.

29.
Concepts: explain user constraints, describing technical limitations
Relationship: The concepts are related as they both involve users explaining or describing constraints or limitations.
Criteria: A user explains constraints or limitations they face in their environment.
Phrase: Explaining user constraints.

30.
Concepts: appreciate quality, appreciate craftsmanship
Relationship: The concepts are related as they both involve users appreciating the quality or craftsmanship of the software.
Criteria: User reflects on the quality of the software.
Phrase: Appreciating quality.

31.
Concepts: praise software, compliment software design, provide positive feedback
Relationship: The concepts are related as they all involve users expressing positive opinions or praise about the software.
Criteria: A user expresses positive opinions or praise about the software.
Phrase: Praising software.

32.
Concepts: make comparisons, compare software usability
Relationship: The concepts are related as they both involve users comparing the software or its features to something else.
Criteria: A user or designer compares the software or its features to something else.
Phrase: Making comparisons.