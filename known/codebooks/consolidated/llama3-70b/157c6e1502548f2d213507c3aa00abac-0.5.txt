You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another and please do not merge them.
Determine the logical relationship between concepts within each code, such as inclusion, parallel, or intersection.
Write clear and generalizable criteria for each code and do not introduce unnecessary details. Then, write an accurate label for the combined concept.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (4 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Label: {A consolidated label of code 1}
...
4. 
Concepts: {Repeat the input 4}
Relationship: {What is logical relationship between concepts in code 4, or N/A if not applicable}
Criteria: {Who did what, and how for code 4}
Label: {A consolidated label of code 4}
---
~~~
1.
Concepts: community gratitude, appreciation and gratitude
- Expressions of gratitude or appreciation towards the community or designers.
- Users express gratitude or acknowledgment for the designers' work, and designers express gratitude towards the community.

2.
Concepts: software evaluation, comparative assessment
- Users evaluate the effectiveness of the software.
- A user provides feedback comparing the software to other similar applications, or evaluates the software in relation to others.

3.
Concepts: suggestions, feature suggestions
- Users or designers propose new features or improvements.
- Users suggest new features or functionalities for the software.

4.
Concepts: collaborative design
- The interaction between designers and users to identify and address the needs of the target audience.
- User feedback influences the development process, and designers involve the user community in development.
===
---
Definitions for each code:

1.
Concepts: community gratitude, appreciation and gratitude
Relationship: Inclusion (community gratitude is a form of appreciation)
Criteria: Users or designers express gratitude or appreciation towards the community or designers through verbal or written statements.
Label: Community Appreciation

2.
Concepts: software evaluation, comparative assessment
Relationship: Intersection (software evaluation involves comparative assessment)
Criteria: Users provide feedback evaluating the software, comparing it to other similar applications or evaluating its effectiveness.
Label: Software Evaluation

3.
Concepts: suggestions, feature suggestions
Relationship: Inclusion (feature suggestions are a type of suggestion)
Criteria: Users or designers propose new features, functionalities, or improvements to the software.
Label: Feature Suggestions

4.
Concepts: collaborative design
Relationship: N/A (single concept)
Criteria: Designers involve the user community in the development process, and user feedback influences the development of the software.
Label: Collaborative Design