You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (16 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
16. 
Concepts: {Repeat the input 16}
Relationship: {What is logical relationship between concepts in code 16, or N/A if not applicable}
Criteria: {Who did what, and how for code 16}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: enhance user experience through guidance, enhancing user experience with clarity
- Designer provides guidance or instructions to enhance user experience.
- The designer enhances the user experience by providing clear instructions or guidance.

2.
Concepts: enhance user understanding, facilitate user understanding
- A designer provides additional information to enhance user understanding.
- A designer provides instructions or explanations to facilitate user understanding.

3.
Concepts: inform about touch screens, promote awareness of touchscreen behaviors
- Designer informs users about the functionality of touch screens.
- Designer explains touchscreen behaviors to users.

4.
Concepts: consider input mechanisms, connect usability with input methods, emphasizing input methods
- Designer considers input mechanisms and usability.
- Designer connects usability with input methods.
- Designer emphasizes the importance of input methods or user interaction.

5.
Concepts: practical application explanation, explain practical application
- Designer explains practical applications of features or components.
- A designer explains the practical application or use of a feature or tool in Physics Lab.

6.
Concepts: emphasize practical applications, explain practical applications
- Designer highlights practical applications of the software.
- Designer explains the practical applications or benefits of the software.

7.
Concepts: emphasizing practical applications, emphasis on educational practicality
- User emphasizes practical applications in educational settings.
- A user emphasizes the importance of practicality in educational settings.

8.
Concepts: engage with technical aspects, engage with platform functionality
- A user engages with technical aspects of the platform.
- User engages with the product's functionality or features.

9.
Concepts: emphasize practical utility, advocate for practical features
- User emphasizes the practical usefulness of a feature or functionality.
- A user advocates for practical features or functionalities that meet their needs.

10.
Concepts: highlight practicality, highlight practical benefits of the community's offerings, highlighting practical applications
- User highlights practicality of the software
- A user highlights the practicality or usefulness of the software.
- User highlights the practical benefits or advantages of the software.
- Users highlight the practical applications or benefits of the software.

11.
Concepts: inform about limitations, inform about system limitations, inform users about support constraints
- Someone informs users about limitations or constraints of a system or platform.
- The designer informs the community about system limitations or constraints.
- Designer informs users about limitations or constraints of the software or its support.

12.
Concepts: clarify system compatibility, inform about system compatibility
- The designer clarifies system compatibility or limitations.
- Designer informs users about system compatibility or limitations.

13.
Concepts: acknowledge usability limitation, acknowledge interaction limitation
- Designer acknowledges limitations in the software's usability.
- Designer acknowledges a limitation or constraint in the software's interaction.

14.
Concepts: acknowledge limitation, acknowledged current limitations
- A designer acknowledges a limitation or constraint.
- Designer acknowledges current limitations or constraints.

15.
Concepts: reference technical constraints, described technical limitations, provide technical limitation
- User references technical constraints or limitations.
- Descriptions or explanations of technical limitations or constraints.
- Someone provides information about technical limitations or constraints.

16.
Concepts: discuss solution limitations, explain current limitations, clarify design limitations
- Designer discusses the limitations of a solution or feature.
- Designer explains limitations or constraints of the current version.
- A designer or moderator clarifies the limitations or constraints of a current design or feature.
===
Here are the definitions for each code:

---
1.
Concepts: enhance user experience through guidance, enhancing user experience with clarity
Relationship: Guidance and clarity are means to enhance user experience.
Criteria: A designer provides guidance or clear instructions to enhance user experience.
Phrase: Providing guidance for user experience.

2.
Concepts: enhance user understanding, facilitate user understanding
Relationship: Additional information and explanations facilitate user understanding.
Criteria: A designer provides additional information or explanations to facilitate user understanding.
Phrase: Facilitating user understanding.

3.
Concepts: inform about touch screens, promote awareness of touchscreen behaviors
Relationship: Informing users about touch screens promotes awareness of touchscreen behaviors.
Criteria: A designer informs users about touch screens and their behaviors.
Phrase: Informing about touch screens.

4.
Concepts: consider input mechanisms, connect usability with input methods, emphasizing input methods
Relationship: Input mechanisms and usability are connected, with emphasis on input methods.
Criteria: A designer considers input mechanisms and connects them with usability, emphasizing input methods.
Phrase: Emphasizing input methods.

5.
Concepts: practical application explanation, explain practical application
Relationship: Explanation provides understanding of practical application.
Criteria: A designer explains the practical application of features or components.
Phrase: Explaining practical applications.

6.
Concepts: emphasize practical applications, explain practical applications
Relationship: Emphasis is placed on explaining practical applications.
Criteria: A designer explains and highlights practical applications of the software.
Phrase: Highlighting practical applications.

7.
Concepts: emphasizing practical applications, emphasis on educational practicality
Relationship: Emphasis is placed on practical applications in educational settings.
Criteria: A user emphasizes practical applications in educational settings.
Phrase: Emphasizing educational practicality.

8.
Concepts: engage with technical aspects, engage with platform functionality
Relationship: User engages with both technical aspects and platform functionality.
Criteria: A user engages with the technical aspects and functionality of the platform.
Phrase: Engaging with technical aspects.

9.
Concepts: emphasize practical utility, advocate for practical features
Relationship: Emphasis is placed on practical utility, leading to advocacy for practical features.
Criteria: A user emphasizes practical utility and advocates for practical features.
Phrase: Advocating for practical features.

10.
Concepts: highlight practicality, highlight practical benefits of the community's offerings, highlighting practical applications
Relationship: Highlighting practicality encompasses practical benefits and applications.
Criteria: A user highlights practicality, benefits, and applications of the software.
Phrase: Highlighting practicality.

11.
Concepts: inform about limitations, inform about system limitations, inform users about support constraints
Relationship: Informing users about limitations encompasses system limitations and support constraints.
Criteria: Someone informs users about limitations, system limitations, and support constraints.
Phrase: Informing about limitations.

12.
Concepts: clarify system compatibility, inform about system compatibility
Relationship: Clarifying system compatibility involves informing users about it.
Criteria: A designer clarifies and informs users about system compatibility.
Phrase: Clarifying system compatibility.

13.
Concepts: acknowledge usability limitation, acknowledge interaction limitation
Relationship: Acknowledging limitations encompasses both usability and interaction limitations.
Criteria: A designer acknowledges limitations in usability and interaction.
Phrase: Acknowledging limitations.

14.
Concepts: acknowledge limitation, acknowledged current limitations
Relationship: Acknowledging limitations encompasses current limitations.
Criteria: A designer acknowledges current limitations.
Phrase: Acknowledging limitations.

15.
Concepts: reference technical constraints, described technical limitations, provide technical limitation
Relationship: Referencing technical constraints involves describing or providing technical limitations.
Criteria: Someone references or provides information about technical limitations or constraints.
Phrase: Referencing technical constraints.

16.
Concepts: discuss solution limitations, explain current limitations, clarify design limitations
Relationship: Discussing limitations encompasses explaining current limitations and clarifying design limitations.
Criteria: A designer discusses, explains, and clarifies limitations of a solution or design.
Phrase: Discussing solution limitations.