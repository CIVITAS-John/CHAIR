You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: valuing code simplicity, advocating for readable code, advocating for clear code
- The user values code simplicity and maintainability.
- The user values simplicity and maintainability in code, preferring code that is easy to understand and modify.
- The user prioritizes code readability, advocating for simple and accessible code.

2.
Concepts: valuing readable code, preferring readable code
- The user values easy-to-read generated code with comments and documentation.
- The user prefers readable code with comments and documentation over complex solutions.

3.
Concepts: discussing code quality, discussing code quality and complexity
- The user discusses the importance of code quality, including readability and maintainability.
- The user discusses code quality and complexity, emphasizing the importance of maintainable code.

4.
Concepts: demonstrating language knowledge, familiarity with multiple software languages
- The user demonstrates diverse language knowledge and experience in computer programming.
- The user is familiar with multiple software languages, having experience with different programming languages.

5.
Concepts: observes beginner coding challenges, observes beginner coding practices
- Users observe beginners' coding challenges with large code chunks.
- Users observe beginners' coding practices, including writing large code chunks.

6.
Concepts: seeks ai verification for coding errors, requests ai verification for coding errors
- Participants ask AI to verify code and eliminate bugs.
- Participants ask AI to verify code and identify potential errors.

7.
Concepts: summarizes ai-generated code, analyzes ai-generated code
- Summarizing and understanding AI-generated code.
- Describing AI's misunderstanding, summarizing and interpreting AI-generated code.

8.
Concepts: analyzing ai-generated code, evaluates ai-generated code
- The user analyzes, evaluates, and debugs AI-generated code.
- The user reads through AI-generated code to understand and debug it.
- The participant asks for slow scrolling to carefully read and evaluate AI-generated code.

9.
Concepts: optimizes code with ai, ai-assisted code optimization, considers ai for optimization
- Using ChatGPT to optimize code.
- Uses AI to optimize code
- Considers using AI-generated code for code optimization and improvement.

10.
Concepts: values ai feedback, seeing potential in ai feedback
- Valuing AI feedback for code improvement and optimization.
- Sees potential in AI feedback for code optimization.

11.
Concepts: notes ai follows best practices, recognizes ai adherence to standards
- The participant notes AI adherence to best practices in code generation.
- The participant notes AI's adherence to best practices in coding and recognizes AI's adherence to coding standards.

12.
Concepts: appreciating executable code, appreciating ai-generated code
- The user appreciates the ability to run AI-generated code.
- The user finds AI-generated code useful and appreciates the AI's code generation capabilities.

13.
Concepts: praising ai-generated code, noting ai-generated code quality
- The user praises the AI's code readability and documentation.
- The user notes AI's ability to produce understandable code.

14.
Concepts: appreciating separated, commented code, appreciating ai-generated code comments
- Appreciates AI-generated code that is separated, commented, and documented.
- The user appreciates the AI's tendency to provide comments and documentation in the generated code.

15.
Concepts: desires automatic integration, preferring seamless model updates
- The interviewee desires seamless integration of AI-generated code into their model.
- The interviewee prefers seamless model updates, wanting the AI to integrate code automatically.

16.
Concepts: appreciates automatic integration, seamless integration of ai-generated code
- Appreciates the capability to automatically integrate AI-generated code.
- Appreciation for seamless integration of AI-generated code.

17.
Concepts: manually codes with ai guidance, writes code manually with ai guidance
- Manually codes with AI guidance.
- Writes code manually, using AI-generated code only as a reference.

18.
Concepts: uses ai-generated code as a reference, refer to the generated code or get a reference
- Uses AI-generated code as a reference.
- Refers to the generated code or gets a reference, using the AI's output as a starting point for further development.

19.
Concepts: integrates ai suggestions, integrating ai into workflow
- Participant integrates AI suggestions into their work.
- The participant integrates AI into their established workflow and development process.

20.
Concepts: manual ai output integration, integrates ai-generated code manually
- The interviewee decides to manually integrate AI output into their code.
- Manually integrates AI-generated code into their own work.

21.
Concepts: integrates ai-generated code, integrates ai-generated code selectively
- The participant integrates AI-generated code into their model.
- The interviewee integrates AI suggestions into their own coding, using generated code as a reference.
- The participant selectively integrates AI-generated code into their work.

22.
Concepts: prioritizes efficiency, ai-driven task efficiency
- The participant prioritizes efficiency when using AI-generated code.
- Participant emphasizes the efficiency of AI in solving programming tasks.

23.
Concepts: test ai's code generation, indicates reliability of ai-generated code
- The participant tests AI's code generation capabilities.
- The participant indicates the reliability of AI-generated code.

24.
Concepts: valuing interface support for task definition, find interface helpful for parameter clarification
- The participant values the interface's support in defining tasks and clarifying parameters.
- The participant finds the interface helpful in clarifying parameters.

25.
Concepts: find ai's parameter setting helpful, appreciate ai's parameter clarification
- The participant finds AI's parameter setting helpful.
- The participant appreciates AI's ability to clarify parameters.

26.
Concepts: sets up model skeleton before using ai, sets up model structure before ai involvement
- Participant sets up a model skeleton before using AI assistance.
- The participant sets up model structure before using AI and structures the model before involving AI, demonstrating a clear process.

27.
Concepts: follows a structured approach, follows an established modeling process
- The participant follows a structured approach to model building or coding, creating a code skeleton before engaging the AI-driven system.
- The interviewee follows a structured approach to building models, including setting up the code skeleton before asking ChatGPT for assistance.

28.
Concepts: appreciates thoughtful model creation, appreciates ai model creation quality
- The participant appreciates thoughtful model creation and best practices and appreciates the thoughtful approach to model creation.
- The participant appreciates AI's careful model creation, following best practices, and values AI's careful approach to model creation.

29.
Concepts: define a simple task, envision a simple ai task
- The participant defines a simple neural network task.
- The participant envisions a simple neural network task.

30.
Concepts: conceptualize a basic neural network, focus on building a basic neural network
- The participant conceptualizes a basic neural network.
- The participant focuses on building a basic neural network.

31.
Concepts: switch to simpler tasks, switches to simpler tasks
- The participant switches to simpler tasks when faced with challenges.
- The participant switches to a simpler task for better understanding.

32.
Concepts: need for expertise in error interpretation, requiring expertise to understand ai errors
- Emphasizes the need for expertise in interpreting and fixing errors.
- Recognizing the need for expertise to understand and fix AI-generated errors
===
Here are the definitions for each code:

---
1.
Concepts: valuing code simplicity, advocating for readable code, advocating for clear code
Relationship: These concepts are related to the user's preferences for code quality and maintainability.
Criteria: The user prioritizes code simplicity, readability, and clarity.
Phrase: Valuing code simplicity and readability.

2.
Concepts: valuing readable code, preferring readable code
Relationship: These concepts are related to the user's preference for code readability.
Criteria: The user values and prefers readable code with comments and documentation.
Phrase: Preferring readable code.

3.
Concepts: discussing code quality, discussing code quality and complexity
Relationship: These concepts are related to the user's discussion of code quality and complexity.
Criteria: The user discusses code quality, including readability and maintainability, and complexity.
Phrase: Discussing code quality and complexity.

4.
Concepts: demonstrating language knowledge, familiarity with multiple software languages
Relationship: These concepts are related to the user's language knowledge and experience.
Criteria: The user demonstrates diverse language knowledge and experience in computer programming.
Phrase: Demonstrating language knowledge.

5.
Concepts: observes beginner coding challenges, observes beginner coding practices
Relationship: These concepts are related to the user's observation of beginner coding challenges and practices.
Criteria: The user observes beginners' coding challenges and practices, including writing large code chunks.
Phrase: Observing beginner coding challenges.

6.
Concepts: seeks ai verification for coding errors, requests ai verification for coding errors
Relationship: These concepts are related to the user's request for AI verification of coding errors.
Criteria: The user asks AI to verify code and eliminate or identify potential errors.
Phrase: Requesting AI verification for coding errors.

7.
Concepts: summarizes ai-generated code, analyzes ai-generated code
Relationship: These concepts are related to the user's analysis and summarization of AI-generated code.
Criteria: The user summarizes and analyzes AI-generated code to understand and debug it.
Phrase: Analyzing AI-generated code.

8.
Concepts: analyzing ai-generated code, evaluates ai-generated code
Relationship: These concepts are related to the user's analysis and evaluation of AI-generated code.
Criteria: The user analyzes, evaluates, and debugs AI-generated code.
Phrase: Evaluating AI-generated code.

9.
Concepts: optimizes code with ai, ai-assisted code optimization, considers ai for optimization
Relationship: These concepts are related to the user's use of AI for code optimization.
Criteria: The user uses AI to optimize code and considers AI-generated code for optimization.
Phrase: Optimizing code with AI.

10.
Concepts: values ai feedback, seeing potential in ai feedback
Relationship: These concepts are related to the user's valuation of AI feedback.
Criteria: The user values AI feedback for code improvement and optimization.
Phrase: Valuing AI feedback.

11.
Concepts: notes ai follows best practices, recognizes ai adherence to standards
Relationship: These concepts are related to the user's recognition of AI's adherence to best practices and standards.
Criteria: The user notes AI's adherence to best practices in code generation and recognizes AI's adherence to coding standards.
Phrase: Recognizing AI's adherence to standards.

12.
Concepts: appreciating executable code, appreciating ai-generated code
Relationship: These concepts are related to the user's appreciation of AI-generated code.
Criteria: The user appreciates the ability to run AI-generated code and finds it useful.
Phrase: Appreciating AI-generated code.

13.
Concepts: praising ai-generated code, noting ai-generated code quality
Relationship: These concepts are related to the user's praise and recognition of AI-generated code quality.
Criteria: The user praises AI-generated code readability and documentation and notes its quality.
Phrase: Praising AI-generated code.

14.
Concepts: appreciating separated, commented code, appreciating ai-generated code comments
Relationship: These concepts are related to the user's appreciation of AI-generated code comments and documentation.
Criteria: The user appreciates AI-generated code that is separated, commented, and documented.
Phrase: Appreciating AI-generated code comments.

15.
Concepts: desires automatic integration, preferring seamless model updates
Relationship: These concepts are related to the user's desire for seamless integration and model updates.
Criteria: The user desires seamless integration of AI-generated code into their model and prefers automatic updates.
Phrase: Desiring automatic integration.

16.
Concepts: appreciates automatic integration, seamless integration of ai-generated code
Relationship: These concepts are related to the user's appreciation of seamless integration of AI-generated code.
Criteria: The user appreciates the capability to automatically integrate AI-generated code.
Phrase: Appreciating automatic integration.

17.
Concepts: manually codes with ai guidance, writes code manually with ai guidance
Relationship: These concepts are related to the user's manual coding with AI guidance.
Criteria: The user manually codes with AI guidance, using AI-generated code as a reference.
Phrase: Manually coding with AI guidance.

18.
Concepts: uses ai-generated code as a reference, refer to the generated code or get a reference
Relationship: These concepts are related to the user's use of AI-generated code as a reference.
Criteria: The user uses AI-generated code as a reference, referring to it for further development.
Phrase: Using AI-generated code as a reference.

19.
Concepts: integrates ai suggestions, integrating ai into workflow
Relationship: These concepts are related to the user's integration of AI suggestions into their workflow.
Criteria: The user integrates AI suggestions into their work and development process.
Phrase: Integrating AI into workflow.

20.
Concepts: manual ai output integration, integrates ai-generated code manually
Relationship: These concepts are related to the user's manual integration of AI-generated code.
Criteria: The user manually integrates AI-generated code into their own work.
Phrase: Manually integrating AI-generated code.

21.
Concepts: integrates ai-generated code, integrates ai-generated code selectively
Relationship: These concepts are related to the user's integration of AI-generated code.
Criteria: The user integrates AI-generated code into their model, selectively using generated code as a reference.
Phrase: Integrating AI-generated code.

22.
Concepts: prioritizes efficiency, ai-driven task efficiency
Relationship: These concepts are related to the user's prioritization of efficiency when using AI-generated code.
Criteria: The user prioritizes efficiency when using AI-generated code, emphasizing the efficiency of AI in solving programming tasks.
Phrase: Prioritizing efficiency.

23.
Concepts: test ai's code generation, indicates reliability of ai-generated code
Relationship: These concepts are related to the user's testing and indication of AI-generated code reliability.
Criteria: The user tests AI's code generation capabilities and indicates the reliability of AI-generated code.
Phrase: Testing AI-generated code.

24.
Concepts: valuing interface support for task definition, find interface helpful for parameter clarification
Relationship: These concepts are related to the user's valuation of interface support for task definition and parameter clarification.
Criteria: The user values the interface's support in defining tasks and clarifying parameters, finding it helpful.
Phrase: Valuing interface support.

25.
Concepts: find ai's parameter setting helpful, appreciate ai's parameter clarification
Relationship: These concepts are related to the user's appreciation of AI's parameter setting and clarification.
Criteria: The user finds AI's parameter setting helpful and appreciates AI's ability to clarify parameters.
Phrase: Appreciating AI's parameter clarification.

26.
Concepts: sets up model skeleton before using ai, sets up model structure before ai involvement
Relationship: These concepts are related to the user's setup of a model skeleton or structure before using AI assistance.
Criteria: The user sets up a model skeleton or structure before using AI assistance, demonstrating a clear process.
Phrase: Setting up a model skeleton.

27.
Concepts: follows a structured approach, follows an established modeling process
Relationship: These concepts are related to the user's following of a structured approach to model building or coding.
Criteria: The user follows a structured approach to model building or coding, creating a code skeleton before engaging the AI-driven system.
Phrase: Following a structured approach.

28.
Concepts: appreciates thoughtful model creation, appreciates ai model creation quality
Relationship: These concepts are related to the user's appreciation of thoughtful model creation and AI's model creation quality.
Criteria: The user appreciates thoughtful model creation and best practices, valuing AI's careful approach to model creation.
Phrase: Appreciating thoughtful model creation.

29.
Concepts: define a simple task, envision a simple ai task
Relationship: These concepts are related to the user's definition and envisioning of a simple AI task.
Criteria: The user defines and envisions a simple neural network task.
Phrase: Defining a simple AI task.

30.
Concepts: conceptualize a basic neural network, focus on building a basic neural network
Relationship: These concepts are related to the user's conceptualization and focus on building a basic neural network.
Criteria: The user conceptualizes and focuses on building a basic neural network.
Phrase: Conceptualizing a basic neural network.

31.
Concepts: switch to simpler tasks, switches to simpler tasks
Relationship: These concepts are related to the user's switching to simpler tasks when faced with challenges.
Criteria: The user switches to simpler tasks for better understanding.
Phrase: Switching to simpler tasks.

32.
Concepts: need for expertise in error interpretation, requiring expertise to understand ai errors
Relationship: These concepts are related to the user's recognition of the need for expertise in interpreting and fixing AI-generated errors.
Criteria: The user emphasizes the need for expertise in interpreting and fixing errors, recognizing the need for expertise to understand AI-generated errors.
Phrase: Recognizing the need for expertise.