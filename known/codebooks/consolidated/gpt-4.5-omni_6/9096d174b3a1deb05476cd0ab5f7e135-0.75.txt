You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (39 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
39. 
Concepts: {Repeat the input 39}
Relationship: {What is logical relationship between concepts in code 39, or N/A if not applicable}
Criteria: {Who did what, and how for code 39}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: affirm a point, confirm reason
- Participants confirm or agree with another member's point or explanation.
- Participants confirm or acknowledge a reason or explanation provided by others.

2.
Concepts: use emojis, express emotions
- Participants use emojis to communicate feelings or reactions.
- Participants use expressive language or emojis to convey their emotions or reactions.

3.
Concepts: offer an apology, apologize for inconvenience
- Participants offer an apology for any inconvenience or issues caused.
- Designers or participants apologize for any inconvenience caused and use polite language.

4.
Concepts: encourage feedback, suggest interactions
- Participants encourage community members to provide feedback or suggestions.
- Participants suggest or request interactions and feedback from the community.

5.
Concepts: show community appreciation, acknowledge community support
- Participants express gratitude towards the community for their support.
- Participants express support or appreciation for the community's efforts.

6.
Concepts: greeting, greet the community
- Greetings exchanged between community members or developers.
- Users or designers greet the community.

7.
Concepts: explain situation, provide context explanation
- Participants explain specific situations or contexts to provide background information.
- Participants elaborate on or explain the background context of a situation or query.

8.
Concepts: teacher role confirmation, confirm teacher identity
- Users confirm their role as teachers.
- Participants identify a user as a teacher or inquire about their teaching level.

9.
Concepts: professional background sharing, share background information
- Users share their professional background to establish credibility and context.
- Users provide their professional or personal background information to help understand the community's composition.

10.
Concepts: announcing component updates, announce component update
- A designer announces new components and updates existing ones.
- A designer is announcing changes or updates to specific components on the platform.

11.
Concepts: sharing updates, sharing planned updates
- A designer shares information about changes and new features in the product.
- Designers share information about upcoming features and updates.

12.
Concepts: development timeline, providing development timelines
- Discuss the timeline for development and release of updates.
- Participants provide a timeline for the release or development of features and updates.

13.
Concepts: development update, providing product updates
- Information shared by designers about the current status, updates, and future plans for the Physics Lab software.
- Designers provide information about updates or technical changes to the Physics Lab software.

14.
Concepts: accepting the suggestion, accepting and implementing suggestions
- Developers acknowledge and accept user suggestions or requests.
- Accept and agree to implement user suggestions in future updates.

15.
Concepts: expectation management, managing user expectations
- Designer sets realistic expectations for users about features, timelines, and future updates.
- Participants, especially designers, set realistic expectations regarding the feasibility and timelines of certain features.

16.
Concepts: compatibility planning, outlining future plans
- Designer outlines plans for addressing compatibility issues or adding features.
- A designer outlines plans and considerations for future software design and compatibility.

17.
Concepts: planning future updates, planning feature development
- Developers discuss plans and intentions for future software updates.
- A member outlines future development plans and feature development for the software.

18.
Concepts: outline development priorities, discussing development prioritization
- A designer outlines the priorities in the software development process.
- Designers discuss the prioritization and order of tasks in the software development process.

19.
Concepts: acknowledge response, appreciation of feedback, designer acknowledgment
- A user acknowledges a response or assistance from the designer.
- A designer expresses appreciation for user feedback and encourages further input.
- A designer acknowledges a user's suggestion or feedback.

20.
Concepts: responding to feedback, responding to user queries
- Designers respond to user feedback or queries and discuss potential changes.
- Designers respond to user inquiries, feedback, or suggestions, showing attentiveness.

21.
Concepts: involving users, involving users in design
- Designers actively involve users in the design process through feedback or testing.
- A designer involves users in the design process or decision-making.

22.
Concepts: seeking user input, seeking user feedback
- Designers seek input or clarification from users to understand their needs.
- A designer seeks feedback from users about their experience and desired features.

23.
Concepts: understand user needs, understanding user needs
- Developer seeks to understand issues or problems faced by users.
- Developers ask users about their specific needs and follow up to understand them better.

24.
Concepts: user role inquiry, inquiring about user background
- Designers inquire about the user's role or profession.
- A designer asks about a user's professional background to better understand their needs.

25.
Concepts: further question, requesting clarification
- A designer asks a follow-up question to seek further clarification.
- A designer asks for clarification on design or functionality details.

26.
Concepts: provide usage instructions, instruction and updates
- Designers provide specific instructions on how to use certain features of the software.
- Designers providing updates and instructions to help users understand and use the software effectively.

27.
Concepts: seek efficiency, suggest feature simplification
- A designer is expressing the need to simplify a feature or process.
- Designers suggest simplifying a feature or process for better usability.

28.
Concepts: internet availability inquiry, inquire about classroom setup
- Developer inquires about the availability of internet in a classroom setting.
- Participants ask questions specifically about the availability of internet in classroom settings.

29.
Concepts: comment on usability, software effectiveness
- Users comment on the ease of use and practical benefits of the software.
- A user comments on the software's effectiveness in practical scenarios.

30.
Concepts: approval expression, express feature appreciation
- User expresses approval or satisfaction with the software or a feature.
- Users express appreciation for specific features of the software.

31.
Concepts: recognize efforts, express gratitude
- Users acknowledge and appreciate the efforts of the designers or community members.
- Users express gratitude or acknowledgment for the designers' or community members' contributions.

32.
Concepts: user appreciation, user interaction and gratitude
- Expressions of thanks or appreciation from users.
- Users are interacting with each other and expressing gratitude or positive feedback.

33.
Concepts: giving suggestions, suggesting features, suggesting improvements
- Users provide suggestions and feedback on the software's features and development.
- Users or developers suggest improvements or additional features for the software.
- Users or developers suggest improvements to existing features or the product.

34.
Concepts: requesting features, soliciting feature requests
- Users request new features or improvements to be added to the software.
- Designers invite users to suggest new features or improvements.

35.
Concepts: providing feedback, providing user feedback
- Users provide suggestions or feedback and share potential solutions for software improvement.
- Users provide feedback, suggestions, or questions about the software's design and functionality.

36.
Concepts: provide download information, inquire about software downloads
- Participants share information on where and how to download the software.
- Participants ask where or how to download specific versions of the software.

37.
Concepts: information seeking, making technical inquiries
- Users asking questions to gain knowledge or resources related to the software.
- Users ask technical questions or seek information about the software's functionality.

38.
Concepts: communicating progress and plans
- A designer communicates the progress and plans for software updates and releases.
- Developer communicates progress on current projects and future plans.

39.
Concepts: announcing software updates
- Designers announce upcoming updates, new features, and version details.
- A developer announces and discusses the availability and details of software updates.
===
---
Definitions for each code (39 in total):
1.
Concepts: affirm a point, confirm reason
Relationship: Confirming or agreeing with another member's point or explanation.
Criteria: Participants affirm or acknowledge the validity of another member's point or explanation.
Phrase: Confirming explanations

2.
Concepts: use emojis, express emotions
Relationship: Using emojis to communicate feelings or reactions.
Criteria: Participants use emojis or expressive language to convey their emotions or reactions.
Phrase: Expressing emotions

3.
Concepts: offer an apology, apologize for inconvenience
Relationship: Apologizing for inconveniences or issues caused.
Criteria: Participants offer apologies for any inconvenience or issues caused, using polite language.
Phrase: Offering apologies

4.
Concepts: encourage feedback, suggest interactions
Relationship: Encouraging community interaction and feedback.
Criteria: Participants encourage community members to provide feedback or suggestions.
Phrase: Encouraging feedback

5.
Concepts: show community appreciation, acknowledge community support
Relationship: Expressing gratitude towards the community for support.
Criteria: Participants express gratitude and appreciation for the community's support and efforts.
Phrase: Showing appreciation

6.
Concepts: greeting, greet the community
Relationship: Exchanging greetings within the community.
Criteria: Users or designers exchange greetings with the community.
Phrase: Greeting the community

7.
Concepts: explain situation, provide context explanation
Relationship: Providing background information or explanation.
Criteria: Participants explain specific situations or contexts to provide background information.
Phrase: Explaining situations

8.
Concepts: teacher role confirmation, confirm teacher identity
Relationship: Confirming or inquiring about teacher roles.
Criteria: Participants confirm or identify a user as a teacher or inquire about their teaching level.
Phrase: Confirming teacher role

9.
Concepts: professional background sharing, share background information
Relationship: Sharing professional background to establish credibility.
Criteria: Users share their professional background to establish credibility and context.
Phrase: Sharing professional background

10.
Concepts: announcing component updates, announce component update
Relationship: Announcing updates to components.
Criteria: Designers announce new components or updates to existing ones on the platform.
Phrase: Announcing component updates

11.
Concepts: sharing updates, sharing planned updates
Relationship: Sharing information about changes and new features.
Criteria: Designers share information about upcoming features and updates.
Phrase: Sharing updates

12.
Concepts: development timeline, providing development timelines
Relationship: Discussing the timeline for updates.
Criteria: Participants provide a timeline for the release or development of features and updates.
Phrase: Providing timelines

13.
Concepts: development update, providing product updates
Relationship: Sharing current status and future plans.
Criteria: Designers provide information about updates or technical changes to the Physics Lab software.
Phrase: Providing updates

14.
Concepts: accepting the suggestion, accepting and implementing suggestions
Relationship: Acknowledging and implementing user suggestions.
Criteria: Developers acknowledge and accept user suggestions for future implementation.
Phrase: Accepting suggestions

15.
Concepts: expectation management, managing user expectations
Relationship: Setting realistic expectations for users.
Criteria: Participants set realistic expectations regarding the feasibility and timelines of certain features.
Phrase: Managing expectations

16.
Concepts: compatibility planning, outlining future plans
Relationship: Outlining plans for future compatibility.
Criteria: Designers outline plans and considerations for future software design and compatibility.
Phrase: Outlining plans

17.
Concepts: planning future updates, planning feature development
Relationship: Discussing plans for future updates.
Criteria: Members outline future development plans and feature development for the software.
Phrase: Planning updates

18.
Concepts: outline development priorities, discussing development prioritization
Relationship: Outlining priorities in development.
Criteria: Designers discuss the prioritization and order of tasks in the software development process.
Phrase: Prioritizing development

19.
Concepts: acknowledge response, appreciation of feedback, designer acknowledgment
Relationship: Acknowledging and appreciating feedback.
Criteria: Designers acknowledge a user's suggestion or feedback and express appreciation.
Phrase: Acknowledging feedback

20.
Concepts: responding to feedback, responding to user queries
Relationship: Addressing user feedback or queries.
Criteria: Designers respond to user inquiries, feedback, or suggestions, showing attentiveness.
Phrase: Responding to feedback

21.
Concepts: involving users, involving users in design
Relationship: Involving users in the design process.
Criteria: Designers actively involve users in the design process through feedback or testing.
Phrase: Involving users

22.
Concepts: seeking user input, seeking user feedback
Relationship: Seeking input or feedback from users.
Criteria: Designers seek input or feedback from users about their experience and desired features.
Phrase: Seeking feedback

23.
Concepts: understand user needs, understanding user needs
Relationship: Understanding user issues or needs.
Criteria: Developers ask users about their specific needs and follow up to understand them better.
Phrase: Understanding needs

24.
Concepts: user role inquiry, inquiring about user background
Relationship: Inquiring about user's role or profession.
Criteria: Designers inquire about the user's role or professional background to better understand their needs.
Phrase: Inquiring about roles

25.
Concepts: further question, requesting clarification
Relationship: Asking for further clarification.
Criteria: Designers ask follow-up questions to seek further clarification on design or functionality details.
Phrase: Requesting clarification

26.
Concepts: provide usage instructions, instruction and updates
Relationship: Providing instructions on usage.
Criteria: Designers provide specific instructions on how to use certain features of the software.
Phrase: Providing instructions

27.
Concepts: seek efficiency, suggest feature simplification
Relationship: Suggesting simplification for efficiency.
Criteria: Designers suggest simplifying a feature or process for better usability.
Phrase: Suggesting simplification

28.
Concepts: internet availability inquiry, inquire about classroom setup
Relationship: Inquiring about internet availability in classrooms.
Criteria: Participants ask questions specifically about the availability of internet in classroom settings.
Phrase: Inquiring about internet

29.
Concepts: comment on usability, software effectiveness
Relationship: Commenting on ease of use and effectiveness.
Criteria: Users comment on the software's ease of use and practical benefits.
Phrase: Commenting on usability

30.
Concepts: approval expression, express feature appreciation
Relationship: Expressing approval or satisfaction.
Criteria: Users express approval or appreciation for specific features of the software.
Phrase: Expressing appreciation

31.
Concepts: recognize efforts, express gratitude
Relationship: Acknowledging efforts and expressing gratitude.
Criteria: Users acknowledge and appreciate the efforts of the designers or community members.
Phrase: Expressing gratitude

32.
Concepts: user appreciation, user interaction and gratitude
Relationship: Interacting and expressing gratitude.
Criteria: Users interact with each other and express gratitude or positive feedback.
Phrase: Expressing gratitude

33.
Concepts: giving suggestions, suggesting features, suggesting improvements
Relationship: Providing suggestions for improvement.
Criteria: Users or developers provide suggestions for improvements or additional features for the software.
Phrase: Suggesting improvements

34.
Concepts: requesting features, soliciting feature requests
Relationship: Requesting new features or improvements.
Criteria: Users request new features or improvements to be added to the software.
Phrase: Requesting features

35.
Concepts: providing feedback, providing user feedback
Relationship: Providing feedback and potential solutions.
Criteria: Users provide feedback, suggestions, or questions about the software's design and functionality.
Phrase: Providing feedback

36.
Concepts: provide download information, inquire about software downloads
Relationship: Sharing or inquiring about download information.
Criteria: Participants share or inquire about how to download specific versions of the software.
Phrase: Inquiring about downloads

37.
Concepts: information seeking, making technical inquiries
Relationship: Seeking technical information or knowledge.
Criteria: Users ask technical questions or seek information about the software's functionality.
Phrase: Seeking information

38.
Concepts: communicating progress and plans
Relationship: Communicating current progress and future plans.
Criteria: Designers communicate the progress on current projects and future plans for updates.
Phrase: Communicating progress

39.
Concepts: announcing software updates
Relationship: Announcing upcoming updates and new features.
Criteria: Designers announce upcoming updates, new features, and version details.
Phrase: Announcing updates
---