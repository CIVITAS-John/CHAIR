You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (20 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
20. 
Concepts: {Repeat the input 20}
Relationship: {What is logical relationship between concepts in code 20, or N/A if not applicable}
Criteria: {Who did what, and how for code 20}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: states simple coding task, describes simple coding request
- The quote states a simple coding task.
- Describes a simple coding request or task.

2.
Concepts: seeks clarity in code structure, refines programming request for clarity
- The quote seeks clarity in code structure.
- The quote refines a programming request for clarity.

3.
Concepts: emphasizes incremental coding, suggests incremental coding
- Participants emphasize the need for incremental coding.
- The interviewee suggests or implies the importance of incremental coding or breaking down code into smaller chunks.

4.
Concepts: reads code before integrating, engages in thoughtful code integration
- The participant reads and reviews code before integrating it into their work.
- Participants engage in thoughtful code integration.

5.
Concepts: appreciates timely code analysis, appreciates thoughtful coding approaches
- Participant appreciates timely code analysis.
- Appreciates thoughtful coding approaches

6.
Concepts: values documentation, values clear documentation
- The interviewee values or appreciates the importance of documentation in code.
- User values clear and accessible documentation, such as code that is easy to understand and maintain.

7.
Concepts: expresses desire for clarity in future coding, prioritize accessibility in code for future reference
- Expresses desire for clear and simple code for future maintenance.
- Prioritizes accessibility and simplicity in code for future reference.

8.
Concepts: values quality coding standards, valuing code readability and maintainability
- Participants value quality coding standards and responsible coding approaches.
- Participants value code readability and emphasize maintainability.

9.
Concepts: preferring simple code, prefers readable code structures
- Participants value and prefer simple, maintainable code and solutions.
- Participants prefer readable code, clear code structures, and separated code lines.

10.
Concepts: prefers manual coding, prefers hands-on approach to coding
- The participant prefers to write code manually, using the LLM-generated code only as a reference.
- Participants prefer a hands-on approach to coding.

11.
Concepts: establish the context for coding, establishes a coding process before ai interaction
- The interviewer observes the participant asking the AI to create a specific task or scenario in NetLogo.
- Interviewee establishes a coding process before interacting with AI.

12.
Concepts: engages in coding process, establishes a coding process with ai guidance, follows ai steps and writes code manually
- Users engage in dictation or natural language input for AI-assisted coding.
- Participants establish a coding process, creating code skeletons before interacting with AI.
- Participants follow AI steps and write code manually with AI guidance.

13.
Concepts: integrate ai suggestions, integrates ai code into model
- Participants integrate AI suggestions into their work, selectively copying code to the model.
- The code integrates AI-generated code into the model, selectively copying code to the model.

14.
Concepts: decides to copy paste code, decides to copy and paste ai output
- Decides to copy and paste code from AI output
- The participant decides to copy and paste AI output, implying a practical approach.

15.
Concepts: selectively copies code, avoids blind copying and pasting of ai-generated code
- Participants selectively copy code from AI-generated output.
- Participants refrain from directly copying and pasting AI-generated code without making an effort to understand it.

16.
Concepts: decides to use ai-generated code, makes pragmatic coding decisions
- Participants decide to use AI-generated code.
- The participant makes pragmatic coding decisions, using AI-generated code to save time and effort.

17.
Concepts: needing urgent ai support, relies on ai output under time constraint
- Participants rely on the LLM-driven interface for urgent support due to time constraints.
- Relies on AI output when facing time constraints or pressure.

18.
Concepts: constraint, integrates ai-generated code fully, uses ai code due to time constraints, adopts ai-generated code under time pressure
- The participant is constrained by time or other factors and uses AI-generated code completely or partially.
- Participants integrate AI-generated code fully into their work, especially when faced with time constraints.
- Uses AI code due to time constraints, opting to use the generated code completely.
- Participants adopt AI-generated code under time pressure.

19.
Concepts: advocate for quick solutions, advocates for efficiency in coding tasks
- Expresses the idea that AI can save time and increase efficiency.
- Advocates for efficiency and time-saving in coding tasks with AI

20.
Concepts: values efficiency, appreciates workflow efficiency, shows interest in optimizing coding processes, highlights efficiency
- The participant values efficiency and seeks to minimize time and effort in coding and problem-solving.
- Participant values efficiency in coding processes.
- The participant expresses interest in optimizing coding processes, such as automating tasks.
- Participant emphasizes the importance of efficiency in programming or coding tasks.
===
Here are the definitions for each code:

---
1.
Concepts: states simple coding task, describes simple coding request
Relationship: The two concepts are closely related, as stating a simple coding task implies describing a simple coding request.
Criteria: Participants state and describe simple coding tasks or requests.
Phrase: States simple coding requests.

2.
Concepts: seeks clarity in code structure, refines programming request for clarity
Relationship: The two concepts are related, as seeking clarity in code structure involves refining programming requests for better understanding.
Criteria: Participants seek clarity in code structure by refining programming requests.
Phrase: Refines requests for clarity.

3.
Concepts: emphasizes incremental coding, suggests incremental coding
Relationship: The two concepts are closely related, as emphasizing incremental coding implies suggesting it as a beneficial approach.
Criteria: Participants emphasize and suggest incremental coding approaches.
Phrase: Emphasizes incremental coding.

4.
Concepts: reads code before integrating, engages in thoughtful code integration
Relationship: The two concepts are related, as reading code before integrating it implies a thoughtful approach to integration.
Criteria: Participants read code before integrating it and engage in thoughtful integration.
Phrase: Engages in thoughtful integration.

5.
Concepts: appreciates timely code analysis, appreciates thoughtful coding approaches
Relationship: The two concepts are related, as appreciating timely code analysis implies valuing thoughtful coding approaches.
Criteria: Participants appreciate timely code analysis and thoughtful coding approaches.
Phrase: Appreciates thoughtful coding.

6.
Concepts: values documentation, values clear documentation
Relationship: The two concepts are closely related, as valuing documentation implies valuing clear and accessible documentation.
Criteria: Participants value and prioritize clear and accessible documentation.
Phrase: Values clear documentation.

7.
Concepts: expresses desire for clarity in future coding, prioritize accessibility in code for future reference
Relationship: The two concepts are related, as expressing a desire for clarity in future coding implies prioritizing accessibility for future reference.
Criteria: Participants express a desire for clarity and prioritize accessibility in code for future reference.
Phrase: Prioritizes accessibility.

8.
Concepts: values quality coding standards, valuing code readability and maintainability
Relationship: The two concepts are closely related, as valuing quality coding standards implies valuing code readability and maintainability.
Criteria: Participants value quality coding standards, readability, and maintainability.
Phrase: Values quality coding standards.

9.
Concepts: preferring simple code, prefers readable code structures
Relationship: The two concepts are closely related, as preferring simple code implies preferring readable code structures.
Criteria: Participants prefer simple, readable, and maintainable code structures.
Phrase: Prefers readable code.

10.
Concepts: prefers manual coding, prefers hands-on approach to coding
Relationship: The two concepts are closely related, as preferring manual coding implies preferring a hands-on approach to coding.
Criteria: Participants prefer manual coding and hands-on approaches to coding.
Phrase: Prefers manual coding.

11.
Concepts: establish the context for coding, establishes a coding process before ai interaction
Relationship: The two concepts are related, as establishing a context for coding involves setting up a process before interacting with AI.
Criteria: Participants establish a context and process for coding before interacting with AI.
Phrase: Establishes a coding process.

12.
Concepts: engages in coding process, establishes a coding process with ai guidance, follows ai steps and writes code manually
Relationship: The three concepts are related, as engaging in a coding process involves establishing a process with AI guidance and following AI steps while writing code manually.
Criteria: Participants engage in coding processes with AI guidance, following AI steps and writing code manually.
Phrase: Engages in coding process.

13.
Concepts: integrate ai suggestions, integrates ai code into model
Relationship: The two concepts are closely related, as integrating AI suggestions implies integrating AI code into the model.
Criteria: Participants integrate AI suggestions and code into their models.
Phrase: Integrates AI code.

14.
Concepts: decides to copy paste code, decides to copy and paste ai output
Relationship: The two concepts are closely related, as deciding to copy and paste code implies deciding to copy and paste AI output.
Criteria: Participants decide to copy and paste AI-generated code.
Phrase: Decides to copy and paste.

15.
Concepts: selectively copies code, avoids blind copying and pasting of ai-generated code
Relationship: The two concepts are related, as selectively copying code implies avoiding blind copying and pasting of AI-generated code.
Criteria: Participants selectively copy code and avoid blind copying and pasting.
Phrase: Selectively copies code.

16.
Concepts: decides to use ai-generated code, makes pragmatic coding decisions
Relationship: The two concepts are related, as deciding to use AI-generated code implies making pragmatic coding decisions.
Criteria: Participants decide to use AI-generated code and make pragmatic coding decisions.
Phrase: Makes pragmatic decisions.

17.
Concepts: needing urgent ai support, relies on ai output under time constraint
Relationship: The two concepts are related, as needing urgent AI support implies relying on AI output under time constraints.
Criteria: Participants rely on AI output under time constraints.
Phrase: Relies on AI output.

18.
Concepts: constraint, integrates ai-generated code fully, uses ai code due to time constraints, adopts ai-generated code under time pressure
Relationship: The four concepts are related, as being constrained implies integrating AI-generated code fully, using AI code due to time constraints, and adopting AI-generated code under time pressure.
Criteria: Participants integrate AI-generated code fully, use AI code due to time constraints, and adopt AI-generated code under time pressure.
Phrase: Integrates AI code fully.

19.
Concepts: advocate for quick solutions, advocates for efficiency in coding tasks
Relationship: The two concepts are closely related, as advocating for quick solutions implies advocating for efficiency in coding tasks.
Criteria: Participants advocate for quick solutions and efficiency in coding tasks.
Phrase: Advocates for efficiency.

20.
Concepts: values efficiency, appreciates workflow efficiency, shows interest in optimizing coding processes, highlights efficiency
Relationship: The four concepts are related, as valuing efficiency implies appreciating workflow efficiency, showing interest in optimizing coding processes, and highlighting efficiency.
Criteria: Participants value efficiency, appreciate workflow efficiency, show interest in optimizing coding processes, and highlight efficiency.
Phrase: Values efficiency.