You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between sub-codes. If a sub-code includes another, use the broader one. If sub-codes are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (16 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {A sentence of consolidated criteria 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
16.
Relationship: {The logical relationship between sub-codes in code 16}
Criteria: {A sentence of consolidated criteria 16}
Label: {A consolidated label of code 16}
Category: {2-4 words for code 16}
---
~~~
1. software usage inquiry, technical specifications.
- Inquiries or discussions about the usage of software.
- Inquiries about technical specifications of the software.

2. memory aid techniques, user feedback gathering.
- Techniques used to aid memory in gathering opinions.
- Gathering feedback from users for memory aid techniques.

3. user appreciation, user approval of feature idea.
- Expressions of thanks or appreciation from users and towards software design.
- Positive feedback or approval from users regarding a proposed software feature.

4. software usability, user interface design.
- Evaluations or comments on the usability of software.
- Comments or suggestions related to the design and layout of the software interface.

5. software features, software functionality description.
- Descriptions of new software features or components.
- Descriptions and suggestions for software functionalities.

6. feature implementation, future software development plans.
- Plans or promises for the implementation of new features in the software.
- Statements or intentions regarding future development of the software.

7. user reassurance, managing user expectations.
- Reassuring users about the progress of updates or releases.
- Informing users about the size and scope of upcoming updates.

8. software release process, software update distribution.
- Process of releasing software updates on different platforms.
- Distributing software updates to users through designated channels.

9. compatibility inquiries, platform compatibility.
- Questions about software compatibility.
- Queries or discussions related to the compatibility of the platform with different devices.

10. simulation effects, educational impact.
- Comments on the effectiveness of the software's simulation features.
- Observations or feedback on the educational effectiveness of the software's simulations.

11. design refinement, software optimization process.
- Refining or improving the design of the software.
- Iterative process of refining software for better performance.

12. community feedback, suggestion solicitation, community consultation.
- Seeking or providing feedback within the community.
- Requesting suggestions or ideas from community members.
- Planning to consult the community for input or feedback.

13. wave concepts, mechanical waves.
- Discussions specifically focusing on transverse or longitudinal wave concepts.
- Focused discussions or requests specifically related to mechanical wave concepts.

14. optical benches, optical experiments.
- Discussions or requests specifically focusing on optical bench concepts.
- Discussions or requests specifically focusing on optical experiment concepts.

15. technology impact, classroom technology.
- Reflections on the impact of technology on educational settings.
- Comments on the technology used in classrooms for educational purposes.

16. participatory design.
- Involving community members in the design process or decision-making.
- Involving users in design decision-making processes and making decisions based on user feedback.
===
Categories: 
* Online Community Engagement
* Software Development
* Educational Impact
* User Experience

Definitions for each code:
1.
Relationship: Parallel
Criteria: Inquiries or discussions about software usage, technical specifications.
Label: Software Inquiries
Category: Online Community Engagement

2.
Relationship: Parallel
Criteria: Techniques for memory aid, gathering user feedback.
Label: User Feedback Techniques
Category: User Experience

3.
Relationship: Parallel
Criteria: User expressions of appreciation, approval of feature ideas.
Label: User Feedback
Category: Online Community Engagement

4.
Relationship: Parallel
Criteria: Evaluations on software usability, interface design feedback.
Label: Usability Feedback
Category: User Experience

5.
Relationship: Parallel
Criteria: Descriptions of software features, functionality.
Label: Feature Descriptions
Category: Software Development

6.
Relationship: Parallel
Criteria: Plans for feature implementation, future development.
Label: Feature Implementation
Category: Software Development

7.
Relationship: Parallel
Criteria: Reassuring users, managing expectations on updates.
Label: User Reassurance
Category: Online Community Engagement

8.
Relationship: Parallel
Criteria: Process of software release, update distribution.
Label: Release Process
Category: Software Development

9.
Relationship: Parallel
Criteria: Inquiries on software compatibility, platform compatibility discussions.
Label: Compatibility Queries
Category: User Experience

10.
Relationship: Parallel
Criteria: Comments on simulation effects, educational impact.
Label: Simulation Impact
Category: Educational Impact

11.
Relationship: Parallel
Criteria: Refining software design, optimization process.
Label: Design Refinement
Category: Software Development

12.
Relationship: Parallel
Criteria: Community feedback, suggestion solicitation, consultation.
Label: Community Engagement
Category: Online Community Engagement

13.
Relationship: Parallel
Criteria: Discussions on wave concepts, mechanical waves.
Label: Wave Concepts
Category: Educational Impact

14.
Relationship: Parallel
Criteria: Discussions on optical benches, experiments.
Label: Optical Concepts
Category: Educational Impact

15.
Relationship: Parallel
Criteria: Reflections on technology impact, classroom technology comments.
Label: Technology Impact
Category: Educational Impact

16.
Relationship: Parallel
Criteria: Involving community in design, decision-making based on feedback.
Label: Participatory Design
Category: Online Community Engagement