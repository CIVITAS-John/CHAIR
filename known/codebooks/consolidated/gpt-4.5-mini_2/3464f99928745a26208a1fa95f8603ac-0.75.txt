You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (19 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
19. 
Concepts: {Repeat the input 19}
Relationship: {What is logical relationship between concepts in code 19, or N/A if not applicable}
Criteria: {Who did what, and how for code 19}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: list feature development timelines, set timeline for mechanics experiments
- Designers share timelines and goals for upcoming feature development that require attention.
- Designer sets expectations on the timeline for upcoming features related to mechanics.

2.
Concepts: soft keyboard consideration, discuss usability aspects
- Designers address considerations related to user input methods within the software.
- Designers discuss usability aspects and the implications of different input methods for user experience.

3.
Concepts: explain software limitations, provide technical information
- Designers explain software limitations and acknowledge potential technical challenges that users may encounter.
- Designers provide technical information and explain the compatibility of the software with hardware or operating systems.

4.
Concepts: subject specific tools, circuit diagram tool development
- Designers specify tools or components that will be included in future software updates.
- User or designer discusses the development of specific tools or components relevant to the software.

5.
Concepts: give examples of feature, propose and elaborate suggestions
- Examples provided by the designer illustrating potential features or functions under consideration.
- Designers propose suggestions and elaborate on them using detailed examples from prior attempts.

6.
Concepts: suggest future enhancements, proposing design enhancements
- Designers answer user questions and suggest potential future enhancements based on user feedback.
- Designers and users propose specific features or enhancements and invite suggestions for improvements.

7.
Concepts: enhance usability, cater to user needs
- Designers emphasize usability and describe functionality to meet user needs effectively.
- Designers highlight the importance of addressing user needs while explaining ongoing efforts to acknowledge feature necessities.

8.
Concepts: align with user feedback, outline development priorities
- The designer aligns their objectives with user feedback and prioritizes it in the development process.
- Designers prioritize development features based on community feedback while users recommend systematic prioritization.

9.
Concepts: share design insights, incorporating user insights
- Users provide input regarding design aspects or share relevant information for design considerations.
- Designers solicit and reflect on user feedback, discussing its impact on future updates.

10.
Concepts: resolve user concerns, reassure and address concerns
- Designers address and resolve user concerns by providing technical clarification on issues encountered.
- Designers reassure users regarding progress and express gratitude for their concerns.

11.
Concepts: seek user context, gather user context
- Designers seek to understand user experiences and challenges while users show insight into designers' challenges.
- Designers gather user context by asking about their teaching environments and professional backgrounds.

12.
Concepts: acknowledgment and support, acknowledge community support
- Instances where support and acknowledgment are expressed within the community.
- Designers acknowledge community members with greetings and express gratitude for ongoing support.

13.
Concepts: use emoji for engagement, use expressive communication
- User uses emoji to enhance engagement in communication within the community.
- Users utilize emojis and expressive communication to convey reactions and feelings during interactions.

14.
Concepts: inquire about access, ask a question about the app
- Users ask technical questions about accessing, using, or downloading the software.
- A user poses a question seeking information about the applicationâ€™s functionality or access.

15.
Concepts: make feature requests, request specific features
- Users express specific needs and formally request features related to software functionality.
- Users request new features or the inclusion of additional experiments in the Physics Lab tool.

16.
Concepts: suggesting feature enhancements, suggest usability improvements with justifications
- Users suggest specific features and provide feedback aimed at improving the software's performance.
- Users suggest improvements aimed at enhancing software usability and provide justifications.

17.
Concepts: show interest, express anticipation
- User expresses eagerness about accessing the software.
- Users express anticipation about updates and engage with the timeline for future software developments.

18.
Concepts: outline context of use, contextualize responses
- Users provide descriptions of specific contexts in which they use the software.
- Users provide context that informs their questions about software implementation.

19.
Concepts: acknowledging community expertise, consult on educational standards
- Designer and users engage in discussions about educational standards and practices.
- Designers consult with teachers regarding specific technical details and educational standards.
===
---
Definitions for each code (19 in total):
1.
Concepts: list feature development timelines, set timeline for mechanics experiments
Relationship: Designers share information about upcoming features and their respective timelines.
Criteria: Designers communicate timelines and goals for upcoming features while setting expectations for mechanics-related experiments.
Phrase: Communicate feature timelines.

2.
Concepts: soft keyboard consideration, discuss usability aspects
Relationship: Designers focus on user input methods and their impact on overall usability.
Criteria: Designers consider input methods and discuss their usability implications for user experience.
Phrase: Discuss input usability.

3.
Concepts: explain software limitations, provide technical information
Relationship: Designers clarify limitations and potential technical challenges faced by users.
Criteria: Designers explain software limitations and provide necessary technical compatibility information.
Phrase: Clarify technical limitations.

4.
Concepts: subject specific tools, circuit diagram tool development
Relationship: Designers specify and discuss the development of relevant tools or components.
Criteria: Designers specify tools for future updates and discuss their development.
Phrase: Specify tool development.

5.
Concepts: give examples of feature, propose and elaborate suggestions
Relationship: Designers illustrate features through examples and elaborate on suggestions.
Criteria: Designers provide examples and propose detailed suggestions for features under consideration.
Phrase: Illustrate feature proposals.

6.
Concepts: suggest future enhancements, proposing design enhancements
Relationship: Designers combine user feedback with their proposals for enhancements.
Criteria: Designers suggest enhancements based on user feedback and invite further suggestions.
Phrase: Propose design enhancements.

7.
Concepts: enhance usability, cater to user needs
Relationship: Designers emphasize meeting user needs through usability.
Criteria: Designers enhance usability while addressing and describing user needs.
Phrase: Enhance user usability.

8.
Concepts: align with user feedback, outline development priorities
Relationship: Designers prioritize development based on user feedback.
Criteria: Designers align objectives with user suggestions and outline development priorities accordingly.
Phrase: Prioritize user feedback.

9.
Concepts: share design insights, incorporating user insights
Relationship: Designers integrate user input into design considerations.
Criteria: Designers share insights and incorporate user feedback into future developments.
Phrase: Integrate user insights.

10.
Concepts: resolve user concerns, reassure and address concerns
Relationship: Designers provide reassurance and clarification to users.
Criteria: Designers address and resolve user concerns while reassuring them about progress.
Phrase: Address user concerns.

11.
Concepts: seek user context, gather user context
Relationship: Designers aim to understand user experiences through inquiry.
Criteria: Designers seek and gather user context regarding teaching environments and challenges.
Phrase: Gather user context.

12.
Concepts: acknowledgment and support, acknowledge community support
Relationship: Designers express gratitude and support within the community.
Criteria: Designers acknowledge and support community members through greetings and gratitude.
Phrase: Acknowledge community support.

13.
Concepts: use emoji for engagement, use expressive communication
Relationship: Users enhance communication engagement through emojis.
Criteria: Users utilize emojis to enhance engagement and express emotions in interactions.
Phrase: Enhance communication engagement.

14.
Concepts: inquire about access, ask a question about the app
Relationship: Users seek information regarding software access and functionality.
Criteria: Users ask questions related to technical access or functionality of the application.
Phrase: Seek access information.

15.
Concepts: make feature requests, request specific features
Relationship: Users formally express their needs for software features.
Criteria: Users request specific features related to functionality in the Physics Lab tool.
Phrase: Request specific features.

16.
Concepts: suggesting feature enhancements, suggest usability improvements with justifications
Relationship: Users provide feedback on potential software enhancements.
Criteria: Users suggest features and usability improvements with justifications for their proposals.
Phrase: Suggest feature enhancements.

17.
Concepts: show interest, express anticipation
Relationship: Users express enthusiasm for software updates and access.
Criteria: Users demonstrate eagerness and anticipation regarding software access and updates.
Phrase: Express software interest.

18.
Concepts: outline context of use, contextualize responses
Relationship: Users provide context to inform inquiries about the software.
Criteria: Users outline their specific contexts of use to frame their questions.
Phrase: Contextualize user inquiries.

19.
Concepts: acknowledging community expertise, consult on educational standards
Relationship: Designers and users engage in discussions about educational practices.
Criteria: Designers consult with users about educational standards and practices.
Phrase: Consult on educational standards.
---