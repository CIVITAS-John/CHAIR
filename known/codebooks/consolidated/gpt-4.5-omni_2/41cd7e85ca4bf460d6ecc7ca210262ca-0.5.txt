You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (49 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
49. 
Concepts: {Repeat the input 49}
Relationship: {What is logical relationship between concepts in code 49, or N/A if not applicable}
Criteria: {Who did what, and how for code 49}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: addressing usability concerns, providing usability workarounds
- Designers address usability concerns and software limitations.
- Designers provide workarounds and instructions for usability constraints.

2.
Concepts: engaging in problem solving, engaging in user interaction
- Designers engage with users and inquire about their issues.
- Users and designers engage in a back-and-forth interaction to clarify a question.

3.
Concepts: soliciting user feedback, gathering and considering feedback
- Designers encourage users to provide feedback and suggestions for future updates.
- Designers solicit, gather, and consider user feedback for future updates or improvements.

4.
Concepts: assuring compatibility, confirming and diagnosing compatibility
- Designers assure and set expectations about software compatibility.
- Designers confirm compatibility and diagnose related problems.

5.
Concepts: concurring on design ideas, accepting user suggestions, seeking consensus and making suggestions
- Users agreeing with or supporting design ideas proposed by others.
- Designers accept and agree to implement user suggestions and discuss plans for future updates.
- Designers seek consensus and make suggestions.

6.
Concepts: simplifying features, refining and simplifying design
- Designers suggesting or implementing the simplification of features.
- Designers discuss simplification and refinement in design.

7.
Concepts: sharing development plans, sharing development progress
- Designers share development plans and current feature progress.
- Designers communicate and share progress updates.

8.
Concepts: managing release schedule, providing update timelines
- Designers discuss and manage the release schedule for updates.
- Designers provide timelines for updates or feature development.

9.
Concepts: confirming future updates, previewing upcoming updates, listing and describing planned features
- Designers confirm future updates or features.
- Designers share visual updates and preview upcoming features.
- Designers list and describe features planned for future updates.

10.
Concepts: committing to future updates, promising to implement improvements
- Designers commit to future updates or improvements.
- Designers promise to implement features or improvements.

11.
Concepts: outlining future design plans, describing future plans and development
- Designers outline future design plans and long-term planning.
- Designers describe future planning and development.

12.
Concepts: planning future consultations, discussing research and future plans
- Designers announce and confirm plans for future consultations and feedback.
- Designers discuss ongoing research and future design considerations.

13.
Concepts: detailing version-specific updates, providing product and technical updates
- Designers provide detailed information about the features and updates in a specific version.
- Designers provide information and updates about the product and its technical aspects.

14.
Concepts: update timeline inquiry, inquiring about updates
- A participant asks about the timeline for updates.
- Users ask or inquire about upcoming or recent updates.

15.
Concepts: checking for updates, showing interest in updates
- Checking for recent or upcoming updates.
- Users express anticipation and interest in update progress.

16.
Concepts: communicating updates, notifying group about updates
- Participants make announcements and communicate updates to the community.
- Participants send notifications and communicate updates within the group.

17.
Concepts: providing feature examples, explaining new feature functionalities, explaining technical functionality
- Designers give examples to illustrate how features function.
- Designers detail and explain the features and functionalities of the software.
- Designers explain technical aspects and functionality of specific components.

18.
Concepts: feature stability plans, discussing feature stability
- Explanations of the plans and stability of software features.
- Designers discuss the stability and long-term reliability of software features.

19.
Concepts: praise software, expressing satisfaction with features
- A participant praises the software for its practicality and effectiveness.
- Users express approval and satisfaction with software features and performance.

20.
Concepts: sharing teaching experiences, highlighting student engagement
- Participants share their teaching experiences and classroom feedback using the software.
- Participants describe student engagement and positive responses when using software in class.

21.
Concepts: considering usability, discussing usability solutions
- Designers consider usability and user experience in discussions.
- Designers discuss and suggest usability solutions.

22.
Concepts: usability discussion, discussing design aspects
- A participant discusses the usability aspects or user interface considerations.
- Participants discuss the user interface and design aspects of the software.

23.
Concepts: considering input methods, considering touch screen usability
- Designers consider and discuss input method designs.
- Designers considering the usability and implications of touch screen use for the software.

24.
Concepts: clarifying platform versions, clarifying updates and versions
- Participants inquire or clarify information about platform-specific versions.
- Participants clarify details about updates and software versions.

25.
Concepts: theorizing compatibility, discussing system compatibility
- Participants theorize about the compatibility of systems or components.
- Participants discuss software compatibility across different systems.

26.
Concepts: adapting to platform limitations, provide platform-specific information
- Designers mention and adapt to platform-specific constraints.
- Designers provide platform-specific information or instructions.

27.
Concepts: frustration, expressing frustration with system limitations
- Users or designers express frustration with certain aspects of the software or its use.
- Users note outdated computer systems and express frustration about them.

28.
Concepts: establish credibility, share professional background
- Providing background information or qualifications to establish authority or expertise.
- Users share their professional background to establish credibility and provide context.

29.
Concepts: explain common practice in schools, address network disablement reasons
- A user explains common practices in schools regarding network disablement.
- A user explains that schools disable networks on classroom computers to address security and performance concerns.

30.
Concepts: explaining subject focus, highlighting educational tools
- Designers explain the subject focus and educational topics of the software.
- Designers highlight and detail the educational tools and purposes of the software.

31.
Concepts: discussing educational context, discussing instructional design
- Users and designers discuss the educational context and experiences of using the software.
- Designers discuss teaching and instructional design to make the software user-friendly.

32.
Concepts: school needs, describing institutional needs
- A participant mentions the needs or initiatives of their school.
- Users provide context about their school's focus and describe institutional needs.

33.
Concepts: acknowledge user input, acknowledging information
- Acknowledging the input or contribution of a user.
- Users acknowledge receiving information or resolving issues.

34.
Concepts: express community appreciation, encouraging positivity and gratitude
- Designers express gratitude to the community for their support, and community members express appreciation.
- Community members express appreciation and encouragement to foster a positive atmosphere.

35.
Concepts: apologize for interruption, apologizing and being polite
- Apologizing for causing an interruption.
- Participants express politeness and apologize for inconveniences.

36.
Concepts: requesting community input and help, engage community in design
- Designers request suggestions or future help from the community.
- Designers consult the community for input or feedback on specific topics and engage them in the design process.

37.
Concepts: encouraging discussion, fostering open group communication, encouraging group discussions
- Designers encouraging open discussion within the community.
- Designers encourage group members to communicate openly and share issues or suggestions.
- Participants encourage group interaction and feedback, promoting in-group discussions.

38.
Concepts: resource acknowledgment, utilizing available resources
- A participant acknowledges finding or accessing provided resources.
- Users acknowledge finding necessary files and resources within the group.

39.
Concepts: offering potential solutions, suggesting alternative solutions
- Participants offer and suggest potential solutions to problems.
- Participants suggest alternative solutions or workarounds.

40.
Concepts: providing community answers, providing answers and information
- Community members or designers provide answers to user questions.
- Respondents provide answers or resources to user questions.

41.
Concepts: explain situational context, provide contextual information
- Users explain a situation by providing background or situational information.
- Users provide context or background information relevant to their questions or comments.

42.
Concepts: provide detailed responses, requesting specific feedback
- Users provide detailed and specific information to clarify an answer.
- Users provide specific information and request detailed feedback.

43.
Concepts: asking follow-up questions, gathering additional information
- Users ask follow-up questions to seek information or clarification.
- Users ask for more details to understand specific requests or situations.

44.
Concepts: explaining design rationale, explain question intention
- Designers explain the goals and rationale behind design decisions.
- Users or designers explain the intention behind a question or follow-up question.

45.
Concepts: encouraging elaboration, justifying and explaining suggestions, elaborate on suggestions
- Encouraging users to elaborate on their needs or suggestions.
- Users provide suggestions for improvements and explain their reasons.
- Designers provide detailed suggestions or examples to clarify feedback or ideas.

46.
Concepts: identifying usability issues, proposing usability improvements
- Participants identify usability issues and feature needs.
- Participants suggest changes to improve usability and workflow of the software.

47.
Concepts: invite feature requests, collaboration suggestions
- Designers invite users to suggest new features or improvements.
- Suggestions from users proposing collaboration or new features to be added.

48.
Concepts: requesting technical help, seeking guidance and assistance
- Participants request technical help and ask technical questions about the platform.
- Users seek guidance and request assistance on how to perform tasks.

49.
Concepts: request, requesting specific features
- Making a request for specific features or demonstrations.
- Users express their needs and request specific features or functionalities for the software.
===
---
Definitions for each code (49 in total):
1.
Concepts: addressing usability concerns, providing usability workarounds
Relationship: Both concepts involve designers responding to usability issues.
Criteria: Designers address usability concerns and provide workarounds for software limitations.
Phrase: Mitigating usability issues

2.
Concepts: engaging in problem solving, engaging in user interaction
Relationship: Both concepts involve interactive problem-solving between designers and users.
Criteria: Designers and users engage in back-and-forth interactions to clarify and solve issues.
Phrase: Collaborating on problem-solving

3.
Concepts: soliciting user feedback, gathering and considering feedback
Relationship: Both concepts involve actively seeking and utilizing user feedback.
Criteria: Designers solicit, gather, and consider user feedback for future updates and improvements.
Phrase: Collecting and considering user feedback

4.
Concepts: assuring compatibility, confirming and diagnosing compatibility
Relationship: Both concepts involve ensuring and verifying software compatibility.
Criteria: Designers assure, confirm, and diagnose software compatibility issues.
Phrase: Ensuring software compatibility

5.
Concepts: concurring on design ideas, accepting user suggestions, seeking consensus and making suggestions
Relationship: All concepts involve mutual agreement and collaboration on design ideas.
Criteria: Users and designers agree on design ideas, accept suggestions, and seek consensus.
Phrase: Reaching design consensus

6.
Concepts: simplifying features, refining and simplifying design
Relationship: Both concepts involve improving design by simplifying features.
Criteria: Designers suggest or implement simplifications and refinements in the design.
Phrase: Streamlining design features

7.
Concepts: sharing development plans, sharing development progress
Relationship: Both concepts involve communication about development status.
Criteria: Designers share plans and progress updates on software development.
Phrase: Communicating development status

8.
Concepts: managing release schedule, providing update timelines
Relationship: Both concepts involve planning and communicating update schedules.
Criteria: Designers manage release schedules and provide timelines for updates.
Phrase: Scheduling and announcing updates

9.
Concepts: confirming future updates, previewing upcoming updates, listing and describing planned features
Relationship: All concepts involve sharing information about future updates.
Criteria: Designers confirm, preview, and describe planned features and updates.
Phrase: Announcing future updates

10.
Concepts: committing to future updates, promising to implement improvements
Relationship: Both concepts involve a commitment to future enhancements.
Criteria: Designers commit to and promise the implementation of future updates and improvements.
Phrase: Pledging future improvements

11.
Concepts: outlining future design plans, describing future plans and development
Relationship: Both concepts involve detailing future design and development plans.
Criteria: Designers outline and describe future design and development plans.
Phrase: Planning future design

12.
Concepts: planning future consultations, discussing research and future plans
Relationship: Both concepts involve future planning and consultations.
Criteria: Designers plan future consultations and discuss ongoing research and future design considerations.
Phrase: Planning and discussing future consultations

13.
Concepts: detailing version-specific updates, providing product and technical updates
Relationship: Both concepts involve providing detailed updates on specific versions and technical aspects.
Criteria: Designers provide detailed information about specific version updates and technical aspects.
Phrase: Detailing version-specific updates

14.
Concepts: update timeline inquiry, inquiring about updates
Relationship: Both concepts involve users asking about update timelines.
Criteria: Users inquire about the timeline for upcoming or recent updates.
Phrase: Inquiring about update timelines

15.
Concepts: checking for updates, showing interest in updates
Relationship: Both concepts involve users seeking information about updates.
Criteria: Users check for and express interest in recent or upcoming updates.
Phrase: Seeking update information

16.
Concepts: communicating updates, notifying group about updates
Relationship: Both concepts involve informing the community about updates.
Criteria: Participants communicate and notify the group about updates.
Phrase: Informing about updates

17.
Concepts: providing feature examples, explaining new feature functionalities, explaining technical functionality
Relationship: All concepts involve explaining and illustrating software features.
Criteria: Designers provide examples and explanations of new features and technical functionalities.
Phrase: Explaining feature functionalities

18.
Concepts: feature stability plans, discussing feature stability
Relationship: Both concepts involve discussing the stability of software features.
Criteria: Designers discuss plans and the stability of software features.
Phrase: Discussing feature stability

19.
Concepts: praise software, expressing satisfaction with features
Relationship: Both concepts involve positive feedback about the software.
Criteria: Users express praise and satisfaction with the software's features and performance.
Phrase: Praising software features

20.
Concepts: sharing teaching experiences, highlighting student engagement
Relationship: Both concepts involve discussing the use of software in educational settings.
Criteria: Participants share teaching experiences and highlight student engagement with the software.
Phrase: Sharing educational experiences

21.
Concepts: considering usability, discussing usability solutions
Relationship: Both concepts involve addressing usability issues.
Criteria: Designers consider and discuss usability solutions and user experience.
Phrase: Addressing usability issues

22.
Concepts: usability discussion, discussing design aspects
Relationship: Both concepts involve discussing user interface and design aspects.
Criteria: Participants discuss the usability and design aspects of the software.
Phrase: Discussing design usability

23.
Concepts: considering input methods, considering touch screen usability
Relationship: Both concepts involve evaluating input methods for usability.
Criteria: Designers consider and discuss input methods, including touch screen usability.
Phrase: Evaluating input methods

24.
Concepts: clarifying platform versions, clarifying updates and versions
Relationship: Both concepts involve clarifying details about software versions.
Criteria: Participants inquire and clarify information about platform-specific versions and updates.
Phrase: Clarifying version details

25.
Concepts: theorizing compatibility, discussing system compatibility
Relationship: Both concepts involve discussing software compatibility.
Criteria: Participants theorize and discuss software compatibility across different systems.
Phrase: Discussing software compatibility

26.
Concepts: adapting to platform limitations, provide platform-specific information
Relationship: Both concepts involve addressing platform-specific constraints.
Criteria: Designers adapt to and provide information about platform-specific limitations.
Phrase: Addressing platform limitations

27.
Concepts: frustration, expressing frustration with system limitations
Relationship: Both concepts involve expressing dissatisfaction with software limitations.
Criteria: Users express frustration with certain aspects of the software or its use.
Phrase: Expressing software frustration

28.
Concepts: establish credibility, share professional background
Relationship: Both concepts involve sharing information to establish expertise.
Criteria: Users share their professional background to establish credibility.
Phrase: Establishing professional credibility

29.
Concepts: explain common practice in schools, address network disablement reasons
Relationship: Both concepts involve explaining practices related to network use in schools.
Criteria: Users explain common practices and reasons for network disablement in schools.
Phrase: Explaining school network practices

30.
Concepts: explaining subject focus, highlighting educational tools
Relationship: Both concepts involve detailing the educational focus of the software.
Criteria: Designers explain the subject focus and highlight educational tools of the software.
Phrase: Highlighting educational focus

31.
Concepts: discussing educational context, discussing instructional design
Relationship: Both concepts involve discussing the educational use and design of the software.
Criteria: Users and designers discuss the educational context and instructional design of the software.
Phrase: Discussing educational design

32.
Concepts: school needs, describing institutional needs
Relationship: Both concepts involve describing the needs of educational institutions.
Criteria: Participants describe the needs and initiatives of their schools.
Phrase: Describing school needs

33.
Concepts: acknowledge user input, acknowledging information
Relationship: Both concepts involve recognizing user contributions.
Criteria: Users acknowledge the input and information provided by others.
Phrase: Acknowledging user contributions

34.
Concepts: express community appreciation, encouraging positivity and gratitude
Relationship: Both concepts involve fostering a positive community atmosphere.
Criteria: Designers and community members express appreciation and encourage positivity.
Phrase: Fostering community appreciation

35.
Concepts: apologize for interruption, apologizing and being polite
Relationship: Both concepts involve expressing politeness and apologies.
Criteria: Participants apologize for interruptions and express politeness.
Phrase: Apologizing for interruptions

36.
Concepts: requesting community input and help, engage community in design
Relationship: Both concepts involve seeking community involvement in the design process.
Criteria: Designers request community input and engage them in the design process.
Phrase: Engaging community in design

37.
Concepts: encouraging discussion, fostering open group communication, encouraging group discussions
Relationship: All concepts involve promoting open communication within the community.
Criteria: Designers and participants encourage open discussions and group communication.
Phrase: Promoting open discussion

38.
Concepts: resource acknowledgment, utilizing available resources
Relationship: Both concepts involve recognizing and using provided resources.
Criteria: Users acknowledge and utilize available resources within the group.
Phrase: Utilizing community resources

39.
Concepts: offering potential solutions, suggesting alternative solutions
Relationship: Both concepts involve proposing solutions to problems.
Criteria: Participants offer and suggest potential or alternative solutions.
Phrase: Proposing solutions

40.
Concepts: providing community answers, providing answers and information
Relationship: Both concepts involve responding to user questions with answers and information.
Criteria: Community members and designers provide answers and information to user questions.
Phrase: Answering user questions

41.
Concepts: explain situational context, provide contextual information
Relationship: Both concepts involve providing background information to clarify a situation.
Criteria: Users explain situations by providing relevant contextual information.
Phrase: Providing situational context

42.
Concepts: provide detailed responses, requesting specific feedback
Relationship: Both concepts involve detailed communication for clarity and feedback.
Criteria: Users provide detailed responses and request specific feedback.
Phrase: Requesting and providing detailed feedback

43.
Concepts: asking follow-up questions, gathering additional information
Relationship: Both concepts involve seeking further information for clarification.
Criteria: Users ask follow-up questions to gather additional information.
Phrase: Seeking further information

44.
Concepts: explaining design rationale, explain question intention
Relationship: Both concepts involve explaining the reasoning behind design decisions or questions.
Criteria: Designers and users explain the rationale behind design decisions and questions.
Phrase: Explaining design rationale

45.
Concepts: encouraging elaboration, justifying and explaining suggestions, elaborate on suggestions
Relationship: All concepts involve providing detailed explanations and justifications for suggestions.
Criteria: Users and designers elaborate on suggestions and justify their reasoning.
Phrase: Elaborating on suggestions

46.
Concepts: identifying usability issues, proposing usability improvements
Relationship: Both concepts involve recognizing and suggesting improvements for usability.
Criteria: Participants identify usability issues and propose improvements.
Phrase: Proposing usability improvements

47.
Concepts: invite feature requests, collaboration suggestions
Relationship: Both concepts involve seeking user input for new features and collaboration.
Criteria: Designers invite feature requests and suggestions for collaboration.
Phrase: Inviting feature suggestions

48.
Concepts: requesting technical help, seeking guidance and assistance
Relationship: Both concepts involve seeking help with technical aspects.
Criteria: Participants request technical help and seek guidance on platform use.
Phrase: Requesting technical assistance

49.
Concepts: request, requesting specific features
Relationship: Both concepts involve users expressing their needs for specific features.
Criteria: Users request specific features or functionalities for the software.
Phrase: Requesting specific features
---