You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (6 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
6. 
Concepts: {Repeat the input 6}
Relationship: {What is logical relationship between concepts in code 6, or N/A if not applicable}
Criteria: {Who did what, and how for code 6}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: share project updates, share development updates
- Designers share progress and project updates with users.
- Designers share development progress and plans with users.

2.
Concepts: inquire about user needs, soliciting user input and feedback
- Designers ask about user needs and requests.
- Designers solicit, prompt, and seek user input and feedback.

3.
Concepts: initiate dialogue, engaging in direct communication
- Designers initiate and engage in dialogue with users.
- Designers engage in direct, one-on-one communication with users.

4.
Concepts: offer solutions, problem-solving
- Designers and users offer solutions to problems.
- Users or designers attempt to solve a problem or provide a solution.

5.
Concepts: explain limitations, explaining purpose or limitations
- Designers explain technical limitations to users.
- Designer explains the purpose or limitations of a feature or version.

6.
Concepts: appreciate features, appreciating practicality
- Users appreciate and praise software features and design.
- Users appreciate and highlight software practicality.
===
Here are the definitions for each code:

---
1.
Concepts: share project updates, share development updates
Relationship: The two concepts are closely related as they both involve designers providing information about the project's progress to users.
Criteria: Designers provide users with information about project progress and development plans.
Phrase: Share project and development updates.

2.
Concepts: inquire about user needs, soliciting user input and feedback
Relationship: The two concepts are complementary, as inquiring about user needs is a way to solicit user input and feedback.
Criteria: Designers ask users about their needs and request their input and feedback.
Phrase: Solicit user input and feedback.

3.
Concepts: initiate dialogue, engaging in direct communication
Relationship: The two concepts are closely related, as initiating dialogue is a way to engage in direct communication with users.
Criteria: Designers start and engage in direct conversations with users.
Phrase: Engage in direct communication.

4.
Concepts: offer solutions, problem-solving
Relationship: The two concepts are complementary, as offering solutions is a way to engage in problem-solving.
Criteria: Designers and users work together to find solutions to problems.
Phrase: Offer solutions to problems.

5.
Concepts: explain limitations, explaining purpose or limitations
Relationship: The two concepts are closely related, as explaining limitations often involves explaining the purpose or limitations of a feature or version.
Criteria: Designers provide users with explanations for technical limitations or the purpose of a feature or version.
Phrase: Explain limitations and purposes.

6.
Concepts: appreciate features, appreciating practicality
Relationship: The two concepts are complementary, as appreciating features often involves appreciating their practicality.
Criteria: Users express gratitude and appreciation for software features and their practicality.
Phrase: Appreciate software features and practicality.