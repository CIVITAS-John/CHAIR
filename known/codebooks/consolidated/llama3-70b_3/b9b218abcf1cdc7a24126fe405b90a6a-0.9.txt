You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (16 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
16. 
Concepts: {Repeat the input 16}
Relationship: {What is logical relationship between concepts in code 16, or N/A if not applicable}
Criteria: {Who did what, and how for code 16}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: design intentions, explaining intentions
- Explaining the intention or goal behind a design decision or feature.
- Explaining the intention or purpose behind a question or feature.

2.
Concepts: explain design choice, clarifying design choices, explaining design rationale, explaining design decisions, promoting understanding of design decisions
- The designer explains the reasoning behind a design choice or feature.
- The designer clarifies or explains design choices or decisions.
- Designer explains design rationale or decisions.
- The designer explains the reasoning behind a design decision.
- The designer explains the reasoning or thought process behind a design decision.

3.
Concepts: explaining new features, explaining software features
- The designer explains or clarifies the development process or new features of the software.
- The designer explains the features and capabilities of the software.

4.
Concepts: providing explanation, clarifying functionality, explaining design functionality, explaining functionality
- The designer explains a concept, feature, or functionality.
- The designer explains or clarifies the functionality of a feature.
- Designer explains design functionality to facilitate understanding.
- A designer explains how a feature or component works.

5.
Concepts: providing explanations, explain development process
- The designer provides explanations for features, updates, or technical issues.
- A designer explains the development process or technical details of a feature.
- A user explains the context or reason for a particular need or requirement.

6.
Concepts: clarify technical aspect, explain technical details
- Designer clarifies technical aspects, concepts, or mechanisms to the user.
- Designer explains technical details, concepts, or mechanisms to the user.

7.
Concepts: providing technical insight, sharing technical knowledge
- The designer provides technical insight or explanation.
- The designer shares technical knowledge or explains a technical aspect of the system.

8.
Concepts: system compatibility theories, theorizing about compatibility
- Theorizes or speculates about system compatibility or technical issues.
- Theorizing or hypothesizing about the compatibility or functionality of a system.

9.
Concepts: discussing technical issues, acknowledging technical issues
- The speaker discusses the need to investigate or address technical issues, such as compatibility.
- The speaker acknowledges the need to investigate or address technical issues, such as compatibility.

10.
Concepts: setting technical requirements, consider technical requirements, identifying technical requirements
- A designer sets or clarifies technical requirements for the application.
- The designer considers or discusses technical requirements or constraints.
- Designer identifies a technical requirement for the software.

11.
Concepts: clarifying compatibility, compatibility issue explanation, clarifies platform compatibility, answering compatibility questions
- The designer clarifies compatibility issues or system requirements.
- The designer explains compatibility issues with the software or hardware.
- A designer clarifies compatibility or technical issues with the software.
- A designer answers a question about compatibility with a specific system or device.

12.
Concepts: confirming compatibility, providing technical assurance
- Designer confirms compatibility to ensure correct usage.
- The designer provides technical assurance by confirming the compatibility of a feature.

13.
Concepts: provide system compatibility information, suggesting checking compatibility of the system
- Designer provides information about the system's compatibility with different devices, operating systems, or configurations.
- The designer suggests or checks the compatibility of the system with different devices or platforms.

14.
Concepts: considers xp compatibility, considering system compatibility
- The designer considers or discusses compatibility with older systems, such as XP.
- The designer considers system compatibility for older systems.

15.
Concepts: technical limitations, explains limitations, explain limitation, discusses limitations, explaining current limitations of software
- Designer clarifies technical limitations of the software.
- Explains a technical constraint, such as network restrictions.
- Designer or user explains limitations or constraints of the software
- The designer explains the limitations or constraints of the software or a feature.
- Designer or user discusses limitations or constraints of the software or solution.
- The designer or developer explains the current limitations or constraints of the software.

16.
Concepts: highlighting constraints, revealing design constraints
- Highlighting limitations or constraints in the design or functionality.
- Highlighting constraints or limitations of a system or environment.
- A designer reveals design constraints or limitations.
===
Here are the definitions for each code:

---
1.
Concepts: design intentions, explaining intentions
Relationship: The concepts are related as the designer's intentions are being explained.
Criteria: The designer explains the intention or goal behind a design decision or feature.
Phrase: Explaining design intentions.

2.
Concepts: explain design choice, clarifying design choices, explaining design rationale, explaining design decisions, promoting understanding of design decisions
Relationship: The concepts are related as they all involve the designer providing reasons for their decisions.
Criteria: The designer explains the reasoning behind a design choice or feature to promote understanding.
Phrase: Explaining design choices.

3.
Concepts: explaining new features, explaining software features
Relationship: The concepts are related as they both involve the designer explaining the software.
Criteria: The designer explains new features, software features, or development processes.
Phrase: Explaining software features.

4.
Concepts: providing explanation, clarifying functionality, explaining design functionality, explaining functionality
Relationship: The concepts are related as they all involve the designer providing explanations.
Criteria: The designer explains a concept, feature, or functionality to facilitate understanding.
Phrase: Providing explanations.

5.
Concepts: providing explanations, explain development process
Relationship: The concepts are related as they both involve the designer providing explanations.
Criteria: The designer provides explanations for features, updates, or technical issues, or explains the development process.
Phrase: Providing explanations.

6.
Concepts: clarify technical aspect, explain technical details
Relationship: The concepts are related as they both involve the designer explaining technical aspects.
Criteria: The designer clarifies or explains technical aspects, concepts, or mechanisms to the user.
Phrase: Explaining technical aspects.

7.
Concepts: providing technical insight, sharing technical knowledge
Relationship: The concepts are related as they both involve the designer sharing their expertise.
Criteria: The designer provides technical insight or explanation, or shares technical knowledge or explains a technical aspect.
Phrase: Sharing technical knowledge.

8.
Concepts: system compatibility theories, theorizing about compatibility
Relationship: The concepts are related as they both involve speculation about system compatibility.
Criteria: The designer theorizes or speculates about system compatibility or technical issues.
Phrase: Theorizing about compatibility.

9.
Concepts: discussing technical issues, acknowledging technical issues
Relationship: The concepts are related as they both involve recognizing technical issues.
Criteria: The speaker discusses or acknowledges the need to investigate or address technical issues, such as compatibility.
Phrase: Discussing technical issues.

10.
Concepts: setting technical requirements, consider technical requirements, identifying technical requirements
Relationship: The concepts are related as they all involve the designer determining technical requirements.
Criteria: The designer sets, considers, or identifies technical requirements for the application.
Phrase: Setting technical requirements.

11.
Concepts: clarifying compatibility, compatibility issue explanation, clarifies platform compatibility, answering compatibility questions
Relationship: The concepts are related as they all involve clarifying compatibility.
Criteria: The designer clarifies compatibility issues, explains compatibility, or answers compatibility questions.
Phrase: Clarifying compatibility.

12.
Concepts: confirming compatibility, providing technical assurance
Relationship: The concepts are related as they both involve ensuring compatibility.
Criteria: The designer confirms compatibility to ensure correct usage, or provides technical assurance.
Phrase: Confirming compatibility.

13.
Concepts: provide system compatibility information, suggesting checking compatibility of the system
Relationship: The concepts are related as they both involve providing information about compatibility.
Criteria: The designer provides information about system compatibility or suggests checking compatibility.
Phrase: Providing compatibility information.

14.
Concepts: considers xp compatibility, considering system compatibility
Relationship: The concepts are related as they both involve considering compatibility with older systems.
Criteria: The designer considers compatibility with older systems, such as XP.
Phrase: Considering system compatibility.

15.
Concepts: technical limitations, explains limitations, explain limitation, discusses limitations, explaining current limitations of software
Relationship: The concepts are related as they all involve explaining limitations.
Criteria: The designer explains technical limitations, constraints, or limitations of the software.
Phrase: Explaining limitations.

16.
Concepts: highlighting constraints, revealing design constraints
Relationship: The concepts are related as they both involve highlighting limitations.
Criteria: The designer highlights limitations or constraints in the design or functionality.
Phrase: Highlighting constraints.