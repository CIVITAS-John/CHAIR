You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (16 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
16. 
Concepts: {Repeat the input 16}
Relationship: {What is logical relationship between concepts in code 16, or N/A if not applicable}
Criteria: {Who did what, and how for code 16}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: request user assistance, requesting usage support
- Users seek assistance with the software.
- Users request support materials or documentation to assist with using the software.

2.
Concepts: inquiring about update timelines, asking about recent and upcoming updates
- Users inquire about the timeline for upcoming updates or developments.
- Users ask about recent or upcoming updates.

3.
Concepts: context for need, providing context
- Users provide context or background information for their needs or requests.
- Users provide background information or context for their questions or concerns.

4.
Concepts: announcing new features, detailing upcoming updates
- Designers announce and preview new features and updates.
- Designers confirm and detail upcoming updates and new features.

5.
Concepts: inform about updates, notifying about updates
- Informing users about new updates or versions.
- Designers notify users about software updates and new versions.

6.
Concepts: sharing development updates, communicating progress updates
- Designers share detailed information about the development process and progress.
- Designers provide updates on the status of ongoing development work.

7.
Concepts: planning future updates, discussing future development plans
- Developers discuss plans and intentions for future updates.
- Designers discuss plans for future design and software development.

8.
Concepts: detailing feature examples, explaining feature functionality
- Designers provide detailed explanations and specific examples of features.
- Designers explain the functionality of specific features.

9.
Concepts: clarifying user requests, requesting design clarification
- Designers ask follow-up questions to clarify user requests or scenarios.
- Designers seek clarification on design details or user preferences.

10.
Concepts: complimenting the software, appreciate software features
- Users provide positive feedback or praise for the software.
- Users express appreciation for specific features of the software.

11.
Concepts: user reviews, commenting on usability
- Users provide reviews or opinions about the software, often highlighting its positive aspects.
- Users comment on the software's ease of use and usability.

12.
Concepts: confirming software compatibility, discussing software compatibility
- Designers discuss and confirm the software's compatibility with specific systems.
- Developers discuss and suggest checking the software's compatibility with different systems.

13.
Concepts: addressing usability, discussing design and usability
- Users and designers discuss the ease of use and user experience of the software.
- Designers discuss the design direction, features, and usability of the software.

14.
Concepts: appreciating user feedback, integrating user feedback
- Designers acknowledge and express appreciation for user feedback.
- Designers acknowledge and incorporate user feedback into the design process.

15.
Concepts: requesting and providing feedback, inviting feature requests and user input
- Users provide specific feedback, and developers request feedback or suggestions from users.
- Designers invite users to provide input and suggestions for future updates.

16.
Concepts: suggesting feature improvements, providing feedback and suggestions
- Users suggest new features or improvements to enhance the software.
- Users provide feedback and suggestions on the software's design and functionality.
===
---
Definitions for each code (16 in total):
1.
Concepts: request user assistance, requesting usage support
Relationship: Users seek help and resources for using the software.
Criteria: Users seek assistance and request support materials or documentation for using the software.
Phrase: Requesting user assistance

2.
Concepts: inquiring about update timelines, asking about recent and upcoming updates
Relationship: Users seek information about the timing of updates.
Criteria: Users inquire about the timeline and details of recent and upcoming updates.
Phrase: Inquiring about update timelines

3.
Concepts: context for need, providing context
Relationship: Users provide background information to clarify their needs.
Criteria: Users provide context or background information for their needs, requests, or concerns.
Phrase: Providing context for need

4.
Concepts: announcing new features, detailing upcoming updates
Relationship: Designers communicate new and upcoming features.
Criteria: Designers announce and detail new features and upcoming updates.
Phrase: Announcing new features

5.
Concepts: inform about updates, notifying about updates
Relationship: Designers keep users informed about software changes.
Criteria: Designers inform and notify users about new updates or versions.
Phrase: Informing about updates

6.
Concepts: sharing development updates, communicating progress updates
Relationship: Designers provide progress reports on development.
Criteria: Designers share detailed information and updates on the development process and progress.
Phrase: Sharing development updates

7.
Concepts: planning future updates, discussing future development plans
Relationship: Developers discuss their plans for future changes.
Criteria: Developers discuss and plan future updates and development.
Phrase: Planning future updates

8.
Concepts: detailing feature examples, explaining feature functionality
Relationship: Designers provide explanations and examples of features.
Criteria: Designers provide detailed explanations and examples of how features work.
Phrase: Detailing feature examples

9.
Concepts: clarifying user requests, requesting design clarification
Relationship: Designers seek to understand user needs better.
Criteria: Designers ask follow-up questions to clarify user requests or design details.
Phrase: Clarifying user requests

10.
Concepts: complimenting the software, appreciate software features
Relationship: Users provide positive feedback on the software.
Criteria: Users compliment and express appreciation for the software and its features.
Phrase: Complimenting the software

11.
Concepts: user reviews, commenting on usability
Relationship: Users share their opinions and experiences with the software.
Criteria: Users provide reviews and comments on the software's usability and ease of use.
Phrase: Providing user reviews

12.
Concepts: confirming software compatibility, discussing software compatibility
Relationship: Designers and developers ensure the software works with various systems.
Criteria: Designers and developers discuss and confirm the software's compatibility with different systems.
Phrase: Confirming software compatibility

13.
Concepts: addressing usability, discussing design and usability
Relationship: Users and designers discuss the user experience.
Criteria: Users and designers discuss the software's design, features, and ease of use.
Phrase: Addressing usability

14.
Concepts: appreciating user feedback, integrating user feedback
Relationship: Designers value and use user feedback in the design process.
Criteria: Designers acknowledge, appreciate, and integrate user feedback into the design process.
Phrase: Appreciating user feedback

15.
Concepts: requesting and providing feedback, inviting feature requests and user input
Relationship: Users and designers exchange feedback and suggestions.
Criteria: Users provide feedback, and designers invite suggestions for future updates.
Phrase: Requesting and providing feedback

16.
Concepts: suggesting feature improvements, providing feedback and suggestions
Relationship: Users offer ideas for enhancing the software.
Criteria: Users suggest new features or improvements and provide feedback on the software's design and functionality.
Phrase: Suggesting feature improvements
---