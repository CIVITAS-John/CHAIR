You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (44 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
44. 
Concepts: {Repeat the input 44}
Relationship: {What is logical relationship between concepts in code 44, or N/A if not applicable}
Criteria: {Who did what, and how for code 44}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: feature development, feature discussion
- Designers discuss ongoing or planned development of features.
- Discussions about the features and their implementations between designers.

2.
Concepts: promise future feature, promise to realize
- A commitment to implement a feature at a future date.
- Designers promise that a feature or update will be realized in the future.

3.
Concepts: development plan, share info about future development plan
- A designer shares information about the development plan and download links.
- A designer shares information about future development plans or directions.

4.
Concepts: future planning, future planning and development
- A designer discusses future planning or considerations.
- A designer discusses future plans or development goals.

5.
Concepts: update planning, future update timeline, future feature plans
- A designer talks about adding features in upcoming updates.
- A designer discusses the timeline and priorities for future updates.
- A designer discusses specific future features or improvements.

6.
Concepts: development goals, set development goal
- A designer outlines long-term development goals for the software.
- Designers set specific goals for software development.

7.
Concepts: decision-making, development prioritization
- A designer discusses prioritizing feature development.
- Instances where designers discuss the prioritization of different features or sections to be developed.

8.
Concepts: update schedule, development timeline, give a timeline of feature development, give a timeline, give a timeline for release
- A designer provides a timeline for an update.
- Designers provide timelines for development or updates.
- A designer gives a timeline for feature development.
- Designers provide timelines for future updates or features.
- A designer provides a timeline for the release of a feature or update.

9.
Concepts: usability discussion, discussing input methods
- A designer discusses usability features related to input methods.
- A designer discusses input methods and the need for a soft keyboard.

10.
Concepts: touch screen functionality, touch screen consideration
- Discussing the functionality of touch screens.
- Instances where touch screen considerations are discussed.

11.
Concepts: usability, describe usability features
- A designer discusses usability and design intentions.
- A designer describes usability features or design intentions.

12.
Concepts: explain focus areas, discussing subject focus
- A designer explains focus areas or priorities.
- A designer discusses the primary focus areas of the subject.

13.
Concepts: give examples of feature, describe planned feature
- A designer gives examples of planned features.
- A designer describes planned features in detail.

14.
Concepts: new feature, list upcoming features, explanation of upcoming features
- A designer discusses new features or updates.
- A designer lists upcoming features.
- A designer explains upcoming features or functionalities.

15.
Concepts: detail new features, detailing version features
- Designers detail new features and updates in the software.
- A designer details the features and updates in a new version.

16.
Concepts: feature introduction, explaining new features
- A designer introduces the functions of a new feature.
- A designer explains the introduction or optimization of new features to users.

17.
Concepts: provide technical details, explaining technical artifacts
- A designer provides technical details about a component.
- A designer explains technical artifacts or details.

18.
Concepts: provide information, feature explanation
- Designers provide information about the software or its features.
- Designers explain the features or functionalities of the software in detail.

19.
Concepts: component functionality, new component capabilities
- A designer describes the functionality of a specific component.
- A designer explains the capabilities of a new component in the software.

20.
Concepts: local export necessity, need for local export
- A designer notes the necessity of supporting local export functionality.
- A designer acknowledges the need for a feature that allows local export of data or files.

21.
Concepts: communicate long term benefits, long-term feature planning
- A designer communicates the long-term benefits of a feature.
- A designer discusses the long-term benefits or stability of a feature once implemented.

22.
Concepts: system compatibility, answer about compatibility
- A designer or user discusses the compatibility of the software with various operating systems.
- A user mentions the compatibility of the software with a specific operating system.
- Designers and users discuss compatibility with different operating systems.

23.
Concepts: consideration, compatibility considerations
- Designers discuss the need to ensure compatibility with older operating systems.
- Discussions about ensuring future compatibility with older operating systems.

24.
Concepts: confirm compatibility, system compatibility confirmation, compatibility assurance
- A designer confirms compatibility of the software.
- A designer confirms the compatibility of the software with a specific system.
- A designer assures users about the compatibility of the software.

25.
Concepts: checking system compatibility, suggesting system compatibility
- A designer mentions the potential need to check system compatibility.
- A designer suggests checking the compatibility of the system.

26.
Concepts: system requirements, inform about system compatibility
- A designer discusses system requirements or compatibility.
- A designer informs about system compatibility.

27.
Concepts: explaining complexity, task delay explanation
- A designer explains the complexity of a task and the time required to complete it.
- A designer explains why a task or feature is not yet completed, often due to complexity.

28.
Concepts: acknowledge limitations, recognize usability limitation
- Acknowledging the limitations or constraints of a feature or system.
- Designers acknowledge limitations in the software's usability.

29.
Concepts: explain current limitations, explain current version's limitation
- A designer outlines the current limitations or issues of a feature or version.
- A designer explains the current version's limitation.

30.
Concepts: talk about limitation of the solution, talk about why limitation is addressable
- A designer discusses limitations of a solution.
- A designer talks about why a limitation is addressable.

31.
Concepts: technical constraints
- Instances where technical limitations or requirements are discussed.
- Instances where limitations or constraints of the software are mentioned.

32.
Concepts: designer responsiveness
- Instances where designers respond to user queries or engage with user comments, indicating active communication between designers and users.
- Instances where designers respond to user inquiries, suggestions, or feedback.
- Instances where designers respond to user feedback or suggestions.
- Instances where designers acknowledge user feedback and discuss potential solutions or updates.
- Designers responding to user feedback and addressing their concerns or suggestions.
- Instances where designers respond to user queries or feedback, showing attentiveness to user needs.

33.
Concepts: collaborative problem solving
- Moments where designers and users work together to address issues.
- Collaborative efforts between users and designers to solve issues and improve the product.
- Instances where users and designers work together to address issues or improve the software.

34.
Concepts: role identification
- Instances where users or designers identify their roles, which can help understand the community structure and the roles within it.
- Instances where participants identify their roles or expertise, contributing to the problem-solving process.
- Identifying roles within the community, such as designers, teachers, or other users.

35.
Concepts: user engagement
- Instances where users actively participate in the conversation, showing interest or involvement in the community.
- Instances where users engage with designers through questions, feedback, or expressions of anticipation.
- Instances where users actively participate in the conversation, showing interest and involvement.

36.
Concepts: student engagement
- Users describe how the software engages students.
- A user describes how students reacted positively to using the software in a classroom setting.

37.
Concepts: engage with community
- Instances where members of the community actively participate in discussions, ask questions, or provide feedback.
- Instances where users or designers engage in discussions that foster community interaction and participation.
- Active participation and interaction among community members, including both users and designers.
- Efforts made by designers to actively involve and communicate with the user community.
- Instances where designers engage with and connect to the community.

38.
Concepts: user response
- Input and suggestions provided by users regarding the design and functionality of the product.
- Instances where users provide feedback or ask questions that influence the design process.
- Instances where users provide feedback or suggestions to improve the software.
- Instances where users provide suggestions or feedback on features and functionalities.
- Instances where users provide feedback or ask questions about the app's development and updates.
- Users provide feedback or suggestions regarding the software.
- (Duplicate of code 10; merged)

39.
Concepts: feature update
- Instances where designers announce new features, updates, or bug fixes based on user input.
- Information about new features and updates being added to the product.

40.
Concepts: resources sharing
- Instances where designers or users share resources, such as download links, development plans, or announcements.
- Information about where and how to access resources, files, or downloads related to Physics Lab.
- Instances where users or designers share files, images, or other resources with the community.

41.
Concepts: development update
- Information shared by designers about the current status, updates, and future plans for the Physics Lab software.
- Sharing information about upcoming development updates or releases.

42.
Concepts: user frustration
- A user expresses dissatisfaction with outdated technology.
- Users express frustration about issues related to the software or their systems.

43.
Concepts: promote participatory design
- Instances where the community contributes to the design and development of the Physics Lab by providing suggestions or feedback that influence the development process.
- Instances where designers seek or consider user input in the design and development process.
- Instances where users are invited to participate in the design process or provide input.
- Instances where users and designers collaboratively discuss features and usability, reflecting a user-centered design approach.
- The involvement of users in the design and development process, contributing their insights and needs.
- Encouragement by designers for users to contribute ideas, feedback, and suggestions for the development of Physics Lab.
- Active involvement of users in the design process to ensure the product meets their needs and preferences.
- The involvement of users in the design process to ensure the product meets their needs and preferences.
- Instances where users and designers collaboratively discuss or work on design improvements.

44.
Concepts: designer response
- Instances where designers respond to user feedback or suggestions.
- Instances where designers respond to user feedback or queries.
===
---
Definitions for each code (44 in total):
1.
Concepts: feature development, feature discussion
Relationship: N/A
Criteria: Designers discuss ongoing or planned feature development and its implementation.
Phrase: Discuss feature development

2.
Concepts: promise future feature, promise to realize
Relationship: N/A
Criteria: Designers commit to implementing a feature or update in the future.
Phrase: Promise future feature implementation

3.
Concepts: development plan, share info about future development plan
Relationship: N/A
Criteria: Designers share information about current and future development plans.
Phrase: Share development plans

4.
Concepts: future planning, future planning and development
Relationship: N/A
Criteria: Designers discuss future planning and development goals.
Phrase: Discuss future planning

5.
Concepts: update planning, future update timeline, future feature plans
Relationship: N/A
Criteria: Designers discuss plans, timelines, and priorities for future updates and features.
Phrase: Plan future updates

6.
Concepts: development goals, set development goal
Relationship: N/A
Criteria: Designers outline and set long-term development goals for the software.
Phrase: Set development goals

7.
Concepts: decision-making, development prioritization
Relationship: N/A
Criteria: Designers discuss prioritizing different features or sections to be developed.
Phrase: Prioritize feature development

8.
Concepts: update schedule, development timeline, give a timeline of feature development, give a timeline, give a timeline for release
Relationship: N/A
Criteria: Designers provide timelines for updates, feature development, and releases.
Phrase: Provide development timelines

9.
Concepts: usability discussion, discussing input methods
Relationship: N/A
Criteria: Designers discuss usability features related to input methods.
Phrase: Discuss usability features

10.
Concepts: touch screen functionality, touch screen consideration
Relationship: N/A
Criteria: Designers discuss the functionality and considerations of touch screens.
Phrase: Consider touch screen functionality

11.
Concepts: usability, describe usability features
Relationship: N/A
Criteria: Designers discuss and describe usability features and design intentions.
Phrase: Describe usability features

12.
Concepts: explain focus areas, discussing subject focus
Relationship: N/A
Criteria: Designers explain and discuss primary focus areas or priorities.
Phrase: Explain focus areas

13.
Concepts: give examples of feature, describe planned feature
Relationship: N/A
Criteria: Designers give examples and describe planned features in detail.
Phrase: Describe planned features

14.
Concepts: new feature, list upcoming features, explanation of upcoming features
Relationship: N/A
Criteria: Designers discuss, list, and explain upcoming features or updates.
Phrase: Explain upcoming features

15.
Concepts: detail new features, detailing version features
Relationship: N/A
Criteria: Designers detail new features and updates in the software.
Phrase: Detail new features

16.
Concepts: feature introduction, explaining new features
Relationship: N/A
Criteria: Designers introduce and explain the functions of new features.
Phrase: Introduce new features

17.
Concepts: provide technical details, explaining technical artifacts
Relationship: N/A
Criteria: Designers provide and explain technical details about components.
Phrase: Explain technical details

18.
Concepts: provide information, feature explanation
Relationship: N/A
Criteria: Designers provide information and explain the features or functionalities of the software.
Phrase: Provide feature information

19.
Concepts: component functionality, new component capabilities
Relationship: N/A
Criteria: Designers describe the functionality and capabilities of specific components.
Phrase: Describe component functionality

20.
Concepts: local export necessity, need for local export
Relationship: N/A
Criteria: Designers note the necessity and acknowledge the need for local export functionality.
Phrase: Acknowledge local export necessity

21.
Concepts: communicate long term benefits, long-term feature planning
Relationship: N/A
Criteria: Designers communicate and discuss the long-term benefits and planning of features.
Phrase: Discuss long-term benefits

22.
Concepts: system compatibility, answer about compatibility
Relationship: N/A
Criteria: Designers and users discuss the compatibility of the software with various operating systems.
Phrase: Discuss system compatibility

23.
Concepts: consideration, compatibility considerations
Relationship: N/A
Criteria: Designers discuss ensuring compatibility with older operating systems.
Phrase: Consider compatibility

24.
Concepts: confirm compatibility, system compatibility confirmation, compatibility assurance
Relationship: N/A
Criteria: Designers confirm and assure users about the compatibility of the software.
Phrase: Confirm system compatibility

25.
Concepts: checking system compatibility, suggesting system compatibility
Relationship: N/A
Criteria: Designers mention and suggest checking system compatibility.
Phrase: Suggest checking compatibility

26.
Concepts: system requirements, inform about system compatibility
Relationship: N/A
Criteria: Designers discuss system requirements and inform about system compatibility.
Phrase: Inform about system requirements

27.
Concepts: explaining complexity, task delay explanation
Relationship: N/A
Criteria: Designers explain the complexity of tasks and reasons for delays.
Phrase: Explain task complexity

28.
Concepts: acknowledge limitations, recognize usability limitation
Relationship: N/A
Criteria: Designers acknowledge limitations or constraints of a feature or system.
Phrase: Acknowledge limitations

29.
Concepts: explain current limitations, explain current version's limitation
Relationship: N/A
Criteria: Designers outline and explain the current limitations of a feature or version.
Phrase: Explain current limitations

30.
Concepts: talk about limitation of the solution, talk about why limitation is addressable
Relationship: N/A
Criteria: Designers discuss limitations of a solution and why they are addressable.
Phrase: Discuss solution limitations

31.
Concepts: technical constraints
Relationship: N/A
Criteria: Designers discuss technical limitations or requirements of the software.
Phrase: Discuss technical constraints

32.
Concepts: designer responsiveness
Relationship: N/A
Criteria: Designers respond to user queries, feedback, and suggestions, showing attentiveness to user needs.
Phrase: Respond to user feedback

33.
Concepts: collaborative problem solving
Relationship: N/A
Criteria: Designers and users work together to address issues and improve the software.
Phrase: Collaborate on problem solving

34.
Concepts: role identification
Relationship: N/A
Criteria: Users or designers identify their roles, contributing to the community structure and problem-solving process.
Phrase: Identify roles

35.
Concepts: user engagement
Relationship: N/A
Criteria: Users actively participate in conversations, showing interest and involvement in the community.
Phrase: Engage users

36.
Concepts: student engagement
Relationship: N/A
Criteria: Users describe how the software engages students and their positive reactions in a classroom setting.
Phrase: Describe student engagement

37.
Concepts: engage with community
Relationship: N/A
Criteria: Community members, including users and designers, actively participate in discussions and provide feedback.
Phrase: Engage with community

38.
Concepts: user response
Relationship: N/A
Criteria: Users provide feedback, suggestions, and questions that influence the design process.
Phrase: Provide user feedback

39.
Concepts: feature update
Relationship: N/A
Criteria: Designers announce new features, updates, or bug fixes based on user input.
Phrase: Announce feature updates

40.
Concepts: resources sharing
Relationship: N/A
Criteria: Designers or users share resources, such as download links, development plans, or announcements.
Phrase: Share resources

41.
Concepts: development update
Relationship: N/A
Criteria: Designers share information about the current status, updates, and future plans for the software.
Phrase: Provide development updates

42.
Concepts: user frustration
Relationship: N/A
Criteria: Users express dissatisfaction with issues related to the software or their systems.
Phrase: Express user frustration

43.
Concepts: promote participatory design
Relationship: N/A
Criteria: Designers encourage and involve users in the design and development process through feedback and suggestions.
Phrase: Promote participatory design

44.
Concepts: designer response
Relationship: N/A
Criteria: Designers respond to user feedback or queries.
Phrase: Respond to user queries
---