You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (19 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
19. {Repeat the input 19}
Relationship: {The logical relationship between concepts in input 19}
Criteria: {A sentence of consolidated criteria for code 19}
Label: {A consolidated label of code 19}
Category: {2-4 words for code 19}
---
~~~
1. content prioritization, development planning.
- Conversations on prioritizing specific sections of the platform for development.
- Discussions or decisions regarding planned features, capabilities, and prioritization of development tasks.

2. feature development, feature collaboration.
- Discussion of new features or updates to the platform.
- Interactions among group members regarding the design and implementation of new features.

3. update anticipation, anticipation and excitement.
- Users expressing anticipation for updates or reacting to the release schedule.
- Instances where users show excitement or anticipation for new updates or features.

4. changes in lab components, design updates.
- Announcements or discussions regarding updates to lab components.
- Discussions related to updates, changes, or improvements made to the Physics Lab software, as well as insights into the overall development process of the software.

5. software availability, pedagogical support.
- Discussions related to the availability and accessibility of the Physics Lab software, particularly the PC/interactive whiteboard version.
- Discussions that address the software's ability to support learning and educational activities, as well as the educational or pedagogical aspects of the Physics Lab software.

6. compatibility considerations, system compatibility issues.
- The designer's consideration of compatibility with different systems.
- Concerns about software compatibility across systems/versions or technical requirements.

7. platform features, platform clarification.
- References to specific features or capabilities of the platform being used.
- Seeking clarification or information about the platform's features or capabilities.

8. community influence and collaborative improvement, co-creation and community-driven experiment development.
- This code captures the community's active involvement and influence in the software's development, where their input and contributions lead to collaborative improvements.
- This code reflects the high degree of collaboration and co-creation between the designer and the community, where the community actively participates in the development and refinement of the software and its features.

9. user feature requests, experiment expansion.
- A user requesting or suggesting a new feature to be added to the software.
- Suggestions and requests for incorporating additional experiments or features into the software.

10. file sharing, resource sharing.
- Members sharing or requesting access to files or resources within the group.
- Instances where participants suggest or offer to share resources within the group.

11. requests for help, resource access and location.
- Instances where participants seek assistance, information, or specific resources from the community.
- Instances of providing or requesting access to resources, guidance, or information about the platform.

12. software download inquiries, download and installation guidance.
- A user asking about how to download or access a specific version of the software.
- Instances of users asking for or receiving instructions on how to download or install the software.

13. greetings and salutations, expressions of gratitude.
- Instances of community members greeting each other or the Designer.
- Instances where participants express appreciation, thanks, or support towards each other, the designers, or the community.

14. informal communication, emotional expression.
- Use of emojis or informal language in communication.
- Instances of expressing emotions through language, emojis, or non-text elements.

15. user background, educational background.
- References to users' professional or educational backgrounds that might influence their interaction with the app.
- Understanding participants' educational backgrounds and their impact on technology use.

16. role identification, professional identity influence.
- Users explicitly or implicitly identifying their roles or affiliations within the community.
- References to the participant's professional roles or identities that influence their interactions within the community.

17. technical assistance.
- Instances of technical help or guidance provided or received by designers or users, including instances involving the provision of help or the seeking of information regarding technical aspects or functionalities of the software.
- Instances of community members seeking information or clarification within the group.

18. platform updates and user-centered design.
- Designer's efforts to keep the community informed about platform updates and incorporate user feedback into the design process.
- Expressions of enthusiasm, support, or engagement from community members.

19. software development.
- Discussing the upcoming release of a new version of the software and its potential impact on user experience.
- Statements about new software versions, features, or updates.
===
Here is the output in the required format:

---
Categories:
* Platform Development
* Community Engagement
* User Support
* Design and Features
* Social Dynamics
* User Background

Definitions for each code:

1. content prioritization, development planning.
Relationship: Inclusion (content prioritization is a part of development planning)
Criteria: Discussions on prioritizing platform development tasks and features.
Label: Development Prioritization
Category: Platform Development

2. feature development, feature collaboration.
Relationship: Parallel (both concepts are related to feature development)
Criteria: Discussions on designing and implementing new platform features.
Label: Feature Development
Category: Platform Development

3. update anticipation, anticipation and excitement.
Relationship: Inclusion (update anticipation is a part of excitement)
Criteria: Expressions of anticipation or excitement for new updates or features.
Label: Update Anticipation
Category: Community Engagement

4. changes in lab components, design updates.
Relationship: Inclusion (changes in lab components are part of design updates)
Criteria: Discussions on updates to lab components and software development process.
Label: Design Updates
Category: Platform Development

5. software availability, pedagogical support.
Relationship: Parallel (both concepts are related to software support)
Criteria: Discussions on software availability and educational support.
Label: Software Support
Category: User Support

6. compatibility considerations, system compatibility issues.
Relationship: Inclusion (compatibility considerations include system compatibility issues)
Criteria: Concerns about software compatibility across systems or versions.
Label: Compatibility Issues
Category: Platform Development

7. platform features, platform clarification.
Relationship: Inclusion (platform features include clarification)
Criteria: References to specific platform features or capabilities.
Label: Platform Features
Category: Design and Features

8. community influence and collaborative improvement, co-creation and community-driven experiment development.
Relationship: Inclusion (community influence includes collaborative improvement)
Criteria: Community involvement in software development and refinement.
Label: Community Co-Creation
Category: Community Engagement

9. user feature requests, experiment expansion.
Relationship: Parallel (both concepts are related to feature requests)
Criteria: User suggestions for new features or experiment incorporation.
Label: Feature Requests
Category: Design and Features

10. file sharing, resource sharing.
Relationship: Inclusion (file sharing is a part of resource sharing)
Criteria: Sharing or requesting access to files or resources within the group.
Label: Resource Sharing
Category: User Support

11. requests for help, resource access and location.
Relationship: Inclusion (requests for help include resource access)
Criteria: Seeking assistance, information, or resources from the community.
Label: Help Requests
Category: User Support

12. software download inquiries, download and installation guidance.
Relationship: Inclusion (software download inquiries include guidance)
Criteria: Requests for instructions on downloading or installing the software.
Label: Download Guidance
Category: User Support

13. greetings and salutations, expressions of gratitude.
Relationship: Inclusion (greetings include expressions of gratitude)
Criteria: Instances of community members greeting each other or expressing appreciation.
Label: Social Expressions
Category: Social Dynamics

14. informal communication, emotional expression.
Relationship: Inclusion (informal communication includes emotional expression)
Criteria: Use of informal language or expressing emotions through language or emojis.
Label: Informal Communication
Category: Social Dynamics

15. user background, educational background.
Relationship: Inclusion (user background includes educational background)
Criteria: References to users' professional or educational backgrounds influencing their interaction with the app.
Label: User Background
Category: User Background

16. role identification, professional identity influence.
Relationship: Inclusion (role identification includes professional identity influence)
Criteria: Users identifying their roles or affiliations within the community.
Label: Role Identification
Category: User Background

17. technical assistance.
Relationship: Standalone concept
Criteria: Instances of technical help or guidance provided or received by designers or users.
Label: Technical Assistance
Category: User Support

18. platform updates and user-centered design.
Relationship: Inclusion (platform updates include user-centered design)
Criteria: Designer's efforts to keep the community informed about platform updates and incorporate user feedback.
Label: Platform Updates
Category: Platform Development

19. software development.
Relationship: Standalone concept
Criteria: Discussions on new software versions, features, or updates.
Label: Software Development
Category: Platform Development