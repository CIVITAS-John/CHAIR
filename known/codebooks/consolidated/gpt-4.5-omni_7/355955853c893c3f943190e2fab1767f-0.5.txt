You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (21 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
21. 
Concepts: {Repeat the input 21}
Relationship: {What is logical relationship between concepts in code 21, or N/A if not applicable}
Criteria: {Who did what, and how for code 21}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: discussing system compatibility, inquiring about platform compatibility
- A member discusses and provides information about the software's compatibility with various systems.
- A user inquires about the PC version and compatibility with different platforms.

2.
Concepts: addressing technical constraints, clarifying software focus and limitations
- Users or designers discuss technical constraints and explain system or platform limitations.
- A designer or participant explains the focus areas and limitations of the software or its features.

3.
Concepts: resolving user concerns, commit to providing solution
- A designer provides responses aimed at mitigating and resolving users' concerns or issues.
- A designer commits to providing a solution or assistance to a user.

4.
Concepts: explain intention of app design, explaining design principles and goals
- A designer explains the intention behind the app's design.
- The designer discusses the principles guiding the design and explains the usability features and goals.

5.
Concepts: sharing resources, sharing visual references
- Designers or users share resources, such as download links, development plans, or files.
- Designers or users share images or visual references within the community.

6.
Concepts: build rapport, welcoming and engaging
- A designer engages in casual conversation to build rapport with a user.
- A designer greets a user and shows engagement by acknowledging feedback.

7.
Concepts: following up on discussions, encouraging further questions
- A designer or user asks follow-up questions to clarify needs or issues and continues previous discussions.
- A designer invites users to ask more questions and provide more details or elaborate on their needs.

8.
Concepts: catering to user needs, acknowledging user needs
- A designer emphasizes the importance of meeting user needs in the design process.
- A designer acknowledges a user's experience and the need for specific features based on feedback.

9.
Concepts: encouraging feedback, inviting feature suggestions
- Designers encourage users to provide feedback and interact within the community.
- Designers invite community members to provide suggestions or collaborate on features.

10.
Concepts: providing update timelines, describing and announcing updates
- A member provides and discusses timelines for upcoming updates.
- A member describes the process or timeline for software updates and announces updates related to specific software components.

11.
Concepts: product iteration, announcing new version releases
- A designer announces the release of a new version or iteration of the product.
- A designer or member announces the release and details of new software versions or features.

12.
Concepts: promising future features, confirming future features
- A designer mentions or suggests the future addition of a feature and promises its implementation.
- Members list features that will be included in future updates and confirm their inclusion and implementation.

13.
Concepts: discussing development priorities, discussing future interests and project management
- A designer explains the current focus, provides feedback, and discusses development priorities for the project.
- A designer discusses further interests, potential future projects, and project management.

14.
Concepts: appreciating features, highlighting software practicality
- A user compliments the visual design or specific features of the software.
- Users highlight the practicality and express satisfaction with the software's usability.

15.
Concepts: provide detailed feedback, providing community feedback
- A user provides specific feedback or suggestions with justifications.
- A user responds to community comments and provides feedback to improve the product.

16.
Concepts: acknowledging help, acknowledging community support
- A participant acknowledges help received and expresses support and gratitude.
- A member expresses gratitude and acknowledges the community's support.

17.
Concepts: expressive, using non-verbal communication
- A user or designer expresses themselves using emojis or informal language.
- A user communicates and engages using emojis or other non-verbal forms.

18.
Concepts: apologizing for inconvenience, acknowledging timing inconvenience
- Designers or users apologize for disturbances and use polite language to acknowledge interruptions.
- A developer apologizes for the timing of a communication and acknowledges a potential inconvenience caused by their actions.

19.
Concepts: member identification, confirming professional identity
- Confirming or identifying the role of a community member.
- A user engages professionally and confirms their professional identity or role.

20.
Concepts: sharing teaching experiences, introducing teacher identity
- A user mentions their teaching role and shares related classroom experiences.
- A participant identifies themselves as a teacher and introduces their teaching role.

21.
Concepts: positive interaction, user interaction and gratitude
- Users engage in positive and supportive interactions.
- A participant interacts with others and shows gratitude.
===
---
Definitions for each code (21 in total):
1.
Concepts: discussing system compatibility, inquiring about platform compatibility
Relationship: Both involve communication about software compatibility with different systems and platforms.
Criteria: Members discuss and inquire about the software's compatibility with various systems and platforms.
Phrase: Discussing system compatibility

2.
Concepts: addressing technical constraints, clarifying software focus and limitations
Relationship: Both involve explaining technical limitations and the focus areas of the software.
Criteria: Users or designers address technical constraints and clarify the software's focus and limitations.
Phrase: Addressing technical constraints

3.
Concepts: resolving user concerns, commit to providing solution
Relationship: Both involve designers responding to user concerns and committing to solutions.
Criteria: Designers resolve user concerns and commit to providing solutions or assistance.
Phrase: Resolving user concerns

4.
Concepts: explain intention of app design, explaining design principles and goals
Relationship: Both involve designers explaining the intentions and principles behind the app's design.
Criteria: Designers explain the intention behind the app's design, including principles and goals.
Phrase: Explaining design intentions

5.
Concepts: sharing resources, sharing visual references
Relationship: Both involve sharing materials, whether resources or visual references, within the community.
Criteria: Designers or users share resources and visual references within the community.
Phrase: Sharing resources

6.
Concepts: build rapport, welcoming and engaging
Relationship: Both involve designers making efforts to build rapport and engage with users.
Criteria: Designers build rapport by welcoming and engaging with users.
Phrase: Building rapport

7.
Concepts: following up on discussions, encouraging further questions
Relationship: Both involve continuing discussions and encouraging further inquiries.
Criteria: Designers or users follow up on discussions and encourage further questions.
Phrase: Following up on discussions

8.
Concepts: catering to user needs, acknowledging user needs
Relationship: Both involve recognizing and addressing user needs in the design process.
Criteria: Designers cater to and acknowledge user needs based on feedback.
Phrase: Catering to user needs

9.
Concepts: encouraging feedback, inviting feature suggestions
Relationship: Both involve inviting users to provide feedback and suggest features.
Criteria: Designers encourage feedback and invite feature suggestions from the community.
Phrase: Encouraging feedback

10.
Concepts: providing update timelines, describing and announcing updates
Relationship: Both involve discussing and announcing timelines and details for software updates.
Criteria: Members provide and discuss update timelines and announce specific software updates.
Phrase: Providing update timelines

11.
Concepts: product iteration, announcing new version releases
Relationship: Both involve announcing new versions or iterations of the product.
Criteria: Designers or members announce new version releases and detail the updates.
Phrase: Announcing new versions

12.
Concepts: promising future features, confirming future features
Relationship: Both involve discussing and confirming the inclusion of future features.
Criteria: Designers promise and confirm the inclusion of future features in updates.
Phrase: Promising future features

13.
Concepts: discussing development priorities, discussing future interests and project management
Relationship: Both involve discussing current development priorities and future project interests.
Criteria: Designers discuss development priorities and future interests or project management.
Phrase: Discussing development priorities

14.
Concepts: appreciating features, highlighting software practicality
Relationship: Both involve users expressing appreciation for features and highlighting software practicality.
Criteria: Users appreciate features and highlight the software's practicality and usability.
Phrase: Appreciating features

15.
Concepts: provide detailed feedback, providing community feedback
Relationship: Both involve users providing detailed feedback and suggestions to the community.
Criteria: Users provide detailed feedback and respond to community comments for product improvement.
Phrase: Providing detailed feedback

16.
Concepts: acknowledging help, acknowledging community support
Relationship: Both involve expressing gratitude for help and support from the community.
Criteria: Participants acknowledge help and express gratitude for community support.
Phrase: Acknowledging help

17.
Concepts: expressive, using non-verbal communication
Relationship: Both involve using non-verbal forms of communication, such as emojis.
Criteria: Users or designers express themselves using non-verbal communication like emojis.
Phrase: Using non-verbal communication

18.
Concepts: apologizing for inconvenience, acknowledging timing inconvenience
Relationship: Both involve apologizing and acknowledging potential inconveniences caused by timing.
Criteria: Designers or users apologize for inconveniences and acknowledge timing issues.
Phrase: Apologizing for inconvenience

19.
Concepts: member identification, confirming professional identity
Relationship: Both involve confirming the identity or professional role of community members.
Criteria: Members confirm their professional identity or role within the community.
Phrase: Confirming professional identity

20.
Concepts: sharing teaching experiences, introducing teacher identity
Relationship: Both involve participants sharing their teaching experiences and identifying as teachers.
Criteria: Participants share teaching experiences and identify themselves as teachers.
Phrase: Sharing teaching experiences

21.
Concepts: positive interaction, user interaction and gratitude
Relationship: Both involve users interacting positively and expressing gratitude.
Criteria: Participants engage in positive interactions and show gratitude to others.
Phrase: Engaging in positive interactions
---