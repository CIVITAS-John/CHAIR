You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (5 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
5. 
Concepts: {Repeat the input 5}
Relationship: {What is logical relationship between concepts in code 5, or N/A if not applicable}
Criteria: {Who did what, and how for code 5}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: advocating for debugging practice, emphasizing human effort in debugging
- Participants advocate for debugging practice and emphasize its importance.
- Participants emphasize human effort and user expertise in debugging.

2.
Concepts: evaluating ai-generated code, evaluating code quality and conducting thorough code reviews
- Participants read, evaluate, and critically evaluate AI-generated code in detail.
- Participants evaluate code quality and demonstrate thorough code review.

3.
Concepts: seeks ai assistance, help-seeking behavior
- Participants seek AI assistance with coding tasks.
- Participant seeks help from others or AI for coding issues.

4.
Concepts: demonstrating coding independence, corrects code independently
- The participant demonstrates coding independence and self-sufficiency.
- Participants correct code independently and engage in independent problem-solving with AI assistance.

5.
Concepts: exercises self-reliance, demonstrates proactive problem-solving
- Participants exercise self-reliance and engage in self-directed debugging.
- Participants demonstrate self-reliance and proactive problem-solving skills.
===
Here are the definitions for each code:

---
1.
Concepts: advocating for debugging practice, emphasizing human effort in debugging
Relationship: The concepts are interrelated, as advocating for debugging practice implies emphasizing human effort in debugging.
Criteria: Participants value and stress the importance of human involvement in debugging processes.
Phrase: Emphasizing human effort in debugging.

2.
Concepts: evaluating ai-generated code, evaluating code quality and conducting thorough code reviews
Relationship: The concepts are sequential, as evaluating AI-generated code leads to evaluating code quality and conducting thorough code reviews.
Criteria: Participants critically assess AI-generated code to ensure its quality and accuracy.
Phrase: Evaluating AI-generated code quality.

3.
Concepts: seeks ai assistance, help-seeking behavior
Relationship: The concepts are synonymous, as seeking AI assistance is a form of help-seeking behavior.
Criteria: Participants request or seek support from AI or others to overcome coding challenges.
Phrase: Seeking AI assistance.

4.
Concepts: demonstrating coding independence, corrects code independently
Relationship: The concepts are interrelated, as demonstrating coding independence involves correcting code independently.
Criteria: Participants work independently to resolve coding issues, with or without AI assistance.
Phrase: Correcting code independently.

5.
Concepts: exercises self-reliance, demonstrates proactive problem-solving
Relationship: The concepts are synonymous, as exercising self-reliance involves demonstrating proactive problem-solving skills.
Criteria: Participants take initiative to identify and resolve coding issues without relying on others or AI.
Phrase: Exercising self-reliance in problem-solving.