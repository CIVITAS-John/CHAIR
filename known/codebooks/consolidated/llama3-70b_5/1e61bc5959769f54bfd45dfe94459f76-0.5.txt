You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (15 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
15. 
Concepts: {Repeat the input 15}
Relationship: {What is logical relationship between concepts in code 15, or N/A if not applicable}
Criteria: {Who did what, and how for code 15}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: guiding users, directing and assisting users
- The designer guides or instructs users on how to use the Physics Lab.
- A designer provides direction and offers assistance to users.

2.
Concepts: fosters friendly atmosphere, establishing a friendly tone and setting a warm tone
- User or designer contributes to a positive and friendly atmosphere.
- Users and designers establish a friendly tone and set a warm tone.

3.
Concepts: plans onboarding and considers user feedback, planning user engagement and future engagement
- Designer plans onboarding and considers user feedback.
- A designer plans user engagement and future engagement.

4.
Concepts: educating users, explaining development process
- A designer educates users about software features or concepts.
- A user or designer explains the development process or technical aspects of the software.

5.
Concepts: develops software features, planning for improvements
- Designer develops and discusses software features.
- A designer plans or discusses improvements or changes to the software.

6.
Concepts: reiterating concept, reinforcing design ideas
- Designer reiterates or repeats a concept or idea.
- A designer reinforces or supports design ideas or statements.

7.
Concepts: justifying decisions, confirming design choice
- A designer explains or justifies design decisions.
- Confirming or justifying a design choice

8.
Concepts: seeking expansion, requesting new features
- Users express interest in expanding the software's capabilities or features.
- Users suggest or request new features for the software.

9.
Concepts: seeking validation, validating user input
- The designer seeks confirmation or validation from the user.
- Validating or confirming a user's request or suggestion

10.
Concepts: seeks technical assistance, offers technical support
- A user or designer asks for help or technical assistance, or seeks assistance with platform features or functionality.
- A user or designer responds to a user's request or question, or offers technical support or assistance to users in the online community.

11.
Concepts: shares knowledge or expertise, acknowledging community expertise
- A user or designer shares knowledge or expertise with others in the online community.
- The designer acknowledges or seeks expertise from the online community on a specific topic.

12.
Concepts: community aspect suggestion, contributing to development discussions
- The conversation suggests a strong community aspect to the software's development.
- Users offer advice or contribute to discussions on the software's development.

13.
Concepts: asking for update, seeking updates
- Users ask about updates or changes to the online community.
- Users request or show interest in development updates and release information.

14.
Concepts: maintaining interaction, building rapport with the community
- Friendly or casual interactions that aim to maintain community interaction.
- Friendly or casual interactions that aim to build rapport with the community.

15.
Concepts: explaining software limitations
- A user or designer explains technical or design constraints and limitations of the software or a feature, or mentions technical challenges or limitations and highlights software or environmental limitations.
- Users explain school policies and highlight infrastructure limitations.
===
Here are the definitions for each code:

---
1.
Concepts: guiding users, directing and assisting users
Relationship: The concepts are related as they both describe the designer's supportive role in helping users navigate the Physics Lab.
Criteria: The designer provides guidance, direction, and assistance to users on how to use the Physics Lab.
Phrase: Provides guidance and support.

2.
Concepts: fosters friendly atmosphere, establishing a friendly tone and setting a warm tone
Relationship: The concepts are related as they both describe the creation of a positive and welcoming environment.
Criteria: Users and designers contribute to a friendly and warm atmosphere in the online community.
Phrase: Fosters a friendly atmosphere.

3.
Concepts: plans onboarding and considers user feedback, planning user engagement and future engagement
Relationship: The concepts are related as they both describe the designer's planning and consideration of user needs.
Criteria: The designer plans onboarding, considers user feedback, and plans user engagement and future development.
Phrase: Plans user engagement.

4.
Concepts: educating users, explaining development process
Relationship: The concepts are related as they both describe the sharing of knowledge and information.
Criteria: Users and designers educate each other about software features, concepts, and development processes.
Phrase: Educates users.

5.
Concepts: develops software features, planning for improvements
Relationship: The concepts are related as they both describe the designer's role in creating and improving software features.
Criteria: The designer develops and plans improvements to software features.
Phrase: Develops software features.

6.
Concepts: reiterating concept, reinforcing design ideas
Relationship: The concepts are related as they both describe the designer's efforts to clarify and support design decisions.
Criteria: The designer reiterates and reinforces design concepts and ideas.
Phrase: Reinforces design ideas.

7.
Concepts: justifying decisions, confirming design choice
Relationship: The concepts are related as they both describe the designer's explanation and validation of design decisions.
Criteria: The designer justifies and confirms design decisions and choices.
Phrase: Justifies design decisions.

8.
Concepts: seeking expansion, requesting new features
Relationship: The concepts are related as they both describe users' desires for more features and capabilities.
Criteria: Users express interest in and request new features and capabilities for the software.
Phrase: Requests new features.

9.
Concepts: seeking validation, validating user input
Relationship: The concepts are related as they both describe the seeking and provision of confirmation and approval.
Criteria: The designer seeks and provides validation of user input and requests.
Phrase: Seeks validation.

10.
Concepts: seeks technical assistance, offers technical support
Relationship: The concepts are related as they both describe the exchange of technical help and guidance.
Criteria: Users and designers seek and offer technical assistance and support.
Phrase: Offers technical support.

11.
Concepts: shares knowledge or expertise, acknowledging community expertise
Relationship: The concepts are related as they both describe the sharing and recognition of knowledge and expertise.
Criteria: Users and designers share knowledge and expertise, and acknowledge community expertise.
Phrase: Shares knowledge.

12.
Concepts: community aspect suggestion, contributing to development discussions
Relationship: The concepts are related as they both describe the community's involvement in software development.
Criteria: Users contribute to development discussions and suggest community aspects for the software.
Phrase: Contributes to development discussions.

13.
Concepts: asking for update, seeking updates
Relationship: The concepts are related as they both describe users' interests in staying informed about software development.
Criteria: Users ask for and seek updates on software development and changes.
Phrase: Seeks updates.

14.
Concepts: maintaining interaction, building rapport with the community
Relationship: The concepts are related as they both describe the efforts to build and maintain relationships within the community.
Criteria: Friendly interactions aim to maintain community interaction and build rapport with the community.
Phrase: Builds rapport.

15.
Concepts: explaining software limitations
Relationship: The concepts are related as they both describe the explanation of technical or design constraints.
Criteria: Users and designers explain software limitations, technical challenges, and environmental constraints.
Phrase: Explains software limitations.