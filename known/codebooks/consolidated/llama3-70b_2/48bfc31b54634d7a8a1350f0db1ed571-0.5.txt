You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: reiterating concept, reiterating feature explanation
- Explaining or reiterating a concept, idea, or functionality
- Reiterating or clarifying explanations of software features

2.
Concepts: providing examples, visual example provision
- Providing examples or illustrations to clarify or explain a concept.
- Providing visual examples or illustrations to clarify or explain a concept.

3.
Concepts: sharing best practices, suggesting best practices
- A user shares advice or best practices for using the software.
- A user suggests a best practice or approach for using an application or feature.

4.
Concepts: advising on development strategy, suggesting development strategy
- Providing guidance on development strategy
- Providing advice or guidance on development strategy or approach.

5.
Concepts: advising incremental development, advising on incremental refinement
- User advises incremental development or refinement.
- A user advises on incremental categorization and refinement of features.

6.
Concepts: promoting refinement, promoting categorization and refinement
- User advises to refine and categorize content step-by-step.
- Promoting or suggesting categorization and refinement of features or content.

7.
Concepts: explaining classroom limitations, elaborating on classroom technology limitations
- User explains limitations in the classroom setting.
- Mentioning limitations or restrictions in classroom technology

8.
Concepts: explaining school policy, explaining common school policy
- User explains school policies or restrictions.
- A user explains a common school policy or practice related to technology use.

9.
Concepts: describing technical context, describing current system, describing technical infrastructure
- User describes their school's computer system.
- A user describes the current computer system or infrastructure at their school.
- User describes an old computer system used by teachers at their school.

10.
Concepts: highlighting software benefits, highlighting practical applications
- Users highlight the benefits or advantages of the Physics Lab software.
- Users highlight the practical applications or benefits of the software.

11.
Concepts: highlighting usability, highlighting user engagement
- A user highlights the usability of the software.
- User highlights the software's engagement or interactive features.

12.
Concepts: appreciation of 3d effect, complimenting 3d effect
- User appreciates the software's 3D effect.
- A user compliments or praises the 3D effect of the software.

13.
Concepts: praising simulation, praising simulation effect
- A user praises the simulation effect or quality of the software.
- A user praises or comments on the software's simulation effect in a teaching setting.

14.
Concepts: sharing classroom experience, illustrating classroom success
- User shares their experience using the software in a classroom setting.
- A user shares a positive experience of using the software in a classroom setting.

15.
Concepts: compliment, praising software feature, software admiration, expressing appreciation for software feature, compliments the software, praising software features
- A user expresses praise, appreciation, or admiration for the software or its features.
- A user compliments or praises a feature or aspect of the software.
- Expressing admiration for software features.
- A user expresses appreciation or admiration for a specific software feature or functionality.
- User praises or compliments the software.
- Users express praise or appreciation for the software's features.

16.
Concepts: positive feedback, sharing positive user experience, sharing positive experience, highlighting software effectiveness
- Users share positive feedback about the software.
- A user expresses a positive opinion about the software.
- Expressing praise or positive feedback about software or features.
- Users share their positive experiences with the software, highlighting its effectiveness in a specific context.
- User shares a positive experience with the software.
- Users express positive feedback about the software's effectiveness or performance.

17.
Concepts: expressing positivity, expressing optimism
- A user expresses a positive sentiment or emotion towards the software.
- The user expresses positive emotions or optimism about the software or its development.

18.
Concepts: expressing positive feedback, expressing positive sentiment
- A user expresses positive feedback or appreciation for an application or feature.
- A user expresses positive sentiment or enthusiasm about new features or updates.

19.
Concepts: highlighting practicality, praising software practicality, praising software usability, praising practicality
- User praises the practicality of the software.
- User expresses appreciation for the software's practicality and usefulness.
- Praising the software for its practicality and user-friendliness.
- A user praises the practicality or usability of the software compared to others.

20.
Concepts: appreciating practicality, appreciation for software practicality
- A user or designer appreciates the practicality of the software.
- Expressing appreciation for the software's practicality and continuous improvement

21.
Concepts: appreciating aesthetics, appreciating software aesthetics
- A user appreciates the aesthetic appeal of an application or feature.
- Appreciating software aesthetics or design

22.
Concepts: appreciating design, complimenting design, praising software design
- A user expresses a positive opinion about the design.
- User compliments the design or visual aspects of the software.
- User expresses praise or admiration for the software design or functionality.

23.
Concepts: appreciating dedication, appreciating effort
- A user appreciates dedication to the software.
- User expresses appreciation for the designer's effort or dedication to the software's development.

24.
Concepts: user reviews, sharing opinions, sharing user experience, sharing experiences
- Sharing personal experiences or opinions about software or features.
- User shares their opinions or thoughts about the software, often providing feedback.
- Sharing personal experiences or opinions about the software
- User shares a personal experience or opinion about the software.

25.
Concepts: user feedback, providing feedback, providing user feedback, provide specific feedback
- Sharing opinions, experiences, or suggestions about the software
- Users provide feedback or opinions about the software's features or usability.
- The designer responds to user feedback or provides feedback to a user.
- Providing feedback on software features or functionality
- Requests or encourages users to provide feedback on the development process.
- User provides specific feedback or suggestions for the software.

26.
Concepts: comparison to similar apps, comparing to other applications, comparing to other software
- User compares the software to similar apps or alternatives.
- A user compares the software to other applications.
- A user compares the software to other similar software.

27.
Concepts: evaluating software effectiveness, providing feedback on software effectiveness
- A user evaluates or comments on the effectiveness of the software.
- User provides feedback on the software's effectiveness.

28.
Concepts: evaluating usability, evaluating software usability
- User evaluates the usability or practicality of the software.
- Users evaluate or comment on the usability or practicality of the Physics Lab software.

29.
Concepts: inquiring about download, inquiring about download process
- A user inquires about how to download the software or application.
- A user inquires about the download process or procedure.
- A user inquires about the process of downloading or accessing a feature.

30.
Concepts: download guidance request, download instruction request
- Seeking guidance on downloading software.
- Seeking software download instructions.

31.
Concepts: download inquiries, inquiring about resources
- Inquiries about downloading specific versions of the software are made.
- User inquires about resources or where to download specific versions of the software.

32.
Concepts: need for documentation, emphasizing documentation
- A user explains the need for a user manual or documentation.
- User emphasizes the importance of documentation or user manuals.
===
Here are the definitions for each code:

---
1.
Concepts: reiterating concept, reiterating feature explanation
Relationship: The concepts are related as they both involve re-explaining or reiterating information to ensure understanding.
Criteria: A user reiterates or clarifies explanations of software features or concepts to ensure understanding.
Phrase: Reiterating explanations.

2.
Concepts: providing examples, visual example provision
Relationship: The concepts are related as they both involve providing illustrations to facilitate understanding.
Criteria: A user provides examples or illustrations to clarify or explain a concept or software feature.
Phrase: Providing examples.

3.
Concepts: sharing best practices, suggesting best practices
Relationship: The concepts are related as they both involve sharing advice or guidance on using the software.
Criteria: A user shares or suggests best practices for using the software or its features.
Phrase: Sharing best practices.

4.
Concepts: advising on development strategy, suggesting development strategy
Relationship: The concepts are related as they both involve providing guidance on development approach.
Criteria: A user provides guidance or advice on development strategy or approach.
Phrase: Advising on development strategy.

5.
Concepts: advising incremental development, advising on incremental refinement
Relationship: The concepts are related as they both involve advising on a step-by-step approach to development or refinement.
Criteria: A user advises on incremental development or refinement of features or content.
Phrase: Advising on incremental development.

6.
Concepts: promoting refinement, promoting categorization and refinement
Relationship: The concepts are related as they both involve promoting a step-by-step approach to refinement or categorization.
Criteria: A user promotes or suggests categorization and refinement of features or content.
Phrase: Promoting refinement.

7.
Concepts: explaining classroom limitations, elaborating on classroom technology limitations
Relationship: The concepts are related as they both involve explaining limitations in the classroom setting.
Criteria: A user explains limitations or restrictions in the classroom setting or technology use.
Phrase: Explaining classroom limitations.

8.
Concepts: explaining school policy, explaining common school policy
Relationship: The concepts are related as they both involve explaining policies or practices related to technology use.
Criteria: A user explains school policies or common practices related to technology use.
Phrase: Explaining school policy.

9.
Concepts: describing technical context, describing current system, describing technical infrastructure
Relationship: The concepts are related as they all involve describing the technical environment or infrastructure.
Criteria: A user describes their school's computer system, current technical infrastructure, or technical context.
Phrase: Describing technical context.

10.
Concepts: highlighting software benefits, highlighting practical applications
Relationship: The concepts are related as they both involve highlighting the advantages or usefulness of the software.
Criteria: A user highlights the benefits, advantages, or practical applications of the Physics Lab software.
Phrase: Highlighting software benefits.

11.
Concepts: highlighting usability, highlighting user engagement
Relationship: The concepts are related as they both involve highlighting aspects of the software that facilitate user interaction.
Criteria: A user highlights the usability or engagement features of the software.
Phrase: Highlighting usability.

12.
Concepts: appreciation of 3d effect, complimenting 3d effect
Relationship: The concepts are related as they both involve expressing positive sentiments towards the 3D effect.
Criteria: A user appreciates or compliments the 3D effect of the software.
Phrase: Appreciating 3D effect.

13.
Concepts: praising simulation, praising simulation effect
Relationship: The concepts are related as they both involve expressing positive sentiments towards the simulation effect.
Criteria: A user praises or comments on the simulation effect or quality of the software.
Phrase: Praising simulation.

14.
Concepts: sharing classroom experience, illustrating classroom success
Relationship: The concepts are related as they both involve sharing positive experiences of using the software in a classroom setting.
Criteria: A user shares their experience using the software in a classroom setting, highlighting its effectiveness.
Phrase: Sharing classroom experience.

15.
Concepts: compliment, praising software feature, software admiration, expressing appreciation for software feature, compliments the software, praising software features
Relationship: The concepts are related as they all involve expressing positive sentiments towards the software or its features.
Criteria: A user expresses praise, appreciation, or admiration for the software or its features.
Phrase: Expressing software admiration.

16.
Concepts: positive feedback, sharing positive user experience, sharing positive experience, highlighting software effectiveness
Relationship: The concepts are related as they all involve sharing positive opinions or experiences about the software.
Criteria: A user shares positive feedback, experiences, or opinions about the software, highlighting its effectiveness.
Phrase: Sharing positive feedback.

17.
Concepts: expressing positivity, expressing optimism
Relationship: The concepts are related as they both involve expressing positive emotions or sentiments towards the software.
Criteria: A user expresses a positive sentiment or emotion towards the software or its development.
Phrase: Expressing positivity.

18.
Concepts: expressing positive feedback, expressing positive sentiment
Relationship: The concepts are related as they both involve expressing positive opinions or emotions about the software.
Criteria: A user expresses positive feedback or appreciation for an application or feature.
Phrase: Expressing positive feedback.

19.
Concepts: highlighting practicality, praising software practicality, praising software usability, praising practicality
Relationship: The concepts are related as they all involve highlighting the practical usefulness of the software.
Criteria: A user praises the practicality or usability of the software compared to others.
Phrase: Highlighting practicality.

20.
Concepts: appreciating practicality, appreciation for software practicality
Relationship: The concepts are related as they both involve expressing appreciation for the software's practicality.
Criteria: A user or designer appreciates the practicality of the software and its continuous improvement.
Phrase: Appreciating practicality.

21.
Concepts: appreciating aesthetics, appreciating software aesthetics
Relationship: The concepts are related as they both involve appreciating the visual appeal of the software.
Criteria: A user appreciates the aesthetic appeal of an application or feature.
Phrase: Appreciating aesthetics.

22.
Concepts: appreciating design, complimenting design, praising software design
Relationship: The concepts are related as they all involve expressing positive opinions about the design.
Criteria: A user expresses a positive opinion about the design or visual aspects of the software.
Phrase: Appreciating design.

23.
Concepts: appreciating dedication, appreciating effort
Relationship: The concepts are related as they both involve expressing appreciation for the designer's work.
Criteria: A user appreciates dedication to the software or the designer's effort.
Phrase: Appreciating dedication.

24.
Concepts: user reviews, sharing opinions, sharing user experience, sharing experiences
Relationship: The concepts are related as they all involve sharing personal opinions or experiences about the software.
Criteria: A user shares their opinions, experiences, or thoughts about the software, often providing feedback.
Phrase: Sharing user reviews.

25.
Concepts: user feedback, providing feedback, providing user feedback, provide specific feedback
Relationship: The concepts are related as they all involve providing opinions or suggestions about the software.
Criteria: A user provides feedback, opinions, or suggestions about the software's features or usability.
Phrase: Providing user feedback.

26.
Concepts: comparison to similar apps, comparing to other applications, comparing to other software
Relationship: The concepts are related as they all involve comparing the software to alternatives.
Criteria: A user compares the software to similar apps, applications, or software.
Phrase: Comparing to similar apps.

27.
Concepts: evaluating software effectiveness, providing feedback on software effectiveness
Relationship: The concepts are related as they both involve commenting on the software's effectiveness.
Criteria: A user evaluates or comments on the effectiveness of the software.
Phrase: Evaluating software effectiveness.

28.
Concepts: evaluating usability, evaluating software usability
Relationship: The concepts are related as they both involve commenting on the software's usability.
Criteria: A user evaluates or comments on the usability or practicality of the Physics Lab software.
Phrase: Evaluating usability.

29.
Concepts: inquiring about download, inquiring about download process
Relationship: The concepts are related as they both involve inquiring about the process of accessing the software.
Criteria: A user inquires about how to download the software or application.
Phrase: Inquiring about download.

30.
Concepts: download guidance request, download instruction request
Relationship: The concepts are related as they both involve seeking guidance on accessing the software.
Criteria: A user seeks guidance on downloading software or instructions.
Phrase: Requesting download guidance.

31.
Concepts: download inquiries, inquiring about resources
Relationship: The concepts are related as they both involve inquiring about accessing specific versions of the software.
Criteria: A user inquires about resources or where to download specific versions of the software.
Phrase: Inquiring about download resources.

32.
Concepts: need for documentation, emphasizing documentation
Relationship: The concepts are related as they both involve highlighting the importance of documentation.
Criteria: A user explains the need for a user manual or documentation.
Phrase: Emphasizing documentation.