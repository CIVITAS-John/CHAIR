You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (61 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
61. 
Concepts: {Repeat the input 61}
Relationship: {What is logical relationship between concepts in code 61, or N/A if not applicable}
Criteria: {Who did what, and how for code 61}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: internet availability inquiry, inquire about classroom conditions
- Inquiring about internet availability in a classroom setting.
- A team member inquires about the internet conditions in a classroom.

2.
Concepts: teaching background, introduce teacher identity with grade-level and number of years
- A user shares their teaching background, including levels taught.
- A user introduces their teaching experience, including grade levels and years of experience.

3.
Concepts: teaching experience, share teaching experience
- User shares their teaching experience and background.
- A user shares their teaching experience.

4.
Concepts: user background, provide background information
- Information provided by users about their professional or personal background, which helps in understanding the community's composition.
- A user provides personal background information relevant to the community.

5.
Concepts: identity inquiry, question about identity
- A team member asks about the professional role or background of a user.
- Inquiring about someone's professional background or role.

6.
Concepts: teacher identity, confirming teacher identity
- A designer inquires about a user's teaching background.
- A designer asks about a user's professional background, specifically teaching.

7.
Concepts: compliment on 3d effect, compliment software's 3d effect
- Complimenting the 3D effect of the software.
- A user compliments the software's 3D effects.

8.
Concepts: express approval, positive feedback, software compliment, share positive feedback, praise software
- Users express approval or positive feedback about the software.
- Users provide positive feedback or praise about the software.
- Users expressing positive feedback about the software.
- A user shares positive feedback about the software.
- User provides positive feedback or compliments about the software's usefulness or performance.

9.
Concepts: feature appreciation, appreciation of features
- Users express appreciation for specific features or aspects of the software.
- Users express appreciation for specific features or aspects of the application.

10.
Concepts: comparison to similar apps, compare with other applications
- A user compares the software favorably to similar applications.
- Comparing the software favorably with other applications.

11.
Concepts: comparative feedback, compare with other software
- Users provide feedback by comparing the current software with other software.
- Users compare the software favorably or unfavorably to other software, highlighting differences.

12.
Concepts: illustrate classroom success, describe students' positive responses in class
- Users describe successful classroom experiences using the software.
- Users describe positive reactions or feedback from students when using the software.

13.
Concepts: user reviews, user experience
- Users provide reviews or opinions about the software.
- Instances where users share their experiences or opinions about using the software.

14.
Concepts: ease of use, software usability
- Discussions related to the ease of use and user-friendliness of the software.
- Users discuss the practical aspects and ease of use of the software.

15.
Concepts: usability and practicality, highlight practicality
- User comments on the ease of use and practicality of the software.
- Users express appreciation for the software's practical usability compared to other software.

16.
Concepts: context of use, usability and context of use
- Instances where users describe the specific contexts in which they use the software.
- Discussions about how the software is used in different contexts and its usability.

17.
Concepts: feature improvement, product improvement
- Discussing improvements to features or functionalities.
- Developers discuss improvements or changes made to the software.

18.
Concepts: provide feedback, community feedback
- Users provide feedback and suggestions for improvement.
- Providing feedback on development priorities.
- Users providing feedback and suggestions to improve the product.

19.
Concepts: user input, user feedback request
- Requesting user opinions or feedback.
- Requesting more feedback or suggestions from users.

20.
Concepts: suggest new feature, propose another feature
- Users suggest the addition of new features or functionalities to the application.
- A user proposes additional features that would enhance the application's functionality.

21.
Concepts: design suggestion, design/feature suggestion
- Users provide detailed design suggestions or requests for specific functionalities.
- A user suggests adding new design features or improvements to the platform.

22.
Concepts: suggestion and feedback, user feedback and suggestions
- Users providing suggestions or feedback on the software's features or development direction.
- Instances where users provide feedback or suggestions about the software.
- Users providing feedback or suggestions on features and improvements for the software.
- Users providing feedback or suggestions to improve the software.

23.
Concepts: suggestion, suggest improvements, user suggestion
- Users or developers make suggestions for improvements or new features.
- A user suggests improvements to the software.
- Users provide suggestions for software improvements or features.

24.
Concepts: request, user requests, request specific features
- Making a request for specific features or improvements.
- Instances where users request new features or improvements.
- Specific features or improvements requested by users.
- User requests the addition or improvement of specific features or functionalities in the software.

25.
Concepts: expand platform scope, request additional experiments
- A user requests the addition of new experiments or features to the platform.
- Users request the addition of specific experiments or features.

26.
Concepts: feature request, feature requests for physics experiments
- Instances where users request new features or improvements for the Physics Lab tool.
- Suggestions from users about desired features or improvements for the software.
- Users make detailed requests for specific features or experiments related to physics.

27.
Concepts: consider local export, local export necessity
- A designer considers the need for local export functionality.
- Designers mention the necessity of supporting local export within the software.

28.
Concepts: community need, acknowledge community needs
- A user highlights the need for specific features to meet community needs.
- Addressing the needs or desires of the community in feature development.

29.
Concepts: update inquiry, ask for feature update, inquire about updates, inquire about update timeline
- A user inquires about upcoming updates.
- Users inquire about the timeline for upcoming software updates.
- Inquiring about the timeline or frequency of software updates.
- A user inquires about recent updates to the software.
- User inquires about the timeline or schedule for upcoming updates.

30.
Concepts: update status inquiry, inquire about android update status
- A user inquires about the status of an update for specific versions of the platform.
- Users inquire about the status of updates for specific platforms.

31.
Concepts: user anticipation, update anticipation
- Expressing anticipation or eagerness for an update.
- Users expressing anticipation for updates or new features.

32.
Concepts: version clarification, platform clarification
- Users asking for clarification on software versions.
- Users seek clarification on where to download specific versions of the software.

33.
Concepts: clarify version type, update clarification
- Clarifying the type or version of software.
- Designers clarify which version of the software is being discussed or updated.

34.
Concepts: confirm compatibility, system compatibility confirmation
- A designer confirms that the platform is compatible with specific software versions.
- Designers confirm the compatibility of the software with specific systems.

35.
Concepts: pc version, pc version inquiry
- User asks how to use the PC version of the software.
- Users inquiring about the usage of the PC version.

36.
Concepts: context explanation, contextualizing response
- Users explaining their reasons or context for certain actions.
- Users provide context to their responses, often explaining the reasoning behind their statements.

37.
Concepts: reason for suggestion, explain reasons for the request
- Users provide reasons for their suggestions.
- Users explain the reasons behind their requests or suggestions.

38.
Concepts: request detailed needs, gather detailed requirements
- Offering to communicate privately for further clarity on requirements.
- Requesting users to provide detailed requirements privately.

39.
Concepts: software access, question for access
- A user asks for instructions on how to download the platform.
- User asks how to access or download a specific version of the software.

40.
Concepts: download inquiry, ask for download information
- A user inquires about where to download specific versions of the software.
- A user asks for information on where to download the software.

41.
Concepts: question, ask a question
- Users and designers ask questions or seek information.
- User or designer asks a question seeking information or clarification.

42.
Concepts: user inquiry, request for information
- Questions or requests for information made by users regarding the use or functionalities of Physics Lab.
- Instances where users ask for specific information or help regarding the use or features of Physics Lab.

43.
Concepts: usage inquiry, ask a question about how to use
- Users inquire about how to use specific versions of the software.
- User asks how to use a specific feature or version of the software.

44.
Concepts: seek guidance, seek usage instructions
- Users seek guidance or information about using the software.
- Users seek instructions on how to use the software.

45.
Concepts: usage support request, technical support request
- Users requesting support or guidance for using the software.
- Asking for help with technical issues or usage instructions.

46.
Concepts: seek help, express need for help
- User seeks help or asks for assistance.
- User expresses a need for help with using a feature.

47.
Concepts: collaborative problem solving
- Moments where designers and users work together to address issues.
- Collaborative efforts between users and designers to solve issues and improve the product.
- Instances where users and designers work together to address issues or improve the software.

48.
Concepts: resources sharing
- Instances where designers or users share resources, such as download links, development plans, or announcements.
- Information about where and how to access resources, files, or downloads related to Physics Lab.
- Instances where users or designers share files, images, or other resources with the community.

49.
Concepts: user feedback integration
- Instances where user feedback is acknowledged and incorporated into the design process.
- Instances where user feedback is actively sought and incorporated into the design process.

50.
Concepts: user engagement
- Instances where users actively participate in the conversation, showing interest or involvement in the community.
- Instances where users engage with designers through questions, feedback, or expressions of anticipation.
- Instances where users actively participate in the conversation, showing interest and involvement.

51.
Concepts: encourage participatory design
- Instances where the community contributes to the design and development of the Physics Lab by providing suggestions or feedback that influence the development process.
- Instances where designers seek or consider user input in the design and development process.
- Instances where users are invited to participate in the design process or provide input.
- Instances where users and designers collaboratively discuss features and usability, reflecting a user-centered design approach.
- The involvement of users in the design and development process, contributing their insights and needs.
- Encouragement by designers for users to contribute ideas, feedback, and suggestions for the development of Physics Lab.
- Active involvement of users in the design process to ensure the product meets their needs and preferences.
- The involvement of users in the design process to ensure the product meets their needs and preferences.
- Instances where users and designers collaboratively discuss or work on design improvements.

52.
Concepts: acknowledgment
- Users acknowledge previous responses and express gratitude.
- Users acknowledging messages or instructions.

53.
Concepts: user response
- Input and suggestions provided by users regarding the design and functionality of the product.
- Instances where users provide feedback or ask questions that influence the design process.
- Instances where users provide feedback or suggestions to improve the software.
- Instances where users provide suggestions or feedback on features and functionalities.
- Instances where users provide feedback or ask questions about the app's development and updates.

54.
Concepts: technical inquiry
- Instances where users ask technical questions about the platform, indicating areas of user interest or potential issues.
- Users asking technical questions about the software.

55.
Concepts: promote community engagement
- Instances where members of the community actively participate in discussions, ask questions, or provide feedback.
- Instances where users or designers engage in discussions that foster community interaction and participation.
- Active participation and interaction among community members, including both users and designers.
- Efforts made by designers to actively involve and communicate with the user community.

56.
Concepts: manage expectations
- A team member manages user expectations regarding features and updates.
- Setting realistic expectations about the availability or timing of features.

57.
Concepts: development transparency
- Instances where designers provide detailed information about development processes, challenges, and progress.
- Keeping the community informed about the development process and upcoming changes.

58.
Concepts: role identification
- Instances where users or designers identify their roles, which can help understand the community structure and the roles within it.
- Instances where participants identify their roles or expertise, contributing to the problem-solving process.
- Identifying roles within the community, such as designers, teachers, or other users.

59.
Concepts: designer responsiveness
- Instances where designers respond to user queries or engage with user comments, indicating active communication between designers and users.
- Instances where designers respond to user inquiries, suggestions, or feedback.
- Instances where designers respond to user feedback or suggestions.
- Instances where designers acknowledge user feedback and discuss potential solutions or updates.
- Designers responding to user feedback and addressing their concerns or suggestions.
- Instances where designers respond to user queries or feedback, showing attentiveness to user needs.

60.
Concepts: informal communication
- Instances where the tone of the conversation is casual or informal, indicating the nature of the community's communication style.
- Casual and non-technical interactions among community members, including humor and personal remarks.

61.
Concepts: iterative development
- Instances where designers discuss updates, new features, or bug fixes.
- The process of repeatedly refining and improving a product based on feedback and testing.
- The process of continuously improving the product based on feedback and testing.
- Instances where the design process is described as iterative, with ongoing optimizations and updates.
- A designer describes iterative development based on user feedback.
===
---
Definitions for each code (61 in total):
1.
Concepts: internet availability inquiry, inquire about classroom conditions
Relationship: N/A
Criteria: A team member inquires about the internet conditions in a classroom.
Phrase: Inquire about internet availability

2.
Concepts: teaching background, introduce teacher identity with grade-level and number of years
Relationship: N/A
Criteria: A user shares their teaching background, including levels taught and years of experience.
Phrase: Share teaching background

3.
Concepts: teaching experience, share teaching experience
Relationship: N/A
Criteria: A user shares their teaching experience and background.
Phrase: Share teaching experience

4.
Concepts: user background, provide background information
Relationship: N/A
Criteria: A user provides personal or professional background information relevant to the community.
Phrase: Provide background information

5.
Concepts: identity inquiry, question about identity
Relationship: N/A
Criteria: A team member asks about the professional role or background of a user.
Phrase: Inquire about professional identity

6.
Concepts: teacher identity, confirming teacher identity
Relationship: N/A
Criteria: A designer asks about a user's professional background, specifically teaching.
Phrase: Confirm teacher identity

7.
Concepts: compliment on 3d effect, compliment software's 3d effect
Relationship: N/A
Criteria: A user compliments the software's 3D effects.
Phrase: Compliment 3D effects

8.
Concepts: express approval, positive feedback, software compliment, share positive feedback, praise software
Relationship: N/A
Criteria: Users provide positive feedback or praise about the software.
Phrase: Share positive feedback

9.
Concepts: feature appreciation, appreciation of features
Relationship: N/A
Criteria: Users express appreciation for specific features or aspects of the software.
Phrase: Appreciate software features

10.
Concepts: comparison to similar apps, compare with other applications
Relationship: N/A
Criteria: A user compares the software favorably to similar applications.
Phrase: Compare to similar applications

11.
Concepts: comparative feedback, compare with other software
Relationship: N/A
Criteria: Users provide feedback by comparing the current software with other software, highlighting differences.
Phrase: Provide comparative feedback

12.
Concepts: illustrate classroom success, describe students' positive responses in class
Relationship: N/A
Criteria: Users describe successful classroom experiences using the software.
Phrase: Describe classroom success

13.
Concepts: user reviews, user experience
Relationship: N/A
Criteria: Users provide reviews or opinions about the software.
Phrase: Share user reviews

14.
Concepts: ease of use, software usability
Relationship: N/A
Criteria: Users discuss the practical aspects and ease of use of the software.
Phrase: Discuss software usability

15.
Concepts: usability and practicality, highlight practicality
Relationship: N/A
Criteria: Users express appreciation for the software's practical usability.
Phrase: Highlight practical usability

16.
Concepts: context of use, usability and context of use
Relationship: N/A
Criteria: Discussions about how the software is used in different contexts and its usability.
Phrase: Discuss context of use

17.
Concepts: feature improvement, product improvement
Relationship: N/A
Criteria: Developers discuss improvements or changes made to the software.
Phrase: Discuss feature improvements

18.
Concepts: provide feedback, community feedback
Relationship: N/A
Criteria: Users provide feedback and suggestions to improve the product.
Phrase: Provide community feedback

19.
Concepts: user input, user feedback request
Relationship: N/A
Criteria: Requesting user opinions or feedback.
Phrase: Request user input

20.
Concepts: suggest new feature, propose another feature
Relationship: N/A
Criteria: Users suggest the addition of new features or functionalities to the application.
Phrase: Propose new features

21.
Concepts: design suggestion, design/feature suggestion
Relationship: N/A
Criteria: A user suggests adding new design features or improvements to the platform.
Phrase: Provide design suggestions

22.
Concepts: suggestion and feedback, user feedback and suggestions
Relationship: N/A
Criteria: Users provide feedback or suggestions on features and improvements for the software.
Phrase: Provide feedback and suggestions

23.
Concepts: suggestion, suggest improvements, user suggestion
Relationship: N/A
Criteria: Users provide suggestions for software improvements or features.
Phrase: Suggest improvements

24.
Concepts: request, user requests, request specific features
Relationship: N/A
Criteria: Users request the addition or improvement of specific features or functionalities in the software.
Phrase: Request specific features

25.
Concepts: expand platform scope, request additional experiments
Relationship: N/A
Criteria: Users request the addition of specific experiments or features.
Phrase: Request additional experiments

26.
Concepts: feature request, feature requests for physics experiments
Relationship: N/A
Criteria: Users make detailed requests for specific features or experiments related to physics.
Phrase: Make feature requests

27.
Concepts: consider local export, local export necessity
Relationship: N/A
Criteria: Designers mention the necessity of supporting local export within the software.
Phrase: Consider local export functionality

28.
Concepts: community need, acknowledge community needs
Relationship: N/A
Criteria: Addressing the needs or desires of the community in feature development.
Phrase: Acknowledge community needs

29.
Concepts: update inquiry, ask for feature update, inquire about updates, inquire about update timeline
Relationship: N/A
Criteria: Users inquire about the timeline or schedule for upcoming updates.
Phrase: Inquire about feature updates

30.
Concepts: update status inquiry, inquire about android update status
Relationship: N/A
Criteria: Users inquire about the status of updates for specific platforms.
Phrase: Inquire about update status

31.
Concepts: user anticipation, update anticipation
Relationship: N/A
Criteria: Users expressing anticipation for updates or new features.
Phrase: Express update anticipation

32.
Concepts: version clarification, platform clarification
Relationship: N/A
Criteria: Users seek clarification on where to download specific versions of the software.
Phrase: Seek version clarification

33.
Concepts: clarify version type, update clarification
Relationship: N/A
Criteria: Designers clarify which version of the software is being discussed or updated.
Phrase: Clarify version type

34.
Concepts: confirm compatibility, system compatibility confirmation
Relationship: N/A
Criteria: Designers confirm the compatibility of the software with specific systems.
Phrase: Confirm system compatibility

35.
Concepts: pc version, pc version inquiry
Relationship: N/A
Criteria: Users inquire about the usage of the PC version.
Phrase: Inquire about PC version

36.
Concepts: context explanation, contextualizing response
Relationship: N/A
Criteria: Users provide context to their responses, often explaining the reasoning behind their statements.
Phrase: Provide context explanation

37.
Concepts: reason for suggestion, explain reasons for the request
Relationship: N/A
Criteria: Users explain the reasons behind their requests or suggestions.
Phrase: Explain reasons for suggestions

38.
Concepts: request detailed needs, gather detailed requirements
Relationship: N/A
Criteria: Requesting users to provide detailed requirements privately.
Phrase: Request detailed needs

39.
Concepts: software access, question for access
Relationship: N/A
Criteria: Users ask how to access or download a specific version of the software.
Phrase: Inquire about software access

40.
Concepts: download inquiry, ask for download information
Relationship: N/A
Criteria: Users inquire about where to download specific versions of the software.
Phrase: Inquire about download information

41.
Concepts: question, ask a question
Relationship: N/A
Criteria: Users or designers ask a question seeking information or clarification.
Phrase: Ask a question

42.
Concepts: user inquiry, request for information
Relationship: N/A
Criteria: Users ask for specific information or help regarding the use or features of Physics Lab.
Phrase: Make user inquiry

43.
Concepts: usage inquiry, ask a question about how to use
Relationship: N/A
Criteria: Users inquire about how to use a specific feature or version of the software.
Phrase: Make usage inquiry

44.
Concepts: seek guidance, seek usage instructions
Relationship: N/A
Criteria: Users seek instructions on how to use the software.
Phrase: Seek usage guidance

45.
Concepts: usage support request, technical support request
Relationship: N/A
Criteria: Users request support or guidance for using the software.
Phrase: Request usage support

46.
Concepts: seek help, express need for help
Relationship: N/A
Criteria: Users express a need for help with using a feature.
Phrase: Seek help

47.
Concepts: collaborative problem solving
Relationship: N/A
Criteria: Collaborative efforts between users and designers to solve issues and improve the product.
Phrase: Engage in collaborative problem solving

48.
Concepts: resources sharing
Relationship: N/A
Criteria: Instances where users or designers share files, images, or other resources with the community.
Phrase: Share resources

49.
Concepts: user feedback integration
Relationship: N/A
Criteria: Instances where user feedback is acknowledged and incorporated into the design process.
Phrase: Integrate user feedback

50.
Concepts: user engagement
Relationship: N/A
Criteria: Instances where users actively participate in the conversation, showing interest and involvement.
Phrase: Engage users

51.
Concepts: encourage participatory design
Relationship: N/A
Criteria: Instances where users and designers collaboratively discuss features and usability, reflecting a user-centered design approach.
Phrase: Encourage participatory design

52.
Concepts: acknowledgment
Relationship: N/A
Criteria: Users acknowledge previous responses and express gratitude.
Phrase: Acknowledge responses

53.
Concepts: user response
Relationship: N/A
Criteria: Instances where users provide feedback or ask questions about the app's development and updates.
Phrase: Provide user response

54.
Concepts: technical inquiry
Relationship: N/A
Criteria: Users ask technical questions about the software.
Phrase: Make technical inquiry

55.
Concepts: promote community engagement
Relationship: N/A
Criteria: Active participation and interaction among community members, including both users and designers.
Phrase: Promote community engagement

56.
Concepts: manage expectations
Relationship: N/A
Criteria: A team member manages user expectations regarding features and updates.
Phrase: Manage user expectations

57.
Concepts: development transparency
Relationship: N/A
Criteria: Keeping the community informed about the development process and upcoming changes.
Phrase: Ensure development transparency

58.
Concepts: role identification
Relationship: N/A
Criteria: Identifying roles within the community, such as designers, teachers, or other users.
Phrase: Identify roles

59.
Concepts: designer responsiveness
Relationship: N/A
Criteria: Instances where designers respond to user feedback or suggestions.
Phrase: Show designer responsiveness

60.
Concepts: informal communication
Relationship: N/A
Criteria: Casual and non-technical interactions among community members, including humor and personal remarks.
Phrase: Engage in informal communication

61.
Concepts: iterative development
Relationship: N/A
Criteria: The process of continuously improving the product based on feedback and testing.
Phrase: Conduct iterative development