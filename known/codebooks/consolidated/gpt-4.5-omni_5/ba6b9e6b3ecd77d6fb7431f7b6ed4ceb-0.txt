You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (17 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
17. 
Concepts: {Repeat the input 17}
Relationship: {What is logical relationship between concepts in code 17, or N/A if not applicable}
Criteria: {Who did what, and how for code 17}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: identifying user roles, confirming community identity
- Designers inquire about or identify user roles to understand community structure.
- Designers and users confirm their identity or role within the community.

2.
Concepts: image sharing, sharing community resources
- Users or designers share images within the community.
- Users or designers refer to shared resources within the community and share resources such as download links, development plans, or announcements.

3.
Concepts: expressing agreement, agreeing with design ideas
- Users agree with suggestions or statements made by others.
- Users agree with or support a design idea and confirm the designer's argument or statement.

4.
Concepts: user appreciation, expressing gratitude
- Expressions of thanks or appreciation from users.
- Users or designers express gratitude and appreciation for contributions and support.

5.
Concepts: describing usage scenarios, discussing educational application
- Users describe educational use cases and specific scenarios for software usage.
- Users discuss the application and experiences of using the software in educational settings.

6.
Concepts: praising software, providing user reviews
- Users provide positive feedback and compliments about the software's features.
- Users provide reviews or comparative feedback about the software.

7.
Concepts: providing user guidance, instruction and updates
- Designers provide guidance on using new features or updates and instructions on how to use a feature.
- Designers providing updates and instructions to help users understand and use the software effectively.

8.
Concepts: explaining design goals, providing technical information
- Designers explain the design goals and inform users about the software's capabilities.
- Designers provide factual information about a feature or component, explain the nature or version of a technical artifact, clarify or explain a technical detail or rationale, and explain technical specifications or capabilities of a component or feature.

9.
Concepts: technical issue, sharing system limitations
- A user mentions a technical issue or limitation.
- Users mention outdated technology and system limitations.

10.
Concepts: educational tools, requesting features
- Users request or discuss educational tools and features that would be beneficial for teaching.
- A user requests specific features or suggests collaboration for educational purposes.

11.
Concepts: need for usage support, seeking usage guidance
- Indicating the need for usage support or documentation.
- Users seek guidance and information about software usage.

12.
Concepts: technical inquiry, posing technical questions
- Instances where users ask technical questions about the platform, indicating areas of user interest or potential issues.
- Users and designers ask and answer technical questions and questions related to the design or functionality of the software.

13.
Concepts: accepting user suggestions, proposing usability improvements
- Designers invite and accept user suggestions for new features or improvements.
- Suggestions or changes are made to improve the usability of the software and users suggest improvements to enhance user experience and workflow.

14.
Concepts: clarifying user needs, asking follow-up questions
- Designers confirm user needs and clarify specific topics or requests.
- Designers ask follow-up questions to clarify user requests and decisions.

15.
Concepts: responding to user feedback, incorporating user feedback
- Designers acknowledge, respond to, and consider user feedback.
- Designers solicit and incorporate user feedback into design decisions.

16.
Concepts: announcing future plans, promising future updates
- Designers announce and share information about future plans and updates.
- Designers mention ongoing efforts and promise future updates or developments.

17.
Concepts: describe future plans, planning future updates
- Discussions about potential future developments and directions for the product.
- Designers discuss and plan for future updates and design considerations, and list and describe features planned for future updates.
===
---
Definitions for each code (17 in total):
1.
Concepts: identifying user roles, confirming community identity
Relationship: Both concepts involve understanding and establishing roles within the community.
Criteria: Designers and users identify and confirm their roles within the community.
Phrase: Establishing community roles

2.
Concepts: image sharing, sharing community resources
Relationship: Both concepts involve the act of sharing within the community.
Criteria: Users or designers share images and community resources such as links, plans, or announcements.
Phrase: Sharing community resources

3.
Concepts: expressing agreement, agreeing with design ideas
Relationship: Both concepts involve users expressing agreement.
Criteria: Users express agreement with suggestions, statements, or design ideas.
Phrase: Expressing agreement

4.
Concepts: user appreciation, expressing gratitude
Relationship: Both concepts involve expressions of gratitude.
Criteria: Users or designers express thanks and appreciation for contributions and support.
Phrase: Expressing gratitude

5.
Concepts: describing usage scenarios, discussing educational application
Relationship: Both concepts involve discussing how the software is used in educational settings.
Criteria: Users describe and discuss educational use cases and applications of the software.
Phrase: Discussing educational use

6.
Concepts: praising software, providing user reviews
Relationship: Both concepts involve providing positive feedback about the software.
Criteria: Users provide positive feedback, compliments, and reviews about the software's features.
Phrase: Praising software

7.
Concepts: providing user guidance, instruction and updates
Relationship: Both concepts involve designers offering guidance and updates.
Criteria: Designers provide guidance, instructions, and updates to help users understand and use the software.
Phrase: Providing user guidance

8.
Concepts: explaining design goals, providing technical information
Relationship: Both concepts involve designers explaining aspects of the software.
Criteria: Designers explain design goals and provide technical information about the software's features.
Phrase: Explaining design goals

9.
Concepts: technical issue, sharing system limitations
Relationship: Both concepts involve discussing problems or limitations of the system.
Criteria: Users mention technical issues and system limitations.
Phrase: Mentioning technical issues

10.
Concepts: educational tools, requesting features
Relationship: Both concepts involve users requesting or discussing features for educational purposes.
Criteria: Users request or discuss educational tools and features beneficial for teaching.
Phrase: Requesting educational features

11.
Concepts: need for usage support, seeking usage guidance
Relationship: Both concepts involve users seeking help with using the software.
Criteria: Users indicate the need for support and seek guidance on software usage.
Phrase: Seeking usage support

12.
Concepts: technical inquiry, posing technical questions
Relationship: Both concepts involve users asking technical questions.
Criteria: Users ask technical questions about the platform's design or functionality.
Phrase: Posing technical questions

13.
Concepts: accepting user suggestions, proposing usability improvements
Relationship: Both concepts involve suggestions for improving the software.
Criteria: Designers accept user suggestions and propose usability improvements.
Phrase: Proposing usability improvements

14.
Concepts: clarifying user needs, asking follow-up questions
Relationship: Both concepts involve designers seeking to understand user needs better.
Criteria: Designers clarify user needs and ask follow-up questions to understand requests.
Phrase: Clarifying user needs

15.
Concepts: responding to user feedback, incorporating user feedback
Relationship: Both concepts involve designers addressing user feedback.
Criteria: Designers respond to and incorporate user feedback into design decisions.
Phrase: Incorporating user feedback

16.
Concepts: announcing future plans, promising future updates
Relationship: Both concepts involve designers communicating future developments.
Criteria: Designers announce future plans and promise updates or developments.
Phrase: Announcing future plans

17.
Concepts: describe future plans, planning future updates
Relationship: Both concepts involve discussions about future updates.
Criteria: Designers discuss and plan for future updates and design considerations.
Phrase: Planning future updates
---