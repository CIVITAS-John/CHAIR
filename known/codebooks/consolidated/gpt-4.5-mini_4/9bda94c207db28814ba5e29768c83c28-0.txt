You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (11 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
11. 
Concepts: {Repeat the input 11}
Relationship: {What is logical relationship between concepts in code 11, or N/A if not applicable}
Criteria: {Who did what, and how for code 11}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: advise on development approach, give a suggestion about taking the development slow
- Users advise against aiming for completeness and suggest a more focused approach to development.
- User advises a cautious approach to development, emphasizing gradual progress.

2.
Concepts: system requirements, consider technical requirements
- The designer outlines the system requirements for the software.
- A designer discusses technical aspects and considers the requirements necessary for the application to function effectively.

3.
Concepts: align with user needs, align with user feedback
- The designer aligns feature development with user needs and educational practices.
- The designer aligns actions with user feedback and suggests simplifications for better usability.

4.
Concepts: address usability, address functionality
- A designer addresses usability concerns and emphasizes meeting user needs in software development.
- Designers address the functionality of specific features, particularly in relation to user interface elements.

5.
Concepts: provide indirect answers, clarify question intentions
- Designer provides an indirect response to a user's question, prompting further clarification.
- A user provides context for their question, and the designer responds with relevant information about their work.

6.
Concepts: real time communication, engage in direct communication
- Designer engages in real-time communication with a user regarding their inquiry.
- The designer engages in dialogue with users, discussing specific aspects of the application.

7.
Concepts: build rapport, informal interaction
- The designer engages in light conversation to build rapport with users.
- The designer and users engage in informal interactions.

8.
Concepts: seek consensus, confirm agreement
- The designer seeks agreement or consensus on a proposed idea or solution.
- Users express agreement with design ideas proposed by others.

9.
Concepts: acknowledge need for feature, confirm feature implementation
- The designer acknowledges the necessity for a specific feature based on user feedback.
- Designers confirm the existence or future implementation of a feature and acknowledge user feedback.

10.
Concepts: express understanding, confirm understanding
- A designer expresses understanding of a user's needs and requests.
- The designer confirms a user's statement or inquiry with an affirmative response, ensuring mutual understanding of previous messages.

11.
Concepts: validate user request, ask follow-up questions
- Designer validates a user's request or inquiry.
- Designers pose questions regarding design elements or user requests and ask follow-up questions to confirm user requests.
===
---
Definitions for each code (11 in total):
1.
Concepts: advise on development approach, give a suggestion about taking the development slow
Relationship: The concepts are related as both involve providing guidance on the pace and focus of development.
Criteria: Users advise against aiming for completeness and suggest a more focused and cautious approach to development.
Phrase: Advise on cautious development.

2.
Concepts: system requirements, consider technical requirements
Relationship: The concepts are interconnected as both pertain to the necessary specifications for effective software functionality.
Criteria: The designer outlines and discusses the system and technical requirements necessary for the application to function effectively.
Phrase: Define system requirements.

3.
Concepts: align with user needs, align with user feedback
Relationship: The concepts are related as both involve ensuring that development is responsive to user input and educational practices.
Criteria: The designer aligns feature development with user needs and feedback to enhance usability.
Phrase: Align development with user needs.

4.
Concepts: address usability, address functionality
Relationship: The concepts are linked as both focus on improving the software's performance and user experience.
Criteria: Designers address usability and functionality concerns to meet user needs in software development.
Phrase: Address usability and functionality.

5.
Concepts: provide indirect answers, clarify question intentions
Relationship: The concepts are related as both involve communication strategies to ensure clarity in user inquiries.
Criteria: The designer provides indirect responses and prompts users for clarification to better understand their questions.
Phrase: Clarify user inquiries.

6.
Concepts: real time communication, engage in direct communication
Relationship: The concepts are connected as both emphasize immediate and interactive dialogue between the designer and users.
Criteria: The designer engages in real-time and direct communication with users regarding their inquiries.
Phrase: Engage in real-time communication.

7.
Concepts: build rapport, informal interaction
Relationship: The concepts are related as both involve creating a friendly and approachable atmosphere for interaction.
Criteria: The designer engages in light conversation and informal interactions to build rapport with users.
Phrase: Build rapport through informal interaction.

8.
Concepts: seek consensus, confirm agreement
Relationship: The concepts are linked as both involve collaborative decision-making and validation of ideas among users and designers.
Criteria: The designer seeks and confirms agreement or consensus on proposed ideas or solutions.
Phrase: Seek and confirm consensus.

9.
Concepts: acknowledge need for feature, confirm feature implementation
Relationship: The concepts are related as both involve recognizing and validating user feedback regarding necessary features.
Criteria: The designer acknowledges the necessity for a feature and confirms its implementation based on user feedback.
Phrase: Acknowledge and confirm feature needs.

10.
Concepts: express understanding, confirm understanding
Relationship: The concepts are interconnected as both focus on ensuring clear communication and mutual comprehension between the designer and users.
Criteria: The designer expresses and confirms understanding of a user's needs and requests.
Phrase: Confirm mutual understanding.

11.
Concepts: validate user request, ask follow-up questions
Relationship: The concepts are related as both involve ensuring that user requests are understood and accurately addressed.
Criteria: The designer validates user requests and poses follow-up questions to confirm their needs.
Phrase: Validate and clarify user requests.
---