You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: software limitations, limitation clarification, design limitations explanation
- Designer clarifies software limitations or compatibility issues.
- Clarifying limitations or constraints of the software
- Designer clarifies limitations or constraints of the software.
- The designer explains the limitations or constraints of the software or design.

2.
Concepts: gap identification, highlight gaps in software offerings, identify gaps in functionality
- Identifies gaps or limitations in the current software or features.
- Identification of gaps or limitations in existing software.
- Identifying a specific need or limitation in the current system

3.
Concepts: highlighted technical challenges, highlight technical constraints
- User highlights technical challenges or limitations.
- Users highlight technical constraints or limitations that affect their use of the platform.

4.
Concepts: identify barrier, highlight potential barriers
- Barriers or obstacles to software use are identified.
- User highlights potential barriers to using the software

5.
Concepts: contextualizing software constraints, contextualize technical constraints
- User contextualizes software usage constraints.
- User contextualizes technical constraints that affect their use of the platform.

6.
Concepts: technical discussion, engage in technical discussion
- Discussing technical requirements or specifications.
- User engages in a discussion about technical specifications of the software.

7.
Concepts: set hardware expectations, set expectations for hardware requirements
- Designer sets expectations for hardware compatibility.
- A designer sets expectations or requirements for the hardware needed to run the Physics Lab software.

8.
Concepts: expressing compatibility assurance, providing compatibility reassurance
- A user expresses confidence in compatibility.
- A user provides reassurance about compatibility or technical issues.

9.
Concepts: theorizing about compatibility, compatibility theorization
- Designer theorizes about compatibility or technical possibilities.
- A designer theorizes or speculates about the compatibility of the software with different systems or devices.

10.
Concepts: compatibility discussions, speculate on compatibility
- The designer hypothesizes or discusses compatibility issues with different devices or systems.
- A designer or moderator speculates or provides information about compatibility with different systems or devices.

11.
Concepts: clarifies compatibility issues, suggest solutions for compatibility
- A designer clarifies or addresses compatibility issues with the software.
- A designer suggests solutions for compatibility issues.

12.
Concepts: clarify theoretical compatibility, clarify compatibility expectations
- Designer clarifies the theoretical compatibility of the software.
- The designer clarifies compatibility expectations or requirements.

13.
Concepts: ensure compatibility, confirms compatibility
- Ensuring compatibility by the designer
- A designer confirms compatibility with specific systems or devices.

14.
Concepts: ask for usage instructions, requesting usage guidance
- A user requests instructions or guidance on using the Physics Lab.
- User requests instructions or guidance on how to use a feature or the Physics Lab.

15.
Concepts: power supply capability, supporting multiple power sources
- The designer highlights a feature or capability of the software that supports multiple types of power supply.
- Highlighting a feature or capability that supports multiple types of power supplies or currents.

16.
Concepts: explains bidirectional conversion, explained bidirectional conversion benefits
- A designer explains or describes the concept of bidirectional conversion.
- Designer explains the benefits of a specific feature, such as bidirectional conversion.

17.
Concepts: detail simulated experiment assessment, simulated experiment assessment details
- The designer provides detailed information about a simulated experiment assessment feature.
- Designer mentions a specific feature or functionality of the simulated experiment assessment.

18.
Concepts: explain simulation detail, clarifying simulation features, explaining simulation features
- A designer explains the details of a simulation or feature.
- The designer clarifies a feature or functionality of the physics lab simulation.
- The designer explains a feature or functionality of the physics lab simulation.

19.
Concepts: interdisciplinary exploration, openness to interdisciplinary exploration
- A designer encourages exploration of interdisciplinary subjects.
- Designer expresses openness to interdisciplinary exploration.

20.
Concepts: show understanding
- Showing understanding or empathy
- User shows understanding or empathy towards the designers' situation or challenges.
- Understanding or agreement is expressed.
- A user demonstrates understanding or agreement with a concept.

21.
Concepts: support user engagement
- Support for user engagement by the designer
- The designer supports or enables user engagement with the software.

22.
Concepts: technical inquiry
- Inquires about the technical conditions or capabilities of a class or environment.
- Inquiring about technical requirements or compatibility
- Designer inquires about internet availability or technical requirements.

23.
Concepts: usability emphasis
- Emphasizing the importance of usability in software design.
- A designer emphasizes the importance of usability

24.
Concepts: manage expectations
- Designer manages or sets expectations about the software's capabilities or limitations.
- Designer sets expectations or provides clarification on the development roadmap.

25.
Concepts: quality advocacy
- Advocating for high-quality work or outcomes.
- Advocating for high-quality auto-generated layouts or features.

26.
Concepts: assess user environment
- Assessment is made of the user's environment or setup.
- Designer assesses the user's environment for software application.

27.
Concepts: maintains engagement
- A designer maintains engagement with the community, often with casual or social comments.
- A designer engages with users in a way that maintains their interest or attention.

28.
Concepts: sharing personal experiences
- A user shares a personal experience that affects community dynamics
- User shares a personal story or experience.

29.
Concepts: gathering user feedback
- Asking users about their experiences, opinions, or feedback on the Physics Lab platform.
- A designer intends to collect user opinions or feedback.

30.
Concepts: confirm update
- Designers confirm updates, releases, or changes to the platform.
- A user confirms or acknowledges an update or change.
- A user confirms that an update has been made to the software.

31.
Concepts: maintaining positive interaction
- The speaker maintains a positive and friendly tone in their interaction.
- User maintains positive interaction or tone.

32.
Concepts: identifying user role
- A designer identifies a user's role or profession.
- Identification of a user's role or position in the community.
===
Here are the definitions for each code:

---
1.
Concepts: software limitations, limitation clarification, design limitations explanation
Relationship: The concepts are related as they all describe the designer's action of explaining or clarifying software limitations.
Criteria: Designer explains or clarifies software limitations or compatibility issues.
Phrase: Clarify software limitations.

2.
Concepts: gap identification, highlight gaps in software offerings, identify gaps in functionality
Relationship: The concepts are related as they all describe the action of identifying gaps or limitations in software.
Criteria: Identifies gaps or limitations in the current software or features.
Phrase: Identify software gaps.

3.
Concepts: highlighted technical challenges, highlight technical constraints
Relationship: The concepts are related as they both describe users highlighting technical challenges or limitations.
Criteria: User highlights technical challenges or limitations that affect their use of the platform.
Phrase: Highlight technical challenges.

4.
Concepts: identify barrier, highlight potential barriers
Relationship: The concepts are related as they both describe identifying or highlighting barriers to software use.
Criteria: Barriers or obstacles to software use are identified.
Phrase: Identify barriers.

5.
Concepts: contextualizing software constraints, contextualize technical constraints
Relationship: The concepts are related as they both describe users contextualizing software usage constraints.
Criteria: User contextualizes software usage constraints.
Phrase: Contextualize software constraints.

6.
Concepts: technical discussion, engage in technical discussion
Relationship: The concepts are related as they both describe discussing technical requirements or specifications.
Criteria: Discussing technical requirements or specifications.
Phrase: Engage in technical discussion.

7.
Concepts: set hardware expectations, set expectations for hardware requirements
Relationship: The concepts are related as they both describe setting expectations for hardware compatibility.
Criteria: Designer sets expectations for hardware compatibility.
Phrase: Set hardware expectations.

8.
Concepts: expressing compatibility assurance, providing compatibility reassurance
Relationship: The concepts are related as they both describe expressing confidence in compatibility.
Criteria: A user expresses confidence in compatibility.
Phrase: Express compatibility assurance.

9.
Concepts: theorizing about compatibility, compatibility theorization
Relationship: The concepts are related as they both describe theorizing about compatibility or technical possibilities.
Criteria: Designer theorizes about compatibility or technical possibilities.
Phrase: Theorize about compatibility.

10.
Concepts: compatibility discussions, speculate on compatibility
Relationship: The concepts are related as they both describe discussing or speculating about compatibility issues.
Criteria: The designer hypothesizes or discusses compatibility issues with different devices or systems.
Phrase: Discuss compatibility.

11.
Concepts: clarifies compatibility issues, suggest solutions for compatibility
Relationship: The concepts are related as they both describe clarifying or addressing compatibility issues.
Criteria: A designer clarifies or addresses compatibility issues with the software.
Phrase: Clarify compatibility issues.

12.
Concepts: clarify theoretical compatibility, clarify compatibility expectations
Relationship: The concepts are related as they both describe clarifying compatibility expectations or requirements.
Criteria: Designer clarifies compatibility expectations or requirements.
Phrase: Clarify compatibility expectations.

13.
Concepts: ensure compatibility, confirms compatibility
Relationship: The concepts are related as they both describe ensuring or confirming compatibility.
Criteria: Ensuring compatibility by the designer.
Phrase: Ensure compatibility.

14.
Concepts: ask for usage instructions, requesting usage guidance
Relationship: The concepts are related as they both describe requesting guidance on using the Physics Lab.
Criteria: A user requests instructions or guidance on using the Physics Lab.
Phrase: Request usage guidance.

15.
Concepts: power supply capability, supporting multiple power sources
Relationship: The concepts are related as they both describe highlighting a feature or capability of the software.
Criteria: The designer highlights a feature or capability of the software that supports multiple types of power supply.
Phrase: Highlight power supply capability.

16.
Concepts: explains bidirectional conversion, explained bidirectional conversion benefits
Relationship: The concepts are related as they both describe explaining or describing the concept of bidirectional conversion.
Criteria: A designer explains or describes the concept of bidirectional conversion.
Phrase: Explain bidirectional conversion.

17.
Concepts: detail simulated experiment assessment, simulated experiment assessment details
Relationship: The concepts are related as they both describe providing detailed information about a simulated experiment assessment feature.
Criteria: The designer provides detailed information about a simulated experiment assessment feature.
Phrase: Detail simulated experiment assessment.

18.
Concepts: explain simulation detail, clarifying simulation features, explaining simulation features
Relationship: The concepts are related as they all describe explaining or clarifying simulation features.
Criteria: A designer explains or clarifies a feature or functionality of the physics lab simulation.
Phrase: Explain simulation features.

19.
Concepts: interdisciplinary exploration, openness to interdisciplinary exploration
Relationship: The concepts are related as they both describe encouraging or expressing openness to interdisciplinary exploration.
Criteria: A designer encourages exploration of interdisciplinary subjects.
Phrase: Encourage interdisciplinary exploration.

20.
Concepts: show understanding
Relationship: The concepts are related as they all describe showing understanding or empathy.
Criteria: Showing understanding or empathy towards the designers' situation or challenges.
Phrase: Show understanding.

21.
Concepts: support user engagement
Relationship: The concepts are related as they both describe supporting or enabling user engagement with the software.
Criteria: The designer supports or enables user engagement with the software.
Phrase: Support user engagement.

22.
Concepts: technical inquiry
Relationship: The concepts are related as they both describe inquiring about technical conditions or capabilities.
Criteria: Inquires about the technical conditions or capabilities of a class or environment.
Phrase: Inquire about technical conditions.

23.
Concepts: usability emphasis
Relationship: The concepts are related as they both describe emphasizing the importance of usability in software design.
Criteria: A designer emphasizes the importance of usability.
Phrase: Emphasize usability.

24.
Concepts: manage expectations
Relationship: The concepts are related as they both describe managing or setting expectations about the software's capabilities or limitations.
Criteria: Designer manages or sets expectations about the software's capabilities or limitations.
Phrase: Manage expectations.

25.
Concepts: quality advocacy
Relationship: The concepts are related as they both describe advocating for high-quality work or outcomes.
Criteria: Advocating for high-quality work or outcomes.
Phrase: Advocate for quality.

26.
Concepts: assess user environment
Relationship: The concepts are related as they both describe assessing the user's environment or setup.
Criteria: Assessment is made of the user's environment or setup.
Phrase: Assess user environment.

27.
Concepts: maintains engagement
Relationship: The concepts are related as they both describe maintaining engagement with the community.
Criteria: A designer maintains engagement with the community.
Phrase: Maintain engagement.

28.
Concepts: sharing personal experiences
Relationship: The concepts are related as they both describe sharing personal experiences that affect community dynamics.
Criteria: A user shares a personal experience that affects community dynamics.
Phrase: Share personal experiences.

29.
Concepts: gathering user feedback
Relationship: The concepts are related as they both describe asking users about their experiences, opinions, or feedback on the Physics Lab platform.
Criteria: Asking users about their experiences, opinions, or feedback on the Physics Lab platform.
Phrase: Gather user feedback.

30.
Concepts: confirm update
Relationship: The concepts are related as they both describe confirming updates, releases, or changes to the platform.
Criteria: Designers confirm updates, releases, or changes to the platform.
Phrase: Confirm updates.

31.
Concepts: maintaining positive interaction
Relationship: The concepts are related as they both describe maintaining a positive and friendly tone in interaction.
Criteria: The speaker maintains a positive and friendly tone in their interaction.
Phrase: Maintain positive interaction.

32.
Concepts: identifying user role
Relationship: The concepts are related as they both describe identifying a user's role or profession.
Criteria: A designer identifies a user's role or profession.
Phrase: Identify user role.