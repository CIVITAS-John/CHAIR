You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. If a sub-code includes another, use the broader one. If sub-codes are parallel, write one that covers both.
Write clear and generalizable labels and criteria for each code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization (e.g. "social interaction" instead of "interaction", "communication approach" instead of "communication").
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (12 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {Consolidated criteria of code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
12.
Relationship: {The logical relationship between sub-codes in code 12}
Criteria: {Consolidated criteria of code 12}
Label: {A consolidated label of code 12}
Category: {2-4 words for code 12}
---
~~~
1. discussion of further interests, future development discussion.
- Discussing or exploring potential interests or topics beyond the current focus.
- Discussions about potential future enhancements, additions, or new fields of application for the software or tools, beyond the current scope.

2. user suggestions, request for resources.
- Instances of users providing suggestions or ideas for the Physics Lab.
- Instances where community members explicitly ask for specific resources or demonstrations to be included in the Physics Lab.

3. download queries, software accessibility.
- Queries from users on how to access or download the software or updates
- Instances of accessing, downloading, or inquiring about the software

4. user inquiry, question asking.
- Users asking questions about the software or hardware
- Asking a question about the app or software

5. resource access, resource accessibility.
- Providing information about accessing resources or features
- Discusses how easily users can access necessary resources and support materials.

6. limitation discussion, explain current version's limitation.
- Discussing limitations of a solution
- Explaining limitations or constraints of the current version

7. system requirements, compatibility inquiries.
- Discussions about system requirements and software compatibility
- Providing information about compatibility or technical specifications

8. user needs, explaining the need.
- Expressing needs or requirements for the software
- Explaining the necessity or importance of a particular task or feature.

9. interaction affordances, interface interaction and choices.
- Discussions about the software's features, functionality, or affordances that enable or constrain user interactions.
- Conversations related to user interaction with the software interface

10. context awareness, usability challenges and constraints.
- Discussions or considerations of the users' contexts, environments, or constraints that influence the software's design or usage.
- Exploring challenges users face in interacting with the software

11. software usability and evaluation, usability and accessibility.
- Comments about software ease of use, practicality, or user-friendliness
- Quotes or evidence evaluating the software's usability, stability, and accessibility for both teachers and students.

12. validation, reach a conclusion for the solution based on user's response.
- Confirming or validating a diagnosis or solution
- Drawing a conclusion based on user feedback or response.
===
---
Categories: 
* Community Engagement
* Resource Accessibility
* Software Development
* User Experience
* Contextual Considerations

Definitions for each code:

1.
Relationship: Parallel sub-codes
Criteria: Discussion of potential interests or topics beyond the current focus, and discussion about potential future enhancements or additions to the software or tools.
Label: Future Development Discussion
Category: Software Development

2.
Relationship: Parallel sub-codes
Criteria: Providing suggestions or ideas for the Physics Lab, and explicitly asking for specific resources or demonstrations to be included.
Label: User Suggestions
Category: Community Engagement

3.
Relationship: Inclusive sub-codes
Criteria: Queries about accessing or downloading the software or updates, and instances of accessing, downloading, or inquiring about the software.
Label: Software Accessibility
Category: Resource Accessibility

4.
Relationship: Parallel sub-codes
Criteria: Asking questions about the software or hardware, and asking a question about the app or software.
Label: User Inquiry
Category: Community Engagement

5.
Relationship: Parallel sub-codes
Criteria: Providing information about accessing resources or features, and discussing how easily users can access necessary resources and support materials.
Label: Resource Access
Category: Resource Accessibility

6.
Relationship: Parallel sub-codes
Criteria: Discussing limitations of a solution, and explaining limitations or constraints of the current version.
Label: Limitation Discussion
Category: Software Development

7.
Relationship: Parallel sub-codes
Criteria: Discussing system requirements and software compatibility, and providing information about compatibility or technical specifications.
Label: System Requirements
Category: Software Development

8.
Relationship: Parallel sub-codes
Criteria: Expressing needs or requirements for the software, and explaining the necessity or importance of a particular task or feature.
Label: User Needs
Category: User Experience

9.
Relationship: Parallel sub-codes
Criteria: Discussing the software's features, functionality, or affordances that enable or constrain user interactions, and conversations related to user interaction with the software interface.
Label: Interaction Affordances
Category: User Experience

10.
Relationship: Parallel sub-codes
Criteria: Discussing or considering the users' contexts, environments, or constraints that influence the software's design or usage, and exploring challenges users face in interacting with the software.
Label: Context Awareness
Category: Contextual Considerations

11.
Relationship: Parallel sub-codes
Criteria: Comments about software ease of use, practicality, or user-friendliness, and evaluating the software's usability, stability, and accessibility for both teachers and students.
Label: Software Usability
Category: User Experience

12.
Relationship: Parallel sub-codes
Criteria: Confirming or validating a diagnosis or solution, and drawing a conclusion based on user feedback or response.
Label: Validation
Category: Software Development