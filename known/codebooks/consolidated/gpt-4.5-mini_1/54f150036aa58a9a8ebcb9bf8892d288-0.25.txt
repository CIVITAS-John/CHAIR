You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: seek guidance, seek usage instructions
- Users inquire about the availability of user manuals or guides.
- Users request guidance on how to effectively use specific versions of the software.

2.
Concepts: update inquiry, ask for updates
- A user inquires about the possibility of updates in the near future.
- Users inquire about upcoming updates or changes to the software.

3.
Concepts: question, seek information
- Users ask questions related to the software or its features.
- Users ask questions to seek information or clarification about the software.

4.
Concepts: suggest new features, request feature improvements
- Users propose additional functionalities and provide feedback on features for the software.
- Users request specific features or additional experiments for the software.

5.
Concepts: solicit user feedback, solicit user suggestions
- The designer invites users to provide feedback and suggestions for future updates.
- The designer invites users to share their suggestions or requirements for the software.

6.
Concepts: integrate user feedback, incorporate user feedback
- Instances where user feedback is acknowledged and incorporated into the design process.
- The designer acknowledges and commits to incorporating user feedback into future updates.

7.
Concepts: clarify user requests, clarification question
- The designer asks follow-up questions to clarify a user's request or situation.
- A designer asks users to clarify any issues they have experienced with the app.

8.
Concepts: announce updates, announce planned updates
- The designer announces new features and invites community input on updates.
- The designer communicates plans for upcoming features and invites community input.

9.
Concepts: inform about new versions, announce software updates
- The designer communicates the release of a new version and its updates to the community.
- The designer informs users about software versions, new features, and specific component updates.

10.
Concepts: version details, explain new features
- A designer shares specific details about the current version of the app.
- The designer shares detailed information about new features and updates in the app.

11.
Concepts: list features, confirm feature updates
- The designer lists new and upcoming features included in software updates.
- The designer confirms the existence and upcoming inclusion of feature updates.

12.
Concepts: communicate updates, provide status updates
- The designer informs users about the status and expected timelines for software updates.
- The designer informs users about the status and progress of software updates.
===
---
Definitions for each code (12 in total):
1.
Concepts: seek guidance, seek usage instructions
Relationship: Users are actively looking for help and instructions to better understand and utilize the software.
Criteria: Users inquire about user manuals and request guidance on effectively using specific software versions.
Phrase: Seek guidance on software usage.

2.
Concepts: update inquiry, ask for updates
Relationship: Users are interested in the future developments of the software and want to stay informed.
Criteria: A user inquires about the possibility of upcoming updates or changes to the software.
Phrase: Inquire about software updates.

3.
Concepts: question, seek information
Relationship: Users are engaging in a dialogue to gain clarity and understanding about the software.
Criteria: Users ask questions to seek information or clarification regarding the software and its features.
Phrase: Ask questions for information.

4.
Concepts: suggest new features, request feature improvements
Relationship: Users are providing input to enhance the software by suggesting new functionalities and improvements.
Criteria: Users propose additional functionalities and request specific features or experiments for the software.
Phrase: Suggest features for improvement.

5.
Concepts: solicit user feedback, solicit user suggestions
Relationship: The designer is actively seeking input from users to enhance the software based on their experiences.
Criteria: The designer invites users to provide feedback and share suggestions for future updates.
Phrase: Solicit user feedback.

6.
Concepts: integrate user feedback, incorporate user feedback
Relationship: There is a commitment to using user feedback as a basis for design decisions and improvements.
Criteria: User feedback is acknowledged and incorporated into the design process for future updates.
Phrase: Incorporate user feedback.

7.
Concepts: clarify user requests, clarification question
Relationship: The designer is ensuring clear communication by seeking to understand user needs better.
Criteria: The designer asks follow-up questions to clarify user requests or issues experienced with the app.
Phrase: Clarify user requests.

8.
Concepts: announce updates, announce planned updates
Relationship: The designer is communicating future changes and inviting community engagement in the update process.
Criteria: The designer announces new features and communicates plans for upcoming features while inviting community input.
Phrase: Announce planned updates.

9.
Concepts: inform about new versions, announce software updates
Relationship: The designer is keeping users informed about the latest developments and changes in the software.
Criteria: The designer communicates the release of new versions and updates to the community.
Phrase: Inform about software updates.

10.
Concepts: version details, explain new features
Relationship: The designer is providing detailed information to help users understand the current software version and its features.
Criteria: The designer shares specific details about the current version and new features of the app.
Phrase: Explain new version features.

11.
Concepts: list features, confirm feature updates
Relationship: The designer is providing transparency about the features included in software updates.
Criteria: The designer lists new and upcoming features and confirms their inclusion in software updates.
Phrase: List and confirm features.

12.
Concepts: communicate updates, provide status updates
Relationship: The designer is maintaining open lines of communication regarding the progress of software updates.
Criteria: The designer informs users about the status and expected timelines for software updates.
Phrase: Provide status updates.
---