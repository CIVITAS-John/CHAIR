You are an expert in thematic analysis clarifying the criteria of qualitative codes. Do not attempt to merge codes now.
Consider provided quotes, and note that each quote is independent of others.
Write clear and generalizable criteria for each code and do not introduce unnecessary details.
If necessary, refine labels to be more accurate, but do not repeat yourself.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (32 in total):
1. 
Criteria: {Who did what, and how for code 1}
Label: {A descriptive label of code 1}
...
32.
Criteria: {Who did what, and how for code 32}
Label: {A descriptive label of code 32}
---
~~~
1.
Label: preferring to create the code skeleton before involving ai
Quotes:
- E04: I just like being able to kind of, like, iteratively build it. The thing that I always do when I create a model is I do, like, the initial command. I'll set up and go here. I'll go ahead and after I kind of set up the buttons, I'll put the functions behind them back here in the interface. (interviewer's observation) E04 creates the code skeleton before asking ChatGPT. He has a clear idea & established process of building ABMs.

2.
Label: expecting it to find perceptron model
Quotes:
- E04: I know that Perceptron model exists in the NetLogo model library. So it's interesting to me that it didn't pull that up, but it could be that I used like the wrong verbiage, but it doesn't understand what I'm trying to do. (interviewer's observation) E04 expects ChatLogo to find "Perceptron" model from the library but it does not. He evaluates the search results of the AI.

3.
Label: with experts desiring more flexibility and control
Quotes:
- E04: I use it a lot for developing like, equations for specific like, aspects of agent-based models that I create. (interviewer's observation) Helpful for creating equations

4.
Label: suggests system support
Quotes:
- E01: Depending on what you do and how busy you are and the higher ranking people are, the more busy they are, the longer it is between sessions. So you make some notes on little yellow, sticky cinnamon. And then you go back to your administrator job for two months, and then some other project comes up. And then six months later, you come back. Okay, now, where was I? (interviewer's observation) E01's reflection on how professionals learn - they learn in fragments, in fragmented time blocks and need support from the system to remind them where they were.

5.
Label: ability
Quotes:
- E01: I think the key is to not replace human judgment and ability, but to find a fast way to increase human capability and judgment. (interviewer's observation) Augmentation of human capabilities & building on human judgement. Subjectivity of humanity?

6.
Label: requests ai to generate a specific program
Quotes:
- E01: "please write a netlogo program that produces a checker board with black and white squares?" (interviewer's observation) E01 asks ChatLogo to create a checkerboard pattern.

7.
Label: ai can limit options & points to different  sometimes wrong  directions
Quotes:
- E01: Well, I cut the entire user's question. It figured out what I wanted. I didn't even tell it what I wanted. It just told me. (interviewer's observation) ChatGPT could infer E01's need from the input context.

8.
Label: discusses the significance of writing clear instructions for effective ai utilization
Quotes:
- E01: In terms of learning experiences, like ramping up to using an assistant wrapping up to using ChatGPT might have some sort of evaluates. How well can you write instructions for another person? Some people just don't know how to conceptualize a problem. (interviewer's observation) E01 discusses how "writing instructions" is a capability that is missing on many people, and that is key to work with AI.

9.
Label: valuing error code clarification
Quotes:
- E04: I think that it's nice that it's, it clarifies error codes. I think that's probably where people who are new get stuck the most is trying to figure out the syntax and all the different errors. (interviewer's observation) The capability to clarify the errors.

10.
Label: comparing to stack exchange and net logo listserv
Quotes:
- E04: I'll go on Stack Exchange or Stack Overflow, I'm part of the NetLogo listserv, but obviously there's a delay there. So in the instance that I need immediate feedback, it is really helpful. (interviewer's observation) Nice to have immediate feedback.

11.
Label: values debugging and unit testing
Quotes:
- E04: It includes debugging, it is actually trying to incorporate like a unit test, which is really cool and really helpful, especially for beginners, because they can kind of, you know, check their inputs. Beginners, everyone really. They can debug their code appropriately. (interviewer's observation) Debugging capability.

12.
Label: benefits of commented code
Quotes:
- E01: I don't want chat GPT to write 27 operations in one line and show how brilliant it is. I wanted to separate out the code and, and it did a good job of not only did it write the code, but it commented the code. And then in addition to commenting the code externally, it did documentation. (interviewer's observation) ChatGPT tends to provide comments and documentation. Generated code is easy to read.

13.
Label: regularly evaluating outputs
Quotes:
- E04: Sometimes it'll give me instructions and sometimes it'll just give me the code and then sometimes it'll tell me to use R extensions or something like that. It is random in that regard, it's not deterministic in terms of what result you're going to get. (interviewer's observation) E04 regularly evaluates the AI responses and thinks that it is not deterministic.

14.
Label: cautiously reviewing error messages
Quotes:
- E01: (no verbal response) (interviewer's observation) E01 reads error messages before making a choice.

15.
Label: envisioning ai assisted help seeking
Quotes:
- E01: Let's suppose that I'm trying to debug this error and I have trouble and I can't figure it out. So my next step would be to go to the user group. So if I had a button here that said please explain my situation so that I can paste it to the user group. User is attempting to write this. This is the code I wrote. This is the error it generates that the user doesn't understand. Can any human figure out what's wrong? I just press a button and it says, okay, paste it to the user group and we're done. And it's hard for users. (interviewer's observation) E01 suggests that AI could potentially help users write "help" posts that summarizes the situation: the need, the code, the error that the user does not understand.

16.
Label: demonstrating diverse language knowledge
Quotes:
- E01: I started programming in 1964 at IBM. ... And since then I have programmed in production code in at least 20 different software languages. (interviewer's observation) E01's prior experiences in computer programming in general.

17.
Label: critiquing excessive self reliance
Quotes:
- E01: But you know, again, you have this culture, especially in the US of do your own work. People get a little too obsessive about doing their own work.  (interviewer's observation) E01's reflection on U.S. individualistic working culture.

18.
Label: discusses proper help seeking practices
Quotes:
- E01: if you approach the user group politely, graciously, and instead of dropping your entire code on it, you go, I narrowed it down to this. I read this documentation. I tried these eight things with this answer and I'm perplexed. If somebody goes, they paste their problem and it's clearly their homework and they want someone else to do it for them. No, I'm not going to help with that. (interviewer's observation) E01's reflection on proper practices to seek online help: do your own work and clearly describe what you need/tried.

19.
Label: debug: back and forth effort
Quotes:
- E01: This is what conversations with ChatGPT typically look like. I had to go through about eight separate times to get all the errors out of it.  But, but look at how it structured the code. Look at the things that did look what you could learn from this. This is valuable. (interviewer's observation) Users may benefit from the iterative debugging process during working with AI, even though AI might give wrong answers.

20.
Label: demand for expertise & experience
Quotes:
- E01: Part of this, the user needs a little practice in debugging their own code. There should be some exercises before you ask GPT to do this.  (interviewer's observation) Users need practice in debugging their own code and need to have exercises before asking AI.

21.
Label: valuing integrated documentation search
Quotes:
- E04: And it could take a lot of time to like search the documentation and go online and try and figure out all those answers and just to have it like right there. So you can kind of stay within the task is really nice. (interviewer's observation) The capability to search for documentation and read it inside the workspace: esp. beneficial for novices.

22.
Label: advises users to exercise caution in interpreting ai generated advice
Quotes:
- E01: Some of this advice may be wrong. Use your good judgment. This is like Apple maps in 2010 or whatever, that tells you to turn right into the river and you have to go. (interviewer's observation) Users need to use their own judgment to evaluate ChatGPT's responses.

23.
Label: challenges in seeking help
Quotes:
- E01: I couldn't (help the novice) because when a beginner just posts a big block of code, it says there's something wrong with this. (interviewer's observation) Challenges for novices to seek help: they simply post chunks of code without background information.

24.
Label: finds ai responses random and non deterministic
Quotes:
- E04: Sometimes it'll give me instructions and sometimes it'll just give me the code and then sometimes it'll tell me to use R extensions or something like that. It is random in that regard, it's not deterministic in terms of what result you're going to get. (interviewer's observation) E04 regularly evaluates the AI responses and thinks that it is not deterministic.

25.
Label: chooses to copy ai output for implementation
Quotes:
- E04: Oh and you can run it. That's cool. (interviewer's observation) E04 reads the AI output and decides to copy & paste it although he could also run it.

26.
Label: indicating a preference for accessible and user friendly support
Quotes:
- E04: It seems to explain things pretty well, it does not seems to be overly technical. (interviewer's observation) Provides clear, less technical explanations.

27.
Label: identifies inability to fix certain errors
Quotes:
- E04: And then like the only other thing I didn't like was, you know, kind of how it was getting stuck on itself and it wasn't able to fix that one error. (interviewer's observation) Could get stuck in a loop and cannot fix that.

28.
Label: experiences frustration with ai limitations
Quotes:
- E04: And then like the only other thing I didn't like was, you know, kind of how it was getting stuck on itself and it wasn't able to fix that one error. (interviewer's observation) Could get stuck in a loop and cannot fix that.

29.
Label: asking the interviewer to scroll slowly
Quotes:
- E01: "Also a good idea because we did not ask it to do that." (interviewer's observation) E01 reads and evaluates the ChatGPT code. Asks Interviewer to scroll slowly so he could read in detail.

30.
Label: attempting to resolve issues independently
Quotes:
- E04: (no verbal response) (interviewer's observation) E04 reads through the code and tries to debug with himself when the generated code does not do what it does.

31.
Label: addressing the limitations of current ai implementations
Quotes:
- E01: And some of them we still haven't been doing like hive mind, like how we are going to have the machine learning back from the user feedback or just from the compiler, right? You generate some code, but it doesn't work. So we have to tell you that this time, you didn't work. (interviewer's observation) The current ChatGPT implementation cannot check the generated code with external information (compiler, etc.) (partially solved by the Interpreter plugin, but only Python at this time)

32.
Label: valuing efficiency in the workflow
Quotes:
- E04: I really liked how, like the code that it generates, if you could just kind of place that into the model automatically.  (interviewer's observation) The capability to put into the model automatically.
===
Here are the definitions for each code:

1. 
Criteria: The participant creates a code skeleton before using AI, indicating a clear idea and established process of building ABMs.
Label: Preferring manual setup before AI involvement

2. 
Criteria: The participant expects AI to find specific models or results, evaluating the search results and capabilities of the AI.
Label: Expecting AI to retrieve specific models

3. 
Criteria: The participant desires more flexibility and control when using AI in their work.
Label: Desiring more control and flexibility

4. 
Criteria: The participant suggests that the system should provide support for professionals who learn in fragmented time blocks.
Label: Need for system support for fragmented learning

5. 
Criteria: The participant emphasizes the importance of augmenting human capabilities and judgment with AI.
Label: Augmenting human capabilities with AI

6. 
Criteria: The participant requests AI to generate a specific program or code.
Label: Requesting AI-generated code

7. 
Criteria: The participant notes that AI can limit options and sometimes provide incorrect directions.
Label: AI limitations and potential errors

8. 
Criteria: The participant highlights the importance of writing clear instructions for effective AI utilization.
Label: Importance of clear instructions for AI

9. 
Criteria: The participant values the capability of AI to clarify error codes.
Label: Valuing error code clarification

10. 
Criteria: The participant compares AI to other resources, such as Stack Exchange and NetLogo listserv, valuing immediate feedback.
Label: Comparing AI to other resources

11. 
Criteria: The participant values the debugging and unit testing capabilities of AI.
Label: Valuing debugging and unit testing

12. 
Criteria: The participant appreciates the benefits of commented code provided by AI.
Label: Benefits of commented code

13. 
Criteria: The participant regularly evaluates AI outputs, noting that they can be random and non-deterministic.
Label: Regularly evaluating AI outputs

14. 
Criteria: The participant cautiously reviews error messages before making a choice.
Label: Cautiously reviewing error messages

15. 
Criteria: The participant envisions AI-assisted help seeking, where AI summarizes the situation and provides a clear request for help.
Label: Envisioning AI-assisted help seeking

16. 
Criteria: The participant demonstrates diverse language knowledge and prior experiences in computer programming.
Label: Diverse language knowledge and experience

17. 
Criteria: The participant critiques excessive self-reliance and emphasizes the importance of seeking help.
Label: Critiquing excessive self-reliance

18. 
Criteria: The participant discusses proper help-seeking practices, such as doing one's own work and clearly describing the problem.
Label: Proper help-seeking practices

19. 
Criteria: The participant values the iterative debugging process with AI, even when AI provides incorrect answers.
Label: Valuing iterative debugging with AI

20. 
Criteria: The participant demands expertise and experience from users, emphasizing the need for practice in debugging their own code.
Label: Demanding expertise and experience

21. 
Criteria: The participant values integrated documentation search and access to documentation within the workspace.
Label: Valuing integrated documentation search

22. 
Criteria: The participant advises users to exercise caution when interpreting AI-generated advice.
Label: Advising caution with AI-generated advice

23. 
Criteria: The participant notes the challenges of seeking help, particularly for novices who may not provide sufficient context.
Label: Challenges in seeking help

24. 
Criteria: The participant finds AI responses to be random and non-deterministic, requiring regular evaluation.
Label: Finding AI responses non-deterministic

25. 
Criteria: The participant chooses to copy AI output for implementation, rather than running it directly.
Label: Copying AI output for implementation

26. 
Criteria: The participant indicates a preference for accessible and user-friendly support from AI.
Label: Preferring accessible and user-friendly support

27. 
Criteria: The participant identifies the inability of AI to fix certain errors.
Label: Identifying AI limitations in error fixing

28. 
Criteria: The participant experiences frustration with AI limitations, such as getting stuck in a loop.
Label: Experiencing frustration with AI limitations

29. 
Criteria: The participant asks the interviewer to scroll slowly, indicating a desire to carefully evaluate AI-generated code.
Label: Evaluating AI-generated code carefully

30. 
Criteria: The participant attempts to resolve issues independently before seeking help.
Label: Attempting independent problem-solving

31. 
Criteria: The participant addresses the limitations of current AI implementations, such as the inability to check generated code with external information.
Label: Addressing AI implementation limitations

32. 
Criteria: The participant values efficiency in the workflow, desiring automated integration of AI-generated code into the model.
Label: Valuing workflow efficiency