You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (48 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
48. 
Concepts: {Repeat the input 48}
Relationship: {What is logical relationship between concepts in code 48, or N/A if not applicable}
Criteria: {Who did what, and how for code 48}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: sharing identity per request, introduce teacher identity and experience, share and respond to teaching experiences
- A user shares their teaching background when prompted.
- A user identifies their role and shares their teaching background, including grade levels and years of experience.
- Users share their teaching backgrounds and respond to inquiries with specific information.

2.
Concepts: confirm role and establish credibility, confirm and share professional backgrounds
- Users confirm their role as a teacher and establish their teaching background to gain trust.
- Users confirm their professional status and share backgrounds to establish credibility.

3.
Concepts: agree with focus areas, agree and support suggestions
- A user expresses agreement with identified focus areas.
- Users express agreement with and support previous suggestions.

4.
Concepts: acknowledge and appreciate help, acknowledge and utilize resources
- Users express thanks and appreciation towards others for assistance.
- Users express gratitude for and acknowledge shared resources.

5.
Concepts: positive response, engage in positive interactions
- Users respond positively to inquiries or comments made by others.
- Users engage in affirming exchanges and express gratitude within the community.

6.
Concepts: clarify software versions, ask a question about the app
- Users seek clarification on the type of version available.
- A user inquires specifically about the version of the application.

7.
Concepts: school needs, provide context about school resources
- User outlines the needs of their school regarding technology and resources.
- Users provide context regarding school technology and resources.

8.
Concepts: educational context, reflect on experiences
- Designer and user discuss the educational context of using the software.
- Designers elaborate on previous experiences and share insights related to using the software in educational settings.

9.
Concepts: request physics features, request additional experiments
- Instances where users request new features or improvements for the Physics Lab tool.
- Users suggest the inclusion of additional content or features.

10.
Concepts: gather user input and insights, gather user opinions for memory
- Designers solicit user feedback before proceeding with development.
- Designers express the need to gather user opinions for future decisions.

11.
Concepts: react to feedback positively, recognize and respond to user feedback
- Designers react positively to feedback and acknowledge suggestions.
- Designers acknowledge user comments, express gratitude, and respond to feedback for improvements.

12.
Concepts: engage in queries and responses, respond to community questions
- Users ask questions and receive answers from designers or community members.
- Designers provide answers to community questions regarding compatibility and respond to initial inquiries.

13.
Concepts: respond, respond to user inquiries
- Designers provide responses to user inquiries and share relevant updates.
- Designers provide direct answers to user questions about design support and related inquiries.

14.
Concepts: elaborate on suggestions, encourage elaboration of suggestions
- Users provide additional suggestions or insights related to discussions.
- Designers elaborate on user suggestions and encourage users to provide more detailed feedback.

15.
Concepts: ask follow-up questions, seek confirmation for accuracy
- Designers ask follow-up questions to clarify user experiences.
- Designers seek clarification on specific details from users.

16.
Concepts: consult with teachers, ask about teachers' needs
- Designers seek input from teachers regarding content or features.
- Designers inquire about specific needs or preferences of teachers in the community.

17.
Concepts: seek context and needs, gather context about users
- Designers seek additional context from users to understand their needs.
- Designers inquire about users' teaching situations and professional roles.

18.
Concepts: identify roles, inquire about user roles
- Instances where users or designers identify their roles, contributing to the problem-solving process.
- Designers inquire about the userâ€™s role to tailor interactions.

19.
Concepts: share images and experiences, share knowledge for design
- Designers and users engage in sharing images and experiences.
- Designers share knowledge about features, and users share experiences influencing design.

20.
Concepts: informal interaction, build rapport with users
- The designer and users engage in casual, friendly interactions.
- Designers engage in light conversation to build rapport with users.

21.
Concepts: seek community input, cultivate community involvement
- Designers actively seek feedback and consult community members for input on projects.
- Designers encourage community participation and feedback for future updates.

22.
Concepts: offering co-designing, acknowledge community needs
- Designers indicate their intention to involve community members in the design process.
- Designers connect their decisions to the community's needs and interests.

23.
Concepts: promote open communication, encourage group communication
- A designer promotes open communication and feedback within the community.
- Designers communicate updates and encourage direct communication within the group.

24.
Concepts: explain current focus, establish development priorities
- A designer outlines the current priorities in the development process.
- Designers outline priorities for completing project sections and accept suggestions for prioritizing specific features.

25.
Concepts: development goals, set development scope
- The designer outlines objectives and future functionalities for the software.
- Designers define the boundaries and focus areas for future development efforts.

26.
Concepts: promise future consultations, announce future consultations
- Designers commit to consulting users before implementing changes.
- Designers indicate plans for future collaboration with the community.

27.
Concepts: discuss ongoing research, engage in future planning discussions
- Designers share current research efforts and communicate about ongoing research and future plans.
- Designers discuss future interests and share insights about potential developments to engage users.

28.
Concepts: outline update details, outline future developments
- Designers provide details about the extent of upcoming updates and an overview of the content included.
- Designers outline plans for future developments and list new features planned for updates.

29.
Concepts: articulate design rationale, explain design principles
- Designers explain the objectives and rationale behind the app's design and user experience.
- Designers articulate the guiding principles and philosophy behind the software's design and functionality.

30.
Concepts: outline release schedules, update on release timelines
- Designers outline schedules for upcoming software releases and provide timelines for updates.
- Designers communicate updates and expected timelines regarding software releases and development progress.

31.
Concepts: explain development delays, clarify development complexities
- Designers explain reasons for delays in software updates or feature releases based on complexity.
- Designers discuss the complexities of development tasks and clarify expected timelines for completion.

32.
Concepts: share platform updates, clarify version details
- Designers specify the version of the application and communicate updates specific to different platforms.
- Designers provide detailed information about the application version and clarify the specific version shared with the community.

33.
Concepts: explain new features, share development updates
- Designers explain new features being developed and the ongoing efforts in feature development.
- Designers detail specific updates and share information about the latest development features.

34.
Concepts: share internal updates, share progress updates
- Designers provide updates regarding changes to existing features and share visual updates to highlight progress.
- Designers update the community on the progress of software development to maintain transparency about ongoing work.

35.
Concepts: express user anticipation, engage with the development process
- Users express eagerness or curiosity about the timing of updates to the application, indicating their engagement.
- Users inquire about timelines and express curiosity regarding platform development.

36.
Concepts: address solution limitations, discuss technical constraints
- Designers note limitations of current solutions and discuss ways to address them.
- Designers discuss technical limitations and identify constraints posed by outdated technology.

37.
Concepts: consider hardware limitations, explain software limitations
- A user suggests considering hardware limitations in software design.
- Designers acknowledge potential issues and explain limitations regarding functionality and compatibility.

38.
Concepts: specifics, inquire about platform compatibility
- A user provides specific information about their system compatibility.
- Users seek information about the PC version and compatibility.

39.
Concepts: provide technical specifications, specify system requirements
- Designers provide technical specifications and clear compatibility information regarding the software.
- Designers specify system requirements for using the software effectively and consider technical requirements for compatibility.

40.
Concepts: explain development process, consider future compatibility
- A designer discusses the theoretical compatibility of the application with older systems.
- Designers reflect on the need for technical considerations and discuss future compatibility with older systems.

41.
Concepts: confirm compatibility, provide conditional advice
- Designers speculate on compatibility, suggest checking it, and confirm compatibility with specific devices.
- Designers provide advice on compatibility or usage conditions based on user inquiries.

42.
Concepts: feature flexibility, adjust software features
- Designers indicate that features can be adjusted or customized according to user preferences.
- Designers indicate adjustments needed for specific features and detail changes made to component properties.

43.
Concepts: collaborate on problem solving, facilitate troubleshooting discussions
- Moments where designers and users work together to address issues.
- Users engage in problem-solving discussions, and designers encourage users to discuss their experiences with software issues.

44.
Concepts: offer user support, offer ongoing support
- Designers offer assistance and provide technical support or information about the software.
- The designer encourages users to report any issues they encounter while using the software.

45.
Concepts: direct users to resources, share access and download information
- Designers direct users to locations where they can find resources or downloads.
- Designers provide access information and share resources related to downloads.

46.
Concepts: inquire about software access, request assistance for downloads
- Users inquire about how to access or download the software.
- Users request assistance with downloading the software.

47.
Concepts: clarify technical features, inform about functionality
- Designers clarify how touch screens interact with the software and explain existing features.
- Designers address the functionality of touch screens and discuss their interaction with the software.

48.
Concepts: explain technical details, explaining technical artifacts
- Designers discuss technical aspects of software features and detail how to simulate certain features.
- Designers explain or clarify the nature of technical tools or resources available.
===
---
Definitions for each code (48 in total):
1.
Concepts: sharing identity per request, introduce teacher identity and experience, share and respond to teaching experiences
Relationship: Users share their identities and teaching experiences in response to prompts, establishing credibility and context.
Criteria: Users share their teaching backgrounds and respond to inquiries about their experiences when prompted.
Phrase: Share teaching identity and experiences.

2.
Concepts: confirm role and establish credibility, confirm and share professional backgrounds
Relationship: Users confirm their professional roles and backgrounds to establish trust within the community.
Criteria: Users confirm their teaching roles and share their professional backgrounds to gain trust.
Phrase: Establish professional credibility.

3.
Concepts: agree with focus areas, agree and support suggestions
Relationship: Users demonstrate consensus on focus areas and support each other's suggestions.
Criteria: Users express agreement and support for identified focus areas and suggestions.
Phrase: Support community consensus.

4.
Concepts: acknowledge and appreciate help, acknowledge and utilize resources
Relationship: Users express gratitude for assistance received and recognize the value of shared resources.
Criteria: Users acknowledge help and express appreciation for shared resources.
Phrase: Express gratitude for assistance.

5.
Concepts: positive response, engage in positive interactions
Relationship: Users engage in affirming and positive exchanges within the community.
Criteria: Users respond positively to comments and express gratitude in interactions.
Phrase: Engage in positive interactions.

6.
Concepts: clarify software versions, ask a question about the app
Relationship: Users seek specific information about software versions to clarify their understanding.
Criteria: Users inquire about the available versions of the application for clarity.
Phrase: Seek software clarification.

7.
Concepts: school needs, provide context about school resources
Relationship: Users outline their school's needs and provide context regarding available resources.
Criteria: Users describe their schoolâ€™s technology needs and available resources.
Phrase: Provide context about school needs.

8.
Concepts: educational context, reflect on experiences
Relationship: Designers and users discuss the educational context and share insights from their experiences.
Criteria: Users and designers reflect on educational contexts and share relevant experiences.
Phrase: Share educational insights.

9.
Concepts: request physics features, request additional experiments
Relationship: Users express their desires for new features or content related to the Physics Lab tool.
Criteria: Users request new features and suggest additional experiments for the tool.
Phrase: Request new features.

10.
Concepts: gather user input and insights, gather user opinions for memory
Relationship: Designers solicit feedback from users to inform future development.
Criteria: Designers gather user input and insights to guide future decisions.
Phrase: Solicit user feedback.

11.
Concepts: react to feedback positively, recognize and respond to user feedback
Relationship: Designers acknowledge and respond positively to user feedback.
Criteria: Designers react positively to user feedback and acknowledge suggestions.
Phrase: Acknowledge user feedback.

12.
Concepts: engage in queries and responses, respond to community questions
Relationship: Users ask questions, and designers provide answers, facilitating community engagement.
Criteria: Users pose questions, and designers respond to community inquiries.
Phrase: Facilitate community engagement.

13.
Concepts: respond, respond to user inquiries
Relationship: Designers provide necessary information in response to user inquiries.
Criteria: Designers answer user questions and share relevant updates.
Phrase: Address user inquiries.

14.
Concepts: elaborate on suggestions, encourage elaboration of suggestions
Relationship: Users and designers engage in detailed discussions about suggestions for improvement.
Criteria: Users provide additional insights, and designers encourage further elaboration.
Phrase: Encourage detailed feedback.

15.
Concepts: ask follow-up questions, seek confirmation for accuracy
Relationship: Designers ask follow-up questions to clarify user experiences and ensure accuracy.
Criteria: Designers seek clarification and confirmation from users regarding details.
Phrase: Seek clarification.

16.
Concepts: consult with teachers, ask about teachers' needs
Relationship: Designers actively seek input from teachers to understand their needs and preferences.
Criteria: Designers consult teachers about their specific needs and preferences.
Phrase: Consult with educators.

17.
Concepts: seek context and needs, gather context about users
Relationship: Designers gather additional context from users to tailor their approach.
Criteria: Designers inquire about users' teaching situations to understand their needs better.
Phrase: Gather user context.

18.
Concepts: identify roles, inquire about user roles
Relationship: Users and designers identify roles to enhance the problem-solving process.
Criteria: Users and designers identify roles to inform their interactions.
Phrase: Identify user roles.

19.
Concepts: share images and experiences, share knowledge for design
Relationship: Designers and users exchange images and experiences that inform design decisions.
Criteria: Designers and users share experiences and knowledge to influence design.
Phrase: Share design experiences.

20.
Concepts: informal interaction, build rapport with users
Relationship: Designers engage in casual interactions to foster a friendly community atmosphere.
Criteria: Designers and users engage in informal conversations to build rapport.
Phrase: Build rapport through interaction.

21.
Concepts: seek community input, cultivate community involvement
Relationship: Designers actively seek feedback from the community to enhance participation.
Criteria: Designers encourage community involvement and feedback on projects.
Phrase: Cultivate community involvement.

22.
Concepts: offering co-designing, acknowledge community needs
Relationship: Designers express their intention to involve the community in the design process.
Criteria: Designers acknowledge community needs and invite participation in co-design.
Phrase: Involve community in design.

23.
Concepts: promote open communication, encourage group communication
Relationship: Designers foster an environment of open and direct communication within the community.
Criteria: Designers promote open communication and encourage group discussions.
Phrase: Promote open dialogue.

24.
Concepts: explain current focus, establish development priorities
Relationship: Designers clarify their current priorities in the development process to users.
Criteria: Designers outline current development priorities and accept suggestions.
Phrase: Establish development priorities.

25.
Concepts: development goals, set development scope
Relationship: Designers define objectives and boundaries for future development efforts.
Criteria: Designers outline goals and scope for future software development.
Phrase: Define development scope.

26.
Concepts: promise future consultations, announce future consultations
Relationship: Designers commit to involving users in future consultations before changes are made.
Criteria: Designers announce plans for future consultations with the community.
Phrase: Commit to future consultations.

27.
Concepts: discuss ongoing research, engage in future planning discussions
Relationship: Designers share insights about current research and future plans to engage users.
Criteria: Designers communicate ongoing research efforts and engage in future planning.
Phrase: Discuss future planning.

28.
Concepts: outline update details, outline future developments
Relationship: Designers provide information about upcoming updates and future developments.
Criteria: Designers outline details regarding updates and future development plans.
Phrase: Outline update plans.

29.
Concepts: articulate design rationale, explain design principles
Relationship: Designers clarify the reasoning and principles guiding the software's design.
Criteria: Designers explain their design rationale and guiding principles.
Phrase: Articulate design rationale.

30.
Concepts: outline release schedules, update on release timelines
Relationship: Designers communicate expected timelines for software releases to keep users informed.
Criteria: Designers outline schedules for upcoming releases and updates.
Phrase: Communicate release timelines.

31.
Concepts: explain development delays, clarify development complexities
Relationship: Designers address reasons for delays and discuss complexities in the development process.
Criteria: Designers explain development delays and clarify complexities involved.
Phrase: Address development delays.

32.
Concepts: share platform updates, clarify version details
Relationship: Designers provide information about application versions and updates across platforms.
Criteria: Designers clarify version details and share platform updates.
Phrase: Share platform updates.

33.
Concepts: explain new features, share development updates
Relationship: Designers communicate new features and ongoing development efforts to the community.
Criteria: Designers explain new features and share updates on development.
Phrase: Share development updates.

34.
Concepts: share internal updates, share progress updates
Relationship: Designers keep the community informed about progress and changes in development.
Criteria: Designers provide updates on development progress and changes to features.
Phrase: Share progress updates.

35.
Concepts: express user anticipation, engage with the development process
Relationship: Users show interest in updates and express their engagement with the development process.
Criteria: Users express curiosity about updates and engage with the development process.
Phrase: Express anticipation.

36.
Concepts: address solution limitations, discuss technical constraints
Relationship: Designers discuss the limitations of current solutions and the constraints they face.
Criteria: Designers address limitations and discuss technical constraints affecting development.
Phrase: Discuss solution limitations.

37.
Concepts: consider hardware limitations, explain software limitations
Relationship: Users and designers acknowledge hardware limitations when discussing software capabilities.
Criteria: Users and designers consider hardware limitations in the context of software design.
Phrase: Acknowledge hardware limitations.

38.
Concepts: specifics, inquire about platform compatibility
Relationship: Users seek detailed compatibility information regarding their systems.
Criteria: Users inquire about specific platform compatibility for the software.
Phrase: Inquire about compatibility specifics.

39.
Concepts: provide technical specifications, specify system requirements
Relationship: Designers communicate necessary technical specifications and system requirements for users.
Criteria: Designers provide clear technical specifications and system requirements.
Phrase: Specify system requirements.

40.
Concepts: explain development process, consider future compatibility
Relationship: Designers discuss the development process and future compatibility considerations.
Criteria: Designers explain the development process and reflect on future compatibility.
Phrase: Discuss development process.

41.
Concepts: confirm compatibility, provide conditional advice
Relationship: Designers provide advice regarding compatibility based on user inquiries.
Criteria: Designers confirm compatibility and offer conditional advice based on specific devices.
Phrase: Confirm compatibility.

42.
Concepts: feature flexibility, adjust software features
Relationship: Designers indicate the ability to customize features according to user preferences.
Criteria: Designers communicate flexibility in adjusting software features.
Phrase: Indicate feature flexibility.

43.
Concepts: collaborate on problem solving, facilitate troubleshooting discussions
Relationship: Designers and users work together to address issues and facilitate discussions.
Criteria: Designers and users collaborate to troubleshoot and solve problems.
Phrase: Collaborate on problem-solving.

44.
Concepts: offer user support, offer ongoing support
Relationship: Designers provide continuous support and assistance to users.
Criteria: Designers offer ongoing technical support and encourage users to report issues.
Phrase: Provide ongoing support.

45.
Concepts: direct users to resources, share access and download information
Relationship: Designers guide users to resources and information related to downloads.
Criteria: Designers direct users to resources for accessing and downloading the software.
Phrase: Direct users to resources.

46.
Concepts: inquire about software access, request assistance for downloads
Relationship: Users seek information and assistance regarding software access and downloads.
Criteria: Users inquire about accessing the software and request download assistance.
Phrase: Request download assistance.

47.
Concepts: clarify technical features, inform about functionality
Relationship: Designers explain how technical features function and clarify their interactions.
Criteria: Designers clarify technical features and inform users about their functionality.
Phrase: Clarify technical features.

48.
Concepts: explain technical details, explaining technical artifacts
Relationship: Designers discuss and clarify technical aspects of the software and its features.
Criteria: Designers explain technical details and clarify the nature of technical artifacts.
Phrase: Explain technical details.
---