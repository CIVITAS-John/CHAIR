You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes a list of concepts and definitions. Do not attempt to merge codes now.
Determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable criteria for each code and do not introduce unnecessary details.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Definitions for each code (14 in total):
1. {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1}
Criteria: {Who did what, and how for code 1}
Label: {A consolidated label of code 1}
...
14. {Repeat the input 14}
Relationship: {What is logical relationship between concepts in code 14}
Criteria: {Who did what, and how for code 14}
Label: {A consolidated label of code 14}
---
~~~
1. user needs, needs inquiry
- User expresses a need or requirement, explaining the need or purpose behind a design decision.
- Designer asks about user or teacher needs, seeking to understand the needs or requirements.

2. follow-up, follow-up question
- Follow-up questions, requests, or discussions related to previous topics or issues.
- User asks a follow-up question or seeks clarification

3. user suggestion, further suggestion
- User makes a suggestion or proposal
- User proposes an additional idea or feature beyond the initial suggestion.

4. appreciation, positive feedback
- User expresses gratitude or appreciation, praising or admiring the software or feature.
- User expresses enthusiasm or excitement about the software or a particular feature.

5. release announcement, developer announcement
- Designer announces plans or provides information about a future release or update.
- Designer makes an official announcement about the software or its development.

6. feature updates, update overview
- Designer shares information about new features, updates, or bug fixes
- Designer introduces or outlines the content of an update, providing a detailed overview of new features, updates, or bug fixes.

7. update promise, future development promise
- Designer promises an update or explains a delay in completing a task or update.
- Designer promises to implement a feature or functionality in the future.

8. timeline provision, completion estimate
- Designer provides a timeline for a task or update
- Providing a tentative completion date for a task or update.

9. feedback solicitation, feedback encouragement
- Designer asks for suggestions or feedback from users
- Encouraging or soliciting feedback, suggestions, or input from users.

10. encouraging interaction, discussion encouragement
- Designer encourages users to participate or provide feedback.
- Designer encourages or invites discussion, inviting more questions, sharing thoughts, or providing feedback.

11. detailed answer, adding more specific information and criteria to the answer
- Designer provides a more detailed or specific answer, providing specific details or specifications.
- Designer adds specific details or criteria to an answer

12. explaining design goals, intention explanation
- Explaining the goals or objectives of a design.
- Explaining the intention or motivation behind a question or design decision

13. feature introduction, feature examples
- Designer introduces or explains a feature or functionality of the app.
- Designer provides examples of features or functionalities, or provides an example of how a feature or functionality works.

14. system limitations, limitation acknowledgment
- Designer explains limitations or constraints of the current version, explaining why a problem cannot be solved due to system limitations.
- Designer explains why a limitation can be addressed, acknowledging limitations, constraints, or challenges faced by the development team.
===
Here are the definitions for each code:

---
1. user needs, needs inquiry
Relationship: Inclusive (user needs include needs inquiry)
Criteria: User or designer inquires about user needs or requirements.
Label: User Needs Inquiry

2. follow-up, follow-up question
Relationship: Parallel (follow-up and follow-up question are related but distinct concepts)
Criteria: User or designer asks a follow-up question or seeks clarification on a previous topic.
Label: Follow-up Discussion

3. user suggestion, further suggestion
Relationship: Inclusive (user suggestion includes further suggestion)
Criteria: User proposes an idea or feature, including additional or further suggestions.
Label: User Suggestions

4. appreciation, positive feedback
Relationship: Parallel (appreciation and positive feedback are related but distinct concepts)
Criteria: User expresses gratitude, praise, enthusiasm, or excitement about the software or a feature.
Label: User Appreciation

5. release announcement, developer announcement
Relationship: Inclusive (release announcement includes developer announcement)
Criteria: Designer announces plans or provides information about a future release or update.
Label: Release Announcements

6. feature updates, update overview
Relationship: Inclusive (feature updates include update overview)
Criteria: Designer shares information about new features, updates, or bug fixes, including detailed overviews.
Label: Feature Updates

7. update promise, future development promise
Relationship: Inclusive (update promise includes future development promise)
Criteria: Designer promises an update or explains a delay in completing a task or update.
Label: Development Promises

8. timeline provision, completion estimate
Relationship: Inclusive (timeline provision includes completion estimate)
Criteria: Designer provides a timeline or tentative completion date for a task or update.
Label: Timeline Provisions

9. feedback solicitation, feedback encouragement
Relationship: Inclusive (feedback solicitation includes feedback encouragement)
Criteria: Designer asks for or encourages suggestions or feedback from users.
Label: Feedback Solicitation

10. encouraging interaction, discussion encouragement
Relationship: Inclusive (encouraging interaction includes discussion encouragement)
Criteria: Designer encourages users to participate, provide feedback, or engage in discussion.
Label: Encouraging Interaction

11. detailed answer, adding more specific information and criteria to the answer
Relationship: Inclusive (detailed answer includes adding more specific information)
Criteria: Designer provides a detailed or specific answer, including specific details or specifications.
Label: Detailed Answers

12. explaining design goals, intention explanation
Relationship: Inclusive (explaining design goals includes intention explanation)
Criteria: Designer explains the goals, objectives, or intentions behind a design or question.
Label: Design Intentions

13. feature introduction, feature examples
Relationship: Inclusive (feature introduction includes feature examples)
Criteria: Designer introduces or explains a feature or functionality, including examples.
Label: Feature Introductions

14. system limitations, limitation acknowledgment
Relationship: Inclusive (system limitations include limitation acknowledgment)
Criteria: Designer explains limitations or constraints of the current version, acknowledging challenges or limitations.
Label: System Limitations