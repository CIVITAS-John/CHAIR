You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: providing a visual example, providing examples or demonstrations
- A designer provides a visual example or reference.
- A designer provides examples or uses images to demonstrate or explain.

2.
Concepts: detailing a feature, explaining feature details, explaining feature functionality, providing explanations
- A designer provides detailed information about a feature or development.
- Designer explains details about a simulation or feature.
- Designer explains the purpose, functionality, or details of a feature.
- A designer provides an explanation or demonstration of a feature or concept.

3.
Concepts: introducing features, introducing software features
- Designer introduces or explains new features or functionalities of Physics Lab.
- Designer introduces or explains a new feature.

4.
Concepts: showing openness, demonstrating openness
- A designer expresses openness to feedback, suggestions, or ideas.
- Designer expresses openness to future possibilities.

5.
Concepts: exploring future possibilities, considering future development
- A designer considers or explores potential future experiments or projects.
- A designer considers potential future developments or compatibility issues.

6.
Concepts: discussing future interests, sharing potential future directions
- A designer discusses or expresses interest in further areas or topics.
- A designer shares potential future directions or ideas.

7.
Concepts: setting scope, setting boundaries
- A designer sets the scope or boundaries for the platform or tools.
- A designer sets boundaries or clarifies the scope of the project.

8.
Concepts: explaining focus, development goals
- A designer explains the focus or priorities of the platform development.
- The designer discusses or outlines the goals or objectives for the platform's development.

9.
Concepts: highlight user experience, prioritizing user experience
- The designer highlights the importance of user experience.
- A designer prioritizes user experience or ease of use in their design decisions.

10.
Concepts: managing timeline, communicating project timelines
- A designer manages the timeline or schedule of the project.
- Designers communicate timelines.

11.
Concepts: timeline setting, setting feature timelines
- Setting a timeline or priority for a particular feature or mechanic.
- Designers set timelines for specific features or developments.

12.
Concepts: providing update timelines, sharing update timelines
- A designer provides a timeline for updates or changes.
- The designer shares a timeline or schedule for updates or releases.

13.
Concepts: asking about updates, inquiring about update timeline, inquiring about update status
- A user asks about updates or changes.
- A user inquires about the status or timeline of a feature update.
- A user inquires about the status of an update.

14.
Concepts: informing about progress, providing progress updates
- Designer informs users about the progress of development.
- Designer updates users on the progress of development or a task.

15.
Concepts: testing status updates, providing development updates
- The designer clarifies the status of testing or development for a feature.
- A designer provides an update on a feature's development or release.

16.
Concepts: clarifying version information, informing about software version
- A designer provides information about a version release or update.
- A designer informs users about the current software version or its status.

17.
Concepts: explaining design adjustments, communicating component adjustments
- A designer explains adjustments or changes to the design or features.
- A designer communicates changes or adjustments to a particular component or feature.

18.
Concepts: listing bug fixes, bug fixes and improvements
- A designer lists or highlights bug fixes or updates.
- A designer addresses previous issues or bugs in the application.

19.
Concepts: highlighting educational utility, linking to educational utility
- A designer highlights the educational value or utility of a feature.
- A designer links a feature or development to its educational utility or purpose.

20.
Concepts: align with educational goals, align with educational needs
- Designer aligns with educational goals or standards.
- Designer aligns with educational standards or needs.

21.
Concepts: express educational needs, highlight educational needs
- User expresses or specifies educational needs.
- Users highlight or provide educational needs.

22.
Concepts: providing context, contextualizing a question, providing additional context
- User provides context or background information about their situation or needs.
- User provides context or background information for a question or request.
- User provides additional context or background information.

23.
Concepts: sharing a story, sharing a personal anecdote
- User shares a personal experience or story.
- User shares a personal anecdote or experience.

24.
Concepts: sharing teaching experience, identifying as a teacher
- User shares their teaching experience or background.
- User identifies themselves as a teacher or shares teaching experience.

25.
Concepts: introducing oneself, providing background information
- User introduces themselves with relevant background information.
- User provides background information about themselves or their experience.

26.
Concepts: highlight outdated technology, highlighted outdated systems
- User highlights outdated systems or technology.
- User highlights outdated systems, hardware, or software that affect the software's use.

27.
Concepts: clarify system compatibility, informing about system compatibility
- Designer clarifies system compatibility.
- A designer informs about system compatibility or limitations.

28.
Concepts: acknowledge need, acknowledge usability limitations
- Designer acknowledges a need or limitation.
- Designer acknowledges usability limitations or challenges.

29.
Concepts: clarifying technical details, considering technical requirements
- A designer clarifies technical requirements or limitations.
- A designer considers technical requirements or limitations in their design decisions.

30.
Concepts: system limitations, explain software limitations
- A designer explains why a technical issue cannot be resolved due to system limitations.
- Designer explains software limitations.

31.
Concepts: proposing solutions, proposing a solution
- A designer or user proposes a solution to a problem.
- A user proposes or suggests a solution to a technical issue.

32.
Concepts: offering solutions, alternative solution
- A designer offers a solution or workaround to a problem.
- A designer or user provides an alternative solution to a problem.
===
Here are the definitions for each code:

---
1.
Concepts: providing a visual example, providing examples or demonstrations
Relationship: The concepts are related as they both involve providing a tangible representation of an idea or concept.
Criteria: A designer provides a visual example or demonstration to explain or illustrate a concept.
Phrase: Providing visual explanations.

2.
Concepts: detailing a feature, explaining feature details, explaining feature functionality, providing explanations
Relationship: The concepts are related as they all involve providing in-depth information about a feature or functionality.
Criteria: A designer provides detailed information about a feature or functionality.
Phrase: Explaining feature details.

3.
Concepts: introducing features, introducing software features
Relationship: The concepts are related as they both involve presenting new or updated features.
Criteria: A designer introduces new features or functionalities of Physics Lab.
Phrase: Introducing new features.

4.
Concepts: showing openness, demonstrating openness
Relationship: The concepts are related as they both involve expressing a willingness to consider new ideas or feedback.
Criteria: A designer expresses openness to feedback, suggestions, or ideas.
Phrase: Expressing openness.

5.
Concepts: exploring future possibilities, considering future development
Relationship: The concepts are related as they both involve thinking about potential future directions or developments.
Criteria: A designer considers or explores potential future experiments or projects.
Phrase: Exploring future possibilities.

6.
Concepts: discussing future interests, sharing potential future directions
Relationship: The concepts are related as they both involve sharing ideas or interests about future developments.
Criteria: A designer discusses or expresses interest in further areas or topics.
Phrase: Discussing future interests.

7.
Concepts: setting scope, setting boundaries
Relationship: The concepts are related as they both involve defining the limits or scope of a project or platform.
Criteria: A designer sets the scope or boundaries for the platform or tools.
Phrase: Setting boundaries.

8.
Concepts: explaining focus, development goals
Relationship: The concepts are related as they both involve clarifying the priorities or objectives of the platform development.
Criteria: A designer explains the focus or priorities of the platform development.
Phrase: Explaining development goals.

9.
Concepts: highlight user experience, prioritizing user experience
Relationship: The concepts are related as they both involve emphasizing the importance of user experience.
Criteria: A designer highlights the importance of user experience.
Phrase: Prioritizing user experience.

10.
Concepts: managing timeline, communicating project timelines
Relationship: The concepts are related as they both involve overseeing or sharing information about the project schedule.
Criteria: A designer manages the timeline or schedule of the project.
Phrase: Managing timelines.

11.
Concepts: timeline setting, setting feature timelines
Relationship: The concepts are related as they both involve establishing a schedule or deadline for a specific feature or development.
Criteria: A designer sets a timeline or priority for a particular feature or mechanic.
Phrase: Setting timelines.

12.
Concepts: providing update timelines, sharing update timelines
Relationship: The concepts are related as they both involve sharing information about the schedule of updates or changes.
Criteria: A designer provides a timeline for updates or changes.
Phrase: Sharing update timelines.

13.
Concepts: asking about updates, inquiring about update timeline, inquiring about update status
Relationship: The concepts are related as they all involve seeking information about the status or schedule of updates.
Criteria: A user asks about updates or changes.
Phrase: Inquiring about updates.

14.
Concepts: informing about progress, providing progress updates
Relationship: The concepts are related as they both involve sharing information about the progress of development.
Criteria: A designer informs users about the progress of development.
Phrase: Informing about progress.

15.
Concepts: testing status updates, providing development updates
Relationship: The concepts are related as they both involve providing information about the status of testing or development.
Criteria: A designer provides an update on a feature's development or release.
Phrase: Providing development updates.

16.
Concepts: clarifying version information, informing about software version
Relationship: The concepts are related as they both involve providing information about the current software version or its status.
Criteria: A designer provides information about a version release or update.
Phrase: Informing about software versions.

17.
Concepts: explaining design adjustments, communicating component adjustments
Relationship: The concepts are related as they both involve explaining changes or updates to the design or components.
Criteria: A designer explains adjustments or changes to the design or features.
Phrase: Explaining design adjustments.

18.
Concepts: listing bug fixes, bug fixes and improvements
Relationship: The concepts are related as they both involve addressing and resolving issues or bugs.
Criteria: A designer lists or highlights bug fixes or updates.
Phrase: Addressing bug fixes.

19.
Concepts: highlighting educational utility, linking to educational utility
Relationship: The concepts are related as they both involve emphasizing the educational value or purpose of a feature.
Criteria: A designer highlights the educational value or utility of a feature.
Phrase: Highlighting educational utility.

20.
Concepts: align with educational goals, align with educational needs
Relationship: The concepts are related as they both involve ensuring that the platform or feature aligns with educational objectives or requirements.
Criteria: A designer aligns with educational goals or standards.
Phrase: Aligning with educational goals.

21.
Concepts: express educational needs, highlight educational needs
Relationship: The concepts are related as they both involve expressing or identifying educational requirements or needs.
Criteria: A user expresses or specifies educational needs.
Phrase: Expressing educational needs.

22.
Concepts: providing context, contextualizing a question, providing additional context
Relationship: The concepts are related as they all involve providing background information or clarification.
Criteria: A user provides context or background information about their situation or needs.
Phrase: Providing context.

23.
Concepts: sharing a story, sharing a personal anecdote
Relationship: The concepts are related as they both involve sharing personal experiences or anecdotes.
Criteria: A user shares a personal experience or story.
Phrase: Sharing personal stories.

24.
Concepts: sharing teaching experience, identifying as a teacher
Relationship: The concepts are related as they both involve sharing teaching background or experience.
Criteria: A user shares their teaching experience or background.
Phrase: Sharing teaching experience.

25.
Concepts: introducing oneself, providing background information
Relationship: The concepts are related as they both involve providing personal background information or introduction.
Criteria: A user introduces themselves with relevant background information.
Phrase: Introducing oneself.

26.
Concepts: highlight outdated technology, highlighted outdated systems
Relationship: The concepts are related as they both involve identifying or highlighting outdated systems or technology.
Criteria: A user highlights outdated systems or technology.
Phrase: Highlighting outdated technology.

27.
Concepts: clarify system compatibility, informing about system compatibility
Relationship: The concepts are related as they both involve providing information about system compatibility or limitations.
Criteria: A designer clarifies system compatibility.
Phrase: Clarifying system compatibility.

28.
Concepts: acknowledge need, acknowledge usability limitations
Relationship: The concepts are related as they both involve recognizing or acknowledging limitations or needs.
Criteria: A designer acknowledges a need or limitation.
Phrase: Acknowledging needs.

29.
Concepts: clarifying technical details, considering technical requirements
Relationship: The concepts are related as they both involve providing or considering technical information or requirements.
Criteria: A designer clarifies technical requirements or limitations.
Phrase: Clarifying technical details.

30.
Concepts: system limitations, explain software limitations
Relationship: The concepts are related as they both involve explaining or highlighting limitations of the system or software.
Criteria: A designer explains why a technical issue cannot be resolved due to system limitations.
Phrase: Explaining software limitations.

31.
Concepts: proposing solutions, proposing a solution
Relationship: The concepts are related as they both involve suggesting or proposing a solution to a problem.
Criteria: A designer or user proposes a solution to a problem.
Phrase: Proposing solutions.

32.
Concepts: offering solutions, alternative solution
Relationship: The concepts are related as they both involve providing or suggesting alternative solutions to a problem.
Criteria: A designer offers a solution or workaround to a problem.
Phrase: Offering solutions.