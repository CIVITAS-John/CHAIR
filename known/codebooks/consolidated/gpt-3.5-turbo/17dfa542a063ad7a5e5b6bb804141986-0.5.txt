You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. If a sub-code includes another, use the broader one. If sub-codes are parallel, write one that covers both.
Write clear and generalizable labels and criteria for each code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization (e.g. "social interaction" instead of "interaction", "communication approach" instead of "communication").
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (22 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {Consolidated criteria of code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
22.
Relationship: {The logical relationship between sub-codes in code 22}
Criteria: {Consolidated criteria of code 22}
Label: {A consolidated label of code 22}
Category: {2-4 words for code 22}
---
~~~
1. substance usage, laboratory practices.
- Refers to the use of substances or chemicals in experiments.
- Involves techniques, methods, tools, and apparatus used in laboratory settings.

2. ac power, electric motor.
- Refers to the connection of motors to AC power.
- Refers to the construction or creation of an electric motor.

3. software features., future software feature.
- Describing software aspects or asking about features.
- Mention of potential future features in the software.

4. software discussion, software presets.
- Discussions related to the software used.
- Discussions about the presets or default settings in the software.

5. software imitation, chemical experiments and simulation.
- Discussions about imitating real-world phenomena in software.
- Discussions on experiments and use of software for simulations.

6. specialization., software modeling.
- Referring to specific expertise or software.
- Involves modeling software for specific purposes.

7. question, user inquiries.
- Positing queries or seeking information
- Questions or inquiries directed at specific users.

8. seeking assistance, external resource suggestion.
- Requesting advice, help, or information from the community.
- Offering suggestions for seeking information externally

9. update inquiry, software updates..
- Inquiring about updates or changes.
- Asking about software versions or updates.

10. design evaluation., feature and software evaluation.
- Providing feedback or evaluating design effectiveness.
- Feedback on features and software evaluation for educational purposes.

11. design inspiration, designer's guidance..
- Insights or ideas drawn from design elements.
- Offering design suggestions or recommending consulting the designer.

12. user expectations., future expectations.
- Describing user requirements or hopes.
- Anticipated developments or outcomes in the future.

13. expansion, platform development..
- Discussions about expanding features or content.
- Discussing platform enhancements or development.

14. user support., troubleshooting.
- Assisting with user issues or technical challenges.
- Seeking help or solutions for technical issues or problems.

15. task management, task clarification.
- Assigning responsibilities and guiding users on tasks.
- Seeking clarity and providing instructions for tasks.

16. user guidance, feature usage and guidance.
- Involves offering guidance or instructions to users.
- Utilization of platform features and guidance on functionalities.

17. customization, feature adjustments.
- Mention of customization options or non-standard operations.
- Making adjustments to system features or functionalities

18. platform features., platform usability..
- Highlighting platform activities or features.
- Describing platform ease of use or interaction styles.

19. interface design, screen design and usability.
- The layout and arrangement of elements on the platform
- Visual layout on the screen and practicality of screen organization.

20. advertisement impact, advertising strategies.
- Encompasses the influence of ads and user feelings towards them.
- Includes goals, strategies, impact, and user perception of advertisements.

21. in-app purchases, app store integration.
- In-app purchases for additional features or content
- Integration with the app store for transactions

22. user motivation.
- Factors or influences that drive behavior or action and factors that drive or direct user behavior.
- Words or actions that encourage and motivate community members.
===
Categories:
* Community Interaction
* Software Development
* User Engagement

Definitions for each code (22 in total):
1.
Relationship: Both involve practical aspects of laboratory work.
Criteria: Involves substance usage and laboratory practices.
Label: Laboratory Procedures
Category: Community Interaction

2.
Relationship: Both related to AC power and electric motor functionality.
Criteria: Involves AC power connection and electric motor construction.
Label: Electric Motor Operations
Category: Software Development

3.
Relationship: Both related to software features.
Criteria: Describing software aspects or discussing future features.
Label: Software Features Discussion
Category: Software Development

4.
Relationship: Both involve discussions related to software.
Criteria: Discussing software and presets.
Label: Software Usage Discussions
Category: Software Development

5.
Relationship: Both involve software simulations and experiments.
Criteria: Discussing software imitation and chemical experiments.
Label: Simulation Discussions
Category: Software Development

6.
Relationship: Both related to software specialization.
Criteria: Referring to expertise and software modeling.
Label: Specialized Software Modeling
Category: Software Development

7.
Relationship: Both involve user inquiries.
Criteria: Positing queries or seeking information from users.
Label: User Inquiries
Category: Community Interaction

8.
Relationship: Both involve seeking or providing assistance.
Criteria: Requesting help or suggesting external resources.
Label: Community Assistance
Category: User Engagement

9.
Relationship: Both related to software updates.
Criteria: Inquiring about updates or software changes.
Label: Software Update Queries
Category: Software Development

10.
Relationship: Both involve evaluating design and software.
Criteria: Providing feedback on design and software features.
Label: Design and Feature Evaluation
Category: Software Development

11.
Relationship: Both involve design elements.
Criteria: Drawing insights from design or offering design guidance.
Label: Design Influence
Category: Software Development

12.
Relationship: Both involve user expectations.
Criteria: Describing user requirements or future expectations.
Label: User Expectations
Category: User Engagement

13.
Relationship: Both involve platform development.
Criteria: Discussing feature expansion or platform enhancements.
Label: Platform Growth
Category: Software Development

14.
Relationship: Both involve user support.
Criteria: Assisting with user issues or seeking troubleshooting.
Label: User Support
Category: User Engagement

15.
Relationship: Both involve task management.
Criteria: Assigning responsibilities or seeking task clarification.
Label: Task Coordination
Category: Community Interaction

16.
Relationship: Both involve user guidance.
Criteria: Offering guidance on feature usage or functionalities.
Label: User Instruction
Category: User Engagement

17.
Relationship: Both involve feature adjustments.
Criteria: Mentioning customization options or making feature adjustments.
Label: Feature Customization
Category: Software Development

18.
Relationship: Both involve platform features.
Criteria: Highlighting platform activities or usability.
Label: Platform Features Description
Category: Software Development

19.
Relationship: Both involve interface design.
Criteria: Discussing screen design and usability.
Label: Interface Design Evaluation
Category: Software Development

20.
Relationship: Both involve advertising strategies.
Criteria: Discussing advertisement impact or strategies.
Label: Advertising Analysis
Category: User Engagement

21.
Relationship: Both involve app store transactions.
Criteria: In-app purchases or app store integration.
Label: App Store Transactions
Category: Software Development

22.
Relationship: Both involve user motivation.
Criteria: Factors driving user behavior or actions.
Label: User Motivation Factors
Category: Community Interaction