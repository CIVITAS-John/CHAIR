You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: promoting practical applications, explaining practical applications
- Designers promote or highlight the practical applications of a feature.
- Designers explain the practical application or benefits of a feature.

2.
Concepts: explaining operational challenges, discussing development difficulties
- A designer explains the challenges or difficulties faced during development.
- A designer discusses the challenges or difficulties faced during software development.

3.
Concepts: explaining complexity, describing update complexity
- A designer explains the complexity of a task or feature.
- A designer describes the complexity of an update or feature.

4.
Concepts: explaining design rationale, providing development rationale
- A designer or community member explains the rationale or reasoning behind a design decision, explaining the reasoning behind a design choice.
- A designer provides a reason or explanation for a decision or action, providing a rationale or justification for a development decision.

5.
Concepts: input method implications, discussing input methods
- Designers discuss implications of input methods on usability.
- A designer considers or discusses input methods or user interface design.

6.
Concepts: design philosophy communication, explaining design principles and philosophy
- Communicating the design philosophy or approach.
- Designer explains design principles or philosophies, explaining the design philosophy or approach.

7.
Concepts: technical insights, providing technical explanations and insight
- Providing technical information or explanations about the software or its components.
- Designer provides technical details or explanations about the software or its features, providing technical insight or explanations about the software.

8.
Concepts: clarifying user interactions and understanding, clarifying user experience and facilitating understanding, enhancing user understanding through clarification
- Designer clarifies how users interact with the software, explaining or highlighting how users interact with the software.
- A designer clarifies or explains a user's experience or process, explaining or clarifying how to use a feature or function.
- A designer enhances the clarity of an explanation or concept, enhancing user understanding of a concept.

9.
Concepts: acknowledging future editing, discussing future manual editing
- A designer acknowledges future manual editing capabilities.
- A designer mentions future plans or possibilities for manual editing.

10.
Concepts: describing ideal components, provides ideal component
- Designer provides details about ideal components or features.
- A designer provides or explains an ideal component or feature in the software.

11.
Concepts: encourage exploration, support experimentation
- Designer encourages users to explore new features, updates, or functionalities.
- Designer supports or encourages users to experiment with features or tools.

12.
Concepts: discussing technical requirements, clarifying technical specifications and ensuring understanding
- Designers discuss technical requirements or specifications to clarify expectations.
- Clarifying technical requirements or specifications, designer clarifies or explains technical specifications or details.

13.
Concepts: providing workarounds, offer a workaround
- Offering alternative solutions or workarounds.
- Offer a workaround or suggest an alternative solution to a problem.

14.
Concepts: suggest feasible system options, suggests alternative systems
- User suggests a feasible system option or solution.
- User suggests alternative systems, devices, or approaches to using the platform.

15.
Concepts: alternative suggestion, suggest an alternative solution
- Providing an alternative suggestion or idea.
- Suggest a solution or alternative to a problem or issue.

16.
Concepts: expressing frustration, expressing user frustration
- Designer or users express frustration or difficulties with the current design or functionality.
- A user expresses frustration or difficulty with the software or a related issue.

17.
Concepts: highlight outdated systems, describing outdated technology
- User highlights outdated systems or infrastructure.
- A user highlights the use of outdated technology or infrastructure.

18.
Concepts: explaining school policies, explaining institutional policies
- Users explain common school policies or practices.
- Users explain or reference institutional policies or constraints.

19.
Concepts: inquiring about classroom resources, inquiring about classroom conditions
- Designers inquire about classroom resources or limitations to understand constraints.
- Designers inquire about the physical or environmental conditions of the classroom to understand constraints.

20.
Concepts: providing software context, contextualizing software constraints
- A user provides context for software use or implementation.
- A user contextualizes software usage constraints.

21.
Concepts: explaining limitations, informing about limitations, explaining design limitations, addressing technical limitations, explaining user constraints
- A designer explains limitations or constraints of the platform or feature.
- A designer informs users about limitations or constraints of the platform.
- A designer explains the limitations of a design or system.
- A designer provides information about technical limitations or constraints.
- A designer explains user constraints or limitations.

22.
Concepts: clarifying software limitations, clarifying current design limitations
- A designer clarifies limitations or constraints of the software or its features.
- A designer clarifies limitations or constraints of the current design or functionality.

23.
Concepts: acknowledging limitations, acknowledges limitations
- A designer acknowledges limitations or challenges.
- Designer acknowledges limitations or constraints of the Physics Lab.

24.
Concepts: suggesting compatibility, suggest potential compatibility
- A user suggests potential compatibility with a specific operating system.
- User suggests potential compatibility or technical feasibility.

25.
Concepts: confirming compatibility, suggesting compatibility checks
- A designer confirms the compatibility of a suggested operating system.
- A designer suggests checking the compatibility of the system.

26.
Concepts: clarifying compatibility issues, suggesting compatibility solutions
- Designer clarifies compatibility issues.
- Designer suggests solutions for compatibility issues.

27.
Concepts: requests guidance, seeks usage instructions
- User requests guidance on using a feature.
- A user asks for guidance on how to use a specific feature or function.

28.
Concepts: seeks help, seeks clarification
- Users seek help or clarification on using the software or its features.
- A user seeks clarification on how to use the software or a feature.

29.
Concepts: asks technical question, inquires about technical requirements
- A user initiates a technical question or inquiry about the software.
- A user inquires about technical specifications or requirements for the software.

30.
Concepts: inquiring about progress, inquiring about update schedules
- A user inquires about the progress or status of a specific feature or update.
- A user inquires about the schedule or timeline for an update.

31.
Concepts: inquire about access, requesting download information
- User inquires about accessing the platform or a specific version.
- A user requests information about downloading or accessing a specific version of the platform.

32.
Concepts: inquiring about downloads, inquire about download options
- A user inquires about the download process or procedure.
- User inquires about download options or availability.
===
Here are the definitions for each code:

---
1.
Concepts: promoting practical applications, explaining practical applications
Relationship: The concepts are related as designers promote and explain the practical applications of a feature to highlight its benefits.
Criteria: Designers promote and explain the practical applications of a feature to users.
Phrase: Highlighting practical applications

2.
Concepts: explaining operational challenges, discussing development difficulties
Relationship: The concepts are related as designers explain and discuss the challenges they faced during development to provide context.
Criteria: Designers explain and discuss the operational challenges and development difficulties they faced.
Phrase: Discussing development challenges

3.
Concepts: explaining complexity, describing update complexity
Relationship: The concepts are related as designers explain and describe the complexity of a task or feature to provide context.
Criteria: Designers explain and describe the complexity of a task or feature to users.
Phrase: Explaining complexity

4.
Concepts: explaining design rationale, providing development rationale
Relationship: The concepts are related as designers explain and provide the rationale behind a design decision to justify their choices.
Criteria: Designers explain and provide the rationale behind a design decision.
Phrase: Providing design rationale

5.
Concepts: input method implications, discussing input methods
Relationship: The concepts are related as designers discuss the implications of input methods on usability to inform design decisions.
Criteria: Designers discuss the implications of input methods on usability.
Phrase: Discussing input methods

6.
Concepts: design philosophy communication, explaining design principles and philosophy
Relationship: The concepts are related as designers communicate and explain their design philosophy to provide context.
Criteria: Designers communicate and explain their design philosophy and principles.
Phrase: Communicating design philosophy

7.
Concepts: technical insights, providing technical explanations and insight
Relationship: The concepts are related as designers provide technical insights and explanations to educate users.
Criteria: Designers provide technical insights and explanations about the software or its components.
Phrase: Providing technical insights

8.
Concepts: clarifying user interactions and understanding, clarifying user experience and facilitating understanding, enhancing user understanding through clarification
Relationship: The concepts are related as designers clarify user interactions and experiences to facilitate understanding.
Criteria: Designers clarify user interactions and experiences to facilitate understanding.
Phrase: Clarifying user understanding

9.
Concepts: acknowledging future editing, discussing future manual editing
Relationship: The concepts are related as designers acknowledge and discuss future manual editing capabilities to set expectations.
Criteria: Designers acknowledge and discuss future manual editing capabilities.
Phrase: Acknowledging future editing

10.
Concepts: describing ideal components, provides ideal component
Relationship: The concepts are related as designers describe and provide ideal components or features to inform design decisions.
Criteria: Designers describe and provide ideal components or features.
Phrase: Describing ideal components

11.
Concepts: encourage exploration, support experimentation
Relationship: The concepts are related as designers encourage and support users to explore and experiment with new features.
Criteria: Designers encourage and support users to explore and experiment with new features.
Phrase: Encouraging exploration

12.
Concepts: discussing technical requirements, clarifying technical specifications and ensuring understanding
Relationship: The concepts are related as designers discuss and clarify technical requirements to ensure understanding.
Criteria: Designers discuss and clarify technical requirements to ensure understanding.
Phrase: Clarifying technical requirements

13.
Concepts: providing workarounds, offer a workaround
Relationship: The concepts are related as designers provide and offer workarounds to solve problems.
Criteria: Designers provide and offer workarounds to solve problems.
Phrase: Providing workarounds

14.
Concepts: suggest feasible system options, suggests alternative systems
Relationship: The concepts are related as users suggest and propose feasible system options or alternative solutions.
Criteria: Users suggest and propose feasible system options or alternative solutions.
Phrase: Suggesting alternative systems

15.
Concepts: alternative suggestion, suggest an alternative solution
Relationship: The concepts are related as users suggest and propose alternative solutions to problems.
Criteria: Users suggest and propose alternative solutions to problems.
Phrase: Suggesting alternative solutions

16.
Concepts: expressing frustration, expressing user frustration
Relationship: The concepts are related as designers and users express frustration with the current design or functionality.
Criteria: Designers and users express frustration with the current design or functionality.
Phrase: Expressing frustration

17.
Concepts: highlight outdated systems, describing outdated technology
Relationship: The concepts are related as users highlight and describe outdated systems or infrastructure to inform design decisions.
Criteria: Users highlight and describe outdated systems or infrastructure.
Phrase: Highlighting outdated systems

18.
Concepts: explaining school policies, explaining institutional policies
Relationship: The concepts are related as users explain and reference institutional policies or practices to provide context.
Criteria: Users explain and reference institutional policies or practices.
Phrase: Explaining institutional policies

19.
Concepts: inquiring about classroom resources, inquiring about classroom conditions
Relationship: The concepts are related as designers inquire about classroom resources and conditions to understand constraints.
Criteria: Designers inquire about classroom resources and conditions to understand constraints.
Phrase: Inquiring about classroom resources

20.
Concepts: providing software context, contextualizing software constraints
Relationship: The concepts are related as users provide context for software use or implementation to inform design decisions.
Criteria: Users provide context for software use or implementation.
Phrase: Providing software context

21.
Concepts: explaining limitations, informing about limitations, explaining design limitations, addressing technical limitations, explaining user constraints
Relationship: The concepts are related as designers explain and inform users about limitations or constraints of the platform or feature.
Criteria: Designers explain and inform users about limitations or constraints of the platform or feature.
Phrase: Explaining limitations

22.
Concepts: clarifying software limitations, clarifying current design limitations
Relationship: The concepts are related as designers clarify limitations or constraints of the software or its features.
Criteria: Designers clarify limitations or constraints of the software or its features.
Phrase: Clarifying limitations

23.
Concepts: acknowledging limitations, acknowledges limitations
Relationship: The concepts are related as designers acknowledge limitations or challenges to set expectations.
Criteria: Designers acknowledge limitations or challenges.
Phrase: Acknowledging limitations

24.
Concepts: suggesting compatibility, suggest potential compatibility
Relationship: The concepts are related as users suggest and propose potential compatibility with a specific operating system.
Criteria: Users suggest and propose potential compatibility with a specific operating system.
Phrase: Suggesting compatibility

25.
Concepts: confirming compatibility, suggesting compatibility checks
Relationship: The concepts are related as designers confirm and suggest checking the compatibility of a suggested operating system.
Criteria: Designers confirm and suggest checking the compatibility of a suggested operating system.
Phrase: Confirming compatibility

26.
Concepts: clarifying compatibility issues, suggesting compatibility solutions
Relationship: The concepts are related as designers clarify and suggest solutions for compatibility issues.
Criteria: Designers clarify and suggest solutions for compatibility issues.
Phrase: Clarifying compatibility issues

27.
Concepts: requests guidance, seeks usage instructions
Relationship: The concepts are related as users request and seek guidance on using a feature.
Criteria: Users request and seek guidance on using a feature.
Phrase: Requesting guidance

28.
Concepts: seeks help, seeks clarification
Relationship: The concepts are related as users seek and request help or clarification on using the software or its features.
Criteria: Users seek and request help or clarification on using the software or its features.
Phrase: Seeking help

29.
Concepts: asks technical question, inquires about technical requirements
Relationship: The concepts are related as users ask and inquire about technical specifications or requirements for the software.
Criteria: Users ask and inquire about technical specifications or requirements for the software.
Phrase: Asking technical questions

30.
Concepts: inquiring about progress, inquiring about update schedules
Relationship: The concepts are related as users inquire and ask about the progress or status of a specific feature or update.
Criteria: Users inquire and ask about the progress or status of a specific feature or update.
Phrase: Inquiring about progress

31.
Concepts: inquire about access, requesting download information
Relationship: The concepts are related as users inquire and request information about accessing the platform or a specific version.
Criteria: Users inquire and request information about accessing the platform or a specific version.
Phrase: Inquiring about access

32.
Concepts: inquiring about downloads, inquire about download options
Relationship: The concepts are related as users inquire and ask about the download process or procedure.
Criteria: Users inquire and ask about the download process or procedure.
Phrase: Inquiring about downloads