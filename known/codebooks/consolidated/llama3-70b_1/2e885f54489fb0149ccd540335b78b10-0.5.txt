You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: time constraint, uses ai-generated code entirely, adapting to time constraints
- Working under time constraints and using AI-generated code completely.
- Uses AI-generated code entirely, especially when under time constraints.
- Adapting to time constraints by using AI-generated code completely.

2.
Concepts: time-constrained coding, facing time constraints, uses ai-generated code completely due to time constraints, using ai-generated code under time constraints
- Interviewee uses AI-generated code due to time constraints.
- The participant faces time constraints and decides to use the AI-generated code to save time.
- The participant uses AI-generated code completely due to time constraints.
- The participant uses AI-generated code under time constraints.

3.
Concepts: copying and pasting ai output, deciding to copy and paste ai output
- The interviewee decides to copy and paste AI output instead of running it.
- The participant decides to copy and paste AI-generated output without running it.

4.
Concepts: copying and pasting ai code, copying and pasting ai-generated code, deciding to copy and paste code
- Deciding to copy and paste AI-generated code instead of running it.
- Deciding to copy and paste AI-generated code is observed.
- The participant decides to copy and paste code generated by the AI.

5.
Concepts: selective code adoption, selectively copying code to the model
- The participant selectively copies AI-generated code into their model.
- The expert selectively copies AI-generated code into their model.
- The interviewee selectively copies code from the AI tool into their own work.

6.
Concepts: selectively copying ai code, selectively using ai-generated code, selectively copying code from ai's response
- Selectively copying code from AI output
- Selectively copies AI-generated code
- Selectively incorporating AI-generated code into one's own work, choosing relevant parts to integrate.

7.
Concepts: manually writing code with ai guidance, manual coding with ai assistance
- Manually writing code with AI guidance
- Manually writing code with the steps provided by ChatGPT, rather than relying on copy-pasting.
- The participant writes code manually with AI-provided steps.

8.
Concepts: manual ai code integration, manual coding with ai guidance
- The interviewee manually integrates AI-generated code into their work.
- The interviewee manually codes with AI guidance, using generated code as a reference.

9.
Concepts: avoiding copy-paste, avoiding direct code copying, not copying and pasting
- Avoiding a copy-paste approach when using AI-generated code.
- The interviewee avoids direct code copying and instead uses AI-generated code as a reference.
- The participant uses AI-generated code as a reference rather than copying and pasting it.

10.
Concepts: appreciating code organization and documentation, appreciating documentation and commenting capabilities
- The participant appreciates the code organization and documentation features provided by ChatGPT.
- Appreciates the documentation and commenting capabilities of ChatGPT, making code more readable and understandable.

11.
Concepts: ai-generated comments, appreciating chat gpt's tendency to provide comments and documentation, chatgpt providing comments and documentation
- Appreciating AI-generated comments and documentation.
- Appreciates AI's tendency to provide comments and documentation.
- Appreciating the provision of comments and documentation by AI-driven interfaces.

12.
Concepts: code worked out of the box, ai-generated code working out of the box
- Describing instances where code worked out of the box, with minimal or no errors.
- Describes a situation where AI-generated code works correctly without needing further modification.

13.
Concepts: appreciates executable code, appreciates the ability to run ai-generated code, appreciation for ai-generated code
- Appreciates the ability to execute AI-generated code directly.
- Appreciating the ability to run AI-generated code
- Appreciates AI's code generation capabilities and values its assistance.

14.
Concepts: easy-to-read generated code, making the generated code easy to read
- Easy-to-read generated code is appreciated.
- Wants generated code to be easy to read, with comments and documentation.

15.
Concepts: praising code readability, praising code readability and documentation
- The expert praises the readability of AI-generated code.
- The expert praises AI's code readability and documentation.

16.
Concepts: appreciating code readability, ai generated code readability
- Appreciates ChatGPT-generated code readability
- Comments on the readability and comprehensibility of AI-generated code, including the presence of comments and documentation.
- Appreciating the readability of AI-generated code

17.
Concepts: valuing ai's documentation skills, appreciates ai's code commenting
- The interviewee values AI's documentation skills, appreciating the clarity and readability of generated code.
- The interviewee appreciates AI's ability to provide clear and readable code, including comments and documentation.

18.
Concepts: prefers readable code, benefits of commented code
- The participant prefers readable code, appreciating that ChatGPT can provide commented and documented code.
- The participant appreciates the benefits of commented code, including readability and ease of use.

19.
Concepts: integrating into the model, integrating ai-generated code
- The user integrates the AI-generated code into their model.
- AI-generated code is integrated into the model.

20.
Concepts: wanting automatic code integration, desires automatic ai code integration
- The participant wants the capability to automatically integrate generated code into their model.
- The interviewee desires automatic code integration into the model.
- The interviewee desires automatic AI code integration, such as inserting generated code into the model.

21.
Concepts: valuing code integration, appreciating auto-integration capability, appreciating automatic code integration
- Appreciating the automatic integration of generated code into the model.
- Appreciation for the capability to automatically integrate AI-generated code into the model.
- The participant appreciates the automatic code integration feature.

22.
Concepts: ai assisted code review, chat gpt optimizing code, assistance to optimize & debug
- AI-assisted code review and optimization
- AI-assisted code optimization and improvement
- AI assists in optimizing and debugging code.

23.
Concepts: optimizing code, optimizing code with ai feedback, considering ai for code optimization
- Optimizing code with AI assistance is discussed.
- The participant suggests that AI could help optimize code by providing feedback.
- Considers AI for code optimization and improvement.

24.
Concepts: ai-assisted code improvement, envisioning ai-assisted code editing, envisioning ai as a coding assistant
- Envisions AI-assisted code improvement.
- Envisions the potential of AI-assisted code editing
- Envisions AI as a coding assistant

25.
Concepts: valuing clarity in coding, valuing simplicity and clarity in code, preferring simple, maintainable code
- Values clarity in coding, preferring simple and accessible code.
- The participant values simplicity and clarity in code writing and maintenance.
- Prioritizing simplicity and maintainability in code, valuing clarity and ease of understanding.

26.
Concepts: code simplicity and quality, code readability and simplicity for maintenance, importance of code readability and simplicity
- Interviewee values simplicity in code, making it easier to maintain and understand.
- The interviewee emphasizes the importance of code readability and simplicity for future maintenance.
- The interviewee values simplicity and readability of code for maintenance.

27.
Concepts: importance of maintainable code, advocating for clear and straightforward code
- Emphasizes the importance of maintainable code and simplicity.
- The interviewee advocates for clear and straightforward code writing, emphasizing the importance of maintainability.

28.
Concepts: recognizing coding standards, acknowledging ai's adherence to best practices
- The interviewee recognizes the AI system's adherence to coding standards.
- The interviewee acknowledges the AI tool's adherence to best practices in coding, such as following established conventions.

29.
Concepts: adhering to best practices, appreciating best practices
- The interviewee notes the AI system's adherence to best practices.
- The interviewee appreciates the AI system's adherence to best practices.

30.
Concepts: valuing thoughtful model creation, appreciating thoughtful model creation
- The user emphasizes the importance of thoughtful model creation.
- The interviewee appreciates a thoughtful model creation approach.
- Appreciates thoughtful model creation and best practices

31.
Concepts: following best practices, acknowledging best practices adherence
- Following best practices is emphasized over creating a model.
- Emphasizing the importance of following best practices in model creation

32.
Concepts: not seeking explanations, manually attempting to fix errors
- Not seeking explanations for AI-generated code errors and instead trying to fix them manually.
- The user attempts to fix errors in the AI-generated code without seeking explanation.
===
Here are the definitions for each code:

---
1.
Concepts: time constraint, uses ai-generated code entirely, adapting to time constraints
Relationship: The concepts are related in that using AI-generated code entirely is a way to adapt to time constraints.
Criteria: Participants use AI-generated code entirely when working under time constraints.
Phrase: Using AI-generated code to adapt to time constraints.

2.
Concepts: time-constrained coding, facing time constraints, uses ai-generated code completely due to time constraints, using ai-generated code under time constraints
Relationship: The concepts are related in that using AI-generated code completely is a response to facing time constraints.
Criteria: Participants use AI-generated code completely when facing time constraints.
Phrase: Using AI-generated code due to time constraints.

3.
Concepts: copying and pasting ai output, deciding to copy and paste ai output
Relationship: The concepts are related in that deciding to copy and paste AI output is an action taken by participants.
Criteria: Participants decide to copy and paste AI output instead of running it.
Phrase: Copying and pasting AI output.

4.
Concepts: copying and pasting ai code, copying and pasting ai-generated code, deciding to copy and paste code
Relationship: The concepts are related in that deciding to copy and paste code is an action taken by participants.
Criteria: Participants decide to copy and paste AI-generated code instead of running it.
Phrase: Copying and pasting AI-generated code.

5.
Concepts: selective code adoption, selectively copying code to the model
Relationship: The concepts are related in that selectively copying code to the model is a form of selective code adoption.
Criteria: Participants selectively copy AI-generated code into their model.
Phrase: Selectively adopting AI-generated code.

6.
Concepts: selectively copying ai code, selectively using ai-generated code, selectively copying code from ai's response
Relationship: The concepts are related in that selectively copying AI code is a form of selective code adoption.
Criteria: Participants selectively copy AI-generated code into their model.
Phrase: Selectively copying AI-generated code.

7.
Concepts: manually writing code with ai guidance, manual coding with ai assistance
Relationship: The concepts are related in that manually writing code with AI guidance is a form of manual coding with AI assistance.
Criteria: Participants manually write code with AI guidance.
Phrase: Manually writing code with AI guidance.

8.
Concepts: manual ai code integration, manual coding with ai guidance
Relationship: The concepts are related in that manual AI code integration is a form of manual coding with AI guidance.
Criteria: Participants manually integrate AI-generated code into their work.
Phrase: Manually integrating AI-generated code.

9.
Concepts: avoiding copy-paste, avoiding direct code copying, not copying and pasting
Relationship: The concepts are related in that avoiding copy-paste is a way to avoid direct code copying.
Criteria: Participants avoid direct code copying and instead use AI-generated code as a reference.
Phrase: Avoiding direct code copying.

10.
Concepts: appreciating code organization and documentation, appreciating documentation and commenting capabilities
Relationship: The concepts are related in that appreciating code organization and documentation is a way to appreciate documentation and commenting capabilities.
Criteria: Participants appreciate the code organization and documentation features provided by ChatGPT.
Phrase: Appreciating code organization and documentation.

11.
Concepts: ai-generated comments, appreciating chat gpt's tendency to provide comments and documentation, chatgpt providing comments and documentation
Relationship: The concepts are related in that AI-generated comments are a form of ChatGPT's tendency to provide comments and documentation.
Criteria: Participants appreciate AI-generated comments and documentation.
Phrase: Appreciating AI-generated comments and documentation.

12.
Concepts: code worked out of the box, ai-generated code working out of the box
Relationship: The concepts are related in that AI-generated code working out of the box is a form of code working out of the box.
Criteria: Participants describe instances where AI-generated code works correctly without needing further modification.
Phrase: Describing AI-generated code working out of the box.

13.
Concepts: appreciates executable code, appreciates the ability to run ai-generated code, appreciation for ai-generated code
Relationship: The concepts are related in that appreciating executable code is a way to appreciate AI-generated code.
Criteria: Participants appreciate the ability to execute AI-generated code directly.
Phrase: Appreciating executable AI-generated code.

14.
Concepts: easy-to-read generated code, making the generated code easy to read
Relationship: The concepts are related in that making the generated code easy to read is a way to create easy-to-read generated code.
Criteria: Participants want generated code to be easy to read, with comments and documentation.
Phrase: Wanting easy-to-read generated code.

15.
Concepts: praising code readability, praising code readability and documentation
Relationship: The concepts are related in that praising code readability is a way to praise code readability and documentation.
Criteria: Participants praise the readability of AI-generated code.
Phrase: Praising code readability.

16.
Concepts: appreciating code readability, ai generated code readability
Relationship: The concepts are related in that appreciating code readability is a way to appreciate AI-generated code readability.
Criteria: Participants appreciate the readability of AI-generated code.
Phrase: Appreciating code readability.

17.
Concepts: valuing ai's documentation skills, appreciates ai's code commenting
Relationship: The concepts are related in that valuing AI's documentation skills is a way to appreciate AI's code commenting.
Criteria: Participants value AI's documentation skills, appreciating the clarity and readability of generated code.
Phrase: Valuing AI's documentation skills.

18.
Concepts: prefers readable code, benefits of commented code
Relationship: The concepts are related in that preferring readable code is a way to appreciate the benefits of commented code.
Criteria: Participants prefer readable code, appreciating that ChatGPT can provide commented and documented code.
Phrase: Preferring readable code.

19.
Concepts: integrating into the model, integrating ai-generated code
Relationship: The concepts are related in that integrating into the model is a way to integrate AI-generated code.
Criteria: Participants integrate AI-generated code into their model.
Phrase: Integrating AI-generated code.

20.
Concepts: wanting automatic code integration, desires automatic ai code integration
Relationship: The concepts are related in that wanting automatic code integration is a way to desire automatic AI code integration.
Criteria: Participants want the capability to automatically integrate generated code into their model.
Phrase: Wanting automatic code integration.

21.
Concepts: valuing code integration, appreciating auto-integration capability, appreciating automatic code integration
Relationship: The concepts are related in that valuing code integration is a way to appreciate automatic code integration.
Criteria: Participants appreciate the automatic integration of generated code into the model.
Phrase: Appreciating automatic code integration.

22.
Concepts: ai assisted code review, chat gpt optimizing code, assistance to optimize & debug
Relationship: The concepts are related in that AI-assisted code review is a way to optimize and debug code.
Criteria: Participants receive AI-assisted code review and optimization.
Phrase: Receiving AI-assisted code review.

23.
Concepts: optimizing code, optimizing code with ai feedback, considering ai for code optimization
Relationship: The concepts are related in that optimizing code with AI feedback is a way to consider AI for code optimization.
Criteria: Participants suggest that AI could help optimize code by providing feedback.
Phrase: Considering AI for code optimization.

24.
Concepts: ai-assisted code improvement, envisioning ai-assisted code editing, envisioning ai as a coding assistant
Relationship: The concepts are related in that envisioning AI-assisted code editing is a way to envision AI as a coding assistant.
Criteria: Participants envision AI-assisted code improvement.
Phrase: Envisioning AI-assisted code improvement.

25.
Concepts: valuing clarity in coding, valuing simplicity and clarity in code, preferring simple, maintainable code
Relationship: The concepts are related in that valuing clarity in coding is a way to value simplicity and clarity in code.
Criteria: Participants value simplicity and clarity in code writing and maintenance.
Phrase: Valuing simplicity and clarity in code.

26.
Concepts: code simplicity and quality, code readability and simplicity for maintenance, importance of code readability and simplicity
Relationship: The concepts are related in that code simplicity and quality is a way to emphasize the importance of code readability and simplicity.
Criteria: Participants emphasize the importance of code readability and simplicity for future maintenance.
Phrase: Emphasizing code readability and simplicity.

27.
Concepts: importance of maintainable code, advocating for clear and straightforward code
Relationship: The concepts are related in that importance of maintainable code is a way to advocate for clear and straightforward code.
Criteria: Participants advocate for clear and straightforward code writing, emphasizing the importance of maintainability.
Phrase: Advocating for maintainable code.

28.
Concepts: recognizing coding standards, acknowledging ai's adherence to best practices
Relationship: The concepts are related in that recognizing coding standards is a way to acknowledge AI's adherence to best practices.
Criteria: Participants recognize the AI system's adherence to coding standards.
Phrase: Recognizing AI's adherence to coding standards.

29.
Concepts: adhering to best practices, appreciating best practices
Relationship: The concepts are related in that adhering to best practices is a way to appreciate best practices.
Criteria: Participants appreciate the AI system's adherence to best practices.
Phrase: Appreciating AI's adherence to best practices.

30.
Concepts: valuing thoughtful model creation, appreciating thoughtful model creation
Relationship: The concepts are related in that valuing thoughtful model creation is a way to appreciate thoughtful model creation.
Criteria: Participants appreciate a thoughtful model creation approach.
Phrase: Appreciating thoughtful model creation.

31.
Concepts: following best practices, acknowledging best practices adherence
Relationship: The concepts are related in that following best practices is a way to acknowledge best practices adherence.
Criteria: Participants emphasize the importance of following best practices in model creation.
Phrase: Emphasizing best practices adherence.

32.
Concepts: not seeking explanations, manually attempting to fix errors
Relationship: The concepts are related in that not seeking explanations is a way to manually attempt to fix errors.
Criteria: Participants do not seek explanations for AI-generated code errors and instead try to fix them manually.
Phrase: Not seeking explanations for errors.