You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (20 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
20. 
Concepts: {Repeat the input 20}
Relationship: {What is logical relationship between concepts in code 20, or N/A if not applicable}
Criteria: {Who did what, and how for code 20}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: ask a question, asking a follow-up question
- Users ask questions to seek information or clarification.
- A user asks follow-up questions to clarify or gather more information.

2.
Concepts: information seeking, seek platform information
- Users asking questions to gain knowledge or resources related to the software.
- Users inquire about platform information and clarification.

3.
Concepts: requesting new features, suggest new features
- Users request or are invited to suggest new features to designers.
- Users suggest or request new features or functionalities for physics experiments.

4.
Concepts: identify user needs, inquire about user needs
- Designers identify user needs by identifying potential needs.
- Designers inquire about user problems and request clarification on user needs.

5.
Concepts: respond to inquiries, respond to user inquiries
- The community or designers respond to user questions or concerns.
- Designers respond to user questions and respond quickly to user inquiries.

6.
Concepts: involving users in design, integrating user feedback
- Designers involve users in the design process through feedback or testing.
- Designers acknowledge and incorporate user feedback into the design process.

7.
Concepts: address user feedback, gather and respond to user opinions
- Designers address feedback by requesting and responding to user feedback.
- Designers gather opinions from users and respond to their information about feature development.

8.
Concepts: resolve inquiries positively, user interaction and gratitude
- Users express gratitude and designers respond positively.
- Users interact with designers and express gratitude.

9.
Concepts: apologize for inconvenience, apologies and politeness, apologize for disturbance
- Designers apologize for inconvenience caused by timing.
- Expressions of politeness, apologies, or acknowledgment of potential inconvenience by the designers.
- Designers apologize for interrupting or disturbing the community.

10.
Concepts: open to alternatives, offer compromise solutions
- The designer is open to alternative solutions or approaches.
- Designers propose compromises by offering alternative solutions.

11.
Concepts: gratitude, expressing gratitude for community support
- Expressing gratitude or appreciation for the software or community support.
- Users express gratitude or acknowledgment for resources or assistance.

12.
Concepts: improving avatar quality, discuss avatar customization
- Designers express desire to improve avatar quality.
- Designers or users discuss avatar customization or image management.

13.
Concepts: share knowledge, share design thoughts, communicate about group sharing features
- Designers share knowledge and current efforts.
- Designers share design thoughts and explain technical artifacts.
- Designers discuss and communicate with the group about sharing features.

14.
Concepts: visual confirmation, provide visual aids
- A developer uses visual aids to confirm or illustrate a point.
- Designers provide visual aids and examples to explain concepts.

15.
Concepts: providing user guidance, providing feature guidance
- Designers provide guidance on using the software.
- Designers provide step-by-step guidance on using a feature.

16.
Concepts: promise of update, commit to improvement
- A designer assures the community that an update is in progress.
- Designers commit to improvement and promise future updates.

17.
Concepts: discuss future plans, planning long-term development goals
- Designers discuss future plans and propose design ideas for future projects.
- Designers discuss or plan long-term development goals or strategies.

18.
Concepts: ensure compatibility, compatibility theorization
- Designers ensure compatibility and discuss system requirements.
- Designer theorizes about compatibility or potential issues

19.
Concepts: discuss context of use, discuss software usability
- Users describe the specific contexts in which they use the software.
- Users comment on the ease of use, practicality, or user experience of the software.

20.
Concepts: identify limitations, addressing technical constraints
- Designers identify limitations and describe system limitations.
- Designers consider or address technical constraints or limitations.
===
Here are the definitions for each code:

---
1.
Concepts: ask a question, asking a follow-up question
Relationship: Asking a question leads to asking follow-up questions for clarification.
Criteria: Users ask questions and follow-up questions to clarify information.
Phrase: Seeking information through questioning.

2.
Concepts: information seeking, seek platform information
Relationship: Users seek information about the platform to gain knowledge.
Criteria: Users ask questions to gain knowledge or resources related to the software.
Phrase: Seeking platform information.

3.
Concepts: requesting new features, suggest new features
Relationship: Users suggest new features, which leads to feature requests.
Criteria: Users request or suggest new features or functionalities for physics experiments.
Phrase: Requesting new features.

4.
Concepts: identify user needs, inquire about user needs
Relationship: Identifying user needs involves inquiring about user problems.
Criteria: Designers identify user needs by inquiring about user problems.
Phrase: Identifying user needs.

5.
Concepts: respond to inquiries, respond to user inquiries
Relationship: Responding to inquiries addresses user questions or concerns.
Criteria: The community or designers respond to user questions or concerns.
Phrase: Responding to user inquiries.

6.
Concepts: involving users in design, integrating user feedback
Relationship: Involving users in design integrates user feedback.
Criteria: Designers involve users in the design process through feedback or testing.
Phrase: Involving users in design.

7.
Concepts: address user feedback, gather and respond to user opinions
Relationship: Addressing feedback involves gathering and responding to user opinions.
Criteria: Designers address feedback by gathering and responding to user opinions.
Phrase: Addressing user feedback.

8.
Concepts: resolve inquiries positively, user interaction and gratitude
Relationship: Resolving inquiries positively leads to user gratitude.
Criteria: Users express gratitude and designers respond positively.
Phrase: Resolving inquiries positively.

9.
Concepts: apologize for inconvenience, apologies and politeness, apologize for disturbance
Relationship: Apologizing for inconvenience involves expressing politeness.
Criteria: Designers apologize for inconvenience caused by timing.
Phrase: Apologizing for inconvenience.

10.
Concepts: open to alternatives, offer compromise solutions
Relationship: Being open to alternatives involves offering compromise solutions.
Criteria: Designers propose compromises by offering alternative solutions.
Phrase: Offering compromise solutions.

11.
Concepts: gratitude, expressing gratitude for community support
Relationship: Expressing gratitude acknowledges community support.
Criteria: Users express gratitude or appreciation for the software or community support.
Phrase: Expressing gratitude.

12.
Concepts: improving avatar quality, discuss avatar customization
Relationship: Improving avatar quality involves discussing customization.
Criteria: Designers discuss avatar customization or image management.
Phrase: Improving avatar quality.

13.
Concepts: share knowledge, share design thoughts, communicate about group sharing features
Relationship: Sharing knowledge involves sharing design thoughts and communicating about features.
Criteria: Designers share knowledge and communicate about sharing features.
Phrase: Sharing knowledge.

14.
Concepts: visual confirmation, provide visual aids
Relationship: Visual confirmation involves providing visual aids.
Criteria: Designers provide visual aids and examples to explain concepts.
Phrase: Providing visual aids.

15.
Concepts: providing user guidance, providing feature guidance
Relationship: Providing user guidance involves providing feature guidance.
Criteria: Designers provide guidance on using the software and features.
Phrase: Providing user guidance.

16.
Concepts: promise of update, commit to improvement
Relationship: Promising an update involves committing to improvement.
Criteria: Designers commit to improvement and promise future updates.
Phrase: Committing to improvement.

17.
Concepts: discuss future plans, planning long-term development goals
Relationship: Discussing future plans involves planning long-term goals.
Criteria: Designers discuss future plans and propose design ideas for future projects.
Phrase: Planning long-term development.

18.
Concepts: ensure compatibility, compatibility theorization
Relationship: Ensuring compatibility involves theorizing about compatibility.
Criteria: Designers ensure compatibility and discuss system requirements.
Phrase: Ensuring compatibility.

19.
Concepts: discuss context of use, discuss software usability
Relationship: Discussing context of use involves discussing software usability.
Criteria: Users describe the specific contexts in which they use the software.
Phrase: Discussing software usability.

20.
Concepts: identify limitations, addressing technical constraints
Relationship: Identifying limitations involves addressing technical constraints.
Criteria: Designers identify limitations and address technical constraints.
Phrase: Identifying limitations.

Let me know if you need any further assistance!