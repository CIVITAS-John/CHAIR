You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (19 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
19. 
Concepts: {Repeat the input 19}
Relationship: {What is logical relationship between concepts in code 19, or N/A if not applicable}
Criteria: {Who did what, and how for code 19}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: user interaction, user-designer interaction
- Designers and users engage in dialogue that involves physical interactions with the app or system.
- The collaborative interaction between users and designers that contributes to the design process.

2.
Concepts: user role inquiry, designer inquiry
- The designer inquires about the user's role to understand their needs better.
- Instances where designers seek input or clarification from users to better understand their needs.

3.
Concepts: seeking context, trying to understand the needs
- Designers seek to understand user experiences and challenges encountered during usage.
- The designer seeks to understand the challenges users face with the current software.

4.
Concepts: problem inquiry, inquire about specific problems
- Designer asks users to describe any issues they are facing.
- Designers inquire about specific issues or challenges faced by users during software use.

5.
Concepts: gather user feedback, user experience feedback
- Designer asks users about their experiences to improve the product.
- Designers actively seek feedback from users regarding their experiences with the software.

6.
Concepts: problem solving, user feedback and communication
- Designers encourage users to voice issues or challenges encountered while using the software.
- Designers encourage open communication regarding issues users face with the software.

7.
Concepts: resources sharing
- Instances where designers or users share resources, such as download links, development plans, or announcements.
- Information about where and how to access resources, files, or downloads related to Physics Lab.
- Instances where users or designers share files, images, or other resources with the community.

8.
Concepts: technical constraints
- Instances where technical limitations or requirements are discussed.
- Instances where limitations or constraints of the software are mentioned.

9.
Concepts: promote community engagement
- Instances where members of the community actively participate in discussions, ask questions, or provide feedback.
- Instances where users or designers engage in discussions that foster community interaction and participation.
- Active participation and interaction among community members, including both users and designers.
- Efforts made by designers to actively involve and communicate with the user community.

10.
Concepts: collaborative problem solving
- Moments where designers and users work together to address issues.
- Collaborative efforts between users and designers to solve issues and improve the product.
- Instances where users and designers work together to address issues or improve the software.

11.
Concepts: user engagement
- Instances where users actively participate in the conversation, showing interest or involvement in the community.
- Instances where users engage with designers through questions, feedback, or expressions of anticipation.
- Instances where users actively participate in the conversation, showing interest and involvement.

12.
Concepts: encourage participatory design
- Instances where the community contributes to the design and development of the Physics Lab by providing suggestions or feedback that influence the development process.
- Instances where designers seek or consider user input in the design and development process.
- Instances where users are invited to participate in the design process or provide input.
- Instances where users and designers collaboratively discuss features and usability, reflecting a user-centered design approach.
- The involvement of users in the design and development process, contributing their insights and needs.
- Encouragement by designers for users to contribute ideas, feedback, and suggestions for the development of Physics Lab.
- Active involvement of users in the design process to ensure the product meets their needs and preferences.
- The involvement of users in the design process to ensure the product meets their needs and preferences.
- Instances where users and designers collaboratively discuss or work on design improvements.

13.
Concepts: designer response
- Instances where designers respond to user feedback or suggestions.
- Instances where designers respond to user feedback or queries.

14.
Concepts: user feedback integration
- Instances where user feedback is acknowledged and incorporated into the design process.
- Instances where user feedback is actively sought and incorporated into the design process.

15.
Concepts: user response
- Input and suggestions provided by users regarding the design and functionality of the product.
- Instances where users provide feedback or ask questions that influence the design process.
- Instances where users provide feedback or suggestions to improve the software.
- Instances where users provide suggestions or feedback on features and functionalities.
- Instances where users provide feedback or ask questions about the app's development and updates.

16.
Concepts: role identification
- Instances where users or designers identify their roles, which can help understand the community structure and the roles within it.
- Instances where participants identify their roles or expertise, contributing to the problem-solving process.
- Identifying roles within the community, such as designers, teachers, or other users.

17.
Concepts: informal communication
- Instances where the tone of the conversation is casual or informal, indicating the nature of the community's communication style.
- Casual and non-technical interactions among community members, including humor and personal remarks.

18.
Concepts: designer responsiveness
- Instances where designers respond to user queries or engage with user comments, indicating active communication between designers and users.
- Instances where designers respond to user inquiries, suggestions, or feedback.
- Instances where designers respond to user feedback or suggestions.
- Instances where designers acknowledge user feedback and discuss potential solutions or updates.
- Designers responding to user feedback and addressing their concerns or suggestions.
- Instances where designers respond to user queries or feedback, showing attentiveness to user needs.

19.
Concepts: iterative development
- Instances where designers discuss updates, new features, or bug fixes.
- The process of repeatedly refining and improving a product based on feedback and testing.
- The process of continuously improving the product based on feedback and testing.
- Instances where the design process is described as iterative, with ongoing optimizations and updates.
===
---
Definitions for each code (19 in total):
1.
Concepts: user interaction, user-designer interaction  
Relationship: Both concepts involve a two-way communication process where users and designers exchange information and collaborate.  
Criteria: Users and designers engage in dialogue about physical interactions with the app, contributing to the design process.  
Phrase: Engage in collaborative dialogue.

2.
Concepts: user role inquiry, designer inquiry  
Relationship: Both concepts focus on understanding user needs through questioning, with designers seeking clarity about user roles.  
Criteria: Designers inquire about users' roles to better understand their needs and gather input.  
Phrase: Seek user role clarification.

3.
Concepts: seeking context, trying to understand the needs  
Relationship: Both concepts highlight the designer's effort to understand the user's experiences and challenges in order to design effectively.  
Criteria: Designers seek to comprehend user experiences and challenges with the software.  
Phrase: Understand user experiences.

4.
Concepts: problem inquiry, inquire about specific problems  
Relationship: Both concepts involve designers actively seeking detailed information about issues faced by users.  
Criteria: Designers ask users to describe specific problems encountered during software use.  
Phrase: Ask about user issues.

5.
Concepts: gather user feedback, user experience feedback  
Relationship: Both concepts revolve around the process of collecting feedback from users to enhance the product.  
Criteria: Designers actively seek user feedback on their experiences to inform product improvements.  
Phrase: Collect user experiences.

6.
Concepts: problem solving, user feedback and communication  
Relationship: Both concepts emphasize the importance of communication in addressing user issues and facilitating solutions.  
Criteria: Designers encourage users to voice their challenges, fostering open communication regarding software issues.  
Phrase: Encourage open communication.

7.
Concepts: resources sharing  
Relationship: All concepts relate to the exchange of information and resources among community members.  
Criteria: Designers and users share resources, such as files and information, with the community.  
Phrase: Share valuable resources.

8.
Concepts: technical constraints  
Relationship: Both concepts address limitations of the software, impacting user and designer interactions.  
Criteria: Discussions occur regarding the technical limitations or requirements of the software.  
Phrase: Discuss technical limitations.

9.
Concepts: promote community engagement  
Relationship: All concepts highlight the active participation and interaction that build a sense of community.  
Criteria: Community members participate in discussions, fostering interaction between users and designers.  
Phrase: Foster community participation.

10.
Concepts: collaborative problem solving  
Relationship: Both concepts focus on teamwork between users and designers in addressing challenges.  
Criteria: Designers and users work together to solve issues and enhance the product.  
Phrase: Collaborate to solve problems.

11.
Concepts: user engagement  
Relationship: Both concepts reflect active involvement of users in discussions, indicating their interest in the community.  
Criteria: Users actively participate in conversations, showing interest and involvement with designers.  
Phrase: Actively engage users.

12.
Concepts: encourage participatory design  
Relationship: All concepts involve user contributions to the design process, promoting a user-centered approach.  
Criteria: Designers invite user input and feedback, fostering collaborative discussions on design improvements.  
Phrase: Promote user contributions.

13.
Concepts: designer response  
Relationship: Both concepts involve interaction where designers react to user feedback or suggestions.  
Criteria: Designers respond to user feedback or queries, facilitating communication.  
Phrase: Respond to user feedback.

14.
Concepts: user feedback integration  
Relationship: Both concepts emphasize the importance of incorporating user feedback into design decisions.  
Criteria: User feedback is acknowledged and actively integrated into the design process.  
Phrase: Integrate user feedback.

15.
Concepts: user response  
Relationship: All concepts pertain to the input provided by users that influences design and functionality.  
Criteria: Users provide feedback and suggestions that impact product design.  
Phrase: Provide user feedback.

16.
Concepts: role identification  
Relationship: Both concepts involve the recognition and clarification of roles within the community, aiding in understanding dynamics.  
Criteria: Users and designers identify their roles, contributing to community structure and problem-solving.  
Phrase: Identify community roles.

17.
Concepts: informal communication  
Relationship: Both concepts describe the casual nature of interactions among community members.  
Criteria: Community members engage in casual, non-technical conversations, fostering a friendly environment.  
Phrase: Engage in casual interactions.

18.
Concepts: designer responsiveness  
Relationship: Both concepts highlight how designers address user inquiries and feedback actively.  
Criteria: Designers respond to user questions and feedback, showing attentiveness to user needs.  
Phrase: Show designer attentiveness.

19.
Concepts: iterative development  
Relationship: All concepts relate to the ongoing process of refining a product based on user feedback and testing.  
Criteria: Designers discuss updates and improvements, continuously refining the product through iteration.  
Phrase: Engage in iterative refinement.