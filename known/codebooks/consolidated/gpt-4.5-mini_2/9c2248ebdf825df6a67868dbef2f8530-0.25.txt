You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (51 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
51. 
Concepts: {Repeat the input 51}
Relationship: {What is logical relationship between concepts in code 51, or N/A if not applicable}
Criteria: {Who did what, and how for code 51}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: share info on app release, inform about release
- Designer shares information about the status of app releases.
- The designer provides information about the testing status and discusses the software release process.

2.
Concepts: communicate progress, communicate progress updates
- The designer highlights the extent of progress made in software updates and communicates upcoming changes.
- Designers communicate updates regarding the progress and plans for software releases.

3.
Concepts: introduce new components, give an intro to the update content
- Designer lists new components included in an update and introduces new features to users.
- Designers introduce the content of upcoming updates, highlighting new features or improvements.

4.
Concepts: list bug fixes, share update details
- Designers outline specific bug fixes and new features in updates to ensure users are informed.
- Designers provide detailed notes on updates and instructions to help users understand new features.

5.
Concepts: acknowledge complexity, gives a semi-promise of its completion date
- A designer indicates that a task is complex and may require additional time for completion.
- A designer indicates that a feature is complex but expresses hope for its timely completion.

6.
Concepts: explain delays, give reason for why it's not completed
- Designer explains the reasons for delays in software updates and elaborates on the timeline.
- Designers provide reasons for delays or incomplete features, often citing complexity or technical challenges.

7.
Concepts: communicate timelines, provide android update timeline
- A designer shares the expected schedule for updates and sets expectations for users.
- Designer provides a timeline for an upcoming update for a specific platform.

8.
Concepts: plan feature development, share development focus
- Designers outline their plans and priorities for future feature development.
- The designer communicates current priorities and ongoing work to users regarding future features.

9.
Concepts: address limitations, explain software limitations
- Designer discusses how limitations can be addressed while acknowledging current solution constraints.
- A designer acknowledges potential issues and explains limitations related to software compatibility.

10.
Concepts: explain simulation detail, detail simulation features
- A designer explains how to simulate specific components in the software.
- A designer describes plans for features that simulate experiments, particularly in electricity.

11.
Concepts: align with user needs, consult educators for input
- Designers align software features with user and educational needs expressed by users.
- Designers consult with teachers to understand their needs and align software features with educational standards.

12.
Concepts: refine design, adjust features
- Designers indicate the need for refinement and adaptations in the software's design.
- Designers discuss adjustments needed for specific features and modifications to components.

13.
Concepts: collaborate on layout, discuss and invite feature suggestions
- Users and designers discuss decisions regarding the layout of the software interface collaboratively.
- Designers engage in discussions about the features and functionalities of the software, considering user input.

14.
Concepts: verify and assure compatibility, outline requirements and explain compatibility
- A designer verifies and assures users of the software's compatibility with specified hardware and requirements.
- The designer outlines essential system requirements and explains how they relate to the software's compatibility with various systems.

15.
Concepts: provide user support, seek technical assistance
- Designers offer assistance and technical support to users encountering issues.
- Designers seek assistance on technical issues related to the software and inquire about user problems.

16.
Concepts: offer potential solutions, share potential solutions
- Designers offer solutions for compatibility or technical issues encountered by users.
- Designers share potential solutions to user concerns, indicating a proactive approach to feedback.

17.
Concepts: validate user requests, respond to the feature request
- Designers validate and accept user requests or suggestions for future updates.
- Designers respond to user requests for features, indicating ongoing research or development.

18.
Concepts: react to user feedback, acknowledge and implement feedback
- Designers respond to user feedback by indicating future changes and making adjustments.
- Designers acknowledge user suggestions and discuss plans for implementing features based on feedback.

19.
Concepts: establish feedback loops, mention feedback based prompts
- Designers create processes for soliciting and implementing user feedback prior to new developments.
- Designers indicate that user feedback will inform the design and functionality of the software.

20.
Concepts: acknowledge user experiences, confirm understanding and receipt
- Designers express understanding of user needs and acknowledge user input.
- Users and designers confirm their understanding and acknowledgment of the information exchanged.

21.
Concepts: clarify version details, provide technical clarification
- Designer clarifies the specific version of a product and its purpose to ensure users are informed.
- Designers clarify technical aspects and provide specifications to ensure users are informed.

22.
Concepts: clarify existing feature, explain feature functions
- Designer clarifies the functionality of existing features in the software.
- Designers introduce and explain the functionalities and significance of new software features.

23.
Concepts: clarify design goals, explain design rationale
- A designer addresses usability concerns by explaining design goals and intentions.
- A designer explains the rationale behind design choices and the intentions for the app design.

24.
Concepts: instructional design, explain design principles
- The designer discusses instructional design principles for user guidance.
- Designers articulate the principles guiding the design process and explain the underlying philosophy.

25.
Concepts: simplify design, simplification and refinement in design
- The designer shares thoughts on simplifying software design and suggests simplifications.
- Designers discuss the importance of simplification and refinement in the design process.

26.
Concepts: subject specific tools, highlight component functionality
- Designers specify tools or components relevant to the subject matter, enhancing educational experiences.
- Designers describe components that are optimal for educational use, emphasizing their functionalities.

27.
Concepts: describe technical issues, highlight technical challenges
- Users explain technical issues and limitations affecting their school's computer system functionality.
- Users discuss technical constraints impacting software use in educational settings.

28.
Concepts: seek user assistance, request user resources
- Users request assistance and guidance for effectively using the software.
- Users request a user manual or documentation for better understanding of the software.

29.
Concepts: inquire about update status, express concern for updates
- Users inquire about the timing and status of upcoming software updates.
- Users express concern and anticipation regarding the status of updates or new features.

30.
Concepts: user adjustment, inquire about compatibility
- A user confirms compatibility of their operating system with the software.
- A user provides specific information regarding system compatibility and inquires about software compatibility.

31.
Concepts: pose technical inquiries, engage in troubleshooting
- Users pose technical questions regarding the software's usage or availability.
- User engages in troubleshooting discussions regarding software compatibility.

32.
Concepts: suggest usability improvements, suggest usability enhancements
- Users recommend changes or enhancements to improve usability.
- Users suggest features that would improve usability and convenience in the software.

33.
Concepts: review user experience, compare software alternatives
- Users express their opinions and experiences regarding the software within the community.
- Users provide feedback comparing the software's practicality and effectiveness to other applications.

34.
Concepts: provide contextual information, share experiences and support
- Users provide context for their experiences and needs related to the software.
- Users share stories that provide context for their experiences with the software, fostering connection.

35.
Concepts: gather user context, collect user insights
- A designer gathers context by asking users about their roles and backgrounds to better understand their needs.
- Designers gather user input and seek further information to understand detailed requirements for future design choices.

36.
Concepts: elaborate on inquiries, seek clarification through inquiry
- Users provide additional context or clarification for their questions or discussions.
- Users ask questions to seek information or clarification on various topics.

37.
Concepts: inviting more questions, engage by asking questions
- A designer invites users to ask more questions about the software.
- Users initiate interaction by asking questions related to the software.

38.
Concepts: guide resource access, provide detailed access information
- Designer directs users to specific resources for downloading or accessing software.
- Designers or users provide detailed information about accessing software or resources.

39.
Concepts: acknowledging community needs, commit to future consultation
- A designer acknowledges community needs and discusses future possibilities.
- Designers indicate plans to involve the community in future decisions and promise to seek feedback.

40.
Concepts: engage humorously, demonstrate engagement
- Designer reacts humorously to user comments or stories to create a light-hearted atmosphere.
- The designer shows engagement through affirmative responses and expresses amusement in interactions.

41.
Concepts: involve users in design, collaborate with users
- Designers engage users in providing feedback and integrating it into the design process.
- Designers involve users in the design process, allowing them to contribute ideas and make decisions.

42.
Concepts: acknowledge self-sufficiency, express self-solved solutions
- Users acknowledge their capability to access information and resources independently.
- Users express gratitude for successfully finding information and resources independently within the group.

43.
Concepts: acknowledgment, pay respect to experts
- Users acknowledge the contributions of experts and make specific requests for features.
- Users acknowledge the expertise of others in their requests for features.

44.
Concepts: confirm and affirm contributions, express agreement and support
- Users confirm statements and affirm contributions made during discussions.
- Users express agreement with suggestions made by others, demonstrating community consensus.

45.
Concepts: appreciation of plans, appreciate developer feedback
- A user expresses positive feedback regarding the development plans and progress.
- Users show appreciation for feedback and respond positively to developers' information regarding feature development.

46.
Concepts: initiate positive interactions, initiate and reciprocate greetings
- Users initiate friendly greetings and engage in positive exchanges within the community.
- Designers greet users warmly and respond to community greetings to encourage engagement.

47.
Concepts: provide positive community responses, foster community support and gratitude
- Users respond positively in discussions, sharing experiences or gratitude.
- Users recognize and appreciate help received, contributing to a positive community spirit.

48.
Concepts: affirm user identity, confirm professional role
- Users confirm their identity or role in response to inquiries.
- A user confirms their professional role in response to an inquiry.

49.
Concepts: share past experiences, share teaching experiences
- Users share past incidents that highlight challenges faced in educational settings.
- Users share their teaching experiences in high school and middle school contexts.

50.
Concepts: share professional background, establish credibility through experience
- Users share their professional background to establish context and credibility.
- Users share their teaching experiences to enhance their credibility in discussions.

51.
Concepts: announce product updates
- Designers provide updates on the current status and future plans for the Physics Lab software.
- Designer provides updates on changes to software components and announces planned improvements.
===
---
Definitions for each code (51 in total):
1.
Concepts: share info on app release, inform about release
Relationship: The designer shares information regarding the app's release status and the software release process.
Criteria: The designer informs users about the app's release and testing status.
Phrase: Inform about app release.

2.
Concepts: communicate progress, communicate progress updates
Relationship: The designer highlights progress made in software updates and communicates future plans.
Criteria: The designer shares updates on software development progress and upcoming changes.
Phrase: Communicate progress updates.

3.
Concepts: introduce new components, give an intro to the update content
Relationship: The designer introduces new features and components included in software updates.
Criteria: The designer presents new features and content of upcoming updates to users.
Phrase: Introduce new components.

4.
Concepts: list bug fixes, share update details
Relationship: Designers outline specific bug fixes and new features to keep users informed.
Criteria: The designer provides detailed notes on updates and instructions regarding new features.
Phrase: Share update details.

5.
Concepts: acknowledge complexity, gives a semi-promise of its completion date
Relationship: The designer acknowledges the complexity of tasks while expressing hope for timely completion.
Criteria: The designer indicates the complexity of tasks and provides a tentative completion timeframe.
Phrase: Acknowledge task complexity.

6.
Concepts: explain delays, give reason for why it's not completed
Relationship: The designer explains reasons for delays in software updates and discusses timelines.
Criteria: The designer provides explanations for delays or incomplete features due to complexity.
Phrase: Explain delays.

7.
Concepts: communicate timelines, provide android update timeline
Relationship: The designer shares expected schedules for updates and sets user expectations.
Criteria: The designer provides a timeline for upcoming updates for specific platforms.
Phrase: Communicate update timelines.

8.
Concepts: plan feature development, share development focus
Relationship: Designers outline their plans and priorities for future feature development.
Criteria: The designer communicates current priorities and ongoing work regarding future features.
Phrase: Plan feature development.

9.
Concepts: address limitations, explain software limitations
Relationship: The designer discusses how limitations can be addressed while acknowledging constraints.
Criteria: The designer explains potential issues and limitations related to software compatibility.
Phrase: Address software limitations.

10.
Concepts: explain simulation detail, detail simulation features
Relationship: The designer explains how to simulate specific components and describes simulation features.
Criteria: The designer details plans for features that simulate experiments in the software.
Phrase: Explain simulation details.

11.
Concepts: align with user needs, consult educators for input
Relationship: Designers align software features with user and educational needs through consultation.
Criteria: The designer consults with educators to understand their needs and align features accordingly.
Phrase: Align with user needs.

12.
Concepts: refine design, adjust features
Relationship: Designers indicate the need for refinement and adjustments in the software's design.
Criteria: The designer discusses necessary modifications to specific features and components.
Phrase: Refine design.

13.
Concepts: collaborate on layout, discuss and invite feature suggestions
Relationship: Users and designers discuss layout decisions and feature functionalities collaboratively.
Criteria: The designer engages in discussions about features and invites user input.
Phrase: Collaborate on layout.

14.
Concepts: verify and assure compatibility, outline requirements and explain compatibility
Relationship: The designer verifies software compatibility and outlines essential system requirements.
Criteria: The designer assures users of compatibility with specified hardware and explains requirements.
Phrase: Verify software compatibility.

15.
Concepts: provide user support, seek technical assistance
Relationship: Designers offer assistance and seek help for technical issues encountered by users.
Criteria: The designer provides technical support to users facing issues and seeks assistance when needed.
Phrase: Provide user support.

16.
Concepts: offer potential solutions, share potential solutions
Relationship: Designers offer and share solutions for compatibility or technical issues.
Criteria: The designer proactively addresses user concerns by providing potential solutions.
Phrase: Offer potential solutions.

17.
Concepts: validate user requests, respond to the feature request
Relationship: Designers validate and respond to user requests for future updates.
Criteria: The designer acknowledges and accepts user suggestions for features.
Phrase: Validate user requests.

18.
Concepts: react to user feedback, acknowledge and implement feedback
Relationship: Designers respond to user feedback and discuss plans for future changes.
Criteria: The designer acknowledges user suggestions and indicates future implementation plans.
Phrase: React to user feedback.

19.
Concepts: establish feedback loops, mention feedback based prompts
Relationship: Designers create processes for soliciting and implementing user feedback.
Criteria: The designer indicates that user feedback will inform future design and functionality.
Phrase: Establish feedback loops.

20.
Concepts: acknowledge user experiences, confirm understanding and receipt
Relationship: Designers express understanding of user needs and acknowledge input received.
Criteria: The designer confirms understanding of user information exchanged.
Phrase: Acknowledge user experiences.

21.
Concepts: clarify version details, provide technical clarification
Relationship: The designer clarifies product versions and technical aspects to inform users.
Criteria: The designer provides specifications and clarifications regarding the product version.
Phrase: Clarify version details.

22.
Concepts: clarify existing feature, explain feature functions
Relationship: Designers clarify functionalities of existing features and introduce new ones.
Criteria: The designer explains the significance and functionality of software features.
Phrase: Clarify existing features.

23.
Concepts: clarify design goals, explain design rationale
Relationship: The designer addresses usability concerns by explaining design goals and intentions.
Criteria: The designer explains the rationale behind design choices and intentions.
Phrase: Clarify design goals.

24.
Concepts: instructional design, explain design principles
Relationship: The designer discusses instructional design principles guiding user guidance.
Criteria: The designer articulates principles that inform the design process.
Phrase: Explain design principles.

25.
Concepts: simplify design, simplification and refinement in design
Relationship: The designer shares thoughts on simplifying and refining software design.
Criteria: The designer discusses the importance of simplification in the design process.
Phrase: Simplify design.

26.
Concepts: subject specific tools, highlight component functionality
Relationship: Designers specify tools relevant to the subject matter to enhance educational experiences.
Criteria: The designer describes components optimal for educational use and their functionalities.
Phrase: Highlight component functionality.

27.
Concepts: describe technical issues, highlight technical challenges
Relationship: Users explain technical issues affecting functionality and discuss constraints.
Criteria: The users provide feedback on technical limitations impacting software use.
Phrase: Describe technical issues.

28.
Concepts: seek user assistance, request user resources
Relationship: Users request assistance and guidance for using the software effectively.
Criteria: The users inquire about user manuals or documentation for better understanding.
Phrase: Seek user assistance.

29.
Concepts: inquire about update status, express concern for updates
Relationship: Users inquire about the timing and status of software updates and express concern.
Criteria: The users ask about the status of updates or new features.
Phrase: Inquire about update status.

30.
Concepts: user adjustment, inquire about compatibility
Relationship: A user confirms and inquires about the compatibility of their operating system with the software.
Criteria: The user provides information regarding system compatibility and asks questions.
Phrase: Inquire about compatibility.

31.
Concepts: pose technical inquiries, engage in troubleshooting
Relationship: Users pose technical questions and engage in troubleshooting discussions.
Criteria: The users ask questions regarding software usage and compatibility.
Phrase: Pose technical inquiries.

32.
Concepts: suggest usability improvements, suggest usability enhancements
Relationship: Users recommend changes to improve usability and convenience in the software.
Criteria: The users suggest features that would enhance usability.
Phrase: Suggest usability improvements.

33.
Concepts: review user experience, compare software alternatives
Relationship: Users express opinions and experiences regarding the software and compare it to others.
Criteria: The users provide feedback comparing the software's effectiveness to alternatives.
Phrase: Review user experience.

34.
Concepts: provide contextual information, share experiences and support
Relationship: Users provide context for their experiences and share stories related to the software.
Criteria: The users share experiences that foster connection within the community.
Phrase: Provide contextual information.

35.
Concepts: gather user context, collect user insights
Relationship: A designer gathers context and insights from users to understand their needs.
Criteria: The designer seeks information about user roles and backgrounds for future design choices.
Phrase: Gather user context.

36.
Concepts: elaborate on inquiries, seek clarification through inquiry
Relationship: Users provide additional context for their questions and seek information.
Criteria: The users ask questions to clarify various topics.
Phrase: Elaborate on inquiries.

37.
Concepts: inviting more questions, engage by asking questions
Relationship: A designer invites users to ask more questions and engage in discussions.
Criteria: The designer encourages users to initiate interactions through questions.
Phrase: Invite more questions.

38.
Concepts: guide resource access, provide detailed access information
Relationship: The designer directs users to specific resources for accessing software.
Criteria: The designer provides detailed information about accessing software or resources.
Phrase: Guide resource access.

39.
Concepts: acknowledging community needs, commit to future consultation
Relationship: A designer acknowledges community needs and discusses future involvement.
Criteria: The designer indicates plans to seek community feedback in future decisions.
Phrase: Acknowledge community needs.

40.
Concepts: engage humorously, demonstrate engagement
Relationship: The designer reacts humorously to user comments to create a light-hearted atmosphere.
Criteria: The designer shows engagement through affirmative responses and humor.
Phrase: Engage humorously.

41.
Concepts: involve users in design, collaborate with users
Relationship: Designers engage users in feedback and integrate it into the design process.
Criteria: The designer involves users in providing ideas and making design decisions.
Phrase: Involve users in design.

42.
Concepts: acknowledge self-sufficiency, express self-solved solutions
Relationship: Users acknowledge their capability to find information independently.
Criteria: The users express gratitude for successfully accessing information on their own.
Phrase: Acknowledge self-sufficiency.

43.
Concepts: acknowledgment, pay respect to experts
Relationship: Users acknowledge contributions of experts and request features.
Criteria: The users recognize the expertise of others in their feature requests.
Phrase: Acknowledge experts.

44.
Concepts: confirm and affirm contributions, express agreement and support
Relationship: Users confirm statements and affirm contributions made during discussions.
Criteria: The users express agreement with suggestions made by others.
Phrase: Confirm contributions.

45.
Concepts: appreciation of plans, appreciate developer feedback
Relationship: A user expresses positive feedback regarding development plans and progress.
Criteria: The users show appreciation for developers' feedback on feature development.
Phrase: Appreciate developer feedback.

46.
Concepts: initiate positive interactions, initiate and reciprocate greetings
Relationship: Users and designers engage in friendly greetings and positive exchanges.
Criteria: The users and designers initiate and respond to greetings to encourage engagement.
Phrase: Initiate positive interactions.

47.
Concepts: provide positive community responses, foster community support and gratitude
Relationship: Users respond positively in discussions and share gratitude.
Criteria: The users recognize and appreciate help received, contributing to community spirit.
Phrase: Provide positive responses.

48.
Concepts: affirm user identity, confirm professional role
Relationship: Users confirm their identity or role in response to inquiries.
Criteria: The users affirm their professional roles in discussions.
Phrase: Affirm user identity.

49.
Concepts: share past experiences, share teaching experiences
Relationship: Users share past incidents and teaching experiences related to educational challenges.
Criteria: The users provide insights into their experiences in educational settings.
Phrase: Share past experiences.

50.
Concepts: share professional background, establish credibility through experience
Relationship: Users share their professional background to enhance context and credibility.
Criteria: The users provide their teaching experiences to establish credibility in discussions.
Phrase: Share professional background.

51.
Concepts: announce product updates
Relationship: Designers provide updates on the status and future plans for the software.
Criteria: The designer announces changes and planned improvements to the software components.
Phrase: Announce product updates.
---