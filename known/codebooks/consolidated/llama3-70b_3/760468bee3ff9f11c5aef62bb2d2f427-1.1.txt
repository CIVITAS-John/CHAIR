You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (8 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
8. 
Concepts: {Repeat the input 8}
Relationship: {What is logical relationship between concepts in code 8, or N/A if not applicable}
Criteria: {Who did what, and how for code 8}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: design intentions, explaining intentions
- Explaining the intention or goal behind a design decision or feature.
- Explaining the intention or purpose behind a question or feature.

2.
Concepts: explain design choice, clarifying design choices, explaining design rationale, explaining design decisions, promoting understanding of design decisions
- The designer explains the reasoning behind a design choice or feature.
- The designer clarifies or explains design choices or decisions.
- Designer explains design rationale or decisions.
- The designer explains the reasoning behind a design decision.
- The designer explains the reasoning or thought process behind a design decision.

3.
Concepts: explaining new features, explaining software features
- The designer explains or clarifies the development process or new features of the software.
- The designer explains the features and capabilities of the software.

4.
Concepts: providing explanation, clarifying functionality, explaining design functionality, explaining functionality
- The designer explains a concept, feature, or functionality.
- The designer explains or clarifies the functionality of a feature.
- Designer explains design functionality to facilitate understanding.
- A designer explains how a feature or component works.

5.
Concepts: providing explanations, explain development process
- The designer provides explanations for features, updates, or technical issues.
- A designer explains the development process or technical details of a feature.
- A user explains the context or reason for a particular need or requirement.

6.
Concepts: clarify technical aspect, explain technical details
- Designer clarifies technical aspects, concepts, or mechanisms to the user.
- Designer explains technical details, concepts, or mechanisms to the user.

7.
Concepts: providing technical insight, sharing technical knowledge
- The designer provides technical insight or explanation.
- The designer shares technical knowledge or explains a technical aspect of the system.

8.
Concepts: system compatibility theories, theorizing about compatibility
- Theorizes or speculates about system compatibility or technical issues.
- Theorizing or hypothesizing about the compatibility or functionality of a system.
===
Here are the defined codes with their respective concepts, relationships, criteria, and verb phrases:

---
**1.**
Concepts: design intentions, explaining intentions
Relationship: The design intentions are explained to provide clarity on the purpose or goal behind a design decision or feature.
Criteria: Designers explain the intentions behind their design decisions or features.
Phrase: Explaining design intentions

**2.**
Concepts: explain design choice, clarifying design choices, explaining design rationale, explaining design decisions, promoting understanding of design decisions
Relationship: The designer explains the reasoning behind their design choices to promote understanding.
Criteria: Designers clarify and explain their design choices and decisions.
Phrase: Clarifying design decisions

**3.**
Concepts: explaining new features, explaining software features
Relationship: The designer explains the features and capabilities of the software, including new features, to facilitate understanding.
Criteria: Designers explain software features and new developments.
Phrase: Explaining software features

**4.**
Concepts: providing explanation, clarifying functionality, explaining design functionality, explaining functionality
Relationship: The designer explains concepts, features, or functionalities to provide clarity on how they work.
Criteria: Designers explain functionalities and features to facilitate understanding.
Phrase: Explaining functionalities

**5.**
Concepts: providing explanations, explain development process
Relationship: The designer provides explanations for features, updates, or technical issues, including the development process.
Criteria: Designers provide explanations for software development and updates.
Phrase: Providing explanations

**6.**
Concepts: clarify technical aspect, explain technical details
Relationship: The designer clarifies and explains technical aspects, concepts, or mechanisms to promote understanding.
Criteria: Designers clarify and explain technical details and concepts.
Phrase: Clarifying technical details

**7.**
Concepts: providing technical insight, sharing technical knowledge
Relationship: The designer shares technical knowledge and provides insight to promote understanding.
Criteria: Designers share technical knowledge and provide technical insight.
Phrase: Sharing technical knowledge

**8.**
Concepts: system compatibility theories, theorizing about compatibility
Relationship: The designer theorizes or speculates about system compatibility or technical issues to explore possibilities.
Criteria: Designers theorize about system compatibility and technical issues.
Phrase: Theorizing about compatibility