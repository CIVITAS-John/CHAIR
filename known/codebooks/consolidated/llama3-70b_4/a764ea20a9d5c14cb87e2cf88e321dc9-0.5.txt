You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: providing reasons, rationale for development decision, provides rationale
- Designer provides a reason or explanation for a decision or action.
- The designer provides a rationale for a development decision.
- Provides a justification or explanation for a decision or design choice.

2.
Concepts: design rationale, explaining design decisions, educating on design choices, design explanation
- A designer explains the rationale behind a design decision.
- The designer explains the reasoning behind design decisions.
- The designer explains the reasoning behind a design choice or decision.
- A designer explains or justifies a design decision to promote understanding.

3.
Concepts: design goal explanation, explaining design philosophy
- Explaining the design goals, objectives, or philosophies behind a feature or product.
- Explaining the underlying principles or goals of a design or feature.
- Designer explains their design philosophy or approach.

4.
Concepts: consider offline functionality, offline functionality discussion
- Consideration of potential offline functionality or limitations.
- Considering or discussing offline functionality or use cases.

5.
Concepts: need for local export support, identifies need for local export support
- Designer mentions the need for local export support.
- Designer identifies a need for local export support.

6.
Concepts: long-term stability, long-term stability goal
- A designer discusses long-term stability or goals.
- Designer mentions long-term stability as a goal.

7.
Concepts: highlighting key feature benefits, justifying focus on foundational features
- Designer highlights the importance of a feature for long-term stability and ease of adding components.
- Designer explains the importance of foundational features for long-term stability and ease of adding components.

8.
Concepts: emphasizing long-term benefits, highlighting long-term benefits
- Designer highlights the long-term benefits of a particular feature.
- Designer highlights the long-term benefits of a feature or update.

9.
Concepts: evaluates option, considering perspectives, weighing design options
- Designer considers or evaluates an option or solution.
- A designer considers multiple perspectives or options.
- Designer weighs design options or alternatives.

10.
Concepts: consider implications, considering design implications
- A designer considers broader implications or consequences.
- Designer mentions potential implications of a design choice.

11.
Concepts: future compatibility, future technical considerations
- Designer considers future compatibility or technical issues.
- Designer considers potential future technical challenges or solutions.

12.
Concepts: highlighting functionality, illustrating feature functions
- Highlighting the features or functionalities of a system or tool.
- Providing examples or illustrations of a feature's functions or capabilities

13.
Concepts: explaining features, discusses functionality, describing feature use
- A feature or functionality is explained or described.
- Explanation of user control options or features
- Addresses or discusses the functionality of a feature.
- Describing how to use a feature or explaining its functionality.

14.
Concepts: feature acknowledgment, feature need acknowledgment
- Acknowledging the need for a feature or functionality
- A designer acknowledges the need for a feature or functionality.

15.
Concepts: reiterating feature, reiterates feature explanation, reiterating feature clarification
- Designer reiterates or emphasizes a specific feature or functionality.
- Designer reiterates or explains a feature.
- Designer reiterates or clarifies a feature or functionality.

16.
Concepts: clarifies feature, clarifying software features
- A designer clarifies the features or functionality of the software.
- A designer clarifies a feature of the software, explaining its functionality.

17.
Concepts: purpose clarification, feature clarification, clarifying feature purpose, clarifying functionality
- Designer clarifies the purpose or functionality of a feature.
- A designer clarifies the existence or functionality of a feature.
- Reinforcing or elaborating on feature explanations.
- Clarifying existing features or functionality.
- Designer clarifies the purpose of a specific feature or tool.
- Designer clarifies the functionality or usage of a feature.

18.
Concepts: ensuring understanding, promoting understanding
- A designer ensures that a user understands a concept or information.
- Designer promotes understanding of software features or concepts.

19.
Concepts: highlighting ideal components, providing ideal component information
- A designer highlights ideal components or features.
- The designer provides information about ideal components or features.

20.
Concepts: providing an example, providing feature examples, providing functionality examples
- A designer provides an example to illustrate a concept or feature.
- The designer provides examples of a feature or its applications.
- Designer provides an example or demonstration of a feature's functionality.

21.
Concepts: demonstrating functionality, providing functionality previews
- A designer demonstrates the functionality or feature of the platform.
- Designer provides a preview or demonstration of a feature's functionality.

22.
Concepts: feature explanation, explaining design functionality, explaining functionality, explaining feature functionality
- Designer explains a specific feature or concept of the software.
- Providing detailed information or explanations about a feature.
- Designer explains how a feature works or can be used.
- Explaining the functionality or design of a software component.
- Designer explains how to use a feature or functionality.
- The designer explains how a feature works or its benefits.

23.
Concepts: explain component, explanation of component features
- A designer explains the functionality of a component.
- Designer explains the features of a specific component.

24.
Concepts: describing component features, highlighting component features
- The designer describes a feature or characteristic of a component.
- The designer highlights a feature or characteristic of a component.

25.
Concepts: providing details, provide technical details
- The designer provides detailed information about something.
- The designer provides technical details or explanations.

26.
Concepts: providing technical details, providing technical specifications
- Designers provide technical details about the platform's components or features
- Designer provides technical specifications of a component or feature.

27.
Concepts: feature details, providing feature information, feature information
- The designer provides details about specific features.
- The designer provides information about a specific feature or functionality.
- Designer provides information about a feature or functionality.

28.
Concepts: engaging in iterative design, iterative design process
- Engaging in iterative design or seeking feedback for improvement.
- A designer engages in an iterative design process, soliciting feedback and refining the design.
- A designer describes their iterative design process, seeking opinions and feedback before moving forward.

29.
Concepts: contributing to design refinement, advocating for iterative refinement
- Users contribute to the refinement of the platform's design
- Users advocate for iterative refinement of the platform

30.
Concepts: sequencing design, outlining development sequence
- The designer outlines the sequence of design phases.
- Designer outlines the development sequence or order of features.

31.
Concepts: suggesting gradual development, advising incremental development
- User suggests taking a gradual or incremental approach to development.
- Advising or suggesting an incremental or step-by-step development approach

32.
Concepts: feature complexity, comparing feature complexities
- Designer compares the complexity of different features.
- A designer compares the complexity of different features or tasks.
===
Here are the definitions for each code:

---
1.
Concepts: providing reasons, rationale for development decision, provides rationale
Relationship: The concepts are related in that they all involve the designer explaining or justifying their decisions or actions.
Criteria: Designer provides a reason or explanation for a decision or action.
Phrase: Provides rationale for development decisions.

2.
Concepts: design rationale, explaining design decisions, educating on design choices, design explanation
Relationship: The concepts are related in that they all involve explaining or justifying design decisions to promote understanding.
Criteria: Designer explains the rationale behind a design decision to promote understanding.
Phrase: Explains design rationale.

3.
Concepts: design goal explanation, explaining design philosophy
Relationship: The concepts are related in that they both involve explaining the underlying principles or goals of a design or feature.
Criteria: Designer explains the design goals or philosophies behind a feature or product.
Phrase: Explains design goals.

4.
Concepts: consider offline functionality, offline functionality discussion
Relationship: The concepts are related in that they both involve considering or discussing offline functionality or limitations.
Criteria: Designer considers or discusses offline functionality or limitations.
Phrase: Considers offline functionality.

5.
Concepts: need for local export support, identifies need for local export support
Relationship: The concepts are related in that they both involve recognizing the need for local export support.
Criteria: Designer identifies a need for local export support.
Phrase: Identifies need for local export support.

6.
Concepts: long-term stability, long-term stability goal
Relationship: The concepts are related in that they both involve discussing or aiming for long-term stability.
Criteria: Designer discusses or aims for long-term stability.
Phrase: Discusses long-term stability.

7.
Concepts: highlighting key feature benefits, justifying focus on foundational features
Relationship: The concepts are related in that they both involve highlighting the importance of features for long-term stability and ease of adding components.
Criteria: Designer highlights the importance of foundational features for long-term stability and ease of adding components.
Phrase: Highlights key feature benefits.

8.
Concepts: emphasizing long-term benefits, highlighting long-term benefits
Relationship: The concepts are related in that they both involve highlighting the long-term benefits of a feature or update.
Criteria: Designer highlights the long-term benefits of a feature or update.
Phrase: Emphasizes long-term benefits.

9.
Concepts: evaluates option, considering perspectives, weighing design options
Relationship: The concepts are related in that they all involve considering or evaluating different options or perspectives.
Criteria: Designer considers or evaluates design options or perspectives.
Phrase: Evaluates design options.

10.
Concepts: consider implications, considering design implications
Relationship: The concepts are related in that they both involve considering broader implications or consequences.
Criteria: Designer considers broader implications or consequences.
Phrase: Considers design implications.

11.
Concepts: future compatibility, future technical considerations
Relationship: The concepts are related in that they both involve considering future technical issues or compatibility.
Criteria: Designer considers future technical issues or compatibility.
Phrase: Considers future compatibility.

12.
Concepts: highlighting functionality, illustrating feature functions
Relationship: The concepts are related in that they both involve highlighting or illustrating the features or functionalities of a system or tool.
Criteria: Designer highlights or illustrates feature functions or capabilities.
Phrase: Highlights functionality.

13.
Concepts: explaining features, discusses functionality, describing feature use
Relationship: The concepts are related in that they all involve explaining or describing features or functionalities.
Criteria: Designer explains or describes feature functionalities or uses.
Phrase: Explains features.

14.
Concepts: feature acknowledgment, feature need acknowledgment
Relationship: The concepts are related in that they both involve acknowledging the need for a feature or functionality.
Criteria: Designer acknowledges the need for a feature or functionality.
Phrase: Acknowledges feature need.

15.
Concepts: reiterating feature, reiterates feature explanation, reiterating feature clarification
Relationship: The concepts are related in that they all involve reiterating or emphasizing feature explanations or clarifications.
Criteria: Designer reiterates or emphasizes feature explanations or clarifications.
Phrase: Reiterates feature explanation.

16.
Concepts: clarifies feature, clarifying software features
Relationship: The concepts are related in that they both involve clarifying feature functionalities or explanations.
Criteria: Designer clarifies feature functionalities or explanations.
Phrase: Clarifies feature.

17.
Concepts: purpose clarification, feature clarification, clarifying feature purpose, clarifying functionality
Relationship: The concepts are related in that they all involve clarifying feature purposes, functionalities, or explanations.
Criteria: Designer clarifies feature purposes, functionalities, or explanations.
Phrase: Clarifies feature purpose.

18.
Concepts: ensuring understanding, promoting understanding
Relationship: The concepts are related in that they both involve ensuring or promoting understanding of software features or concepts.
Criteria: Designer ensures or promotes understanding of software features or concepts.
Phrase: Ensures understanding.

19.
Concepts: highlighting ideal components, providing ideal component information
Relationship: The concepts are related in that they both involve highlighting or providing information about ideal components or features.
Criteria: Designer highlights or provides information about ideal components or features.
Phrase: Highlights ideal components.

20.
Concepts: providing an example, providing feature examples, providing functionality examples
Relationship: The concepts are related in that they all involve providing examples to illustrate concepts or features.
Criteria: Designer provides examples to illustrate concepts or features.
Phrase: Provides examples.

21.
Concepts: demonstrating functionality, providing functionality previews
Relationship: The concepts are related in that they both involve demonstrating or providing previews of feature functionalities.
Criteria: Designer demonstrates or provides previews of feature functionalities.
Phrase: Demonstrates functionality.

22.
Concepts: feature explanation, explaining design functionality, explaining functionality, explaining feature functionality
Relationship: The concepts are related in that they all involve explaining feature functionalities or designs.
Criteria: Designer explains feature functionalities or designs.
Phrase: Explains feature functionality.

23.
Concepts: explain component, explanation of component features
Relationship: The concepts are related in that they both involve explaining component features or functionalities.
Criteria: Designer explains component features or functionalities.
Phrase: Explains component features.

24.
Concepts: describing component features, highlighting component features
Relationship: The concepts are related in that they both involve describing or highlighting component features or characteristics.
Criteria: Designer describes or highlights component features or characteristics.
Phrase: Describes component features.

25.
Concepts: providing details, provide technical details
Relationship: The concepts are related in that they both involve providing detailed information about something.
Criteria: Designer provides detailed information about something.
Phrase: Provides details.

26.
Concepts: providing technical details, providing technical specifications
Relationship: The concepts are related in that they both involve providing technical details or specifications about components or features.
Criteria: Designer provides technical details or specifications about components or features.
Phrase: Provides technical details.

27.
Concepts: feature details, providing feature information, feature information
Relationship: The concepts are related in that they all involve providing information about specific features.
Criteria: Designer provides information about specific features.
Phrase: Provides feature information.

28.
Concepts: engaging in iterative design, iterative design process
Relationship: The concepts are related in that they both involve engaging in an iterative design process, soliciting feedback and refining the design.
Criteria: Designer engages in an iterative design process, soliciting feedback and refining the design.
Phrase: Engages in iterative design.

29.
Concepts: contributing to design refinement, advocating for iterative refinement
Relationship: The concepts are related in that they both involve contributing to or advocating for the refinement of the platform's design.
Criteria: Users contribute to or advocate for the refinement of the platform's design.
Phrase: Contributes to design refinement.

30.
Concepts: sequencing design, outlining development sequence
Relationship: The concepts are related in that they both involve outlining the sequence of design phases or development order.
Criteria: Designer outlines the sequence of design phases or development order.
Phrase: Outlines design sequence.

31.
Concepts: suggesting gradual development, advising incremental development
Relationship: The concepts are related in that they both involve suggesting or advising an incremental or step-by-step development approach.
Criteria: User suggests or advises an incremental or step-by-step development approach.
Phrase: Advises incremental development.

32.
Concepts: feature complexity, comparing feature complexities
Relationship: The concepts are related in that they both involve comparing the complexity of different features or tasks.
Criteria: Designer compares the complexity of different features or tasks.
Phrase: Compares feature complexity.