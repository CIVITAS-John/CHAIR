You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: share version changes, sharing updates
- Sharing updates or changes to a design or feature
- A designer shares updates, including new versions, features, or changes, with users.

2.
Concepts: highlighting updates, highlighting update contents
- A designer highlights updates, new features, or changes in the software.
- A designer highlights the significance of a specific update or feature.

3.
Concepts: explaining updates, explaining technical improvements
- A designer explains the details or functionality of an update or new feature.
- A designer explains technical improvements or changes in the software.

4.
Concepts: development updates, showcases progress or updates
- Providing updates on the development process or progress.
- Showcasing progress or updates in the software development.

5.
Concepts: shares updates or progress, provides an update on progress
- A designer shares updates or progress on a task or feature.
- Designer provides an update on the progress of an update or feature.

6.
Concepts: shares work-in-progress, communicating ongoing work
- The designer shares their work-in-progress or ongoing development.
- Designers communicate about ongoing work or development.

7.
Concepts: communication about progress and plans, updates users on development progress or timeline
- A designer communicates progress and plans for the software.
- Designer updates users on software development progress or timeline.

8.
Concepts: provides future plans, planning for the future, shares future design plans
- The designer shares plans or schedules for future development
- The designer plans and highlights future updates or developments
- The designer shares future design plans, updates, or considerations

9.
Concepts: shares release plans, shares update timelines, provides update timelines
- The designer shares plans for future updates or releases
- The designer shares information about upcoming updates or release timelines
- The designer provides or announces timelines for updates or releases

10.
Concepts: outlines development plans, explains development plans
- The designer outlines or shares development plans or roadmaps
- The designer explains or informs about development plans or goals

11.
Concepts: announcing plans, announcing development plans
- A designer announces plans or updates.
- A designer announces plans, updates, or releases related to the project.

12.
Concepts: suggests future developments, hints at future possibilities
- The designer suggests or hints at potential future developments or expansions
- The designer shares information about potential future experiments, developments, or demonstrations

13.
Concepts: building anticipation, generating excitement
- A designer builds anticipation for upcoming updates or features.
- Designer generates excitement or anticipation for upcoming features or updates.

14.
Concepts: confirms future feature, confirms future implementation
- Designer confirms a feature will be added in the future.
- Designer confirms plans for future implementation.

15.
Concepts: sets user expectations, manages release expectations, manage user expectations
- The designer sets or manages user expectations about a feature or release
- The designer manages user anticipation or expectations for an update or feature
- A designer sets or manages user expectations about the development process, timeline, or features.

16.
Concepts: sets a timeline, provides a timeline
- The designer sets or establishes a timeline or expectation for a task or update
- The designer provides a timeline or estimate for a task or feature

17.
Concepts: prioritizing tasks, prioritizing development, prioritizing releases
- A designer prioritizes tasks or features.
- A designer prioritizes development tasks or timelines.
- A designer prioritizes the release of a specific version or feature.

18.
Concepts: expresses interest in multi-platform support, expresses interest in cross-platform functionality
- A user expresses interest in multi-platform support or multiple platforms.
- A user expresses interest in cross-platform access or functionality.

19.
Concepts: outlining system requirements, providing system compatibility information
- The designer specifies or clarifies the system requirements for using the software.
- Designers provide information about system compatibility or requirements.

20.
Concepts: clarifying compatibility, expressing compatibility requirements, explaining compatibility issues
- The designer clarifies or discusses software compatibility with different systems or devices.
- The designer discusses or expresses compatibility requirements or limitations of the software.
- The designer explains or addresses compatibility issues or limitations.

21.
Concepts: explaining limitations, highlighting software limitations, stating technical limitations
- The designer explains the limitations or constraints of the software or its features.
- The designer explains or highlights the limitations or constraints of the software.
- The designer states or mentions technical limitations or constraints of the software.

22.
Concepts: justifying limitations, explaining constraints
- Designer explains or justifies limitations or constraints of an experiment or feature.
- The designer explains or justifies limitations or constraints that affect a project or feature.

23.
Concepts: sharing constraints, explaining technical requirements
- The designer shares or explains technical constraints or limitations.
- The designer explains or communicates technical requirements or limitations.

24.
Concepts: acknowledges software limitation, acknowledging limitations
- Designer acknowledges a limitation or issue with the software.
- The designer acknowledges the limitations or potential drawbacks of a particular approach or feature.

25.
Concepts: illustrating design challenges, explaining development complexity
- Designer shares challenges, difficulties, or obstacles faced during design or development.
- The designer explains the complexity or challenges of implementing a feature or functionality.

26.
Concepts: highlighting features, showcasing functionality
- Designer highlights features or functionality of the software.
- Designer showcases innovative features or capabilities of the software.

27.
Concepts: justifying decisions, justifying design decisions
- Designer justifies design decisions or development to explain the reasoning.
- The designer explains or justifies the rationale behind a design decision.

28.
Concepts: explaining design decisions, clarifying design decisions through explanation
- Designer clarifies the reasoning behind a design decision to promote understanding.
- Designers explain and clarify their design decisions to users.

29.
Concepts: clarifying software version, informing about software version
- A designer clarifies version details or differences.
- A designer informs users about the software version.

30.
Concepts: explaining design principles, demonstrating design principles
- Designer shares design principles or philosophies behind the product.
- Designer demonstrates or explains design principles or concepts.

31.
Concepts: providing technical insight, technical information provision
- A designer provides insight into technical aspects of the software.
- Designers provide technical information about the software, its components, or functionality.

32.
Concepts: explaining technical details, illustrating technical issues
- A designer explains technical details or artifacts.
- A designer illustrates a technical issue or point.
===
Here are the definitions for each code:

---
1.
Concepts: share version changes, sharing updates
Relationship: The concepts are related as they both involve the designer sharing information about changes or updates to the software.
Criteria: Designers share updates or changes to a design or feature with users.
Phrase: Sharing updates or changes.

2.
Concepts: highlighting updates, highlighting update contents
Relationship: The concepts are related as they both involve the designer drawing attention to specific updates or features.
Criteria: Designers highlight updates, new features, or changes in the software.
Phrase: Highlighting updates or features.

3.
Concepts: explaining updates, explaining technical improvements
Relationship: The concepts are related as they both involve the designer providing explanations about updates or changes to the software.
Criteria: Designers explain the details or functionality of an update or new feature.
Phrase: Explaining updates or improvements.

4.
Concepts: development updates, showcases progress or updates
Relationship: The concepts are related as they both involve the designer providing information about the development process.
Criteria: Designers provide updates on the development process or progress.
Phrase: Showcasing development progress.

5.
Concepts: shares updates or progress, provides an update on progress
Relationship: The concepts are related as they both involve the designer sharing information about progress or updates.
Criteria: Designers share updates or progress on a task or feature.
Phrase: Sharing updates or progress.

6.
Concepts: shares work-in-progress, communicating ongoing work
Relationship: The concepts are related as they both involve the designer sharing information about ongoing development.
Criteria: Designers share their work-in-progress or ongoing development.
Phrase: Sharing work-in-progress.

7.
Concepts: communication about progress and plans, updates users on development progress or timeline
Relationship: The concepts are related as they both involve the designer communicating with users about development progress or plans.
Criteria: Designers communicate progress and plans for the software.
Phrase: Communicating progress and plans.

8.
Concepts: provides future plans, planning for the future, shares future design plans
Relationship: The concepts are related as they all involve the designer sharing or planning for future development.
Criteria: Designers share plans or schedules for future development.
Phrase: Sharing future plans.

9.
Concepts: shares release plans, shares update timelines, provides update timelines
Relationship: The concepts are related as they all involve the designer sharing information about future updates or releases.
Criteria: Designers share plans for future updates or releases.
Phrase: Sharing release plans.

10.
Concepts: outlines development plans, explains development plans
Relationship: The concepts are related as they both involve the designer explaining or outlining development plans.
Criteria: Designers outline or share development plans or roadmaps.
Phrase: Outlining development plans.

11.
Concepts: announcing plans, announcing development plans
Relationship: The concepts are related as they both involve the designer announcing plans or updates.
Criteria: Designers announce plans or updates.
Phrase: Announcing plans.

12.
Concepts: suggests future developments, hints at future possibilities
Relationship: The concepts are related as they both involve the designer suggesting or hinting at future development.
Criteria: Designers suggest or hint at potential future developments or expansions.
Phrase: Suggesting future developments.

13.
Concepts: building anticipation, generating excitement
Relationship: The concepts are related as they both involve the designer creating anticipation or excitement for future updates or features.
Criteria: Designers build anticipation for upcoming updates or features.
Phrase: Building anticipation.

14.
Concepts: confirms future feature, confirms future implementation
Relationship: The concepts are related as they both involve the designer confirming plans for future implementation.
Criteria: Designers confirm a feature will be added in the future.
Phrase: Confirming future features.

15.
Concepts: sets user expectations, manages release expectations, manage user expectations
Relationship: The concepts are related as they all involve the designer managing or setting user expectations.
Criteria: Designers set or manage user expectations about a feature or release.
Phrase: Managing user expectations.

16.
Concepts: sets a timeline, provides a timeline
Relationship: The concepts are related as they both involve the designer setting or providing a timeline for a task or update.
Criteria: Designers set or establish a timeline or expectation for a task or update.
Phrase: Setting a timeline.

17.
Concepts: prioritizing tasks, prioritizing development, prioritizing releases
Relationship: The concepts are related as they all involve the designer prioritizing tasks or development.
Criteria: Designers prioritize tasks or features.
Phrase: Prioritizing tasks.

18.
Concepts: expresses interest in multi-platform support, expresses interest in cross-platform functionality
Relationship: The concepts are related as they both involve users expressing interest in multi-platform support or functionality.
Criteria: Users express interest in multi-platform support or cross-platform functionality.
Phrase: Expressing interest in multi-platform support.

19.
Concepts: outlining system requirements, providing system compatibility information
Relationship: The concepts are related as they both involve the designer providing information about system requirements or compatibility.
Criteria: Designers specify or clarify the system requirements for using the software.
Phrase: Providing system requirements.

20.
Concepts: clarifying compatibility, expressing compatibility requirements, explaining compatibility issues
Relationship: The concepts are related as they all involve the designer clarifying or explaining compatibility issues or requirements.
Criteria: Designers clarify or discuss software compatibility with different systems or devices.
Phrase: Clarifying compatibility.

21.
Concepts: explaining limitations, highlighting software limitations, stating technical limitations
Relationship: The concepts are related as they all involve the designer explaining or highlighting limitations of the software.
Criteria: Designers explain the limitations or constraints of the software or its features.
Phrase: Explaining limitations.

22.
Concepts: justifying limitations, explaining constraints
Relationship: The concepts are related as they both involve the designer explaining or justifying limitations or constraints.
Criteria: Designers explain or justify limitations or constraints of an experiment or feature.
Phrase: Justifying limitations.

23.
Concepts: sharing constraints, explaining technical requirements
Relationship: The concepts are related as they both involve the designer sharing or explaining technical constraints or requirements.
Criteria: Designers share or explain technical constraints or limitations.
Phrase: Sharing constraints.

24.
Concepts: acknowledges software limitation, acknowledging limitations
Relationship: The concepts are related as they both involve the designer acknowledging limitations or issues with the software.
Criteria: Designers acknowledge a limitation or issue with the software.
Phrase: Acknowledging limitations.

25.
Concepts: illustrating design challenges, explaining development complexity
Relationship: The concepts are related as they both involve the designer sharing or explaining challenges or complexity of design or development.
Criteria: Designers share challenges, difficulties, or obstacles faced during design or development.
Phrase: Illustrating design challenges.

26.
Concepts: highlighting features, showcasing functionality
Relationship: The concepts are related as they both involve the designer highlighting or showcasing features or functionality of the software.
Criteria: Designers highlight features or functionality of the software.
Phrase: Highlighting features.

27.
Concepts: justifying decisions, justifying design decisions
Relationship: The concepts are related as they both involve the designer justifying design decisions or development.
Criteria: Designers justify design decisions or development to explain the reasoning.
Phrase: Justifying decisions.

28.
Concepts: explaining design decisions, clarifying design decisions through explanation
Relationship: The concepts are related as they both involve the designer explaining or clarifying design decisions.
Criteria: Designers clarify the reasoning behind a design decision to promote understanding.
Phrase: Explaining design decisions.

29.
Concepts: clarifying software version, informing about software version
Relationship: The concepts are related as they both involve the designer clarifying or informing about software version details.
Criteria: Designers clarify version details or differences.
Phrase: Clarifying software version.

30.
Concepts: explaining design principles, demonstrating design principles
Relationship: The concepts are related as they both involve the designer explaining or demonstrating design principles.
Criteria: Designers share design principles or philosophies behind the product.
Phrase: Explaining design principles.

31.
Concepts: providing technical insight, technical information provision
Relationship: The concepts are related as they both involve the designer providing technical information or insight.
Criteria: Designers provide insight into technical aspects of the software.
Phrase: Providing technical insight.

32.
Concepts: explaining technical details, illustrating technical issues
Relationship: The concepts are related as they both involve the designer explaining or illustrating technical details or issues.
Criteria: Designers explain technical details or artifacts.
Phrase: Explaining technical details.