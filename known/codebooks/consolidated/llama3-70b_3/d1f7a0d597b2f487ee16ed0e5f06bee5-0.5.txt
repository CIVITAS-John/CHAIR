You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: simplifying complexity, promoting ease of understanding
- Simplifying complex concepts or features.
- Promoting ease of understanding and simplifying design.

2.
Concepts: expressing user needs, clarifying user needs and requirements
- Expressing, identifying, or suggesting user needs or requirements.
- Clarifying user needs and software requirements.

3.
Concepts: adapting to user needs, contextual adaptation
- Adapting to user context or needs.
- Adapts to the user's context or situation to provide a solution or explanation.

4.
Concepts: practical application, suggesting practical use cases
- Suggesting practical applications or uses for the software
- Explaining or suggesting practical use cases or applications.

5.
Concepts: drawing from past experience, reflecting on past experiences
- Designer references past experience or knowledge to explain or clarify something.
- Designer reflects on past experiences, sharing lessons learned or insights gained.

6.
Concepts: suggests focused approach, engaging in iterative development
- The speaker is suggesting a focused, iterative approach to development or problem-solving.
- The conversation implies an iterative development process.

7.
Concepts: considering technical requirements and feasibility, theorizing about system compatibility and requirements
- A designer considers technical requirements and assesses the technical feasibility of a feature or functionality.
- A designer theorizes about system compatibility, expresses theoretical requirements, and discusses potential compatibility.

8.
Concepts: considering user needs, recognizing and considering hardware diversity, considering multiple perspectives
- Considering diverse user needs and scenarios.
- A user or designer recognizes or considers diverse hardware configurations or needs.
- A designer or user considers or acknowledges multiple perspectives or opinions.

9.
Concepts: considering practical constraints, considering implementation constraints and limitations
- Designer considers practical constraints or limitations.
- A designer considers implementation constraints, hardware limitations, or other limitations during development.

10.
Concepts: clarifying limitations, mentioning technical or product limitations, explaining current limitations and constraints
- Designers clarify limitations or system capabilities.
- A designer mentions technical or product limitations or constraints.
- A designer explains current limitations or constraints in the platform or system.

11.
Concepts: explaining the complexity of releases and updates, explaining development challenges and complexity
- A designer explains the complexity or challenges of an upcoming release or update.
- A designer explains the challenges or difficulties in developing a feature or functionality.

12.
Concepts: expressing and addressing user concerns, raising concerns and warning about potential issues
- A user expresses concerns, and the designer addresses those concerns.
- A designer raises a concern and warns users about potential issues.

13.
Concepts: resolving concerns, acknowledging potential issues and disturbance
- Designers resolve and address concerns, and commit to providing a solution or resolving an issue.
- A designer acknowledges potential issues and suggests solutions or acknowledges potential disturbance.

14.
Concepts: inquiring about problems and issues, reporting technical issues and requesting support
- Inquiring about problems, issues, or difficulties experienced by users.
- A user reports a technical issue or problem, expresses concern about system compatibility or technical issues, and requests technical help or assistance.

15.
Concepts: revealing usability challenges, expressing difficulty and highlighting user interface challenges
- A user expresses difficulties or uncertainty about using a feature.
- A designer expresses difficulty and discusses design challenges or highlights user interface challenges.

16.
Concepts: explaining technology limitations, explaining connectivity issues
- User explains or highlights limitations in classroom technology.
- User states the lack of classroom internet access, explaining the lack of internet access or connectivity issues.

17.
Concepts: educational context familiarity, referencing educational context
- Demonstrating familiarity with educational settings or contexts
- A user implies an educational context or background, referencing the educational environment.

18.
Concepts: reflecting on teaching experience, sharing reflective classroom experiences
- User responds as a teacher, providing insight or feedback based on their teaching experience.
- User engages reflectively, sharing thoughts or opinions about the Physics Lab, sharing their experience using the Physics Lab in a classroom or educational setting.

19.
Concepts: highlighting teaching needs, highlighting teacher-specific needs
- Highlighting educational needs or requirements, particularly those of teachers.
- Catering to the needs of teachers or educators, highlighting specific needs or requirements.

20.
Concepts: seeking teacher input and feedback, ensuring relevance to current teaching practices
- Designer seeks teacher input and asks about needs, including teaching level or background.
- The designer consults with teachers to ensure the application is relevant to current teaching practices.

21.
Concepts: demonstrating educational relevance, facilitating learning through educational utility
- Designers imply or suggest the potential effectiveness or impact of the software as an educational tool, explaining or demonstrating the educational relevance or application of the software.
- Designers explain how a feature can facilitate learning, highlighting educational benefits, mentioning a feature or functionality that serves an educational purpose.

22.
Concepts: describing student engagement, the software seems to be well received by students
- User describes how students react to the platform, emphasizing student engagement or amazement.
- User expresses how well the platform is received by students.

23.
Concepts: praising practicality, appreciating features
- A user praises or highlights the practicality of a feature or software.
- A user appreciates or expresses praise for software features, indicating satisfaction.

24.
Concepts: committing to improvement, committing to user feedback incorporation
- Commitment to continuous improvement based on user feedback.
- Designer commits to incorporating user feedback into the Physics Lab platform.

25.
Concepts: emphasizing importance, importance of categorization
- A user emphasizes the importance of a particular aspect.
- User emphasizes the importance of categorization and prioritization.

26.
Concepts: agreeing with scope, focus area agreement
- User agrees with development focus or direction.
- A user agrees with a focus area or direction.

27.
Concepts: feedback solicitation, providing strategic feedback
- Prompts users to provide feedback, suggestions, or input on the Physics Lab software or its development.
- Provides strategic or constructive feedback on the Physics Lab software or its development.

28.
Concepts: considering onboarding feedback, sharing user experiences and feedback
- Considering user feedback for onboarding, tutorials, or user experience.
- Users share experiences or perspectives as new or experienced users and provide feedback to the designer or developers.

29.
Concepts: requesting a feature, requesting new functionality
- Expressions of desire or interest in specific features or functionalities.
- A user requests new functionality or seeks additional features.

30.
Concepts: feature proposals, proposing new simulations
- Proposing specific features or simulations for the platform.
- User proposes or suggests new experiment simulations, and designer considers it.

31.
Concepts: engaging with suggestions, collaboration suggestion
- A user engages with a suggestion or idea.
- A user suggests collaboration or joint effort on a specific topic or feature.

32.
Concepts: contributing to development, encouraging further development
- User contributes to product development with ideas or requests.
- A user encourages the designer to continue developing a feature.
===
Here are the definitions for each code:

---
1.
Concepts: simplifying complexity, promoting ease of understanding
Relationship: The concepts are related as they both aim to make complex information more accessible and easy to comprehend.
Criteria: Designers simplify complex concepts or features to promote ease of understanding.
Phrase: Simplifying complex information for ease of understanding.

2.
Concepts: expressing user needs, clarifying user needs and requirements
Relationship: The concepts are related as they both involve understanding and articulating user needs.
Criteria: Users express and clarify their needs and requirements to designers.
Phrase: Expressing and clarifying user needs.

3.
Concepts: adapting to user needs, contextual adaptation
Relationship: The concepts are related as they both involve adjusting to user context or needs.
Criteria: Designers adapt to user context or needs to provide a solution or explanation.
Phrase: Adapting to user needs and context.

4.
Concepts: practical application, suggesting practical use cases
Relationship: The concepts are related as they both involve applying software to real-world scenarios.
Criteria: Designers suggest practical applications or uses for the software.
Phrase: Suggesting practical applications.

5.
Concepts: drawing from past experience, reflecting on past experiences
Relationship: The concepts are related as they both involve using past experiences to inform current decisions.
Criteria: Designers reflect on past experiences to explain or clarify something.
Phrase: Reflecting on past experiences.

6.
Concepts: suggests focused approach, engaging in iterative development
Relationship: The concepts are related as they both involve a step-by-step approach to development.
Criteria: Designers suggest a focused, iterative approach to development or problem-solving.
Phrase: Engaging in iterative development.

7.
Concepts: considering technical requirements and feasibility, theorizing about system compatibility and requirements
Relationship: The concepts are related as they both involve assessing technical capabilities and limitations.
Criteria: Designers consider technical requirements and assess technical feasibility.
Phrase: Considering technical requirements and feasibility.

8.
Concepts: considering user needs, recognizing and considering hardware diversity, considering multiple perspectives
Relationship: The concepts are related as they all involve considering diverse user needs and perspectives.
Criteria: Designers consider diverse user needs, hardware configurations, and multiple perspectives.
Phrase: Considering diverse user needs and perspectives.

9.
Concepts: considering practical constraints, considering implementation constraints and limitations
Relationship: The concepts are related as they both involve considering limitations and constraints.
Criteria: Designers consider practical constraints or limitations during development.
Phrase: Considering practical constraints.

10.
Concepts: clarifying limitations, mentioning technical or product limitations, explaining current limitations and constraints
Relationship: The concepts are related as they all involve explaining or clarifying limitations.
Criteria: Designers clarify limitations or system capabilities.
Phrase: Clarifying limitations.

11.
Concepts: explaining the complexity of releases and updates, explaining development challenges and complexity
Relationship: The concepts are related as they both involve explaining complex development processes.
Criteria: Designers explain the complexity or challenges of an upcoming release or update.
Phrase: Explaining development complexity.

12.
Concepts: expressing and addressing user concerns, raising concerns and warning about potential issues
Relationship: The concepts are related as they both involve addressing user concerns.
Criteria: Designers address user concerns and warn about potential issues.
Phrase: Addressing user concerns.

13.
Concepts: resolving concerns, acknowledging potential issues and disturbance
Relationship: The concepts are related as they both involve resolving and acknowledging concerns.
Criteria: Designers resolve concerns and acknowledge potential issues.
Phrase: Resolving concerns.

14.
Concepts: inquiring about problems and issues, reporting technical issues and requesting support
Relationship: The concepts are related as they both involve reporting and inquiring about issues.
Criteria: Users report technical issues and request technical help or assistance.
Phrase: Reporting technical issues.

15.
Concepts: revealing usability challenges, expressing difficulty and highlighting user interface challenges
Relationship: The concepts are related as they both involve expressing difficulties or challenges.
Criteria: Users express difficulties or uncertainty about using a feature.
Phrase: Expressing usability challenges.

16.
Concepts: explaining technology limitations, explaining connectivity issues
Relationship: The concepts are related as they both involve explaining limitations or issues.
Criteria: Users explain limitations in classroom technology or connectivity issues.
Phrase: Explaining technology limitations.

17.
Concepts: educational context familiarity, referencing educational context
Relationship: The concepts are related as they both involve familiarity with educational settings.
Criteria: Users demonstrate familiarity with educational settings or contexts.
Phrase: Referencing educational context.

18.
Concepts: reflecting on teaching experience, sharing reflective classroom experiences
Relationship: The concepts are related as they both involve reflecting on teaching experiences.
Criteria: Users share reflective thoughts or opinions about the Physics Lab in a classroom or educational setting.
Phrase: Sharing reflective classroom experiences.

19.
Concepts: highlighting teaching needs, highlighting teacher-specific needs
Relationship: The concepts are related as they both involve highlighting educational needs.
Criteria: Users highlight educational needs or requirements, particularly those of teachers.
Phrase: Highlighting teaching needs.

20.
Concepts: seeking teacher input and feedback, ensuring relevance to current teaching practices
Relationship: The concepts are related as they both involve seeking input from teachers.
Criteria: Designers seek teacher input and ask about needs, including teaching level or background.
Phrase: Seeking teacher input.

21.
Concepts: demonstrating educational relevance, facilitating learning through educational utility
Relationship: The concepts are related as they both involve demonstrating educational effectiveness.
Criteria: Designers imply or suggest the potential effectiveness or impact of the software as an educational tool.
Phrase: Demonstrating educational relevance.

22.
Concepts: describing student engagement, the software seems to be well received by students
Relationship: The concepts are related as they both involve describing student reactions.
Criteria: Users describe how students react to the platform, emphasizing student engagement or amazement.
Phrase: Describing student engagement.

23.
Concepts: praising practicality, appreciating features
Relationship: The concepts are related as they both involve expressing praise or appreciation.
Criteria: Users praise or highlight the practicality of a feature or software.
Phrase: Praising practicality.

24.
Concepts: committing to improvement, committing to user feedback incorporation
Relationship: The concepts are related as they both involve committing to improvement.
Criteria: Designers commit to continuous improvement based on user feedback.
Phrase: Committing to improvement.

25.
Concepts: emphasizing importance, importance of categorization
Relationship: The concepts are related as they both involve emphasizing importance.
Criteria: Users emphasize the importance of a particular aspect.
Phrase: Emphasizing importance.

26.
Concepts: agreeing with scope, focus area agreement
Relationship: The concepts are related as they both involve agreeing on direction or focus.
Criteria: Users agree with development focus or direction.
Phrase: Agreeing with scope.

27.
Concepts: feedback solicitation, providing strategic feedback
Relationship: The concepts are related as they both involve providing or soliciting feedback.
Criteria: Designers prompt users to provide feedback, suggestions, or input.
Phrase: Soliciting feedback.

28.
Concepts: considering onboarding feedback, sharing user experiences and feedback
Relationship: The concepts are related as they both involve considering user feedback.
Criteria: Designers consider user feedback for onboarding, tutorials, or user experience.
Phrase: Considering onboarding feedback.

29.
Concepts: requesting a feature, requesting new functionality
Relationship: The concepts are related as they both involve requesting new features or functionalities.
Criteria: Users express desire or interest in specific features or functionalities.
Phrase: Requesting new features.

30.
Concepts: feature proposals, proposing new simulations
Relationship: The concepts are related as they both involve proposing new features or simulations.
Criteria: Users propose or suggest new experiment simulations, and designers consider it.
Phrase: Proposing new simulations.

31.
Concepts: engaging with suggestions, collaboration suggestion
Relationship: The concepts are related as they both involve engaging with suggestions or ideas.
Criteria: Users engage with a suggestion or idea, or suggest collaboration.
Phrase: Engaging with suggestions.

32.
Concepts: contributing to development, encouraging further development
Relationship: The concepts are related as they both involve contributing to or encouraging development.
Criteria: Users contribute to product development with ideas or requests.
Phrase: Contributing to development.