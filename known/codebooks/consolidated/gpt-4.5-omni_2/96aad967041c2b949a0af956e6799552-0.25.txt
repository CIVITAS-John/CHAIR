You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (20 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
20. 
Concepts: {Repeat the input 20}
Relationship: {What is logical relationship between concepts in code 20, or N/A if not applicable}
Criteria: {Who did what, and how for code 20}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: encouraging feedback, community cultivation
- Developers and users invite and encourage community participation and feedback.
- Designers encourage community participation and feedback for software improvement.

2.
Concepts: engaging in dialogue, interacting with users
- Users and designers engage in follow-up discussions to address issues.
- Designers and users interact and ask questions about design or functionality.

3.
Concepts: validating user requests, inquiring about user needs
- Designers validate user requests and gather detailed requirements.
- Designers ask users about their needs and any problems they encountered.

4.
Concepts: acting on feedback, committing to improvements
- Designers acknowledge feedback and discuss plans to implement it.
- Designers promise or commit to making improvements based on user feedback.

5.
Concepts: resolving concerns, providing reassurance
- Designers address and resolve user concerns.
- Designers reassure users to alleviate concerns or worries.

6.
Concepts: software improvement, discussing design improvements
- Developers discuss improvements or changes to the software.
- Designers discuss refinement and flexibility of the software design.

7.
Concepts: announcing changes, making developer announcements
- Designers make announcements and inform the community about changes and updates.
- Developers make announcements about new features, adjustments, bug fixes, and updates to the community.

8.
Concepts: sharing progress updates, share development updates
- Designers highlight and provide updates on current progress.
- Designers share information about ongoing work, future plans, or expected timelines for development.

9.
Concepts: detailing future features, communicating future developments
- Designers list upcoming features and outline the feature roadmap.
- Designers announce future plans and explain new features with illustrative examples.

10.
Concepts: sharing resources, providing access information
- Designers or users share resources, such as download links, development plans, or announcements.
- Designers or users provide information on how to access or download resources.

11.
Concepts: suggesting future designs, gathering opinions for planning
- Designers propose new design ideas and discuss future possibilities.
- Designers gather opinions and plan for feedback before starting new projects.

12.
Concepts: confirming compatibility, considering compatibility
- Designers assure and confirm software compatibility with different systems.
- Designers speculate on or consider future compatibility with different systems.

13.
Concepts: providing feedback, responding with feedback
- Users provide specific feedback and communicate issues or suggestions.
- Users provide feedback or suggestions regarding the design and functionality of the product.

14.
Concepts: expressing agreement, accepting user requests
- Users or developers express agreement with suggestions or ideas.
- Developers accept and agree to implement user requests or suggestions.

15.
Concepts: request physics lab features, request additional experiments
- Users request new features or improvements for the Physics Lab tool.
- Users request the inclusion of additional experiments or features.

16.
Concepts: community need, requesting resources
- A user highlights the need for specific features to meet community needs.
- Users request community resources and justify their need for them.

17.
Concepts: requesting help, request information
- Users seek help, request assistance, and ask for usage support.
- Users request information or help regarding the use or features of Physics Lab.

18.
Concepts: gratitude and encouragement, respond with acknowledgment and support
- Expressions of appreciation and encouragement that help build a positive community atmosphere.
- Community members respond to each other with gratitude or acknowledgment.

19.
Concepts: providing context, providing educational context
- Users provide context or background information relevant to discussions.
- Users discuss and provide context about their educational environments and available resources.

20.
Concepts: expressive, using emojis for communication
- A user or designer uses expressive language or emojis to convey emotions.
- Users communicate, engage, or express emotions using emojis or other non-verbal forms of communication.
===
---
Definitions for each code (20 in total):
1.
Concepts: encouraging feedback, community cultivation
Relationship: Both concepts involve promoting active participation and input from the community.
Criteria: Developers and designers invite and encourage community participation and feedback for software improvement.
Phrase: Encouraging community feedback

2.
Concepts: engaging in dialogue, interacting with users
Relationship: Both concepts involve communication between users and designers.
Criteria: Users and designers engage in follow-up discussions and interact to address issues and ask questions about design or functionality.
Phrase: Engaging in user dialogue

3.
Concepts: validating user requests, inquiring about user needs
Relationship: Both concepts involve understanding and confirming user needs and requests.
Criteria: Designers validate user requests by gathering detailed requirements and asking about their needs and problems.
Phrase: Validating user needs

4.
Concepts: acting on feedback, committing to improvements
Relationship: Both concepts involve responding to user feedback with actions or promises.
Criteria: Designers acknowledge feedback and discuss plans or commit to making improvements based on user feedback.
Phrase: Acting on user feedback

5.
Concepts: resolving concerns, providing reassurance
Relationship: Both concepts involve addressing and alleviating user concerns.
Criteria: Designers address and resolve user concerns and provide reassurance to alleviate worries.
Phrase: Resolving user concerns

6.
Concepts: software improvement, discussing design improvements
Relationship: Both concepts involve discussions aimed at enhancing the software.
Criteria: Developers and designers discuss improvements or changes to the software and its design.
Phrase: Discussing software improvements

7.
Concepts: announcing changes, making developer announcements
Relationship: Both concepts involve informing the community about updates and changes.
Criteria: Designers and developers make announcements about new features, adjustments, bug fixes, and updates to the community.
Phrase: Announcing updates

8.
Concepts: sharing progress updates, share development updates
Relationship: Both concepts involve providing information on the current status of development.
Criteria: Designers highlight and share updates on current progress, ongoing work, future plans, or expected timelines.
Phrase: Sharing development progress

9.
Concepts: detailing future features, communicating future developments
Relationship: Both concepts involve outlining and explaining upcoming features and plans.
Criteria: Designers list upcoming features, outline the feature roadmap, and explain new features with illustrative examples.
Phrase: Detailing future features

10.
Concepts: sharing resources, providing access information
Relationship: Both concepts involve distributing resources and access information.
Criteria: Designers or users share resources such as download links, development plans, or announcements and provide information on how to access or download them.
Phrase: Sharing resources

11.
Concepts: suggesting future designs, gathering opinions for planning
Relationship: Both concepts involve proposing and planning future designs based on feedback.
Criteria: Designers propose new design ideas and gather opinions to plan for feedback before starting new projects.
Phrase: Suggesting future designs

12.
Concepts: confirming compatibility, considering compatibility
Relationship: Both concepts involve ensuring or speculating on software compatibility.
Criteria: Designers assure and confirm software compatibility with different systems or consider future compatibility.
Phrase: Confirming software compatibility

13.
Concepts: providing feedback, responding with feedback
Relationship: Both concepts involve users giving feedback on the product.
Criteria: Users provide specific feedback and communicate issues or suggestions regarding the design and functionality of the product.
Phrase: Providing user feedback

14.
Concepts: expressing agreement, accepting user requests
Relationship: Both concepts involve agreeing with and implementing user suggestions.
Criteria: Users or developers express agreement with suggestions or ideas and accept to implement user requests.
Phrase: Accepting user suggestions

15.
Concepts: request physics lab features, request additional experiments
Relationship: Both concepts involve users requesting new features or experiments.
Criteria: Users request new features or improvements for the Physics Lab tool and the inclusion of additional experiments.
Phrase: Requesting new features

16.
Concepts: community need, requesting resources
Relationship: Both concepts involve users highlighting needs and requesting resources for the community.
Criteria: Users highlight the need for specific features to meet community needs and request community resources.
Phrase: Requesting community resources

17.
Concepts: requesting help, request information
Relationship: Both concepts involve users seeking assistance and information.
Criteria: Users seek help, request assistance, and ask for information regarding the use or features of Physics Lab.
Phrase: Requesting help

18.
Concepts: gratitude and encouragement, respond with acknowledgment and support
Relationship: Both concepts involve positive interactions that build community atmosphere.
Criteria: Community members express appreciation and encouragement, responding to each other with gratitude or acknowledgment.
Phrase: Expressing gratitude

19.
Concepts: providing context, providing educational context
Relationship: Both concepts involve users giving background information relevant to discussions.
Criteria: Users provide context or background information about their educational environments and available resources.
Phrase: Providing context

20.
Concepts: expressive, using emojis for communication
Relationship: Both concepts involve using non-verbal forms of communication to convey emotions.
Criteria: Users or designers use expressive language or emojis to communicate, engage, or express emotions.
Phrase: Using expressive communication
---