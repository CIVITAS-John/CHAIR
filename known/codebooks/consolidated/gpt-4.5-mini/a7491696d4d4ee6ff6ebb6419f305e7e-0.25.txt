You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (48 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
48. 
Concepts: {Repeat the input 48}
Relationship: {What is logical relationship between concepts in code 48, or N/A if not applicable}
Criteria: {Who did what, and how for code 48}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: uncertainty, ask for clarification
- Users express uncertainty or seek clarification on a matter.
- Users provide additional context or ask questions to clarify information.

2.
Concepts: acknowledge provided resources, acknowledge receipt of information
- Users acknowledge receipt of information or resources shared by the designer.
- Users acknowledge receipt of messages or information shared by the developer.

3.
Concepts: agree with suggestions, agree with focus areas
- Users agree with or support previous comments made by others.
- A user agrees with the focus areas or priorities discussed by others.

4.
Concepts: provide short response, indicate potential user needs
- Users provide a brief affirmative response indicating interest or agreement.
- Users affirm or indicate their agreement with previous statements or questions.

5.
Concepts: high school, introduce teaching background
- A user shares their teaching background, specifying the subjects and levels taught.
- Users share their teaching background, including grade levels taught and years of service.

6.
Concepts: share teacher identity, confirm professional role
- Users identify themselves as teachers and discuss educational needs.
- Users confirm their role as teachers and their involvement in education.

7.
Concepts: acknowledge community support, contribute to community building
- Users express gratitude for the community's support and contributions.
- Users express gratitude for resources shared within the community and respond to discussions with their experiences.

8.
Concepts: reciprocate greetings, greet the community warmly
- Designers initiate and reciprocate greetings to the community.
- Users and designers greet the community to maintain engagement and connection.

9.
Concepts: explain situation, highlight outdated technology
- User describes the limitations of the computer system used at their school and highlights technical constraints.
- User highlights the challenges posed by outdated technology and comments on its limitations in educational settings.

10.
Concepts: provide positive responses, express enthusiasm and compliments
- Users respond positively to suggestions or information shared regarding feature development.
- Users express admiration for ideas or features and show enthusiasm about the project or community contributions.

11.
Concepts: appreciate dedication, acknowledge craftsmanship in development
- Users express admiration or respect for the dedication shown in the development process.
- Users acknowledge the importance of craftsmanship in software development and reference it metaphorically.

12.
Concepts: make feature requests, propose software enhancements, suggest practical use cases
- Users collect and make requests for new features or improvements to the software.
- Users express a need for features that enhance usability and suggest new functionalities.
- Users suggest features that would enhance the app's functionality and user convenience.

13.
Concepts: request features, request additional experiments
- Users request new features or improvements for the Physics Lab tool.
- User suggests expanding the software's capabilities to include additional experiments and features.

14.
Concepts: make a suggestion, suggest simplification
- A designer offers a suggestion to users regarding software usage.
- The designer shares thoughts on simplifying the software's design and suggests ways to enhance user interactions.

15.
Concepts: engage in troubleshooting, analyze compatibility issues
- User engages in troubleshooting discussions regarding software compatibility.
- Designer analyzes compatibility issues and offers a diagnosis related to the software.

16.
Concepts: ask technical questions, show interest in technical details
- Users ask technical questions regarding the app's usage or features, indicating areas of interest.
- Users express curiosity about technical specifications or details of the software.

17.
Concepts: quick response, respond to inquiries in real time
- Designer responds quickly to a user's inquiry about uploading something.
- Designers respond to user inquiries with relevant information and engage in real-time communication.

18.
Concepts: share potential solutions, engage in collaborative problem solving
- Designers share and propose potential solutions to usability or compatibility issues.
- Designers and users collaborate to solve issues and improve the product.

19.
Concepts: commit to providing a solution, respond to community inquiries
- Designers commit to addressing user inquiries and providing necessary support.
- Designers provide answers to community questions and respond to users' initial questions regarding software compatibility.

20.
Concepts: validate user requests, gather detailed requirements
- Designers validate user requests and seek confirmation regarding specific images or features.
- Designers express understanding of a user's needs by asking for specifics and seeking detailed input from them.

21.
Concepts: ask follow-up questions, seek clarification through follow-up
- Designers ask follow-up questions to clarify user needs and preferences regarding their requests.
- Users or designers engage in dialogue to clarify details about software compatibility or requirements.

22.
Concepts: raise design questions, provide design support answers
- Designers pose questions related to design specifications and raise issues concerning design elements.
- Users provide information or answers related to design support and follow up on previously shared design information.

23.
Concepts: seek consensus on collaboration, confirm understanding in discussions
- Designers seek agreement or consensus from users on proposed ideas and confirm collaboration before proceeding.
- Users and designers express agreement for shared design ideas and confirm mutual understanding during discussions.

24.
Concepts: commit to improvement, acknowledgment and implementation, acknowledge user feedback
- Designers commit to improving the software based on user feedback and express gratitude for user support.
- Designers acknowledging user feedback and discussing plans to implement suggested features.
- Designers acknowledge user feedback, the necessity for specific features, and commit to future updates.

25.
Concepts: inquire about user needs, engage in consultation with teachers
- Designers inquire about teachers' needs and seek their input regarding educational materials or standards.
- Designers consult with teachers about specific content, curriculum-related topics, and educational standards.

26.
Concepts: gather context, seek additional context from users
- A designer gathers context by asking users about their teaching situation.
- Designers inquire about users' roles, backgrounds, and seek additional context to understand their needs better.

27.
Concepts: inquire about teaching background, facilitate further engagement
- Designers ask users about their teaching backgrounds to foster engagement.
- A designer engages users by offering to upload content and inquires about their professional background.

28.
Concepts: express designer engagement, express interest in subject expansion
- Designers express personal interest and engagement in subjects related to the software.
- A designer expresses interest in expanding the subject matter covered by the software.

29.
Concepts: highlight update progress, announce feature expansion
- The designer highlights the extent of progress made in the software update and communicates its significance.
- The designer indicates significant updates that will include many new features to improve software functionality.

30.
Concepts: explain new features, introduce new components
- Designers explain new features being developed or optimized for the app.
- The designer lists and introduces new components and features included in the app update.

31.
Concepts: preview upcoming features, confirm upcoming updates
- Designers list and preview upcoming features and updates for the software.
- Designers confirm the schedule for upcoming software updates and outline the planning process for future updates.

32.
Concepts: detail software updates, describe update content
- Designers detail and list specific updates, including new features and bug fixes.
- The designer provides information about the scope and content of upcoming updates, highlighting new features or improvements.

33.
Concepts: download instructions, inquire about download process
- Designers provide instructions on how to download the software.
- Users inquire about the instructions or process for downloading the software.

34.
Concepts: user guidance, provide usage instructions
- A designer provides detailed guidance on new features and updates in the software.
- A designer provides clear instructions and guidance on using specific features of the software.

35.
Concepts: share knowledge, communicate version specifics
- Designers share information about software capabilities and provide detailed explanations of features.
- Designers share specific details and notes regarding the current software version and clarify the type and specifics of the software version within the community.

36.
Concepts: explain delay, explain feature complexities
- Designer explains the reasons for delays in software updates and feature completion.
- The designer communicates the complexity and timeline for a feature's release and explains the complexities involved.

37.
Concepts: provide release timeline, set timeline expectations
- The designer provides a specific timeline for the release of various software versions.
- The designer sets expectations for users regarding software release timelines or updates.

38.
Concepts: confirm future feature, promise future realization
- Designer confirms that a future feature will allow manual editing, though it may take time.
- The designer expresses confidence that a feature will be realized in the future while indicating that it may take time.

39.
Concepts: promise that the update is ongoing, provide reassurance to users
- Designers assure users that updates are in progress and ongoing.
- Designers reassure users about progress and address their concerns regarding feature availability.

40.
Concepts: explain simulation details, experimental simulations in electricity
- A designer explains the details of how simulations will function and describes plans for assessing simulated experiments.
- Designer discusses plans for experimental simulations related to electricity.

41.
Concepts: announce future plans, suggest future possibilities
- Discussions about potential future developments and intentions to consult with the community are made by designers.
- A designer speculates on future opportunities and outlines potential tasks for future development.

42.
Concepts: share development plan, explain current focus
- A designer shares details about the development plan and insights about future focus areas.
- The designer explains the ongoing need for development in specific areas and communicates the current focus.

43.
Concepts: plan feature development, set timeline for mechanics experiments
- The designer outlines plans for future feature development and confirms timelines for specific features.
- Designers communicate timelines for the development of specific features or experiments.

44.
Concepts: provide rationale, explain design rationale
- Users and designers provide explanations for decisions or features based on practical considerations.
- A designer explains the rationale behind the software's design for usability and future plans.

45.
Concepts: discuss long-term stability, highlight feature importance
- Designer discusses features that will ensure long-term stability and plans for future stability.
- A designer highlights the long-term benefits of a specific feature and explains its importance for stability.

46.
Concepts: discuss system requirements, provide technical information
- The designer discusses necessary system requirements and suggests checking compatibility issues.
- Designer provides technical information regarding system compatibility and specific requirements.

47.
Concepts: note technical considerations, consider technical requirements
- A designer notes considerations that may affect software compatibility and performance.
- The designer considers the technical requirements necessary for the app's functionality.

48.
Concepts: provide context
- A user shares contextual information that helps others understand a situation or issue.
- Users provide context about their school environment and technology limitations.
===
---
Definitions for each code (48 in total):
1.
Concepts: uncertainty, ask for clarification
Relationship: Users express uncertainty and seek clarification to enhance understanding.
Criteria: Users express uncertainty or seek clarification on a matter by providing additional context or asking questions.
Phrase: Seek clarification on uncertainties.

2.
Concepts: acknowledge provided resources, acknowledge receipt of information
Relationship: Users acknowledge the receipt of resources and information, indicating engagement.
Criteria: Users acknowledge receipt of information or resources shared by the designer or developer.
Phrase: Acknowledge receipt of information.

3.
Concepts: agree with suggestions, agree with focus areas
Relationship: Users express agreement with others' suggestions and focus areas, fostering consensus.
Criteria: Users agree with or support previous comments made by others and the focus areas discussed.
Phrase: Express agreement with suggestions.

4.
Concepts: provide short response, indicate potential user needs
Relationship: Users provide brief responses that indicate their needs or agreement.
Criteria: Users provide a brief affirmative response indicating interest or agreement with previous statements.
Phrase: Indicate user needs through brief responses.

5.
Concepts: high school, introduce teaching background
Relationship: Users share their teaching background, establishing their credibility and context.
Criteria: A user shares their teaching background, specifying subjects, levels taught, and years of service.
Phrase: Introduce teaching background.

6.
Concepts: share teacher identity, confirm professional role
Relationship: Users identify as teachers, confirming their professional role in education.
Criteria: Users identify themselves as teachers and discuss their educational needs and involvement.
Phrase: Confirm teacher identity.

7.
Concepts: acknowledge community support, contribute to community building
Relationship: Users express gratitude for community support, enhancing social bonds.
Criteria: Users express gratitude for the community's support and contributions, responding to discussions with their experiences.
Phrase: Contribute to community building.

8.
Concepts: reciprocate greetings, greet the community warmly
Relationship: Greetings foster engagement and connection within the community.
Criteria: Designers and users initiate and reciprocate greetings to maintain engagement and connection.
Phrase: Greet the community warmly.

9.
Concepts: explain situation, highlight outdated technology
Relationship: Users describe limitations and challenges posed by outdated technology.
Criteria: Users describe the limitations of the computer system used at their school and highlight technical constraints.
Phrase: Highlight challenges of outdated technology.

10.
Concepts: provide positive responses, express enthusiasm and compliments
Relationship: Positive responses and enthusiasm contribute to a supportive community atmosphere.
Criteria: Users respond positively to suggestions or information and express admiration for ideas or features.
Phrase: Express enthusiasm and compliments.

11.
Concepts: appreciate dedication, acknowledge craftsmanship in development
Relationship: Users recognize dedication and craftsmanship, reinforcing community respect.
Criteria: Users express admiration for the dedication shown in the development process and acknowledge craftsmanship.
Phrase: Acknowledge craftsmanship in development.

12.
Concepts: make feature requests, propose software enhancements, suggest practical use cases
Relationship: Users actively engage in suggesting improvements to enhance usability.
Criteria: Users collect and make requests for new features or improvements to the software and suggest practical use cases.
Phrase: Propose software enhancements.

13.
Concepts: request features, request additional experiments
Relationship: Users express their needs for new features and experiments to enhance the tool.
Criteria: Users request new features or improvements for the Physics Lab tool and suggest expanding its capabilities.
Phrase: Request additional features.

14.
Concepts: make a suggestion, suggest simplification
Relationship: Suggestions aim to enhance user experience and simplify interactions.
Criteria: A designer offers a suggestion regarding software usage and shares thoughts on simplifying the design.
Phrase: Suggest simplification.

15.
Concepts: engage in troubleshooting, analyze compatibility issues
Relationship: Troubleshooting discussions aim to resolve software compatibility issues.
Criteria: Users engage in troubleshooting discussions regarding software compatibility while designers analyze and diagnose issues.
Phrase: Engage in troubleshooting.

16.
Concepts: ask technical questions, show interest in technical details
Relationship: Users' inquiries reflect their interest in technical aspects of the software.
Criteria: Users ask technical questions regarding the app's usage or features, indicating areas of interest.
Phrase: Inquire about technical details.

17.
Concepts: quick response, respond to inquiries in real time
Relationship: Quick responses facilitate effective communication and user engagement.
Criteria: Designers respond quickly to user inquiries and engage in real-time communication.
Phrase: Respond to inquiries promptly.

18.
Concepts: share potential solutions, engage in collaborative problem solving
Relationship: Collaboration enhances problem-solving efforts within the community.
Criteria: Designers share potential solutions to issues while collaborating with users to improve the product.
Phrase: Engage in collaborative problem solving.

19.
Concepts: commit to providing a solution, respond to community inquiries
Relationship: Commitment to addressing inquiries fosters trust and support.
Criteria: Designers commit to addressing user inquiries and provide necessary support.
Phrase: Respond to community inquiries.

20.
Concepts: validate user requests, gather detailed requirements
Relationship: Validation and gathering of requirements ensure user needs are understood.
Criteria: Designers validate user requests and seek confirmation regarding specific features or images.
Phrase: Gather detailed requirements.

21.
Concepts: ask follow-up questions, seek clarification through follow-up
Relationship: Follow-up questions enhance understanding and clarify user needs.
Criteria: Designers ask follow-up questions to clarify user needs and preferences regarding their requests.
Phrase: Seek clarification through follow-up.

22.
Concepts: raise design questions, provide design support answers
Relationship: Design questions and answers facilitate effective communication about design elements.
Criteria: Designers pose questions related to design specifications while users provide information related to design support.
Phrase: Discuss design questions.

23.
Concepts: seek consensus on collaboration, confirm understanding in discussions
Relationship: Seeking consensus fosters collaboration and mutual understanding.
Criteria: Designers seek agreement from users on proposed ideas and confirm collaboration during discussions.
Phrase: Confirm understanding in discussions.

24.
Concepts: commit to improvement, acknowledgment and implementation, acknowledge user feedback
Relationship: Commitment to improvement and acknowledgment of feedback enhance user satisfaction.
Criteria: Designers commit to improving the software based on user feedback and discuss plans for implementation.
Phrase: Commit to improvement.

25.
Concepts: inquire about user needs, engage in consultation with teachers
Relationship: Inquiring about user needs fosters collaboration and relevance in design.
Criteria: Designers inquire about teachers' needs and seek input regarding educational materials or standards.
Phrase: Engage in consultation with teachers.

26.
Concepts: gather context, seek additional context from users
Relationship: Gathering context enhances understanding of user needs and backgrounds.
Criteria: Designers gather context by asking users about their teaching situation and roles.
Phrase: Seek additional context.

27.
Concepts: inquire about teaching background, facilitate further engagement
Relationship: Inquiring about teaching backgrounds fosters deeper engagement with users.
Criteria: Designers ask users about their teaching backgrounds to foster engagement and offer support.
Phrase: Facilitate further engagement.

28.
Concepts: express designer engagement, express interest in subject expansion
Relationship: Designer engagement and interest contribute to the community's growth and relevance.
Criteria: Designers express personal interest in subjects related to the software and interest in expanding the subject matter.
Phrase: Express interest in subject expansion.

29.
Concepts: highlight update progress, announce feature expansion
Relationship: Highlighting progress and announcing features keeps the community informed and engaged.
Criteria: Designers highlight the extent of progress made in software updates and communicate new features.
Phrase: Announce feature expansion.

30.
Concepts: explain new features, introduce new components
Relationship: Explaining new features enhances user understanding and engagement.
Criteria: Designers explain new features being developed and introduce new components included in updates.
Phrase: Introduce new components.

31.
Concepts: preview upcoming features, confirm upcoming updates
Relationship: Previewing features and confirming updates keeps users informed about future developments.
Criteria: Designers list and preview upcoming features and confirm the schedule for updates.
Phrase: Preview upcoming features.

32.
Concepts: detail software updates, describe update content
Relationship: Detailing updates provides clarity and transparency to users.
Criteria: Designers detail and list specific updates, including new features and bug fixes.
Phrase: Describe update content.

33.
Concepts: download instructions, inquire about download process
Relationship: Providing and inquiring about download instructions ensures user accessibility.
Criteria: Designers provide instructions on how to download the software while users inquire about the process.
Phrase: Provide download instructions.

34.
Concepts: user guidance, provide usage instructions
Relationship: User guidance enhances user experience and understanding of the software.
Criteria: Designers provide detailed guidance on new features and clear instructions on usage.
Phrase: Provide usage instructions.

35.
Concepts: share knowledge, communicate version specifics
Relationship: Sharing knowledge and version specifics enhances community understanding of the software.
Criteria: Designers share information about software capabilities and clarify specifics of the current version.
Phrase: Share knowledge about versions.

36.
Concepts: explain delay, explain feature complexities
Relationship: Explaining delays and complexities fosters transparency and understanding.
Criteria: Designers explain the reasons for delays in updates and communicate complexities involved in feature releases.
Phrase: Explain delays and complexities.

37.
Concepts: provide release timeline, set timeline expectations
Relationship: Providing timelines sets user expectations for software updates.
Criteria: Designers provide a specific timeline for the release of software versions and set expectations for updates.
Phrase: Set timeline expectations.

38.
Concepts: confirm future feature, promise future realization
Relationship: Confirming future features fosters user anticipation and trust.
Criteria: Designers confirm that a future feature will be realized while indicating it may take time.
Phrase: Promise future realization.

39.
Concepts: promise that the update is ongoing, provide reassurance to users
Relationship: Ongoing updates and reassurance build user confidence in the software.
Criteria: Designers assure users that updates are in progress and address concerns regarding feature availability.
Phrase: Provide reassurance about updates.

40.
Concepts: explain simulation details, experimental simulations in electricity
Relationship: Explaining simulation details enhances understanding of educational tools.
Criteria: Designers explain how simulations will function and discuss plans for experimental simulations related to electricity.
Phrase: Explain simulation details.

41.
Concepts: announce future plans, suggest future possibilities
Relationship: Announcing plans and suggesting possibilities encourages community involvement and anticipation.
Criteria: Designers discuss potential future developments and outline tasks for future development.
Phrase: Suggest future possibilities.

42.
Concepts: share development plan, explain current focus
Relationship: Sharing development plans and current focus areas keeps users informed and engaged.
Criteria: Designers share details about the development plan and communicate current focus areas.
Phrase: Explain current focus.

43.
Concepts: plan feature development, set timeline for mechanics experiments
Relationship: Planning feature development and timelines ensures organized progress.
Criteria: Designers outline plans for future feature development and confirm timelines for specific features.
Phrase: Plan feature development.

44.
Concepts: provide rationale, explain design rationale
Relationship: Providing rationale enhances understanding of design decisions.
Criteria: Users and designers provide explanations for decisions or features based on practical considerations.
Phrase: Explain design rationale.

45.
Concepts: discuss long-term stability, highlight feature importance
Relationship: Discussing stability and feature importance reinforces the value of the software.
Criteria: Designers discuss features that ensure long-term stability and highlight their importance.
Phrase: Highlight feature importance.

46.
Concepts: discuss system requirements, provide technical information
Relationship: Discussing system requirements ensures users understand compatibility needs.
Criteria: Designers discuss necessary system requirements and provide technical information regarding compatibility.
Phrase: Discuss system requirements.

47.
Concepts: note technical considerations, consider technical requirements
Relationship: Noting technical considerations ensures users are aware of compatibility issues.
Criteria: Designers note considerations that may affect software compatibility and performance.
Phrase: Consider technical requirements.

48.
Concepts: provide context
Relationship: Providing context enhances understanding of user situations and needs.
Criteria: Users share contextual information that helps others understand a situation or issue.
Phrase: Provide context.