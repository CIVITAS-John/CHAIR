You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: encourage transparency, demonstrate transparency, promote transparency in updates
- Encouraging transparency in project progress or updates
- Transparency is demonstrated through open communication or sharing of information.
- Transparency is promoted through open communication about updates.

2.
Concepts: promotes transparency, ensuring transparency
- A designer promotes transparency in the development process.
- A designer ensures transparency about the development process or timeline.

3.
Concepts: maintain transparency, maintain transparency in development, transparency in communication, maintain transparency with users
- Designer maintains transparency about updates and plans
- Designer provides updates on development progress, timelines, or versions.
- Designer shares information about the project's progress or status.
- Designer shares updates with users, providing transparency about the development process.

4.
Concepts: promote transparency, maintaining community transparency
- Designers provide transparent information or updates about the community or software.
- A designer maintains transparency with the community by sharing updates or behind-the-scenes information.

5.
Concepts: foster open communication, encouraging open communication, encourage open communication about issues
- Designer encourages open communication by asking users to report problems directly.
- The designer encourages open communication by inviting users to share their problems or issues without hesitation.
- The designer encourages users to openly discuss or report any issues or problems they encounter.

6.
Concepts: encourage problem reporting, promote open feedback culture
- Designer encourages users to report problems or issues.
- Designer encourages users to report problems in the group.

7.
Concepts: open discussion, maintain open dialogue
- Encouraging open discussion or feedback within the community.
- Encouraging open dialogue, suggestions, or feedback from users.

8.
Concepts: encourage discussion, foster an open dialogue for suggestions, fostering open communication
- Designer encourages discussion, feedback, or open communication.
- Designer encourages an open dialogue for suggestions and feedback.
- A designer encourages open communication and feedback within the community.

9.
Concepts: managing timelines, manage expectations regarding release
- Designer manages expectations about timelines or deadlines.
- Designer manages expectations regarding release timelines or schedules.

10.
Concepts: manage community anticipation, community expectation management
- A designer or user manages or sets expectations for the community regarding upcoming releases or features.
- The designer manages community expectations by providing a timeline or priority list for upcoming updates.
- Managing community expectations regarding project timelines or milestones.

11.
Concepts: sets expectations for updates, manage user expectations regarding release
- A designer sets or manages user expectations for future updates.
- The designer manages user expectations regarding the release of new features or updates.

12.
Concepts: reassurance, providing reassurance
- Designer provides reassurance or comfort to users.
- Providing reassurance about compatibility or functionality
- Designer provides reassurance or comfort to the community.

13.
Concepts: usability reassurance, reassure about software usability
- Designer reassures users about the usability of the software
- A user or designer reassures others about the usability of the software.

14.
Concepts: maintain user confidence, promote software confidence
- Designer maintains user confidence in the design process.
- Designer promotes confidence in the software's usability.

15.
Concepts: encourage user patience, encouraging community patience, encourage user patience for stability
- Designer encourages user patience or understanding.
- A designer encourages users to be patient and supportive during development.
- Designer sets expectations for stability or patience.

16.
Concepts: alleviating concerns, alleviating concerns about delays
- Reassuring users that a delay is temporary and that progress is being made.
- Designer reassures users about delays or timelines.

17.
Concepts: update reassurance, reassure users about update timeline
- Designer reassures users about the status of an update
- Reassuring users about the update timeline or progress

18.
Concepts: apology, apologizing or showing empathy
- Designer expresses remorse for a past action
- The designer apologizes or shows empathy towards the community.

19.
Concepts: apologize for delay, apology for delay
- Designer apologizes for late communication or inconvenience.
- The designer apologizes for a late response or message, showing awareness of timing.

20.
Concepts: apologize for inconvenience, acknowledge potential disruption
- A designer apologizes for any inconvenience caused.
- Apologizing for an inconvenience or disturbance.
- Designer acknowledges potential disruption or apologizes for inconvenience.

21.
Concepts: express commitment, commitment to improvement
- Designer expresses gratitude and commitment to improvement.
- Designer commits to ongoing improvement
- The designer expresses commitment to improvement.

22.
Concepts: commit to improvement, improvement commitment, committing to development
- Designer commits to improving the software or service.
- The designer commits to improving the software, often in response to user feedback.
- A designer expresses commitment to developing or improving the software.

23.
Concepts: update commitment, commitment to future updates
- A designer commits to implementing a feature or update soon.
- A designer expresses commitment to future improvements or updates.

24.
Concepts: self-rebuttal, self-correction
- A designer corrects or clarifies their previous response.
- Designer corrects or reconsiders their previous statement.

25.
Concepts: suggest manual adjustment, describe manual adjustment option
- Designer suggests manual adjustment or customization.
- The designer suggests manual adjustments as a workaround for a issue.
- A designer describes a manual adjustment option or feature.

26.
Concepts: discuss future manual editing, clarify future capabilities for manual editing
- Designer mentions or discusses future plans or features for manual editing.
- The designer clarifies or discusses future capabilities or features of the online community, specifically manual editing.

27.
Concepts: seek improvement, seek avatar improvement assistance
- Designer expresses a desire to improve something, such as an avatar.
- Designer seeks help with improving their avatar quality.

28.
Concepts: communicate ongoing optimization, ongoing optimization efforts
- Designer communicates ongoing optimization
- The designer communicates ongoing efforts to optimize features.

29.
Concepts: ongoing improvement assurance, emphasizing ongoing improvements
- Designer reassures users of ongoing improvements.
- A designer assures the community that improvements are ongoing.

30.
Concepts: explain focus areas, explain current focus
- Designer explains or clarifies the focus of the project.
- The designer explains the current focus or priority of the project.

31.
Concepts: priority clarification, communicate project priorities
- Designer clarifies priorities or plans for the project.
- The designer communicates the project's priorities, dependencies, or constraints.

32.
Concepts: explaining design priorities, explain project prioritization
- A designer explains design priorities or rationales.
- Designer explains the project prioritization or decision-making process.
===
Here are the definitions for each code:

---
1.
Concepts: encourage transparency, demonstrate transparency, promote transparency in updates
Relationship: The concepts are interconnected, as demonstrating transparency leads to promoting transparency in updates, which in turn encourages transparency.
Criteria: Designers encourage transparency by demonstrating openness in project progress or updates.
Phrase: Encouraging transparency through open updates.

2.
Concepts: promotes transparency, ensuring transparency
Relationship: The concepts are complementary, as promoting transparency implies ensuring transparency in the development process.
Criteria: Designers promote transparency by ensuring openness in the development process or timeline.
Phrase: Ensuring transparency in development.

3.
Concepts: maintain transparency, maintain transparency in development, transparency in communication, maintain transparency with users
Relationship: The concepts are interconnected, as maintaining transparency in development and communication leads to maintaining transparency with users.
Criteria: Designers maintain transparency by providing updates on development progress, timelines, or versions.
Phrase: Maintaining transparency with users.

4.
Concepts: promote transparency, maintaining community transparency
Relationship: The concepts are complementary, as promoting transparency implies maintaining transparency with the community.
Criteria: Designers promote transparency by maintaining openness with the community through updates or behind-the-scenes information.
Phrase: Maintaining community transparency.

5.
Concepts: foster open communication, encouraging open communication, encourage open communication about issues
Relationship: The concepts are interconnected, as fostering open communication leads to encouraging open communication about issues.
Criteria: Designers encourage open communication by asking users to report problems directly.
Phrase: Fostering open communication.

6.
Concepts: encourage problem reporting, promote open feedback culture
Relationship: The concepts are complementary, as encouraging problem reporting implies promoting an open feedback culture.
Criteria: Designers encourage users to report problems or issues.
Phrase: Encouraging problem reporting.

7.
Concepts: open discussion, maintain open dialogue
Relationship: The concepts are interconnected, as open discussion leads to maintaining an open dialogue.
Criteria: Designers encourage open discussion or feedback within the community.
Phrase: Maintaining open dialogue.

8.
Concepts: encourage discussion, foster an open dialogue for suggestions, fostering open communication
Relationship: The concepts are interconnected, as encouraging discussion leads to fostering an open dialogue for suggestions.
Criteria: Designers encourage discussion, feedback, or open communication.
Phrase: Fostering open communication.

9.
Concepts: managing timelines, manage expectations regarding release
Relationship: The concepts are complementary, as managing timelines implies managing expectations regarding release.
Criteria: Designers manage expectations about timelines or deadlines.
Phrase: Managing release expectations.

10.
Concepts: manage community anticipation, community expectation management
Relationship: The concepts are complementary, as managing community anticipation implies managing expectations.
Criteria: Designers manage community expectations by providing a timeline or priority list for upcoming updates.
Phrase: Managing community anticipation.

11.
Concepts: sets expectations for updates, manage user expectations regarding release
Relationship: The concepts are complementary, as setting expectations for updates implies managing user expectations regarding release.
Criteria: Designers set or manage user expectations for future updates.
Phrase: Setting release expectations.

12.
Concepts: reassurance, providing reassurance
Relationship: The concepts are interchangeable, as providing reassurance implies reassurance.
Criteria: Designers provide reassurance or comfort to users.
Phrase: Providing reassurance.

13.
Concepts: usability reassurance, reassure about software usability
Relationship: The concepts are complementary, as usability reassurance implies reassuring about software usability.
Criteria: Designers reassure users about the usability of the software.
Phrase: Reassuring about usability.

14.
Concepts: maintain user confidence, promote software confidence
Relationship: The concepts are complementary, as maintaining user confidence implies promoting software confidence.
Criteria: Designers maintain user confidence in the design process.
Phrase: Maintaining software confidence.

15.
Concepts: encourage user patience, encouraging community patience, encourage user patience for stability
Relationship: The concepts are interconnected, as encouraging user patience leads to encouraging community patience.
Criteria: Designers encourage user patience or understanding.
Phrase: Encouraging user patience.

16.
Concepts: alleviating concerns, alleviating concerns about delays
Relationship: The concepts are complementary, as alleviating concerns implies alleviating concerns about delays.
Criteria: Designers alleviate concerns about delays or timelines.
Phrase: Alleviating concerns.

17.
Concepts: update reassurance, reassure users about update timeline
Relationship: The concepts are complementary, as update reassurance implies reassuring users about the update timeline.
Criteria: Designers reassure users about the status of an update.
Phrase: Reassuring about updates.

18.
Concepts: apology, apologizing or showing empathy
Relationship: The concepts are interchangeable, as apologizing implies showing empathy.
Criteria: Designers express remorse for a past action.
Phrase: Apologizing for mistakes.

19.
Concepts: apologize for delay, apology for delay
Relationship: The concepts are complementary, as apologizing for delay implies apologizing for inconvenience.
Criteria: Designers apologize for late communication or inconvenience.
Phrase: Apologizing for delays.

20.
Concepts: apologize for inconvenience, acknowledge potential disruption
Relationship: The concepts are complementary, as apologizing for inconvenience implies acknowledging potential disruption.
Criteria: Designers apologize for any inconvenience caused.
Phrase: Apologizing for inconvenience.

21.
Concepts: express commitment, commitment to improvement
Relationship: The concepts are complementary, as expressing commitment implies committing to improvement.
Criteria: Designers express gratitude and commitment to improvement.
Phrase: Expressing commitment to improvement.

22.
Concepts: commit to improvement, improvement commitment, committing to development
Relationship: The concepts are complementary, as committing to improvement implies committing to development.
Criteria: Designers commit to improving the software or service.
Phrase: Committing to improvement.

23.
Concepts: update commitment, commitment to future updates
Relationship: The concepts are complementary, as update commitment implies committing to future updates.
Criteria: Designers commit to implementing a feature or update soon.
Phrase: Committing to future updates.

24.
Concepts: self-rebuttal, self-correction
Relationship: The concepts are interchangeable, as self-rebuttal implies self-correction.
Criteria: Designers correct or clarify their previous response.
Phrase: Correcting mistakes.

25.
Concepts: suggest manual adjustment, describe manual adjustment option
Relationship: The concepts are complementary, as suggesting manual adjustment implies describing the option.
Criteria: Designers suggest manual adjustment or customization.
Phrase: Suggesting manual adjustments.

26.
Concepts: discuss future manual editing, clarify future capabilities for manual editing
Relationship: The concepts are complementary, as discussing future manual editing implies clarifying future capabilities.
Criteria: Designers mention or discuss future plans or features for manual editing.
Phrase: Discussing future manual editing.

27.
Concepts: seek improvement, seek avatar improvement assistance
Relationship: The concepts are complementary, as seeking improvement implies seeking assistance.
Criteria: Designers express a desire to improve something, such as an avatar.
Phrase: Seeking improvement assistance.

28.
Concepts: communicate ongoing optimization, ongoing optimization efforts
Relationship: The concepts are complementary, as communicating ongoing optimization implies ongoing efforts.
Criteria: Designers communicate ongoing optimization.
Phrase: Communicating ongoing optimization.

29.
Concepts: ongoing improvement assurance, emphasizing ongoing improvements
Relationship: The concepts are complementary, as ongoing improvement assurance implies emphasizing ongoing improvements.
Criteria: Designers reassure users of ongoing improvements.
Phrase: Assuring ongoing improvements.

30.
Concepts: explain focus areas, explain current focus
Relationship: The concepts are complementary, as explaining focus areas implies explaining the current focus.
Criteria: Designers explain or clarify the focus of the project.
Phrase: Explaining project focus.

31.
Concepts: priority clarification, communicate project priorities
Relationship: The concepts are complementary, as priority clarification implies communicating project priorities.
Criteria: Designers clarify priorities or plans for the project.
Phrase: Clarifying project priorities.

32.
Concepts: explaining design priorities, explain project prioritization
Relationship: The concepts are complementary, as explaining design priorities implies explaining project prioritization.
Criteria: Designers explain design priorities or rationales.
Phrase: Explaining project prioritization.