You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. If a sub-code includes another, use the broader one. If sub-codes are parallel, write one that covers both.
Write clear and generalizable labels and criteria for each code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization (e.g. "social interaction" instead of "interaction", "communication approach" instead of "communication").
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (19 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {Consolidated criteria of code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
19.
Relationship: {The logical relationship between sub-codes in code 19}
Criteria: {Consolidated criteria of code 19}
Label: {A consolidated label of code 19}
Category: {2-4 words for code 19}
---
~~~
1. troubleshooting, technical user support.
- Discussing problems or issues with the software
- Offering technical support, seeking assistance, and troubleshooting

2. browser interface interaction, interface interaction and choices.
- Descriptions of interactions with the software's browser interface to resolve issues.
- Conversations related to user interaction with the software interface

3. platform version, platform clarification.
- Discussion of different versions or features of the online platform.
- Clarifying or distinguishing between different platforms or versions

4. platform & hardware compatibility, software compatibility issues.
- Confirming compatibility, referring to hardware requirements
- Discussions about software versions, system requirements, and compatibility issues

5. feature list, technical specifications.
- Lists or outlines the features included in the product.
- Defining technical specifications and features

6. contextual usage question, context awareness.
- Questions regarding the use of the software in specific contexts or environments.
- Discussions or considerations of the users' contexts, environments, or constraints that influence the software's design or usage.

7. teaching utility & learning affordances, contextual feedback and classroom constraints.
- Discussing teaching contexts, referring to learning tool affordances
- Quotes discussing software features and classroom constraints

8. use case, educational technology use case.
- Describing a specific use case or application
- Application primarily intended for educational settings

9. user needs and constraints, usability challenges and constraints.
- Expressing user needs and desires, as well as noting constraints or limitations
- Exploring challenges users face in interacting with the software

10. visual design and user interface, design considerations and usability.
- Considerations around visual aspects and representations in the user interface
- Examining how design impacts user experience and considering usability principles

11. user manuals, user experience.
- Conversation about the need for user manuals and the designer's response to usability concerns.
- Discussions about user experience, discussions about user's technical environment

12. software functionality, interaction affordances.
- Explaining software capabilities and discussing functionalities
- Discussions about the software's features, functionality, or affordances that enable or constrain user interactions.

13. software usability evaluation, usability and accessibility.
- Assessing software usability, ease of use, and practicality
- Quotes or evidence evaluating the software's usability, stability, and accessibility for both teachers and students.

14. technical challenges, development challenges.
- Discussing technical limitations or obstacles
- Highlights difficulties or obstacles encountered during the development or update process.

15. prototype description, known issues & limitations.
- Describing the current state or limitations of a prototype or early version
- Mentioning known issues, technical or feature limitations

16. circuit diagram discussion, experimental limitations and focus.
- Discussions or mentions of circuit diagrams, limitations, or constraints
- Discussion of subject-specific experimental limitations and the focus areas within those subjects.

17. visual media sharing, image sharing and uploading.
- Sharing images/visuals, uploading or trying to upload images
- Technical aspects and user experience of sharing images within the platform

18. technical infrastructure, school infrastructure.
- Mentioning the technical infrastructure in use.
- Discussions about the school's infrastructure or technical setup

19. content filtering, classroom network disabled.
- Filtering content, describing network restrictions in classrooms
- Stating that classroom computers generally do not have network access
===
Here are the definitions for each code:

---
Categories: 
* Community Building and Support
* Platform and Technical Issues
* Design and Usability
* Educational Context and Constraints
* Technical Development and Infrastructure

Definitions for each code:

1.
Relationship: Parallel sub-codes
Criteria: Discussing technical issues, offering support, and troubleshooting
Label: Technical Support and Troubleshooting
Category: Community Building and Support

2.
Relationship: Parallel sub-codes
Criteria: Describing interactions with the software interface, discussing user choices
Label: Interface Interaction and Choices
Category: Design and Usability

3.
Relationship: Broader sub-code
Criteria: Discussing different versions or features of the online platform
Label: Platform Clarification
Category: Platform and Technical Issues

4.
Relationship: Broader sub-code
Criteria: Confirming compatibility, discussing software versions and system requirements
Label: Platform Compatibility
Category: Platform and Technical Issues

5.
Relationship: Parallel sub-codes
Criteria: Outlining features, defining technical specifications
Label: Technical Specifications
Category: Platform and Technical Issues

6.
Relationship: Parallel sub-codes
Criteria: Discussing software use in specific contexts, considering user environments
Label: Contextual Usage
Category: Educational Context and Constraints

7.
Relationship: Broader sub-code
Criteria: Discussing teaching contexts, learning tool affordances, and classroom constraints
Label: Teaching Utility and Learning Affordances
Category: Educational Context and Constraints

8.
Relationship: Parallel sub-codes
Criteria: Describing a specific use case, primarily for educational settings
Label: Educational Technology Use Case
Category: Educational Context and Constraints

9.
Relationship: Parallel sub-codes
Criteria: Expressing user needs, noting constraints, and exploring usability challenges
Label: User Needs and Constraints
Category: Design and Usability

10.
Relationship: Parallel sub-codes
Criteria: Considering visual design, user interface, and usability principles
Label: Visual Design and User Interface
Category: Design and Usability

11.
Relationship: Broader sub-code
Criteria: Discussing user manuals, user experience, and technical environment
Label: User Experience
Category: Design and Usability

12.
Relationship: Parallel sub-codes
Criteria: Explaining software capabilities, discussing functionalities and affordances
Label: Software Functionality
Category: Platform and Technical Issues

13.
Relationship: Parallel sub-codes
Criteria: Assessing software usability, ease of use, and practicality
Label: Software Usability Evaluation
Category: Design and Usability

14.
Relationship: Parallel sub-codes
Criteria: Discussing technical limitations, obstacles, and development challenges
Label: Technical Challenges
Category: Technical Development and Infrastructure

15.
Relationship: Broader sub-code
Criteria: Describing prototype limitations, known issues, and technical limitations
Label: Prototype Description
Category: Technical Development and Infrastructure

16.
Relationship: Parallel sub-codes
Criteria: Discussing circuit diagrams, experimental limitations, and focus areas
Label: Experimental Limitations
Category: Educational Context and Constraints

17.
Relationship: Parallel sub-codes
Criteria: Sharing images, uploading, and technical aspects of image sharing
Label: Visual Media Sharing
Category: Community Building and Support

18.
Relationship: Parallel sub-codes
Criteria: Mentioning technical infrastructure, school infrastructure
Label: Technical Infrastructure
Category: Technical Development and Infrastructure

19.
Relationship: Parallel sub-codes
Criteria: Filtering content, describing network restrictions in classrooms
Label: Content Filtering
Category: Technical Development and Infrastructure