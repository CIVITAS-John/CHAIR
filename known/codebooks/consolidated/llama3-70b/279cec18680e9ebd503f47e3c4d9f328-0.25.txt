You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: user instructions, detailed instructions
- The participant provides instructions or prompts for the AI to generate code.
- Provides detailed instructions or requests to AI-generated code.

2.
Concepts: task initiation, sets new task for ai, sets initial task for ai
- Participant initiates a task by asking AI to create a specific program.
- Sets new tasks or prompts for AI to generate code.
- Setting initial tasks or prompts for the AI to assist with.

3.
Concepts: syntax search, relies on ai for syntax support
- Searches for specific syntax structures in AI-generated code and asks for clarification when needed.
- Relies on the AI for syntax support, seeking guidance on specific coding structures.

4.
Concepts: seeking help from ai, seeks ai help with troubleshooting, seeks specific syntax help from ai
- Participants seek help from AI for specific coding issues and request clarification on code structures.
- Participants seek help from AI in troubleshooting and resolving errors.
- The participant seeks help from AI for specific syntax-related issues in NetLogo.

5.
Concepts: user needs, requesting specific code examples from ai
- Expressing user needs, such as seeking help or understanding AI-generated code.
- Users request specific code examples or patterns from the AI to meet their code structure needs.

6.
Concepts: other ways, ai assistance
- Envisions AI assisting users in writing "help" posts for online forums.
- Participant envisions AI as an assistant that can help with tasks such as writing "help" posts.

7.
Concepts: tools, proposes ai assisted help posts
- Suggests using the LLM-driven interface to generate help posts for users.
- Proposing AI-assisted help posts that summarize the user's situation, code, and error.

8.
Concepts: plotting, visualization support
- Exploring plotting capabilities with AI.
- Seeks visualization support or plotting capabilities from AI.

9.
Concepts: model creation, appreciates thoughtful model creation
- The participant is creating a model in a careful and deliberate manner, following best practices.
- The user appreciates thoughtful model creation and best practices.

10.
Concepts: integrates ai into established workflow, integration into existing workflow
- Integrates AI into established workflow and process.
- How E04 plans to integrate AI into their established process of building models.

11.
Concepts: model integration, prefers automatic code integration
- The user wants the capability to integrate generated code into the model automatically.
- Participant expresses a preference for automatic code integration.

12.
Concepts: using ai for equation development, relies on ai for specific modeling aspects
- Participants use AI for developing equations in agent-based models.
- The expert relies on the AI for specific modeling aspects, such as equation development.

13.
Concepts: task completion, uses ai-generated code due to time constraints
- Uses AI-generated code to complete tasks, especially under time constraints.
- Participants use AI-generated code due to time constraints or pressure.

14.
Concepts: task switching, abandons task after ai repetition
- Describes switching between tasks or giving up on a task due to AI interaction.
- Gives up on a task when AI repeats a question.

15.
Concepts: adapts based on ai-generated code, customizes ai-generated code
- Adapts and learns from AI-generated code and feedback.
- The participant customizes or modifies the AI-generated code to fit their needs.

16.
Concepts: best practices, notes adherence to best practices
- Emphasizes the importance of following best practices in coding, rather than relying on the AI to create a model.
- Notes that AI follows best practices in model creation.

17.
Concepts: code complexity, discusses code complexity and quality, code-quality
- The user discusses the importance of code complexity and quality in maintenance.
- Evaluating code complexity and quality.
- Discusses code complexity and quality, emphasizing the importance of plain and accessible code.

18.
Concepts: code posting, describes unstructured code posts
- Identifies challenges in seeking help due to code posting without context.
- The expert describes the challenges of unstructured code posts and the need for background information.

19.
Concepts: conceptualization, highlights missing capability
- Highlights the importance of conceptualizing problems and writing instructions for others, a skill often lacking in individuals.
- The expert identifies a missing capability or skill in people, specifically writing instructions for others.

20.
Concepts: helpful interface, parameter clarification
- Finds the AI interface helpful in clarifying parameters or understanding the task.
- Finds it helpful to clarify parameters with the interface.

21.
Concepts: evaluates chatgpt's code, using chatgpt for code analysis
- Evaluates ChatGPT code and asks for detailed explanations.
- The expert uses the AI for code analysis, seeking timely feedback on their code.

22.
Concepts: evaluates ai comparison, compares with initial code
- Comparing AI-generated code with human-written code.
- Compares the output of the LLM-driven interface with initial code.

23.
Concepts: code reading, summarizes ai's code
- Describes the process of reading and evaluating code generated by AI-driven interfaces.
- Summarizes and interprets AI-generated code to understand its logic.

24.
Concepts: ai guidance, using ai-generated code as a reference
- Uses AI guidance to inform coding decisions, rather than relying solely on the AI-generated code.
- Participants use AI-generated code as a reference or guide to inform their manual coding efforts.

25.
Concepts: seeking ai-generated code, selectively using ai-generated code
- Participants interact with AI-generated code and seek it for specific tasks.
- Participants selectively use AI-generated code or copy code snippets.

26.
Concepts: comments, usability, documentation and commenting
- Comments on AI-generated code, emphasizing its readability and documentation.
- Describes the usability of ChatGPT-generated code, including commenting and documentation.
- The interviewee's perception of AI's role in generating well-documented and commented code.

27.
Concepts: code generation, successful implementation
- Mentions successful code generation with AI assistance.
- The participant describes a successful implementation of the AI-generated code.

28.
Concepts: values flexibility, values ai feedback
- Values flexibility in AI-generated code and solutions.
- Values AI feedback and potential for code optimization.

29.
Concepts: workflow improvement, chatgpt ability (positive): optimization, utilize ai-assisted coding tools for optimization
- Describes how AI-driven interfaces can optimize code and workflow.
- The participant discusses the ability of AI-driven interfaces to optimize code or improve coding efficiency.
- Participants use LLM-driven interfaces to optimize code with AI's assistance, improving coding efficiency.

30.
Concepts: efficiency, highlights efficiency
- The user values efficiency in programming and sees potential in AI-assisted peer programming.
- Highlights the efficiency of peer programming and AI-assisted collaboration.

31.
Concepts: time-saving importance, appreciates workflow efficiency
- The user values the time-saving potential of AI-generated code.
- Appreciates the efficiency of AI-generated code in workflow.

32.
Concepts: notes ai's efficiency, assistance to optimize & debug
- Participant notes the efficiency of AI in analyzing code.
- Appreciates the AI's assistance in optimizing and debugging code, highlighting its benefits for productivity.
===
Here are the definitions for each code:

---
1.
Concepts: user instructions, detailed instructions
Relationship: The concepts are related as they both describe the user's input to the AI, with detailed instructions being a more specific type of user instruction.
Criteria: Participants provide instructions or prompts to the AI to generate code, and may request detailed instructions or clarification on code structures.
Phrase: Provides instructions to AI.

2.
Concepts: task initiation, sets new task for ai, sets initial task for ai
Relationship: The concepts are related as they all describe the user's initiation of a task or prompt for the AI.
Criteria: Participants initiate a task by asking AI to create a specific program, setting new tasks or prompts for AI to generate code.
Phrase: Initiates task for AI.

3.
Concepts: syntax search, relies on ai for syntax support
Relationship: The concepts are related as they both describe the user's reliance on the AI for syntax-related issues.
Criteria: Participants search for specific syntax structures in AI-generated code and ask for clarification when needed, relying on the AI for syntax support.
Phrase: Seeks syntax support from AI.

4.
Concepts: seeking help from ai, seeks ai help with troubleshooting, seeks specific syntax help from ai
Relationship: The concepts are related as they all describe the user's request for help from the AI.
Criteria: Participants seek help from AI for specific coding issues, request clarification on code structures, and troubleshoot errors.
Phrase: Seeks help from AI.

5.
Concepts: user needs, requesting specific code examples from ai
Relationship: The concepts are related as they both describe the user's needs and requests from the AI.
Criteria: Participants express user needs, such as seeking help or understanding AI-generated code, and request specific code examples or patterns from the AI.
Phrase: Requests code examples from AI.

6.
Concepts: other ways, ai assistance
Relationship: The concepts are related as they both describe the user's vision for AI assistance.
Criteria: Participants envision AI assisting users in writing "help" posts for online forums, and propose AI-assisted help posts that summarize the user's situation, code, and error.
Phrase: Envisions AI assistance.

7.
Concepts: tools, proposes ai assisted help posts
Relationship: The concepts are related as they both describe the user's proposal for AI-assisted tools.
Criteria: Participants suggest using the LLM-driven interface to generate help posts for users, and propose AI-assisted help posts that summarize the user's situation, code, and error.
Phrase: Proposes AI-assisted tools.

8.
Concepts: plotting, visualization support
Relationship: The concepts are related as they both describe the user's request for visualization capabilities from the AI.
Criteria: Participants explore plotting capabilities with AI, and seek visualization support or plotting capabilities from AI.
Phrase: Seeks visualization support.

9.
Concepts: model creation, appreciates thoughtful model creation
Relationship: The concepts are related as they both describe the user's approach to model creation.
Criteria: Participants create models in a careful and deliberate manner, following best practices, and appreciate thoughtful model creation and best practices.
Phrase: Creates models thoughtfully.

10.
Concepts: integrates ai into established workflow, integration into existing workflow
Relationship: The concepts are related as they both describe the user's plan for integrating AI into their workflow.
Criteria: Participants integrate AI into established workflow and process, and plan to integrate AI into their established process of building models.
Phrase: Integrates AI into workflow.

11.
Concepts: model integration, prefers automatic code integration
Relationship: The concepts are related as they both describe the user's preference for integrating generated code into the model.
Criteria: Participants want the capability to integrate generated code into the model automatically, and express a preference for automatic code integration.
Phrase: Prefers automatic integration.

12.
Concepts: using ai for equation development, relies on ai for specific modeling aspects
Relationship: The concepts are related as they both describe the user's reliance on AI for specific modeling tasks.
Criteria: Participants use AI for developing equations in agent-based models, and rely on the AI for specific modeling aspects, such as equation development.
Phrase: Relies on AI for modeling.

13.
Concepts: task completion, uses ai-generated code due to time constraints
Relationship: The concepts are related as they both describe the user's use of AI-generated code to complete tasks.
Criteria: Participants use AI-generated code to complete tasks, especially under time constraints, and use AI-generated code due to time constraints or pressure.
Phrase: Uses AI-generated code for task completion.

14.
Concepts: task switching, abandons task after ai repetition
Relationship: The concepts are related as they both describe the user's response to AI interaction.
Criteria: Participants describe switching between tasks or giving up on a task due to AI interaction, and give up on a task when AI repeats a question.
Phrase: Responds to AI interaction.

15.
Concepts: adapts based on ai-generated code, customizes ai-generated code
Relationship: The concepts are related as they both describe the user's adaptation to AI-generated code.
Criteria: Participants adapt and learn from AI-generated code and feedback, and customize or modify the AI-generated code to fit their needs.
Phrase: Adapts to AI-generated code.

16.
Concepts: best practices, notes adherence to best practices
Relationship: The concepts are related as they both describe the user's emphasis on best practices.
Criteria: Participants emphasize the importance of following best practices in coding, rather than relying on the AI to create a model, and note that AI follows best practices in model creation.
Phrase: Emphasizes best practices.

17.
Concepts: code complexity, discusses code complexity and quality, code-quality
Relationship: The concepts are related as they all describe the user's evaluation of code complexity and quality.
Criteria: Participants discuss the importance of code complexity and quality in maintenance, evaluate code complexity and quality, and emphasize the importance of plain and accessible code.
Phrase: Evaluates code complexity.

18.
Concepts: code posting, describes unstructured code posts
Relationship: The concepts are related as they both describe the user's experience with code posting.
Criteria: Participants identify challenges in seeking help due to code posting without context, and describe the challenges of unstructured code posts and the need for background information.
Phrase: Describes code posting challenges.

19.
Concepts: conceptualization, highlights missing capability
Relationship: The concepts are related as they both describe the user's identification of a missing capability.
Criteria: Participants highlight the importance of conceptualizing problems and writing instructions for others, a skill often lacking in individuals, and identify a missing capability or skill in people, specifically writing instructions for others.
Phrase: Identifies missing capability.

20.
Concepts: helpful interface, parameter clarification
Relationship: The concepts are related as they both describe the user's experience with the AI interface.
Criteria: Participants find the AI interface helpful in clarifying parameters or understanding the task, and find it helpful to clarify parameters with the interface.
Phrase: Finds interface helpful.

21.
Concepts: evaluates chatgpt's code, using chatgpt for code analysis
Relationship: The concepts are related as they both describe the user's evaluation of AI-generated code.
Criteria: Participants evaluate ChatGPT code and ask for detailed explanations, and use the AI for code analysis, seeking timely feedback on their code.
Phrase: Evaluates AI-generated code.

22.
Concepts: evaluates ai comparison, compares with initial code
Relationship: The concepts are related as they both describe the user's comparison of AI-generated code with human-written code.
Criteria: Participants compare AI-generated code with human-written code, and compare the output of the LLM-driven interface with initial code.
Phrase: Compares AI-generated code.

23.
Concepts: code reading, summarizes ai's code
Relationship: The concepts are related as they both describe the user's interpretation of AI-generated code.
Criteria: Participants describe the process of reading and evaluating code generated by AI-driven interfaces, and summarize and interpret AI-generated code to understand its logic.
Phrase: Interprets AI-generated code.

24.
Concepts: ai guidance, using ai-generated code as a reference
Relationship: The concepts are related as they both describe the user's use of AI-generated code as a guide.
Criteria: Participants use AI guidance to inform coding decisions, rather than relying solely on the AI-generated code, and use AI-generated code as a reference or guide to inform their manual coding efforts.
Phrase: Uses AI-generated code as a guide.

25.
Concepts: seeking ai-generated code, selectively using ai-generated code
Relationship: The concepts are related as they both describe the user's interaction with AI-generated code.
Criteria: Participants interact with AI-generated code and seek it for specific tasks, and selectively use AI-generated code or copy code snippets.
Phrase: Interacts with AI-generated code.

26.
Concepts: comments, usability, documentation and commenting
Relationship: The concepts are related as they all describe the user's evaluation of AI-generated code.
Criteria: Participants comment on AI-generated code, emphasizing its readability and documentation, and describe the usability of ChatGPT-generated code, including commenting and documentation.
Phrase: Evaluates AI-generated code usability.

27.
Concepts: code generation, successful implementation
Relationship: The concepts are related as they both describe the user's experience with AI-generated code.
Criteria: Participants mention successful code generation with AI assistance, and describe a successful implementation of the AI-generated code.
Phrase: Experiences successful code generation.

28.
Concepts: values flexibility, values ai feedback
Relationship: The concepts are related as they both describe the user's values regarding AI-generated code.
Criteria: Participants value flexibility in AI-generated code and solutions, and value AI feedback and potential for code optimization.
Phrase: Values AI-generated code flexibility.

29.
Concepts: workflow improvement, chatgpt ability (positive): optimization, utilize ai-assisted coding tools for optimization
Relationship: The concepts are related as they all describe the user's perception of AI-driven interfaces for optimization.
Criteria: Participants describe how AI-driven interfaces can optimize code and workflow, and discuss the ability of AI-driven interfaces to optimize code or improve coding efficiency.
Phrase: Perceives AI-driven interfaces for optimization.

30.
Concepts: efficiency, highlights efficiency
Relationship: The concepts are related as they both describe the user's emphasis on efficiency.
Criteria: Participants value efficiency in programming and see potential in AI-assisted peer programming, and highlight the efficiency of peer programming and AI-assisted collaboration.
Phrase: Emphasizes efficiency.

31.
Concepts: time-saving importance, appreciates workflow efficiency
Relationship: The concepts are related as they both describe the user's appreciation for time-saving benefits.
Criteria: Participants value the time-saving potential of AI-generated code, and appreciate the efficiency of AI-generated code in workflow.
Phrase: Appreciates time-saving benefits.

32.
Concepts: notes ai's efficiency, assistance to optimize & debug
Relationship: The concepts are related as they both describe the user's appreciation for AI's efficiency.
Criteria: Participants note the efficiency of AI in analyzing code, and appreciate the AI's assistance in optimizing and debugging code, highlighting its benefits for productivity.
Phrase: Appreciates AI's efficiency.