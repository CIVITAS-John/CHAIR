You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (5 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
5. 
Concepts: {Repeat the input 5}
Relationship: {What is logical relationship between concepts in code 5, or N/A if not applicable}
Criteria: {Who did what, and how for code 5}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: highlights need for debugging practice, emphasizes and recognizes need for expertise
- The user highlights the need for debugging practice and recognizes the importance of debugging skills.
- Participants emphasize and recognize the need for user expertise in debugging.

2.
Concepts: acknowledges ai errors, compares ai mistakes to early apple maps errors
- The participant acknowledges AI errors and describes iterative error fixing.
- The participant compares AI's mistakes to early Apple Maps errors.

3.
Concepts: highlights best practices, human-ai (positive): support debug by helping find missing aspects
- The participant highlights the AI's ability to promote best practices, such as debugging and unit testing.
- The expert appreciates the AI's ability to support debugging by finding missing aspects.

4.
Concepts: simplicity, prioritizes simplicity and clarity
- Pursues simplicity in AI-generated code or models.
- Users consider code maintenance and readability, prioritizing simplicity and clarity in coding.

5.
Concepts: customization, suggesting ai-driven documentation
- The code suggests the potential of AI to provide customized documentation and translation of jargon between different user groups.
- Participants suggest using AI to create customized documentation for different user groups.
===
Here are the definitions for each code:

---
1.
Concepts: highlights need for debugging practice, emphasizes and recognizes need for expertise
Relationship: The need for debugging practice is closely tied to the recognition of the importance of expertise in debugging.
Criteria: Participants highlight and emphasize the need for debugging practice and expertise in debugging.
Phrase: Emphasize the importance of debugging expertise.

2.
Concepts: acknowledges ai errors, compares ai mistakes to early apple maps errors
Relationship: The acknowledgment of AI errors is illustrated through the comparison to early Apple Maps errors.
Criteria: Participants acknowledge AI errors and compare them to early Apple Maps errors.
Phrase: Acknowledge AI errors through analogies.

3.
Concepts: highlights best practices, human-ai (positive): support debug by helping find missing aspects
Relationship: The highlighting of best practices is facilitated by the AI's ability to support debugging.
Criteria: Participants highlight best practices and appreciate AI's support in debugging by finding missing aspects.
Phrase: Highlight best practices with AI support.

4.
Concepts: simplicity, prioritizes simplicity and clarity
Relationship: The pursuit of simplicity is driven by the prioritization of simplicity and clarity.
Criteria: Users pursue simplicity and prioritize simplicity and clarity in coding for code maintenance and readability.
Phrase: Pursue simplicity and clarity in coding.

5.
Concepts: customization, suggesting ai-driven documentation
Relationship: The suggestion of AI-driven documentation is driven by the potential for customization.
Criteria: Participants suggest using AI to create customized documentation for different user groups.
Phrase: Suggest AI-driven customization of documentation.