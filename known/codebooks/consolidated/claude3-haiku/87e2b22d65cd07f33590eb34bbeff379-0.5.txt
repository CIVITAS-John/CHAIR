You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (5 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
5. {Repeat the input 5}
Relationship: {The logical relationship between concepts in input 5}
Criteria: {A sentence of consolidated criteria for code 5}
Label: {A consolidated label of code 5}
Category: {2-4 words for code 5}
---
~~~
1. community influence, community-driven design.
- The community's role in the software's evolution and their influence on the design process.
- The degree to which the Physics Lab community is involved in the design and development of the software, including their role in shaping the development of physics experiments and demonstrations within the software.

2. responsiveness, designer responsiveness.
- Discussions that demonstrate the responsiveness of the designers or developers to user feedback and needs.
- The extent to which the designer actively solicits, considers, and responds to feedback and suggestions from the user community.

3. designer's role, feedback integration.
- The designer's involvement in responding to user feedback and improving the software.
- The designer's efforts to incorporate user feedback and improve the educational value of the software.

4. software download, software version release.
- Statements about downloading the Physics Lab software.
- Statements about the release of a new version of the Physics Lab software.

5. design updates, development process.
- Discussions related to updates, changes, or improvements made to the Physics Lab software.
- Discussions that provide insights into the development process of the Physics Lab software.
===
---
Categories:
* Community Involvement
* Designer Responsiveness
* Feedback Integration
* Software Lifecycle
* Development Process

Definitions for each code (5 in total):

1. Community Influence
Relationship: The community's role in the software's evolution and their influence on the design process is a broader concept that includes both community-driven design and the community's influence on the software.
Criteria: Discussions that demonstrate the community's involvement in shaping the development and design of the Physics Lab software, including their role in suggesting features, experiments, and other improvements.
Label: Community Influence
Category: Community Involvement

2. Designer Responsiveness
Relationship: Responsiveness and designer responsiveness are parallel concepts that both capture the extent to which the designers or developers actively solicit, consider, and respond to user feedback.
Criteria: Discussions that demonstrate the designers' or developers' responsiveness to user feedback and needs, including how they actively engage with the community and incorporate their suggestions.
Label: Designer Responsiveness
Category: Designer Responsiveness

3. Feedback Integration
Relationship: The designer's role and feedback integration are related, as the designer's involvement in responding to user feedback and improving the software is a key aspect of integrating user feedback.
Criteria: Discussions that highlight the designer's efforts to incorporate user feedback and improve the educational value and functionality of the Physics Lab software.
Label: Feedback Integration
Category: Feedback Integration

4. Software Lifecycle
Relationship: Software download and software version release are parallel concepts that both capture the lifecycle of the Physics Lab software, including its distribution and updates.
Criteria: Statements about downloading the Physics Lab software, as well as discussions about the release of new versions of the software.
Label: Software Lifecycle
Category: Software Lifecycle

5. Development Process
Relationship: Design updates and the development process are related, as discussions about updates, changes, or improvements to the software provide insights into the overall development process.
Criteria: Discussions related to updates, changes, or improvements made to the Physics Lab software, as well as insights into the development process of the software.
Label: Development Process
Category: Development Process
---