You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: emphasizing code simplicity, advocating for clear code writing
- Users emphasize the importance of maintaining easy-to-understand code for future reference and modification.
- Users value clarity in coding, emphasizing the importance of writing code that is easy to understand and maintain.

2.
Concepts: preferring simple code, valuing code simplicity
- Users prefer plain, accessible code for maintenance purposes.
- Users value simplicity and readability of code for maintenance purposes.

3.
Concepts: demonstrating diverse language knowledge, expressing familiarity with multiple programming languages
- The participant shares their diverse language knowledge and programming experiences.
- The participant has experience with multiple software languages and programming.

4.
Concepts: codes manually with ai guidance, writes code manually with ai guidance
- The interviewee uses AI-generated code as a reference while writing their own code manually.
- The interviewee manually writes code using the steps provided by the AI, rather than copying and pasting the code.

5.
Concepts: learns from ai-generated code, uses ai code as reference
- The interviewee learns from AI-generated code.
- The interviewee uses AI-generated code as a reference for writing their own code.

6.
Concepts: prioritizes efficiency, utilizes ai-generated code fully
- Interviewee prioritizes efficiency in using AI-generated code.
- The interviewee integrates AI-generated code fully, using it to save time and effort.

7.
Concepts: seeks ai-assisted code optimization, using ai for code optimization
- The participant sees the potential for AI to help optimize code.
- The participant uses the AI system to optimize their code, seeking suggestions for improvement.

8.
Concepts: value ai feedback, values ai's code improvement suggestions
- Participants value AI feedback for optimizing code.
- The participant values AI's suggestions for code improvement and optimization.

9.
Concepts: appreciates runnable ai code, appreciates executable code
- The participant finds AI-generated code runnable.
- Participant appreciates the ability to run executable code.

10.
Concepts: notes ai's adherence to best practices, values ai's adherence to best practices
- The participant notes AI's adherence to best practices in code generation.
- The participant values AI's adherence to best practices in code generation.

11.
Concepts: praises ai code readability, values ai's documentation skills
- The interviewee praises AI's code readability, including comments and documentation.
- The interviewee values AI's documentation skills, appreciating the clarity and readability of generated code.

12.
Concepts: customizes ai-generated code, selectively copies ai code
- The participant customizes AI-generated code by selectively copying parts of it into their model.
- The participant selectively copies code from AI output, using it as a reference or guide for their own coding.

13.
Concepts: comments on code output, thinks about ai understanding
- The participant comments on the code output, summarizing the code, and thinks about how the AI was understanding the request.
- The participant thinks about how the AI understands the request and reflects on the AI's understanding of code.

14.
Concepts: engages with ai output, evaluates ai-generated code, summarizes ai-generated code
- The participant reads code and comments to understand the AI's response.
- The participant evaluates AI-generated code, reading and understanding its logic.
- The participant summarizes AI-generated code to understand its logic and functionality.

15.
Concepts: evaluates ai responses, code evaluation and comparison
- The participant evaluates AI responses and code generation capabilities.
- The participant compares the AI-generated code with the initial code or evaluates the AI's output.

16.
Concepts: realizes need for reset, realizing the need for a reset
- The participant realizes the need for resetting their setup based on AI-generated code.
- Interviewee realizes the need for a reset based on AI-generated code, demonstrating understanding of the code's limitations.

17.
Concepts: utilizes ai for rapid code analysis, comparing ai to human code review
- The participant uses AI for quick code analysis and feedback.
- The participant compares AI code review to human code review, highlighting the speed and efficiency of AI feedback.

18.
Concepts: manually correcting errors, identifies errors in ai code, error correction in ai-generated code
- Participants manually correct AI-generated code errors.
- The participant identifies errors in AI-generated code and describes the correction process.
- The participant identifies and corrects errors in the AI-generated NetLogo code.

19.
Concepts: requests code verification, seeking ai verification for error resolution
- The participant requests AI to verify code and eliminate bugs.
- The participant seeks AI verification to resolve coding errors.

20.
Concepts: seeks code clarification, seeks syntax information
- The participant asks for clarification on AI-generated code.
- The participant seeks specific syntax information from AI-generated code.

21.
Concepts: notes ai's efficiency, benefit of ai - instant feedback
- The participant notes AI's efficiency in providing timely feedback.
- The participant highlights the benefit of instant feedback from AI.

22.
Concepts: appreciating ai promptness, valuing timely feedback
- Users appreciate AI's promptness and immediate feedback.
- Users appreciate timely and immediate feedback from AI-driven interfaces.

23.
Concepts: leverages ai for model translation, assists with model translation using ai
- The participant leverages AI for model development, translating models from other languages.
- The participant uses AI-driven interfaces for model translation and conversion.

24.
Concepts: relies on ai for model translation in netlogo, appreciates ai's language translation capability
- The participant uses AI to support their work in NetLogo, translating models from other languages.
- The participant finds AI helpful for translating models from other languages into NetLogo.

25.
Concepts: inferring user needs, ai inferring user needs
- Users appreciate AI's ability to infer user needs from input context.
- Notes that AI can infer user needs from context, without explicit instructions.

26.
Concepts: describing ai as intuitive, finding interface intuitive
- Users find AI-driven interfaces easy to use and intuitive.
- Users find AI-driven interfaces straightforward and intuitive.

27.
Concepts: finds ai helpful, finds ai assistance convenient
- Participant finds AI helpful.
- The participant finds it helpful to have an accessible and instantaneous form of assistance for simple questions.

28.
Concepts: commending clear explanations, appreciating clear explanations
- Users receive clear and non-technical explanations from AI-driven interfaces.
- Users appreciate clear and non-technical explanations from AI-driven interfaces.

29.
Concepts: appreciation for clear ai responses, appreciating ai's clear explanations
- Appreciating clear and comprehensible AI responses.
- Participants appreciate AI's clear explanations and value error code clarification.

30.
Concepts: appreciating parameter clarification, appreciating ai's task understanding
- Users appreciate AI's ability to clarify parameters and provide guidance.
- Appreciates AI's ability to understand tasks and provide guidance on parameters.

31.
Concepts: praising ai capabilities, appreciating context understanding
- Users appreciate AI's capabilities and inference abilities.
- Users appreciate AI's context inference and understanding capabilities.

32.
Concepts: suggests ai could save time, highlights ai's time-saving potential
- The participant suggests AI could save time.
- The participant highlights the potential of AI to save time and increase efficiency.
===
Here are the definitions for each code:

---
1.
Concepts: emphasizing code simplicity, advocating for clear code writing
Relationship: The concepts are related in that they both prioritize code readability and maintainability.
Criteria: Users emphasize the importance of writing clear and simple code for future reference and modification.
Phrase: Emphasizing code simplicity and clarity.

2.
Concepts: preferring simple code, valuing code simplicity
Relationship: The concepts are related in that they both value simplicity in code for maintenance purposes.
Criteria: Users prefer and value simple and readable code for easy maintenance.
Phrase: Preferring simple code for maintenance.

3.
Concepts: demonstrating diverse language knowledge, expressing familiarity with multiple programming languages
Relationship: The concepts are related in that they both highlight the participant's experience with multiple programming languages.
Criteria: Participants share their diverse language knowledge and programming experiences.
Phrase: Demonstrating language knowledge and experience.

4.
Concepts: codes manually with ai guidance, writes code manually with ai guidance
Relationship: The concepts are related in that they both involve using AI-generated code as a reference for manual coding.
Criteria: Users manually write code using AI-generated code as a reference.
Phrase: Coding manually with AI guidance.

5.
Concepts: learns from ai-generated code, uses ai code as reference
Relationship: The concepts are related in that they both involve using AI-generated code as a learning tool.
Criteria: Users learn from and use AI-generated code as a reference for writing their own code.
Phrase: Learning from AI-generated code.

6.
Concepts: prioritizes efficiency, utilizes ai-generated code fully
Relationship: The concepts are related in that they both prioritize efficiency in using AI-generated code.
Criteria: Users prioritize efficiency and integrate AI-generated code fully to save time and effort.
Phrase: Prioritizing efficiency with AI-generated code.

7.
Concepts: seeks ai-assisted code optimization, using ai for code optimization
Relationship: The concepts are related in that they both involve using AI to optimize code.
Criteria: Participants seek AI assistance for code optimization and use AI to improve their code.
Phrase: Seeking AI-assisted code optimization.

8.
Concepts: value ai feedback, values ai's code improvement suggestions
Relationship: The concepts are related in that they both value AI's feedback and suggestions for code improvement.
Criteria: Participants value AI feedback and suggestions for optimizing their code.
Phrase: Valuing AI feedback and suggestions.

9.
Concepts: appreciates runnable ai code, appreciates executable code
Relationship: The concepts are related in that they both appreciate the ability to run executable code.
Criteria: Participants appreciate AI-generated code that is runnable and executable.
Phrase: Appreciating runnable AI code.

10.
Concepts: notes ai's adherence to best practices, values ai's adherence to best practices
Relationship: The concepts are related in that they both value AI's adherence to best practices in code generation.
Criteria: Participants note and value AI's adherence to best practices in code generation.
Phrase: Valuing AI's adherence to best practices.

11.
Concepts: praises ai code readability, values ai's documentation skills
Relationship: The concepts are related in that they both value AI's code readability and documentation skills.
Criteria: Participants praise AI's code readability and value AI's documentation skills.
Phrase: Praising AI code readability and documentation.

12.
Concepts: customizes ai-generated code, selectively copies ai code
Relationship: The concepts are related in that they both involve customizing AI-generated code.
Criteria: Participants customize AI-generated code by selectively copying parts of it into their model.
Phrase: Customizing AI-generated code.

13.
Concepts: comments on code output, thinks about ai understanding
Relationship: The concepts are related in that they both involve reflecting on AI's understanding of code.
Criteria: Participants comment on code output and think about how the AI understands the request.
Phrase: Commenting on code output and AI understanding.

14.
Concepts: engages with ai output, evaluates ai-generated code, summarizes ai-generated code
Relationship: The concepts are related in that they all involve engaging with and evaluating AI-generated code.
Criteria: Participants engage with AI output, evaluate AI-generated code, and summarize its logic and functionality.
Phrase: Engaging with AI output and evaluating code.

15.
Concepts: evaluates ai responses, code evaluation and comparison
Relationship: The concepts are related in that they both involve evaluating AI responses and code generation capabilities.
Criteria: Participants evaluate AI responses and compare AI-generated code with the initial code.
Phrase: Evaluating AI responses and code.

16.
Concepts: realizes need for reset, realizing the need for a reset
Relationship: The concepts are related in that they both involve realizing the need for resetting based on AI-generated code.
Criteria: Participants realize the need for resetting their setup based on AI-generated code.
Phrase: Realizing the need for a reset.

17.
Concepts: utilizes ai for rapid code analysis, comparing ai to human code review
Relationship: The concepts are related in that they both involve using AI for code analysis and comparison.
Criteria: Participants use AI for quick code analysis and compare AI code review to human code review.
Phrase: Utilizing AI for rapid code analysis.

18.
Concepts: manually correcting errors, identifies errors in ai code, error correction in ai-generated code
Relationship: The concepts are related in that they all involve correcting errors in AI-generated code.
Criteria: Participants manually correct AI-generated code errors and identify errors in AI-generated code.
Phrase: Correcting errors in AI-generated code.

19.
Concepts: requests code verification, seeking ai verification for error resolution
Relationship: The concepts are related in that they both involve seeking AI verification for error resolution.
Criteria: Participants request AI to verify code and eliminate bugs.
Phrase: Requesting code verification.

20.
Concepts: seeks code clarification, seeks syntax information
Relationship: The concepts are related in that they both involve seeking clarification on AI-generated code.
Criteria: Participants ask for clarification on AI-generated code and seek specific syntax information.
Phrase: Seeking code clarification.

21.
Concepts: notes ai's efficiency, benefit of ai - instant feedback
Relationship: The concepts are related in that they both highlight AI's efficiency in providing timely feedback.
Criteria: Participants note AI's efficiency in providing instant feedback.
Phrase: Noting AI's efficiency.

22.
Concepts: appreciating ai promptness, valuing timely feedback
Relationship: The concepts are related in that they both appreciate AI's promptness and timely feedback.
Criteria: Users appreciate AI's promptness and value timely feedback from AI-driven interfaces.
Phrase: Appreciating AI promptness.

23.
Concepts: leverages ai for model translation, assists with model translation using ai
Relationship: The concepts are related in that they both involve using AI for model translation.
Criteria: Participants leverage AI for model development, translating models from other languages.
Phrase: Leveraging AI for model translation.

24.
Concepts: relies on ai for model translation in netlogo, appreciates ai's language translation capability
Relationship: The concepts are related in that they both involve using AI for model translation in NetLogo.
Criteria: Participants use AI to support their work in NetLogo, translating models from other languages.
Phrase: Relying on AI for model translation.

25.
Concepts: inferring user needs, ai inferring user needs
Relationship: The concepts are related in that they both involve AI inferring user needs from input context.
Criteria: Users appreciate AI's ability to infer user needs from context, without explicit instructions.
Phrase: Inferring user needs.

26.
Concepts: describing ai as intuitive, finding interface intuitive
Relationship: The concepts are related in that they both describe AI-driven interfaces as intuitive.
Criteria: Users find AI-driven interfaces easy to use and intuitive.
Phrase: Describing AI as intuitive.

27.
Concepts: finds ai helpful, finds ai assistance convenient
Relationship: The concepts are related in that they both describe AI as helpful and convenient.
Criteria: Participants find AI helpful and convenient for simple questions.
Phrase: Finding AI helpful.

28.
Concepts: commending clear explanations, appreciating clear explanations
Relationship: The concepts are related in that they both appreciate clear and non-technical explanations from AI-driven interfaces.
Criteria: Users receive and appreciate clear and non-technical explanations from AI-driven interfaces.
Phrase: Commending clear explanations.

29.
Concepts: appreciation for clear ai responses, appreciating ai's clear explanations
Relationship: The concepts are related in that they both appreciate clear and comprehensible AI responses.
Criteria: Users appreciate clear and comprehensible AI responses and value error code clarification.
Phrase: Appreciating clear AI responses.

30.
Concepts: appreciating parameter clarification, appreciating ai's task understanding
Relationship: The concepts are related in that they both appreciate AI's ability to clarify parameters and understand tasks.
Criteria: Users appreciate AI's ability to clarify parameters and provide guidance on tasks.
Phrase: Appreciating parameter clarification.

31.
Concepts: praising ai capabilities, appreciating context understanding
Relationship: The concepts are related in that they both appreciate AI's capabilities and inference abilities.
Criteria: Users appreciate AI's capabilities and inference abilities, including context understanding.
Phrase: Praising AI capabilities.

32.
Concepts: suggests ai could save time, highlights ai's time-saving potential
Relationship: The concepts are related in that they both highlight AI's potential to save time and increase efficiency.
Criteria: Participants suggest AI could save time and highlight AI's time-saving potential.
Phrase: Suggesting AI could save time.