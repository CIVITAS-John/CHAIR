You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (11 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
11. 
Concepts: {Repeat the input 11}
Relationship: {What is logical relationship between concepts in code 11, or N/A if not applicable}
Criteria: {Who did what, and how for code 11}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: creating a feedback loop, integrating user feedback
- Processes where user feedback is solicited and incorporated into design decisions.
- Instances where user feedback is acknowledged and incorporated into the design process.

2.
Concepts: suggesting new features, accepting user suggestions
- Designers invite and users suggest new features or improvements.
- Designers acknowledge and accept user suggestions for future updates.

3.
Concepts: soliciting user feedback, eliciting community feedback
- Designers encourage and solicit feedback from users.
- Designers request and seek input and feedback from the community.

4.
Concepts: announcing community updates, making community announcements
- Designers provide updates and announcements to the community.
- Designers make general announcements to the community.

5.
Concepts: explaining the plans, explaining design rationale
- A designer explains the rationale behind certain plans or features.
- Designers explain the rationale behind design choices.

6.
Concepts: providing version details, detailing new features and fixes
- Designers provide detailed notes and information about version updates.
- Designers list and detail new features and bug fixes in updates.

7.
Concepts: inquiring about software usage, show interest in using software
- Users inquire about how to use or access the software.
- A user shows interest in using the software and asks for instructions.

8.
Concepts: requesting new features, explaining feature requests
- Users request and express the need for new or additional features.
- Users suggest features and provide reasons for their requests.

9.
Concepts: providing feedback, community feedback
- Users provide feedback and suggestions for improvements.
- Users providing feedback and suggestions to improve the product.

10.
Concepts: appreciating software features, complimenting software usability
- Users express satisfaction and appreciation for the software and its features.
- Users compliment and comment on the usability and effectiveness of the software.

11.
Concepts: sharing classroom experiences, highlighting student engagement
- Users share their experiences and positive impacts of the software in a classroom setting.
- Users share and highlight positive student engagement and reactions to the software.
===
---
Definitions for each code (11 in total):
1.
Concepts: creating a feedback loop, integrating user feedback
Relationship: Both concepts involve the process of incorporating user feedback into design decisions.
Criteria: Designers solicit and incorporate user feedback into design decisions.
Phrase: Integrating user feedback

2.
Concepts: suggesting new features, accepting user suggestions
Relationship: Both concepts involve the interaction between users suggesting features and designers accepting them.
Criteria: Designers invite and accept user suggestions for new features or improvements.
Phrase: Accepting user suggestions

3.
Concepts: soliciting user feedback, eliciting community feedback
Relationship: Both concepts involve actively seeking feedback from users and the community.
Criteria: Designers encourage and solicit feedback from users and the community.
Phrase: Eliciting community feedback

4.
Concepts: announcing community updates, making community announcements
Relationship: Both concepts involve providing updates and announcements to the community.
Criteria: Designers provide updates and make general announcements to the community.
Phrase: Making community announcements

5.
Concepts: explaining the plans, explaining design rationale
Relationship: Both concepts involve designers explaining the reasoning behind plans or design choices.
Criteria: Designers explain the rationale behind certain plans or design choices.
Phrase: Explaining design rationale

6.
Concepts: providing version details, detailing new features and fixes
Relationship: Both concepts involve providing detailed information about version updates, including new features and fixes.
Criteria: Designers provide detailed notes and information about version updates, including new features and fixes.
Phrase: Detailing new features and fixes

7.
Concepts: inquiring about software usage, show interest in using software
Relationship: Both concepts involve users showing interest and inquiring about how to use the software.
Criteria: Users inquire about how to use the software and show interest in using it.
Phrase: Inquiring about software usage

8.
Concepts: requesting new features, explaining feature requests
Relationship: Both concepts involve users requesting new features and explaining the reasons for their requests.
Criteria: Users request new features and provide reasons for their requests.
Phrase: Explaining feature requests

9.
Concepts: providing feedback, community feedback
Relationship: Both concepts involve users providing feedback and suggestions for improvements.
Criteria: Users provide feedback and suggestions to improve the product.
Phrase: Providing community feedback

10.
Concepts: appreciating software features, complimenting software usability
Relationship: Both concepts involve users expressing satisfaction and appreciation for the software's features and usability.
Criteria: Users express satisfaction and compliment the software's features and usability.
Phrase: Complimenting software usability

11.
Concepts: sharing classroom experiences, highlighting student engagement
Relationship: Both concepts involve users sharing positive experiences and student engagement in a classroom setting.
Criteria: Users share their classroom experiences and highlight positive student engagement with the software.
Phrase: Highlighting student engagement
---