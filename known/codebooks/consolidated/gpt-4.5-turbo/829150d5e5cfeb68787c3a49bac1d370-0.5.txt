You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. If a sub-code includes another, use the broader one. If sub-codes are parallel, write one that covers both.
Write clear and generalizable labels and criteria for each code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization (e.g. "social interaction" instead of "interaction", "communication approach" instead of "communication").
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (5 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {Consolidated criteria of code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
5.
Relationship: {The logical relationship between sub-codes in code 5}
Criteria: {Consolidated criteria of code 5}
Label: {A consolidated label of code 5}
Category: {2-4 words for code 5}
---
~~~
1. request for suggestions, feedback solicitation.
- Designers asking for input or suggestions to enhance the software.
- Instances where designers ask for input or feedback from the users to improve the software.

2. participatory feedback, user feedback and response, feedback and suggestions.
- Direct responses or suggestions from users that might be used by designers to improve the software.
- Instances where users provide feedback, suggestions, or comments that directly influence software design, updates, or modifications, including the designers' reactions and adjustments to such feedback.
- Instances where community members contribute ideas or feedback that influence the design or functionality of the tool.

3. user requests and needs, feature requests and feedback.
- Specific requests or needs expressed by users that could influence future updates and features.
- Instances where users explicitly request new features or improvements to existing features, including suggestions for specific additions or modifications, and discussions about these features.

4. update announcement, updates and improvements, update and development communication, feature updates and announcements.
- Communication from the designers announcing upcoming changes or updates to the software.
- Information shared by designers about new versions, updates, or features of the software.
- Information shared by designers about updates or potential improvements to the software.
- Information shared by the designer about upcoming updates or current improvements in response to user feedback.
- Information shared by the designer about upcoming updates, version releases, and development progress.
- Descriptions of new features, updates, or plans shared by the designer that indicate the evolving nature of the software.

5. compatibility issues, system compatibility.
- Discussions or mentions of technical constraints or compatibility issues with the software.
- Discussions related to the softwareâ€™s performance on various hardware or operating systems.
- Discussions related to the compatibility of the software with different operating systems or hardware.
===
---
Categories: 
* Community Engagement
* Design Evolution
* User-Centered Design
* Technical Constraints

Definitions for each code (5 in total):
1.
Relationship: Parallel
Criteria: Instances where designers actively seek input, suggestions, or feedback from users to enhance the software.
Label: Designer Feedback Solicitation
Category: Community Engagement

2.
Relationship: Inclusive
Criteria: Instances encompassing direct user contributions, including feedback, suggestions, or comments that influence software design, updates, or modifications, as well as designers' reactions to such feedback.
Label: User-Driven Design Feedback
Category: User-Centered Design

3.
Relationship: Inclusive
Criteria: Specific user expressions regarding needs or requests for new features or improvements, including discussions and suggestions about desired additions or modifications.
Label: User Feature Requests
Category: User-Centered Design

4.
Relationship: Inclusive
Criteria: Communications from designers about new features, updates, or improvements, including announcements of upcoming changes and responses to user feedback, which reflect the ongoing development of the software.
Label: Update and Feature Announcements
Category: Design Evolution

5.
Relationship: Parallel
Criteria: Discussions about the software's technical limitations or compatibility with various hardware or operating systems, including performance issues.
Label: Compatibility and Technical Issues
Category: Technical Constraints
---