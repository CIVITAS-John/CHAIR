You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: implement feedback loop, appreciating and integrating user feedback
- Designers collect, consider, and implement user feedback.
- Designers appreciate and integrate user feedback into the design process.

2.
Concepts: resolving user concerns and inquiries, responding to user concerns and usability issues
- Designers resolve user concerns and respond to inquiries.
- Designers respond to and alleviate user concerns and address usability issues.

3.
Concepts: responding to community queries, responding to inquiries and design questions
- Users ask questions and receive answers from designers or other community members.
- Designers respond to inquiries and answer design questions.

4.
Concepts: offering solutions, proposing design ideas
- Designers offer and propose potential solutions to user problems.
- Designers propose new design ideas or features for the software.

5.
Concepts: agreeing with suggestions, accepting improvement suggestions
- Users or developers agree with suggestions or affirm points made by others.
- Users suggest improvements and developers accept and plan to implement them.

6.
Concepts: user satisfaction, complimenting feature development
- Users express satisfaction with the platform's features and usability.
- Users respond positively and compliment the evolution of the app.

7.
Concepts: engaging with the community, encouraging community interaction
- A designer engages with the community or expresses personal interest.
- Designers engage with the community and encourage discussion.

8.
Concepts: agreement, confirming understanding and agreement
- Users or developers express agreement with each other.
- Users or designers confirm understanding and agreement.

9.
Concepts: elaborating on questions, elaborating and encouraging more details
- A user provides additional context or details related to an ongoing conversation.
- Designers elaborate on responses and encourage users to provide more details.

10.
Concepts: discussing ease of use, highlighting practicality
- Users discuss the ease of use and practicality of the software.
- Users emphasize practical use cases and highlight the software's practicality.

11.
Concepts: explaining version details, detailing new features and updates
- Participants explain and provide details about different software versions.
- Participants explain new features and detail specific updates.

12.
Concepts: introducing teacher identity, sharing teaching and professional experiences
- A user introduces their teaching experience and identifies themselves as a teacher.
- Users share their teaching experiences and professional backgrounds.
===
---
Definitions for each code (12 in total):
1.
Concepts: implement feedback loop, appreciating and integrating user feedback
Relationship: Designers collect, consider, and implement user feedback.
Criteria: Designers appreciate and integrate user feedback into the design process.
Phrase: Implementing user feedback

2.
Concepts: resolving user concerns and inquiries, responding to user concerns and usability issues
Relationship: Designers resolve user concerns and respond to inquiries.
Criteria: Designers respond to and alleviate user concerns and address usability issues.
Phrase: Addressing user concerns

3.
Concepts: responding to community queries, responding to inquiries and design questions
Relationship: Users ask questions and receive answers from designers or other community members.
Criteria: Designers respond to inquiries and answer design questions.
Phrase: Answering community questions

4.
Concepts: offering solutions, proposing design ideas
Relationship: Designers offer and propose potential solutions to user problems.
Criteria: Designers propose new design ideas or features for the software.
Phrase: Proposing design solutions

5.
Concepts: agreeing with suggestions, accepting improvement suggestions
Relationship: Users or developers agree with suggestions or affirm points made by others.
Criteria: Users suggest improvements and developers accept and plan to implement them.
Phrase: Accepting improvement suggestions

6.
Concepts: user satisfaction, complimenting feature development
Relationship: Users express satisfaction with the platform's features and usability.
Criteria: Users respond positively and compliment the evolution of the app.
Phrase: Expressing user satisfaction

7.
Concepts: engaging with the community, encouraging community interaction
Relationship: A designer engages with the community or expresses personal interest.
Criteria: Designers engage with the community and encourage discussion.
Phrase: Encouraging community engagement

8.
Concepts: agreement, confirming understanding and agreement
Relationship: Users or developers express agreement with each other.
Criteria: Users or designers confirm understanding and agreement.
Phrase: Confirming agreement

9.
Concepts: elaborating on questions, elaborating and encouraging more details
Relationship: A user provides additional context or details related to an ongoing conversation.
Criteria: Designers elaborate on responses and encourage users to provide more details.
Phrase: Elaborating on discussions

10.
Concepts: discussing ease of use, highlighting practicality
Relationship: Users discuss the ease of use and practicality of the software.
Criteria: Users emphasize practical use cases and highlight the software's practicality.
Phrase: Highlighting software practicality

11.
Concepts: explaining version details, detailing new features and updates
Relationship: Participants explain and provide details about different software versions.
Criteria: Participants explain new features and detail specific updates.
Phrase: Detailing software updates

12.
Concepts: introducing teacher identity, sharing teaching and professional experiences
Relationship: A user introduces their teaching experience and identifies themselves as a teacher.
Criteria: Users share their teaching experiences and professional backgrounds.
Phrase: Sharing professional experiences
---