You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (20 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
20. 
Concepts: {Repeat the input 20}
Relationship: {What is logical relationship between concepts in code 20, or N/A if not applicable}
Criteria: {Who did what, and how for code 20}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: contextualization of question, contextualizing responses
- Providing context or background information for a question or request.
- Contextualizing response involves providing background information or context to support a response or statement.

2.
Concepts: clarification, clarification request, clarification question
- The speaker seeks or provides clarification on a topic.
- A question or request seeking clarification on a specific point or issue.
- A participant asks for clarification or seeks additional information about a topic or issue.

3.
Concepts: elaboration of response, adding more specific information and criteria to the answer
- A designer or user provides additional information or clarification to a previous response.
- A designer provides additional information or clarifies a previous response.

4.
Concepts: feature guidance, user guidance
- Guidance or instructions on how to use a feature or tool.
- Providing guidance, instructions, or tutorials on how to use a feature or software.

5.
Concepts: give examples of feature, give an example of the feature's functions
- The developer provides examples or illustrations of a feature or functionality.
- A designer provides an example of how a feature works or can be used.

6.
Concepts: design principles, explain design philosophy
- A statement or explanation of the underlying principles or philosophy guiding a design or tool.
- The underlying principles and approaches guiding the design and development of the product.

7.
Concepts: provide rationale, explain reasons for the request, reason for suggestion
- Users provide rationales or explanations for their requests or suggestions.
- A user explains the reasons behind their request or suggestion.
- A user provides a reason or justification for a suggestion.

8.
Concepts: explaining the need, rationale for feature request
- Explaining the need or rationale behind a feature or functionality.
- Explaining the reasoning behind a feature request.

9.
Concepts: user feedback integration
- Instances where user feedback is acknowledged and incorporated into the design process.
- Instances where user feedback is actively sought and incorporated into the design process.

10.
Concepts: iterative development
- Instances where designers discuss updates, new features, or bug fixes.
- The process of repeatedly refining and improving a product based on feedback and testing.
- The process of continuously improving the product based on feedback and testing.
- Instances where the design process is described as iterative, with ongoing optimizations and updates.

11.
Concepts: designer responsiveness
- Instances where designers respond to user queries or engage with user comments, indicating active communication between designers and users.
- Instances where designers respond to user inquiries, suggestions, or feedback.
- Instances where designers respond to user feedback or suggestions.
- Instances where designers acknowledge user feedback and discuss potential solutions or updates.
- Designers responding to user feedback and addressing their concerns or suggestions.
- Instances where designers respond to user queries or feedback, showing attentiveness to user needs.

12.
Concepts: encourage participatory design
- Instances where the community contributes to the design and development of the Physics Lab by providing suggestions or feedback that influence the development process.
- Instances where designers seek or consider user input in the design and development process.
- Instances where users are invited to participate in the design process or provide input.
- Instances where users and designers collaboratively discuss features and usability, reflecting a user-centered design approach.
- The involvement of users in the design and development process, contributing their insights and needs.
- Encouragement by designers for users to contribute ideas, feedback, and suggestions for the development of Physics Lab.
- Active involvement of users in the design process to ensure the product meets their needs and preferences.
- The involvement of users in the design process to ensure the product meets their needs and preferences.
- Instances where users and designers collaboratively discuss or work on design improvements.

13.
Concepts: promote community engagement
- Instances where members of the community actively participate in discussions, ask questions, or provide feedback.
- Instances where users or designers engage in discussions that foster community interaction and participation.
- Active participation and interaction among community members, including both users and designers.
- Efforts made by designers to actively involve and communicate with the user community.

14.
Concepts: user engagement
- Instances where users actively participate in the conversation, showing interest or involvement in the community.
- Instances where users engage with designers through questions, feedback, or expressions of anticipation.
- Instances where users actively participate in the conversation, showing interest and involvement.

15.
Concepts: resources sharing
- Instances where designers or users share resources, such as download links, development plans, or announcements.
- Information about where and how to access resources, files, or downloads related to Physics Lab.
- Instances where users or designers share files, images, or other resources with the community.
- Providing access to resources or information.

16.
Concepts: acknowledgment
- The speaker acknowledges or responds to someone else's contribution or idea.
- Acknowledging provided resources or support.

17.
Concepts: collaborative problem solving
- Moments where designers and users work together to address issues.
- Collaborative efforts between users and designers to solve issues and improve the product.
- Instances where users and designers work together to address issues or improve the software.

18.
Concepts: role identification
- Instances where users or designers identify their roles, which can help understand the community structure and the roles within it.
- Instances where participants identify their roles or expertise, contributing to the problem-solving process.
- Identifying roles within the community, such as designers, teachers, or other users.

19.
Concepts: informal communication
- Instances where the tone of the conversation is casual or informal, indicating the nature of the community's communication style.
- Casual and non-technical interactions among community members, including humor and personal remarks.

20.
Concepts: user response
- Input and suggestions provided by users regarding the design and functionality of the product.
- Instances where users provide feedback or ask questions that influence the design process.
- Instances where users provide feedback or suggestions to improve the software.
- Instances where users provide suggestions or feedback on features and functionalities.
- Instances where users provide feedback or ask questions about the app's development and updates.
===
Here are the definitions for each code:

---
1.
Concepts: contextualization of question, contextualizing responses
Relationship: Providing context is a prerequisite for contextualizing responses.
Criteria: Participants provide background information to support their questions or responses.
Phrase: Providing context for questions and responses.

2.
Concepts: clarification, clarification request, clarification question
Relationship: Clarification requests lead to clarification, which resolves uncertainty.
Criteria: Participants seek or provide clarification on specific points or issues.
Phrase: Seeking or providing clarification.

3.
Concepts: elaboration of response, adding more specific information and criteria to the answer
Relationship: Elaboration builds upon previous responses, adding more detail.
Criteria: Participants provide additional information to clarify or support their responses.
Phrase: Elaborating on previous responses.

4.
Concepts: feature guidance, user guidance
Relationship: Guidance is provided to facilitate the use of features or tools.
Criteria: Participants provide instructions or tutorials on how to use features or software.
Phrase: Providing guidance on feature use.

5.
Concepts: give examples of feature, give an example of the feature's functions
Relationship: Examples illustrate the functionality of a feature.
Criteria: Participants provide examples or illustrations of features or functionalities.
Phrase: Providing examples of feature functionality.

6.
Concepts: design principles, explain design philosophy
Relationship: Design principles guide the design and development process.
Criteria: Participants explain the underlying principles guiding the design and development of the product.
Phrase: Explaining design principles.

7.
Concepts: provide rationale, explain reasons for the request, reason for suggestion
Relationship: Rationales justify requests or suggestions.
Criteria: Participants provide explanations or justifications for their requests or suggestions.
Phrase: Providing rationales for requests or suggestions.

8.
Concepts: explaining the need, rationale for feature request
Relationship: Need and rationale are intertwined, explaining the basis for a feature request.
Criteria: Participants explain the need or rationale behind a feature or functionality request.
Phrase: Explaining the need for a feature.

9.
Concepts: user feedback integration
Relationship: User feedback is incorporated into the design process.
Criteria: Participants acknowledge and incorporate user feedback into the design process.
Phrase: Integrating user feedback into design.

10.
Concepts: iterative development
Relationship: Iterative development involves continuous refinement and improvement.
Criteria: Participants discuss updates, new features, or bug fixes, indicating ongoing refinement.
Phrase: Engaging in iterative development.

11.
Concepts: designer responsiveness
Relationship: Designers respond to user queries, engaging in active communication.
Criteria: Designers respond to user inquiries, suggestions, or feedback, demonstrating attentiveness.
Phrase: Responding to user feedback and concerns.

12.
Concepts: encourage participatory design
Relationship: Participatory design involves user input and collaboration.
Criteria: Designers seek or consider user input, encouraging collaborative design.
Phrase: Encouraging participatory design.

13.
Concepts: promote community engagement
Relationship: Community engagement is fostered through active participation and interaction.
Criteria: Participants engage in discussions, ask questions, or provide feedback, promoting community interaction.
Phrase: Promoting community engagement.

14.
Concepts: user engagement
Relationship: User engagement involves active participation and interest.
Criteria: Users actively participate in conversations, showing interest and involvement.
Phrase: Engaging in community conversations.

15.
Concepts: resources sharing
Relationship: Resources are shared to facilitate access and collaboration.
Criteria: Participants share resources, such as download links, development plans, or announcements.
Phrase: Sharing resources with the community.

16.
Concepts: acknowledgment
Relationship: Acknowledgment recognizes contributions or ideas.
Criteria: Participants acknowledge or respond to someone else's contribution or idea.
Phrase: Acknowledging contributions or ideas.

17.
Concepts: collaborative problem solving
Relationship: Collaboration leads to joint problem-solving efforts.
Criteria: Participants work together to address issues, demonstrating collaborative problem-solving.
Phrase: Collaborating to solve issues.

18.
Concepts: role identification
Relationship: Role identification clarifies responsibilities and expertise.
Criteria: Participants identify their roles, contributing to the problem-solving process.
Phrase: Identifying roles within the community.

19.
Concepts: informal communication
Relationship: Informal communication fosters a casual tone and relaxed interactions.
Criteria: Participants engage in casual, non-technical interactions, including humor and personal remarks.
Phrase: Engaging in informal communication.

20.
Concepts: user response
Relationship: User responses provide input and influence the design process.
Criteria: Users provide feedback, suggestions, or questions that influence the design process.
Phrase: Providing user responses and feedback.