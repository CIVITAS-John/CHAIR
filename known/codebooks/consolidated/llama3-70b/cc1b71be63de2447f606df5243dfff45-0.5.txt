You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (32 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
32. {Repeat the input 32}
Relationship: {The logical relationship between concepts in input 32}
Criteria: {A sentence of consolidated criteria for code 32}
Label: {A consolidated label of code 32}
Category: {2-4 words for code 32}
---
~~~
1. ios review, apple store review.
- Waiting for or discussing iOS reviews.
- Discussing or waiting for reviews or approvals.

2. platform specific updates, platform specific release.
- Updates specific to a particular platform.
- Releases, updates, or versions of the product on specific platforms.

3. compatibility planning, compatibility assurance.
- Planning or preparation for ensuring compatibility with different devices or systems.
- Ensuring, verifying, or clarifying compatibility with different systems or devices.

4. hardware limitations, software limitations.
- Limitations or constraints imposed by hardware.
- Limitations or constraints of software or technology.

5. system limitations, platform limitations.
- Discussion of limitations or constraints of a system.
- Discussing limitations or constraints of a platform or system.

6. layout limitations, interface design limitation.
- Discussing or acknowledging limitations or constraints in a design or process.
- Identifying limitations or constraints in interface design.

7. update confirmation, update acknowledgment.
- A message that confirms an update has been made.
- Acknowledgment or notification of an update or change.

8. user notification, update notification.
- Notifying users of updates or changes.
- Informing users about new updates or features.

9. update status communication, feature update communication.
- Communication of update status to users.
- Communicating updates or changes to the system.

10. new feature, software features, feature enhancement.
- Description of new features or functionality in the software.
- Describing new features, components, or enhancements in software.
- Describes new features or enhancements to the software.

11. feature expansion, component additions.
- Addition of new features to the software.
- Adding or introducing new components or elements to software.

12. software update, version update.
- Describing software updates or changes.
- Involving updates or changes to a software version.

13. update planning, future update.
- Plans or schedules updates or changes to a system.
- Planning or considering future updates or changes to a system.

14. update scale, update magnitude.
- Discussions or descriptions of the scope, size, or impact of updates.
- Description of the magnitude or scope of an update or change.

15. update preview, feature preview.
- Previews or announcements of upcoming features or updates.
- Preview or announcement of upcoming features or updates.

16. release schedule, release plan.
- Discussing or planning for releases or updates.
- Discussing or planning the release or deployment of a new feature or update.

17. update schedule, software update schedule, update timeline.
- Discussion of schedules or timelines for updates.
- Discussion of the schedule or timeline for software updates.
- Discussions or descriptions of timelines, schedules, or deadlines for updates or releases.

18. development timeline, feature development timeline.
- Mentions of timelines, schedules, or deadlines for updates or releases.
- Discusses the timeline for feature development.

19. roadmap, feature roadmap, roadmap sharing.
- Statements that outline future updates or releases.
- Roadmap or plan for future features or updates.

20. future development, future software development plans.
- Discussion of future plans or roadmap for the software.
- Discusses future plans for software development.

21. development plan, development roadmap.
- Discussion of plans or timelines for development.
- Discussion of development plans or roadmaps.

22. ongoing work, work in progress.
- Mention of ongoing work or development.
- Indications of ongoing work, development, or progress on the project.

23. progress update, software development progress.
- Provides updates on the progress of software development.
- Discusses the progress of software development.

24. content planning, content prioritization, content development.
- Planning or prioritizing content development.
- Prioritizing content development.
- Relates to the development of content, prioritizing specific topics or sections.

25. prioritization, feature prioritization.
- Statements that prioritize tasks or features.
- Prioritization, ranking, or ordering of features or tasks.

26. user expectations, user anticipation.
- Users' expectations or assumptions about updates or features.
- Users' expectation or anticipation of a new update or feature.

27. design decision making process, design decision making based on user feedback.
- The process of making design decisions, including weighing options and considering feedback.
- Making design decisions based on user feedback or input.

28. feature refinement, feature optimization.
- Discussion of refining or improving existing features or functionality.
- Refining or improving a feature to make it more efficient or effective.

29. iterative design, incremental refinement.
- Discussion of iterative design or refinement.
- Discussion of iterative refinement or incremental improvement.

30. iterative improvement, ongoing software development.
- Continuous improvement and refinement of the software.
- The ongoing process of developing or refining software.

31. feature stability, software stability.
- Ensuring the stability or reliability of a feature or update.
- Ensuring the long-term stability or reliability of software.

32. ui design, user interface.
- The design of a user interface or user experience.
- Relates to the design or layout of a user interface.
===
Here is the output in the required format:

---
Categories:
* Platform and System
* Update and Release
* Design and Development
* Communication and Feedback
* Planning and Roadmap

Definitions for each code:

1. ios review, apple store review.
Relationship: Parallel concepts
Criteria: Discussing or waiting for reviews or approvals.
Label: Review and Approval
Category: Update and Release

2. platform specific updates, platform specific release.
Relationship: Inclusion
Criteria: Updates or releases specific to a particular platform.
Label: Platform-Specific Updates
Category: Platform and System

3. compatibility planning, compatibility assurance.
Relationship: Parallel concepts
Criteria: Planning or ensuring compatibility with different devices or systems.
Label: Compatibility Planning
Category: Platform and System

4. hardware limitations, software limitations.
Relationship: Parallel concepts
Criteria: Limitations or constraints imposed by hardware or software.
Label: System Limitations
Category: Platform and System

5. system limitations, platform limitations.
Relationship: Inclusion
Criteria: Discussion of limitations or constraints of a system.
Label: System Limitations
Category: Platform and System

6. layout limitations, interface design limitation.
Relationship: Parallel concepts
Criteria: Discussing or acknowledging limitations or constraints in a design or process.
Label: Design Limitations
Category: Design and Development

7. update confirmation, update acknowledgment.
Relationship: Parallel concepts
Criteria: A message that confirms an update has been made.
Label: Update Confirmation
Category: Update and Release

8. user notification, update notification.
Relationship: Parallel concepts
Criteria: Notifying users of updates or changes.
Label: User Notification
Category: Communication and Feedback

9. update status communication, feature update communication.
Relationship: Parallel concepts
Criteria: Communication of update status to users.
Label: Update Communication
Category: Communication and Feedback

10. new feature, software features, feature enhancement.
Relationship: Inclusion
Criteria: Description of new features or functionality in the software.
Label: New Features
Category: Design and Development

11. feature expansion, component additions.
Relationship: Parallel concepts
Criteria: Addition of new features to the software.
Label: Feature Expansion
Category: Design and Development

12. software update, version update.
Relationship: Parallel concepts
Criteria: Describing software updates or changes.
Label: Software Updates
Category: Update and Release

13. update planning, future update.
Relationship: Parallel concepts
Criteria: Plans or schedules updates or changes to a system.
Label: Update Planning
Category: Planning and Roadmap

14. update scale, update magnitude.
Relationship: Parallel concepts
Criteria: Discussions or descriptions of the scope, size, or impact of updates.
Label: Update Scale
Category: Update and Release

15. update preview, feature preview.
Relationship: Parallel concepts
Criteria: Previews or announcements of upcoming features or updates.
Label: Update Preview
Category: Update and Release

16. release schedule, release plan.
Relationship: Parallel concepts
Criteria: Discussing or planning for releases or updates.
Label: Release Schedule
Category: Planning and Roadmap

17. update schedule, software update schedule, update timeline.
Relationship: Inclusion
Criteria: Discussion of schedules or timelines for updates.
Label: Update Schedule
Category: Planning and Roadmap

18. development timeline, feature development timeline.
Relationship: Parallel concepts
Criteria: Mentions of timelines, schedules, or deadlines for updates or releases.
Label: Development Timeline
Category: Planning and Roadmap

19. roadmap, feature roadmap, roadmap sharing.
Relationship: Inclusion
Criteria: Statements that outline future updates or releases.
Label: Roadmap
Category: Planning and Roadmap

20. future development, future software development plans.
Relationship: Parallel concepts
Criteria: Discussion of future plans or roadmap for the software.
Label: Future Development
Category: Planning and Roadmap

21. development plan, development roadmap.
Relationship: Parallel concepts
Criteria: Discussion of plans or timelines for development.
Label: Development Plan
Category: Planning and Roadmap

22. ongoing work, work in progress.
Relationship: Parallel concepts
Criteria: Mention of ongoing work or development.
Label: Ongoing Work
Category: Design and Development

23. progress update, software development progress.
Relationship: Parallel concepts
Criteria: Provides updates on the progress of software development.
Label: Progress Update
Category: Communication and Feedback

24. content planning, content prioritization, content development.
Relationship: Inclusion
Criteria: Planning or prioritizing content development.
Label: Content Planning
Category: Design and Development

25. prioritization, feature prioritization.
Relationship: Parallel concepts
Criteria: Statements that prioritize tasks or features.
Label: Prioritization
Category: Design and Development

26. user expectations, user anticipation.
Relationship: Parallel concepts
Criteria: Users' expectations or assumptions about updates or features.
Label: User Expectations
Category: Communication and Feedback

27. design decision making process, design decision making based on user feedback.
Relationship: Inclusion
Criteria: The process of making design decisions, including weighing options and considering feedback.
Label: Design Decision Making
Category: Design and Development

28. feature refinement, feature optimization.
Relationship: Parallel concepts
Criteria: Discussion of refining or improving existing features or functionality.
Label: Feature Refinement
Category: Design and Development

29. iterative design, incremental refinement.
Relationship: Parallel concepts
Criteria: Discussion of iterative design or refinement.
Label: Iterative Design
Category: Design and Development

30. iterative improvement, ongoing software development.
Relationship: Parallel concepts
Criteria: Continuous improvement and refinement of the software.
Label: Iterative Improvement
Category: Design and Development

31. feature stability, software stability.
Relationship: Parallel concepts
Criteria: Ensuring the stability or reliability of a feature or update.
Label: Feature Stability
Category: Design and Development

32. ui design, user interface.
Relationship: Parallel concepts
Criteria: The design of a user interface or user experience.
Label: UI Design
Category: Design and Development