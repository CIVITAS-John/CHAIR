You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (21 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
21. 
Concepts: {Repeat the input 21}
Relationship: {What is logical relationship between concepts in code 21, or N/A if not applicable}
Criteria: {Who did what, and how for code 21}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: discuss system compatibility, analyze compatibility issues
- A designer speculates on and addresses software compatibility issues related to older systems.
- A designer analyzes compatibility issues and clarifies questions while providing solutions for troubleshooting.

2.
Concepts: downplay formality, encourage open communication
- Designer encourages casual communication and problem reporting.
- Designers encourage users to report problems directly and foster a welcoming atmosphere for discussion.

3.
Concepts: resolve user concerns, commit to user needs
- A designer emphasizes usability while addressing concerns and offering solutions.
- Designers assert their commitment to satisfying user needs and addressing concerns through design efforts.

4.
Concepts: confirming future features, detailing planned updates
- Designers confirm upcoming features and expected timelines.
- Designers share specifics about planned features for future updates.

5.
Concepts: explain update delays, promise future features
- Designers reassure users about ongoing updates and timelines for improvements.
- A designer assures users that desired features will be implemented in the future.

6.
Concepts: outline development focus, outline development priorities
- A designer outlines ongoing and future development areas based on user needs.
- Designers outline priorities and timelines for future software development.

7.
Concepts: share reflections, share design thoughts
- A designer shares reflections based on past experiences to help users.
- A designer articulates thoughts on ongoing improvements and shares strategies aimed at user needs.

8.
Concepts: share usability tips, provide practical advice
- A designer shares tips and solutions to improve user experience with the software.
- Designer shares practical advice on navigating or using the software effectively.

9.
Concepts: discuss input methods, interface layout decisions
- Designers discuss necessary input methods and user interface elements for optimal software usage.
- Users discuss decisions related to the layout of the interface and its usability during operation.

10.
Concepts: introduce new components, explain new features
- A designer presents new components integrated into the software.
- A designer explains and highlights upcoming augmented reality features in the software.

11.
Concepts: direct users to resources, seek community resources
- A designer directs users to resources or places where they can find software.
- Users seek documentation or resources and designers respond to requests for software resources.

12.
Concepts: share user experiences, shared experiences and support
- Users share personal experiences and feedback regarding their engagement with the software.
- Users and designers sharing experiences and supporting each other in using and improving the software.

13.
Concepts: invite feature requests, soliciting user suggestions
- Designers invite users to suggest new features or improvements, encouraging collaborative ideas.
- Designers encourage users to share suggestions and feedback on improvements.

14.
Concepts: seek compatibility specifics, seek information and guidance
- Users request detailed information about compatibility and clarification related to software usage.
- Users ask questions for clarification about software functionalities and technical assistance.

15.
Concepts: show interest, inquire about software access
- Users display interest in obtaining access to software through inquiries.
- A user inquires about obtaining access to a specific software version and download procedures.

16.
Concepts: expressing dissatisfaction, report technical issues
- A designer or user expressed dissatisfaction with specific technical issues or limitations.
- Users describe technical issues related to outdated systems and express frustrations affecting access to software.

17.
Concepts: questioning identity, confirm community identity
- Participants ask direct questions to clarify roles or identities within the community.
- Users affirm their identities and roles in response to community queries.

18.
Concepts: express mutual appreciation, acknowledge provided resources
- Users and designers acknowledge each other's contributions and express gratitude.
- A user acknowledges the resources provided by the designer or group, expressing thanks.

19.
Concepts: respond, designers engage with users
- A designer responds to inquiries and provides updates or solutions based on user interaction.
- Designers respond to user inquiries, indicating engagement with their feedback.

20.
Concepts: collect user feedback, gather user feedback
- Designers gather input from the community regarding specific educational content or standards.
- Designers actively solicit and collect user feedback to understand their experiences with the software.

21.
Concepts: seek user consensus, request user feedback
- Designers seek agreement from users on decisions, emphasizing the necessity of feedback.
- Designers provide reasons for gathering feedback ahead of progress and emphasize its necessity.
===
---
Definitions for each code (21 in total):
1.
Concepts: discuss system compatibility, analyze compatibility issues  
Relationship: Analyzing compatibility issues helps facilitate discussions surrounding system compatibility.  
Criteria: Designers address and solve software compatibility issues concerning older systems.  
Phrase: Analyze and discuss software compatibility.

2.
Concepts: downplay formality, encourage open communication  
Relationship: Casual communication setting fosters an atmosphere of openness and encourages problem reporting.  
Criteria: Designers create a welcoming environment for users to communicate informally and report issues.  
Phrase: Encourage open and casual communication.

3.
Concepts: resolve user concerns, commit to user needs  
Relationship: Addressing user concerns reflects a designer's commitment to meeting user needs.  
Criteria: Designers prioritize usability and actively address user concerns and needs through their designs.  
Phrase: Resolve concerns and commit to users.

4.
Concepts: confirming future features, detailing planned updates  
Relationship: Confirming features allows designers to provide detailed expectations about planned updates.  
Criteria: Designers inform users about upcoming features and their timelines in future updates.  
Phrase: Confirm and detail upcoming features.

5.
Concepts: explain update delays, promise future features  
Relationship: Assuring users about future features can alleviate concerns regarding update delays.  
Criteria: Designers reassure users about project delays while promising the implementation of new features in the future.  
Phrase: Explain delays and promise features.

6.
Concepts: outline development focus, outline development priorities  
Relationship: Outlining priorities in development relates directly to addressing user needs.  
Criteria: Designers represent current and future development areas while outlining priorities and timelines.  
Phrase: Outline and prioritize development focus.

7.
Concepts: share reflections, share design thoughts  
Relationship: Sharing thoughts and reflections can enhance user understanding and engagement.  
Criteria: Designers reflect on experiences and share insights to improve engagement and strategy.  
Phrase: Share reflections and design thoughts.

8.
Concepts: share usability tips, provide practical advice  
Relationship: Usability tips serve as practical advice for enhancing user experience.  
Criteria: Designers provide users with useful tips and practical guidance for navigating the software effectively.  
Phrase: Share tips and provide advice.

9.
Concepts: discuss input methods, interface layout decisions  
Relationship: Discussing input methods informs the decisions regarding the interface layout.  
Criteria: Designers and users collaborate on input methods and interface usability to optimize software performance.  
Phrase: Discuss input methods and interface layout.

10.
Concepts: introduce new components, explain new features  
Relationship: Introducing new components necessitates an explanation of how these features function.  
Criteria: Designers present and explain new software components, including features like augmented reality.  
Phrase: Introduce and explain new features.

11.
Concepts: direct users to resources, seek community resources  
Relationship: Providing directed resources helps users in their search for documentation and support.  
Criteria: Designers assist users by directing them towards resources for accessing software and documentation.  
Phrase: Direct and seek resources.

12.
Concepts: share user experiences, shared experiences and support  
Relationship: Sharing experiences fosters a supportive community dynamic between users and designers.  
Criteria: Users and designers engage in mutual sharing of experiences to enhance support and software improvement.  
Phrase: Share and support user experiences.

13.
Concepts: invite feature requests, soliciting user suggestions  
Relationship: Inviting suggestions encourages user participation in feature development.  
Criteria: Designers solicit feature requests and actively invite users to contribute suggestions for improvements.  
Phrase: Invite and solicit feature requests.

14.
Concepts: seek compatibility specifics, seek information and guidance  
Relationship: Seeking specific compatibility details involves requesting information and guidance.  
Criteria: Users ask designers for detailed technical information about software functionalities and compatibility.  
Phrase: Seek specifics and request guidance.

15.
Concepts: show interest, inquire about software access  
Relationship: Inquiring about access reflects an interest in obtaining software.  
Criteria: Users express interest in software access by inquiring about downloading procedures.  
Phrase: Inquire and show interest in access.

16.
Concepts: expressing dissatisfaction, report technical issues  
Relationship: Expressing dissatisfaction often stems from reporting technical issues.  
Criteria: Designers and users communicate dissatisfaction while reporting technical issues associated with the software.  
Phrase: Express dissatisfaction and report issues.

17.
Concepts: questioning identity, confirm community identity  
Relationship: Questions regarding identity prompt confirmations of community roles.  
Criteria: Participants inquire and assert their identities within the community to clarify roles.  
Phrase: Question and confirm community identity.

18.
Concepts: express mutual appreciation, acknowledge provided resources  
Relationship: Acknowledgment of contributions fosters mutual appreciation within the community.  
Criteria: Users and designers express gratitude and recognize each other's contributions and provided resources.  
Phrase: Express appreciation and acknowledge contributions.

19.
Concepts: respond, designers engage with users  
Relationship: Responding to inquiries demonstrates engagement and interaction with users.  
Criteria: Designers actively respond to user feedback, indicating their engagement in the community.  
Phrase: Respond and engage with users.

20.
Concepts: collect user feedback, gather user feedback  
Relationship: Gathering feedback involves soliciting and collecting input from the user community.  
Criteria: Designers actively seek and collect user feedback to enhance the software's educational content.  
Phrase: Collect and gather user feedback.

21.
Concepts: seek user consensus, request user feedback  
Relationship: Seeking feedback often necessitates gaining user consensus on collective decisions.  
Criteria: Designers emphasize the importance of feedback while seeking consensus from users for future developments.  
Phrase: Seek consensus and request feedback.
---