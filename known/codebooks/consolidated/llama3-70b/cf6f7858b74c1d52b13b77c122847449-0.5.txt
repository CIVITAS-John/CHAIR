You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (32 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
32. {Repeat the input 32}
Relationship: {The logical relationship between concepts in input 32}
Criteria: {A sentence of consolidated criteria for code 32}
Label: {A consolidated label of code 32}
Category: {2-4 words for code 32}
---
~~~
1. software appreciation, feature appreciation.
- Expressing gratitude or appreciation for the software.
- Expressing admiration or appreciation for a feature or aspect of the app.

2. motivation, enthusiasm and interest.
- Expressing motivation or enthusiasm.
- Expressing enthusiasm or excitement about a topic or feature.

3. empathy, apologies.
- Expressions of regret or sympathy from designers.
- Designers or community members apologizing for disturbances or disruptions.

4. politeness, friendly response.
- Expressing politeness or courtesy.
- Responding with a greeting or in a friendly manner.

5. open communication, communication channels.
- Exchanging information or announcements within the community.
- Evidence of the community using various communication channels.

6. community culture, community rapport.
- Establishing or maintaining a positive and respectful tone.
- Building or maintaining relationships within the community through polite interactions.

7. personal inquiry, identity and background.
- Asks about or shows interest in someone's personal background.
- Asking about the identity or role of a user, or sharing personal identity or background information.

8. teacher profile, teacher identity, introduce teacher identity with grade-level and number of years.
- Sharing or inquiring about personal or professional profiles.
- Confirming or asking about someone's profession or identity.
- Introducing oneself with professional background and experience

9. user demographics, user background.
- Discussion of user demographics or characteristics.
- References to users' professional or educational backgrounds that might influence their interaction with the app.

10. user roles, role identification.
- Statements that identify or address specific user roles.
- Users explicitly or implicitly identifying their roles or affiliations within the community.

11. providing context, contextual understanding.
- Providing clarification or context about a situation or circumstance.
- Providing or seeking background information or context for understanding.

12. follow-up inquiry, clarification seeking.
- Following up on previous discussions or questions.
- Asking follow-up questions or seeking clarification.

13. user manual, documentation needs.
- Requests and discussions regarding the availability and necessity of a user manual.
- Requests or discussions about documentation or user guides.

14. user inquiry, seeking knowledge.
- Users asking questions or seeking information within the community.
- Users actively seeking information or guidance within the online community.

15. app inquiry, software usage inquiry.
- Asking questions about the app or its functionality.
- Inquiring about the usage of specific software or tools.

16. self-help, independent problem-solving.
- Helping oneself to find a solution.
- Finding solutions or answers independently, resolving issues on one's own.

17. learning support, learning software design.
- Software's ability to support learning and educational activities.
- Designing software that supports learning or educational goals.

18. internet restrictions, educational constraints.
- The restrictions or blocks on internet access in a school or educational setting.
- Refers to restrictions or limitations imposed by a school and identifying challenges or difficulties in educational settings.

19. internet access, technology discussion.
- Discussions about internet connectivity in educational settings.
- Discussing or inquiring about technology-related topics or using technology in a learning context.

20. software access, software accessibility.
- Availability or access to the Physics Lab platform or its resources.
- Discussions or inquiries about accessing or using the Physics Lab software.

21. demonstration requests, physics simulation requests.
- Refers to specific requests for demonstrations or simulations.
- Requests or suggestions for physics simulations or experiments.

22. visual communication, using images to help demonstration.
- Use of visual aids or emojis to convey information or tone.
- Using visual aids to facilitate understanding or demonstration.

23. user expectations, expectation management.
- Users' expectations or assumptions about updates or features.
- Managing user expectations about software development.

24. optimization, refining design.
- Refining or optimizing software to improve performance or functionality.
- Improving or refining the design process or existing features.

25. feature list, platform features.
- Lists or catalogs of features or functionalities available on the platform.
- Discussing or referencing specific features or capabilities of the platform.

26. input methods, user interaction.
- Methods or mechanisms for user input or data entry.
- Interacting with software or systems through user input or interfaces.

27. interface challenges, browser interface problem.
- User queries or discussions indicating difficulties with using the software interface.
- Refers to problems or difficulties with the browser interface.

28. platform differences, platform specific delay.
- Statements that highlight differences between platforms or versions.
- Delays or differences in release schedules across platforms.

29. compatibility assurance, ensuring compatibility.
- Expressing confirmation of system compatibility.
- Inquiring about or providing information about software compatibility.

30. system limitations, system capabilities.
- Discussion of limitations or constraints of a system or platform.
- Discussing or referencing the technical capabilities or limitations of a network or operating system.

31. suggestion acceptance, user approval of software feature idea.
- Accepting user suggestions or feedback with justifications.
- Users expressing approval or validation of a software feature idea.

32. design rationale, rationale for development decisions.
- Explaining the purpose, need, or principle behind a design or feature.
- Providing a justification or explanation for a development decision.
===
Here are the definitions for each code:

---
Categories: 
* Community Building
* User Engagement
* Software Development
* Learning and Education
* Technical Issues
* User Feedback and Support

Definitions for each code:

1. software appreciation, feature appreciation.
Relationship: Inclusion
Criteria: Expressing gratitude or admiration for the software or its features.
Label: Software Appreciation
Category: User Engagement

2. motivation, enthusiasm and interest.
Relationship: Parallel
Criteria: Expressing motivation, enthusiasm, or interest.
Label: User Motivation
Category: User Engagement

3. empathy, apologies.
Relationship: Inclusion
Criteria: Expressions of regret or sympathy from designers or community members.
Label: Empathy and Apologies
Category: Community Building

4. politeness, friendly response.
Relationship: Inclusion
Criteria: Expressing politeness or courtesy in responses.
Label: Politeness and Friendliness
Category: Community Building

5. open communication, communication channels.
Relationship: Inclusion
Criteria: Exchanging information or announcements within the community through various channels.
Label: Open Communication
Category: Community Building

6. community culture, community rapport.
Relationship: Inclusion
Criteria: Establishing or maintaining a positive and respectful tone.
Label: Community Culture
Category: Community Building

7. personal inquiry, identity and background.
Relationship: Inclusion
Criteria: Asking about or showing interest in someone's personal background.
Label: Personal Inquiry
Category: Community Building

8. teacher profile, teacher identity, introduce teacher identity with grade-level and number of years.
Relationship: Inclusion
Criteria: Sharing or inquiring about personal or professional profiles.
Label: Teacher Profile
Category: Community Building

9. user demographics, user background.
Relationship: Inclusion
Criteria: Discussion of user demographics or characteristics.
Label: User Demographics
Category: User Engagement

10. user roles, role identification.
Relationship: Inclusion
Criteria: Statements that identify or address specific user roles.
Label: User Roles
Category: User Engagement

11. providing context, contextual understanding.
Relationship: Inclusion
Criteria: Providing clarification or context about a situation or circumstance.
Label: Contextual Understanding
Category: User Engagement

12. follow-up inquiry, clarification seeking.
Relationship: Inclusion
Criteria: Following up on previous discussions or questions.
Label: Clarification Seeking
Category: User Engagement

13. user manual, documentation needs.
Relationship: Inclusion
Criteria: Requests and discussions regarding the availability and necessity of a user manual.
Label: Documentation Needs
Category: User Feedback and Support

14. user inquiry, seeking knowledge.
Relationship: Inclusion
Criteria: Users asking questions or seeking information within the community.
Label: User Inquiry
Category: User Engagement

15. app inquiry, software usage inquiry.
Relationship: Inclusion
Criteria: Asking questions about the app or its functionality.
Label: App Inquiry
Category: User Engagement

16. self-help, independent problem-solving.
Relationship: Inclusion
Criteria: Helping oneself to find a solution.
Label: Self-Help
Category: User Engagement

17. learning support, learning software design.
Relationship: Inclusion
Criteria: Software's ability to support learning and educational activities.
Label: Learning Support
Category: Learning and Education

18. internet restrictions, educational constraints.
Relationship: Inclusion
Criteria: The restrictions or blocks on internet access in a school or educational setting.
Label: Internet Restrictions
Category: Learning and Education

19. internet access, technology discussion.
Relationship: Inclusion
Criteria: Discussions about internet connectivity in educational settings.
Label: Internet Access
Category: Learning and Education

20. software access, software accessibility.
Relationship: Inclusion
Criteria: Availability or access to the Physics Lab platform or its resources.
Label: Software Access
Category: Software Development

21. demonstration requests, physics simulation requests.
Relationship: Inclusion
Criteria: Refers to specific requests for demonstrations or simulations.
Label: Demonstration Requests
Category: Learning and Education

22. visual communication, using images to help demonstration.
Relationship: Inclusion
Criteria: Use of visual aids or emojis to convey information or tone.
Label: Visual Communication
Category: User Engagement

23. user expectations, expectation management.
Relationship: Inclusion
Criteria: Users' expectations or assumptions about updates or features.
Label: User Expectations
Category: User Feedback and Support

24. optimization, refining design.
Relationship: Inclusion
Criteria: Refining or optimizing software to improve performance or functionality.
Label: Optimization
Category: Software Development

25. feature list, platform features.
Relationship: Inclusion
Criteria: Lists or catalogs of features or functionalities available on the platform.
Label: Feature List
Category: Software Development

26. input methods, user interaction.
Relationship: Inclusion
Criteria: Methods or mechanisms for user input or data entry.
Label: Input Methods
Category: Software Development

27. interface challenges, browser interface problem.
Relationship: Inclusion
Criteria: User queries or discussions indicating difficulties with using the software interface.
Label: Interface Challenges
Category: Technical Issues

28. platform differences, platform specific delay.
Relationship: Inclusion
Criteria: Statements that highlight differences between platforms or versions.
Label: Platform Differences
Category: Technical Issues

29. compatibility assurance, ensuring compatibility.
Relationship: Inclusion
Criteria: Expressing confirmation of system compatibility.
Label: Compatibility Assurance
Category: Technical Issues

30. system limitations, system capabilities.
Relationship: Inclusion
Criteria: Discussion of limitations or constraints of a system or platform.
Label: System Limitations
Category: Technical Issues

31. suggestion acceptance, user approval of software feature idea.
Relationship: Inclusion
Criteria: Accepting user suggestions or feedback with justifications.
Label: Suggestion Acceptance
Category: User Feedback and Support

32. design rationale, rationale for development decisions.
Relationship: Inclusion
Criteria: Explaining the purpose, need, or principle behind a design or feature.
Label: Design Rationale
Category: Software Development