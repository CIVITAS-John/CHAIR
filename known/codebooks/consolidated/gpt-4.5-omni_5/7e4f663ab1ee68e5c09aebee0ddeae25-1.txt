You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (10 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
10. 
Concepts: {Repeat the input 10}
Relationship: {What is logical relationship between concepts in code 10, or N/A if not applicable}
Criteria: {Who did what, and how for code 10}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: announcing new versions, announcing new components
- The team announces the release and details of new software versions.
- The team announces the introduction of new features, components, or adjustments.

2.
Concepts: confirming future features, future implementation confirmation
- Designers confirm that certain features will be implemented in upcoming updates or eventually.
- Designer confirms future implementation of a feature or plan.

3.
Concepts: explaining features, demonstrating features with examples
- Designers provide specific details about the features or capabilities of the software.
- Designers or users provide concrete examples to demonstrate how features function within the software.

4.
Concepts: requesting guidance, express need for documentation
- Users request instructions or guidance on how to use specific features of the software.
- A user asks for documentation or user manuals to better understand and use the software.

5.
Concepts: inquiring about access, access information
- Users ask how to access or download the software.
- Inquiring about and providing instructions on how to access or download the system or its features.

6.
Concepts: encouraging detailed feedback, encouraging community feedback
- Designers encourage the community to provide feedback and suggestions, often through private channels.
- The designer encourages users to interact, provide suggestions, and offer feedback within the community.

7.
Concepts: soliciting feedback, prompting user feedback
- Designers encourage users to provide feedback and suggestions to improve the software.
- Designers actively prompt users to offer suggestions or feedback for improvement.

8.
Concepts: provide specific feedback, providing feedback and suggestions
- A user provides specific feedback or a direct answer to a question about the software.
- Users provide feedback or communicate their experiences and suggestions for the software.

9.
Concepts: proposing usability improvements, suggesting design simplification
- Users or designers propose changes to make the software more user-friendly.
- Designers or users suggest changes to simplify features or design for better user experience.

10.
Concepts: appreciating features, expressing satisfaction
- Users express approval or positive feedback about software features.
- Users praise the software for its usability, effectiveness, and impact.
===
---
Definitions for each code (10 in total):
1.
Concepts: announcing new versions, announcing new components
Relationship: Both involve the team communicating updates about the software.
Criteria: The team announces releases of new software versions and details about new features or adjustments.
Phrase: Announcing updates

2.
Concepts: confirming future features, future implementation confirmation
Relationship: Both involve confirming plans for future additions to the software.
Criteria: Designers confirm the upcoming implementation of certain features or plans in future updates.
Phrase: Confirming future plans

3.
Concepts: explaining features, demonstrating features with examples
Relationship: Both involve providing details about software features, either through explanation or demonstration.
Criteria: Designers or users provide detailed explanations and concrete examples to demonstrate software features.
Phrase: Explaining and demonstrating features

4.
Concepts: requesting guidance, express need for documentation
Relationship: Both involve users seeking information or instructions on software usage.
Criteria: Users request instructions or documentation to better understand and use software features.
Phrase: Requesting guidance

5.
Concepts: inquiring about access, access information
Relationship: Both involve seeking and providing information about accessing the software.
Criteria: Users inquire about and obtain instructions on how to access or download the software.
Phrase: Inquiring about access

6.
Concepts: encouraging detailed feedback, encouraging community feedback
Relationship: Both involve designers motivating the community to provide feedback.
Criteria: Designers encourage the community to provide detailed feedback and suggestions through various channels.
Phrase: Encouraging community feedback

7.
Concepts: soliciting feedback, prompting user feedback
Relationship: Both involve actively seeking usersâ€™ feedback.
Criteria: Designers actively prompt users to provide feedback and suggestions for software improvement.
Phrase: Soliciting feedback

8.
Concepts: provide specific feedback, providing feedback and suggestions
Relationship: Both involve users sharing their thoughts or suggestions about the software.
Criteria: Users provide specific feedback and suggestions based on their experiences with the software.
Phrase: Providing feedback

9.
Concepts: proposing usability improvements, suggesting design simplification
Relationship: Both involve recommending changes to enhance the software's usability and design.
Criteria: Users or designers propose changes to simplify design and improve software usability.
Phrase: Proposing improvements

10.
Concepts: appreciating features, expressing satisfaction
Relationship: Both involve users expressing positive feedback about the software.
Criteria: Users express approval and positive feedback about the software's features and impact.
Phrase: Expressing satisfaction
---