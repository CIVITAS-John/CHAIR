You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (54 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
54. 
Concepts: {Repeat the input 54}
Relationship: {What is logical relationship between concepts in code 54, or N/A if not applicable}
Criteria: {Who did what, and how for code 54}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: share teaching experience, share positive classroom experiences
- Users share their teaching experiences and background.
- Users share and describe positive classroom experiences and student responses.

2.
Concepts: identify as teacher, introduce teacher identity with grade-level and number of years
- Users identify themselves as teachers and describe their teaching context.
- A user introduces their teaching experience and background.

3.
Concepts: inquiring about updates, engaging with development process
- Users inquire about recent, upcoming, or specific updates and their timelines.
- Users inquire about the development process or upcoming updates and express interest in the platform's development.

4.
Concepts: request usage support, request technical support
- Users request assistance and indicate a need for support materials.
- Users request and address technical support inquiries.

5.
Concepts: seeking usage guidance, seek software assistance
- Users inquire and request guidance on how to use specific versions or features.
- Users ask questions and seek assistance or information about the software.

6.
Concepts: share user experiences, share educational experiences
- Users share their experiences and reviews of the software.
- Users share their experiences and the impact of the software in educational contexts.

7.
Concepts: compliment software, praise software features
- Users compliment the software or its evolution.
- Users acknowledge and praise the software's features.

8.
Concepts: provide detailed feedback, justifying feature requests
- Users provide specific and justified feedback or suggestions.
- Users provide reasons for their suggestions and explain the reasons for requesting specific features.

9.
Concepts: encourage and suggest feedback, suggest and discuss usability improvements
- Participants encourage feedback and suggest ways for users to interact.
- Users discuss, suggest, and implement usability improvements.

10.
Concepts: share information, providing information
- Instances where participants share information or resources to solve a problem or answer a question.
- Participants provide answers or resources to users' questions and respond to clarifications or questions raised.

11.
Concepts: inquire about background, share background information
- Participants inquire about another's professional or personal background.
- Users share their professional or personal background.

12.
Concepts: community need, request community resources
- A user expresses a need for a specific feature to benefit the community.
- Users request and discuss community resources.

13.
Concepts: mention, address specific user
- Users mention or tag other community members.
- Address or mention a specific user by name.

14.
Concepts: confirm feature updates, confirm update completion
- Participants confirm planned feature updates.
- Participants confirm that they have completed an update.

15.
Concepts: acknowledge receipt, acknowledge resolution
- Acknowledge receipt or understanding of information.
- Acknowledge that an issue has been resolved.

16.
Concepts: express agreement, focus area agreement
- Users express agreement with statements or design ideas.
- Users agreeing with or affirming focus areas or statements.

17.
Concepts: accept and implement suggestions, acknowledge and accept requests
- Designers accept and agree to implement user suggestions.
- Designers acknowledge and confirm the inclusion of user requests in updates.

18.
Concepts: establish credibility, confirm user identity
- A user establishes their credibility within the community.
- Confirm or acknowledge user identity within the community.

19.
Concepts: reciprocate greeting, greeting and welcoming members
- Designers or users reciprocate a greeting from another participant.
- Users or designers greet and welcome newcomers and the community.

20.
Concepts: appreciation, express user appreciation
- Expresses appreciation or gratitude.
- Users express appreciation and gratitude in interactions.

21.
Concepts: expressing gratitude in responses, building community through appreciation
- Community members respond to each other with gratitude and additional context.
- Participants engage in community building by expressing appreciation and encouragement.

22.
Concepts: expressing emotions, use non verbal communication
- Users use emojis and expressive language to convey emotions.
- Use of emojis or other non-verbal forms of communication by users.

23.
Concepts: user role inquiry, gathering context
- Designers inquiring about the user's role.
- Designers gather context or additional information from users.

24.
Concepts: asking questions, asking design questions
- Users and designers ask questions to gather information and seek input or clarification to better understand needs.
- Designers ask questions related to design or functionality and follow-up questions to clarify previous points.

25.
Concepts: inquire about user needs, asking follow-up questions
- Developers ask questions to understand user requests and needs.
- Developers ask follow-up questions to clarify user needs or scenarios.

26.
Concepts: reassure and address concerns, addressing user concerns
- Designers reassure users and address their concerns or questions.
- Designers respond to and mitigate user concerns or issues and address and resolve user questions.

27.
Concepts: offering support, providing technical support
- Designers offer help and ongoing support, encouraging users to report issues.
- Designers or users provide assistance and technical support to help users effectively use the product.

28.
Concepts: encouraging interaction, facilitate further engagement
- Designers engage with users, express personal interests, and encourage open communication and interaction.
- A designer engages with a user to facilitate further interaction and participation.

29.
Concepts: plan opinion gathering, confirmation/agreement of collaboration
- Designers plan to gather opinions before starting new project phases.
- Designers confirm collaboration and plan to gather opinions.

30.
Concepts: plan for iterative feedback, acknowledge and plan feedback implementation
- A designer plans to gather feedback iteratively.
- Designers acknowledge feedback and discuss implementation plans.

31.
Concepts: invite feedback, seek community input
- Developers invite feedback or suggestions from the community.
- Developers or designers seek input or feedback from the community on specific aspects of the software.

32.
Concepts: promise future features and feedback, request and promise future consultation
- Developers promise future features and invite user feedback.
- Developers ask for and promise future user consultation.

33.
Concepts: invite future input, invite user participation
- Designers invite user input and feature requests for future iterations.
- A participant invites others to participate or provide input at a future stage.

34.
Concepts: managing release process, communicating release plans
- Designers discuss the process, timeline, and stages of version releases.
- Designers inform users about the timelines and schedules for upcoming updates.

35.
Concepts: previewing updates, sharing visual updates
- Designers preview upcoming features or updates, often with visual aids.
- Designers share visual updates or previews related to the application and communicate development progress.

36.
Concepts: listing upcoming features, announcing new developments
- Designers share information about planned updates and upcoming features.
- Designers announce updates, new versions, features, and future plans.

37.
Concepts: frustration, express concerns and frustrations
- A participant expresses dissatisfaction or difficulty with a situation or tool.
- Users express concerns and frustrations about software limitations.

38.
Concepts: elaboration of response, providing detailed answers
- A designer elaborates on the complexity and timeline of a response or update.
- Designers add specific information to clarify an answer and give more detailed and specific responses.

39.
Concepts: explain situation, providing context
- Explains a situation or context related to the user's environment or experience.
- Participants provide context or background information to explain their environment, experience, needs, or decisions.

40.
Concepts: giving reasons, explaining intentions
- Participants provide reasons or justifications for decisions or actions and confirm reasons given earlier.
- Participants explain the reason behind questions or statements and the reasons behind certain actions or decisions.

41.
Concepts: indirect reject, implicitly rejecting suggestions
- Indicates a subtle or indirect way of declining or postponing a request or suggestion.
- Designers implicitly reject a suggestion or request and subtly disagree without direct confrontation.

42.
Concepts: discussing future plans, planning feature development
- Participants discuss future development plans and directions for the software.
- Participants mention the intention to expand or develop new features in the future.

43.
Concepts: research & development, describing current efforts
- Discussion about ongoing research and development.
- Designers describe current research or efforts being undertaken and mention ongoing research related to the application.

44.
Concepts: discuss classroom usability, discuss educational application
- Discuss the application and usability of the software in classrooms.
- Discuss the practical application of the software in educational contexts.

45.
Concepts: simulation enhancement, explaining simulation details
- Designers discussing enhancements to the simulation.
- Designers explain simulation details and discuss the accuracy or changes in simulation components.

46.
Concepts: touch screen consideration, discuss touch screen functionality
- Users discussing the need for features that accommodate touch screen usage.
- Discuss touch screen functionality and information.

47.
Concepts: consider hardware limitations, discuss software limitations
- Users discussing the need for features due to hardware limitations.
- Participants discuss and highlight technical constraints of the software.

48.
Concepts: prioritizing user feedback, suggesting prioritization
- Designers prioritize user feedback in development plans and discuss the prioritization of features or sections to be developed.
- Users express their preferences regarding software features or design choices and suggest prioritizing certain features for better usability.

49.
Concepts: addressing usability, discussing user interface
- Participants discuss the visual and functional aspects of the software and address usability or functionality.
- Designers discuss aspects of the user interface, input methods, and the placement or arrangement of elements.

50.
Concepts: explaining feature importance, explaining design choices
- Designers explain the necessity and importance of certain features or developments.
- Designers explain usability features, design goals, the philosophy behind design decisions, and the software's design intention.

51.
Concepts: providing update instructions, providing download instructions
- Designers inform users about software updates and where to download them.
- Designers provide instructions on how and where to download the software.

52.
Concepts: provide version details, clarify software version
- Provide details and explanations about software versions.
- Participants clarify the type or version of the software.

53.
Concepts: provide system requirements, confirm system compatibility
- Designers provide technical information about system compatibility.
- Designers assure and confirm software compatibility with systems.

54.
Concepts: encouraging community discussion
- Designers encourage discussion about problems or issues within the community.
- Designers encourage users to continue engaging with questions or discussions and discuss and respond to previous messages about design or functionality.
===
---
Definitions for each code (54 in total):
1.
Concepts: share teaching experience, share positive classroom experiences
Relationship: Both concepts involve users sharing their experiences related to teaching.
Criteria: Users share their teaching experiences and describe positive classroom interactions.
Phrase: Sharing teaching and classroom experiences

2.
Concepts: identify as teacher, introduce teacher identity with grade-level and number of years
Relationship: Both concepts involve users identifying themselves and providing context about their teaching background.
Criteria: Users identify themselves as teachers and describe their teaching context, including grade-level and years of experience.
Phrase: Introducing teacher identity and context

3.
Concepts: inquiring about updates, engaging with development process
Relationship: Both concepts involve users showing interest in the software's updates and development process.
Criteria: Users inquire about updates and express interest in the development process.
Phrase: Engaging with software updates and development

4.
Concepts: request usage support, request technical support
Relationship: Both concepts involve users seeking support for using the software.
Criteria: Users request assistance for usage and technical support.
Phrase: Requesting usage and technical support

5.
Concepts: seeking usage guidance, seek software assistance
Relationship: Both concepts involve users seeking help with using the software.
Criteria: Users inquire and request guidance or assistance for using the software.
Phrase: Seeking software usage guidance

6.
Concepts: share user experiences, share educational experiences
Relationship: Both concepts involve users sharing their experiences with the software in educational contexts.
Criteria: Users share their experiences with the software and its impact in educational settings.
Phrase: Sharing software and educational experiences

7.
Concepts: compliment software, praise software features
Relationship: Both concepts involve users expressing positive feedback about the software.
Criteria: Users compliment the software and praise its features.
Phrase: Praising software and its features

8.
Concepts: provide detailed feedback, justifying feature requests
Relationship: Both concepts involve users giving detailed feedback and justifying their requests.
Criteria: Users provide specific feedback and explain the reasons for their feature requests.
Phrase: Providing detailed and justified feedback

9.
Concepts: encourage and suggest feedback, suggest and discuss usability improvements
Relationship: Both concepts involve users encouraging feedback and suggesting improvements.
Criteria: Participants encourage feedback and suggest usability improvements.
Phrase: Encouraging and suggesting usability improvements

10.
Concepts: share information, providing information
Relationship: Both concepts involve users sharing or providing information.
Criteria: Participants share information or resources to solve problems or answer questions.
Phrase: Sharing and providing information

11.
Concepts: inquire about background, share background information
Relationship: Both concepts involve users discussing their backgrounds.
Criteria: Participants inquire about and share their professional or personal background.
Phrase: Inquiring and sharing background information

12.
Concepts: community need, request community resources
Relationship: Both concepts involve users expressing needs and requesting resources for the community.
Criteria: Users express needs and request community resources.
Phrase: Expressing community needs and requesting resources

13.
Concepts: mention, address specific user
Relationship: Both concepts involve users addressing or mentioning specific members.
Criteria: Users mention or tag other community members.
Phrase: Mentioning and addressing specific users

14.
Concepts: confirm feature updates, confirm update completion
Relationship: Both concepts involve confirming updates or their completion.
Criteria: Participants confirm planned feature updates or their completion.
Phrase: Confirming updates and their completion

15.
Concepts: acknowledge receipt, acknowledge resolution
Relationship: Both concepts involve acknowledging receipt or resolution of information.
Criteria: Acknowledge receipt or understanding of information and resolution of issues.
Phrase: Acknowledging receipt and resolution

16.
Concepts: express agreement, focus area agreement
Relationship: Both concepts involve users expressing agreement.
Criteria: Users express agreement with statements or design ideas.
Phrase: Expressing agreement

17.
Concepts: accept and implement suggestions, acknowledge and accept requests
Relationship: Both concepts involve accepting and implementing user suggestions or requests.
Criteria: Designers acknowledge and agree to implement user suggestions or requests.
Phrase: Accepting and implementing suggestions

18.
Concepts: establish credibility, confirm user identity
Relationship: Both concepts involve establishing or confirming user identity within the community.
Criteria: A user establishes credibility and confirms identity within the community.
Phrase: Establishing credibility and confirming identity

19.
Concepts: reciprocate greeting, greeting and welcoming members
Relationship: Both concepts involve greeting and welcoming community members.
Criteria: Designers or users greet and welcome newcomers and reciprocate greetings.
Phrase: Greeting and welcoming members

20.
Concepts: appreciation, express user appreciation
Relationship: Both concepts involve expressing appreciation.
Criteria: Users express appreciation and gratitude in interactions.
Phrase: Expressing appreciation

21.
Concepts: expressing gratitude in responses, building community through appreciation
Relationship: Both concepts involve expressing gratitude to build community.
Criteria: Community members respond with gratitude and engage in community building.
Phrase: Building community through appreciation

22.
Concepts: expressing emotions, use non verbal communication
Relationship: Both concepts involve conveying emotions, often non-verbally.
Criteria: Users use emojis or expressive language to convey emotions.
Phrase: Expressing emotions

23.
Concepts: user role inquiry, gathering context
Relationship: Both concepts involve inquiring about user roles and gathering context.
Criteria: Designers inquire about user roles and gather additional context.
Phrase: Inquiring about user roles and gathering context

24.
Concepts: asking questions, asking design questions
Relationship: Both concepts involve asking questions for information or clarification.
Criteria: Users and designers ask questions to gather information or clarify design aspects.
Phrase: Asking questions for information and clarification

25.
Concepts: inquire about user needs, asking follow-up questions
Relationship: Both concepts involve understanding user needs through inquiries.
Criteria: Developers ask questions to understand user needs and follow-up for clarification.
Phrase: Inquiring about and clarifying user needs

26.
Concepts: reassure and address concerns, addressing user concerns
Relationship: Both concepts involve addressing user concerns.
Criteria: Designers reassure users and address their concerns or questions.
Phrase: Addressing and reassuring user concerns

27.
Concepts: offering support, providing technical support
Relationship: Both concepts involve offering and providing support.
Criteria: Designers offer help and provide technical support to users.
Phrase: Offering and providing support

28.
Concepts: encouraging interaction, facilitate further engagement
Relationship: Both concepts involve encouraging user interaction and engagement.
Criteria: Designers engage with users and encourage further interaction and participation.
Phrase: Encouraging interaction and engagement

29.
Concepts: plan opinion gathering, confirmation/agreement of collaboration
Relationship: Both concepts involve planning and confirming collaboration for opinion gathering.
Criteria: Designers plan to gather opinions and confirm collaboration.
Phrase: Planning and confirming collaboration for opinion gathering

30.
Concepts: plan for iterative feedback, acknowledge and plan feedback implementation
Relationship: Both concepts involve planning for and acknowledging feedback.
Criteria: Designers plan to gather feedback iteratively and discuss implementation plans.
Phrase: Planning and acknowledging iterative feedback

31.
Concepts: invite feedback, seek community input
Relationship: Both concepts involve inviting and seeking feedback from the community.
Criteria: Developers invite feedback and seek community input on software aspects.
Phrase: Inviting and seeking community feedback

32.
Concepts: promise future features and feedback, request and promise future consultation
Relationship: Both concepts involve promising future features and requesting user consultation.
Criteria: Developers promise future features and invite user feedback and consultation.
Phrase: Promising future features and seeking consultation

33.
Concepts: invite future input, invite user participation
Relationship: Both concepts involve inviting user input and participation.
Criteria: Designers invite user input and participation for future iterations.
Phrase: Inviting future input and participation

34.
Concepts: managing release process, communicating release plans
Relationship: Both concepts involve managing and communicating release plans.
Criteria: Designers discuss and inform users about the release process and timelines.
Phrase: Managing and communicating release plans

35.
Concepts: previewing updates, sharing visual updates
Relationship: Both concepts involve previewing and sharing updates visually.
Criteria: Designers preview upcoming features and share visual updates.
Phrase: Previewing and sharing visual updates

36.
Concepts: listing upcoming features, announcing new developments
Relationship: Both concepts involve announcing and listing future developments.
Criteria: Designers share information about planned updates and announce new developments.
Phrase: Announcing and listing future developments

37.
Concepts: frustration, express concerns and frustrations
Relationship: Both concepts involve expressing dissatisfaction or concerns.
Criteria: Users express concerns and frustrations about software limitations.
Phrase: Expressing concerns and frustrations

38.
Concepts: elaboration of response, providing detailed answers
Relationship: Both concepts involve providing detailed responses.
Criteria: Designers elaborate on responses and provide detailed answers.
Phrase: Providing detailed responses

39.
Concepts: explain situation, providing context
Relationship: Both concepts involve explaining situations by providing context.
Criteria: Participants explain situations and provide context about their environment or experience.
Phrase: Explaining situations and providing context

40.
Concepts: giving reasons, explaining intentions
Relationship: Both concepts involve giving reasons and explaining intentions.
Criteria: Participants provide reasons or justifications for decisions and explain intentions.
Phrase: Giving reasons and explaining intentions

41.
Concepts: indirect reject, implicitly rejecting suggestions
Relationship: Both concepts involve subtly rejecting or postponing suggestions.
Criteria: Designers implicitly reject suggestions or requests without direct confrontation.
Phrase: Indirectly rejecting suggestions

42.
Concepts: discussing future plans, planning feature development
Relationship: Both concepts involve discussing and planning future developments.
Criteria: Participants discuss future development plans and feature expansions.
Phrase: Discussing and planning future developments

43.
Concepts: research & development, describing current efforts
Relationship: Both concepts involve discussing ongoing research and development efforts.
Criteria: Designers describe ongoing research and development efforts related to the application.
Phrase: Describing ongoing research and development

44.
Concepts: discuss classroom usability, discuss educational application
Relationship: Both concepts involve discussing the software's usability in educational settings.
Criteria: Participants discuss the application and usability of the software in classrooms.
Phrase: Discussing classroom usability and educational application

45.
Concepts: simulation enhancement, explaining simulation details
Relationship: Both concepts involve discussing and explaining simulation enhancements.
Criteria: Designers discuss enhancements and explain details of the simulation.
Phrase: Discussing and explaining simulation enhancements

46.
Concepts: touch screen consideration, discuss touch screen functionality
Relationship: Both concepts involve discussing touch screen features and functionality.
Criteria: Users discuss the need for and functionality of touch screen features.
Phrase: Discussing touch screen functionality

47.
Concepts: consider hardware limitations, discuss software limitations
Relationship: Both concepts involve discussing hardware and software limitations.
Criteria: Participants discuss features needed due to hardware limitations and software constraints.
Phrase: Discussing hardware and software limitations

48.
Concepts: prioritizing user feedback, suggesting prioritization
Relationship: Both concepts involve prioritizing and suggesting user feedback.
Criteria: Designers prioritize user feedback and discuss feature prioritization.
Phrase: Prioritizing and suggesting user feedback

49.
Concepts: addressing usability, discussing user interface
Relationship: Both concepts involve discussing usability and user interface aspects.
Criteria: Participants discuss usability and user interface elements of the software.
Phrase: Addressing usability and user interface

50.
Concepts: explaining feature importance, explaining design choices
Relationship: Both concepts involve explaining the importance of features and design choices.
Criteria: Designers explain the necessity of features and the reasoning behind design choices.
Phrase: Explaining feature importance and design choices

51.
Concepts: providing update instructions, providing download instructions
Relationship: Both concepts involve providing instructions for updates and downloads.
Criteria: Designers inform users about updates and provide download instructions.
Phrase: Providing update and download instructions

52.
Concepts: provide version details, clarify software version
Relationship: Both concepts involve providing and clarifying software version details.
Criteria: Participants provide details and clarify software versions.
Phrase: Providing and clarifying version details

53.
Concepts: provide system requirements, confirm system compatibility
Relationship: Both concepts involve providing and confirming system compatibility.
Criteria: Designers provide system requirements and confirm software compatibility.
Phrase: Providing system requirements and confirming compatibility

54.
Concepts: encouraging community discussion
Relationship: N/A
Criteria: Designers encourage users to engage in community discussions about issues and design.
Phrase: Encouraging community discussion
---