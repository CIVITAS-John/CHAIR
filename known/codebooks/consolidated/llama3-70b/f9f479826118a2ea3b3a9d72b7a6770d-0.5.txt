You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (19 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
19. {Repeat the input 19}
Relationship: {The logical relationship between concepts in input 19}
Criteria: {A sentence of consolidated criteria for code 19}
Label: {A consolidated label of code 19}
Category: {2-4 words for code 19}
---
~~~
1. file sharing, resource sharing.
- Members share or request access to files or resources within the group
- Instances where participants share, request, or provide access to resources within the group

2. greetings and salutations, expressions of gratitude.
- Instances of community members greeting each other or the Designer.
- Instances where participants express appreciation, thanks, or support towards each other, the designers, or the community.

3. visual reactions, emotional expression.
- Instances where participants use emojis or images to express reactions and emotions.
- Instances of community members expressing emotions through language or emojis, or using non-text elements to convey emotions or reactions.

4. user background, educational background.
- References to users' professional or educational backgrounds that influence their interaction with the app
- Understanding participants' educational backgrounds and their impact on technology use.

5. role identification, professional identity influence.
- Users explicitly or implicitly identifying their roles or affiliations within the community.
- References to the participant's professional roles or identities that influence their interactions within the community.

6. user feature requests, user-driven design suggestions.
- A user requesting or suggesting a new feature to be added to the software.
- User-provided suggestions that aim to influence the design and feature set of the platform.

7. gathering opinions, feedback on development.
- Instances where the community gathers opinions before making decisions on lab development.
- Community members providing feedback or suggestions on the development process.

8. community influence and collaborative improvement, co-creation and community-driven experiment development.
- This code captures the community's active involvement and influence in the software's development, where their input and contributions lead to collaborative improvements.
- This code reflects the high degree of collaboration and co-creation between the designer and the community, where the community actively participates in the development and refinement of the software and its features.

9. user interaction, user interactions: requesting and providing information.
- Users engaging with each other or the designer.
- Instances where users ask for information or clarification about Physics Lab, or where users or the designer/developer provide information about Physics Lab.

10. co-design, collaborative design involvement.
- Indications of a collaborative effort between the designer and users in developing or improving the software, and designer soliciting input or feedback from community members.
- Instances where users are actively involved in both the decision-making and development aspects of the software.

11. platform features, platform clarification.
- References to specific features or capabilities of the platform being used
- Seeking clarification or information about the platform's features or capabilities.

12. compatibility considerations, system compatibility issues.
- The designer's consideration of compatibility with different systems
- Concerns about software compatibility across systems/versions or technical requirements.

13. software availability, pedagogical support.
- Discussions related to the availability and accessibility of the Physics Lab software, particularly the PC/interactive whiteboard version.
- Discussions that address the software's ability to support learning and educational activities, as well as the educational or pedagogical aspects of the Physics Lab software.

14. content prioritization, development planning.
- Conversations on prioritizing specific sections of the platform for development.
- Discussions or decisions regarding planned features, capabilities, and prioritization of development tasks.

15. feature development, feature collaboration.
- Discussion of new features or updates to the platform.
- Interactions among group members regarding the design and implementation of new features.

16. technical considerations, technical discussions.
- Discussions by the designer that address technical aspects or limitations of the software
- Discussions about technical aspects of the feature development, such as optimization or component adjustments.

17. user anticipation, anticipation and excitement.
- Community members express anticipation or inquire about upcoming updates
- Instances where users show excitement or anticipation for new updates or features.

18. platform updates and user-centered design.
- The designer's efforts to keep the community informed about platform updates and their commitment to incorporating user feedback into the design and development process.
- Expressions of enthusiasm, support, or engagement from community members, and evidence of community members actively engaging in discussions, sharing resources or providing feedback.

19. user-centered design.
- User-initiated discussions on software features and usability improvements.
- Examples showing the influence of user feedback on the design process or decisions, and considering how user input and needs influence the design and development.
===
Here is the output in the required format:

---
Categories:
* Community Building
* User Engagement
* Design and Development
* Technical Considerations
* Pedagogical Support

Definitions for each code:

1. file sharing, resource sharing.
Relationship: Inclusion (file sharing is a type of resource sharing)
Criteria: Instances of community members sharing or requesting access to files or resources within the group.
Label: Resource Sharing
Category: Community Building

2. greetings and salutations, expressions of gratitude.
Relationship: Parallel (both concepts are related to social interactions)
Criteria: Instances of community members greeting each other or expressing appreciation towards each other or the designers.
Label: Social Interactions
Category: Community Building

3. visual reactions, emotional expression.
Relationship: Inclusion (visual reactions are a type of emotional expression)
Criteria: Instances of community members expressing emotions through language, emojis, or non-text elements.
Label: Emotional Expression
Category: Community Building

4. user background, educational background.
Relationship: Inclusion (educational background is a type of user background)
Criteria: References to users' professional or educational backgrounds that influence their interaction with the app.
Label: User Background
Category: User Engagement

5. role identification, professional identity influence.
Relationship: Inclusion (professional identity influence is a type of role identification)
Criteria: Users explicitly or implicitly identifying their roles or affiliations within the community.
Label: Role Identification
Category: User Engagement

6. user feature requests, user-driven design suggestions.
Relationship: Parallel (both concepts are related to user input)
Criteria: User-provided suggestions that aim to influence the design and feature set of the platform.
Label: User Input
Category: Design and Development

7. gathering opinions, feedback on development.
Relationship: Inclusion (feedback on development is a type of gathering opinions)
Criteria: Community members providing feedback or suggestions on the development process.
Label: Feedback Gathering
Category: Design and Development

8. community influence and collaborative improvement, co-creation and community-driven experiment development.
Relationship: Inclusion (co-creation is a type of community influence)
Criteria: The community's active involvement and influence in the software's development.
Label: Co-Creation
Category: Design and Development

9. user interaction, user interactions: requesting and providing information.
Relationship: Parallel (both concepts are related to user interactions)
Criteria: Users engaging with each other or the designer, asking for or providing information about Physics Lab.
Label: User Interaction
Category: User Engagement

10. co-design, collaborative design involvement.
Relationship: Inclusion (collaborative design involvement is a type of co-design)
Criteria: Indications of a collaborative effort between the designer and users in developing or improving the software.
Label: Co-Design
Category: Design and Development

11. platform features, platform clarification.
Relationship: Parallel (both concepts are related to platform features)
Criteria: References to specific features or capabilities of the platform being used.
Label: Platform Features
Category: Technical Considerations

12. compatibility considerations, system compatibility issues.
Relationship: Inclusion (system compatibility issues are a type of compatibility consideration)
Criteria: Concerns about software compatibility across systems/versions or technical requirements.
Label: Compatibility Considerations
Category: Technical Considerations

13. software availability, pedagogical support.
Relationship: Parallel (both concepts are related to software support)
Criteria: Discussions related to the availability and accessibility of the Physics Lab software, particularly the PC/interactive whiteboard version.
Label: Software Availability
Category: Pedagogical Support

14. content prioritization, development planning.
Relationship: Inclusion (development planning is a type of content prioritization)
Criteria: Conversations on prioritizing specific sections of the platform for development.
Label: Content Prioritization
Category: Design and Development

15. feature development, feature collaboration.
Relationship: Inclusion (feature collaboration is a type of feature development)
Criteria: Discussion of new features or updates to the platform.
Label: Feature Development
Category: Design and Development

16. technical considerations, technical discussions.
Relationship: Parallel (both concepts are related to technical aspects)
Criteria: Discussions by the designer that address technical aspects or limitations of the software.
Label: Technical Considerations
Category: Technical Considerations

17. user anticipation, anticipation and excitement.
Relationship: Inclusion (anticipation and excitement are types of user anticipation)
Criteria: Community members expressing anticipation or inquiring about upcoming updates.
Label: User Anticipation
Category: User Engagement

18. platform updates and user-centered design.
Relationship: Inclusion (user-centered design is a type of platform updates)
Criteria: The designer's efforts to keep the community informed about platform updates and incorporating user feedback into the design and development process.
Label: Platform Updates
Category: Design and Development

19. user-centered design.
Relationship: Inclusion (this code is a subset of code 18)
Criteria: User-initiated discussions on software features and usability improvements.
Label: User-Centered Design
Category: Design and Development