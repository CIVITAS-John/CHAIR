You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: practical problem-solving, promotes practical application
- Designer promotes practical problem-solving using the application.
- Designer promotes the practical application of the software.

2.
Concepts: practical applications, software functionality
- A designer explains or illustrates the practical applications or benefits of the software.
- A designer illustrates or explains the practical functionality or application of the software.

3.
Concepts: explain practical applications, explaining practical applications, illustrates practical application
- Designer explains how a feature can be applied in a practical context.
- Designer explains the practical application of a feature or tool
- A designer provides an example or illustration of how a feature or concept works in practice.

4.
Concepts: feature explanation, explaining functionality, explain application functionality, functionality explanation, designer explains feature, describe component functionality, functional explanation
- Designer explains specific features or functionalities.
- Designer explains the functionality of a component or feature.
- Designer explains how to use or apply a specific application feature.
- Designer or user explains the functionality or features of a tool or component.
- A designer explains the functionality or features of the software.
- Designer describes or explains the functionality of a specific component or feature.
- Designer explains the functionality of a feature.

5.
Concepts: provide examples, providing feature examples, provide feature example, illustrate feature functionality
- The designer provides examples or illustrations to help explain a concept or feature.
- Designer provides examples of software features.
- The designer provides an example or illustration of a feature.
- Designer illustrates how a feature functions, providing examples or explanations.

6.
Concepts: proposing compromises, propose design compromise, propose compromise
- Designers propose compromises.
- A designer suggests a compromise or alternative design.
- A designer proposes a compromise or alternative solution.

7.
Concepts: propose design idea, designer proposes design change
- Designer proposes or suggests a design idea or feature.
- Proposals or suggestions for design changes or improvements, often from designers or developers.

8.
Concepts: self-correction, self-rebut the previous response
- Designer corrects or reconsiders their previous statement.
- The designer corrects or refutes their previous response or statement.

9.
Concepts: acknowledge future editing, acknowledging future manual editing
- A designer acknowledges future editing capabilities or features.
- Designer acknowledges the possibility of future manual editing or customization.

10.
Concepts: seeking improvement, considering design improvements
- A designer seeks improvement or feedback.
- A user considers design improvements or suggestions.

11.
Concepts: ongoing improvement, emphasize continuous improvement
- Designer emphasizes ongoing improvements.
- The designer emphasizes the importance of continuous improvement.

12.
Concepts: committing to improvement, commitment to improvement
- Designer expresses commitment to improvement.
- A designer commits to continuous improvement or development.
- A designer commits to improving or doing better.
- Designer commits to improving the software or their work.

13.
Concepts: design iteration, iterative design, iterative design discussion, engage in design iteration
- Refining or iterating on design decisions or ideas.
- A designer describes an iterative design process or planning.
- Designer engages in iterative design discussions.
- A designer engages in iterative design processes.

14.
Concepts: seek consensus, design consensus seeking, seeking consensus
- Designer seeks consensus or agreement from users.
- A designer seeks consensus or feedback on design elements.
- A designer seeks agreement on the best approach from others.

15.
Concepts: ensuring comprehensive feedback, ensuring comprehensive input
- The designer expresses the need to gather opinions to ensure comprehensive feedback.
- A designer ensures they have comprehensive input or opinions from users before proceeding with a task or decision.

16.
Concepts: opinion gathering, planning to gather opinions
- Designer or user plans to gather opinions or feedback from others.
- A designer announces or plans to gather opinions or feedback from users before proceeding with a design or development.

17.
Concepts: ask a question, question
- A user or designer asks a question.
- A user or designer asks a question, seeking information or clarification.

18.
Concepts: asks design question, designer inquiry
- Designer asks a question related to design or functionality.
- A designer asks a question or seeks feedback about a specific design element or feature.

19.
Concepts: clarification request, following up on design information, seeking design clarification, requesting clarification or assistance
- A designer asks for clarification on a user's issue or question.
- A user follows up on design information or asks for clarification.
- Designers or users seek clarification on specific design elements or features.
- User requests clarification or assistance from the designer.

20.
Concepts: invite further questions, request for additional information
- A designer invites users to ask more questions or provide feedback.
- Designer requests or seeks more information from a user.

21.
Concepts: clarifying options, clarify design choices
- A designer clarifies or explains options or possibilities.
- A designer clarifies design choices or decisions made during the development process.

22.
Concepts: design clarification, clarify technical detail, clarifying understanding
- Designer clarifies a specific design aspect to improve understanding.
- A designer clarifies a technical detail or concept.
- A designer clarifies or seeks clarification on a concept or feature.

23.
Concepts: explanation, promote understanding
- The designer provides an explanation or clarification about a feature or concept.
- A designer explains a concept or provides clarification to promote understanding.

24.
Concepts: address ambiguity, addresses ambiguity
- Designer clarifies or seeks clarification on a topic.
- Designer addresses ambiguity or clarifies a point.

25.
Concepts: promote clarity, precise communication, clarifying communication
- Designers promote clarity in communication by asking for clarification or providing examples.
- Designer or user ensures precise communication by clarifying or confirming information.
- Designer clarifies communication or ensures understanding.

26.
Concepts: detailed response, elaborate on response, response to clarification
- A designer provides a detailed response or explanation.
- Designer elaborates on a previous response or explanation.
- The designer responds to a request for clarification.

27.
Concepts: elaboration, providing additional information
- A designer provides additional information or clarification on a topic.
- A designer adds more specific information or criteria to an answer.

28.
Concepts: complexity comparison, feature complexity comparison
- A designer compares the complexity of different tasks or features.
- Designer compares the complexity of different features.

29.
Concepts: update complexity, designer 1 explains complexity of updates, complexity description
- A designer expresses the complexity of updates and provides a timeline.
- The designer explains the complexity or challenges involved in updates or development.
- A designer describes the complexity of an update or feature.

30.
Concepts: explaining complexity, communicate project complexity
- The designer explains the complexity of a task.
- Designer explains the complexity of a task or feature, implying a longer development time.

31.
Concepts: clarifying testing phases, clarify testing status
- Designers clarify testing phases.
- A designer clarifies the status of a feature or functionality, such as whether it is in testing or production.

32.
Concepts: outlining experimental limitations, discussing experimentation limitations
- A designer outlines limitations or constraints on the experimental scope of the app.
- Designer discusses the limitations of experimentation in the software
===
Here are the definitions for each code:

---
1.
Concepts: practical problem-solving, promotes practical application
Relationship: Practical problem-solving is facilitated by promoting practical application.
Criteria: Designers promote practical problem-solving using the application.
Phrase: Promoting practical problem-solving.

2.
Concepts: practical applications, software functionality
Relationship: Practical applications are derived from software functionality.
Criteria: A designer explains or illustrates the practical applications or benefits of the software.
Phrase: Illustrating practical applications.

3.
Concepts: explain practical applications, explaining practical applications, illustrates practical application
Relationship: Explaining practical applications involves illustrating how a feature can be applied.
Criteria: Designer explains how a feature can be applied in a practical context.
Phrase: Explaining practical applications.

4.
Concepts: feature explanation, explaining functionality, explain application functionality, functionality explanation, designer explains feature, describe component functionality, functional explanation
Relationship: Feature explanation involves explaining functionality and application functionality.
Criteria: Designer explains specific features or functionalities.
Phrase: Explaining features and functionalities.

5.
Concepts: provide examples, providing feature examples, provide feature example, illustrate feature functionality
Relationship: Providing examples illustrates feature functionality.
Criteria: The designer provides examples or illustrations to help explain a concept or feature.
Phrase: Providing examples.

6.
Concepts: proposing compromises, propose design compromise, propose compromise
Relationship: Proposing compromises involves suggesting alternative design solutions.
Criteria: Designers propose compromises.
Phrase: Proposing compromises.

7.
Concepts: propose design idea, designer proposes design change
Relationship: Proposing design ideas involves suggesting changes or improvements.
Criteria: Designer proposes or suggests a design idea or feature.
Phrase: Proposing design ideas.

8.
Concepts: self-correction, self-rebut the previous response
Relationship: Self-correction involves correcting or reconsidering previous statements.
Criteria: Designer corrects or reconsiders their previous statement.
Phrase: Self-correcting.

9.
Concepts: acknowledge future editing, acknowledging future manual editing
Relationship: Acknowledging future editing involves recognizing the possibility of future manual editing.
Criteria: A designer acknowledges future editing capabilities or features.
Phrase: Acknowledging future editing.

10.
Concepts: seeking improvement, considering design improvements
Relationship: Seeking improvement involves considering design improvements.
Criteria: A designer seeks improvement or feedback.
Phrase: Seeking improvement.

11.
Concepts: ongoing improvement, emphasize continuous improvement
Relationship: Ongoing improvement involves emphasizing continuous improvement.
Criteria: Designer emphasizes ongoing improvements.
Phrase: Emphasizing continuous improvement.

12.
Concepts: committing to improvement, commitment to improvement
Relationship: Committing to improvement involves expressing a commitment to continuous improvement.
Criteria: Designer expresses commitment to improvement.
Phrase: Committing to improvement.

13.
Concepts: design iteration, iterative design, iterative design discussion, engage in design iteration
Relationship: Design iteration involves refining or iterating on design decisions or ideas.
Criteria: Refining or iterating on design decisions or ideas.
Phrase: Engaging in design iteration.

14.
Concepts: seek consensus, design consensus seeking, seeking consensus
Relationship: Seeking consensus involves seeking agreement from users.
Criteria: Designer seeks consensus or agreement from users.
Phrase: Seeking consensus.

15.
Concepts: ensuring comprehensive feedback, ensuring comprehensive input
Relationship: Ensuring comprehensive feedback involves gathering opinions to ensure comprehensive input.
Criteria: The designer expresses the need to gather opinions to ensure comprehensive feedback.
Phrase: Ensuring comprehensive feedback.

16.
Concepts: opinion gathering, planning to gather opinions
Relationship: Opinion gathering involves planning to gather opinions or feedback from others.
Criteria: Designer or user plans to gather opinions or feedback from others.
Phrase: Gathering opinions.

17.
Concepts: ask a question, question
Relationship: Asking a question involves seeking information or clarification.
Criteria: A user or designer asks a question.
Phrase: Asking questions.

18.
Concepts: asks design question, designer inquiry
Relationship: Asking design questions involves seeking information or clarification on design elements.
Criteria: Designer asks a question related to design or functionality.
Phrase: Asking design questions.

19.
Concepts: clarification request, following up on design information, seeking design clarification, requesting clarification or assistance
Relationship: Clarification requests involve seeking clarification on specific design elements or features.
Criteria: A designer asks for clarification on a user's issue or question.
Phrase: Requesting clarification.

20.
Concepts: invite further questions, request for additional information
Relationship: Inviting further questions involves seeking more information from users.
Criteria: A designer invites users to ask more questions or provide feedback.
Phrase: Inviting further questions.

21.
Concepts: clarifying options, clarify design choices
Relationship: Clarifying options involves explaining design choices or decisions.
Criteria: A designer clarifies or explains options or possibilities.
Phrase: Clarifying options.

22.
Concepts: design clarification, clarify technical detail, clarifying understanding
Relationship: Design clarification involves clarifying technical details or concepts.
Criteria: Designer clarifies a specific design aspect to improve understanding.
Phrase: Clarifying design aspects.

23.
Concepts: explanation, promote understanding
Relationship: Explanations promote understanding by clarifying concepts or features.
Criteria: The designer provides an explanation or clarification about a feature or concept.
Phrase: Providing explanations.

24.
Concepts: address ambiguity, addresses ambiguity
Relationship: Addressing ambiguity involves clarifying or seeking clarification on a topic.
Criteria: Designer clarifies or seeks clarification on a topic.
Phrase: Addressing ambiguity.

25.
Concepts: promote clarity, precise communication, clarifying communication
Relationship: Promoting clarity involves ensuring precise communication by clarifying or confirming information.
Criteria: Designers promote clarity in communication by asking for clarification or providing examples.
Phrase: Promoting clarity.

26.
Concepts: detailed response, elaborate on response, response to clarification
Relationship: Detailed responses involve elaborating on previous responses or explanations.
Criteria: A designer provides a detailed response or explanation.
Phrase: Providing detailed responses.

27.
Concepts: elaboration, providing additional information
Relationship: Elaboration involves providing additional information or clarification on a topic.
Criteria: A designer provides additional information or clarification on a topic.
Phrase: Elaborating on responses.

28.
Concepts: complexity comparison, feature complexity comparison
Relationship: Complexity comparisons involve comparing the complexity of different tasks or features.
Criteria: A designer compares the complexity of different tasks or features.
Phrase: Comparing complexity.

29.
Concepts: update complexity, designer 1 explains complexity of updates, complexity description
Relationship: Update complexity involves explaining the complexity of updates and providing a timeline.
Criteria: A designer expresses the complexity of updates and provides a timeline.
Phrase: Describing update complexity.

30.
Concepts: explaining complexity, communicate project complexity
Relationship: Explaining complexity involves communicating the complexity of a task or feature.
Criteria: The designer explains the complexity of a task.
Phrase: Explaining complexity.

31.
Concepts: clarifying testing phases, clarify testing status
Relationship: Clarifying testing phases involves clarifying the status of a feature or functionality.
Criteria: Designers clarify testing phases.
Phrase: Clarifying testing phases.

32.
Concepts: outlining experimental limitations, discussing experimentation limitations
Relationship: Outlining experimental limitations involves discussing the limitations of experimentation in the software.
Criteria: A designer outlines limitations or constraints on the experimental scope of the app.
Phrase: Outlining experimental limitations.