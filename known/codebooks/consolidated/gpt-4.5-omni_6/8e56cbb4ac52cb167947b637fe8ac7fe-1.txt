You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (26 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
26. 
Concepts: {Repeat the input 26}
Relationship: {What is logical relationship between concepts in code 26, or N/A if not applicable}
Criteria: {Who did what, and how for code 26}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: user guidance, provide usage instructions
- Instructions or details provided to the community about software features and functionalities.
- Someone provides instructions or guidance on how to properly use a software component or feature.

2.
Concepts: addressing user concerns, give response to mitigate the concern
- Responses are aimed at addressing and alleviating user concerns.
- Designers providing responses to address specific user concerns.

3.
Concepts: explaining plans, confirming and providing rationale
- Participants explain their plans and the rationale behind certain decisions or features.
- Participants give or confirm the rationale behind decisions or actions.

4.
Concepts: gives reason for it, justifying feature requests
- Justifying the need for a particular feature or functionality.
- Users justify their feature requests with practical use cases or detailed explanations.

5.
Concepts: confirm the diagnose, confirming understanding
- Confirming or agreeing with a user's diagnosis or concern.
- Users confirm and agree with the shared information or points made by others.

6.
Concepts: acknowledgment, acknowledge help
- Users acknowledge previous help or tools, often preceding requests or thanks.
- User expresses appreciation or gratitude for assistance or updates.

7.
Concepts: showing appreciation, appreciating community support
- Users express thanks or appreciation for efforts within the community.
- Users or designers express gratitude and acknowledgment for community support.

8.
Concepts: use emoji for engagement, using emojis for communication
- User utilizes emojis to engage with the community or ask questions.
- Users engage in conversations using emojis or other non-verbal methods to express emotions or reactions.

9.
Concepts: seeking clarification, encouraging ongoing discussion
- Participants ask follow-up questions and seek or provide additional information to clarify discussions.
- Participants encourage others to ask more questions or engage in future discussions.

10.
Concepts: teacher identity, sharing teaching identity
- Inquiring about the teaching level or professional role within the educational sector.
- Users identify themselves as teachers and provide details on their grade level and years of experience.

11.
Concepts: providing information, disseminating information
- Participants share information or resources in response to questions or issues.
- Participants share factual knowledge or information with the community.

12.
Concepts: praising software features, sharing positive experiences
- Users express approval and positive feedback about the features or functionalities of the software.
- Users share positive feedback and their personal experiences related to the software’s impact.

13.
Concepts: discussing technical details, providing technical information
- Technical aspects and requirements of the software are discussed.
- Participants provide specific technical information about software compatibility or requirements.

14.
Concepts: discussing platform-specific features, discussing platform compatibility
- Specific features and platform-related issues are discussed.
- Participants confirm or inquire about the software’s compatibility with specific platforms.

15.
Concepts: improving simulation accuracy, detailing simulation enhancements
- Information about changes to improve simulation accuracy and specific adjustments is provided.
- Enhancements and features for simulated experiments are discussed or described.

16.
Concepts: update concern, inquiring about updates
- Person expresses concern or asks about the status of specific updates.
- Users ask about the status and timing of upcoming software updates.

17.
Concepts: acknowledging limitations, discussing technical limitations
- Existing software limitations are acknowledged and explained.
- Technical barriers and system limitations affecting software functionality are discussed.

18.
Concepts: announcing updates, developer announcement
- Designers inform the community about general updates and upcoming changes.
- Announcement of new features, components, adjustments, and bug fixes in the software made by the developer to the community.

19.
Concepts: managing project plans, planning future development
- Designer outlines the planned progression and future steps of development projects.
- Plans and goals for future design and development are outlined.

20.
Concepts: sharing update plans, outlining planned updates
- Designers share timelines and plans for upcoming software updates with users.
- Designers provide detailed information about planned updates and confirm specific timelines for future implementations.

21.
Concepts: suggesting improvements, suggesting software enhancements
- Participants suggest alternatives and additional improvements in support of software enhancement.
- Participants suggest improvements to the software to better meet educational needs.

22.
Concepts: providing user feedback, proposing usability improvements
- Users provide feedback, suggestions, or inquiries that impact software design.
- Users offer feedback and suggestions to improve software usability and functionality.

23.
Concepts: suggesting new features, soliciting feature requests
- Users suggest or request new features or improvements focused on enhancing usability or addressing specific needs.
- Designers invite users to suggest new features or improvements and gather input for future software iterations.

24.
Concepts: prioritize user feedback, incorporating user feedback
- Designer prioritizes integrating feedback from users.
- Designers actively seek, acknowledge, and incorporate user feedback into the design process.

25.
Concepts: responding to feedback, addressing user feedback
- Designers respond to feedback and user requests with relevant updates or implementation plans.
- Designers respond to user inquiries, suggestions, or feedback, indicating attentive communication.

26.
Concepts: taking feedback, accepting user suggestions
- Acceptance and responsiveness to user feedback and suggestions for future updates.
- Designers confirm they will accept and implement user requests and suggestions.
===
---
Definitions for each code (26 in total):
1.
Concepts: user guidance, provide usage instructions
Relationship: Both activities are aimed at helping the community understand how to use software features effectively.
Criteria: Someone provides clear instructions or guidance on how to use specific software features or components.
Phrase: Providing user guidance

2.
Concepts: addressing user concerns, give response to mitigate the concern
Relationship: Both activities involve responding to user concerns to mitigate or alleviate them.
Criteria: Designers respond to and seek to alleviate specific user concerns through targeted replies.
Phrase: Addressing user concerns

3.
Concepts: explaining plans, confirming and providing rationale
Relationship: Both activities involve sharing and confirming the rationale behind plans or decisions.
Criteria: Participants explain and confirm the rationale behind decisions or plans within the community.
Phrase: Explaining plans with rationale

4.
Concepts: gives reason for it, justifying feature requests
Relationship: Both activities involve providing a justification for requesting certain features.
Criteria: Users justify feature requests with practical explanations or use cases.
Phrase: Justifying feature requests

5.
Concepts: confirm the diagnose, confirming understanding
Relationship: Both activities involve confirming or agreeing with a diagnosis or piece of information.
Criteria: Users confirm and show understanding or agreement with diagnoses or shared information.
Phrase: Confirming understanding

6.
Concepts: acknowledgment, acknowledge help
Relationship: Both activities involve acknowledging and appreciating help or support received.
Criteria: Users acknowledge and express gratitude for help or tools provided by others.
Phrase: Acknowledging help

7.
Concepts: showing appreciation, appreciating community support
Relationship: Both activities involve expressing gratitude towards the community.
Criteria: Users express thanks or appreciation for efforts and support within the community.
Phrase: Appreciating community support

8.
Concepts: use emoji for engagement, using emojis for communication
Relationship: Both activities involve using emojis to communicate or engage with the community.
Criteria: Users employ emojis to engage and communicate with the community, expressing emotions or reactions.
Phrase: Using emojis for engagement

9.
Concepts: seeking clarification, encouraging ongoing discussion
Relationship: Both activities involve seeking or providing clarification to ensure ongoing discussion.
Criteria: Participants ask follow-up questions and encourage further discussion or seeking additional information.
Phrase: Seeking clarification

10.
Concepts: teacher identity, sharing teaching identity
Relationship: Both activities involve users identifying themselves as teachers and sharing their professional roles.
Criteria: Users reveal their teaching level, professional role, and experience within the educational sector.
Phrase: Sharing teaching identity

11.
Concepts: providing information, disseminating information
Relationship: Both activities involve sharing knowledge or resources with the community.
Criteria: Participants share factual information or resources in response to questions or issues raised.
Phrase: Disseminating information

12.
Concepts: praising software features, sharing positive experiences
Relationship: Both activities involve users expressing positive feedback about the software.
Criteria: Users share their approval and positive experiences related to the features or functionalities of the software.
Phrase: Praising software features

13.
Concepts: discussing technical details, providing technical information
Relationship: Both activities involve diving into the technical aspects and requirements of the software.
Criteria: Participants provide and discuss specific technical information concerning software requirements or compatibility.
Phrase: Discussing technical details

14.
Concepts: discussing platform-specific features, discussing platform compatibility
Relationship: Both activities involve addressing issues or features specific to particular platforms.
Criteria: Participants discuss and confirm software compatibility and features specific to certain platforms.
Phrase: Discussing platform-specific features

15.
Concepts: improving simulation accuracy, detailing simulation enhancements
Relationship: Both activities involve discussing improvements and adjustments to the simulation's accuracy.
Criteria: Information about changes and enhancements aimed at improving simulation accuracy is provided.
Phrase: Detailing simulation enhancements

16.
Concepts: update concern, inquiring about updates
Relationship: Both activities involve expressing concern or asking about the status of software updates.
Criteria: Users inquire about the status and timing of future software updates.
Phrase: Inquiring about updates

17.
Concepts: acknowledging limitations, discussing technical limitations
Relationship: Both activities involve recognizing and discussing existing technical limitations of the software.
Criteria: Technical barriers and limitations impacting software functionality are acknowledged and discussed.
Phrase: Acknowledging limitations

18.
Concepts: announcing updates, developer announcement
Relationship: Both activities involve developers informing the community about upcoming updates or changes.
Criteria: Developers announce new features, adjustments, and bug fixes to the community.
Phrase: Announcing updates

19.
Concepts: managing project plans, planning future development
Relationship: Both activities involve outlining the future progression and steps for development projects.
Criteria: Designers outline planned progression, goals, and future steps of development projects.
Phrase: Planning future development

20.
Concepts: sharing update plans, outlining planned updates
Relationship: Both activities involve designers sharing future update plans and timelines with users.
Criteria: Designers provide details and timelines for upcoming software updates.
Phrase: Outlining planned updates

21.
Concepts: suggesting improvements, suggesting software enhancements
Relationship: Both activities involve participants proposing enhancements for the software.
Criteria: Participants suggest alternatives and improvements to enhance the software.
Phrase: Suggesting software enhancements

22.
Concepts: providing user feedback, proposing usability improvements
Relationship: Both activities involve users offering feedback to improve software usability and functionality.
Criteria: Users provide feedback and suggestions to enhance software usability and functionality.
Phrase: Proposing usability improvements

23.
Concepts: suggesting new features, soliciting feature requests
Relationship: Both activities involve users suggesting and designers inviting requests for new features.
Criteria: Designers invite and gather user suggestions for new features or improvements.
Phrase: Soliciting feature requests

24.
Concepts: prioritize user feedback, incorporating user feedback
Relationship: Both activities involve designers integrating user feedback into the design process.
Criteria: Designers prioritize and incorporate user feedback into software design and development.
Phrase: Incorporating user feedback

25.
Concepts: responding to feedback, addressing user feedback
Relationship: Both activities involve designers responding to user feedback with updates or implementation plans.
Criteria: Designers address and respond to user inquiries, suggestions, or feedback.
Phrase: Addressing user feedback

26.
Concepts: taking feedback, accepting user suggestions
Relationship: Both activities involve designers accepting and planning to implement user suggestions.
Criteria: Designers confirm they will accept, plan, and implement future updates based on user suggestions.
Phrase: Accepting user suggestions
---