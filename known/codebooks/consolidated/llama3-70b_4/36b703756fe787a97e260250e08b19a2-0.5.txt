You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: considering user modes, considering user experience
- Designer considers different user modes or scenarios.
- A designer considers user experience in different modes or scenarios.

2.
Concepts: considering user environments, considering multiple use cases
- A designer considers diverse user environments or scenarios.
- A designer considers a wide range of use cases and hardware environments.

3.
Concepts: suggesting manual adjustments, highlighting manual adjustments
- A designer offers or suggests manual adjustment options for the software.
- A designer highlights manual adjustment options or workarounds.

4.
Concepts: providing flexibility, demonstrating design flexibility
- Designer provides flexibility or options for users.
- A designer demonstrates flexibility in the design process.

5.
Concepts: highlighting ideal software components, highlighting innovative software features, highlighting and outlining software features
- A designer highlights the ideal features or components of the Physics Lab software.
- A designer highlights and reiterates the innovative features of the Physics Lab software.
- A designer highlights and outlines the features and functionality of the Physics Lab software.

6.
Concepts: highlights benefits, demonstrating software value
- Designer highlights software benefits.
- Designer highlights the value or benefits of the software.

7.
Concepts: showcases functionality, illustrates software capabilities
- Designer showcases software functionality.
- Designer illustrates the capabilities or potential uses of the software.

8.
Concepts: updating software features, introduces new features
- A designer updates software features.
- Designer introduces new software features or functionalities.

9.
Concepts: explains bidirectional conversion, explaining bidirectional conversion benefits
- Designer explains bidirectional conversion.
- A designer explains the benefits or advantages of a feature (bidirectional conversion).

10.
Concepts: explaining purpose, explaining intention of app design
- Designers explain the purpose or intention behind features or functionalities.
- The designer explains the intention behind the application's design.

11.
Concepts: explaining design philosophy, demonstrating design principles
- A designer explains or discusses the design goals or philosophy behind a product.
- A designer discusses or explains the underlying design principles of the product.

12.
Concepts: providing design rationale, justifying design decisions
- A designer provides a reason or explanation for a design choice or decision.
- A designer explains or justifies a design decision, providing context or rationale.

13.
Concepts: verifies understanding, clarifying understanding
- Designer verifies understanding or seeks clarification about an idea or concept.
- Designers seek or provide clarification on concepts or ideas to ensure understanding.

14.
Concepts: clarifies technical aspects, explains technical requirements
- Designer provides technical information.
- Designer provides technical specifications.

15.
Concepts: provides feature explanations, explains feature significance
- Designer provides feature details.
- Designer explains feature significance.

16.
Concepts: confirms a common practice, confirming common practices
- A user confirms or agrees with a common style or practice.
- A user confirms a common practice or style in circuit diagrams.

17.
Concepts: asserts authority, establishing authority
- A designer asserts authority or expertise in a specific area.
- Designer establishes authority or expertise in their development decisions or plans.

18.
Concepts: acknowledging input, acknowledging user experience
- The designer acknowledges user input, feedback, or suggestions.
- The designer acknowledges a user's experience or feedback.

19.
Concepts: agrees with a design idea, validates a designer's idea
- A user or designer agrees with a design idea.
- A user validates or supports a designer's idea or perspective.

20.
Concepts: expresses acknowledgement, acknowledging designer's understanding
- Users or designers express acknowledgement or agreement.
- A user acknowledges or confirms the designer's understanding, usually with a simple "yes" or agreement.

21.
Concepts: affirms a statement, expresses agreement, confirms agreement
- A user affirms or agrees with a previous statement.
- A user agrees with or confirms a statement or idea.
- A person confirms or agrees with a statement or question.

22.
Concepts: confirms finding a resource, confirming download information
- A user confirms finding a resource or information.
- A user confirms finding download information or resources.

23.
Concepts: shares personal story, shares a personal experience
- User shares a personal story or anecdote related to software usage.
- A user shares a personal experience or anecdote related to the software or its use.

24.
Concepts: sharing feedback, sharing user experiences
- A user shares their experience or opinion about the software's performance.
- A user shares a personal experience or opinion about a product or feature.

25.
Concepts: praising software, expressing positive feedback, sharing positive experience
- A user expresses positive feedback or praise about the software.
- A user provides positive reviews or feedback about the software.

26.
Concepts: feeling satisfied, praising simulation effect
- A user expresses satisfaction or gratitude towards the simulation or its features.
- A user praises the simulation effect of the software.

27.
Concepts: appreciating features, praising software design, expressing admiration
- A user expresses appreciation for a specific software feature.
- A user praises or appreciates software design or aesthetics.
- A user expresses admiration or appreciation for a feature or design.

28.
Concepts: comparison, comparing to other tools
- Users compare the Physics Lab software to other software or tools.
- Users compare the application to other tools or software.

29.
Concepts: evaluates software, appreciating practicality
- User evaluates the software, mentioning its practicality and convenience.
- A user appreciates the practicality or usability of the software.

30.
Concepts: acknowledges receipt, acknowledges resources
- A user acknowledges receipt of information or resources.
- A user acknowledges receipt of resources or support.

31.
Concepts: paying respect to experts, paying homage to experts
- A user shows respect for expertise or authority.
- Users pay homage to experts or acknowledge their contributions.

32.
Concepts: expressing interest, expressing interest in topics
- A user expresses interest or enthusiasm for a topic or feature.
- A user expresses interest in specific topics or features.
===
Here are the definitions for each code:

---
1.
Concepts: considering user modes, considering user experience
Relationship: The designer considers user modes and experience as interconnected aspects of the design process.
Criteria: A designer considers user modes and experience to create a user-centered design.
Phrase: Considering user modes and experience.

2.
Concepts: considering user environments, considering multiple use cases
Relationship: The designer considers user environments and multiple use cases as essential factors in designing a versatile product.
Criteria: A designer considers diverse user environments and multiple use cases to create a flexible design.
Phrase: Considering user environments and use cases.

3.
Concepts: suggesting manual adjustments, highlighting manual adjustments
Relationship: The designer suggests manual adjustments as a solution and highlights them to ensure user awareness.
Criteria: A designer suggests and highlights manual adjustment options for users.
Phrase: Suggesting and highlighting manual adjustments.

4.
Concepts: providing flexibility, demonstrating design flexibility
Relationship: The designer provides flexibility as a design principle and demonstrates it to showcase the design's adaptability.
Criteria: A designer provides and demonstrates flexibility in the design process.
Phrase: Providing and demonstrating flexibility.

5.
Concepts: highlighting ideal software components, highlighting innovative software features, highlighting and outlining software features
Relationship: The designer highlights ideal components, innovative features, and outlines software features to showcase the product's capabilities.
Criteria: A designer highlights and outlines software features and components.
Phrase: Highlighting software features and components.

6.
Concepts: highlights benefits, demonstrating software value
Relationship: The designer highlights benefits to demonstrate the software's value and importance.
Criteria: A designer highlights software benefits to demonstrate its value.
Phrase: Highlighting software benefits.

7.
Concepts: showcases functionality, illustrates software capabilities
Relationship: The designer showcases functionality and illustrates capabilities to demonstrate the software's potential.
Criteria: A designer showcases and illustrates software functionality and capabilities.
Phrase: Showcasing software functionality.

8.
Concepts: updating software features, introduces new features
Relationship: The designer updates features and introduces new ones to improve the software's performance and capabilities.
Criteria: A designer updates and introduces new software features.
Phrase: Updating and introducing new features.

9.
Concepts: explains bidirectional conversion, explaining bidirectional conversion benefits
Relationship: The designer explains bidirectional conversion and its benefits to ensure user understanding.
Criteria: A designer explains bidirectional conversion and its benefits.
Phrase: Explaining bidirectional conversion.

10.
Concepts: explaining purpose, explaining intention of app design
Relationship: The designer explains the purpose and intention behind the design to ensure user understanding.
Criteria: A designer explains the purpose and intention behind the design.
Phrase: Explaining design purpose and intention.

11.
Concepts: explaining design philosophy, demonstrating design principles
Relationship: The designer explains the design philosophy and demonstrates principles to showcase the design's underlying values.
Criteria: A designer explains and demonstrates design philosophy and principles.
Phrase: Explaining design philosophy.

12.
Concepts: providing design rationale, justifying design decisions
Relationship: The designer provides rationale and justifies decisions to ensure transparency and accountability.
Criteria: A designer provides rationale and justifies design decisions.
Phrase: Providing design rationale.

13.
Concepts: verifies understanding, clarifying understanding
Relationship: The designer verifies understanding and clarifies concepts to ensure mutual understanding.
Criteria: A designer verifies and clarifies understanding.
Phrase: Verifying and clarifying understanding.

14.
Concepts: clarifies technical aspects, explains technical requirements
Relationship: The designer clarifies technical aspects and explains requirements to ensure user understanding.
Criteria: A designer clarifies technical aspects and explains requirements.
Phrase: Clarifying technical aspects.

15.
Concepts: provides feature explanations, explains feature significance
Relationship: The designer provides explanations and explains significance to ensure user understanding of features.
Criteria: A designer provides feature explanations and explains their significance.
Phrase: Providing feature explanations.

16.
Concepts: confirms a common practice, confirming common practices
Relationship: The user confirms common practices as a way of acknowledging established standards.
Criteria: A user confirms common practices or styles.
Phrase: Confirming common practices.

17.
Concepts: asserts authority, establishing authority
Relationship: The designer asserts authority and establishes expertise to gain user trust.
Criteria: A designer asserts and establishes authority or expertise.
Phrase: Asserting authority.

18.
Concepts: acknowledging input, acknowledging user experience
Relationship: The designer acknowledges input and user experience to show appreciation for user feedback.
Criteria: A designer acknowledges user input and experience.
Phrase: Acknowledging user input.

19.
Concepts: agrees with a design idea, validates a designer's idea
Relationship: The user agrees with a design idea and validates the designer's perspective.
Criteria: A user agrees with and validates a design idea.
Phrase: Agreeing with a design idea.

20.
Concepts: expresses acknowledgement, acknowledging designer's understanding
Relationship: The user expresses acknowledgement to confirm the designer's understanding.
Criteria: A user expresses acknowledgement or agreement.
Phrase: Expressing acknowledgement.

21.
Concepts: affirms a statement, expresses agreement, confirms agreement
Relationship: The user affirms, agrees, and confirms statements to show consensus.
Criteria: A user affirms, agrees, and confirms statements or ideas.
Phrase: Affirming agreement.

22.
Concepts: confirms finding a resource, confirming download information
Relationship: The user confirms finding resources and download information to show successful access.
Criteria: A user confirms finding resources or download information.
Phrase: Confirming resource access.

23.
Concepts: shares personal story, shares a personal experience
Relationship: The user shares personal stories and experiences to provide context and insights.
Criteria: A user shares personal stories or experiences.
Phrase: Sharing personal experiences.

24.
Concepts: sharing feedback, sharing user experiences
Relationship: The user shares feedback and experiences to provide insights and opinions.
Criteria: A user shares feedback and experiences.
Phrase: Sharing feedback and experiences.

25.
Concepts: praising software, expressing positive feedback, sharing positive experience
Relationship: The user praises software, expresses positive feedback, and shares positive experiences to show appreciation.
Criteria: A user praises software and shares positive experiences.
Phrase: Praising software.

26.
Concepts: feeling satisfied, praising simulation effect
Relationship: The user feels satisfied and praises the simulation effect to show appreciation for the software's performance.
Criteria: A user feels satisfied and praises the simulation effect.
Phrase: Praising simulation effect.

27.
Concepts: appreciating features, praising software design, expressing admiration
Relationship: The user appreciates features, praises design, and expresses admiration to show appreciation for the software's quality.
Criteria: A user appreciates features and praises software design.
Phrase: Appreciating software features.

28.
Concepts: comparison, comparing to other tools
Relationship: The user compares the software to other tools to evaluate its performance and capabilities.
Criteria: A user compares the software to other tools or software.
Phrase: Comparing to other tools.

29.
Concepts: evaluates software, appreciating practicality
Relationship: The user evaluates the software and appreciates its practicality to show understanding of its value.
Criteria: A user evaluates software and appreciates its practicality.
Phrase: Evaluating software practicality.

30.
Concepts: acknowledges receipt, acknowledges resources
Relationship: The user acknowledges receipt of resources and information to show appreciation.
Criteria: A user acknowledges receipt of resources or information.
Phrase: Acknowledging receipt.

31.
Concepts: paying respect to experts, paying homage to experts
Relationship: The user pays respect and homage to experts to show appreciation for their contributions.
Criteria: A user pays respect to experts or acknowledges their contributions.
Phrase: Paying respect to experts.

32.
Concepts: expressing interest, expressing interest in topics
Relationship: The user expresses interest in topics and features to show enthusiasm and engagement.
Criteria: A user expresses interest in topics or features.
Phrase: Expressing interest.