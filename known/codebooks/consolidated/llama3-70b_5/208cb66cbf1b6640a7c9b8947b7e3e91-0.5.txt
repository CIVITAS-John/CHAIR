You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (18 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
18. 
Concepts: {Repeat the input 18}
Relationship: {What is logical relationship between concepts in code 18, or N/A if not applicable}
Criteria: {Who did what, and how for code 18}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: foster open communication, promoting problem-solving and feedback
- Designers foster open communication.
- Designers promote problem-solving and feedback, fostering a supportive environment.

2.
Concepts: enhancing user satisfaction, enhancing software relevance
- Designers enhance the user experience to increase satisfaction.
- Designers enhance the relevance or applicability of their designs, making them more useful to users.

3.
Concepts: ensuring accuracy, emphasize design integrity
- Designers ensure the accuracy of information or software functionality.
- Designers emphasize design integrity, quality commitment, and demonstrate thoroughness, emphasizing attention to detail in design.

4.
Concepts: explains design intention and philosophy, clarifies purpose and explains intentions
- A designer explains the intention or design principles behind the app, and explains design philosophy or rationale.
- A designer clarifies the purpose or intention behind a feature or update, and explains the intention behind a question or action.

5.
Concepts: promote educational value, promoting practical applications
- A designer or user promotes the educational value or utility of the software.
- Designers promote practical applications of the software, encouraging users to use it for problem-solving.

6.
Concepts: theorizing about compatibility, ensure compatibility
- A designer theorizes about the compatibility of a system.
- Designers ensure compatibility and consider future compatibility, suggesting solutions for addressing compatibility issues.

7.
Concepts: ask technical questions, inquire about infrastructure and technical requirements
- Users ask technical questions to designers.
- Users or designers inquire about the infrastructure or technical capabilities and discuss or inquire about technical requirements or conditions.

8.
Concepts: considering user needs, aligning with user needs
- Designers acknowledge and address diverse user needs and consider accessibility in software development.
- Designers align software capabilities with user needs or requirements, connecting features to user needs.

9.
Concepts: offer help, willingness to support
- Designers offer help and support to users, responding to feedback or concerns.
- A designer expresses willingness to support users' needs or requests.

10.
Concepts: suggesting refinements, suggest improvements
- A user suggests refinement or improvement.
- A user provides suggestions or design input for improvements.

11.
Concepts: provides constructive feedback, provide usability feedback
- A user provides specific feedback or suggestions.
- A user provides feedback on features or shares their experience, highlighting usability issues.

12.
Concepts: share personal context, share personal experiences
- Users share personal or broader context to facilitate understanding.
- Users share personal anecdotes or experiences related to the online community.

13.
Concepts: encouraging community communication, encourage community participation
- Users encourage communication among community members to empower initiative.
- Users encourage discussions to engage others in the community and encourage others to participate.

14.
Concepts: dialogue engagement, engaging in community dialogue
- Engaging in dialogue or conversation with others
- Engaging in conversation or dialogue with the community.

15.
Concepts: expressiveness, conveying emotions visually
- A user or designer expresses emotions or personality through words or emojis.
- Users express enthusiasm or playfulness through emojis to engage with others.

16.
Concepts: respond to greeting, respond warmly
- Respond to a greeting or salutation.
- Designers respond in a warm and friendly tone to greetings and extend a warm welcome.

17.
Concepts: express software appreciation, celebrating and acknowledging progress
- A user expresses appreciation for the software's effectiveness or features.
- A user celebrates progress or achievement and acknowledges or appreciates the progress made on the software.

18.
Concepts: confirms feature updates, confirm sharing of updates
- Designers confirm feature implementation to users.
- The designer confirms sharing of updates or resources.
===
Here are the definitions for each code:

---
1.
Concepts: foster open communication, promoting problem-solving and feedback
Relationship: These concepts are interconnected as open communication enables problem-solving and feedback.
Criteria: Designers create an environment that encourages open communication, problem-solving, and feedback.
Phrase: Fostering open communication and collaborative problem-solving.

2.
Concepts: enhancing user satisfaction, enhancing software relevance
Relationship: These concepts are related as enhancing user satisfaction is achieved by enhancing software relevance.
Criteria: Designers improve user satisfaction by making the software more relevant and useful.
Phrase: Enhancing user satisfaction through software relevance.

3.
Concepts: ensuring accuracy, emphasize design integrity
Relationship: These concepts are interconnected as ensuring accuracy is a key aspect of design integrity.
Criteria: Designers prioritize accuracy and design integrity in their work.
Phrase: Ensuring accuracy and design integrity.

4.
Concepts: explains design intention and philosophy, clarifies purpose and explains intentions
Relationship: These concepts are related as explaining design intention and philosophy clarifies the purpose and intentions.
Criteria: Designers clearly explain the design intention, philosophy, and purpose behind their work.
Phrase: Clarifying design intention and philosophy.

5.
Concepts: promote educational value, promoting practical applications
Relationship: These concepts are related as promoting educational value is achieved by promoting practical applications.
Criteria: Designers highlight the educational value of the software by promoting its practical applications.
Phrase: Promoting educational value through practical applications.

6.
Concepts: theorizing about compatibility, ensure compatibility
Relationship: These concepts are interconnected as theorizing about compatibility informs ensuring compatibility.
Criteria: Designers consider compatibility and ensure that the software is compatible with various systems.
Phrase: Ensuring compatibility through theoretical consideration.

7.
Concepts: ask technical questions, inquire about infrastructure and technical requirements
Relationship: These concepts are related as asking technical questions informs inquiring about infrastructure and technical requirements.
Criteria: Users and designers ask technical questions and inquire about infrastructure and technical requirements.
Phrase: Inquiring about technical requirements and infrastructure.

8.
Concepts: considering user needs, aligning with user needs
Relationship: These concepts are interconnected as considering user needs informs aligning with user needs.
Criteria: Designers consider and align the software with diverse user needs and requirements.
Phrase: Aligning software with user needs.

9.
Concepts: offer help, willingness to support
Relationship: These concepts are related as offering help demonstrates willingness to support.
Criteria: Designers offer help and express willingness to support users' needs.
Phrase: Offering help and support.

10.
Concepts: suggesting refinements, suggest improvements
Relationship: These concepts are related as suggesting refinements informs suggesting improvements.
Criteria: Users suggest refinements and improvements to the software.
Phrase: Suggesting refinements and improvements.

11.
Concepts: provides constructive feedback, provide usability feedback
Relationship: These concepts are related as providing constructive feedback informs providing usability feedback.
Criteria: Users provide specific and usability-focused feedback to improve the software.
Phrase: Providing constructive and usability feedback.

12.
Concepts: share personal context, share personal experiences
Relationship: These concepts are related as sharing personal context informs sharing personal experiences.
Criteria: Users share personal context and experiences to facilitate understanding and connection.
Phrase: Sharing personal context and experiences.

13.
Concepts: encouraging community communication, encourage community participation
Relationship: These concepts are interconnected as encouraging community communication enables community participation.
Criteria: Users encourage communication and participation within the online community.
Phrase: Encouraging community communication and participation.

14.
Concepts: dialogue engagement, engaging in community dialogue
Relationship: These concepts are related as dialogue engagement informs engaging in community dialogue.
Criteria: Users engage in dialogue and conversation with others in the online community.
Phrase: Engaging in community dialogue.

15.
Concepts: expressiveness, conveying emotions visually
Relationship: These concepts are related as expressiveness is achieved by conveying emotions visually.
Criteria: Users express emotions and personality through words and emojis.
Phrase: Conveying emotions visually.

16.
Concepts: respond to greeting, respond warmly
Relationship: These concepts are related as responding to a greeting informs responding warmly.
Criteria: Designers respond warmly to greetings and extend a welcoming tone.
Phrase: Responding warmly to greetings.

17.
Concepts: express software appreciation, celebrating and acknowledging progress
Relationship: These concepts are related as expressing software appreciation informs celebrating and acknowledging progress.
Criteria: Users express appreciation for the software's effectiveness and celebrate progress.
Phrase: Expressing appreciation and celebrating progress.

18.
Concepts: confirms feature updates, confirm sharing of updates
Relationship: These concepts are related as confirming feature updates informs confirming sharing of updates.
Criteria: Designers confirm feature implementation and sharing of updates with users.
Phrase: Confirming feature updates and sharing.