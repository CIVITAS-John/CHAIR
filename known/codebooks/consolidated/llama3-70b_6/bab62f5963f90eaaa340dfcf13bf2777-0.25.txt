You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: explain current limitations, explain current version's limitation
- Designers explain or describe current limitations or constraints.
- A limitation or constraint of the current version is explained.

2.
Concepts: acknowledge limitations, recognize usability limitation, address technical limitations
- A designer acknowledges limitations or potential issues with a feature or software.
- A limitation or constraint of the software or feature is recognized.
- Technical limitations or constraints are acknowledged or addressed.

3.
Concepts: platform limitation, adapt to platform specific constraints
- Designers mention limitations or restrictions of the platform.
- Designer adapts to platform-specific constraints or limitations.

4.
Concepts: system compatibility discussion, answer about compatibility
- Discussing system compatibility, including potential limitations or requirements.
- Discussions or clarifications about the compatibility of the software with different operating systems or devices.

5.
Concepts: theorize compatibility, consider future compatibility
- A designer theorizes about the compatibility of a feature or software with different systems.
- Designer considers the compatibility of the software with different systems or devices.

6.
Concepts: assure compatibility, suggesting checking compatibility of the system, inform about system compatibility
- Designers assure compatibility with certain devices or systems.
- The designer suggests checking the compatibility of the system or software.
- The designer informs users about the system's compatibility with different devices or operating systems.

7.
Concepts: platform question, inquire about specific platform, seek platform information
- User asks about the availability or functionality of the application on a specific platform.
- The designer inquires about a specific platform or device.
- Inquiring about the availability or features of the software on a specific platform.

8.
Concepts: platform specification, platform-specific update
- The discussion revolves around a specific platform, such as PC or Android.
- Discussing updates or changes specific to a particular platform (e.g., iOS, Android, PC).

9.
Concepts: sharing info on app release, platform-specific information
- Information is shared about the release or availability of the Physics Lab software on a specific platform.
- Information is shared about the Physics Lab software that is specific to a particular platform (e.g. iOS, Windows).

10.
Concepts: self-solved issue, finding self-help solutions
- User expresses gratitude for finding a solution on their own.
- A user finds a solution or resource on their own.

11.
Concepts: appreciate design effort, acknowledge craftsmanship
- Users express appreciation for design effort or craftsmanship.
- A user acknowledges or appreciates the craftsmanship or attention to detail in Physics Lab.

12.
Concepts: acknowledge feature, appreciate features
- Acknowledging or recognizing a feature or functionality.
- A user expresses appreciation or admiration for a specific feature.

13.
Concepts: comparative feedback, comparison with other applications, comparison to similar apps
- The user is comparing the software to other similar products or services.
- Users compare Physics Lab with other applications or software.
- Comparing the application or feature to similar ones.

14.
Concepts: student engagement, describe students' positive responses in class
- Comments or feedback about the engagement or interest of students in using the software.
- A positive response or reaction to the software is shared.

15.
Concepts: user experience and impact, sharing user experience feedback
- Users sharing their experiences and the impact of the software on their teaching or learning.
- A user shares their experience or opinions about using the software.

16.
Concepts: story sharing, sharing positive classroom experiences
- A user shares a personal anecdote or story related to Physics Lab or education.
- A user shares a positive experience or story about using Physics Lab in the classroom.

17.
Concepts: simulation accuracy, simulation enhancement
- A designer discusses the accuracy or realism of a simulation or feature.
- The designer discusses enhancing or improving simulation features.

18.
Concepts: component explanation, explanation of upcoming features
- Explaining the capabilities or features of a new component or aspect of the Physics Lab software.
- The designer explains or describes upcoming features or updates to the Physics Lab.

19.
Concepts: explain version type, update clarification
- The designer explains or clarifies the type or version of the Physics Lab.
- The designer clarifies or updates information about a specific aspect of the Physics Lab.

20.
Concepts: product iteration, providing product updates
- The designer mentions or discusses the iteration or development process of the Physics Lab application.
- Designers provide updates or technical changes to the Physics Lab tool.

21.
Concepts: suggest new features, feature requests for physics experiments
- Suggestions are made for new features or improvements to the Physics Lab software.
- User requests features or functionalities for physics experiments.

22.
Concepts: design principles, explain design philosophy
- A designer discusses the underlying principles or philosophy behind the software's design.
- The underlying principles and approaches guiding the design and development of the product.

23.
Concepts: explaining design goals, design intention
- The designer explains the design goals or philosophy behind the Physics Lab.
- Explaining the intention or design philosophy behind a particular feature or aspect of the Physics Lab software.

24.
Concepts: technical clarification, provide technical details
- The designer provides technical clarification or explanations.
- The designer is providing technical details or explanations about the software or its features.

25.
Concepts: technical detail, providing specifics
- Providing technical details or specifications about features or components.
- Providing specific details or information about a system or platform.

26.
Concepts: problem inquiry, inquire about specific issues
- Inquiring about problems or issues encountered by users during the use of the Physics Lab software.
- Inquiring about specific issues or problems encountered during use.

27.
Concepts: technical issue, technical inquiry
- A user reports a technical issue or problem.
- Instances where users ask technical questions about the platform, indicating areas of user interest or potential issues.

28.
Concepts: request usage support, requesting technical help
- A user requests support or guidance for using the Physics Lab software.
- A user asks for help or assistance with using the software.

29.
Concepts: troubleshooting, problem analysis
- An issue or problem is identified and troubleshooting is initiated.
- Analyzing or troubleshooting a problem or issue, often through technical explanations or hypotheses.

30.
Concepts: confirm the diagnose, offers a diagnose for the problem
- A user confirms a diagnosis or problem.
- The designer offers a diagnosis or explanation for a problem or issue reported by a user.

31.
Concepts: design question, technical question
- The designer is asking a question about the design or functionality of the software.
- The user is asking a technical question about the software or its functionality.

32.
Concepts: inquiring about usage, ask a question about the app
- A user asks for clarification on how to use a feature.
- User asks a question about the application or its functionality.
===
Here are the definitions for each code:

---
1.
Concepts: explain current limitations, explain current version's limitation
Relationship: The concepts are related as they both describe the designer's action of explaining the limitations of the current version.
Criteria: Designers explain the limitations of the current version of the software.
Phrase: Explaining current limitations.

2.
Concepts: acknowledge limitations, recognize usability limitation, address technical limitations
Relationship: The concepts are related as they all describe the designer's acknowledgment or recognition of limitations.
Criteria: Designers acknowledge or address limitations or potential issues with the software.
Phrase: Acknowledging limitations.

3.
Concepts: platform limitation, adapt to platform specific constraints
Relationship: The concepts are related as they both describe the designer's action of adapting to platform limitations.
Criteria: Designers adapt to platform-specific constraints or limitations.
Phrase: Adapting to platform limitations.

4.
Concepts: system compatibility discussion, answer about compatibility
Relationship: The concepts are related as they both describe discussions or clarifications about system compatibility.
Criteria: Discussions or clarifications about the compatibility of the software with different operating systems or devices.
Phrase: Discussing system compatibility.

5.
Concepts: theorize compatibility, consider future compatibility
Relationship: The concepts are related as they both describe the designer's consideration of compatibility.
Criteria: Designers theorize or consider the compatibility of the software with different systems.
Phrase: Theorizing about compatibility.

6.
Concepts: assure compatibility, suggesting checking compatibility of the system, inform about system compatibility
Relationship: The concepts are related as they all describe the designer's action of assuring or informing about compatibility.
Criteria: Designers assure or inform users about the system's compatibility with different devices or operating systems.
Phrase: Assuring compatibility.

7.
Concepts: platform question, inquire about specific platform, seek platform information
Relationship: The concepts are related as they all describe users' inquiries about specific platforms.
Criteria: Users ask about the availability or functionality of the application on a specific platform.
Phrase: Inquiring about platforms.

8.
Concepts: platform specification, platform-specific update
Relationship: The concepts are related as they both describe discussions or updates specific to a particular platform.
Criteria: Discussions or updates specific to a particular platform (e.g., iOS, Android, PC).
Phrase: Discussing platform specifications.

9.
Concepts: sharing info on app release, platform-specific information
Relationship: The concepts are related as they both describe sharing information about the software on specific platforms.
Criteria: Information is shared about the release or availability of the Physics Lab software on a specific platform.
Phrase: Sharing platform-specific information.

10.
Concepts: self-solved issue, finding self-help solutions
Relationship: The concepts are related as they both describe users finding solutions on their own.
Criteria: Users find solutions or resources on their own.
Phrase: Finding self-help solutions.

11.
Concepts: appreciate design effort, acknowledge craftsmanship
Relationship: The concepts are related as they both describe users' appreciation for design effort or craftsmanship.
Criteria: Users express appreciation for design effort or craftsmanship.
Phrase: Appreciating design effort.

12.
Concepts: acknowledge feature, appreciate features
Relationship: The concepts are related as they both describe users' acknowledgment or appreciation for features.
Criteria: Users acknowledge or appreciate specific features.
Phrase: Acknowledging features.

13.
Concepts: comparative feedback, comparison with other applications, comparison to similar apps
Relationship: The concepts are related as they all describe users comparing the software to other similar products or services.
Criteria: Users compare Physics Lab with other applications or software.
Phrase: Providing comparative feedback.

14.
Concepts: student engagement, describe students' positive responses in class
Relationship: The concepts are related as they both describe positive responses or engagement of students.
Criteria: Comments or feedback about the engagement or interest of students in using the software.
Phrase: Describing student engagement.

15.
Concepts: user experience and impact, sharing user experience feedback
Relationship: The concepts are related as they both describe users sharing their experiences and the impact of the software.
Criteria: Users sharing their experiences and the impact of the software on their teaching or learning.
Phrase: Sharing user experiences.

16.
Concepts: story sharing, sharing positive classroom experiences
Relationship: The concepts are related as they both describe users sharing positive experiences or stories.
Criteria: A user shares a personal anecdote or story related to Physics Lab or education.
Phrase: Sharing stories.

17.
Concepts: simulation accuracy, simulation enhancement
Relationship: The concepts are related as they both describe the designer's action of discussing or improving simulation features.
Criteria: Designers discuss the accuracy or realism of a simulation or feature.
Phrase: Discussing simulation accuracy.

18.
Concepts: component explanation, explanation of upcoming features
Relationship: The concepts are related as they both describe the designer's explanation of features or components.
Criteria: Explaining the capabilities or features of a new component or aspect of the Physics Lab software.
Phrase: Explaining components.

19.
Concepts: explain version type, update clarification
Relationship: The concepts are related as they both describe the designer's explanation or clarification of version types or updates.
Criteria: Designers explain or clarify the type or version of the Physics Lab.
Phrase: Explaining version types.

20.
Concepts: product iteration, providing product updates
Relationship: The concepts are related as they both describe the designer's action of iterating or providing updates to the software.
Criteria: Designers provide updates or technical changes to the Physics Lab tool.
Phrase: Providing product updates.

21.
Concepts: suggest new features, feature requests for physics experiments
Relationship: The concepts are related as they both describe users suggesting or requesting new features.
Criteria: Suggestions are made for new features or improvements to the Physics Lab software.
Phrase: Suggesting new features.

22.
Concepts: design principles, explain design philosophy
Relationship: The concepts are related as they both describe the designer's explanation of design principles or philosophy.
Criteria: Designers discuss the underlying principles or philosophy behind the software's design.
Phrase: Explaining design principles.

23.
Concepts: explaining design goals, design intention
Relationship: The concepts are related as they both describe the designer's explanation of design goals or intentions.
Criteria: Designers explain the design goals or philosophy behind the Physics Lab.
Phrase: Explaining design goals.

24.
Concepts: technical clarification, provide technical details
Relationship: The concepts are related as they both describe the designer's action of providing technical clarification or explanations.
Criteria: Designers provide technical clarification or explanations.
Phrase: Providing technical clarification.

25.
Concepts: technical detail, providing specifics
Relationship: The concepts are related as they both describe the designer's action of providing technical details or specifications.
Criteria: Providing technical details or specifications about features or components.
Phrase: Providing technical details.

26.
Concepts: problem inquiry, inquire about specific issues
Relationship: The concepts are related as they both describe users inquiring about problems or issues.
Criteria: Inquiring about problems or issues encountered by users during the use of the Physics Lab software.
Phrase: Inquiring about problems.

27.
Concepts: technical issue, technical inquiry
Relationship: The concepts are related as they both describe users reporting technical issues or asking technical questions.
Criteria: A user reports a technical issue or problem.
Phrase: Reporting technical issues.

28.
Concepts: request usage support, requesting technical help
Relationship: The concepts are related as they both describe users requesting support or guidance for using the software.
Criteria: A user requests support or guidance for using the Physics Lab software.
Phrase: Requesting technical help.

29.
Concepts: troubleshooting, problem analysis
Relationship: The concepts are related as they both describe the process of identifying and analyzing problems.
Criteria: An issue or problem is identified and troubleshooting is initiated.
Phrase: Troubleshooting problems.

30.
Concepts: confirm the diagnose, offers a diagnose for the problem
Relationship: The concepts are related as they both describe the designer's action of confirming or offering a diagnosis for a problem.
Criteria: A user confirms a diagnosis or problem.
Phrase: Confirming diagnoses.

31.
Concepts: design question, technical question
Relationship: The concepts are related as they both describe users asking questions about the design or functionality of the software.
Criteria: The designer is asking a question about the design or functionality of the software.
Phrase: Asking design questions.

32.
Concepts: inquiring about usage, ask a question about the app
Relationship: The concepts are related as they both describe users asking questions about the application or its functionality.
Criteria: A user asks for clarification on how to use a feature.
Phrase: Inquiring about usage.