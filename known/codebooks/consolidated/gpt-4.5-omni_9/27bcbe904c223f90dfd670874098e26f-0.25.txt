You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (64 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
64. 
Concepts: {Repeat the input 64}
Relationship: {What is logical relationship between concepts in code 64, or N/A if not applicable}
Criteria: {Who did what, and how for code 64}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: professional background, professional background sharing
- A user provides information about their professional background.
- Users share their professional background to establish credibility and context.

2.
Concepts: explain situation, context explanation
- A user explains the situation or context of their problem.
- Users explaining the context or background of their situation.

3.
Concepts: contextualization of question, provide context for interest
- A user provides context for a question.
- A user provides context for their interest or question.

4.
Concepts: past incident, share past incident
- A user shares a past incident.
- Users share past incidents or experiences related to the use of the software.

5.
Concepts: teacher identification, introduce teacher identity
- A user identifies themselves as a teacher or discusses their teaching experience.
- A user introduces their teaching experience, including grade levels and years of service.

6.
Concepts: teaching experience, share teaching experience
- Users share their teaching experience or background.
- A user identifies their teaching experience, specifying the level or duration.
- A user shares their teaching experience.

7.
Concepts: prioritize user feedback, development prioritization feedback
- Designers prioritize user feedback in development plans.
- A developer or designer provides feedback on the prioritization of development tasks.

8.
Concepts: prioritization decision, development prioritization
- A designer discusses the prioritization of different sections of the software.
- Instances where designers discuss the prioritization of different features or sections to be developed.

9.
Concepts: feature roadmap, give a timeline of feature development
- A designer outlines the sequence of features to be developed.
- A designer provides a timeline for feature development.

10.
Concepts: update planning, potential update, future update plans
- A designer discusses planning for future updates.
- Designers discuss potential updates or compatibility issues.
- Designers discuss plans for future updates or improvements to the software.

11.
Concepts: future development plan, future planning and development
- A developer or designer shares information about future development plans or directions.
- A designer discusses future planning and development.

12.
Concepts: future planning, future design plan, future design plans/considerations
- Designers discuss future plans or potential features.
- A designer outlines plans for future design or feature development.
- A designer mentions future design plans or considerations.

13.
Concepts: current efforts, mention ongoing research
- A designer describes ongoing research or efforts.
- A designer mentions ongoing research related to the platform's features.

14.
Concepts: discussion of further interests, share potential future direction
- A designer discusses further interests or potential future projects.
- A designer shares their interest in exploring new subject areas or directions.

15.
Concepts: bug fixes, list feature updates and bug fixes, list new features, new components
- A designer lists bug fixes and new features.
- A designer lists feature updates and bug fixes in the software.
- A designer lists new features, components, adjustments, and bug fixes in the software.
- A designer lists new features, components, adjustments, and bug fixes in an update.

16.
Concepts: feature preview, upcoming features, explanation of upcoming features
- A designer shares a preview of upcoming updates or features.
- A designer lists features that will be included in future updates.
- A designer explains upcoming features or enhancements in detail.

17.
Concepts: confirm future feature, confirm future implementation
- A designer confirms that a future feature will be implemented.
- A designer confirms that a feature or update will be implemented in the future.

18.
Concepts: explaining plans, plan feature development, feature implementation
- A designer explains the plans for feature implementation.
- A designer mentions the future addition of a feature.
- A designer mentions the implementation of a feature in future updates.

19.
Concepts: version details, software version information
- Providing detailed information about software versions and updates.
- Informing users about the status or details of a software version.

20.
Concepts: update clarification, clarify version type
- A designer clarifies which version is being discussed.
- A designer clarifies the type or version of the software being discussed.

21.
Concepts: testing phase, clarify testing status
- A designer mentions that a version or feature is currently in the testing phase.
- A designer clarifies the current status of a feature or version being tested.

22.
Concepts: component update, provide status update
- A community member provides an update on component changes or additions.
- A community member provides an update on the status of a project or feature.

23.
Concepts: update communication, community communication
- Designers communicate updates or release schedules to the community.
- A designer communicates updates and releases to the community.

24.
Concepts: community update, community announcement
- Instances where designers provide updates or announcements about the software.
- Announcements about updates, features, or requests for community input.

25.
Concepts: software release, feature release
- Designers announce the release of a software version.
- Designers announce the release of new features or versions.

26.
Concepts: product iteration, new feature announcement, version details announcement, version update announcement, announce new version release
- A designer announces the release of a new version and its updates.
- A designer announces new features and updates in a specific version.
- A designer announces details of a specific software version.
- A designer announces a version update and its expected timeline.
- A designer announces the release of a new version.

27.
Concepts: update notification, inform about new version availability
- A designer notifies users about the availability of a new version.
- A designer informs users about the availability of a new version.

28.
Concepts: inform about changes, internal update
- A designer informs about changes in the software.
- A designer informs about changes or updates to the internal components of the software.

29.
Concepts: provide update, update information
- Designers provide updates about the software's version or status.
- A developer or designer informs users about the release of updates or new versions.

30.
Concepts: software update, software update announcement, announce component update
- A designer announces a software update and its details.
- Designers provide updates about the software versions and new features.
- A designer announces updates to specific components of the software.

31.
Concepts: update description, describe update scope
- A designer describes the scope or extent of an update.
- Designers describe the scope or extent of an update.

32.
Concepts: detail specific updates, detailed overview of update
- A designer details specific updates.
- A designer provides a detailed overview of an update.

33.
Concepts: product update, technical updates
- Instances where designers provide information about updates or changes to the Physics Lab software.
- Instances where designers provide updates or technical changes to the Physics Lab tool.

34.
Concepts: announcement, announcement of plans
- A designer makes an announcement about the development plan or updates.
- Designers announce plans for future updates or features.

35.
Concepts: announce upcoming updates, update announcement
- Designers announce upcoming updates or features.
- Instances where designers provide information about upcoming updates and new features.

36.
Concepts: updates, feature update
- Information about changes or new features in upcoming updates.
- Information about new features and updates being added to the product.
- Instances where designers announce new features, updates, or bug fixes based on user input.

37.
Concepts: answer to a question, user reassurance
- A designer reassures a user about the progress of a feature.
- A developer or designer reassures users about the progress or future availability of features.

38.
Concepts: promising it will realize, promise a future perfection of a feature
- A designer assures users that a feature will be realized in the future.
- A designer reassures users about the future perfection or optimization of a feature.

39.
Concepts: manage expectations, manage user expectations
- A designer manages user expectations about features and updates.
- A designer manages user expectations regarding feature availability.
- Designers manage user expectations regarding features or timelines.

40.
Concepts: delay explanation, give reason for delay
- Designers explain delays in updates or feature releases.
- Designers provide reasons for delays or incomplete features.

41.
Concepts: share update timeline, confirm upcoming update, confirm feature update
- Designers share the timeline for upcoming updates.
- Designers confirm the timeline for upcoming updates.
- A designer confirms that a feature update will occur and provides a timeline.

42.
Concepts: give timeline, give a timeline for release
- A designer provides a timeline for updates.
- A designer provides a timeline for a release.

43.
Concepts: update schedule, software update process
- A designer provides an update schedule for the software.
- A designer describes the process and timeline for software updates.

44.
Concepts: release schedule, communicate release plans
- Designers communicate the release schedule for updates.
- Designers communicate plans for software releases.

45.
Concepts: communicating progress, progress and plans communication
- Designers communicate progress on software development or updates.
- A developer or designer communicates progress and plans for future updates or features.

46.
Concepts: review status update, ios review status update
- A designer provides an update on the review status of the software.
- A designer provides an update on the review status of the iOS version.

47.
Concepts: release process, share info on app release
- A designer discusses the process and status of releasing the software on different platforms.
- A designer shares information about the release status of the app on different platforms.

48.
Concepts: visual update, share visual update
- A designer shares visual updates or images related to the platform.
- A designer shares a visual update or image related to the software.

49.
Concepts: share info about development update, share information about current feature development
- Designers share information about development updates.
- A designer shares information about current feature development.

50.
Concepts: outdated technology, share info about old systems
- A user mentions the outdated technology in their school.
- A user shares information about outdated computer systems in their school.

51.
Concepts: explain limitation, talk about limitation of the solution
- A designer explains a limitation or constraint of a feature.
- A designer talks about the limitations of a solution.

52.
Concepts: frustration, user frustration, frustration expression
- A user or designer expresses dissatisfaction or challenges with a system or process.
- A user expresses frustration with the limitations of their current computer system.
- A developer or designer expresses frustration with current limitations or issues.

53.
Concepts: hardware limitation suggestion, hardware limitation consideration
- A user considers hardware limitations and suggests relevant improvements.
- A user considers the limitations of hardware and suggests relevant improvements.

54.
Concepts: compatibility confirmation, system compatibility confirmation
- A designer confirms the compatibility of the software with a specific system.
- Designers confirm the compatibility of the software with different systems.

55.
Concepts: system compatibility, compatibility discussion
- A designer or user discusses the compatibility of the software with different systems.
- Designers and users discuss the compatibility of the software with different systems.

56.
Concepts: touch screen functionality, on-screen keyboard functionality
- A developer or designer discusses the functionality of touch screens or on-screen keyboards.
- Discussing the functionality of on-screen keyboards for touch screen devices.

57.
Concepts: improvement promise, commit to improvement
- Promising to improve the software based on user feedback.
- Designers commit to improving the software based on feedback.

58.
Concepts: software usability, usability discussion
- Users discuss the practical usability of the software.
- Discussing the usability or functionality of features.

59.
Concepts: context of use, usability and context of use
- Instances where users describe the specific contexts in which they use the software.
- Discussions about how the software is used in different contexts and its usability.

60.
Concepts: input methods, input methods discussion
- Designers discuss methods for inputting data into the software.
- A developer or designer discusses input methods or the need for certain input functionalities.

61.
Concepts: provide feature details, provide feature example
- A community member provides details about a feature's functionality.
- A community member gives an example to illustrate a feature's functions.

62.
Concepts: explain functionality, provide usage instructions
- A community member explains the functionality of a component.
- A community member provides instructions on how to use a feature or component.

63.
Concepts: technical support, technical support and guidance
- Instances where designers or users provide technical assistance or address technical issues.
- Instances where designers provide technical support or information about the software.
- Instances where designers provide technical support or guidance to users.

64.
Concepts: offer help, user support
- Designers offer help or assistance to users.
- Assistance and support provided by designers to help users effectively use the product.
===
---
Definitions for each code (64 in total):
1.
Concepts: professional background, professional background sharing
Relationship: Sharing professional background to establish credibility and context.
Criteria: Users share their professional background to provide context and establish credibility.
Phrase: Share professional background

2.
Concepts: explain situation, context explanation
Relationship: Explaining the situation to provide context.
Criteria: Users explain the situation or context of their problem.
Phrase: Explain situation context

3.
Concepts: contextualization of question, provide context for interest
Relationship: Providing context for questions or interests.
Criteria: Users provide context for their questions or interests.
Phrase: Provide question context

4.
Concepts: past incident, share past incident
Relationship: Sharing past incidents or experiences.
Criteria: Users share past incidents or experiences related to the use of the software.
Phrase: Share past incident

5.
Concepts: teacher identification, introduce teacher identity
Relationship: Identifying oneself as a teacher and discussing teaching experience.
Criteria: Users identify themselves as teachers and discuss their teaching experience.
Phrase: Introduce teacher identity

6.
Concepts: teaching experience, share teaching experience
Relationship: Sharing teaching experience or background.
Criteria: Users share their teaching experience, specifying the level or duration.
Phrase: Share teaching experience

7.
Concepts: prioritize user feedback, development prioritization feedback
Relationship: Prioritizing user feedback in development plans.
Criteria: Designers prioritize user feedback in their development plans.
Phrase: Prioritize user feedback

8.
Concepts: prioritization decision, development prioritization
Relationship: Discussing the prioritization of software development sections.
Criteria: Designers discuss the prioritization of different features or sections to be developed.
Phrase: Discuss development prioritization

9.
Concepts: feature roadmap, give a timeline of feature development
Relationship: Outlining the sequence and timeline of feature development.
Criteria: Designers outline the sequence and timeline for feature development.
Phrase: Outline feature roadmap

10.
Concepts: update planning, potential update, future update plans
Relationship: Discussing plans for future updates and improvements.
Criteria: Designers discuss planning for future updates and potential improvements.
Phrase: Discuss future update plans

11.
Concepts: future development plan, future planning and development
Relationship: Sharing information about future development plans.
Criteria: Designers share information about future development plans or directions.
Phrase: Share future development plan

12.
Concepts: future planning, future design plan, future design plans/considerations
Relationship: Discussing future plans or potential features.
Criteria: Designers discuss future plans or considerations for feature development.
Phrase: Discuss future design plans

13.
Concepts: current efforts, mention ongoing research
Relationship: Describing ongoing research or efforts.
Criteria: Designers describe ongoing research related to the platform's features.
Phrase: Describe ongoing research

14.
Concepts: discussion of further interests, share potential future direction
Relationship: Discussing further interests or potential future projects.
Criteria: Designers discuss further interests or potential future projects.
Phrase: Discuss potential future direction

15.
Concepts: bug fixes, list feature updates and bug fixes, list new features, new components
Relationship: Listing updates, new features, and bug fixes.
Criteria: Designers list new features, components, adjustments, and bug fixes in the software.
Phrase: List feature updates and bug fixes

16.
Concepts: feature preview, upcoming features, explanation of upcoming features
Relationship: Sharing and explaining upcoming features.
Criteria: Designers share and explain upcoming features or enhancements.
Phrase: Preview upcoming features

17.
Concepts: confirm future feature, confirm future implementation
Relationship: Confirming future feature implementation.
Criteria: Designers confirm that a future feature will be implemented.
Phrase: Confirm future feature

18.
Concepts: explaining plans, plan feature development, feature implementation
Relationship: Explaining plans for feature implementation.
Criteria: Designers explain the plans for feature implementation in future updates.
Phrase: Explain feature implementation plans

19.
Concepts: version details, software version information
Relationship: Providing detailed information about software versions.
Criteria: Designers provide detailed information about software versions and updates.
Phrase: Provide version details

20.
Concepts: update clarification, clarify version type
Relationship: Clarifying the type or version of the software.
Criteria: Designers clarify which version of the software is being discussed.
Phrase: Clarify version type

21.
Concepts: testing phase, clarify testing status
Relationship: Clarifying the testing status of a feature or version.
Criteria: Designers clarify the current status of a feature or version being tested.
Phrase: Clarify testing status

22.
Concepts: component update, provide status update
Relationship: Providing updates on component changes or project status.
Criteria: Community members provide updates on component changes or project status.
Phrase: Provide status update

23.
Concepts: update communication, community communication
Relationship: Communicating updates to the community.
Criteria: Designers communicate updates or release schedules to the community.
Phrase: Communicate updates to community

24.
Concepts: community update, community announcement
Relationship: Providing updates or announcements to the community.
Criteria: Designers provide updates or announcements about the software to the community.
Phrase: Provide community update

25.
Concepts: software release, feature release
Relationship: Announcing the release of software versions or features.
Criteria: Designers announce the release of new software versions or features.
Phrase: Announce software release

26.
Concepts: product iteration, new feature announcement, version details announcement, version update announcement, announce new version release
Relationship: Announcing new versions and their updates.
Criteria: Designers announce the release of a new version and its updates.
Phrase: Announce new version release

27.
Concepts: update notification, inform about new version availability
Relationship: Notifying users about new version availability.
Criteria: Designers notify users about the availability of a new version.
Phrase: Notify about new version

28.
Concepts: inform about changes, internal update
Relationship: Informing about changes or updates to the software.
Criteria: Designers inform users about changes or updates to the internal components of the software.
Phrase: Inform about changes

29.
Concepts: provide update, update information
Relationship: Providing updates about the software's version or status.
Criteria: Designers provide updates about the software's version or status.
Phrase: Provide update information

30.
Concepts: software update, software update announcement, announce component update
Relationship: Announcing software updates and component changes.
Criteria: Designers announce software updates and changes to specific components.
Phrase: Announce software update

31.
Concepts: update description, describe update scope
Relationship: Describing the scope of an update.
Criteria: Designers describe the scope or extent of an update.
Phrase: Describe update scope

32.
Concepts: detail specific updates, detailed overview of update
Relationship: Providing detailed information about updates.
Criteria: Designers provide a detailed overview of specific updates.
Phrase: Detail specific updates

33.
Concepts: product update, technical updates
Relationship: Providing information about technical updates or changes.
Criteria: Designers provide information about technical updates or changes to the software.
Phrase: Provide technical updates

34.
Concepts: announcement, announcement of plans
Relationship: Making announcements about development plans or updates.
Criteria: Designers make announcements about development plans or updates.
Phrase: Announce development plans

35.
Concepts: announce upcoming updates, update announcement
Relationship: Announcing upcoming updates or features.
Criteria: Designers announce upcoming updates or features.
Phrase: Announce upcoming updates

36.
Concepts: updates, feature update
Relationship: Providing information about new features and updates.
Criteria: Designers provide information about new features and updates being added to the product.
Phrase: Provide feature updates

37.
Concepts: answer to a question, user reassurance
Relationship: Reassuring users about feature progress.
Criteria: Designers reassure users about the progress or future availability of features.
Phrase: Reassure users about feature progress

38.
Concepts: promising it will realize, promise a future perfection of a feature
Relationship: Assuring users about future feature realization.
Criteria: Designers assure users that a feature will be realized or optimized in the future.
Phrase: Promise future feature realization

39.
Concepts: manage expectations, manage user expectations
Relationship: Managing user expectations about features and updates.
Criteria: Designers manage user expectations regarding feature availability and timelines.
Phrase: Manage user expectations

40.
Concepts: delay explanation, give reason for delay
Relationship: Explaining reasons for delays in updates or features.
Criteria: Designers explain delays in updates or feature releases.
Phrase: Explain update delays

41.
Concepts: share update timeline, confirm upcoming update, confirm feature update
Relationship: Sharing and confirming timelines for updates.
Criteria: Designers share and confirm the timeline for upcoming updates or feature releases.
Phrase: Share update timeline

42.
Concepts: give timeline, give a timeline for release
Relationship: Providing a timeline for updates or releases.
Criteria: Designers provide a timeline for updates or releases.
Phrase: Provide update timeline

43.
Concepts: update schedule, software update process
Relationship: Providing an update schedule and process.
Criteria: Designers provide an update schedule and describe the process for software updates.
Phrase: Provide update schedule

44.
Concepts: release schedule, communicate release plans
Relationship: Communicating the release schedule for updates.
Criteria: Designers communicate the release schedule and plans for software updates.
Phrase: Communicate release schedule

45.
Concepts: communicating progress, progress and plans communication
Relationship: Communicating progress and future plans.
Criteria: Designers communicate progress on software development and future plans.
Phrase: Communicate development progress

46.
Concepts: review status update, ios review status update
Relationship: Providing updates on the review status of the software.
Criteria: Designers provide updates on the review status of the software, including iOS versions.
Phrase: Provide review status update

47.
Concepts: release process, share info on app release
Relationship: Discussing the process and status of app releases.
Criteria: Designers discuss the process and status of releasing the software on different platforms.
Phrase: Discuss app release process

48.
Concepts: visual update, share visual update
Relationship: Sharing visual updates or images.
Criteria: Designers share visual updates or images related to the software.
Phrase: Share visual update

49.
Concepts: share info about development update, share information about current feature development
Relationship: Sharing information about development updates.
Criteria: Designers share information about current feature development and updates.
Phrase: Share development update

50.
Concepts: outdated technology, share info about old systems
Relationship: Sharing information about outdated technology.
Criteria: Users share information about outdated technology in their school.
Phrase: Share outdated technology info

51.
Concepts: explain limitation, talk about limitation of the solution
Relationship: Explaining limitations or constraints.
Criteria: Designers explain the limitations or constraints of a feature or solution.
Phrase: Explain feature limitations

52.
Concepts: frustration, user frustration, frustration expression
Relationship: Expressing dissatisfaction or challenges.
Criteria: Users or designers express frustration with limitations or issues.
Phrase: Express frustration

53.
Concepts: hardware limitation suggestion, hardware limitation consideration
Relationship: Considering and suggesting improvements for hardware limitations.
Criteria: Users consider hardware limitations and suggest relevant improvements.
Phrase: Suggest hardware improvements

54.
Concepts: compatibility confirmation, system compatibility confirmation
Relationship: Confirming software compatibility with systems.
Criteria: Designers confirm the compatibility of the software with different systems.
Phrase: Confirm system compatibility

55.
Concepts: system compatibility, compatibility discussion
Relationship: Discussing software compatibility with systems.
Criteria: Designers and users discuss the compatibility of the software with different systems.
Phrase: Discuss system compatibility

56.
Concepts: touch screen functionality, on-screen keyboard functionality
Relationship: Discussing touch screen and on-screen keyboard functionality.
Criteria: Designers discuss the functionality of touch screens and on-screen keyboards.
Phrase: Discuss touch screen functionality

57.
Concepts: improvement promise, commit to improvement
Relationship: Committing to software improvements based on feedback.
Criteria: Designers commit to improving the software based on user feedback.
Phrase: Commit to software improvement

58.
Concepts: software usability, usability discussion
Relationship: Discussing the practical usability of the software.
Criteria: Users discuss the usability and functionality of software features.
Phrase: Discuss software usability

59.
Concepts: context of use, usability and context of use
Relationship: Describing the context and usability of the software.
Criteria: Users describe the specific contexts in which they use the software and its usability.
Phrase: Describe context of use

60.
Concepts: input methods, input methods discussion
Relationship: Discussing methods for inputting data.
Criteria: Designers discuss methods for inputting data into the software.
Phrase: Discuss input methods

61.
Concepts: provide feature details, provide feature example
Relationship: Providing details and examples of features.
Criteria: Community members provide details and examples to illustrate a feature's functionality.
Phrase: Provide feature details

62.
Concepts: explain functionality, provide usage instructions
Relationship: Explaining functionality and providing usage instructions.
Criteria: Community members explain the functionality of components and provide usage instructions.
Phrase: Explain feature functionality

63.
Concepts: technical support, technical support and guidance
Relationship: Providing technical assistance or guidance.
Criteria: Designers or users provide technical support and guidance for the software.
Phrase: Provide technical support

64.
Concepts: offer help, user support
Relationship: Offering help or assistance to users.
Criteria: Designers offer help and support to users for effective product use.
Phrase: Offer user support
---