You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another and please do not merge them.
Determine the logical relationship between concepts within each code, such as inclusion, parallel, or intersection.
Write clear and generalizable criteria for each code and do not introduce unnecessary details. Then, write an accurate verb phrase as label for the combined concept.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (13 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Label: {A consolidated verb phrase of code 1}
...
13. 
Concepts: {Repeat the input 13}
Relationship: {What is logical relationship between concepts in code 13, or N/A if not applicable}
Criteria: {Who did what, and how for code 13}
Label: {A consolidated verb phrase of code 13}
---
~~~
1.
Concepts: express appreciation, express satisfaction
- Users express appreciation for specific features or aspects of the application.
- Users express satisfaction with the software and its features through positive feedback.

2.
Concepts: express with emojis, use non-verbal communication
- Users express themselves using emojis.
- Users communicate using emojis or other non-verbal forms.

3.
Concepts: apologize for inconvenience, apologies and politeness
- Designers or users apologize for any inconvenience or interruptions caused.
- Expressions of politeness, apologies, or acknowledgment of potential inconvenience by the designers.

4.
Concepts: consider user feedback, incorporate user feedback
- Designers take, consider, and react to user feedback for future updates.
- Designers acknowledge and incorporate user feedback into the design process.

5.
Concepts: seeking community input, request community input
- A designer seeks community input before starting a new phase of development.
- Designers ask for feedback, help, consultation, or additional input from the community.

6.
Concepts: invite feature suggestions, suggest feature improvements
- Designers invite users to suggest new features or improvements.
- Designers or users provide suggestions for improvements or changes to enhance feature usability.

7.
Concepts: inquire about usage, request usage support
- Users ask how to use a specific version of the software.
- Users ask for help or clarification on how to perform specific actions or use the software.

8.
Concepts: educational context, technical and infrastructural challenges in educational settings
- Users and designers discuss various aspects of the educational context.
- Users and designers discuss technical and infrastructural challenges in educational settings.

9.
Concepts: community need, express specific user needs
- A user expresses a need or desire for specific features or improvements in the application.
- Users state a need related to the software, specifically mentioning desired features or tools.

10.
Concepts: compatibility discussion, discuss system compatibility
- A user and designer discussing compatibility with different systems.
- Designers discuss system requirements or inform users about system compatibility issues and solutions.

11.
Concepts: outline future plans, consider future projects
- Designers mention future planning or outline future design plans and features.
- Designers suggest the possibility or consideration of a future project.

12.
Concepts: share development progress, provide development updates
- Designers share updates on the development progress of current features.
- Instances where designers share information about the current status, updates, and future plans for the software.

13.
Concepts: make announcements, announce component updates
- Designers communicate updates and announcements to the community.
- Designers provide updates or announcements about changes and new components in the software to the community.
===
---
Definitions for each code (13 in total):
1.
Concepts: express appreciation, express satisfaction
Relationship: Parallel
Criteria: Users express their appreciation and satisfaction for specific features or aspects of the application through positive feedback.
Label: Express positive feedback

2.
Concepts: express with emojis, use non-verbal communication
Relationship: Inclusion
Criteria: Users express themselves using non-verbal forms of communication, such as emojis.
Label: Use non-verbal communication

3.
Concepts: apologize for inconvenience, apologies and politeness
Relationship: Intersection
Criteria: Designers or users apologize for any inconvenience or interruptions, often as an expression of politeness.
Label: Express apologies and politeness

4.
Concepts: consider user feedback, incorporate user feedback
Relationship: Inclusion
Criteria: Designers take, consider, and incorporate user feedback into the design process for future updates.
Label: Integrate user feedback

5.
Concepts: seeking community input, request community input
Relationship: Parallel
Criteria: Designers seek and request feedback, help, consultation, or additional input from the community before starting new phases of development.
Label: Solicit community input

6.
Concepts: invite feature suggestions, suggest feature improvements
Relationship: Parallel
Criteria: Designers invite users to suggest new features or improvements, and users provide suggestions to enhance feature usability.
Label: Encourage feature suggestions

7.
Concepts: inquire about usage, request usage support
Relationship: Parallel
Criteria: Users ask for help, clarification, or information on how to use specific versions or perform specific actions within the software.
Label: Seek usage support

8.
Concepts: educational context, technical and infrastructural challenges in educational settings
Relationship: Intersection
Criteria: Users and designers discuss both the educational context and the technical and infrastructural challenges faced within educational settings.
Label: Discuss educational challenges

9.
Concepts: community need, express specific user needs
Relationship: Inclusion
Criteria: Users express specific needs or desires for features or improvements in the application, mentioning desired tools or functionalities.
Label: Express user needs

10.
Concepts: compatibility discussion, discuss system compatibility
Relationship: Inclusion
Criteria: Users and designers discuss system requirements, compatibility with different systems, and solutions to compatibility issues.
Label: Discuss system compatibility

11.
Concepts: outline future plans, consider future projects
Relationship: Parallel
Criteria: Designers mention and outline future design plans, features, or the possibility of future projects.
Label: Plan future developments

12.
Concepts: share development progress, provide development updates
Relationship: Inclusion
Criteria: Designers share information about the current status, updates, and future plans for the software.
Label: Share development updates

13.
Concepts: make announcements, announce component updates
Relationship: Inclusion
Criteria: Designers communicate updates and announcements about changes and new components in the software to the community.
Label: Announce updates
---