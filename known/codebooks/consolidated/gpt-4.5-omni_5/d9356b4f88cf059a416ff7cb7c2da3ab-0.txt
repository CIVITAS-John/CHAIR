You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (16 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
16. 
Concepts: {Repeat the input 16}
Relationship: {What is logical relationship between concepts in code 16, or N/A if not applicable}
Criteria: {Who did what, and how for code 16}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: expressive, using emojis for communication
- A user or designer uses expressive language or emojis to convey emotions.
- Users use emojis to express emotions or communicate non-verbally.

2.
Concepts: acknowledge response, acknowledging responses
- A user acknowledges a response from the designer.
- Users acknowledge and appreciate responses, information, or features.

3.
Concepts: reciprocate greeting, exchange greetings
- A designer reciprocates a greeting.
- Users and designers greet or welcome each other, contributing to community building.

4.
Concepts: suggestion elaboration, provide further suggestions and information
- Elaborating on a suggestion or idea.
- Users provide further suggestions or additional context to elaborate on a question or answer.

5.
Concepts: design discussion, discuss future design plans
- Discussions about design considerations and future plans for experiments.
- Designers discuss potential future developments, directions, and plans for the product.

6.
Concepts: discuss design refinement, suggest feature simplification
- Designers discuss refining the design and adjustments needed for features and component properties.
- Designers suggest simplifying features and discuss simplification and refinement in design.

7.
Concepts: discuss update plans, discuss long-term planning and feature stability
- Participants discuss potential updates and confirm the inclusion of future features.
- Developers and designers discuss long-term plans and the stability of future features.

8.
Concepts: confirming feature update, provide development timeline
- A designer confirms a feature update and provides a timeline for an Android update.
- A participant provides a timeline for future updates and outlines the feature list and roadmap.

9.
Concepts: preview update content, describing update scope
- Designers preview and introduce the content of an upcoming update.
- Developers highlight and describe the scope of an upcoming update.

10.
Concepts: provide status updates, communicate update progress
- Participants provide updates on the status or progress of software updates with visual aids.
- Designers communicate the progress of software updates and highlight ongoing work.

11.
Concepts: outline development priorities, prioritize development tasks
- A designer lists potential tasks and outlines future development plans and priorities.
- Developers discuss project management and the prioritization of different features or sections to be developed.

12.
Concepts: acknowledge limitations, explain subject focus and limitations
- Acknowledging limitations or constraints of the software.
- Designers explain the subject focus and limitations of the software and address system limitations.

13.
Concepts: suggest features and improvements, contributing improvement ideas
- Users suggest new features and highlight usability needs for software improvements.
- Users propose additional features, suggest practical use cases, or recommend collaboration on new features or improvements.

14.
Concepts: encourage user feedback, invite user feedback and participation
- Participants solicit feedback and encourage interaction from users.
- Designers invite users to suggest new features or improvements, accept feedback, and invite user input and participation.

15.
Concepts: understand user needs, resolve user concerns
- The designer inquires about the problems users have encountered.
- Designers respond to and resolve user concerns or questions by proposing potential solutions.

16.
Concepts: user guidance, giving usage instructions
- Providing detailed guidance on software features and updates.
- Providing instructions on how to use specific features of the software.
===
---
Definitions for each code (16 in total):
1.
Concepts: expressive, using emojis for communication
Relationship: Users and designers use emojis to convey emotions and communicate non-verbally.
Criteria: Users or designers use expressive language or emojis to convey emotions and communicate non-verbally.
Phrase: Convey emotions using emojis

2.
Concepts: acknowledge response, acknowledging responses
Relationship: Users acknowledge and appreciate responses, information, or features.
Criteria: Users acknowledge responses from others and show appreciation for the information or features provided.
Phrase: Acknowledge responses

3.
Concepts: reciprocate greeting, exchange greetings
Relationship: Users and designers greet each other, contributing to community building.
Criteria: Users and designers greet or welcome each other, fostering a sense of community.
Phrase: Exchange greetings

4.
Concepts: suggestion elaboration, provide further suggestions and information
Relationship: Users elaborate on suggestions or ideas by providing additional context.
Criteria: Users provide further suggestions or additional context to elaborate on a question or answer.
Phrase: Elaborate on suggestions

5.
Concepts: design discussion, discuss future design plans
Relationship: Designers discuss potential future developments and plans for the product.
Criteria: Designers discuss design considerations and future plans for experiments or product development.
Phrase: Discuss future design plans

6.
Concepts: discuss design refinement, suggest feature simplification
Relationship: Designers discuss refining and simplifying features.
Criteria: Designers discuss the refinement and simplification of features and component properties.
Phrase: Discuss design refinement

7.
Concepts: discuss update plans, discuss long-term planning and feature stability
Relationship: Developers and designers discuss long-term plans and feature stability.
Criteria: Developers and designers discuss potential updates, long-term plans, and the stability of future features.
Phrase: Discuss update plans

8.
Concepts: confirming feature update, provide development timeline
Relationship: A designer confirms a feature update and provides a timeline for future updates.
Criteria: A designer confirms a feature update and outlines the development timeline and roadmap.
Phrase: Confirm feature update

9.
Concepts: preview update content, describing update scope
Relationship: Developers highlight and describe the scope of an upcoming update.
Criteria: Designers preview and introduce the content and scope of an upcoming update.
Phrase: Preview update content

10.
Concepts: provide status updates, communicate update progress
Relationship: Designers communicate the progress of software updates.
Criteria: Participants provide updates on the status or progress of software updates with visual aids.
Phrase: Provide status updates

11.
Concepts: outline development priorities, prioritize development tasks
Relationship: Developers discuss project management and prioritization of tasks.
Criteria: A designer lists potential tasks and outlines future development plans and priorities.
Phrase: Outline development priorities

12.
Concepts: acknowledge limitations, explain subject focus and limitations
Relationship: Designers explain the subject focus and limitations of the software.
Criteria: Designers acknowledge limitations or constraints and explain the subject focus of the software.
Phrase: Acknowledge limitations

13.
Concepts: suggest features and improvements, contributing improvement ideas
Relationship: Users propose additional features and improvements.
Criteria: Users suggest new features, highlight usability needs, and recommend collaboration on improvements.
Phrase: Suggest features and improvements

14.
Concepts: encourage user feedback, invite user feedback and participation
Relationship: Designers invite user feedback and participation.
Criteria: Participants solicit feedback and encourage interaction from users.
Phrase: Encourage user feedback

15.
Concepts: understand user needs, resolve user concerns
Relationship: Designers respond to and resolve user concerns.
Criteria: Designers inquire about user problems and propose potential solutions to resolve concerns.
Phrase: Resolve user concerns

16.
Concepts: user guidance, giving usage instructions
Relationship: Providing instructions on how to use software features.
Criteria: Providing detailed guidance and instructions on how to use specific software features.
Phrase: Provide user guidance
---