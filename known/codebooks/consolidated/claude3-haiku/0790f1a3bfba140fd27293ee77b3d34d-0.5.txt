You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between sub-codes. If a sub-code includes another, use the broader one. If sub-codes are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (8 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {A sentence of consolidated criteria 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
8.
Relationship: {The logical relationship between sub-codes in code 8}
Criteria: {A sentence of consolidated criteria 8}
Label: {A consolidated label of code 8}
Category: {2-4 words for code 8}
---
~~~
1. responsiveness, responsive design.
- Expressions of responsiveness or attentiveness from the designers or developers to community members' concerns or needs.
- Adaptations or modifications made to the software or platform in response to user feedback or changing needs.

2. update preview, update announcement, update availability.
- Statements describing the content or features included in a specific software update, often with a version number and release date.
- Announcements or notifications from the designers or developers about planned updates or releases of the software or platform.
- Statements indicating the availability or distribution of a software update, often referencing a specific version or platform.

3. feature updates, feature development.
- Mentions of ongoing or upcoming changes and enhancements to the software's features.
- Statements describing the development or implementation of new features or functionalities in the software.

4. design philosophy, design considerations.
- Articulation of the underlying design philosophy, principles, or values guiding the development of the software or platform.
- Statements that discuss or explain the design decisions, choices, or trade-offs made during the development of the software or platform.

5. platform prioritization, development prioritization.
- Statements indicating the prioritization or sequencing of software updates across different platforms or devices.
- Statements about the prioritization or sequencing of platform development for different content areas or features.

6. technical capabilities, platform accessibility.
- Statements inquiring about the availability of a platform version for a specific device (e.g., PC).
- Statements inquiring about the availability or access to a specific platform version (e.g., PC, interactive whiteboard).

7. special tips, technical guidance.
- Statements providing guidance or tips related to special features or functionalities within the software.
- Statements providing technical guidance or instructions for using or configuring specific software features or components.

8. scaffolding and support, technical support and user assistance.
- Provision of scaffolding, guidance, or support features to help users navigate or use the software or platform effectively.
- Statements requesting or providing technical support for using the platform, as well as the provision of guidance, instructions, or other forms of help to enable community members to use the software effectively.
===
---
Categories:
* Responsiveness and Adaptability
* Update Communication
* Feature Development
* Design Philosophy
* Platform Prioritization
* Technical Capabilities
* Technical Guidance
* User Support

Definitions for each code:

1. Responsiveness and Adaptability
Relationship: The sub-codes describe expressions of responsiveness from designers/developers and adaptations made to the software in response to user needs.
Criteria: Statements that indicate the designers/developers' attentiveness to community members' concerns or needs, and modifications made to the software or platform in response to user feedback or changing requirements.
Label: Responsiveness and Adaptability
Category: Responsiveness and Adaptability

2. Update Communication
Relationship: The sub-codes cover different aspects of communicating software updates, including content, release announcements, and availability.
Criteria: Statements describing the features or changes included in software updates, announcements about planned updates, and indications of update availability or distribution.
Label: Update Communication
Category: Update Communication

3. Feature Development
Relationship: The sub-codes focus on ongoing changes and enhancements to the software's features.
Criteria: Mentions of new features or functionalities being developed or implemented in the software.
Label: Feature Development
Category: Feature Development

4. Design Philosophy
Relationship: The sub-codes capture the articulation of the underlying design principles and considerations guiding the software development.
Criteria: Statements that describe the design philosophy, principles, or trade-offs made during the software's development.
Label: Design Philosophy
Category: Design Philosophy

5. Platform Prioritization
Relationship: The sub-codes cover the prioritization or sequencing of software updates and platform development.
Criteria: Statements indicating the prioritization or sequencing of software updates across different platforms or the prioritization of platform development for different content areas or features.
Label: Platform Prioritization
Category: Platform Prioritization

6. Technical Capabilities
Relationship: The sub-codes focus on inquiries about the availability and accessibility of the platform across different devices and versions.
Criteria: Statements inquiring about the availability of a platform version for a specific device or the accessibility of a specific platform version.
Label: Technical Capabilities
Category: Technical Capabilities

7. Technical Guidance
Relationship: The sub-codes describe the provision of guidance or tips related to special features or functionalities within the software.
Criteria: Statements providing technical guidance, instructions, or tips for using or configuring specific software features or components.
Label: Technical Guidance
Category: Technical Guidance

8. User Support
Relationship: The sub-codes cover the provision of scaffolding, guidance, or support features to help users navigate or use the software effectively, as well as requests for technical support.
Criteria: Statements describing the provision of scaffolding, guidance, or support features to enable community members to use the software effectively, and requests for technical support.
Label: User Support
Category: User Support
---