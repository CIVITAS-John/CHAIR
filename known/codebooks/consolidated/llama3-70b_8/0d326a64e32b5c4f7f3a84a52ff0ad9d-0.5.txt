You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (17 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
17. 
Concepts: {Repeat the input 17}
Relationship: {What is logical relationship between concepts in code 17, or N/A if not applicable}
Criteria: {Who did what, and how for code 17}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: promoting transparency, demonstrating transparency
- Designer promotes transparency and openness.
- A designer is transparent about the development process or timelines.

2.
Concepts: emphasizing optimization, emphasizes refinement efforts
- Designer emphasizes the importance of optimization.
- Designer emphasizes refinement and optimization efforts.

3.
Concepts: praise software, praise software features
- Users praise or compliment software design or features.
- Users praise simulation effects or software features.

4.
Concepts: appreciate updates, express satisfaction
- Users react positively and express appreciation for software updates.
- Users express approval or satisfaction with software features or updates.

5.
Concepts: highlight software benefits, share positive experiences
- Users highlight software benefits and practicality.
- Users describe and share their positive experiences with the software.

6.
Concepts: appreciate craftsmanship, valuing craftsmanship and perfection
- Users appreciate attention to detail and craftsmanship.
- User values the spirit of craftsmanship and perfection.

7.
Concepts: sharing expertise, demonstrate expertise
- User shares professional experience or knowledge.
- Users demonstrate expertise or knowledge in a specific domain.

8.
Concepts: provide user context, providing context for feedback
- Users provide context about their backgrounds or experiences.
- Users provide context or background information that influences their needs or expectations.

9.
Concepts: request features, make feature requests
- User requests a specific feature or demonstration.
- Users make a request or ask for a feature.

10.
Concepts: make suggestions, suggest features
- Proposing a new idea or feature for the application.
- Users suggest a new feature or improvement to the software.

11.
Concepts: proposes a solution, provide a solution
- User proposes a solution.
- Users provide solutions or answers to questions or problems.

12.
Concepts: requesting help, seek community help
- Users request help or assistance from others.
- Users seek help or support from the community.

13.
Concepts: seek usage support, seeking technical support
- Users seek support or assistance with using the software.
- Users seek technical support or assistance from the community.

14.
Concepts: request documentation, requesting resources
- Users request documentation or user manuals for the software.
- Users request resources, such as downloads or user manuals, to support their use of the software.

15.
Concepts: design constraint context, explaining design limitations
- Providing context for design constraints or limitations
- Designers explain limitations or constraints of the design.

16.
Concepts: feature details
- Provision of details or explanations about specific features or functionalities.
- A designer provides specific details about upcoming features.

17.
Concepts: offering immediate help
- Providing immediate assistance or help to resolve an issue or answer a question.
- Designers offer immediate help or solutions to user problems.
===
Here are the definitions for each code:

---
1.
Concepts: promoting transparency, demonstrating transparency
Relationship: The concepts are closely related, as promoting transparency involves demonstrating it through actions.
Criteria: Designers promote transparency by being open about development processes or timelines.
Phrase: Demonstrate openness

2.
Concepts: emphasizing optimization, emphasizes refinement efforts
Relationship: The concepts are synonymous, with an emphasis on optimization implying refinement efforts.
Criteria: Designers emphasize the importance of optimization and refinement.
Phrase: Emphasize optimization

3.
Concepts: praise software, praise software features
Relationship: The concepts are closely related, as praising software often involves praising its features.
Criteria: Users express positive opinions about software design or features.
Phrase: Praise software

4.
Concepts: appreciate updates, express satisfaction
Relationship: The concepts are closely related, as appreciating updates often involves expressing satisfaction.
Criteria: Users react positively to software updates and express approval.
Phrase: Express appreciation

5.
Concepts: highlight software benefits, share positive experiences
Relationship: The concepts are closely related, as highlighting benefits often involves sharing positive experiences.
Criteria: Users highlight software benefits and share their positive experiences.
Phrase: Highlight benefits

6.
Concepts: appreciate craftsmanship, valuing craftsmanship and perfection
Relationship: The concepts are closely related, as appreciating craftsmanship involves valuing perfection.
Criteria: Users appreciate attention to detail and value craftsmanship.
Phrase: Appreciate craftsmanship

7.
Concepts: sharing expertise, demonstrate expertise
Relationship: The concepts are synonymous, with sharing expertise implying demonstration.
Criteria: Users share their professional experience or knowledge.
Phrase: Demonstrate expertise

8.
Concepts: provide user context, providing context for feedback
Relationship: The concepts are synonymous, with providing context involving providing background information.
Criteria: Users provide context about their backgrounds or experiences that influence their needs.
Phrase: Provide context

9.
Concepts: request features, make feature requests
Relationship: The concepts are synonymous, with requesting features involving making requests.
Criteria: Users request specific features or demonstrations.
Phrase: Request features

10.
Concepts: make suggestions, suggest features
Relationship: The concepts are synonymous, with making suggestions involving proposing new ideas.
Criteria: Users propose new ideas or features for the application.
Phrase: Suggest features

11.
Concepts: proposes a solution, provide a solution
Relationship: The concepts are synonymous, with proposing a solution involving providing answers.
Criteria: Users propose solutions or answers to questions or problems.
Phrase: Propose solutions

12.
Concepts: requesting help, seek community help
Relationship: The concepts are closely related, as requesting help often involves seeking community support.
Criteria: Users request help or assistance from others in the community.
Phrase: Seek help

13.
Concepts: seek usage support, seeking technical support
Relationship: The concepts are closely related, as seeking usage support often involves seeking technical support.
Criteria: Users seek support or assistance with using the software.
Phrase: Seek support

14.
Concepts: request documentation, requesting resources
Relationship: The concepts are closely related, as requesting documentation often involves requesting resources.
Criteria: Users request documentation or user manuals to support their use of the software.
Phrase: Request resources

15.
Concepts: design constraint context, explaining design limitations
Relationship: The concepts are closely related, as providing context involves explaining limitations.
Criteria: Designers explain limitations or constraints of the design.
Phrase: Explain limitations

16.
Concepts: feature details
Relationship: N/A
Criteria: Designers provide specific details about features or functionalities.
Phrase: Provide details

17.
Concepts: offering immediate help
Relationship: N/A
Criteria: Designers provide immediate assistance or help to resolve issues.
Phrase: Offer help