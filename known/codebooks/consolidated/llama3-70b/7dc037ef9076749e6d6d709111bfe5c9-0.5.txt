You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between sub-codes. If a sub-code includes another, use the broader one. If sub-codes are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (11 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {A sentence of consolidated criteria 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
11.
Relationship: {The logical relationship between sub-codes in code 11}
Criteria: {A sentence of consolidated criteria 11}
Label: {A consolidated label of code 11}
Category: {2-4 words for code 11}
---
~~~
1. agreement, agreement with designer's statement.
- Expressing agreement or affirmation with a statement or suggestion.
- Expressing agreement with a statement made by the designer.

2. software usability, user convenience.
- Discussions related to the ease of use or accessibility of the software.
- Comments on the convenience of certain features for users, efforts to make software intuitive and easy to use without needing additional instructions.

3. technical limitations, system and hardware constraints.
- Discussion of limitations or constraints in the project or software, or references to limitations of the platform or software.
- Refers to limitations imposed by hardware, systems, or technical constraints.

4. release communication, software version management.
- Confirming software releases and versions.
- Involves announcements and discussions related to different software versions and updates.

5. update changelog, listing new features.
- Description of new features or updates.
- Lists or describes new features or functionality being added.

6. feature planning, technical development planning.
- Planning and considering new features to implement.
- Planning and discussing future technical developments and features.

7. transparency, development transparency.
- Being transparent or open about the current state or limitations of the product, or openness about the stages of development or release processes.
- Providing detailed insights and transparency about the development process, and communication of development timelines and status updates to the community.

8. scope expansion, potential feature expansion.
- Expanding the software's scope to include more features.
- Potential expansion of features or content.

9. prioritization, development prioritization.
- Discussing priorities or relative importance of features, content, or platforms.
- Prioritization of features and development tasks.

10. optimization, design simplification.
- Efforts to refine or improve software performance.
- Efforts to simplify complex designs or functionalities, iterative processes of refining software features or design for better performance.

11. feedback gathering.
- Collection and solicitation of feedback and opinions from users.
- Requests for specific feedback or information.
===
Here is the output:

---
Categories: 
* Community Building
* Software Development
* Design and Usability
* Communication and Transparency
* Feature Planning and Prioritization

Definitions for each code:

1.
Relationship: Parallel sub-codes
Criteria: Expressing agreement or affirmation with a statement or suggestion made by the designer or other community members.
Label: Agreement and Affirmation
Category: Community Building

2.
Relationship: Parallel sub-codes
Criteria: Discussions related to the ease of use or accessibility of the software, including efforts to make it intuitive and easy to use.
Label: Software Usability
Category: Design and Usability

3.
Relationship: Inclusive sub-codes
Criteria: Discussion of limitations or constraints in the project or software, including technical, system, and hardware limitations.
Label: Technical Limitations
Category: Software Development

4.
Relationship: Parallel sub-codes
Criteria: Confirming software releases and versions, including announcements and discussions related to different software versions and updates.
Label: Release Management
Category: Software Development

5.
Relationship: Parallel sub-codes
Criteria: Description of new features or updates, including lists or descriptions of new features or functionality being added.
Label: Update Changelog
Category: Software Development

6.
Relationship: Parallel sub-codes
Criteria: Planning and considering new features to implement, including planning and discussing future technical developments and features.
Label: Feature Planning
Category: Feature Planning and Prioritization

7.
Relationship: Parallel sub-codes
Criteria: Being transparent or open about the current state or limitations of the product, or openness about the stages of development or release processes.
Label: Development Transparency
Category: Communication and Transparency

8.
Relationship: Parallel sub-codes
Criteria: Expanding the software's scope to include more features, including potential expansion of features or content.
Label: Scope Expansion
Category: Feature Planning and Prioritization

9.
Relationship: Parallel sub-codes
Criteria: Discussing priorities or relative importance of features, content, or platforms, including prioritization of features and development tasks.
Label: Development Prioritization
Category: Feature Planning and Prioritization

10.
Relationship: Parallel sub-codes
Criteria: Efforts to refine or improve software performance, including efforts to simplify complex designs or functionalities.
Label: Optimization and Simplification
Category: Design and Usability

11.
Relationship: Parallel sub-codes
Criteria: Collection and solicitation of feedback and opinions from users, including requests for specific feedback or information.
Label: Feedback Gathering
Category: Community Building