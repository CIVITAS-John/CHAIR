You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: balancing user needs, align with user needs
- Designer balances or weighs user needs and preferences.
- A designer aligns the software with user needs or preferences.

2.
Concepts: addresses user needs, addressing user needs
- The designer mentions updating or improving the system based on user needs.
- Direct addressing of user needs or requirements, often with solutions or updates.

3.
Concepts: enhancing user experience, seeks to improve user experience
- Suggestions or ideas for improving the user experience or interface.
- A designer expresses the intention to improve the user experience in the online community.

4.
Concepts: advises manual adjustments, offering manual adjustments
- A designer suggests or advises users to make manual adjustments due to limitations.
- Manual adjustment options are offered or provided or a designer mentions or highlights manual adjustment options or customization.

5.
Concepts: emphasizes quality, highlights ideal components
- Designer strives for quality or perfection in the product or feature.
- Designer highlights or emphasizes the importance of ideal components.

6.
Concepts: emphasizes optimization, explains optimization process
- A designer emphasizes the importance of optimization.
- Designer explains the optimization process or approach.

7.
Concepts: iterates on design, optimizes feature functionality
- Designer refines or iterates on the design or features of the platform.
- Designer optimizes or refines a specific feature.

8.
Concepts: attached image, uploads image
- A user attaches an image or file to their message or post.
- Someone uploads or shares an image, often to illustrate a point or provide context.

9.
Concepts: engaging visually, facilitating user input through visuals
- A designer uses visual elements to engage with users.
- The designer uses visual aids to facilitate user input or understanding.

10.
Concepts: sharing images, communicating through images
- A user or designer shares an image in the conversation or shares an image to gather feedback or opinions.
- A designer communicates with the community through images, such as screenshots or diagrams.

11.
Concepts: confirms common circuit diagram style, confirming the common style of circuit diagram used in textbooks
- User confirms the common circuit diagram style or format.
- Confirmation or discussion of common styles or conventions used in circuit diagrams.

12.
Concepts: presenting circuit diagrams, clarifying circuit diagrams
- The designer presents a circuit diagram or design and asks for confirmation.
- Designers clarify or seek clarification on the style or format of a circuit diagram.

13.
Concepts: sharing common practices, common practice reference
- Users share common practices or norms.
- User references common practice or convention.

14.
Concepts: confirms common practice, confirms design alignment
- A user or designer confirms a common practice or style.
- A user confirms that a design aligns with current practices or standards.

15.
Concepts: potential application, suggest practical use cases
- User highlights a potential application or use case.
- User suggests a practical use case for the software.

16.
Concepts: describing feature use, explaining features, detailing experimental features
- User or designer describes how a feature is used or demonstrates its functionality.
- The designer explains a specific feature or functionality, such as simulated experiment assessment.
- User or designer lists or explains specific experimental features or functionalities.

17.
Concepts: provides user context, provides context for limitations
- Users provide context or background information about their needs or situation.
- User provides context for understanding limitations or design constraints.

18.
Concepts: shares a past experience, drawing from past experience
- A designer shares a past experience or workaround.
- Designer references past experience to provide insight or solution.

19.
Concepts: shares technical knowledge, provides technical details
- Designer shares knowledge or information about a specific topic or feature.
- Designer provides detailed technical information about the software or feature.

20.
Concepts: technical discussion, engages with technical aspects
- User engages in technical discussion or provides technical feedback.
- User engages with technical aspects or specifications.

21.
Concepts: learning support, guides users
- A designer supports or guides a user's learning.
- Designer guides users on accessing specific platform features or resources.

22.
Concepts: providing special tips, provides software usage tips
- A designer provides special tips or shortcuts.
- Designer provides tips or guidance on using the software.

23.
Concepts: explains connection, describing diagram connections
- Someone explains the connection or relationship between two concepts, diagrams, or ideas.
- A designer explains the bidirectional diagram connections.

24.
Concepts: explains feature benefits, emphasizing bidirectional conversion
- Designer explains a concept or feature, such as bidirectional conversion.
- Designer reiterates or emphasizes the bidirectional conversion feature.

25.
Concepts: clarifies system requirements, clarifying limitations
- Designer clarifies system requirements or compatibility.
- A designer clarifies limitations or system capabilities or clarifies incompatibility or technical limitations.

26.
Concepts: explains dependencies, explains technical requirements
- Designer explains dependencies or relationships between features or components.
- Designer explains technical requirements or specifications.

27.
Concepts: explaining focus areas, explaining development priorities
- Designer explains focus areas of the project.
- Designer explains development priorities and the rationale behind them.

28.
Concepts: explaining design goals, sharing design principles
- Designer explains the design goals or philosophy behind the software.
- Designer explains or shares the underlying principles or philosophy of the platform.

29.
Concepts: educates users about design choices, promoting understanding
- A designer educates a user about the reasoning behind a design choice.
- A designer explains or clarifies a concept or functionality to promote understanding or provides an example or visual illustration to explain a concept or feature.

30.
Concepts: clarifies testing status, providing testing context, informing users about testing phase
- Designer clarifies the testing status of a feature or update.
- The designer provides context for the current testing phase.
- A designer informs users about the testing phase of a feature and provides guidance on manual adjustments.

31.
Concepts: planning advanced features, considering innovative features
- The designer discusses or plans advanced simulation features or functionalities.
- Designer discusses or researches innovative features or ideas.

32.
Concepts: adding experimental details, mention potential experiments
- A designer adds details about experimental features.
- A designer mentions potential future experiments or features, such as chemistry experiments.
===
Here are the definitions for each code:

---
1.
Concepts: balancing user needs, align with user needs
Relationship: The concepts are related as they both describe the designer's effort to accommodate user requirements.
Criteria: A designer balances and aligns the software with user needs and preferences.
Phrase: Balances user needs.

2.
Concepts: addresses user needs, addressing user needs
Relationship: The concepts are synonymous and describe the designer's response to user requirements.
Criteria: A designer addresses user needs or requirements, often with solutions or updates.
Phrase: Addresses user needs.

3.
Concepts: enhancing user experience, seeks to improve user experience
Relationship: The concepts are related as they both describe the designer's intention to improve the user experience.
Criteria: A designer suggests or expresses the intention to improve the user experience in the online community.
Phrase: Enhances user experience.

4.
Concepts: advises manual adjustments, offering manual adjustments
Relationship: The concepts are related as they both describe the designer's provision of manual adjustment options.
Criteria: A designer suggests or provides manual adjustment options or customization due to limitations.
Phrase: Offers manual adjustments.

5.
Concepts: emphasizes quality, highlights ideal components
Relationship: The concepts are related as they both describe the designer's focus on quality and ideal components.
Criteria: A designer strives for quality or perfection in the product or feature, highlighting ideal components.
Phrase: Emphasizes quality.

6.
Concepts: emphasizes optimization, explains optimization process
Relationship: The concepts are related as they both describe the designer's focus on optimization.
Criteria: A designer emphasizes the importance of optimization and explains the optimization process or approach.
Phrase: Emphasizes optimization.

7.
Concepts: iterates on design, optimizes feature functionality
Relationship: The concepts are related as they both describe the designer's refinement of the design or features.
Criteria: A designer refines or iterates on the design or features of the platform, optimizing a specific feature.
Phrase: Iterates on design.

8.
Concepts: attached image, uploads image
Relationship: The concepts are synonymous and describe the act of sharing an image.
Criteria: A user attaches or uploads an image to their message or post, often to illustrate a point or provide context.
Phrase: Uploads an image.

9.
Concepts: engaging visually, facilitating user input through visuals
Relationship: The concepts are related as they both describe the designer's use of visual elements to engage with users.
Criteria: A designer uses visual elements to engage with users, facilitating user input or understanding.
Phrase: Engages visually.

10.
Concepts: sharing images, communicating through images
Relationship: The concepts are related as they both describe the sharing of images for communication.
Criteria: A user or designer shares an image in the conversation, communicating through images.
Phrase: Shares images.

11.
Concepts: confirms common circuit diagram style, confirming the common style of circuit diagram used in textbooks
Relationship: The concepts are related as they both describe the confirmation of a common style or convention.
Criteria: A user confirms the common circuit diagram style or format, discussing common styles or conventions used in circuit diagrams.
Phrase: Confirms common style.

12.
Concepts: presenting circuit diagrams, clarifying circuit diagrams
Relationship: The concepts are related as they both describe the presentation and clarification of circuit diagrams.
Criteria: A designer presents a circuit diagram or design, clarifying the style or format of a circuit diagram.
Phrase: Presents circuit diagrams.

13.
Concepts: sharing common practices, common practice reference
Relationship: The concepts are related as they both describe the sharing of common practices or norms.
Criteria: Users share common practices or norms, referencing common practice or convention.
Phrase: Shares common practices.

14.
Concepts: confirms common practice, confirms design alignment
Relationship: The concepts are related as they both describe the confirmation of common practices or design alignment.
Criteria: A user or designer confirms a common practice or style, confirming that a design aligns with current practices or standards.
Phrase: Confirms common practice.

15.
Concepts: potential application, suggest practical use cases
Relationship: The concepts are related as they both describe the identification of potential applications or use cases.
Criteria: A user highlights a potential application or use case, suggesting practical use cases for the software.
Phrase: Suggests practical use cases.

16.
Concepts: describing feature use, explaining features, detailing experimental features
Relationship: The concepts are related as they all describe the explanation or demonstration of feature functionality.
Criteria: A user or designer describes how a feature is used, explains a specific feature or functionality, or lists experimental features or functionalities.
Phrase: Describes feature use.

17.
Concepts: provides user context, provides context for limitations
Relationship: The concepts are related as they both describe the provision of context for understanding user needs or limitations.
Criteria: Users provide context or background information about their needs or situation, providing context for understanding limitations or design constraints.
Phrase: Provides user context.

18.
Concepts: shares a past experience, drawing from past experience
Relationship: The concepts are related as they both describe the sharing of past experiences or workarounds.
Criteria: A designer shares a past experience or workaround, referencing past experience to provide insight or solution.
Phrase: Shares a past experience.

19.
Concepts: shares technical knowledge, provides technical details
Relationship: The concepts are related as they both describe the sharing of technical information or knowledge.
Criteria: A designer shares knowledge or information about a specific topic or feature, providing detailed technical information about the software or feature.
Phrase: Shares technical knowledge.

20.
Concepts: technical discussion, engages with technical aspects
Relationship: The concepts are related as they both describe the engagement with technical aspects or specifications.
Criteria: A user engages in technical discussion, providing technical feedback, or engages with technical aspects or specifications.
Phrase: Engages in technical discussion.

21.
Concepts: learning support, guides users
Relationship: The concepts are related as they both describe the provision of learning support or guidance.
Criteria: A designer supports or guides a user's learning, providing guidance on accessing specific platform features or resources.
Phrase: Provides learning support.

22.
Concepts: providing special tips, provides software usage tips
Relationship: The concepts are related as they both describe the provision of tips or guidance for using the software.
Criteria: A designer provides special tips or shortcuts, providing tips or guidance on using the software.
Phrase: Provides software tips.

23.
Concepts: explains connection, describing diagram connections
Relationship: The concepts are related as they both describe the explanation of connections or relationships.
Criteria: Someone explains the connection or relationship between two concepts, diagrams, or ideas, describing bidirectional diagram connections.
Phrase: Explains connections.

24.
Concepts: explains feature benefits, emphasizing bidirectional conversion
Relationship: The concepts are related as they both describe the explanation of feature benefits or conversion.
Criteria: A designer explains a concept or feature, such as bidirectional conversion, emphasizing the benefits or importance of the feature.
Phrase: Explains feature benefits.

25.
Concepts: clarifies system requirements, clarifying limitations
Relationship: The concepts are related as they both describe the clarification of system requirements or limitations.
Criteria: A designer clarifies system requirements or compatibility, clarifying limitations or system capabilities.
Phrase: Clarifies system requirements.

26.
Concepts: explains dependencies, explains technical requirements
Relationship: The concepts are related as they both describe the explanation of dependencies or technical requirements.
Criteria: A designer explains dependencies or relationships between features or components, explaining technical requirements or specifications.
Phrase: Explains dependencies.

27.
Concepts: explaining focus areas, explaining development priorities
Relationship: The concepts are related as they both describe the explanation of focus areas or development priorities.
Criteria: A designer explains focus areas of the project, explaining development priorities and the rationale behind them.
Phrase: Explains focus areas.

28.
Concepts: explaining design goals, sharing design principles
Relationship: The concepts are related as they both describe the explanation of design goals or principles.
Criteria: A designer explains the design goals or philosophy behind the software, sharing the underlying principles or philosophy of the platform.
Phrase: Explains design goals.

29.
Concepts: educates users about design choices, promoting understanding
Relationship: The concepts are related as they both describe the education of users about design choices or concepts.
Criteria: A designer educates a user about the reasoning behind a design choice, explaining or clarifying a concept or functionality to promote understanding.
Phrase: Educates users.

30.
Concepts: clarifies testing status, providing testing context, informing users about testing phase
Relationship: The concepts are related as they all describe the clarification of testing status or context.
Criteria: A designer clarifies the testing status of a feature or update, providing context for the current testing phase, and informing users about the testing phase.
Phrase: Clarifies testing status.

31.
Concepts: planning advanced features, considering innovative features
Relationship: The concepts are related as they both describe the planning or consideration of advanced or innovative features.
Criteria: The designer discusses or plans advanced simulation features or functionalities, considering innovative features or ideas.
Phrase: Plans advanced features.

32.
Concepts: adding experimental details, mention potential experiments
Relationship: The concepts are related as they both describe the addition of experimental details or the mention of potential experiments.
Criteria: A designer adds details about experimental features, mentioning potential future experiments or features.
Phrase: Adds experimental details.