You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (13 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
13. 
Concepts: {Repeat the input 13}
Relationship: {What is logical relationship between concepts in code 13, or N/A if not applicable}
Criteria: {Who did what, and how for code 13}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: providing development updates, sharing feature development updates
- Designers provide updates on the current status and future plans for the software.
- Designers share updates and progress reports on the development of specific features.

2.
Concepts: listing feature updates, announcing feature updates
- Designers list new features, adjustments, and bug fixes in updates.
- Designers announce new features, updates, or bug fixes based on user input.

3.
Concepts: user interaction, requesting clarification
- Designer interacts with user to clarify functionality.
- Designers and users engage in exchanges to clarify questions or feedback.

4.
Concepts: inviting user feedback, encouraging user feedback
- Designers invite and request feedback from users.
- Designers foster open dialogue and encourage users to provide feedback.

5.
Concepts: responding to user questions, answering for design support
- A designer responds directly to a user's question or concern.
- A user provides a direct response to a design-related query or requirement.

6.
Concepts: co-designing with users, user-designer interaction
- Designers offer users the opportunity to participate and involve them in the design process.
- The collaborative interaction between users and designers that contributes to the design process.

7.
Concepts: development goals, discussing future development plans
- Discussing specific goals or plans for future development.
- Individuals share and discuss plans and strategies for future development.

8.
Concepts: acknowledging user feedback, appreciation for user support
- A designer acknowledges and appreciates user feedback.
- A designer expresses gratitude for the support received from users.

9.
Concepts: praising the software, praising software effects
- Users praise and compliment the software and its features.
- A user praises the simulation effect or visual aspects of the software.

10.
Concepts: confirmation, user confirmation
- Confirming or acknowledging a statement.
- A user confirms or agrees with a statement or question.

11.
Concepts: expressive communication, using emoji communication
- Users and designers use expressive language or emojis in their communication.
- Users communicate emotions and reactions using emojis or other non-verbal forms.

12.
Concepts: apologizing for inconvenience, maintaining polite communication
- Designers apologize for any inconvenience and show politeness.
- A designer maintains polite communication, often apologizing for inconveniences.

13.
Concepts: sharing user experiences, sharing classroom experiences
- Users share their experiences and the impact of the software on their teaching or learning.
- Users share positive classroom experiences and highlight student engagement with the software.
===
---
Definitions for each code (13 in total):
1.
Concepts: providing development updates, sharing feature development updates
Relationship: Both involve designers communicating the status and progress of the software.
Criteria: Designers provide updates on the current status and future plans for the software, including specific features.
Phrase: Sharing development updates

2.
Concepts: listing feature updates, announcing feature updates
Relationship: Both involve designers communicating new features, adjustments, and bug fixes.
Criteria: Designers list and announce new features, adjustments, and bug fixes in updates.
Phrase: Announcing feature updates

3.
Concepts: user interaction, requesting clarification
Relationship: Both involve designers and users engaging in clarifying questions or feedback.
Criteria: Designers and users engage in exchanges to clarify functionality or feedback.
Phrase: Seeking clarification through interaction

4.
Concepts: inviting user feedback, encouraging user feedback
Relationship: Both involve designers promoting user feedback.
Criteria: Designers invite and encourage users to provide feedback.
Phrase: Encouraging user feedback

5.
Concepts: responding to user questions, answering for design support
Relationship: Both involve designers addressing user queries or concerns.
Criteria: Designers respond directly to user questions or concerns related to design.
Phrase: Addressing user queries

6.
Concepts: co-designing with users, user-designer interaction
Relationship: Both involve collaborative interactions between users and designers.
Criteria: Designers engage users in the design process through collaborative interaction.
Phrase: Engaging in co-design

7.
Concepts: development goals, discussing future development plans
Relationship: Both involve discussing goals and plans for future development.
Criteria: Individuals share and discuss specific goals and strategies for future development.
Phrase: Discussing future development

8.
Concepts: acknowledging user feedback, appreciation for user support
Relationship: Both involve designers showing recognition and gratitude for user contributions.
Criteria: Designers acknowledge and express appreciation for user feedback and support.
Phrase: Showing appreciation for user feedback

9.
Concepts: praising the software, praising software effects
Relationship: Both involve users complimenting the software and its features or effects.
Criteria: Users praise the software and its simulation effects or visual aspects.
Phrase: Praising software features

10.
Concepts: confirmation, user confirmation
Relationship: Both involve users confirming or agreeing with a statement.
Criteria: Users confirm or agree with statements or questions.
Phrase: Confirming statements

11.
Concepts: expressive communication, using emoji communication
Relationship: Both involve using non-verbal forms of communication.
Criteria: Users and designers use expressive language or emojis to communicate emotions and reactions.
Phrase: Using expressive communication

12.
Concepts: apologizing for inconvenience, maintaining polite communication
Relationship: Both involve designers maintaining politeness, often through apologies.
Criteria: Designers apologize for inconveniences and maintain polite communication.
Phrase: Maintaining polite communication

13.
Concepts: sharing user experiences, sharing classroom experiences
Relationship: Both involve users sharing their experiences with the software in educational contexts.
Criteria: Users share their experiences and the impact of the software on teaching or learning, including classroom engagement.
Phrase: Sharing educational experiences
---