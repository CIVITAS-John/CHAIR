You are an expert in thematic analysis clarifying the criteria of qualitative codes. Do not attempt to merge codes now.
Consider provided quotes, and note that each quote is independent of others.
Write clear and generalizable criteria for each code and do not introduce unnecessary details.
If necessary, refine labels to be more accurate, but do not repeat yourself.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (24 in total):
1. 
Criteria: {Who did what, and how for code 1}
Label: {A descriptive label of code 1}
...
24.
Criteria: {Who did what, and how for code 24}
Label: {A descriptive label of code 24}
---
~~~
1.
Label: probing for specific issues
Quotes:
- Designer: What problems did you encounter during use?

2.
Label: offering assistance
Quotes:
- Designer: You can download Windows in the group files.
- Designer: What problems did you encounter during use?
- Designer: I'll upload one now... Are you a teacher?

3.
Label: describing user experience
Quotes:
- Designer: We try to design it so that it can be used without additional instructions, or we will provide some prompts when you open it for the first time based on feedback

4.
Label: providing context for request
Quotes:
- User: Mainly, the school is building an information-based school

5.
Label: explaining school’s initiative
Quotes:
- User: Mainly, the school is building an information-based school

6.
Label: justifying need for user manual
Quotes:
- User: Mainly, the school is building an information-based school

7.
Label: emphasizing importance for school
Quotes:
- User: Need the user manual for this software

8.
Label: offering private assistance
Quotes:
- Designer: Oh, please message me privately and tell me what you roughly need

9.
Label: seeking detailed requirements
Quotes:
- Designer: Oh, please message me privately and tell me what you roughly need

10.
Label: providing feedback on current limitations
Quotes:
- User: This is good, I hope it can be very convenient to draw circuit diagrams, and I also hope there is a function to hide the background grid with one click, which is convenient for us teachers to take screenshots for test papers. Currently, there is no software that makes it easy to draw circuit diagrams for exam questions

11.
Label: sharing ongoing research
Quotes:
- Designer: Actually, we are researching the bidirectional conversion between physical diagrams and circuit diagrams

12.
Label: explaining development focus
Quotes:
- Designer: Actually, we are researching the bidirectional conversion between physical diagrams and circuit diagrams

13.
Label: expanding scope of software
Quotes:
- User: Can you also include mechanics experiments?

14.
Label: expressing educational needs
Quotes:
- User: Can you also include mechanics experiments?

15.
Label: elaborating on feature
Quotes:
- Designer: For example, you can see the corresponding circuit diagram after connecting the physical diagram, or vice versa

16.
Label: setting timeline for new features
Quotes:
- Designer: Mechanics will have to wait until electromagnetism is figured out; it will take some more time

17.
Label: explaining development process
Quotes:
- Designer: Mechanics will have to wait until electromagnetism is figured out; it will take some more time

18.
Label: expressing approval
Quotes:
- User: It's already starting to take shape [Emoji]
- User: This idea is really good
- User: Oh, this is nice

19.
Label: showing support for development
Quotes:
- User: Oh, this is nice

20.
Label: setting development goals
Quotes:
- Designer: Hope to figure out electromagnetism before the end of the year

21.
Label: highlighting convenience
Quotes:
- Designer: With bidirectional conversion, you can directly do problems in the application

22.
Label: addressing educational needs
Quotes:
- Designer: For electricity, we plan to create a function for simulated experiment assessment; it will add many experimental details, such as zero adjustment (of course, only useful in specific modes, otherwise it would be cumbersome to use regularly)
- Designer: With bidirectional conversion, you can directly do problems in the application
- Designer: [Image] This one, right?
- User: Left side

23.
Label: reiterating feature explanation
Quotes:
- Designer: For example, see the circuit diagram to connect the physical diagram, or vice versa

24.
Label: ensuring understanding
Quotes:
- Designer: For example, see the circuit diagram to connect the physical diagram, or vice versa
- Designer: [Image] This one, right?
===
Here are the definitions for each code with clear and generalizable criteria:

---
Definitions for each code:

1. Criteria: Designer asks about user experience to identify specific issues.
Label: probing for specific issues

2. Criteria: Designer provides resources or offers help to users.
Label: offering assistance

3. Criteria: Designer describes how the software is intended to be used or experienced.
Label: describing user experience

4. Criteria: User provides background information or context for their request.
Label: providing context for request

5. Criteria: User explains the school's goals or initiatives related to the software.
Label: explaining school’s initiative

6. Criteria: User justifies the need for a user manual or guidance.
Label: justifying need for user manual

7. Criteria: User highlights the importance of the software for their school.
Label: emphasizing importance for school

8. Criteria: Designer offers one-on-one help or private communication.
Label: offering private assistance

9. Criteria: Designer asks for specific details or requirements from the user.
Label: seeking detailed requirements

10. Criteria: User provides feedback on the current limitations or shortcomings of the software.
Label: providing feedback on current limitations

11. Criteria: Designer shares information about ongoing research or development.
Label: sharing ongoing research

12. Criteria: Designer explains the focus or priorities of the development process.
Label: explaining development focus

13. Criteria: User suggests or requests additional features or functionality.
Label: expanding scope of software

14. Criteria: User expresses educational needs or requirements.
Label: expressing educational needs

15. Criteria: Designer elaborates on a specific feature or functionality.
Label: elaborating on feature

16. Criteria: Designer sets a timeline or estimate for when new features will be available.
Label: setting timeline for new features

17. Criteria: Designer explains the process or approach to development.
Label: explaining development process

18. Criteria: User expresses positive emotions or approval towards the software or idea.
Label: expressing approval

19. Criteria: User shows support or encouragement for the development process.
Label: showing support for development

20. Criteria: Designer sets goals or targets for the development process.
Label: setting development goals

21. Criteria: Designer highlights the convenience or benefits of a feature.
Label: highlighting convenience

22. Criteria: Designer addresses or responds to educational needs or requirements.
Label: addressing educational needs

23. Criteria: Designer reiterates or clarifies an explanation of a feature.
Label: reiterating feature explanation

24. Criteria: Designer ensures the user understands a concept or feature.
Label: ensuring understanding