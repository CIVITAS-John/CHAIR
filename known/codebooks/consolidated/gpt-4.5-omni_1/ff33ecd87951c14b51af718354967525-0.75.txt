You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (15 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
15. 
Concepts: {Repeat the input 15}
Relationship: {What is logical relationship between concepts in code 15, or N/A if not applicable}
Criteria: {Who did what, and how for code 15}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: detailed overview of update, detail bug fixes and new features
- Provides a detailed overview of new features and bug fixes in an update.
- Detail specific bug fixes and new features in updates.

2.
Concepts: announce planned updates, announce version updates
- Announce and share information about upcoming updates and new features.
- Announce and describe the release of new software versions and updates.

3.
Concepts: share development plans, share future development plans
- Share detailed development plans and timelines for upcoming updates.
- Information about future development plans or directions.

4.
Concepts: explain features, explanation of upcoming features
- Explain new or existing features and functionalities of the software.
- Describing upcoming features or functionalities in detail.

5.
Concepts: answer about progress, provide development updates
- Updates or explanations regarding progress on current development.
- Provide information about development status, updates, and future plans.

6.
Concepts: outline future design plans, discuss future design possibilities
- Outline future design plans and list features for future development.
- Suggest and discuss potential future design possibilities and development plans.

7.
Concepts: accept and implement suggestions, acknowledge and plan implementation
- Designers accept and plan to implement user suggestions in future updates.
- Designers acknowledge user feedback and discuss plans to implement it in future updates.

8.
Concepts: use emojis to express emotions, emoji-based communication
- Use emojis to express emotions or reactions.
- Use of emojis to communicate emotions, reactions, or questions concisely.

9.
Concepts: praising software, express positive feedback
- Users praise the software for its practicality, effectiveness, or positive impact.
- Users express approval, satisfaction, or appreciation for the software and its features.

10.
Concepts: show consideration, apologize for disturbances
- Designers showing consideration for the community, such as apologizing for disturbances.
- Designers express politeness and apologize for any disturbances caused.

11.
Concepts: creating a feedback loop, integrating user feedback
- Processes where user feedback is solicited, considered, and implemented in design decisions.
- Instances where user feedback is acknowledged, sought, and incorporated into the design process.

12.
Concepts: ask questions, seek clarification
- Ask questions to seek information or clarification.
- Seek clarification by asking questions.

13.
Concepts: request usage instructions, request user manual
- Request guidance or instructions on how to use the software.
- Request access to a user manual or additional documentation for better understanding of the software.

14.
Concepts: user feedback request, encourage user feedback
- Requesting feedback or suggestions from users.
- Prompt and encourage users to give feedback and suggestions.

15.
Concepts: suggest improvements, propose new features
- Suggest improvements and provide feedback about software features.
- Make suggestions and propose new features to improve the software.
===
---
Definitions for each code (15 in total):
1.
Concepts: detailed overview of update, detail bug fixes and new features
Relationship: Both concepts relate to providing comprehensive information about updates.
Criteria: The designers provide a detailed overview of updates, including specific bug fixes and new features.
Phrase: Detailing update features and fixes

2.
Concepts: announce planned updates, announce version updates
Relationship: Both concepts involve communicating upcoming and new updates to users.
Criteria: The designers announce and share information about planned and released software updates.
Phrase: Announcing updates

3.
Concepts: share development plans, share future development plans
Relationship: Both concepts involve sharing information about future development directions.
Criteria: The designers share detailed plans and timelines for future software development.
Phrase: Sharing development plans

4.
Concepts: explain features, explanation of upcoming features
Relationship: Both concepts involve providing explanations about software features.
Criteria: The designers explain new or existing features and provide detailed descriptions of upcoming functionalities.
Phrase: Explaining features

5.
Concepts: answer about progress, provide development updates
Relationship: Both concepts involve communicating the progress and status of development.
Criteria: The designers provide updates and explanations regarding the current progress and development status.
Phrase: Providing development updates

6.
Concepts: outline future design plans, discuss future design possibilities
Relationship: Both concepts involve discussing future design directions and possibilities.
Criteria: The designers outline and discuss potential future design plans and features.
Phrase: Discussing future designs

7.
Concepts: accept and implement suggestions, acknowledge and plan implementation
Relationship: Both concepts involve acknowledging user feedback and planning its implementation.
Criteria: The designers accept user suggestions, acknowledge feedback, and plan to implement it in future updates.
Phrase: Implementing user suggestions

8.
Concepts: use emojis to express emotions, emoji-based communication
Relationship: Both concepts involve using emojis for communication.
Criteria: The users and designers use emojis to express emotions, reactions, or questions concisely.
Phrase: Using emojis for communication

9.
Concepts: praising software, express positive feedback
Relationship: Both concepts involve users expressing positive sentiments about the software.
Criteria: The users praise the software and express satisfaction or appreciation for its features.
Phrase: Praising the software

10.
Concepts: show consideration, apologize for disturbances
Relationship: Both concepts involve expressing politeness and consideration for the community.
Criteria: The designers show consideration for the community by apologizing for any disturbances caused.
Phrase: Apologizing for disturbances

11.
Concepts: creating a feedback loop, integrating user feedback
Relationship: Both concepts involve processes where user feedback is incorporated into design decisions.
Criteria: The designers solicit, consider, and implement user feedback into the design process.
Phrase: Integrating user feedback

12.
Concepts: ask questions, seek clarification
Relationship: Both concepts involve seeking information through questioning.
Criteria: The users or designers ask questions to obtain information or clarification.
Phrase: Seeking clarification

13.
Concepts: request usage instructions, request user manual
Relationship: Both concepts involve requesting guidance on software usage.
Criteria: The users request instructions or a user manual for better understanding of the software.
Phrase: Requesting usage instructions

14.
Concepts: user feedback request, encourage user feedback
Relationship: Both concepts involve prompting users to provide feedback.
Criteria: The designers request and encourage users to give feedback and suggestions.
Phrase: Encouraging user feedback

15.
Concepts: suggest improvements, propose new features
Relationship: Both concepts involve making suggestions to improve the software.
Criteria: The users suggest improvements and propose new features for the software.
Phrase: Proposing improvements
---