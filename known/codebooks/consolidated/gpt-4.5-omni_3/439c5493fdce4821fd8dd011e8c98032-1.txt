You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (64 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
64. 
Concepts: {Repeat the input 64}
Relationship: {What is logical relationship between concepts in code 64, or N/A if not applicable}
Criteria: {Who did what, and how for code 64}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: version update notes, feature and bug update, new features and fixes, feature and update list
- When a designer lists notes on version updates, including features and bug fixes.
- When a designer lists updates including new features, components, and bug fixes.
- A designer lists newly added features, components, adjustments, and bug fixes.
- When a designer lists new features, components, and fixes in an update.

2.
Concepts: product update, technical updates
- Instances where designers provide information about updates or changes to the Physics Lab software.
- Instances where designers provide updates or technical changes to the Physics Lab tool.

3.
Concepts: updates, feature update
- Information about changes or new features in upcoming updates.
- Information about new features and updates being added to the product.
- Instances where designers announce new features, updates, or bug fixes based on user input.

4.
Concepts: developer announcement, feature release announcement
- A designer announcing new features, updates, or bug fixes.
- A designer announces the release of new features or updates.

5.
Concepts: update announcement, software update announcement, new feature announcement
- Instances where designers provide information about upcoming updates and new features.
- Designers provide updates about the software versions and new features.
- A designer announces details about a new software update.
- Designers provide information about software updates or new versions.
- Designers outline new features and updates in an upcoming software version.

6.
Concepts: announce version details, announce new version release
- Designers announce new version details and updates to the community.
- Announcing the release of a new version and listing its updates.

7.
Concepts: announcement, plan announcements
- A designer makes announcements related to development plans or version updates.
- A designer announces plans, updates, or future features.

8.
Concepts: planned updates, release plans communication
- Information shared by designers about upcoming features or updates.
- Designers explain plans for upcoming updates or releases.

9.
Concepts: feature update confirmation, upcoming updates announcement, version update status
- A designer confirms an upcoming feature or version update.
- A designer outlines upcoming update details and invites suggestions.
- A designer provides information on the status and details of an upcoming version update.

10.
Concepts: update description, detail specific updates
- A designer provides details about an update.
- A designer listing specific new updates or details about features, components, or improvements to the platform.

11.
Concepts: community update, community communication
- Instances where designers provide updates or announcements about the software.
- Designers communicate with the community about new releases and updates.

12.
Concepts: inform about updates, update information
- A designer informing the community about the availability of updates.
- When a designer informs the community about software updates and where to download them.

13.
Concepts: update notification, new version availability
- A designer informs that a new version has been released or posted.
- When a designer informs the community that a new version is available.

14.
Concepts: release process, share info on app release
- A designer describes the steps or status involved in releasing a new version of the app.
- A designer informs about the pending status of an app release.

15.
Concepts: progress communication, communication of updates
- Designers or users communicate about the progress of updates or new versions being released.
- Instances where designers communicate updates, release schedules, or new features to users.

16.
Concepts: visual update sharing, progress update via image
- When a designer shares images related to development updates.
- A designer offering a visual update or progress status.

17.
Concepts: testing status explanation, testing phase notification
- A designer explains the current status of a feature being tested.
- A designer notes that a feature or version is currently in the testing phase.

18.
Concepts: development plan, development plans sharing
- Designers share development plans or download links with the community.
- When a designer shares the development plans with the community.

19.
Concepts: interest and future discussion, share potential future direction
- A designer discusses broader interests or additional possible projects.
- A designer shares personal interests that could influence future directions.

20.
Concepts: communicate ongoing work, communicate about progress and plans
- A designer communicating about ongoing work on a feature or project.
- A designer discussing ongoing work and plans for future development.

21.
Concepts: current feature development, current development efforts
- Sharing information about the current development and research efforts.
- Describing current focus or ongoing efforts in the development process.

22.
Concepts: future plans detail, future feature planning, future design intentions
- Designers detail plans or future actions regarding compatibility or feature upgrades.
- A designer mentions the planning or development of a future feature.
- A designer outlines plans or intentions for future design elements or features.
- When a designer considers future design plans and potential adjustments.

23.
Concepts: feature list, list upcoming features
- Listing upcoming or planned features related to the software.
- Designers list features that will be included in future updates.

24.
Concepts: update planning, future update plans
- A statement about planning or including new updates in future releases.
- Statements about the implementation of features in future updates.

25.
Concepts: development priorities, development prioritization
- When a designer outlines the priorities of development phases.
- Instances where designers discuss the prioritization of different features or sections to be developed.
- Suggesting the prioritization or approach to feature development.

26.
Concepts: feedback prioritization, feedback on prioritization
- Designers prioritize user feedback in planning future updates or feature implementations.
- A designer providing feedback on the prioritization of feature development.

27.
Concepts: development timeline, feature development timeline
- Providing a timeline or estimate for feature development and release.
- Providing a timeline for the development or completion of a feature.

28.
Concepts: give a timeline, release timeline
- Providing a timeline or schedule for upcoming updates and releases.
- Giving a specific timeline for when a feature or version will be released.

29.
Concepts: update schedule, release schedule, update timeline sharing
- Designers provide a timeline for future updates.
- Designers provide detailed timelines for when updates or new versions will be released.
- A designer shares specific timelines for forthcoming updates.

30.
Concepts: feature stability, long-term stability
- Highlighting the stability and reliability of a feature once implemented.
- Indicating that a feature, once implemented, will ensure stability and efficiency.

31.
Concepts: expectation setting, set timeline expectation
- When a designer sets user expectations regarding timelines.
- A designer sets or manages expectations regarding timelines for feature release.

32.
Concepts: feature realization assurance, feature implementation confirmation, confirm future implementation
- A designer confirms that a feature will eventually be realized.
- Designers provide a definitive statement on the implementation of features.
- A designer confirms that a feature or implementation will be available in the future.

33.
Concepts: classroom success, sharing classroom experiences
- Users share success stories of using the software in a classroom setting.
- Users share classroom experiences related to using the software.

34.
Concepts: classroom setup inquiry, internet availability inquiry
- Inquiring about classroom setups, specifically internet access.
- A designer inquiring about the availability of internet in a classroom setting.

35.
Concepts: teaching experience, share teaching experience
- Sharing personal experience related to teaching.
- Sharing one's experiences and credentials in teaching, adding credibility or context.

36.
Concepts: provide background information, professional background sharing
- Users share their professional backgrounds to provide context.
- Users share their professional background to establish credibility and context.

37.
Concepts: background inquiry, professional background inquiry, user background inquiry
- When a designer asks about a user's professional background.
- When a designer asks if a user is a teacher.
- A designer asks users about their background, specifically related to their teaching level.
- Inquiring about the background of the user.

38.
Concepts: user role inquiry, user identity inquiry
- Designers inquire about the user's role or profession.
- A designer inquires about the professional identity of a user.

39.
Concepts: community support, user support appreciation
- Instances where users express support, encouragement, or appreciation for the designers' efforts.
- Designers show appreciation towards users for their support.

40.
Concepts: appreciation expression, express gratitude, gratitude and acknowledgment
- Users or designers express gratitude or appreciation for efforts or support.
- Instances where users express thanks or appreciation for the work done by the designers or other community members.
- Instances where users or designers express gratitude or acknowledge contributions.
- Users expressing gratitude or acknowledgment for the designers' work.
- Expressions of gratitude and recognition of user contributions.

41.
Concepts: user appreciation, user interaction and gratitude
- Expressions of thanks or appreciation from users.
- Users interact with and express appreciation towards other members or efforts.

42.
Concepts: enthusiasm, recognition of effort, dedication appreciation, appreciation response
- When a user or designer expresses enthusiasm or gratitude.
- Instances where users acknowledge and appreciate the efforts of the designers.
- When a user appreciates the designers' dedication to quality.
- When a user acknowledges and thanks for the designer's effort.

43.
Concepts: compliment on 3d effect, compliment software's 3d effect
- A user complimenting the development work, specifically on the 3D effects.
- Positive commentary focusing specifically on the visual 3D effects of the software.

44.
Concepts: positive feedback, share positive feedback
- Positive feedback about the software's features or performance.
- Users providing affirmative, often positive feedback about the software or ideas.

45.
Concepts: user approval, feature appreciation, appreciation of features
- Users express approval or positive feedback about the software or its features.
- Users express positive sentiments towards specific features or ideas.
- Users express approval of the features and usefulness of the software.

46.
Concepts: feedback invitation, encouraging feedback
- Inviting feedback, suggestions, or requirements from the community.
- Encouraging the community to actively provide feedback or suggestions.

47.
Concepts: invite participation, encourage participation
- Inviting members to contribute more actively or provide more feedback.
- Encourage community members to participate or provide input.

48.
Concepts: appreciation, expressing gratitude
- Expressing acknowledgement and appreciation, often including gestures of thanks.
- Expressing gratitude or appreciation in communication.

49.
Concepts: acknowledge community support, appreciation for teachers' help
- Designers acknowledge the support from the community.
- Designers express appreciation for the support from the community.

50.
Concepts: version type explanation, software version information
- The actor explains the type or version of the software shared in the group.
- The actor informs others about the version status of the software.

51.
Concepts: solicit suggestions, encourage feedback
- The actor solicits suggestions and feedback from the community.
- The actor asks for and encourages feedback and suggestions from the community.

52.
Concepts: update anticipation, anticipation expression
- A user expresses eagerness or anticipation about an update.
- The actor expresses anticipation or excitement about upcoming updates.

53.
Concepts: update confirmation, confirm update completion
- A user confirms that they have updated their software or tool.
- A user confirms that they have completed an update.

54.
Concepts: resource utilization, acknowledgment of resources
- A user acknowledging the use or access to shared resources.
- The actor acknowledges that they have accessed shared resources.

55.
Concepts: acknowledging feedback, user acknowledgment
- Acknowledging user feedback or comments.
- A user acknowledging information or providing a brief response.

56.
Concepts: acknowledge help, acknowledgment of resolution
- A user expresses gratitude.
- A user expresses gratitude for resolving their issue.

57.
Concepts: clarification response, response clarification
- The actor responds to a clarification request.
- The actor responds to clarify or confirm the removal or addition of features.

58.
Concepts: self-solved, self-answer
- A user acknowledges finding a solution independently through available resources.
- An instance where a user acknowledges information and effectively resolves their own query by finding the necessary resource or information.

59.
Concepts: response to question, providing answers
- Users provide responses to questions.
- Responding to queries or providing an answer to a question.

60.
Concepts: short response, affirmative response
- A user provides a simple, affirmative response.
- Users give short affirmative responses.

61.
Concepts: providing additional context, provide further information
- A user gives additional reasons or context to support a previous point.
- A user providing additional information or clarification within the discussion.

62.
Concepts: context of use, usability and context of use
- Instances where users describe the specific contexts in which they use the software.
- Discussions about how the software is used in different contexts and its usability.

63.
Concepts: knowledge sharing, information sharing for design
- Designers provide information or knowledge relevant to system capabilities or features.
- A user shares information relevant to the design or functionality of the system.

64.
Concepts: ask follow-up question, private messaging request
- A designer asking for follow-up details on a user's request via private message.
- A designer requests that a user message them privately for further discussion.
===
---
Definitions for each code (64 in total):
1.
Concepts: version update notes, feature and bug update, new features and fixes, feature and update list
Relationship: All concepts involve a designer detailing specific changes, fixes, or new additions in an update.
Criteria: A designer lists notes on version updates, including features, components, and bug fixes.
Phrase: Detailing version updates

2.
Concepts: product update, technical updates
Relationship: Both concepts pertain to updates or changes provided by designers to the Physics Lab software.
Criteria: Designers provide information about updates or technical changes to the Physics Lab software.
Phrase: Providing product updates

3.
Concepts: updates, feature update
Relationship: Concepts revolve around informing users about changes or new features in upcoming updates.
Criteria: Designers announce new features, updates, or bug fixes based on user input.
Phrase: Announcing updates

4.
Concepts: developer announcement, feature release announcement
Relationship: Concepts share the aspect of designers announcing new developments or updates.
Criteria: Designers announce the release of new features, updates, or bug fixes.
Phrase: Announcing feature releases

5.
Concepts: update announcement, software update announcement, new feature announcement
Relationship: All concepts involve designers providing information about software updates or new features.
Criteria: Designers announce details about upcoming software updates and new features.
Phrase: Announcing software updates

6.
Concepts: announce version details, announce new version release
Relationship: Both involve designers announcing new version details and updates.
Criteria: Designers announce new version details and updates to the community.
Phrase: Announcing version details

7.
Concepts: announcement, plan announcements
Relationship: Concepts involve designers making general announcements regarding development plans or updates.
Criteria: Designers announce development plans, updates, or future features.
Phrase: Making announcements

8.
Concepts: planned updates, release plans communication
Relationship: Concepts focus on designers sharing information about future updates or release plans.
Criteria: Designers share information about upcoming features or updates.
Phrase: Communicating planned updates

9.
Concepts: feature update confirmation, upcoming updates announcement, version update status
Relationship: Concepts involve providing information or confirmation about upcoming updates.
Criteria: Designers confirm upcoming features or version updates and provide details.
Phrase: Confirming upcoming updates

10.
Concepts: update description, detail specific updates
Relationship: Both concepts involve providing detailed information about specific updates.
Criteria: Designers list specific updates or details about features, components, or improvements.
Phrase: Describing updates

11.
Concepts: community update, community communication
Relationship: Concepts involve designers communicating updates or announcements to the community.
Criteria: Designers provide updates or announcements to the community about new releases.
Phrase: Updating the community

12.
Concepts: inform about updates, update information
Relationship: Both involve a designer informing the community about software updates.
Criteria: Designers inform the community about the availability of updates and where to download them.
Phrase: Informing about updates

13.
Concepts: update notification, new version availability
Relationship: Concepts focus on informing the community that a new version has been released.
Criteria: Designers inform the community that a new version is available.
Phrase: Notifying about new versions

14.
Concepts: release process, share info on app release
Relationship: Both involve sharing information about the status or steps of releasing a new version.
Criteria: Designers describe the status or steps involved in releasing a new version of the app.
Phrase: Sharing release process

15.
Concepts: progress communication, communication of updates
Relationship: Concepts involve communicating the progress of updates or new versions.
Criteria: Designers communicate the progress of updates, release schedules, or new features to users.
Phrase: Communicating progress

16.
Concepts: visual update sharing, progress update via image
Relationship: Both involve sharing visual progress updates.
Criteria: Designers share images related to development updates.
Phrase: Sharing visual updates

17.
Concepts: testing status explanation, testing phase notification
Relationship: Concepts focus on informing about the testing status of a feature or version.
Criteria: Designers explain the current status of a feature being tested or in the testing phase.
Phrase: Explaining testing status

18.
Concepts: development plan, development plans sharing
Relationship: Both concepts involve designers sharing development plans with the community.
Criteria: Designers share development plans or details with the community.
Phrase: Sharing development plans

19.
Concepts: interest and future discussion, share potential future direction
Relationship: Concepts involve discussing broader interests or potential future projects.
Criteria: Designers discuss broader interests or additional possible projects and future directions.
Phrase: Discussing future directions

20.
Concepts: communicate ongoing work, communicate about progress and plans
Relationship: Concepts focus on communicating about ongoing work and future plans.
Criteria: Designers communicate about ongoing work and plans for future development.
Phrase: Communicating ongoing work

21.
Concepts: current feature development, current development efforts
Relationship: Both involve sharing information about current development efforts.
Criteria: Designers share information about current development and research efforts.
Phrase: Sharing current development

22.
Concepts: future plans detail, future feature planning, future design intentions
Relationship: Concepts involve detailing future plans or design intentions.
Criteria: Designers detail plans or future intentions regarding compatibility, feature upgrades, or design elements.
Phrase: Detailing future plans

23.
Concepts: feature list, list upcoming features
Relationship: Both involve listing upcoming or planned features.
Criteria: Designers list features that will be included in future updates.
Phrase: Listing upcoming features

24.
Concepts: update planning, future update plans
Relationship: Both concepts focus on planning for future updates.
Criteria: Designers make statements about planning or including new updates in future releases.
Phrase: Planning future updates

25.
Concepts: development priorities, development prioritization
Relationship: Both involve discussing development phase priorities.
Criteria: Designers outline or discuss the prioritization of development phases or features.
Phrase: Outlining development priorities

26.
Concepts: feedback prioritization, feedback on prioritization
Relationship: Both involve prioritizing user feedback in planning updates or features.
Criteria: Designers prioritize and provide feedback on the prioritization of feature development.
Phrase: Prioritizing feedback

27.
Concepts: development timeline, feature development timeline
Relationship: Both involve providing timelines for feature development.
Criteria: Designers provide a timeline or estimate for feature development and release.
Phrase: Providing development timeline

28.
Concepts: give a timeline, release timeline
Relationship: Both involve giving a timeline for updates or releases.
Criteria: Designers provide a timeline or schedule for upcoming updates and releases.
Phrase: Giving release timeline

29.
Concepts: update schedule, release schedule, update timeline sharing
Relationship: Concepts involve providing detailed timelines for updates or versions.
Criteria: Designers provide detailed timelines for when updates or new versions will be released.
Phrase: Sharing update schedule

30.
Concepts: feature stability, long-term stability
Relationship: Both highlight stability and reliability of a feature once implemented.
Criteria: Designers indicate that a feature, once implemented, will ensure stability and efficiency.
Phrase: Ensuring feature stability

31.
Concepts: expectation setting, set timeline expectation
Relationship: Both involve setting expectations regarding timelines.
Criteria: Designers set or manage expectations about timelines for feature releases.
Phrase: Setting timeline expectations

32.
Concepts: feature realization assurance, feature implementation confirmation, confirm future implementation
Relationship: All concepts involve confirming the future implementation of a feature.
Criteria: Designers confirm that a feature will be implemented in the future.
Phrase: Confirming feature implementation

33.
Concepts: classroom success, sharing classroom experiences
Relationship: Concepts involve sharing success stories or experiences in a classroom setting.
Criteria: Users share classroom experiences related to using the software.
Phrase: Sharing classroom success

34.
Concepts: classroom setup inquiry, internet availability inquiry
Relationship: Both involve inquiring about classroom setups and internet availability.
Criteria: Designers inquire about internet access and setups in classrooms.
Phrase: Inquiring about classroom setups

35.
Concepts: teaching experience, share teaching experience
Relationship: Both involve sharing personal teaching experiences.
Criteria: Users share their teaching experiences and credentials.
Phrase: Sharing teaching experience

36.
Concepts: provide background information, professional background sharing
Relationship: Both involve sharing professional backgrounds to provide context.
Criteria: Users share their professional backgrounds to provide context and establish credibility.
Phrase: Sharing professional background

37.
Concepts: background inquiry, professional background inquiry, user background inquiry
Relationship: Concepts involve inquiring about a user's professional background.
Criteria: Designers inquire about a user's background, specifically related to their teaching level or profession.
Phrase: Inquiring about user background

38.
Concepts: user role inquiry, user identity inquiry
Relationship: Both involve inquiring about the user's role or profession.
Criteria: Designers inquire about the professional identity or role of a user.
Phrase: Inquiring about user role

39.
Concepts: community support, user support appreciation
Relationship: Both involve expressing support and appreciation within the community.
Criteria: Instances where users express support and designers show appreciation for user support.
Phrase: Expressing community support

40.
Concepts: appreciation expression, express gratitude, gratitude and acknowledgment
Relationship: Concepts involve expressions of gratitude or appreciation for efforts or support.
Criteria: Users or designers express gratitude and acknowledge contributions.
Phrase: Expressing gratitude

41.
Concepts: user appreciation, user interaction and gratitude
Relationship: Both involve users expressing appreciation and interacting positively with other members.
Criteria: Users interact with and express appreciation towards other members or efforts.
Phrase: Expressing user appreciation

42.
Concepts: enthusiasm, recognition of effort, dedication appreciation, appreciation response
Relationship: Concepts involve acknowledging and appreciating efforts, dedication, and enthusiasm.
Criteria: Users or designers express enthusiasm and gratitude for efforts and dedication.
Phrase: Acknowledging efforts

43.
Concepts: compliment on 3d effect, compliment software's 3d effect
Relationship: Both involve a user complimenting the software's 3D effects.
Criteria: Users provide positive commentary specifically on the visual 3D effects of the software.
Phrase: Complimenting 3D effects

44.
Concepts: positive feedback, share positive feedback
Relationship: Concepts focus on users providing affirmative and positive feedback.
Criteria: Users provide positive feedback about the software's features or performance.
Phrase: Sharing positive feedback

45.
Concepts: user approval, feature appreciation, appreciation of features
Relationship: Concepts involve users expressing approval and positive sentiments towards the software or its features.
Criteria: Users express approval and positive feedback about the features and usefulness of the software.
Phrase: Expressing feature appreciation

46.
Concepts: feedback invitation, encouraging feedback
Relationship: Both concepts involve inviting or encouraging the community to provide feedback.
Criteria: Designers invite and encourage the community to actively provide feedback or suggestions.
Phrase: Inviting feedback

47.
Concepts: invite participation, encourage participation
Relationship: Concepts involve inviting or encouraging active participation from community members.
Criteria: Designers invite and encourage community members to participate or provide input.
Phrase: Encouraging participation

48.
Concepts: appreciation, expressing gratitude
Relationship: Both involve expressing recognition and thanks.
Criteria: Users or designers express gratitude or appreciation in communication.
Phrase: Expressing appreciation

49.
Concepts: acknowledge community support, appreciation for teachers' help
Relationship: Concepts involve designers expressing appreciation for community and teacher support.
Criteria: Designers acknowledge and express appreciation for the support from the community and teachers.
Phrase: Acknowledging community support

50.
Concepts: version type explanation, software version information
Relationship: Both involve providing information about the software version.
Criteria: Designers explain the type or status of the software version shared in the group.
Phrase: Explaining software versions

51.
Concepts: solicit suggestions, encourage feedback
Relationship: Concepts focus on asking for and encouraging feedback and suggestions from the community.
Criteria: Designers solicit and encourage feedback and suggestions from the community.
Phrase: Soliciting suggestions

52.
Concepts: update anticipation, anticipation expression
Relationship: Both involve expressing eagerness or anticipation about an update.
Criteria: Users express eagerness or anticipation about upcoming updates.
Phrase: Expressing update anticipation

53.
Concepts: update confirmation, confirm update completion
Relationship: Both involve confirming that an update has been completed.
Criteria: Users confirm that they have updated their software or tool.
Phrase: Confirming update completion

54.
Concepts: resource utilization, acknowledgment of resources
Relationship: Concepts involve acknowledging the use or access to shared resources.
Criteria: Users acknowledge that they have accessed shared resources.
Phrase: Acknowledging resource use

55.
Concepts: acknowledging feedback, user acknowledgment
Relationship: Both involve acknowledging user feedback or comments.
Criteria: Users acknowledge feedback or information provided by others.
Phrase: Acknowledging feedback

56.
Concepts: acknowledge help, acknowledgment of resolution
Relationship: Concepts involve expressing gratitude for help or issue resolution.
Criteria: Users express gratitude for resolving their issues.
Phrase: Acknowledging help

57.
Concepts: clarification response, response clarification
Relationship: Both involve providing a response to clarify or confirm a request.
Criteria: Users respond to clarification requests by confirming or explaining details.
Phrase: Providing clarification

58.
Concepts: self-solved, self-answer
Relationship: Concepts involve users acknowledging finding solutions independently.
Criteria: Users acknowledge finding a solution independently through available resources.
Phrase: Self-solving issues

59.
Concepts: response to question, providing answers
Relationship: Both involve responding to questions or providing answers.
Criteria: Users respond to and provide answers to questions.
Phrase: Answering questions

60.
Concepts: short response, affirmative response
Relationship: Both involve providing a simple, affirmative response.
Criteria: Users provide short affirmative responses.
Phrase: Giving affirmative responses

61.
Concepts: providing additional context, provide further information
Relationship: Both involve giving additional reasons or context to support a previous point.
Criteria: Users provide additional information or clarification in discussions.
Phrase: Providing additional context

62.
Concepts: context of use, usability and context of use
Relationship: Both involve discussing the usability and specific contexts of software use.
Criteria: Users describe how the software is used in different contexts and its usability.
Phrase: Discussing context of use

63.
Concepts: knowledge sharing, information sharing for design
Relationship: Both involve sharing information relevant to system capabilities or design.
Criteria: Designers or users share information relevant to the design or functionality of the system.
Phrase: Sharing design knowledge

64.
Concepts: ask follow-up question, private messaging request
Relationship: Concepts involve requesting follow-up details through private messaging.
Criteria: Designers ask for follow-up details on a user's request via private message.
Phrase: Requesting follow-up details
---