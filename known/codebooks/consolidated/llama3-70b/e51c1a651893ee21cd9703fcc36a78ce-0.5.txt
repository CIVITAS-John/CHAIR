You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: iterating on design, refining design features
- A designer iterates on design or makes changes and outlines an iterative design process.
- Designer refines or updates design features and proposes design changes or improvements.

2.
Concepts: describing components, highlighting component features
- A designer provides a description of a specific component or tool, or explains component adjustments.
- A designer highlights specific features or characteristics of a component.

3.
Concepts: emphasizing usability, highlighting user experience
- Designers aim for or emphasize usability, considering or prioritizing the usability of a design or feature.
- User or designer highlights the importance of user experience and specifies details to enhance it.

4.
Concepts: emphasizing iterative refinement, prioritizing refinement over completeness
- A user promotes or emphasizes the importance of iterative refinement and step-by-step improvement in content organization or development.
- A user emphasizes the importance of refinement or categorization, suggesting focusing on categorization and refinement rather than completeness.

5.
Concepts: striving for quality, striving for design perfection
- Expressing a desire to improve the quality of something
- Designer justifies the importance of perfecting a design aspect and emphasizes the importance of quality or perfection.

6.
Concepts: component refinement, enhancing simulation realism
- Modifying or refining simulation components
- Designer discusses removing idealized components or making them more realistic.

7.
Concepts: describing school context, describing school computer systems
- Users describe or highlight the context or environment of their schools.
- Users share information about the computer systems or infrastructure in their educational settings.

8.
Concepts: aligning with curriculum, aligning with educational needs
- A designer aligns the software with educational curriculum or standards, or emphasizes the importance of educational relevance and alignment.
- A designer aligns updates or development plans with educational needs, or mentions adding new components or features to address educational needs.

9.
Concepts: mentioning school needs, expressing school needs, expressing educational needs
- Users mention school needs or provide context about the school's focus or priorities.
- Users express school needs or emphasize the importance of a feature or tool for school use.
- Users express educational needs or link their requests to educational goals.

10.
Concepts: expert input sought, seeking expert input
- Seeking expert input or advice from educators or teachers.
- Designers seek expert input or feedback from teachers or users.

11.
Concepts: sharing context, sharing success stories
- Users share context or explain situations that affect their use of Physics Lab.
- Users share success stories or anecdotal experiences with Physics Lab.

12.
Concepts: describing student reactions, expressing student engagement
- User describes student reactions to using the Physics Lab.
- Users express enthusiasm or engagement with the Physics Lab software in a classroom setting.

13.
Concepts: providing feature examples, introducing ideal components
- A designer provides examples to illustrate a concept or feature in the Physics Lab.
- Developers introduce or highlight innovative features or components of the Physics Lab.

14.
Concepts: initiating a conversation, initiating context-specific questions
- A user joins the conversation and asks a question, starting a conversation, asking a question, or initiating communication with the community or designers.
- A designer initiates a context-specific question or inquiry in the Physics Lab's online community.

15.
Concepts: responding to user inquiries, responding to user questions
- A user asks a question, and a designer provides a response that clarifies the user's inquiry.
- A designer responds indirectly to a user's question or comment, or provides a direct answer to a user's question.

16.
Concepts: context for feedback, explaining reasons
- A user provides context or explanation for their request or feedback.
- User explains the reasons behind their request or suggestion, providing an additional reason or explanation in response to a question or concern.

17.
Concepts: providing download guidance, requesting download information
- User seeks or provides instructions for downloading the software.
- User seeks information about downloading or accessing the platform or software.

18.
Concepts: seeking version information, inquiring about platform availability
- Asking about access to a specific version of the software, requesting specific information about a version or release of the software.
- A user inquires about platform availability, inquiring about the availability of a specific feature or version.

19.
Concepts: seeking guidance on pc version, inquiring about pc version
- User inquires about PC version usage, seeking clarification on how to use it.
- A user inquires about the availability or features of a PC version of a software, expressing interest in using a PC version of a product or feature.

20.
Concepts: requests platform accessibility, requesting multi-platform support
- A user requests access to the software on a specific platform.
- A user requests support for multiple platforms or devices, expressing interest in using the application on multiple platforms.

21.
Concepts: topic suggestions, suggesting educational content
- Requesting or suggesting specific topics or features to be included in the platform.
- A user suggests or requests educational content or features, or expresses interest in using the platform for instructional purposes.

22.
Concepts: expressing interest in using the software, expressing interest in diverse learning environments
- User expresses interest in using the Physics Lab software, expressing interest in broader applications of the Physics Lab.
- Users express interest in using the Physics Lab software in diverse educational contexts or settings.

23.
Concepts: proposing new features, suggesting expansion ideas
- A user suggests new ideas or improvements, proposing features or functionalities.
- A user suggests expanding the software's scope or features, proposing new areas or functionalities.

24.
Concepts: make a suggestion, providing development advice, providing design suggestions
- Developer makes a suggestion or proposes an idea for improvement.
- Users advise on how to approach feature development or improvement.
- A user provides design suggestions, promoting best practices in design or development.

25.
Concepts: engaging in discussions, engaging in development discussions
- Users engage in discussions and provide feedback.
- A user engages with the development process by asking questions or providing feedback on feature development.

26.
Concepts: compares software, validates software
- A user compares the software favorably to others, providing a review or evaluation.
- A user validates the effectiveness or usefulness of the software, evaluating its usability or practicality.

27.
Concepts: providing software context, guiding or seeking guidance
- User provides context for how the software is used.
- User offers or requests guidance for using the software.

28.
Concepts: sharing knowledge, sharing common practices
- Users share their expertise or knowledge related to the software.
- Users share insight into prevailing practices or common styles.

29.
Concepts: sharing workarounds, sharing practical solutions
- User shares a solution to overcome a problem or issue.
- The designer shares a practical solution or trick related to the software.

30.
Concepts: analyzing problems, engaging in problem-solving
- Analyzing or troubleshooting a problem or issue in the online community, seeking to understand problems or issues encountered by users.
- User attempts to solve a problem or troubleshoot an issue, engaging in troubleshooting by asking questions or providing solutions.

31.
Concepts: identifying solutions, confirming and acknowledging issue resolution
- User resolves an issue or provides a solution.
- User confirms or diagnoses an issue, or a user acknowledges that an issue has been resolved.

32.
Concepts: confirming design style, confirming design choices and elements
- Users confirm common styles or design approaches.
- Confirming design choices or direction, or user confirms design elements or alignment.
===
Here are the definitions for each code:

---
1.
Concepts: iterating on design, refining design features
Relationship: Iterating on design leads to refining design features.
Criteria: A designer makes changes to a design and outlines an iterative design process to refine design features.
Phrase: Refining design features through iteration.

2.
Concepts: describing components, highlighting component features
Relationship: Describing components involves highlighting their features.
Criteria: A designer explains a component and highlights its specific features or characteristics.
Phrase: Highlighting component features through description.

3.
Concepts: emphasizing usability, highlighting user experience
Relationship: Emphasizing usability involves highlighting user experience.
Criteria: Designers prioritize usability and highlight the importance of user experience, specifying details to enhance it.
Phrase: Enhancing user experience through usability emphasis.

4.
Concepts: emphasizing iterative refinement, prioritizing refinement over completeness
Relationship: Emphasizing iterative refinement leads to prioritizing refinement over completeness.
Criteria: A user promotes iterative refinement, focusing on categorization and refinement rather than completeness.
Phrase: Prioritizing refinement through iterative emphasis.

5.
Concepts: striving for quality, striving for design perfection
Relationship: Striving for quality involves striving for design perfection.
Criteria: A designer expresses a desire to improve quality, justifying the importance of perfecting a design aspect.
Phrase: Pursuing design perfection through quality improvement.

6.
Concepts: component refinement, enhancing simulation realism
Relationship: Component refinement involves enhancing simulation realism.
Criteria: A designer modifies simulation components to make them more realistic.
Phrase: Enhancing simulation realism through component refinement.

7.
Concepts: describing school context, describing school computer systems
Relationship: Describing school context involves describing school computer systems.
Criteria: Users describe their school's context, including information about their computer systems or infrastructure.
Phrase: Describing school context, including computer systems.

8.
Concepts: aligning with curriculum, aligning with educational needs
Relationship: Aligning with curriculum involves aligning with educational needs.
Criteria: A designer aligns software with educational curriculum or standards, addressing educational needs.
Phrase: Aligning with educational needs through curriculum alignment.

9.
Concepts: mentioning school needs, expressing school needs, expressing educational needs
Relationship: Mentioning school needs involves expressing educational needs.
Criteria: Users mention school needs, expressing the importance of a feature or tool for school use.
Phrase: Expressing educational needs through school needs.

10.
Concepts: expert input sought, seeking expert input
Relationship: Seeking expert input involves seeking advice from educators or teachers.
Criteria: Designers seek expert input or feedback from teachers or users.
Phrase: Seeking expert input for design guidance.

11.
Concepts: sharing context, sharing success stories
Relationship: Sharing context involves sharing success stories.
Criteria: Users share context or explain situations that affect their use of Physics Lab, sharing success stories.
Phrase: Sharing success stories through context sharing.

12.
Concepts: describing student reactions, expressing student engagement
Relationship: Describing student reactions involves expressing student engagement.
Criteria: Users describe student reactions to using the Physics Lab, expressing enthusiasm or engagement.
Phrase: Expressing student engagement through reaction description.

13.
Concepts: providing feature examples, introducing ideal components
Relationship: Providing feature examples involves introducing ideal components.
Criteria: A designer provides examples to illustrate a concept or feature, introducing innovative features or components.
Phrase: Introducing ideal components through feature examples.

14.
Concepts: initiating a conversation, initiating context-specific questions
Relationship: Initiating a conversation involves initiating context-specific questions.
Criteria: A user joins the conversation, asking a question or initiating communication with the community or designers.
Phrase: Initiating conversation through context-specific questions.

15.
Concepts: responding to user inquiries, responding to user questions
Relationship: Responding to user inquiries involves responding to user questions.
Criteria: A designer responds to a user's question, providing a direct answer or clarification.
Phrase: Responding to user questions through direct answers.

16.
Concepts: context for feedback, explaining reasons
Relationship: Providing context for feedback involves explaining reasons.
Criteria: A user provides context or explanation for their request or feedback, explaining the reasons behind their request.
Phrase: Explaining reasons through context provision.

17.
Concepts: providing download guidance, requesting download information
Relationship: Providing download guidance involves requesting download information.
Criteria: A user seeks or provides instructions for downloading the software, requesting information about downloading or accessing the platform.
Phrase: Requesting download information through guidance provision.

18.
Concepts: seeking version information, inquiring about platform availability
Relationship: Seeking version information involves inquiring about platform availability.
Criteria: A user asks about access to a specific version of the software, inquiring about platform availability or features.
Phrase: Inquiring about platform availability through version information.

19.
Concepts: seeking guidance on pc version, inquiring about pc version
Relationship: Seeking guidance on PC version involves inquiring about PC version features.
Criteria: A user inquires about PC version usage, seeking clarification on how to use it or inquiring about its availability.
Phrase: Inquiring about PC version features through guidance seeking.

20.
Concepts: requests platform accessibility, requesting multi-platform support
Relationship: Requesting platform accessibility involves requesting multi-platform support.
Criteria: A user requests access to the software on a specific platform, expressing interest in using the application on multiple platforms.
Phrase: Requesting multi-platform support through accessibility requests.

21.
Concepts: topic suggestions, suggesting educational content
Relationship: Topic suggestions involve suggesting educational content.
Criteria: A user requests or suggests specific topics or features to be included in the platform, expressing interest in using the platform for instructional purposes.
Phrase: Suggesting educational content through topic requests.

22.
Concepts: expressing interest in using the software, expressing interest in diverse learning environments
Relationship: Expressing interest in using the software involves expressing interest in diverse learning environments.
Criteria: A user expresses interest in using the Physics Lab software in diverse educational contexts or settings.
Phrase: Expressing interest in diverse learning environments through software interest.

23.
Concepts: proposing new features, suggesting expansion ideas
Relationship: Proposing new features involves suggesting expansion ideas.
Criteria: A user suggests new ideas or improvements, proposing features or functionalities to expand the software's scope.
Phrase: Proposing expansion ideas through feature suggestions.

24.
Concepts: make a suggestion, providing development advice, providing design suggestions
Relationship: Making a suggestion involves providing development advice or design suggestions.
Criteria: A user advises on how to approach feature development or improvement, providing design suggestions or promoting best practices.
Phrase: Providing development advice through suggestion making.

25.
Concepts: engaging in discussions, engaging in development discussions
Relationship: Engaging in discussions involves engaging in development discussions.
Criteria: A user engages in discussions, providing feedback and asking questions about feature development.
Phrase: Engaging in development discussions through feedback provision.

26.
Concepts: compares software, validates software
Relationship: Comparing software involves validating its effectiveness.
Criteria: A user compares the software favorably to others, validating its usability or practicality.
Phrase: Validating software effectiveness through comparison.

27.
Concepts: providing software context, guiding or seeking guidance
Relationship: Providing software context involves guiding or seeking guidance.
Criteria: A user provides context for how the software is used, offering or requesting guidance for using the software.
Phrase: Providing software context through guidance provision.

28.
Concepts: sharing knowledge, sharing common practices
Relationship: Sharing knowledge involves sharing common practices.
Criteria: Users share their expertise or knowledge related to the software, sharing insight into prevailing practices or common styles.
Phrase: Sharing common practices through knowledge sharing.

29.
Concepts: sharing workarounds, sharing practical solutions
Relationship: Sharing workarounds involves sharing practical solutions.
Criteria: A user shares a solution to overcome a problem or issue, providing a practical solution or trick related to the software.
Phrase: Sharing practical solutions through workaround sharing.

30.
Concepts: analyzing problems, engaging in problem-solving
Relationship: Analyzing problems involves engaging in problem-solving.
Criteria: A user analyzes or troubleshoots a problem, seeking to understand problems or issues encountered by users.
Phrase: Engaging in problem-solving through problem analysis.

31.
Concepts: identifying solutions, confirming and acknowledging issue resolution
Relationship: Identifying solutions involves confirming and acknowledging issue resolution.
Criteria: A user resolves an issue or provides a solution, confirming or diagnosing an issue, or acknowledging that an issue has been resolved.
Phrase: Confirming issue resolution through solution identification.

32.
Concepts: confirming design style, confirming design choices and elements
Relationship: Confirming design style involves confirming design choices and elements.
Criteria: Users confirm common styles or design approaches, confirming design choices or direction.
Phrase: Confirming design choices through style confirmation.