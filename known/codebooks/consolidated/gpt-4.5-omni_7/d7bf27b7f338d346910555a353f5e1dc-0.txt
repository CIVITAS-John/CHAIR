You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (13 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
13. 
Concepts: {Repeat the input 13}
Relationship: {What is logical relationship between concepts in code 13, or N/A if not applicable}
Criteria: {Who did what, and how for code 13}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: noting ai constraints, noting ai capacity limitations
- Users note the current limitations of AI in verifying code with external information.
- Users note AI's limitations in handling large datasets or long code pieces.

2.
Concepts: expressing frustration with ai, noting and disliking ai failure
- Users express frustration when AI gets stuck in a loop and cannot resolve errors.
- Users note and dislike the AI's tendency to get stuck in loops and fail to fix certain errors.

3.
Concepts: randomness in ai responses, noting unpredictability in ai responses
- User notes the randomness in AI responses.
- Users find AI responses unpredictable, non-deterministic, and variable.

4.
Concepts: other ways, suggests ai for help-seeking
- Suggests AI could help users write effective help requests for online forums.
- Users suggest AI could help write effective help requests for online user groups.

5.
Concepts: values ai's time-saving potential, highlights ai's time-saving benefits
- The user values the time-saving potential of AI.
- The user highlights the time-saving benefits of using AI tools.

6.
Concepts: emphasize human-ai collaboration, supporting human augmentation with ai
- Users emphasize the importance of AI augmenting human capabilities rather than replacing them.
- Users believe that AI should enhance rather than replace human abilities.

7.
Concepts: inferring user needs, appreciates ai's contextual inference abilities
- AI infers user needs from the context of their input.
- Users appreciate AI's ability to infer their needs from context.

8.
Concepts: evaluating ai-generated code, ai-generated code interaction
- Users review AI-generated code to understand and fix errors.
- The user interacts with and evaluates AI-generated code, including fixing errors and integrating it into the model.

9.
Concepts: error detection value, valuing ai error clarification
- Users value the AI's ability to detect errors that they might overlook.
- Users appreciate specific features of the AI, such as error clarification.

10.
Concepts: prefer simple code, code simplicity and maintainability
- Users discuss the importance of writing simple, maintainable code.
- Interviewee discusses the benefits of simple, maintainable code over complex code.

11.
Concepts: less technical language, appreciating clear ai explanations
- The user appreciates the AI's use of less technical language.
- Users find the AI's explanations clear and not overly technical.

12.
Concepts: appreciating ai-generated code, providing well-commented code
- Users appreciate well-documented and functional code provided by AI.
- Users perceive AI's ability to provide comments and documentation in code.

13.
Concepts: using ai for code optimization, assistance to optimize & debug
- Users use AI to optimize and improve existing code.
- Users use AI to optimize and debug their code by seeking suggestions for improvement.
===
---
Definitions for each code (13 in total):
1.
Concepts: noting ai constraints, noting ai capacity limitations
Relationship: Both concepts address the limitations of AI in specific contexts.
Criteria: Users note the current limitations of AI in verifying code with external information and handling large datasets or long code pieces.
Phrase: Noting AI constraints

2.
Concepts: expressing frustration with ai, noting and disliking ai failure
Relationship: Both concepts involve negative emotional responses to AI's performance issues.
Criteria: Users express frustration and dislike when AI gets stuck in loops and fails to resolve certain errors.
Phrase: Expressing frustration with AI

3.
Concepts: randomness in ai responses, noting unpredictability in ai responses
Relationship: Both concepts describe the variability and lack of consistency in AI responses.
Criteria: Users note the randomness and unpredictability in AI responses, finding them non-deterministic and variable.
Phrase: Noting unpredictability in AI responses

4.
Concepts: other ways, suggests ai for help-seeking
Relationship: Both concepts involve suggestions for alternative uses of AI.
Criteria: Users suggest AI could help write effective help requests for online forums and user groups.
Phrase: Suggesting AI for help-seeking

5.
Concepts: values ai's time-saving potential, highlights ai's time-saving benefits
Relationship: Both concepts emphasize the time-saving advantages of AI.
Criteria: Users value and highlight the time-saving potential and benefits of using AI tools.
Phrase: Valuing AI's time-saving potential

6.
Concepts: emphasize human-ai collaboration, supporting human augmentation with ai
Relationship: Both concepts focus on the collaborative role of AI in enhancing human capabilities.
Criteria: Users emphasize the importance of AI augmenting rather than replacing human abilities.
Phrase: Emphasizing human-AI collaboration

7.
Concepts: inferring user needs, appreciates ai's contextual inference abilities
Relationship: Both concepts involve AI's ability to understand and respond to user needs based on context.
Criteria: Users appreciate AI's ability to infer their needs from the context of their input.
Phrase: Appreciating AI's contextual inference

8.
Concepts: evaluating ai-generated code, ai-generated code interaction
Relationship: Both concepts involve user interaction with and assessment of AI-generated code.
Criteria: Users review, interact with, and evaluate AI-generated code to understand, fix errors, and integrate it into their models.
Phrase: Evaluating AI-generated code

9.
Concepts: error detection value, valuing ai error clarification
Relationship: Both concepts highlight the importance of AI in identifying and clarifying errors.
Criteria: Users value AI's ability to detect errors they might overlook and appreciate its error clarification features.
Phrase: Valuing AI's error detection

10.
Concepts: prefer simple code, code simplicity and maintainability
Relationship: Both concepts emphasize the importance of simplicity and maintainability in coding.
Criteria: Users discuss the importance and benefits of writing simple, maintainable code over complex code.
Phrase: Preferring simple code

11.
Concepts: less technical language, appreciating clear ai explanations
Relationship: Both concepts involve the clarity and accessibility of AI's communication.
Criteria: Users appreciate the AI's use of less technical language and find its explanations clear and not overly technical.
Phrase: Appreciating clear AI explanations

12.
Concepts: appreciating ai-generated code, providing well-commented code
Relationship: Both concepts involve the quality and documentation of AI-generated code.
Criteria: Users appreciate well-documented and functional code provided by AI, including its comments and documentation.
Phrase: Appreciating AI-generated code

13.
Concepts: using ai for code optimization, assistance to optimize & debug
Relationship: Both concepts involve using AI to improve and debug code.
Criteria: Users use AI to optimize and debug their code by seeking suggestions for improvement.
Phrase: Using AI for code optimization
---