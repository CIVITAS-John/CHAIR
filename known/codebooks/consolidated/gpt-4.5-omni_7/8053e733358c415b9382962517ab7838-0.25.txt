You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (64 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
64. 
Concepts: {Repeat the input 64}
Relationship: {What is logical relationship between concepts in code 64, or N/A if not applicable}
Criteria: {Who did what, and how for code 64}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: ask a question, design question
- Users and designers ask questions about various topics.
- A designer asks a question related to design or functionality.

2.
Concepts: gives an answer, query and response, answering for design support
- Users and designers provide answers to specific questions.
- Instances where users ask questions and receive answers from designers or other community members.
- Users provide answers to a designer's questions regarding design support.

3.
Concepts: user support, offer technical support
- Assistance and support provided by designers to help users effectively use the product.
- Designers or users provide technical support or guidance about the software.

4.
Concepts: offer help, seek technical assistance
- A designer offers help or assistance.
- Designers seek technical assistance from others.

5.
Concepts: problem inquiry, engage in troubleshooting
- A team member asks users about any problems they encountered.
- Addressing and resolving issues users encounter.

6.
Concepts: open to alternatives, propose alternatives, offering/seeking alternative
- Openness to alternative methods or solutions.
- Providing suggestions for alternative solutions to issues or problems.
- Users offer or seek alternative solutions.

7.
Concepts: share workaround, usability workaround
- Sharing a workaround or alternative solution.
- Workarounds provided for usability issues.

8.
Concepts: suggest solutions, provide solutions
- Designers share or propose potential solutions to issues or improvements.
- A designer offers solutions or assistance to technical issues or user problems.

9.
Concepts: system requirements, system compatibility
- A designer discusses system requirements for compatibility.
- A team member or user discusses the compatibility of the software with different systems.

10.
Concepts: compatibility assurance, confirm compatibility
- Assurance given by the designer regarding compatibility with different systems.
- Designers confirm the compatibility of the software with specific systems and suggest checking system compatibility.

11.
Concepts: answer about compatibility, inquire about platform compatibility
- Community members answer questions about system compatibility.
- A user inquires about platform compatibility.

12.
Concepts: explain limitations, suggest system limitation, talk about why limitation is addressable, talk about limitation of the solution
- A designer explains the limitations of the current version of the software.
- A designer suggests why an issue cannot be solved due to system limitations.
- A designer explains how a limitation can be addressed or worked around.
- Designers talk about the limitations of certain solutions.

13.
Concepts: acknowledge limitations, highlight technical constraints
- Acknowledging limitations or constraints of a feature or product.
- Users highlight technical constraints or limitations of the software.

14.
Concepts: local export necessity, local export consideration
- Designers mention the necessity of supporting local export features.
- Considering the need for local export functionality.

15.
Concepts: express concern, raise concern for new feature
- Users express concern about updates or features.
- Concerns raised by the designer about the implications of new features.

16.
Concepts: anticipate updates, inquire about update status
- A user expresses anticipation for an update or new features.
- Users inquire about the timing or possibility of upcoming software updates.

17.
Concepts: engage with development process, express interest in platform development
- Users inquire about the development process and upcoming updates.
- A user expresses interest in platform development or updates.

18.
Concepts: expression of interest, provide context for interest
- Expressing personal interest in a topic.
- A user provides context or background for their interest or involvement.

19.
Concepts: reiterate user manual need, request documentation
- Reiterating the need for a user manual.
- A user requests a user manual and justifies the need for documentation.

20.
Concepts: request features, request specific features
- Users request new features or improvements for the Physics Lab tool.
- Users request specific features or functionalities to be added to the software.

21.
Concepts: request, resource request
- A user makes a specific request for features or demonstrations.
- A user requests resources or information about the platform.

22.
Concepts: clarify version, platform clarification
- Asking for clarification about the version of the software.
- Users seek clarification on where to find specific versions of the software.

23.
Concepts: inquire about download process, inquire about software access
- A user inquires about the download process for the platform.
- A user inquires about where to download the software or how to access a specific version.

24.
Concepts: inquiry, information seeking
- Users ask questions to seek information or clarification.
- Users asking questions to gain knowledge or resources related to the software.

25.
Concepts: make technical inquiries, seeking help and guidance
- Users ask technical questions about the platform.
- Users express a need for support and seek guidance or technical assistance for using the software.

26.
Concepts: memory aid, promise to gather feedback, plan to gather opinions
- Designers mention the need to gather opinions or feedback before proceeding with development.
- Designers promise to invite feedback from the group before starting new features.
- A designer mentions plans to gather opinions before starting a new feature.

27.
Concepts: asking for future help, announce future consultation
- Designers ask for future help or consultation from the community.
- A designer acknowledges the community's needs and discusses future plans to address them.

28.
Concepts: improvement promise, commit to improvement
- Promising to improve based on user feedback.
- Designers commit to improving the software based on user feedback.

29.
Concepts: accept user requests, feature request invitation
- Designers acknowledge and accept user requests or suggestions for future updates.
- Designers invite users to suggest new features or improvements.

30.
Concepts: provide specific feedback, mention feedback-based prompts
- A user provides specific feedback or direction.
- Designers mention that feedback has prompted specific design features or instructions.

31.
Concepts: align with user feedback, solution based on feedback
- A designer aligns with user feedback to improve the platform.
- A designer concludes that a feature is needed based on user feedback.

32.
Concepts: user tips, practical advice
- Offering tips or advice to users.
- Offering practical advice or tips.

33.
Concepts: paying respect, pay respect to experts
- A user shows respect before making a feature request.
- Users pay respect to experts before making requests or suggestions.

34.
Concepts: accept suggestion, agree with suggestion, agree to implement suggestion
- Accepting a suggestion made by a community member.
- Users agree with suggestions made by others.
- A designer agrees to implement a user's suggestion.

35.
Concepts: make suggestion, further suggestion, suggestion solicitation
- Making a suggestion or recommendation.
- A user provides further suggestions or recommendations.
- Soliciting suggestions or feedback from users.

36.
Concepts: clarify preference, suggest prioritization
- Users clarify their preferences regarding software features or design.
- Users suggest prioritizing certain features or aspects of the software.

37.
Concepts: user need, highlight usability need, indicate potential user needs
- Users express specific needs or requirements related to the software or its use.
- Users highlight specific usability needs or suggestions for improvement.
- A user indicates potential needs or requirements.

38.
Concepts: reason for suggestion, user input/feedback/suggestion with justifications, justify feature requests
- Users provide reasons for their suggestions.
- A user provides feedback or suggestions with justifications.
- Users explain the reasons behind their requests for new features or improvements.

39.
Concepts: emphasize convenience, suggest practical use case
- A user emphasizes the convenience of a potential feature.
- A user suggests practical use cases for a feature.

40.
Concepts: ease of use, discuss usability
- Discussions related to the ease of use and user-friendliness of the software.
- Users discuss the usability and practicality of the software.

41.
Concepts: compare to similar apps, provide comparative feedback
- A user compares the software favorably to other similar applications.
- Users compare the software to other similar software, highlighting differences.

42.
Concepts: student engagement, sharing classroom experiences, describe classroom success
- A user shares positive feedback about student engagement with the software.
- A user shares their positive classroom experience using the platform.
- Users describe positive responses from students when using the software in class.

43.
Concepts: classroom application, practical application
- Users discuss the application of the software in classroom settings.
- Instances where the practical application of the software in educational settings is discussed.

44.
Concepts: user experience and impact, user experience in educational contexts
- Users sharing their experiences and the impact of the software on their teaching or learning.
- User experiences and challenges in using the software within educational settings.

45.
Concepts: teaching experience, high school teaching experience
- A user shares their teaching experience.
- A user mentions their teaching experience at the high school level.

46.
Concepts: confirm professional role, confirming teacher identity
- A user confirms their professional role as a teacher.
- A designer asks about a user's professional background.

47.
Concepts: teacher, teacher identity
- Statements indicating the user is a teacher or related to teaching.
- Identifying oneself or another as a teacher.

48.
Concepts: mention school initiative, school implementation
- A user mentions a school initiative or project.
- A user mentions the school's efforts towards building an information-based environment.

49.
Concepts: outdated technology, highlight outdated technology
- A user mentions the outdated technology or systems used in their school.
- A user highlights the outdated nature of technology being used.

50.
Concepts: offer context, explain situation
- Users provide context about their environment, situation, or needs.
- A user explains a situation or context that affects their experience.

51.
Concepts: internet availability inquiry, inquire about classroom conditions
- Inquiries about the availability of internet in classrooms.
- A team member inquires about the conditions of the classroom, such as internet availability.

52.
Concepts: network policy, internet restrictions
- Users mention policies related to network use in educational settings.
- Users discuss limitations or restrictions on internet access within school environments.

53.
Concepts: expressive, express emotion
- A user or designer uses expressive language or emojis.
- Expressing emotions through text or emojis.

54.
Concepts: private messaging, request private message
- A designer requests private messaging for detailed discussions.
- A team member requests a user to send a private message for more detailed communication.

55.
Concepts: short response, professional engagement
- A user provides a short, affirmative response.
- A user engages professionally, often with a simple affirmative response.

56.
Concepts: establish credibility, professional background sharing
- Establishing credibility by sharing relevant experience or background.
- Users share their professional background to establish credibility and context.

57.
Concepts: introduce teacher identity, professional background
- A user introduces their teaching experience and background.
- A user provides details about their professional background, including years of experience and teaching levels.

58.
Concepts: group communication, platform communication
- Communicating within the group about updates or new versions.
- Communicating information specific to a platform within the group.

59.
Concepts: avatar customization, image and avatar management
- Discussing customization of avatars or personal identifiers.
- Users or designers discuss image or avatar management.

60.
Concepts: appreciate features, acknowledge craftsmanship
- A user appreciates specific features of the platform.
- A user appreciates the craftsmanship and attention to detail in the platform.

61.
Concepts: appreciate dedication, praise software effectiveness
- A user appreciates the dedication or effort put into the software.
- Users express appreciation for the software's practical usability and effectiveness.

62.
Concepts: enthusiasm, share positive feedback
- Users or designers express enthusiasm or positive sentiments about the software or ideas.
- Users express approval or positive feedback about the software or ideas.

63.
Concepts: acknowledgment and support, gratitude and encouragement
- Instances where support and acknowledgment are expressed within the community.
- Expressions of appreciation and encouragement that help build a positive community atmosphere.

64.
Concepts: close interaction, gratitude to the community
- A community member expresses gratitude or closes an interaction.
- A team member expresses gratitude to the community.
===
---
Definitions for each code (64 in total):
1.
Concepts: ask a question, design question
Relationship: Both involve the act of asking questions, either by users or designers.
Criteria: Users and designers ask questions about various topics, including design or functionality.
Phrase: Ask questions

2.
Concepts: gives an answer, query and response, answering for design support
Relationship: All involve providing answers to queries, either from users or designers.
Criteria: Users and designers provide answers to specific questions, including those related to design support.
Phrase: Provide answers

3.
Concepts: user support, offer technical support
Relationship: Both involve providing assistance and support to users.
Criteria: Designers or users provide technical support or guidance about the software.
Phrase: Offer support

4.
Concepts: offer help, seek technical assistance
Relationship: Both involve the exchange of help or assistance, either offering or seeking.
Criteria: Designers offer help or seek technical assistance from others.
Phrase: Exchange assistance

5.
Concepts: problem inquiry, engage in troubleshooting
Relationship: Both involve addressing and resolving issues users encounter.
Criteria: A team member asks users about any problems they encountered and engages in troubleshooting.
Phrase: Troubleshoot issues

6.
Concepts: open to alternatives, propose alternatives, offering/seeking alternative
Relationship: All involve considering or suggesting alternative solutions.
Criteria: Users and designers are open to and propose alternative solutions to issues or problems.
Phrase: Propose alternatives

7.
Concepts: share workaround, usability workaround
Relationship: Both involve sharing alternative solutions for usability issues.
Criteria: Users share workarounds for usability issues.
Phrase: Share workarounds

8.
Concepts: suggest solutions, provide solutions
Relationship: Both involve offering potential solutions to issues or improvements.
Criteria: Designers share or propose potential solutions to issues or user problems.
Phrase: Suggest solutions

9.
Concepts: system requirements, system compatibility
Relationship: Both involve discussions about system requirements and compatibility.
Criteria: A designer or team member discusses system requirements and compatibility with different systems.
Phrase: Discuss system compatibility

10.
Concepts: compatibility assurance, confirm compatibility
Relationship: Both involve confirming or assuring system compatibility.
Criteria: Designers confirm and assure the compatibility of the software with specific systems.
Phrase: Confirm compatibility

11.
Concepts: answer about compatibility, inquire about platform compatibility
Relationship: Both involve questions and answers about system compatibility.
Criteria: Community members answer questions and inquire about platform compatibility.
Phrase: Address compatibility inquiries

12.
Concepts: explain limitations, suggest system limitation, talk about why limitation is addressable, talk about limitation of the solution
Relationship: All involve discussing limitations of the software or solutions.
Criteria: Designers explain and suggest limitations of the software and how they can be addressed.
Phrase: Discuss limitations

13.
Concepts: acknowledge limitations, highlight technical constraints
Relationship: Both involve recognizing and highlighting limitations or constraints.
Criteria: Users and designers acknowledge and highlight technical constraints or limitations of the software.
Phrase: Acknowledge constraints

14.
Concepts: local export necessity, local export consideration
Relationship: Both involve discussing the need for local export features.
Criteria: Designers mention and consider the necessity of supporting local export functionality.
Phrase: Discuss local export needs

15.
Concepts: express concern, raise concern for new feature
Relationship: Both involve expressing concerns about updates or features.
Criteria: Users and designers express and raise concerns about updates or new features.
Phrase: Raise concerns

16.
Concepts: anticipate updates, inquire about update status
Relationship: Both involve expressing interest in or inquiring about updates.
Criteria: Users express anticipation for updates and inquire about the timing or possibility of upcoming software updates.
Phrase: Inquire about updates

17.
Concepts: engage with development process, express interest in platform development
Relationship: Both involve showing interest in the development process.
Criteria: Users inquire about and express interest in the platform's development and updates.
Phrase: Engage with development

18.
Concepts: expression of interest, provide context for interest
Relationship: Both involve expressing and providing context for personal interest.
Criteria: Users express personal interest in a topic and provide context or background for their involvement.
Phrase: Express interest

19.
Concepts: reiterate user manual need, request documentation
Relationship: Both involve requesting and emphasizing the need for documentation.
Criteria: Users reiterate the need for a user manual and request documentation.
Phrase: Request documentation

20.
Concepts: request features, request specific features
Relationship: Both involve users requesting new features or improvements.
Criteria: Users request new and specific features or functionalities for the Physics Lab tool.
Phrase: Request features

21.
Concepts: request, resource request
Relationship: Both involve users making specific requests for features or resources.
Criteria: Users make specific requests for features, demonstrations, or resources about the platform.
Phrase: Make requests

22.
Concepts: clarify version, platform clarification
Relationship: Both involve seeking clarification about the software version.
Criteria: Users ask for clarification about the version of the software and where to find specific versions.
Phrase: Seek version clarification

23.
Concepts: inquire about download process, inquire about software access
Relationship: Both involve inquiring about accessing the software.
Criteria: Users inquire about the download process and how to access specific versions of the software.
Phrase: Inquire about access

24.
Concepts: inquiry, information seeking
Relationship: Both involve users seeking information or clarification.
Criteria: Users ask questions to seek information or gain knowledge related to the software.
Phrase: Seek information

25.
Concepts: make technical inquiries, seeking help and guidance
Relationship: Both involve users seeking technical assistance and guidance.
Criteria: Users ask technical questions and seek help or guidance for using the software.
Phrase: Seek technical help

26.
Concepts: memory aid, promise to gather feedback, plan to gather opinions
Relationship: All involve planning to gather feedback or opinions before proceeding.
Criteria: Designers mention the need to gather opinions or feedback before starting new features.
Phrase: Plan to gather feedback

27.
Concepts: asking for future help, announce future consultation
Relationship: Both involve requesting or announcing future help or consultation.
Criteria: Designers ask for future help or consultation and discuss future plans to address community needs.
Phrase: Request future help

28.
Concepts: improvement promise, commit to improvement
Relationship: Both involve promising and committing to improvements based on feedback.
Criteria: Designers promise and commit to improving the software based on user feedback.
Phrase: Commit to improvement

29.
Concepts: accept user requests, feature request invitation
Relationship: Both involve acknowledging and inviting user requests or suggestions.
Criteria: Designers acknowledge and accept user requests or suggestions for future updates.
Phrase: Accept user requests

30.
Concepts: provide specific feedback, mention feedback-based prompts
Relationship: Both involve providing and mentioning feedback that prompts specific actions.
Criteria: Users provide specific feedback, and designers mention that feedback has prompted specific design features.
Phrase: Provide feedback

31.
Concepts: align with user feedback, solution based on feedback
Relationship: Both involve aligning solutions with user feedback.
Criteria: Designers align with user feedback to improve the platform and conclude that features are needed based on feedback.
Phrase: Align with feedback

32.
Concepts: user tips, practical advice
Relationship: Both involve offering tips or practical advice to users.
Criteria: Users offer practical advice or tips to others.
Phrase: Offer advice

33.
Concepts: paying respect, pay respect to experts
Relationship: Both involve showing respect before making requests or suggestions.
Criteria: Users show respect to experts before making feature requests or suggestions.
Phrase: Show respect

34.
Concepts: accept suggestion, agree with suggestion, agree to implement suggestion
Relationship: All involve accepting and agreeing with suggestions.
Criteria: Users and designers accept suggestions made by others and agree to implement them.
Phrase: Accept suggestions

35.
Concepts: make suggestion, further suggestion, suggestion solicitation
Relationship: All involve making or soliciting suggestions.
Criteria: Users make further suggestions or recommendations and solicit feedback from others.
Phrase: Make suggestions

36.
Concepts: clarify preference, suggest prioritization
Relationship: Both involve clarifying preferences and suggesting prioritization.
Criteria: Users clarify their preferences regarding software features and suggest prioritizing certain aspects.
Phrase: Clarify preferences

37.
Concepts: user need, highlight usability need, indicate potential user needs
Relationship: All involve expressing or highlighting user needs.
Criteria: Users express specific needs, highlight usability needs, and indicate potential requirements related to the software.
Phrase: Highlight user needs

38.
Concepts: reason for suggestion, user input/feedback/suggestion with justifications, justify feature requests
Relationship: All involve providing reasons or justifications for suggestions.
Criteria: Users provide reasons and justifications for their suggestions and feature requests.
Phrase: Justify suggestions

39.
Concepts: emphasize convenience, suggest practical use case
Relationship: Both involve emphasizing convenience and suggesting practical use cases.
Criteria: Users emphasize the convenience of potential features and suggest practical use cases.
Phrase: Suggest practical uses

40.
Concepts: ease of use, discuss usability
Relationship: Both involve discussing the ease of use and usability of the software.
Criteria: Users discuss the usability and user-friendliness of the software.
Phrase: Discuss usability

41.
Concepts: compare to similar apps, provide comparative feedback
Relationship: Both involve comparing the software to similar applications.
Criteria: Users compare the software to other similar applications and provide comparative feedback.
Phrase: Compare to similar apps

42.
Concepts: student engagement, sharing classroom experiences, describe classroom success
Relationship: All involve sharing positive classroom experiences and student engagement.
Criteria: Users share positive feedback about student engagement and classroom success using the software.
Phrase: Share classroom success

43.
Concepts: classroom application, practical application
Relationship: Both involve discussing the practical application of the software in educational settings.
Criteria: Users discuss the application of the software in classroom settings.
Phrase: Discuss classroom application

44.
Concepts: user experience and impact, user experience in educational contexts
Relationship: Both involve sharing user experiences and the impact of the software in educational contexts.
Criteria: Users share their experiences and the impact of the software on teaching or learning.
Phrase: Share user experience

45.
Concepts: teaching experience, high school teaching experience
Relationship: Both involve sharing teaching experiences, specifically at the high school level.
Criteria: Users share their teaching experiences, including those at the high school level.
Phrase: Share teaching experience

46.
Concepts: confirm professional role, confirming teacher identity
Relationship: Both involve confirming one's professional role as a teacher.
Criteria: Users confirm their professional role as teachers, and designers inquire about users' professional backgrounds.
Phrase: Confirm professional role

47.
Concepts: teacher, teacher identity
Relationship: Both involve identifying oneself or another as a teacher.
Criteria: Users identify themselves or others as teachers.
Phrase: Identify as teacher

48.
Concepts: mention school initiative, school implementation
Relationship: Both involve mentioning school initiatives or projects.
Criteria: Users mention school initiatives or projects related to building an information-based environment.
Phrase: Mention school initiatives

49.
Concepts: outdated technology, highlight outdated technology
Relationship: Both involve mentioning and highlighting outdated technology.
Criteria: Users mention and highlight the outdated technology or systems used in their schools.
Phrase: Highlight outdated technology

50.
Concepts: offer context, explain situation
Relationship: Both involve providing context or explaining a situation.
Criteria: Users provide context about their environment, situation, or needs.
Phrase: Provide context

51.
Concepts: internet availability inquiry, inquire about classroom conditions
Relationship: Both involve inquiring about classroom conditions, specifically internet availability.
Criteria: Users and team members inquire about the availability of internet and other classroom conditions.
Phrase: Inquire about classroom conditions

52.
Concepts: network policy, internet restrictions
Relationship: Both involve discussing policies and restrictions related to internet use in educational settings.
Criteria: Users mention network policies and discuss limitations or restrictions on internet access within schools.
Phrase: Discuss internet restrictions

53.
Concepts: expressive, express emotion
Relationship: Both involve expressing emotions through text or emojis.
Criteria: Users and designers use expressive language or emojis to convey emotions.
Phrase: Express emotions

54.
Concepts: private messaging, request private message
Relationship: Both involve requesting private messaging for detailed discussions.
Criteria: Designers and team members request private messages for more detailed communication.
Phrase: Request private messaging

55.
Concepts: short response, professional engagement
Relationship: Both involve providing short, professional responses.
Criteria: Users provide short, affirmative responses and engage professionally.
Phrase: Provide short responses

56.
Concepts: establish credibility, professional background sharing
Relationship: Both involve sharing professional background to establish credibility.
Criteria: Users share their professional background to establish credibility and context.
Phrase: Establish credibility

57.
Concepts: introduce teacher identity, professional background
Relationship: Both involve introducing one's professional background, specifically teaching experience.
Criteria: Users introduce their teaching experience and professional background.
Phrase: Introduce professional background

58.
Concepts: group communication, platform communication
Relationship: Both involve communicating within the group about platform-specific updates or new versions.
Criteria: Users communicate within the group about updates or new versions specific to the platform.
Phrase: Communicate within group

59.
Concepts: avatar customization, image and avatar management
Relationship: Both involve discussing customization and management of avatars or personal identifiers.
Criteria: Users and designers discuss customization of avatars and image management.
Phrase: Discuss avatar customization

60.
Concepts: appreciate features, acknowledge craftsmanship
Relationship: Both involve appreciating specific features and craftsmanship of the platform.
Criteria: Users appreciate specific features and acknowledge the craftsmanship of the platform.
Phrase: Appreciate features

61.
Concepts: appreciate dedication, praise software effectiveness
Relationship: Both involve expressing appreciation for the software's dedication and effectiveness.
Criteria: Users appreciate the dedication and praise the practical usability and effectiveness of the software.
Phrase: Praise software

62.
Concepts: enthusiasm, share positive feedback
Relationship: Both involve expressing enthusiasm and positive feedback about the software or ideas.
Criteria: Users and designers express enthusiasm and share positive feedback about the software or ideas.
Phrase: Share positive feedback

63.
Concepts: acknowledgment and support, gratitude and encouragement
Relationship: Both involve expressing support, acknowledgment, and gratitude within the community.
Criteria: Users express appreciation, support, and encouragement to help build a positive community atmosphere.
Phrase: Express gratitude and support

64.
Concepts: close interaction, gratitude to the community
Relationship: Both involve expressing gratitude and closing interactions within the community.
Criteria: Community members express gratitude and close interactions with the community.
Phrase: Express gratitude
---