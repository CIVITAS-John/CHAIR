You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (21 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
21. 
Concepts: {Repeat the input 21}
Relationship: {What is logical relationship between concepts in code 21, or N/A if not applicable}
Criteria: {Who did what, and how for code 21}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: announces updates, makes an announcement
- A designer announces updates, future updates, or new features to the community.
- A designer makes announcements to the community about the software or community.

2.
Concepts: feature release, announcing software updates
- Designers announce the release of new software features or versions.
- Designers announce version details or updates, providing an update notification about a new software version or release.

3.
Concepts: informs about updates, communicates with users
- A designer informs users about updates, releases, or new features.
- A designer communicates updates or information to users.

4.
Concepts: plans updates, describes update scope
- A designer plans or announces updates or improvements to the software.
- A designer describes the scope or content of software updates.

5.
Concepts: technical detail, provides technical updates
- Designers provide technical details about features or updates.
- A designer provides information about software updates, including technical details.

6.
Concepts: highlight progress, communicates progress
- The designer highlights progress or achievements in the development process.
- A designer communicates progress or provides a status update on the development process.

7.
Concepts: project management, explains development priorities
- Designer discusses project management or development priorities.
- A designer explains the current focus or priorities of the development process.

8.
Concepts: discusses future plans, suggest future possibilities
- A designer discusses or considers future plans or design goals for the software.
- A designer suggests or discusses potential future possibilities or directions for the software.

9.
Concepts: future development plans, shares development plans
- A designer lists upcoming features or tools.
- A designer shares information about development plans or feature development.

10.
Concepts: discuss usability, discusses user interface
- The designer discusses usability issues or improvements
- A designer discusses the user interface or input methods.

11.
Concepts: providing explanations, user input/feedback/suggestion with justifications
- Users or designers provide explanations or justifications for their requests or suggestions, offering reasons or rationales.
- Providing input, feedback, or suggestions with supporting explanations or justifications.

12.
Concepts: explains features, provide feature examples
- A designer explains how a feature or functionality works.
- The designer provides an example of how a feature works or can be used.

13.
Concepts: inquiring about updates, inquire about update timeline
- Users ask about recent or upcoming software updates, inquiring about new features or changes.
- Users inquire about the timeline for software updates or releases.

14.
Concepts: asking technical questions, inquiring about software use
- Users ask technical questions about the software or its usage, seeking clarification or information.
- Users ask about how to use specific software features or components, or inquire about accessing specific resources or versions.

15.
Concepts: providing feedback, provide feedback or suggestions, providing user feedback
- Users provide feedback or suggestions to designers, inviting input or opinions.
- Users provide feedback or suggestions about software features or development direction.
- Users provide feedback or suggestions based on their experiences, offering input or opinions.

16.
Concepts: seeking feedback, soliciting input
- Designers seek feedback or input from users, gathering opinions or suggestions.
- Designers solicit input or feedback from users or the community, requesting suggestions or opinions.

17.
Concepts: implement feedback, responding to feedback
- Designers collect, consider, and implement user feedback.
- Designers respond to user feedback or suggestions, acknowledging user input.

18.
Concepts: query and response, responding to questions
- Instances where users ask questions and receive answers from designers or other community members.
- Designers or users respond to a question or inquiry, providing an answer or solution.

19.
Concepts: time sensitivity, apologizing for inconvenience
- A designer apologizes for a delay or inconvenience.
- Designers apologize for any inconvenience caused to users, expressing regret or remorse.

20.
Concepts: interact with community, cultivating community
- Users interact with the designer or community, expressing gratitude or enthusiasm.
- A designer encourages community engagement, solicits feedback, or thanks users for their support.

21.
Concepts: acknowledge effort, expressing appreciation
- Users acknowledge and appreciate the efforts of the designers.
- Users express support, encouragement, or appreciation for designers' efforts, expressing gratitude or thanks.
===
Here are the definitions for each code:

---
1.
Concepts: announces updates, makes an announcement
Relationship: Causal (announcing updates leads to making an announcement)
Criteria: A designer makes an announcement about updates to the community.
Phrase: Makes an announcement about updates.

2.
Concepts: feature release, announcing software updates
Relationship: Causal (feature release leads to announcing software updates)
Criteria: Designers announce the release of new software features or updates to the community.
Phrase: Announces software updates.

3.
Concepts: informs about updates, communicates with users
Relationship: Causal (informing about updates leads to communicating with users)
Criteria: A designer communicates updates or information to users.
Phrase: Communicates updates to users.

4.
Concepts: plans updates, describes update scope
Relationship: Causal (planning updates leads to describing update scope)
Criteria: A designer describes the scope or content of software updates to the community.
Phrase: Describes update scope.

5.
Concepts: technical detail, provides technical updates
Relationship: Causal (providing technical details leads to providing technical updates)
Criteria: A designer provides technical details about features or updates to the community.
Phrase: Provides technical updates.

6.
Concepts: highlight progress, communicates progress
Relationship: Causal (highlighting progress leads to communicating progress)
Criteria: A designer communicates progress or achievements in the development process to the community.
Phrase: Communicates progress.

7.
Concepts: project management, explains development priorities
Relationship: Causal (project management leads to explaining development priorities)
Criteria: A designer explains the current focus or priorities of the development process to the community.
Phrase: Explains development priorities.

8.
Concepts: discusses future plans, suggest future possibilities
Relationship: Causal (discussing future plans leads to suggesting future possibilities)
Criteria: A designer discusses or suggests potential future possibilities or directions for the software to the community.
Phrase: Discusses future plans.

9.
Concepts: future development plans, shares development plans
Relationship: Causal (future development plans lead to sharing development plans)
Criteria: A designer shares information about development plans or feature development with the community.
Phrase: Shares development plans.

10.
Concepts: discuss usability, discusses user interface
Relationship: Causal (discussing usability leads to discussing user interface)
Criteria: A designer discusses usability issues or improvements and user interface with the community.
Phrase: Discusses usability and user interface.

11.
Concepts: providing explanations, user input/feedback/suggestion with justifications
Relationship: Causal (providing explanations leads to user input/feedback/suggestion with justifications)
Criteria: Users or designers provide explanations or justifications for their requests or suggestions to the community.
Phrase: Provides explanations for input.

12.
Concepts: explains features, provide feature examples
Relationship: Causal (explaining features leads to providing feature examples)
Criteria: A designer explains how a feature or functionality works and provides examples to the community.
Phrase: Explains features with examples.

13.
Concepts: inquiring about updates, inquire about update timeline
Relationship: Causal (inquiring about updates leads to inquiring about update timeline)
Criteria: Users ask about recent or upcoming software updates and inquire about the timeline to the community.
Phrase: Inquires about updates and timeline.

14.
Concepts: asking technical questions, inquiring about software use
Relationship: Causal (asking technical questions leads to inquiring about software use)
Criteria: Users ask technical questions about the software or its usage and inquire about how to use specific features to the community.
Phrase: Asks technical questions about software use.

15.
Concepts: providing feedback, provide feedback or suggestions, providing user feedback
Relationship: Causal (providing feedback leads to providing feedback or suggestions and user feedback)
Criteria: Users provide feedback or suggestions about software features or development direction to the community.
Phrase: Provides feedback or suggestions.

16.
Concepts: seeking feedback, soliciting input
Relationship: Causal (seeking feedback leads to soliciting input)
Criteria: Designers seek feedback or input from users and solicit opinions or suggestions from the community.
Phrase: Seeks feedback or input.

17.
Concepts: implement feedback, responding to feedback
Relationship: Causal (implementing feedback leads to responding to feedback)
Criteria: Designers collect, consider, and implement user feedback and respond to user input to the community.
Phrase: Implements and responds to feedback.

18.
Concepts: query and response, responding to questions
Relationship: Causal (query leads to response)
Criteria: Designers or users respond to a question or inquiry with an answer or solution to the community.
Phrase: Responds to questions.

19.
Concepts: time sensitivity, apologizing for inconvenience
Relationship: Causal (time sensitivity leads to apologizing for inconvenience)
Criteria: A designer apologizes for a delay or inconvenience and expresses regret or remorse to the community.
Phrase: Apologizes for inconvenience.

20.
Concepts: interact with community, cultivating community
Relationship: Causal (interacting with community leads to cultivating community)
Criteria: A designer encourages community engagement, solicits feedback, or thanks users for their support to the community.
Phrase: Interacts with and cultivates community.

21.
Concepts: acknowledge effort, expressing appreciation
Relationship: Causal (acknowledging effort leads to expressing appreciation)
Criteria: Users acknowledge and appreciate the efforts of the designers and express support or gratitude to the community.
Phrase: Expresses appreciation for effort.