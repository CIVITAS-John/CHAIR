You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (8 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
8. 
Concepts: {Repeat the input 8}
Relationship: {What is logical relationship between concepts in code 8, or N/A if not applicable}
Criteria: {Who did what, and how for code 8}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: pay respect to experts, acknowledge expert contributions
- Users show respect or acknowledgment towards experts while making requests for specific features.
- Users acknowledge the contributions and expertise of others while making feature requests.

2.
Concepts: articulate feature requests, provide reason for suggestion
- Users request new features and articulate the reasons behind their requests.
- User suggests a new feature based on current technological usage trends.

3.
Concepts: accept user suggestions, propose usability enhancements
- Users propose design features, and designers acknowledge and accept these suggestions for future implementation.
- Users propose enhancements to improve convenience and usability of the software.

4.
Concepts: designers respond to feedback, designers integrate user feedback
- Designers respond to user feedback and demonstrate attentiveness to needs.
- Designers align their actions with user feedback for enhancements.

5.
Concepts: raise related issue, encourage ongoing discussion
- Designers raise related issues or considerations that stem from previous discussions.
- Designers encourage users to voice issues and elaborate on suggestions for further discussion.

6.
Concepts: provide user guidance, give usage instructions
- Designers offer detailed guidance and updates to help users navigate the software.
- Designers provide instructions or steps for using specific features of the software.

7.
Concepts: address software limitations, discuss technical constraints
- Designers recognize and discuss the limitations of their team and the software.
- Instances where technical constraints and limitations are discussed by users and designers.

8.
Concepts: identify potential issues, analyzes and diagnoses problems
- Designers identify bugs and provide a list of upcoming software updates and fixes.
- Designers analyze compatibility issues and diagnose related software problems.
===
---
Definitions for each code (8 in total):
1.
Concepts: pay respect to experts, acknowledge expert contributions  
Relationship: Users express respect and acknowledgment towards experts, indicating a recognition of their value in the community.  
Criteria: Users show respect or acknowledgment towards experts while making requests for specific features, recognizing their contributions and expertise.  
Phrase: Acknowledge expert contributions.

2.
Concepts: articulate feature requests, provide reason for suggestion  
Relationship: Users articulate their requests and provide reasoning, indicating a thoughtful approach to feature suggestions.  
Criteria: Users request new features and articulate the reasons behind their requests, suggesting based on current technological usage trends.  
Phrase: Suggest new features.

3.
Concepts: accept user suggestions, propose usability enhancements  
Relationship: Users and designers engage in a reciprocal process where suggestions are accepted and enhancements are proposed.  
Criteria: Users propose design features, and designers acknowledge and accept these suggestions for future implementation to improve usability.  
Phrase: Propose usability enhancements.

4.
Concepts: designers respond to feedback, designers integrate user feedback  
Relationship: Designers actively engage with user feedback, demonstrating a commitment to aligning their work with user needs.  
Criteria: Designers respond to user feedback and integrate it into their design process for enhancements.  
Phrase: Integrate user feedback.

5.
Concepts: raise related issue, encourage ongoing discussion  
Relationship: Designers facilitate a continuous dialogue by raising issues that promote further discussion among users.  
Criteria: Designers raise related issues or considerations and encourage users to voice issues and elaborate on suggestions for ongoing discussion.  
Phrase: Encourage ongoing discussion.

6.
Concepts: provide user guidance, give usage instructions  
Relationship: Designers support users by providing guidance and instructions, enhancing user experience and software navigation.  
Criteria: Designers offer detailed guidance and instructions to help users navigate the software and use specific features effectively.  
Phrase: Provide user guidance.

7.
Concepts: address software limitations, discuss technical constraints  
Relationship: Both designers and users engage in discussions about the limitations of the software, indicating a shared understanding of its constraints.  
Criteria: Designers recognize and discuss the limitations of their team and the software, alongside user discussions on technical constraints.  
Phrase: Discuss software limitations.

8.
Concepts: identify potential issues, analyze and diagnose problems  
Relationship: Designers engage in a systematic approach to identifying and resolving software issues, ensuring a proactive stance on problem-solving.  
Criteria: Designers identify bugs, analyze compatibility issues, and diagnose related software problems while providing updates and fixes.  
Phrase: Diagnose software problems.
---