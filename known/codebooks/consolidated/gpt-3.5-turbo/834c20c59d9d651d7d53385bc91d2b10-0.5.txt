You are an expert in thematic analysis clarifying the criteria of qualitative codes. Quotes are independent of each other.
Write clear and generalizable criteria for each code, informed by the context, and without unnecessary specifics or examples.
If necessary, refine labels to keep contexts, but do not write repetitive ones.
Group each code into a theory-informed category. Use 2-4 words for categories to provide general contexts (e.g. "social interaction" instead of "interaction", "communication approach" instead of "communication").
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Thoughts: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (32 in total):
1. 
Criteria: {Criteria of code 1}
Label: {A label of code 1}
Category: {2-4 words for code 1}
...
32.
Criteria: {Criteria of code 32}
Label: {A label of code 32}
Category: {2-4 words for code 32}
---
~~~
1.
Label: realization
Quotes:
- Oh oh oh
- Oh.

2.
Label: topic shift
Quotes:
- What about the moon?

3.
Label: celestial body discussion
Quotes:
- What about the moon?

4.
Label: astronomical fact
Quotes:
- It orbits around the Earth.

5.
Label: software discussion
Quotes:
- I'm talking about the software.

6.
Label: suggestion to consult designer
Quotes:
- Then ask the group owner.

7.
Label: celestial bodies
Quotes:
- There are also software imitating celestial bodies on Steam.
- Mars is outside the Earth.
- What about the moon?

8.
Label: no issues
Quotes:
- No problem.

9.
Label: user query
Quotes:
- The moon is not depicted, right?

10.
Label: software development progress
Quotes:
- Maybe it hasn't been done yet.

11.
Label: time constraint
Quotes:
- Last time there wasn't enough time.

12.
Label: user opinion
Quotes:
- The moon is useless.

13.
Label: software scale consideration
Quotes:
- It depends on the scale.

14.
Label: software reference
Quotes:
- universe sandbox

15.
Label: software presets
Quotes:
- There will be multiple presets.

16.
Label: customization
Quotes:
- Non-standard operations are supported, but will be marked (the next section will be on electricity, such as operations involving electricity).
- There will be multiple presets.

17.
Label: user needs
Quotes:
- Because in reality, you encounter various types of questions, many of which are about near-Earth space stations.
- Artificial satellite orbits.

18.
Label: user agreement
Quotes:
- I also think it's okay.
- Indeed
- Okay!

19.
Label: expansion
Quotes:
- These will involve more.

20.
Label: advanced scenarios
Quotes:
- Binary star systems, although you probably won't encounter them often.

21.
Label: knowledge sharing
Quotes:
- If you make an electric motor, it's quite simple to follow the method I mentioned @John Chen (3).
- @DCHDM (11) Are there still distinctions between arts and sciences now?
- Creating questions, reviewing questions, and answering questions.

22.
Label: user interaction
Quotes:
- @Angry Birds Go (2) Maybe you can come hit me along the Ethernet cable
- John, have you become more Android?
- It even forces you to click.

23.
Label: language diversity
Quotes:
- 谁知道引力波整么测的

24.
Label: future software feature
Quotes:
- I'll buy one for space.

25.
Label: physics concepts
Quotes:
- 谁知道引力波整么测的

26.
Label: software imitation
Quotes:
- Don't imitate it exactly.

27.
Label: software platforms
Quotes:
- There are also software imitating celestial bodies on Steam.

28.
Label: memory limitations
Quotes:
- I can't remember if it's 78 or 79.

29.
Label: collaborative problem solving
Quotes:
- Look it up online, this can't be solved in a few words.

30.
Label: software feature inquiry
Quotes:
- Can a motor be added?

31.
Label: focus on studying
Quotes:
- I think I should focus on studying mathematics.

32.
Label: software development approach
Quotes:
- We will be simpler, more practical (closer to exams), and cheaper.
===
---
Thoughts: 
* Learning sciences
* Human-computer interaction
* Participatory design

Definitions for each code (32 in total):
1. 
Criteria: Realizations or moments of insight.
Label: Realization
Category: Learning sciences
2. 
Criteria: Shift in conversation topics.
Label: Topic shift
Category: Human-computer interaction
3. 
Criteria: Discussions related to celestial bodies.
Label: Celestial body discussion
Category: Learning sciences
4. 
Criteria: Statements presenting astronomical facts.
Label: Astronomical fact
Category: Learning sciences
5. 
Criteria: Discussions related to software features or functionalities.
Label: Software discussion
Category: Human-computer interaction
6. 
Criteria: Suggestions to seek advice from the community owner or designer.
Label: Suggestion to consult designer
Category: Participatory design
7. 
Criteria: Mentions or discussions about celestial bodies.
Label: Celestial bodies
Category: Learning sciences
8. 
Criteria: Statements indicating no problems or issues.
Label: No issues
Category: Participatory design
9. 
Criteria: Queries or questions from users.
Label: User query
Category: Human-computer interaction
10. 
Criteria: Discussions related to the progress of software development.
Label: Software development progress
Category: Human-computer interaction
11. 
Criteria: References to time constraints or limitations.
Label: Time constraint
Category: Participatory design
12. 
Criteria: Expressions of user opinions.
Label: User opinion
Category: Participatory design
13. 
Criteria: Considerations about the scale of software features.
Label: Software scale consideration
Category: Human-computer interaction
14. 
Criteria: References or mentions of specific software.
Label: Software reference
Category: Human-computer interaction
15. 
Criteria: Discussions about software presets.
Label: Software presets
Category: Human-computer interaction
16. 
Criteria: Talks about customization options within the software.
Label: Customization
Category: Human-computer interaction
17. 
Criteria: Expressions of user needs or requirements.
Label: User needs
Category: Participatory design
18. 
Criteria: Statements indicating user agreement or alignment.
Label: User agreement
Category: Participatory design
19. 
Criteria: Discussions about expanding software features.
Label: Expansion
Category: Human-computer interaction
20. 
Criteria: Conversations about advanced scenarios within the software.
Label: Advanced scenarios
Category: Human-computer interaction
21. 
Criteria: Sharing of knowledge or information among users.
Label: Knowledge sharing
Category: Learning sciences
22. 
Criteria: Interactions among users within the community.
Label: User interaction
Category: Participatory design
23. 
Criteria: Use of diverse languages in communication.
Label: Language diversity
Category: Human-computer interaction
24. 
Criteria: Mentions of potential future software features.
Label: Future software feature
Category: Human-computer interaction
25. 
Criteria: Discussions about physics concepts.
Label: Physics concepts
Category: Learning sciences
26. 
Criteria: References to software imitating real-world phenomena.
Label: Software imitation
Category: Human-computer interaction
27. 
Criteria: Mentions of software platforms or environments.
Label: Software platforms
Category: Human-computer interaction
28. 
Criteria: Statements indicating memory constraints or limitations.
Label: Memory limitations
Category: Human-computer interaction
29. 
Criteria: Collaborative problem-solving approaches.
Label: Collaborative problem solving
Category: Participatory design
30. 
Criteria: Inquiries about specific software features.
Label: Software feature inquiry
Category: Human-computer interaction
31. 
Criteria: Focus on studying a particular subject.
Label: Focus on studying
Category: Learning sciences
32. 
Criteria: Approaches to software development.
Label: Software development approach
Category: Participatory design
---