You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (10 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
10. 
Concepts: {Repeat the input 10}
Relationship: {What is logical relationship between concepts in code 10, or N/A if not applicable}
Criteria: {Who did what, and how for code 10}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: user communication, engaging users with updates
- A participant communicates updates or information about software versions and releases.
- Designers or users confirm updates and engage the community with information about upcoming features.

2.
Concepts: engaging with the community, promoting open communication
- Designers share ongoing research and engage with the community.
- Designers encourage open communication, accept community suggestions, and share potential solutions.

3.
Concepts: explaining software limitations, discussing technical constraints
- Designers explain the development process and limitations of the software.
- Considerations about technical aspects or requirements and instances where technical limitations or requirements of the software are discussed.

4.
Concepts: adapt design, engaging in iterative development
- Designers adapt the design based on user feedback or new requirements.
- Designers engage in iterative development and make updates based on user feedback.

5.
Concepts: provide usage instructions, ensure proper use of new features
- Designers provide instructions or guidance on how to use features or components.
- Instructions from designers to ensure proper use of new features.

6.
Concepts: discussing update process, planning future updates and projects
- Designers discuss the process, provide timelines, and update the release process.
- Designers discuss plans and timelines for future updates and projects.

7.
Concepts: collaborating on design, discussing design process
- Designers and users collaboratively discuss and plan design decisions.
- Designers share thoughts and discuss product design and iterations.

8.
Concepts: discussing usability and context, discussing software compatibility
- Users and designers discuss usability features and specific contexts of software use.
- Designers and users discuss system requirements and future compatibility of the software.

9.
Concepts: discussing feature development, discussing feature expansion
- Participants discuss specific features or their development.
- Designers and users discuss the expansion of features and subject matter.

10.
Concepts: describing future plans, sharing development goals and plans
- Participants discuss potential future developments and describe planned features.
- Participants discuss development goals and share information about future plans.
===
---
Definitions for each code (10 in total):
1.
Concepts: user communication, engaging users with updates
Relationship: Both concepts involve the dissemination and confirmation of information about software updates.
Criteria: Participants communicate updates and engage the community with information about software versions and upcoming features.
Phrase: Sharing updates and engaging users

2.
Concepts: engaging with the community, promoting open communication
Relationship: Both concepts involve interaction with the community and fostering an open dialogue.
Criteria: Designers share ongoing research, engage with the community, encourage open communication, accept suggestions, and share potential solutions.
Phrase: Fostering community engagement and open communication

3.
Concepts: explaining software limitations, discussing technical constraints
Relationship: Both concepts involve communicating the boundaries and technical aspects of the software.
Criteria: Designers explain the development process, limitations, and technical constraints of the software.
Phrase: Explaining technical limitations

4.
Concepts: adapt design, engaging in iterative development
Relationship: Both concepts involve modifying the design based on feedback and iterative processes.
Criteria: Designers adapt the design and engage in iterative development based on user feedback or new requirements.
Phrase: Iteratively adapting design

5.
Concepts: provide usage instructions, ensure proper use of new features
Relationship: Both concepts involve offering guidance to ensure correct usage of software features.
Criteria: Designers provide instructions or guidance to ensure proper use of new features or components.
Phrase: Providing usage instructions

6.
Concepts: discussing update process, planning future updates and projects
Relationship: Both concepts involve conversations about the update process and future planning.
Criteria: Designers discuss the update process, provide timelines, and plan future updates and projects.
Phrase: Planning and discussing updates

7.
Concepts: collaborating on design, discussing design process
Relationship: Both concepts involve collaborative discussions about design decisions and processes.
Criteria: Designers and users collaboratively discuss and plan design decisions and iterations.
Phrase: Collaborating on design

8.
Concepts: discussing usability and context, discussing software compatibility
Relationship: Both concepts involve discussions about the usability and compatibility of the software.
Criteria: Users and designers discuss usability features, specific contexts of software use, system requirements, and future compatibility.
Phrase: Discussing usability and compatibility

9.
Concepts: discussing feature development, discussing feature expansion
Relationship: Both concepts involve conversations about the development and expansion of software features.
Criteria: Participants discuss specific features, their development, and expansion.
Phrase: Discussing feature development and expansion

10.
Concepts: describing future plans, sharing development goals and plans
Relationship: Both concepts involve sharing information about future developments and goals.
Criteria: Participants discuss potential future developments, describe planned features, and share development goals and plans.
Phrase: Sharing future development plans
---