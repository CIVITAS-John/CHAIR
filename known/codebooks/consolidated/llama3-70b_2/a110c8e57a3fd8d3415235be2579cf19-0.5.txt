You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: noting beginners' coding challenges, describing beginner coding practices
- Participants note the challenges faced by beginners when writing code.
- Describing common coding practices and challenges faced by beginners

2.
Concepts: analyzing ai-generated code, commenting on ai interpretation, evaluating ai-generated code
- Participants analyze and summarize AI-generated code to understand its logic.
- Participants reflect on how AI understands their requests, analyzing the generated code.
- Participants evaluate AI-generated code, reading and commenting on its content, and conducting thorough code reviews.

3.
Concepts: utilizing ai-generated code fully, completely relying on ai-generated code
- An expert uses AI-generated code completely when realizing time constraints.
- Completely relying on AI-generated code due to time constraints or situations

4.
Concepts: integrates ai-generated code, selectively using ai-generated code
- An expert integrates AI-generated code into the model selectively.
- An expert selectively copies and evaluates AI-generated code.

5.
Concepts: correcting code independently, showing independence in coding process
- The participant corrects code independently, without relying on the AI tool.
- The participant demonstrates independence in their coding process, even when using AI tools.

6.
Concepts: valuing code simplicity, emphasizes code maintainability
- The participant prefers plain, accessible code for maintenance, valuing simplicity and maintainability of code.
- The participant emphasizes the importance of writing simple, maintainable code that is easy to understand and debug.

7.
Concepts: shares prior programming experience, shares prior programming experiences
- Participants share their extensive experience in programming languages.
- Participants share their prior experiences in computer programming to reflect on their prior experiences.

8.
Concepts: desire automatic integration, valuing workflow efficiency
- Individuals desire automatic code integration into the model, valuing seamless workflow integration.
- The participant values efficiency in the workflow, desiring automated integration of AI-generated code into the model.

9.
Concepts: valuing oral tradition, emphasizing oral tradition
- Highlights the importance of oral tradition in knowledge sharing.
- Participants emphasize the importance of oral tradition in software development and knowledge transmission.

10.
Concepts: reflecting on online help-seeking practices, emphasizing proper online help-seeking practices
- Participants reflect on their personal experiences and proper practices for seeking online help.
- Participants provide guidelines and discuss proper practices for seeking online help.

11.
Concepts: defines a task for ai, formulating a clear task for ai assistance
- Participants define a specific task for AI to complete.
- Formulates a clear task for AI assistance.

12.
Concepts: ai task understanding, appreciate parameter clarification
- Appreciating AI's ability to understand tasks and clarify parameters
- Participants appreciate and value AI's ability to clarify parameters and define specific tasks.
===
Here are the definitions for each code:

---
1.
Concepts: noting beginners' coding challenges, describing beginner coding practices
Relationship: The concepts are related as they both describe the coding experiences of beginners.
Criteria: Participants describe and note the challenges and practices of beginner coders.
Phrase: Describing beginner coding challenges and practices.

2.
Concepts: analyzing ai-generated code, commenting on ai interpretation, evaluating ai-generated code
Relationship: The concepts are related as they all involve examining AI-generated code.
Criteria: Participants analyze, comment on, and evaluate AI-generated code to understand its logic and content.
Phrase: Analyzing and evaluating AI-generated code.

3.
Concepts: utilizing ai-generated code fully, completely relying on ai-generated code
Relationship: The concepts are related as they both describe the complete reliance on AI-generated code.
Criteria: Participants completely rely on AI-generated code due to time constraints or situations.
Phrase: Relying fully on AI-generated code.

4.
Concepts: integrates ai-generated code, selectively using ai-generated code
Relationship: The concepts are related as they both describe the selective use of AI-generated code.
Criteria: Participants integrate and selectively use AI-generated code into their models.
Phrase: Selectively integrating AI-generated code.

5.
Concepts: correcting code independently, showing independence in coding process
Relationship: The concepts are related as they both describe the participant's independence in coding.
Criteria: Participants correct code independently and demonstrate independence in their coding process.
Phrase: Correcting code independently.

6.
Concepts: valuing code simplicity, emphasizes code maintainability
Relationship: The concepts are related as they both describe the importance of code simplicity and maintainability.
Criteria: Participants value and emphasize the importance of writing simple, maintainable code.
Phrase: Valuing code simplicity and maintainability.

7.
Concepts: shares prior programming experience, shares prior programming experiences
Relationship: The concepts are related as they both describe the sharing of prior programming experiences.
Criteria: Participants share their prior experiences in programming languages.
Phrase: Sharing prior programming experiences.

8.
Concepts: desire automatic integration, valuing workflow efficiency
Relationship: The concepts are related as they both describe the desire for efficient workflow integration.
Criteria: Participants desire and value automatic code integration into the model for efficient workflow.
Phrase: Valuing workflow efficiency.

9.
Concepts: valuing oral tradition, emphasizing oral tradition
Relationship: The concepts are related as they both describe the importance of oral tradition.
Criteria: Participants highlight and emphasize the importance of oral tradition in knowledge sharing.
Phrase: Emphasizing oral tradition.

10.
Concepts: reflecting on online help-seeking practices, emphasizing proper online help-seeking practices
Relationship: The concepts are related as they both describe the importance of proper online help-seeking practices.
Criteria: Participants reflect on and emphasize proper practices for seeking online help.
Phrase: Reflecting on online help-seeking practices.

11.
Concepts: defines a task for ai, formulating a clear task for ai assistance
Relationship: The concepts are related as they both describe the process of defining a task for AI assistance.
Criteria: Participants define and formulate clear tasks for AI assistance.
Phrase: Defining tasks for AI assistance.

12.
Concepts: ai task understanding, appreciate parameter clarification
Relationship: The concepts are related as they both describe the appreciation of AI's ability to understand tasks and clarify parameters.
Criteria: Participants appreciate and value AI's ability to clarify parameters and define specific tasks.
Phrase: Appreciating AI task understanding.