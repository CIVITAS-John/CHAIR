You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (20 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
20. 
Concepts: {Repeat the input 20}
Relationship: {What is logical relationship between concepts in code 20, or N/A if not applicable}
Criteria: {Who did what, and how for code 20}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: appreciation of designers, acknowledge designer's efforts
- A user expresses appreciation for the designer's efforts and quality of work.
- Users show appreciation for the work done by designers and community members.

2.
Concepts: request guidance, request user manual
- Users seek instructions on how to operate specific software features.
- Users seek a user manual to better understand the software.

3.
Concepts: inquire about update status, inquire about android update status
- Users seek information about the timing and status of software updates.
- User inquires about the status of an update for the Android version of the software.

4.
Concepts: plan future updates, prioritize user feedback
- Designers respond to user feedback by indicating future updates.
- Designers prioritize user feedback in planning future software updates.

5.
Concepts: gather user input, plan for iterative feedback
- Designers express intent to gather user opinions before proceeding with development.
- Designers plan to gather user opinions before starting new development phases.

6.
Concepts: designer acknowledgment, accept user suggestion
- The designer acknowledges user suggestions for future updates.
- Designers acknowledge and commit to including user requests in future updates.

7.
Concepts: acknowledge feedback, acknowledge user experience
- Designers indicate understanding of user input or feedback.
- Designer acknowledges a user's experience or perspective regarding a technical issue.

8.
Concepts: integrate user feedback, establish feedback loop
- Instances where user feedback is actively sought and integrated into design.
- Processes where user feedback is solicited and integrated into design decisions.

9.
Concepts: invite user feedback, gather user feedback
- Designers invite users to provide suggestions for future updates.
- Designers ask users about their experiences to enhance the product.

10.
Concepts: seek clarification, ensure accuracy
- Users or designers seek clarification on specific aspects of the software.
- The designer seeks clarification on a specific detail related to the software's functionality.

11.
Concepts: acknowledge inconvenience, apologize for potential interruption
- Designers acknowledge and apologize for disturbances in communication.
- Designers apologize for any disruptions caused by their communications, maintaining a considerate tone.

12.
Concepts: encourage open discussion, user feedback and communication
- Designers encourage users to discuss their problems openly.
- Designers encourage open communication about issues users face while using the software.

13.
Concepts: offer ongoing support, encourage troubleshooting
- The designer encourages users to report any issues they encounter.
- Designers encourage users to report issues they face while using the software.

14.
Concepts: reflect on experiences, self-rebuttal on previous statements
- Designers share insights from their previous experiences related to the software.
- Designers reflect on past experiences with the software, sharing insights or lessons learned.

15.
Concepts: announce software release, provide community updates
- Designers inform the community about new software releases and updates.
- Designers share updates and announcements regarding the software with the community.

16.
Concepts: provide product updates, provide progress updates, make update announcements
- Designers provide updates on the development and status of the software.
- Designers inform the community about the progress of software releases.
- Designers communicate updates regarding software components and development plans.

17.
Concepts: outline future plans, share future design plans
- Designers communicate their goals and plans for future software development.
- Designers share their plans for future design projects and features.

18.
Concepts: share update timeline, outline release schedule
- Designers confirm and provide timelines for upcoming software updates.
- Designers provide a timeline for upcoming software updates and releases.

19.
Concepts: promise to improve, promise future improvements
- The designer expresses gratitude for user support and commits to future improvements.
- Designers commit to implementing features in future software updates.

20.
Concepts: reassure users, resolve user concerns
- The designer reassures users about the ongoing development and future updates of the software.
- Designers reassure users about ongoing improvements and updates.
===
---
Definitions for each code (20 in total):
1.
Concepts: appreciation of designers, acknowledge designer's efforts  
Relationship: Users express gratitude towards designers for their contributions.  
Criteria: Users show appreciation for the quality of work done by designers and community members.  
Phrase: Express appreciation for designers.

2.
Concepts: request guidance, request user manual  
Relationship: Users seek assistance to better understand software functionalities.  
Criteria: Users ask for instructions or a manual to operate specific software features.  
Phrase: Request guidance on software.

3.
Concepts: inquire about update status, inquire about android update status  
Relationship: Users seek information regarding software updates.  
Criteria: Users ask about the timing and status of software updates, specifically for Android.  
Phrase: Inquire about update status.

4.
Concepts: plan future updates, prioritize user feedback  
Relationship: Designers use user feedback to inform future development.  
Criteria: Designers indicate future updates based on user feedback.  
Phrase: Plan future updates based on feedback.

5.
Concepts: gather user input, plan for iterative feedback  
Relationship: Designers aim to incorporate user opinions into development processes.  
Criteria: Designers express intent to collect user opinions before new development phases.  
Phrase: Gather user input for development.

6.
Concepts: designer acknowledgment, accept user suggestion  
Relationship: Designers recognize and validate user contributions.  
Criteria: Designers acknowledge and commit to including user suggestions in updates.  
Phrase: Acknowledge and accept user suggestions.

7.
Concepts: acknowledge feedback, acknowledge user experience  
Relationship: Designers demonstrate understanding of user perspectives.  
Criteria: Designers indicate awareness of user feedback and experiences.  
Phrase: Acknowledge user feedback.

8.
Concepts: integrate user feedback, establish feedback loop  
Relationship: User feedback is actively incorporated into design processes.  
Criteria: Designers solicit and integrate user feedback into design decisions.  
Phrase: Integrate user feedback into design.

9.
Concepts: invite user feedback, gather user feedback  
Relationship: Designers encourage user participation in the development process.  
Criteria: Designers ask users for suggestions and experiences to improve the product.  
Phrase: Invite and gather user feedback.

10.
Concepts: seek clarification, ensure accuracy  
Relationship: Both users and designers aim for clear understanding of software functionalities.  
Criteria: Users or designers ask for clarification on specific software aspects.  
Phrase: Seek clarification on software details.

11.
Concepts: acknowledge inconvenience, apologize for potential interruption  
Relationship: Designers maintain a considerate tone in communication.  
Criteria: Designers acknowledge and apologize for any communication disturbances.  
Phrase: Acknowledge and apologize for inconveniences.

12.
Concepts: encourage open discussion, user feedback and communication  
Relationship: Designers promote a culture of open dialogue with users.  
Criteria: Designers encourage users to discuss their issues openly.  
Phrase: Encourage open discussion among users.

13.
Concepts: offer ongoing support, encourage troubleshooting  
Relationship: Designers provide assistance to users facing issues.  
Criteria: Designers encourage users to report any problems encountered.  
Phrase: Offer ongoing support to users.

14.
Concepts: reflect on experiences, self-rebuttal on previous statements  
Relationship: Designers learn from past experiences to improve future practices.  
Criteria: Designers share insights from their previous experiences with the software.  
Phrase: Reflect on past experiences.

15.
Concepts: announce software release, provide community updates  
Relationship: Designers keep the community informed about software developments.  
Criteria: Designers inform the community about new software releases and updates.  
Phrase: Announce software releases.

16.
Concepts: provide product updates, provide progress updates, make update announcements  
Relationship: Designers communicate the status of software development.  
Criteria: Designers provide updates on the development and status of the software.  
Phrase: Provide product and progress updates.

17.
Concepts: outline future plans, share future design plans  
Relationship: Designers communicate their vision for upcoming projects.  
Criteria: Designers share their goals and plans for future software development.  
Phrase: Outline future design plans.

18.
Concepts: share update timeline, outline release schedule  
Relationship: Designers provide clarity on upcoming software updates.  
Criteria: Designers confirm and provide timelines for upcoming software updates.  
Phrase: Share update timelines.

19.
Concepts: promise to improve, promise future improvements  
Relationship: Designers commit to enhancing the software based on user support.  
Criteria: Designers express gratitude and commit to future improvements.  
Phrase: Promise to improve the software.

20.
Concepts: reassure users, resolve user concerns  
Relationship: Designers aim to alleviate user worries about software development.  
Criteria: Designers reassure users about ongoing improvements and updates.  
Phrase: Reassure users about updates.  
---