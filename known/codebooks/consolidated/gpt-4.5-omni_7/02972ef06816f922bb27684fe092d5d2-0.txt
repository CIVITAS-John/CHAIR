You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (8 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
8. 
Concepts: {Repeat the input 8}
Relationship: {What is logical relationship between concepts in code 8, or N/A if not applicable}
Criteria: {Who did what, and how for code 8}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: describing planned features, outlining future design plans
- Designers give examples or describe specific planned features or functionalities.
- Designers list potential future tasks and outline design plans for specific features.

2.
Concepts: explaining feature development, share info about development update
- Designers explain or provide updates on the development of new features or improvements.
- A designer shares detailed information about development updates.

3.
Concepts: acknowledging and explaining limitations, addressing technical limitations and constraints
- Designers acknowledge and explain the current limitations of a feature or version.
- Designers discuss and address the technical limitations and constraints of the software.

4.
Concepts: engaging the community, engaging with the community
- Participants seek and engage community members for input and feedback.
- Instances where members of the community actively participate in discussions, ask questions, or provide feedback.

5.
Concepts: suggest prioritization, expressing and prioritizing user needs
- A participant suggests prioritizing certain tasks or features.
- Participants express user needs and prioritize user experience in discussions.

6.
Concepts: user experience in educational contexts, technical and infrastructural challenges in educational settings
- User experiences and challenges in using the software within educational settings.
- Users or designers discuss technical and infrastructural challenges in educational settings.

7.
Concepts: technical question, inquiring and requesting technical assistance
- Users ask technical questions about downloading and using the software.
- Users inquire about software usage and request technical assistance.

8.
Concepts: clarifying and inquiring about software versions, seeking and providing software access instructions
- Participants provide and seek information about different software and platform versions.
- Participants seek and provide information about accessing and downloading the software.
===
---
Definitions for each code (8 in total):
1.
Concepts: describing planned features, outlining future design plans
Relationship: Both concepts involve designers communicating about future aspects of the software.
Criteria: Designers describe specific planned features and outline future design plans.
Phrase: Describing future design plans

2.
Concepts: explaining feature development, share info about development update
Relationship: Both concepts involve designers providing information about the progress of feature development.
Criteria: Designers explain the development of new features and share detailed updates.
Phrase: Sharing development updates

3.
Concepts: acknowledging and explaining limitations, addressing technical limitations and constraints
Relationship: Both concepts involve designers discussing the limitations and constraints of the software.
Criteria: Designers acknowledge and explain current limitations and address technical constraints.
Phrase: Addressing software limitations

4.
Concepts: engaging the community, engaging with the community
Relationship: Both concepts involve active participation and interaction within the community.
Criteria: Participants engage community members for input and feedback, and community members actively participate in discussions.
Phrase: Engaging with the community

5.
Concepts: suggest prioritization, expressing and prioritizing user needs
Relationship: Both concepts involve participants discussing the importance of certain tasks or features based on user needs.
Criteria: Participants suggest prioritizing tasks and express user needs in discussions.
Phrase: Prioritizing user needs

6.
Concepts: user experience in educational contexts, technical and infrastructural challenges in educational settings
Relationship: Both concepts involve discussing the use of software in educational settings and the challenges faced.
Criteria: Users or designers discuss user experiences and technical challenges in educational contexts.
Phrase: Discussing educational challenges

7.
Concepts: technical question, inquiring and requesting technical assistance
Relationship: Both concepts involve users seeking help with technical aspects of the software.
Criteria: Users ask technical questions and request assistance with software usage.
Phrase: Requesting technical assistance

8.
Concepts: clarifying and inquiring about software versions, seeking and providing software access instructions
Relationship: Both concepts involve participants seeking or providing information about software versions and access.
Criteria: Participants clarify and inquire about software versions and provide access instructions.
Phrase: Providing software access information
---