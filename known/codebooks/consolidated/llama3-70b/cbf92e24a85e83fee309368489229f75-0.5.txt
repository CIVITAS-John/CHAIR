You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (18 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
18. 
Concepts: {Repeat the input 18}
Relationship: {What is logical relationship between concepts in code 18, or N/A if not applicable}
Criteria: {Who did what, and how for code 18}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: highlights educational needs, provides insight into educational norms
- A user highlights educational needs and shares classroom experiences, emphasizing educational impact.
- A user provides insight into common practices or norms in education.

2.
Concepts: feedback context, providing context or historical context
- Provides context or background information for feedback or opinions.
- Providing context or background information, or providing historical context or background information.

3.
Concepts: provide user feedback and suggestions, provide feedback and suggestions from user perspective
- Giving feedback, opinions, or suggestions on the software or its features, user provides feedback or suggestions for the platform, providing feedback or suggestions for the software.
- A user provides a suggestion or feedback from their perspective as a user, providing feedback, suggestions, or ideas with justification.

4.
Concepts: envisioning ideal software features, identifying software feature needs
- Designers or users outline or highlight ideal features or functionality for the software.
- Users indicate potential needs or request features with specific requirements for the software.

5.
Concepts: specifying details for user experience, considering user experience
- Designer specifies details for enhancing user experience.
- The designer considers user experience or feedback in design decisions, taking into account the user interaction flow.

6.
Concepts: reacting with emojis, using emojis to set tone
- A user reacts to a message or situation with multiple emojis.
- A user uses emojis to set a tone or convey emotions in a message.

7.
Concepts: expressing gratitude, expresses appreciation for designers
- A user thanks the designer or expresses gratitude.
- A user expresses appreciation for the designers or their dedication to the project.

8.
Concepts: agreeing with suggestions, expresses agreement or confirmation
- A user agrees with a suggestion or idea.
- A user expresses agreement or confirms understanding of a statement or idea.

9.
Concepts: sharing update notes, sharing release plans
- Designers share update notes or timelines.
- Designers share release plans or communicate about progress.

10.
Concepts: community response, participating in community
- Responding to or engaging with the community or other users.
- Users participate in the community by responding to posts or engaging in discussions.

11.
Concepts: building community, fostering community growth
- A designer or user fosters a sense of community or collaboration.
- A designer's responsiveness and transparency contribute to building trust and community growth.

12.
Concepts: providing user support, offers encouragement and support
- Designers provide technical and community support to users.
- A user provides encouragement and support to the designer or development team, and the designer shares encouragement with others.

13.
Concepts: being open to ideas, exploring possibilities
- Designers are open to new ideas and consider diverse viewpoints in Physics Lab.
- Designers explore design and technical possibilities, assessing feasibility and implementation constraints in Physics Lab.

14.
Concepts: explains features, explanation provision
- The designer explains and elaborates on features to users.
- Designer provides explanations or clarifications about the software or its features.

15.
Concepts: prioritizing usability, sharing design values and prioritizing user input
- Designers prioritize usability and user-centered design.
- Designers share design values and value user input.

16.
Concepts: highlights long-term benefits, highlighting feature benefits
- A designer highlights or emphasizes the long-term benefits of a feature or functionality.
- Designers highlight and showcase features to demonstrate their importance and functionality.

17.
Concepts: providing technical details and explanations
- Designers provide technical details and reiterate feature explanations.
- Designers detail experimental features and plan new features in Physics Lab.

18.
Concepts: prioritizing quality
- The speaker prioritizes quality or excellence in the development or design of the software.
- Designers emphasize and prioritize design quality in Physics Lab.
===
Here are the definitions for each code:

---
1.
Concepts: highlights educational needs, provides insight into educational norms
Relationship: The concepts are related as they both provide valuable information about educational context.
Criteria: A user shares their educational needs and insights into educational norms to inform design decisions.
Phrase: Sharing educational insights.

2.
Concepts: feedback context, providing context or historical context
Relationship: The concepts are related as they both provide background information to support feedback or opinions.
Criteria: A user provides context or background information to support their feedback or opinions.
Phrase: Providing contextual background.

3.
Concepts: provide user feedback and suggestions, provide feedback and suggestions from user perspective
Relationship: The concepts are related as they both provide feedback and suggestions from the user's point of view.
Criteria: A user provides feedback and suggestions from their perspective to improve the software.
Phrase: Offering user feedback.

4.
Concepts: envisioning ideal software features, identifying software feature needs
Relationship: The concepts are related as they both involve identifying features that would enhance the software.
Criteria: Designers or users outline ideal features or functionality to meet software needs.
Phrase: Identifying software needs.

5.
Concepts: specifying details for user experience, considering user experience
Relationship: The concepts are related as they both prioritize user experience in design decisions.
Criteria: Designers specify details and consider user experience to enhance user interaction.
Phrase: Enhancing user experience.

6.
Concepts: reacting with emojis, using emojis to set tone
Relationship: The concepts are related as they both involve using emojis to convey emotions or tone.
Criteria: A user reacts with emojis to convey emotions or set a tone in a message.
Phrase: Conveying emotions with emojis.

7.
Concepts: expressing gratitude, expresses appreciation for designers
Relationship: The concepts are related as they both express positive emotions towards designers.
Criteria: A user expresses gratitude or appreciation for designers and their work.
Phrase: Expressing gratitude.

8.
Concepts: agreeing with suggestions, expresses agreement or confirmation
Relationship: The concepts are related as they both involve expressing agreement or confirmation.
Criteria: A user agrees with a suggestion or expresses agreement with an idea.
Phrase: Expressing agreement.

9.
Concepts: sharing update notes, sharing release plans
Relationship: The concepts are related as they both involve sharing information about software updates.
Criteria: Designers share update notes or release plans to inform users about progress.
Phrase: Sharing update information.

10.
Concepts: community response, participating in community
Relationship: The concepts are related as they both involve engaging with the community.
Criteria: Users respond to or engage with the community or other users to foster collaboration.
Phrase: Engaging with the community.

11.
Concepts: building community, fostering community growth
Relationship: The concepts are related as they both involve creating a sense of community.
Criteria: Designers or users foster a sense of community or collaboration to build trust and growth.
Phrase: Fostering community growth.

12.
Concepts: providing user support, offers encouragement and support
Relationship: The concepts are related as they both involve providing support to users or designers.
Criteria: Designers or users provide technical and emotional support to others in the community.
Phrase: Offering support and encouragement.

13.
Concepts: being open to ideas, exploring possibilities
Relationship: The concepts are related as they both involve considering diverse viewpoints and possibilities.
Criteria: Designers are open to new ideas and explore design and technical possibilities.
Phrase: Exploring design possibilities.

14.
Concepts: explains features, explanation provision
Relationship: The concepts are related as they both involve providing explanations about software features.
Criteria: Designers explain and elaborate on features to users to clarify functionality.
Phrase: Providing feature explanations.

15.
Concepts: prioritizing usability, sharing design values and prioritizing user input
Relationship: The concepts are related as they both prioritize user-centered design.
Criteria: Designers prioritize usability and share design values that value user input.
Phrase: Prioritizing user-centered design.

16.
Concepts: highlights long-term benefits, highlighting feature benefits
Relationship: The concepts are related as they both involve highlighting the benefits of software features.
Criteria: Designers highlight the long-term benefits and importance of software features.
Phrase: Highlighting feature benefits.

17.
Concepts: providing technical details and explanations
Relationship: The concepts are related as they both involve providing technical information about software features.
Criteria: Designers provide technical details and explanations about software features.
Phrase: Providing technical explanations.

18.
Concepts: prioritizing quality
Relationship: N/A
Criteria: Designers prioritize quality or excellence in software development and design.
Phrase: Prioritizing quality.