You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: offering co-designing, co-designing with users
- The designer offers users the opportunity to participate in the design process or provide input.
- Involving users in the design process, allowing them to contribute ideas and make decisions.

2.
Concepts: involving users, user involvement
- Instances where designers actively involve users in the design process.
- Instances where users are involved in the design process, either through feedback or testing.

3.
Concepts: open communication, promote group communication
- A designer encourages open communication or feedback within the group.
- Designer encourages or promotes open communication and feedback within the Physics Lab online community.

4.
Concepts: group sharing, suggest group sharing
- Designer mentions group sharing or collaboration.
- A designer suggests sharing resources or files within the group.

5.
Concepts: make a suggestion, design suggestion, feature improvement
- A designer or user makes a suggestion or proposes an idea.
- A user provides a suggestion or idea for improving the design or functionality.
- A designer or user suggests improving a feature or functionality.

6.
Concepts: feature suggestion, feature requests
- A user suggests a new feature or improvement to the software.
- Suggestions from users about desired features or improvements for the software.
- Instances where users request new features or improvements for the Physics Lab tool.

7.
Concepts: propose another feature, suggest broader usability feature
- Suggesting a new feature or functionality for the software.
- A suggestion is made to improve the software's usability or functionality.

8.
Concepts: suggestion, suggestions of interactions
- Providing or suggesting ideas for software improvement or development.
- Suggesting or proposing interactions or features for the software.

9.
Concepts: request, request additional feature
- Making a request or asking for a specific feature or functionality.
- Requesting additional features or functionalities.

10.
Concepts: user need, community need, express need for specific features, express interest or need
- Expressing a need or requirement for the software or its features.
- A user expresses a need or desire for a specific feature or functionality.
- A user expresses a need for a specific feature or functionality.
- User expresses interest or need for a particular feature or functionality.

11.
Concepts: suggestion and feedback, user feedback and suggestions
- Users providing suggestions or feedback on the software's features or development direction.
- Instances where users provide feedback or suggestions about the software.
- Users providing feedback or suggestions on features and improvements for the software.
- Users providing feedback or suggestions to improve the software.

12.
Concepts: user experience feedback, focus on user experience
- Sharing feedback or opinions about user experience.
- User provides feedback on improving user experience.

13.
Concepts: feedback, provide feedback, user feedback request
- User provides feedback or suggestions for improvement.
- A request for feedback or suggestions from users.

14.
Concepts: seeking feedback, request specific feedback
- Seeking feedback or opinions from others on a particular topic or feature.
- The designer requests specific feedback or input on a particular topic.

15.
Concepts: feedback loop, community feedback loop
- Processes where user feedback is solicited and incorporated into design decisions.
- The process of collecting, considering, and implementing user feedback.
- Instances where users provide feedback on the software and designers respond to it.

16.
Concepts: seeking input, user input solicitation
- A designer seeks input or suggestions from users.
- A designer or developer solicits user input or opinions.

17.
Concepts: asking for future help, inquiring user input for future iterations
- Designers ask for help or input from users for future development or planning.
- Designers ask users for input or suggestions for future iterations or developments.

18.
Concepts: elicit feedback, encouraging feedback, prompting user feedback, solicit user feedback, encouragement of user feedback
- Designers ask for feedback, suggestions, or opinions from users.
- The designer encourages users to provide feedback, suggestions, or opinions.
- The designer solicits or encourages user feedback or suggestions.
- Designer solicits feedback or suggestions from users.
- Instances where designers encourage users to provide suggestions or feedback.

19.
Concepts: taking feedback, user feedback and communication
- Designer acknowledges or takes feedback from users.
- The designer engages in open communication, solicits feedback, or encourages users to share their experiences.

20.
Concepts: invite feedback, encourage community feedback
- A developer invites users to provide feedback or suggestions.
- Encouragements or invitations from the designer or developer for users to provide feedback or suggestions.

21.
Concepts: acceptance of request, suggestion acceptance, acknowledge suggestion
- A designer accepts or agrees to a user's request.
- A designer or developer accepts or agrees to implement a user's suggestion.
- A designer acknowledges and accepts a user's suggestion or request.

22.
Concepts: designer response, respond to the feature request
- Instances where designers respond to user feedback or suggestions.
- Instances where designers respond to user feedback or queries.
- Designer responds to a feature request or suggestion from a user.

23.
Concepts: designer acknowledgment, feedback appreciation
- Designer acknowledges user feedback or suggestions.
- The designer expresses gratitude or appreciation for user feedback or suggestions.

24.
Concepts: adapt design plan, design adaptation
- A designer adapts or adjusts their design plan based on user feedback.
- The designer adapts or modifies the software design based on user feedback or suggestions.

25.
Concepts: response to question, indirect answer
- A user or designer responds to a question or inquiry.
- The designer responds indirectly or asks a question in response to a user's query.

26.
Concepts: acknowledge user input, acknowledge feedback
- Acknowledging or responding to user input or feedback.
- Acknowledgments or recognition of feedback or suggestions provided by users.

27.
Concepts: technical constraints, address technical limitation
- Instances where technical limitations or requirements are discussed.
- Instances where limitations or constraints of the software are mentioned.
- Addressing or explaining technical limitations or constraints.

28.
Concepts: system limitations, limitations of solution
- Discussing limitations or constraints of a system or infrastructure.
- A discussion or acknowledgment of the limitations or constraints of a system, tool, or process.

29.
Concepts: explaining current limitations, explain current version's limitation
- Designer explains the current limitations or constraints of a feature.
- The current limitations or constraints of the software are explained or discussed.

30.
Concepts: feature complexity, development challenges
- Designers discuss the complexity or challenges of implementing certain features.
- Designer discusses the challenges or difficulties in developing a feature.

31.
Concepts: feature adjustment, product improvement
- Designer discusses adjusting or refining a feature.
- A designer discusses improving or refining a product or feature.

32.
Concepts: feature discussion, design discussion
- Designer discusses or debates a feature or its implementation.
- Designer discusses or debates the design or implementation of a feature.
===
Here are the definitions for each code:

---
1.
Concepts: offering co-designing, co-designing with users
Relationship: The concepts are related as they both involve the designer giving users the opportunity to participate in the design process.
Criteria: Designers offer users the opportunity to participate in the design process or provide input.
Phrase: Offering co-designing opportunities

2.
Concepts: involving users, user involvement
Relationship: The concepts are related as they both involve users being part of the design process.
Criteria: Designers actively involve users in the design process, either through feedback or testing.
Phrase: Involving users in design

3.
Concepts: open communication, promote group communication
Relationship: The concepts are related as they both involve encouraging open communication within the group.
Criteria: Designers encourage open communication or feedback within the group.
Phrase: Promoting open communication

4.
Concepts: group sharing, suggest group sharing
Relationship: The concepts are related as they both involve sharing resources or files within the group.
Criteria: Designers suggest sharing resources or files within the group.
Phrase: Suggesting group sharing

5.
Concepts: make a suggestion, design suggestion, feature improvement
Relationship: The concepts are related as they all involve making suggestions or proposing ideas.
Criteria: Designers or users make suggestions or propose ideas for improving the design or functionality.
Phrase: Making design suggestions

6.
Concepts: feature suggestion, feature requests
Relationship: The concepts are related as they both involve users suggesting new features or improvements.
Criteria: Users suggest new features or improvements for the software.
Phrase: Requesting new features

7.
Concepts: propose another feature, suggest broader usability feature
Relationship: The concepts are related as they both involve suggesting new features or functionality.
Criteria: Users suggest new features or functionality to improve the software's usability.
Phrase: Proposing new features

8.
Concepts: suggestion, suggestions of interactions
Relationship: The concepts are related as they both involve providing or suggesting ideas for software improvement.
Criteria: Users provide or suggest ideas for software improvement or development.
Phrase: Making suggestions

9.
Concepts: request, request additional feature
Relationship: The concepts are related as they both involve making requests for specific features or functionality.
Criteria: Users make requests or ask for specific features or functionality.
Phrase: Requesting features

10.
Concepts: user need, community need, express need for specific features, express interest or need
Relationship: The concepts are related as they all involve expressing needs or requirements for the software.
Criteria: Users express needs or requirements for the software or its features.
Phrase: Expressing user needs

11.
Concepts: suggestion and feedback, user feedback and suggestions
Relationship: The concepts are related as they both involve users providing feedback or suggestions.
Criteria: Users provide feedback or suggestions on the software's features or development direction.
Phrase: Providing feedback and suggestions

12.
Concepts: user experience feedback, focus on user experience
Relationship: The concepts are related as they both involve sharing feedback or opinions about user experience.
Criteria: Users share feedback or opinions about user experience.
Phrase: Sharing user experience feedback

13.
Concepts: feedback, provide feedback, user feedback request
Relationship: The concepts are related as they all involve providing or requesting feedback.
Criteria: Users provide feedback or suggestions for improvement.
Phrase: Providing feedback

14.
Concepts: seeking feedback, request specific feedback
Relationship: The concepts are related as they both involve seeking feedback or opinions from others.
Criteria: Designers seek feedback or opinions from users on a particular topic or feature.
Phrase: Seeking feedback

15.
Concepts: feedback loop, community feedback loop
Relationship: The concepts are related as they both involve processes where user feedback is solicited and incorporated into design decisions.
Criteria: Designers solicit and incorporate user feedback into design decisions.
Phrase: Creating a feedback loop

16.
Concepts: seeking input, user input solicitation
Relationship: The concepts are related as they both involve seeking input or suggestions from users.
Criteria: Designers seek input or suggestions from users.
Phrase: Seeking user input

17.
Concepts: asking for future help, inquiring user input for future iterations
Relationship: The concepts are related as they both involve asking for help or input from users for future development.
Criteria: Designers ask for help or input from users for future development or planning.
Phrase: Asking for future input

18.
Concepts: elicit feedback, encouraging feedback, prompting user feedback, solicit user feedback, encouragement of user feedback
Relationship: The concepts are related as they all involve encouraging or soliciting user feedback.
Criteria: Designers elicit or encourage user feedback or suggestions.
Phrase: Eliciting feedback

19.
Concepts: taking feedback, user feedback and communication
Relationship: The concepts are related as they both involve designers acknowledging or taking feedback from users.
Criteria: Designers acknowledge or take feedback from users.
Phrase: Taking feedback

20.
Concepts: invite feedback, encourage community feedback
Relationship: The concepts are related as they both involve inviting or encouraging users to provide feedback.
Criteria: Designers invite or encourage users to provide feedback or suggestions.
Phrase: Inviting feedback

21.
Concepts: acceptance of request, suggestion acceptance, acknowledge suggestion
Relationship: The concepts are related as they all involve designers accepting or agreeing to user requests or suggestions.
Criteria: Designers accept or agree to user requests or suggestions.
Phrase: Accepting suggestions

22.
Concepts: designer response, respond to the feature request
Relationship: The concepts are related as they both involve designers responding to user feedback or suggestions.
Criteria: Designers respond to user feedback or suggestions.
Phrase: Responding to feedback

23.
Concepts: designer acknowledgment, feedback appreciation
Relationship: The concepts are related as they both involve designers acknowledging or expressing gratitude for user feedback.
Criteria: Designers acknowledge or express gratitude for user feedback or suggestions.
Phrase: Acknowledging feedback

24.
Concepts: adapt design plan, design adaptation
Relationship: The concepts are related as they both involve designers adapting or adjusting their design plan based on user feedback.
Criteria: Designers adapt or adjust their design plan based on user feedback.
Phrase: Adapting design plans

25.
Concepts: response to question, indirect answer
Relationship: The concepts are related as they both involve responding to questions or inquiries.
Criteria: Designers respond to questions or inquiries from users.
Phrase: Responding to questions

26.
Concepts: acknowledge user input, acknowledge feedback
Relationship: The concepts are related as they both involve acknowledging or responding to user input or feedback.
Criteria: Designers acknowledge or respond to user input or feedback.
Phrase: Acknowledging user input

27.
Concepts: technical constraints, address technical limitation
Relationship: The concepts are related as they both involve discussing technical limitations or requirements.
Criteria: Designers discuss technical limitations or requirements.
Phrase: Addressing technical constraints

28.
Concepts: system limitations, limitations of solution
Relationship: The concepts are related as they both involve discussing limitations or constraints of a system or infrastructure.
Criteria: Designers discuss limitations or constraints of a system or infrastructure.
Phrase: Discussing system limitations

29.
Concepts: explaining current limitations, explain current version's limitation
Relationship: The concepts are related as they both involve explaining the current limitations or constraints of a feature.
Criteria: Designers explain the current limitations or constraints of a feature.
Phrase: Explaining current limitations

30.
Concepts: feature complexity, development challenges
Relationship: The concepts are related as they both involve discussing the complexity or challenges of implementing certain features.
Criteria: Designers discuss the complexity or challenges of implementing certain features.
Phrase: Discussing feature complexity

31.
Concepts: feature adjustment, product improvement
Relationship: The concepts are related as they both involve adjusting or refining a feature.
Criteria: Designers discuss adjusting or refining a feature.
Phrase: Adjusting features

32.
Concepts: feature discussion, design discussion
Relationship: The concepts are related as they both involve discussing or debating a feature or its implementation.
Criteria: Designers discuss or debate a feature or its implementation.
Phrase: Discussing feature design