You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. If a sub-code includes another, use the broader one. If sub-codes are parallel, write one that covers both.
Write clear and generalizable labels and criteria for each code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization (e.g. "social interaction" instead of "interaction", "communication approach" instead of "communication").
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (21 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {Consolidated criteria of code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
21.
Relationship: {The logical relationship between sub-codes in code 21}
Criteria: {Consolidated criteria of code 21}
Label: {A consolidated label of code 21}
Category: {2-4 words for code 21}
---
~~~
1. software updates, updates and changes.
- Updates provided by the designer regarding changes or improvements to the software.
- Instances where the Designer announces updates or changes to the simulation components.

2. timeline and roadmap, transparent updates.
- Instances where the Designer shares timelines, deadlines, or milestones for releases or updates.
- The designer's efforts to provide clear and transparent information about the software updates, release timeline, and new features.

3. development process, sharing design decisions and progress.
- Instances where the Designer discusses the development process or provides updates.
- Instances where the designer shares design decisions, progress updates, or plans with the group members, facilitating knowledge sharing and transparency.

4. iterative design process, feedback and iteration, iterative software development.
- Quotes that demonstrate the designer's commitment to an iterative design process and the continuous improvement of the software.
- Quotes that discuss the feedback provided by the community, and the designers' efforts to incorporate this feedback and iteratively improve the software.
- Evidence of the developer continuously updating and improving the software based on user feedback and community input, reflecting an iterative design process.

5. feature planning, software development.
- Instances where the Designer discusses plans for new features or updates.
- Mentions of planned or upcoming changes, updates, or new features to the software's functionality or design.

6. information sharing, sharing and dissemination.
- Moments where users or designers provide information or updates about the software and its features.
- Quotes that show how the community is sharing and disseminating information about the software.

7. resource sharing, knowledge sharing.
- Instances where community members seek or offer assistance about resources.
- How users within the community seek and provide assistance or information.

8. download queries, queries and clarifications.
- Queries from users on how to access or download the software or updates.
- Questions posed by users seeking further information or clarification about the software or its features.

9. acknowledgement, communication.
- Instances where users or the Designer acknowledge each other's messages.
- Instances of communication between the Designer and users, including responses to user queries and feedback.

10. feedback response, designer responsiveness, responsiveness to user feedback.
- The Developer acknowledging and responding to user feedback and suggestions.
- Responses from the software designer to user feedback, indicating consideration or implementation of suggested features.
- Quotes or evidence showing the designer's consideration and incorporation of user suggestions and feedback into the design decisions and development of the Physics Lab simulation.

11. responsiveness, acknowledgement and response.
- Assessing the designer's responsiveness to user inquiries and feedback.
- Analyzes how the designer acknowledges and responds to user input and queries.

12. feedback on updates, user expectations.
- User reactions to announcements of new features or updates.
- Expressions of user expectations, anticipation, or excitement regarding the software update.

13. feature requests, suggestions and ideas.
- Instances where users request new features or demonstrations.
- Messages that propose new features, functionalities, or applications for the software.

14. user contributions, user feedback integration.
- Contributions from users that could influence the design or functionality of the software.
- Instances involving both the solicitation and incorporation of user feedback, suggestions, or comments that directly influence the design, updates, or modifications of the software, including designers' reactions and adaptations to such inputs.

15. user engagement, user feedback, user feedback on usability and user experience.
- How users interact with the platform to suggest improvements or modifications.
- Interactions where users provide feedback or suggestions for improving the learning experience.
- Comments highlighting usability problems, compatibility issues, concerns about interface design or accessibility. Suggestions, reports of issues, and shared experiences aiming to improve usability, features or overall user satisfaction.

16. software updates and community involvement, expressing needs and preferences.
- Exploring how updates and new versions are informed by user needs and community discussions.
- This code examines how the community members express their needs and preferences for the software, and how the designers respond to these requests.

17. incorporating community feedback, gathering opinions and prioritizing content.
- Understanding how the community's needs and suggestions are being incorporated into the platform's development.
- Seeking input from the community and prioritizing content development based on feedback.

18. inquiry, active participation.
- Participants ask questions about the project or its features.
- Instances where users actively engage by asking questions, giving feedback, or expressing needs.

19. support and feedback, user feedback and community support.
- Instances of feedback, suggestions, questions, or encouragement provided to the Designer or community members
- Quotes or evidence demonstrating the user feedback, comments, and suggestions offered by the online community, as well as the community's efforts to assist and engage other users.

20. call to action, asking for help or suggestions, feedback solicitation.
- The Designer solicits feedback or suggestions from the community.
- Users requesting information, guidance, or feedback from the community or designers.
- Instances of seeking feedback, suggestions, input, or opinions from the community

21. user-centered design.
- The design approach that focuses on the needs and preferences of the users.
- Instances of seeking user input for software development
===
Here is the output in the required format:

---
Categories: 
* Communication Approach
* Design Process
* Community Engagement
* Feedback and Iteration
* Information Sharing
* User-Centered Design

Definitions for each code:

1.
Relationship: Hierarchical
Criteria: Updates provided by the designer regarding changes or improvements to the software
Label: Software Updates
Category: Design Process

2.
Relationship: Parallel
Criteria: Instances where the Designer shares timelines, deadlines, or milestones for releases or updates
Label: Timeline and Roadmap
Category: Design Process

3.
Relationship: Hierarchical
Criteria: Instances where the Designer discusses the development process or provides updates
Label: Development Process
Category: Design Process

4.
Relationship: Hierarchical
Criteria: Quotes that demonstrate the designer's commitment to an iterative design process
Label: Iterative Design Process
Category: Design Process

5.
Relationship: Parallel
Criteria: Instances where the Designer discusses plans for new features or updates
Label: Feature Planning
Category: Design Process

6.
Relationship: Hierarchical
Criteria: Moments where users or designers provide information or updates about the software and its features
Label: Information Sharing
Category: Information Sharing

7.
Relationship: Hierarchical
Criteria: Instances where community members seek or offer assistance about resources
Label: Resource Sharing
Category: Community Engagement

8.
Relationship: Hierarchical
Criteria: Queries from users on how to access or download the software or updates
Label: Download Queries
Category: Information Sharing

9.
Relationship: Hierarchical
Criteria: Instances where users or the Designer acknowledge each other's messages
Label: Acknowledgement
Category: Communication Approach

10.
Relationship: Hierarchical
Criteria: The Developer acknowledging and responding to user feedback and suggestions
Label: Feedback Response
Category: Feedback and Iteration

11.
Relationship: Hierarchical
Criteria: Assessing the designer's responsiveness to user inquiries and feedback
Label: Responsiveness
Category: Communication Approach

12.
Relationship: Hierarchical
Criteria: User reactions to announcements of new features or updates
Label: Feedback on Updates
Category: Feedback and Iteration

13.
Relationship: Hierarchical
Criteria: Instances where users request new features or demonstrations
Label: Feature Requests
Category: Feedback and Iteration

14.
Relationship: Hierarchical
Criteria: Contributions from users that could influence the design or functionality of the software
Label: User Contributions
Category: Feedback and Iteration

15.
Relationship: Hierarchical
Criteria: How users interact with the platform to suggest improvements or modifications
Label: User Engagement
Category: Feedback and Iteration

16.
Relationship: Hierarchical
Criteria: Exploring how updates and new versions are informed by user needs and community discussions
Label: Software Updates and Community Involvement
Category: Feedback and Iteration

17.
Relationship: Hierarchical
Criteria: Understanding how the community's needs and suggestions are being incorporated into the platform's development
Label: Incorporating Community Feedback
Category: Feedback and Iteration

18.
Relationship: Hierarchical
Criteria: Participants ask questions about the project or its features
Label: Inquiry
Category: Community Engagement

19.
Relationship: Hierarchical
Criteria: Instances of feedback, suggestions, questions, or encouragement provided to the Designer or community members
Label: Support and Feedback
Category: Community Engagement

20.
Relationship: Hierarchical
Criteria: The Designer solicits feedback or suggestions from the community
Label: Call to Action
Category: Feedback and Iteration

21.
Relationship: Hierarchical
Criteria: The design approach that focuses on the needs and preferences of the users
Label: User-Centered Design
Category: User-Centered Design