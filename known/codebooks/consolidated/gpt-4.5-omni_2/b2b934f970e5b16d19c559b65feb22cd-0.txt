You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (21 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
21. 
Concepts: {Repeat the input 21}
Relationship: {What is logical relationship between concepts in code 21, or N/A if not applicable}
Criteria: {Who did what, and how for code 21}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: inviting community feedback, making community announcements
- Developers invite and seek feedback and input from the community.
- Designers provide updates and invite community input on features.

2.
Concepts: sharing design information, sharing development plans and resources
- Designers and users share design-related information and support each other.
- Designers or users share development plans, resources, or announcements.

3.
Concepts: co-designing with users, involving community in design
- Designers gather user feedback and involve users in the design process to contribute ideas.
- Designers involve the community in the development process, offering co-design opportunities.

4.
Concepts: proposing solutions, committing to improvements
- Designers offer solutions and propose design ideas to improve the software.
- Designers commit to providing solutions and improving the software.

5.
Concepts: providing user support, responding to inquiries
- Designers or users provide support and seek or offer assistance.
- Designers respond to user inquiries about software compatibility or other issues.

6.
Concepts: sharing visual updates, communicating release progress
- A designer shares visual updates and information about the app release status.
- Designers provide timelines and communicate progress of software updates.

7.
Concepts: announcing development updates, making developer announcements
- Designers announce and provide updates on planned and current development.
- Developers make general announcements about new features, adjustments, and bug fixes.

8.
Concepts: discussing future development, explaining development goals
- Designers discuss and outline future interests and development plans.
- A designer outlines the goals and future plans for the software development.

9.
Concepts: user guidance, instruction and updates
- A designer provides detailed guidance on software features and updates.
- Designers providing updates and instructions to help users understand and use the software effectively.

10.
Concepts: announcing updates, notifying about new version
- Designers inform users about software and component updates and new features.
- A designer notifies users about the availability of a new version.

11.
Concepts: agreeing with suggestions, encouraging open communication
- A designer shows engagement and agreement with design suggestions.
- A designer encourages open communication for suggestions and is open to alternative solutions.

12.
Concepts: providing detailed design support, providing technical clarification
- A designer provides a detailed answer to a user query related to design support.
- A designer provides technical clarification and explains details and functionality.

13.
Concepts: apologizing for inconvenience, acknowledge potential inconvenience
- Designers or users apologize for inconvenience and timing, showing consideration.
- Acknowledgments made by the designer about potential inconveniences.

14.
Concepts: platform limitation, explaining software limitations
- Information provided by the designer about platform limitations.
- Designers explain and address software and feature limitations.

15.
Concepts: discussing compatibility, speculate on compatibility
- A designer considers future compatibility and discusses system requirements.
- A designer speculates on the compatibility of the software with older systems.

16.
Concepts: software effectiveness, praising software features
- A user comments on the effectiveness of the software in a practical setting.
- Users appreciate specific features and praise the software for its practicality and usability.

17.
Concepts: making feature requests, suggesting new features
- Users make and justify feature requests for the software.
- Users propose design suggestions and suggest new features and improvements.

18.
Concepts: acknowledging user responses, acknowledging communication
- Users acknowledge and appreciate responses, information, or instructions.
- A user or designer acknowledges responses or feedback with gratitude or brief responses.

19.
Concepts: acknowledging mutual support, expressing appreciation and recognizing efforts
- Users and designers express appreciation and gratitude for each other's support and contributions.
- Users express thanks and appreciation for the efforts of designers.

20.
Concepts: explaining plans, explaining intentions
- A participant explains plans and provides reasons for actions.
- A participant explains a situation and the intention behind their question.

21.
Concepts: confirming agreement, confirming mutual agreement
- Users confirm agreement or understanding in discussions.
- Users and designers confirm mutual agreements or collaborations.
===
---
Definitions for each code (21 in total):
1.
Concepts: inviting community feedback, making community announcements
Relationship: Both involve communication from developers/designers to the community.
Criteria: Developers and designers invite feedback and make announcements to the community.
Phrase: Seeking community input and making announcements

2.
Concepts: sharing design information, sharing development plans and resources
Relationship: Both involve sharing information and resources related to design and development.
Criteria: Designers and users share design information and development plans/resources.
Phrase: Sharing design and development information

3.
Concepts: co-designing with users, involving community in design
Relationship: Both involve user participation in the design process.
Criteria: Designers involve users in the design process through feedback and co-design opportunities.
Phrase: Involving users in design

4.
Concepts: proposing solutions, committing to improvements
Relationship: Both involve efforts to enhance the software.
Criteria: Designers propose solutions and commit to improving the software.
Phrase: Proposing and committing to improvements

5.
Concepts: providing user support, responding to inquiries
Relationship: Both involve addressing user needs and questions.
Criteria: Designers or users provide support and respond to inquiries.
Phrase: Offering support and responding to inquiries

6.
Concepts: sharing visual updates, communicating release progress
Relationship: Both involve updating the community on visual and release progress.
Criteria: Designers share visual updates and communicate release progress.
Phrase: Updating on visual and release progress

7.
Concepts: announcing development updates, making developer announcements
Relationship: Both involve communicating development-related information.
Criteria: Designers and developers announce development updates and make general announcements.
Phrase: Announcing development updates

8.
Concepts: discussing future development, explaining development goals
Relationship: Both involve outlining future plans and goals.
Criteria: Designers discuss future development and explain development goals.
Phrase: Outlining future development plans

9.
Concepts: user guidance, instruction and updates
Relationship: Both involve providing information to help users understand and use the software.
Criteria: Designers provide guidance, instructions, and updates to users.
Phrase: Providing user guidance and updates

10.
Concepts: announcing updates, notifying about new version
Relationship: Both involve informing users about software updates and new versions.
Criteria: Designers announce updates and notify users about new versions.
Phrase: Informing about updates and new versions

11.
Concepts: agreeing with suggestions, encouraging open communication
Relationship: Both involve positive engagement with user suggestions.
Criteria: Designers agree with suggestions and encourage open communication.
Phrase: Encouraging and agreeing with suggestions

12.
Concepts: providing detailed design support, providing technical clarification
Relationship: Both involve offering detailed explanations and support.
Criteria: Designers provide detailed design support and technical clarification.
Phrase: Offering detailed support and clarification

13.
Concepts: apologizing for inconvenience, acknowledge potential inconvenience
Relationship: Both involve recognizing and addressing user inconvenience.
Criteria: Designers or users apologize and acknowledge potential inconveniences.
Phrase: Apologizing and acknowledging inconvenience

14.
Concepts: platform limitation, explaining software limitations
Relationship: Both involve discussing limitations of the software or platform.
Criteria: Designers explain platform and software limitations.
Phrase: Explaining limitations

15.
Concepts: discussing compatibility, speculate on compatibility
Relationship: Both involve considerations of software compatibility.
Criteria: Designers discuss and speculate on software compatibility.
Phrase: Discussing software compatibility

16.
Concepts: software effectiveness, praising software features
Relationship: Both involve positive feedback on software performance.
Criteria: Users comment on the effectiveness and praise features of the software.
Phrase: Praising software effectiveness

17.
Concepts: making feature requests, suggesting new features
Relationship: Both involve proposing new features or improvements.
Criteria: Users make feature requests and suggest new features.
Phrase: Requesting and suggesting new features

18.
Concepts: acknowledging user responses, acknowledging communication
Relationship: Both involve recognizing and appreciating communication.
Criteria: Users or designers acknowledge responses and communication.
Phrase: Acknowledging communication

19.
Concepts: acknowledging mutual support, expressing appreciation and recognizing efforts
Relationship: Both involve expressing gratitude and recognition.
Criteria: Users and designers express appreciation and recognize each other's efforts.
Phrase: Expressing appreciation and recognizing efforts

20.
Concepts: explaining plans, explaining intentions
Relationship: Both involve providing explanations for actions or questions.
Criteria: Participants explain plans and intentions behind actions or questions.
Phrase: Explaining plans and intentions

21.
Concepts: confirming agreement, confirming mutual agreement
Relationship: Both involve reaching and confirming mutual understanding.
Criteria: Users and designers confirm agreement and mutual understanding.
Phrase: Confirming mutual agreement
---