You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (5 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
5. 
Concepts: {Repeat the input 5}
Relationship: {What is logical relationship between concepts in code 5, or N/A if not applicable}
Criteria: {Who did what, and how for code 5}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: external resources
- Interviewee mentions using external resources for immediate feedback on coding issues.
- Interviewees express the need for syntax references and mention using external resources for support.

2.
Concepts: acknowledges limited time
- Interviewee acknowledges time constraints that limit their ability to learn new extensions.
- Interviewee expresses a desire to learn about GIS extensions but notes time constraints.

3.
Concepts: suggests need for efficient learning tools, reflect on language proficiency and time constraints
- Interviewees express the need for efficient learning tools that accommodate their diverse programming language experiences and time constraints.
- Interviewees discuss their proficiency in programming languages and the time constraints they face.

4.
Concepts: documentation issues, documentation critique
- Users reflect on the inadequacies of documentation and the reliance on oral knowledge in their field.
- Interviewees critique the limitations of existing technical documentation and express a need for improvement.

5.
Concepts: identify undocumented knowledge gaps, emphasize oral tradition in knowledge sharing
- Interviewees reflect on the importance of addressing undocumented knowledge gaps in software development.
- Interviewees reflect on the significance of oral tradition in knowledge transfer within software development.
===
---
Definitions for each code (5 in total):
1. 
Concepts: external resources
- Interviewee mentions using external resources for immediate feedback on coding issues.
- Interviewees express the need for syntax references and mention using external resources for support.
Relationship: The concepts are related as they both highlight the reliance on external resources for problem-solving and learning in coding.
Criteria: Interviewees utilized external resources to obtain immediate feedback and support for coding challenges.
Phrase: Utilize external resources for coding support.

2. 
Concepts: acknowledges limited time
- Interviewee acknowledges time constraints that limit their ability to learn new extensions.
- Interviewee expresses a desire to learn about GIS extensions but notes time constraints.
Relationship: Both concepts emphasize the impact of time limitations on the interviewees' learning opportunities.
Criteria: Interviewees recognized their time constraints as a barrier to learning new extensions.
Phrase: Recognize time constraints in learning.

3. 
Concepts: suggests need for efficient learning tools, reflect on language proficiency and time constraints
- Interviewees express the need for efficient learning tools that accommodate their diverse programming language experiences and time constraints.
- Interviewees discuss their proficiency in programming languages and the time constraints they face.
Relationship: The concepts are interconnected as they both address the necessity for learning tools that consider individual programming backgrounds and time limitations.
Criteria: Interviewees indicated a need for efficient learning tools that align with their programming proficiency and time limitations.
Phrase: Indicate need for efficient learning tools.

4. 
Concepts: documentation issues, documentation critique
- Users reflect on the inadequacies of documentation and the reliance on oral knowledge in their field.
- Interviewees critique the limitations of existing technical documentation and express a need for improvement.
Relationship: The concepts are related as they both highlight the shortcomings of current documentation practices and the reliance on alternative knowledge-sharing methods.
Criteria: Users critiqued the existing documentation and identified the need for enhancements.
Phrase: Critique documentation inadequacies.

5. 
Concepts: identify undocumented knowledge gaps, emphasize oral tradition in knowledge sharing
- Interviewees reflect on the importance of addressing undocumented knowledge gaps in software development.
- Interviewees reflect on the significance of oral tradition in knowledge transfer within software development.
Relationship: The concepts are connected as they both focus on the importance of knowledge sharing and the challenges posed by undocumented information.
Criteria: Interviewees recognized the need to address undocumented knowledge gaps while valuing oral traditions in knowledge sharing.
Phrase: Recognize knowledge gaps and oral traditions. 
---