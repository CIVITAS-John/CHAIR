You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (7 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
7. {Repeat the input 7}
Relationship: {The logical relationship between concepts in input 7}
Criteria: {A sentence of consolidated criteria for code 7}
Label: {A consolidated label of code 7}
Category: {2-4 words for code 7}
---
~~~
1. collaborative effort, collective collaboration.
- Indications of a collaborative effort between the designer and users in developing or improving the software.
- Interactions where community members collectively engage in decision-making or problem-solving activities.

2. technical constraints, technical and environmental constraints.
- Instances where technical limitations or constraints are discussed.
- Issues related to technical limitations and specific contexts in which the software is used.

3. user support, user assistance.
- Designers providing support and guidance to users.
- Exchanges where community members help each other solve problems or provide usage tips.

4. technical support, technical assistance.
- Instances where users or designers offer or receive technical help to resolve issues or bugs with the software.
- Exchanges where technical guidance or solutions are provided to address issues users face with the software.

5. feedback solicitation, soliciting feedback and input.
- Instances where designers seek input, suggestions, or feedback from users to enhance the software.
- Instances where developers or designers actively solicit feedback, suggestions, or input from the community or stakeholders during the design and development process.

6. implementing user feedback, incorporating feedback.
- Changes or updates in the software that reflect user suggestions or needs.
- The designer's acknowledgment and consideration of the community's requests and feedback.
- The designer considers and incorporates feedback and suggestions from group members and stakeholders into the design and development process.

7. designer-user communication, designer-user collaboration.
- Instances of the designer communicating with users, sharing updates, or responding to user inquiries.
- Quotes demonstrating the designer explicitly asking for user feedback/suggestions, or responding to user feedback/suggestions regarding usability or design aspects.
===
---
Categories: 
* Collaborative Design
* Technical Facilitation
* User-Centered Support
* Community Engagement

Definitions for each code:

1. collaborative effort, collective collaboration.
Relationship: Inclusive
Criteria: Instances of joint effort or collective decision-making between designers and users.
Label: Collaborative Problem-Solving
Category: Collaborative Design

2. technical constraints, technical and environmental constraints.
Relationship: Overlapping
Criteria: Instances where technical limitations or environmental factors influence software development.
Label: Technical Limitations
Category: Technical Facilitation

3. user support, user assistance.
Relationship: Parallel
Criteria: Instances of guidance or help provided by designers or community members to users.
Label: User Guidance
Category: User-Centered Support

4. technical support, technical assistance.
Relationship: Inclusive
Criteria: Instances of technical help or troubleshooting provided by designers or users.
Label: Technical Troubleshooting
Category: Technical Facilitation

5. feedback solicitation, soliciting feedback and input.
Relationship: Inclusive
Criteria: Instances where designers seek input or feedback from users to improve the software.
Label: Feedback Elicitation
Category: Collaborative Design

6. implementing user feedback, incorporating feedback.
Relationship: Resultant
Criteria: Instances where user feedback is acknowledged and incorporated into software development.
Label: Feedback Incorporation
Category: Collaborative Design

7. designer-user communication, designer-user collaboration.
Relationship: Overlapping
Criteria: Instances of communication or collaboration between designers and users.
Label: Designer-User Interaction
Category: Community Engagement