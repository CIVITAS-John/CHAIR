You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (9 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
9. 
Concepts: {Repeat the input 9}
Relationship: {What is logical relationship between concepts in code 9, or N/A if not applicable}
Criteria: {Who did what, and how for code 9}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: feature complexity, compare feature complexities
- Mentioning the complexity or difficulty of a feature or task.
- Comparisons or discussions about the complexity of different features.

2.
Concepts: consider hardware limitations, mentioning system limitations
- User considers or discusses hardware limitations or constraints.
- A user mentions limitations or constraints due to the system used.

3.
Concepts: outdated technology, highlight outdated technology
- Outdated technology or infrastructure is mentioned as a challenge or limitation.
- A user highlights or mentions outdated technology or infrastructure.

4.
Concepts: explaining the need, explain feature importance
- Designer explains the need or purpose behind a feature or development.
- A designer explains the importance, significance, or value of a feature or component.

5.
Concepts: feature necessity, acknowledge need for feature
- Identifying or emphasizing the need for a specific feature or functionality.
- The designer acknowledges the need for a specific feature or improvement.

6.
Concepts: practicality, emphasizing convenience
- Highlighting the practicality or usefulness of a tool or feature.
- Emphasizing the importance of convenience in a feature or function.

7.
Concepts: platform clarification, discussing platform-specific updates
- Clarifying or inquiring about platform-specific information.
- Updates or information specific to a particular platform are discussed.

8.
Concepts: comparison, comparison with other applications
- A user or designer compares the platform or its features to something else.
- A comparison is made between the online community or its features and other similar applications or tools.

9.
Concepts: discuss usability, consider usability
- Users or designers discuss the usability or user experience of the platform.
- Discussions or considerations about the usability or user experience of the software.
===
Here are the definitions for each code:

---
1.
Concepts: feature complexity, compare feature complexities
Relationship: The concepts are related as they both refer to the complexity of features, with the second concept involving a comparative aspect.
Criteria: Participants discuss or compare the complexity of features or tasks.
Phrase: Comparing feature complexities

2.
Concepts: consider hardware limitations, mentioning system limitations
Relationship: The concepts are related as they both refer to limitations, with the first concept focusing on consideration and the second concept focusing on mention.
Criteria: Participants consider or mention limitations due to hardware or system constraints.
Phrase: Considering system limitations

3.
Concepts: outdated technology, highlight outdated technology
Relationship: The concepts are related as they both refer to outdated technology, with the second concept involving highlighting or emphasis.
Criteria: Participants mention or highlight outdated technology or infrastructure as a challenge or limitation.
Phrase: Highlighting outdated technology

4.
Concepts: explaining the need, explain feature importance
Relationship: The concepts are related as they both refer to explaining or justifying the importance of a feature.
Criteria: Designers explain the purpose or significance of a feature or development.
Phrase: Explaining feature importance

5.
Concepts: feature necessity, acknowledge need for feature
Relationship: The concepts are related as they both refer to the need for a feature, with the second concept involving acknowledgment.
Criteria: Participants identify or acknowledge the need for a specific feature or functionality.
Phrase: Acknowledging feature necessity

6.
Concepts: practicality, emphasizing convenience
Relationship: The concepts are related as they both refer to the usefulness or importance of a feature, with the second concept involving emphasis.
Criteria: Participants highlight the practicality or convenience of a tool or feature.
Phrase: Emphasizing practicality

7.
Concepts: platform clarification, discussing platform-specific updates
Relationship: The concepts are related as they both refer to platform-specific information, with the second concept involving discussion or updates.
Criteria: Participants clarify or discuss platform-specific information or updates.
Phrase: Discussing platform specifics

8.
Concepts: comparison, comparison with other applications
Relationship: The concepts are related as they both refer to comparisons, with the second concept involving a specific type of comparison.
Criteria: Participants compare the platform or its features to other applications or tools.
Phrase: Comparing to other applications

9.
Concepts: discuss usability, consider usability
Relationship: The concepts are related as they both refer to usability, with the second concept involving consideration.
Criteria: Participants discuss or consider the usability or user experience of the platform.
Phrase: Discussing usability