You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. If a sub-code includes another, use the broader one. If sub-codes are parallel, write one that covers both.
Write clear and generalizable labels and criteria for each code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization (e.g. "social interaction" instead of "interaction", "communication approach" instead of "communication").
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (32 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {Consolidated criteria of code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
32.
Relationship: {The logical relationship between sub-codes in code 32}
Criteria: {Consolidated criteria of code 32}
Label: {A consolidated label of code 32}
Category: {2-4 words for code 32}
---
~~~
1. improvement promise, promise to development an app about chemistry on a later time.
- Committing to improve or enhance the app
- Expressing a commitment or promise to develop a new feature or app

2. feature promise, gives a semi-promise of its completion date.
- Promising to realize a feature
- Estimating or promising a completion date for a task or feature.

3. timeline and roadmap, release planning.
- Instances where the Designer shares timelines, deadlines, or milestones for releases or updates
- Involves sharing a schedule or projected timeframe for a future update, release, or deployment of a digital artifact.

4. development plans, future design plans.
- Sharing plans or roadmaps for development
- Outlining or proposing ideas for future design or development

5. new feature introduction, feature demonstration.
- Explaining new features or functionality
- Providing examples or demonstrations of a feature's functionality

6. feature discussion, adoption of new features.
- Discussing new features, updates, or changes to the app
- Discussions related to the introduction of new features or changes in the software.

7. feature request, raise a concern for the new feature.
- Requesting new features or functionalities
- Raising a concern about a new feature.

8. feature development, development plans and prioritization.
- Mentions of new features, bug fixes, or improvements to the Physics Lab platform
- Comments from the designer/developer about plans, priorities, and roadmap for developing Physics Lab features.

9. feature planning, development process.
- Instances where the Designer discusses plans for new features or updates
- Instances where the Designer discusses the development process or provides updates

10. announcement, project updates.
- Designers or moderators share information about the project or its progress.
- The Designer shares updates, changes, or new features in the Physics Lab

11. software updates, component updates.
- Updates provided by the designer regarding changes or improvements to the software
- Discussions about updates or changes to the components within the lab simulation software

12. update sharing, progress updates.
- Sharing information about updates, changes, or news
- Sharing information about the project's progress, timelines, or milestones

13. version clarification, version update notes.
- Explaining or clarifying the type or version of the app
- Documenting changes or updates in a version or release notes

14. suggestion, idea generation.
- Providing ideas or proposals for improvement or addition
- The process of generating and sharing new ideas or suggestions.

15. user feedback, feedback solicitation.
- Providing feedback on the user experience or suggesting improvements
- Soliciting opinions or suggestions

16. seeking input, support and feedback.
- Instances where the Designer seeks input or feedback from the group members.
- Instances of feedback, suggestions, questions, or encouragement provided to the Designer or community members

17. incorporating community feedback, software updates and community involvement.
- Understanding how the community's needs and suggestions are being incorporated into the platform's development
- Exploring how updates and new versions are informed by user needs and community discussions

18. feedback response, developer engagement.
- The Developer acknowledging and responding to user feedback and suggestions
- Developers engaging with the community, responding to feedback, and providing updates

19. feedback on updates, user feedback and emojis.
- User reactions to announcements of new features or updates
- Instances where users express their reactions, feedback, or emotional responses using emojis or brief comments, which provide insight into their sentiments regarding the updates or interactions.

20. mutual understanding, co-design and designer-user interaction.
- Instances where users and designers demonstrate an understanding of each other's perspectives and needs.
- Instances where users and designers collaborate in the design process

21. collaborative efforts, decision making and collaborative decision-making.
- Instances of collaborative activities, suggestions, or consulting others in decision-making
- How design decisions are made through collective input and agreement

22. collaborative development, user engagement and collaboration.
- Indications of collaborative development process for Physics Lab software
- This code refers to the level of user engagement and the collaborative nature of the software development process.

23. development explanation, technical explanation.
- Explaining the development process or technical details
- Instances where the Designer provides technical details or explanations about the app's functionality or development.

24. iterative design process, continuous improvement.
- Quotes that demonstrate the designer's commitment to an iterative design process
- This code captures the designer's commitment to improving the product and addressing community feedback.

25. visual design and user interface, design considerations and usability.
- Considerations around visual aspects and representations in the user interface
- Examining how design impacts user experience and considering usability principles

26. designer response, responsiveness, responsive communication.
- Designer responses to user inquiries or updates
- Assessing the designer's responsiveness to user inquiries and feedback
- The designer's responsiveness and willingness to address community members' questions and concerns.

27. design decisions, consultation and inclusion.
- Discussions around design choices and community input
- Moments where the designer seeks input from the community or confirms details with them

28. design inquiry, design discussion.
- Asking about design or functionality
- Discussing design or functionality

29. inquiry-based learning, experiential learning and access.
- Mentions of using the software to support inquiry-based, experiential, or hands-on learning activities
- Examining how the software facilitates hands-on experiential learning and ease of access

30. active learning, knowledge construction.
- Elements that promote active engagement, experimentation, and hands-on learning experiences.
- Aspects that facilitate the construction of knowledge through exploration, problem-solving, and meaning-making.

31. student engagement, engagement and teaching practices.
- References to students' reactions, interest, or engagement with the software or simulations.
- Analyzing how users interact with the software to learn physics concepts and how the software influences teaching methods and student engagement

32. educational applications, educational content and enhancement.
- Discussing how participants engage with the software's features and suggest educational applications.
- Discussions related to educational content and features desired by users
===
Here is the output format with the requested information:

---
Categories: 
* Community Engagement
* Design and Development
* Learning and Education
* Communication and Feedback

Definitions for each code:

1.
Relationship: Sub-codes are parallel
Criteria: Commitments or promises to improve or enhance the app
Label: Improvement Promise
Category: Design and Development

2.
Relationship: Sub-codes are parallel
Criteria: Promising to realize a feature with an estimated completion date
Label: Feature Promise
Category: Design and Development

3.
Relationship: Sub-codes are parallel
Criteria: Sharing timelines, deadlines, or milestones for releases or updates
Label: Timeline and Roadmap
Category: Design and Development

4.
Relationship: Sub-codes are parallel
Criteria: Sharing plans or roadmaps for development
Label: Development Plans
Category: Design and Development

5.
Relationship: Sub-codes are parallel
Criteria: Explaining new features or functionality
Label: New Feature Introduction
Category: Design and Development

6.
Relationship: Sub-codes are parallel
Criteria: Discussing new features, updates, or changes to the app
Label: Feature Discussion
Category: Design and Development

7.
Relationship: Sub-codes are parallel
Criteria: Requesting new features or functionalities
Label: Feature Request
Category: Community Engagement

8.
Relationship: Sub-codes are parallel
Criteria: Mentions of new features, bug fixes, or improvements to the Physics Lab platform
Label: Feature Development
Category: Design and Development

9.
Relationship: Sub-codes are parallel
Criteria: Discussing plans for new features or updates
Label: Feature Planning
Category: Design and Development

10.
Relationship: Sub-codes are parallel
Criteria: Sharing information about the project or its progress
Label: Announcement
Category: Communication and Feedback

11.
Relationship: Sub-codes are parallel
Criteria: Updates provided by the designer regarding changes or improvements to the software
Label: Software Updates
Category: Design and Development

12.
Relationship: Sub-codes are parallel
Criteria: Sharing information about updates, changes, or news
Label: Update Sharing
Category: Communication and Feedback

13.
Relationship: Sub-codes are parallel
Criteria: Explaining or clarifying the type or version of the app
Label: Version Clarification
Category: Design and Development

14.
Relationship: Sub-codes are parallel
Criteria: Providing ideas or proposals for improvement or addition
Label: Suggestion
Category: Community Engagement

15.
Relationship: Sub-codes are parallel
Criteria: Providing feedback on the user experience or suggesting improvements
Label: User Feedback
Category: Community Engagement

16.
Relationship: Sub-codes are parallel
Criteria: Seeking input or feedback from the group members
Label: Seeking Input
Category: Community Engagement

17.
Relationship: Sub-codes are parallel
Criteria: Understanding how the community's needs and suggestions are being incorporated into the platform's development
Label: Incorporating Community Feedback
Category: Community Engagement

18.
Relationship: Sub-codes are parallel
Criteria: The Developer acknowledging and responding to user feedback and suggestions
Label: Feedback Response
Category: Communication and Feedback

19.
Relationship: Sub-codes are parallel
Criteria: User reactions to announcements of new features or updates
Label: Feedback on Updates
Category: Community Engagement

20.
Relationship: Sub-codes are parallel
Criteria: Instances where users and designers demonstrate an understanding of each other's perspectives and needs
Label: Mutual Understanding
Category: Community Engagement

21.
Relationship: Sub-codes are parallel
Criteria: Instances of collaborative activities, suggestions, or consulting others in decision-making
Label: Collaborative Efforts
Category: Community Engagement

22.
Relationship: Sub-codes are parallel
Criteria: Indications of collaborative development process for Physics Lab software
Label: Collaborative Development
Category: Community Engagement

23.
Relationship: Sub-codes are parallel
Criteria: Explaining the development process or technical details
Label: Development Explanation
Category: Design and Development

24.
Relationship: Sub-codes are parallel
Criteria: Quotes that demonstrate the designer's commitment to an iterative design process
Label: Iterative Design Process
Category: Design and Development

25.
Relationship: Sub-codes are parallel
Criteria: Considerations around visual aspects and representations in the user interface
Label: Visual Design
Category: Design and Development

26.
Relationship: Sub-codes are parallel
Criteria: Designer responses to user inquiries or updates
Label: Designer Response
Category: Communication and Feedback

27.
Relationship: Sub-codes are parallel
Criteria: Discussions around design choices and community input
Label: Design Decisions
Category: Design and Development

28.
Relationship: Sub-codes are parallel
Criteria: Asking about design or functionality
Label: Design Inquiry
Category: Community Engagement

29.
Relationship: Sub-codes are parallel
Criteria: Mentions of using the software to support inquiry-based, experiential, or hands-on learning activities
Label: Inquiry-Based Learning
Category: Learning and Education

30.
Relationship: Sub-codes are parallel
Criteria: Elements that promote active engagement, experimentation, and hands-on learning experiences
Label: Active Learning
Category: Learning and Education

31.
Relationship: Sub-codes are parallel
Criteria: References to students' reactions, interest, or engagement with the software or simulations
Label: Student Engagement
Category: Learning and Education

32.
Relationship: Sub-codes are parallel
Criteria: Discussing how participants engage with the software's features and suggest educational applications
Label: Educational Applications
Category: Learning and Education