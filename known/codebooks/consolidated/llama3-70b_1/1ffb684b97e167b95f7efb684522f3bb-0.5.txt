You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (14 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
14. 
Concepts: {Repeat the input 14}
Relationship: {What is logical relationship between concepts in code 14, or N/A if not applicable}
Criteria: {Who did what, and how for code 14}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: share common practices, align with best practices
- Users confirm and share common practices or experiences.
- Users suggest or recommend best practices or standards in specific areas.

2.
Concepts: provides user advice, offer strategic feedback
- Users provide justified feedback, suggestions, and perspectives.
- Users provide strategic or constructive feedback on product development or direction.

3.
Concepts: feature enthusiasm, express enthusiasm for development
- Showing enthusiasm or excitement for planned features.
- Users express enthusiasm or interest in a product or idea.

4.
Concepts: clarify updates and confirm agreements, acknowledge and respond to clarification
- Designers clarify updates and confirm agreements.
- Designers acknowledge clarification and respond to previous statements.

5.
Concepts: confirming resource receipt, confirm updates and acknowledge receipt
- User confirms receiving desired resources.
- Users confirm updates and acknowledge receipt of information.

6.
Concepts: gather user feedback, inquire about user input
- Designers gather user feedback and seek specific input.
- Designers inquire about user input and experience.

7.
Concepts: validate user reasons, accepting and validating user requests
- Designers validate user reasons and confirm design choices.
- Designer accepts and validates user requests to address user needs.

8.
Concepts: listing new features, explaining new features
- Designers list or describe new features or updates.
- Designers explain new features or updates to the software.

9.
Concepts: share release information, share app release status
- Designers share release information and announce new version releases.
- Designers share information about the app release status, new version submission, and review status.

10.
Concepts: set expectations, sets development expectations
- Designers set expectations for upcoming updates, features, or releases, including limitations or caveats.
- A designer sets expectations for future development or features.

11.
Concepts: set development timeline, provides development timelines
- A designer sets a timeline or priority for a specific feature or functionality.
- A designer provides or manages development timelines.

12.
Concepts: valuing design quality, appreciate design quality
- Valuing or emphasizing the importance of design quality.
- Users appreciate and praise design quality.

13.
Concepts: suggest compatibility checks, analyzing and theorizing about compatibility
- Designers suggest compatibility checks and identify compatible systems.
- Designer analyzes theoretical compatibility and theorizes about system compatibility to ensure seamless integration.

14.
Concepts: demonstrating functionality, explain feature benefits
- Designers demonstrate the functionality of the software.
- Designers explain feature benefits and inform about software capability.
===
Here are the definitions for each code:

---
1.
Concepts: share common practices, align with best practices
Relationship: The concepts are related as users are sharing their own practices and aligning them with established best practices.
Criteria: Users share and confirm common practices and suggest best practices.
Phrase: Share and align practices.

2.
Concepts: provides user advice, offer strategic feedback
Relationship: The concepts are related as users provide feedback that is both justified and strategic.
Criteria: Users provide justified and strategic feedback on product development.
Phrase: Provide strategic feedback.

3.
Concepts: feature enthusiasm, express enthusiasm for development
Relationship: The concepts are related as users express enthusiasm for planned features and development.
Criteria: Users express enthusiasm for planned features and development.
Phrase: Express enthusiasm.

4.
Concepts: clarify updates and confirm agreements, acknowledge and respond to clarification
Relationship: The concepts are related as designers clarify updates, confirm agreements, and acknowledge previous statements.
Criteria: Designers clarify updates, confirm agreements, and respond to clarification.
Phrase: Clarify and confirm updates.

5.
Concepts: confirming resource receipt, confirm updates and acknowledge receipt
Relationship: The concepts are related as users confirm receipt of resources and updates.
Criteria: Users confirm receipt of resources and updates.
Phrase: Confirm receipt.

6.
Concepts: gather user feedback, inquire about user input
Relationship: The concepts are related as designers gather feedback and inquire about user input.
Criteria: Designers gather feedback and inquire about user input.
Phrase: Gather user feedback.

7.
Concepts: validate user reasons, accepting and validating user requests
Relationship: The concepts are related as designers validate user reasons and accept user requests.
Criteria: Designers validate user reasons and accept user requests.
Phrase: Validate user requests.

8.
Concepts: listing new features, explaining new features
Relationship: The concepts are related as designers list and explain new features.
Criteria: Designers list and explain new features.
Phrase: Explain new features.

9.
Concepts: share release information, share app release status
Relationship: The concepts are related as designers share release information and app release status.
Criteria: Designers share release information and app release status.
Phrase: Share release information.

10.
Concepts: set expectations, sets development expectations
Relationship: The concepts are related as designers set expectations for development.
Criteria: Designers set expectations for development.
Phrase: Set development expectations.

11.
Concepts: set development timeline, provides development timelines
Relationship: The concepts are related as designers set and provide development timelines.
Criteria: Designers set and provide development timelines.
Phrase: Set development timelines.

12.
Concepts: valuing design quality, appreciate design quality
Relationship: The concepts are related as users value and appreciate design quality.
Criteria: Users value and appreciate design quality.
Phrase: Appreciate design quality.

13.
Concepts: suggest compatibility checks, analyzing and theorizing about compatibility
Relationship: The concepts are related as designers suggest compatibility checks and analyze compatibility.
Criteria: Designers suggest compatibility checks and analyze compatibility.
Phrase: Suggest compatibility checks.

14.
Concepts: demonstrating functionality, explain feature benefits
Relationship: The concepts are related as designers demonstrate functionality and explain feature benefits.
Criteria: Designers demonstrate functionality and explain feature benefits.
Phrase: Demonstrate functionality.