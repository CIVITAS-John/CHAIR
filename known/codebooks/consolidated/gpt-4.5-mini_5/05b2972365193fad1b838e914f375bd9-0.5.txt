You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (21 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
21. 
Concepts: {Repeat the input 21}
Relationship: {What is logical relationship between concepts in code 21, or N/A if not applicable}
Criteria: {Who did what, and how for code 21}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: augmented reality, introduce new features
- The designer highlights the introduction of augmented reality features in software updates.
- Designers introduce new features and provide visual content or information about upcoming updates.

2.
Concepts: discuss future plans, future design plans/considerations
- Designers discuss potential future developments and share information about goals based on user needs.
- Designers consider future design plans based on user needs and curriculum requirements.

3.
Concepts: indicate future updates, suggest future possibilities
- Designers indicate that future updates will occur and acknowledge potential areas for improvement.
- Designers express certainty about future features and mention possibilities for software developments.

4.
Concepts: outline release schedule, confirm update schedule
- Designers outline the schedule for upcoming software releases.
- Designers confirm schedules for upcoming updates and specify the features that will be included.

5.
Concepts: address usability concerns, discuss usability challenges
- Designers emphasize and address usability concerns while acknowledging users' experiences and challenges.
- Designers discuss limitations faced in addressing user requests and the necessary technical considerations for enhancements.

6.
Concepts: provide usage instructions, provide user guidance
- Designers give instructions on how to effectively use the software and its features.
- Designers provide detailed guidance on new features and updates to help users understand and use the software effectively.

7.
Concepts: adjust features, feature flexibility
- Designers discuss the need for adjustments to existing features to accommodate specific user requirements.
- Designers mention the flexibility of features, allowing users to customize their experience according to their needs.

8.
Concepts: seek user input, implement user suggestions
- Designers indicate a willingness to seek user input and promise to consult users before implementing new features.
- Designers acknowledge user feedback and discuss plans to implement suggested features.

9.
Concepts: gather context, inquire about user background
- The designer gathers context by inquiring about users' teaching roles and classroom conditions.
- Designers inquire about the user's role and educational background to better understand their needs.

10.
Concepts: gather user input, seek to understand needs
- The designer gathers input from users regarding specific needs and requirements in design contexts.
- Designers seek to understand user experiences and specific problems to foster dialogue for improvement.

11.
Concepts: provide quick responses, facilitate query and response
- Designers promptly respond to user inquiries and engage in real-time communication to address questions.
- Users ask questions and receive responses from designers regarding design support and solutions.

12.
Concepts: build rapport, foster informal interactions
- Efforts made to build rapport with users through casual conversation.
- The designer and users engage in casual conversation to enhance community belonging.

13.
Concepts: use non-verbal communication, use emoji for engagement
- Users express emotions or reactions through non-verbal communication like emojis.
- Users utilize emojis to enhance engagement and express emotions in their communications within the community.

14.
Concepts: acknowledge and appreciate community support, acknowledge and express appreciation for designers
- Designers and users express gratitude and appreciation for each other's support.
- Users express gratitude and acknowledgment for the designers' work and efforts.

15.
Concepts: affirm user points, confirm and acknowledge points
- Users affirm points made by others in the conversation.
- Users and designers confirm their understanding of previous statements and affirm points made in earlier discussions.

16.
Concepts: classroom environment, explain technical constraints
- Users describe restrictions in classroom environments that impact software usage.
- Users describe the limitations of their school's technology and share context regarding the conditions of their school environments.

17.
Concepts: establish credibility, share professional background information
- The user shares their teaching experience to establish their qualifications.
- A user shares their professional background in response to a request to establish credibility within the community.

18.
Concepts: suggest software improvements, request software features
- Users request new features and suggest improvements for the software's usability.
- Users request new features or improvements for the Physics Lab tool and suggest additional experiments.

19.
Concepts: justify efforts, provide reassurance
- Designers justify the efforts made to improve the software and reassure users about optimizations.
- Designers express gratitude for user support and promise improvements based on feedback.

20.
Concepts: confirm compatibility, suggesting checking compatibility of the system
- Designers confirm that specific versions are compatible with operating systems and provide clear answers about compatibility.
- Designers suggest that users check or consider system compatibility issues related to software installation or functionality.

21.
Concepts: ask user inquiries, seek clarification
- Users ask questions to clarify information or seek help regarding the software and features.
- Participants seek clarification on specific aspects of the software and inquire about related resources.
===
---
Definitions for each code (21 in total):
1.
Concepts: augmented reality, introduce new features  
Relationship: The introduction of augmented reality features is a specific type of new feature being highlighted.  
Criteria: Designers highlight the introduction of augmented reality features in software updates and introduce new features with visual content or information.  
Phrase: Introduce augmented reality features.  

2.
Concepts: discuss future plans, future design plans/considerations  
Relationship: Discussing future plans involves considering design plans based on user needs.  
Criteria: Designers discuss potential future developments and consider design plans based on user needs and curriculum requirements.  
Phrase: Discuss future design considerations.  

3.
Concepts: indicate future updates, suggest future possibilities  
Relationship: Indicating future updates includes acknowledging possibilities for software developments.  
Criteria: Designers indicate that future updates will occur and suggest potential areas for improvement.  
Phrase: Indicate future software updates.  

4.
Concepts: outline release schedule, confirm update schedule  
Relationship: Outlining the release schedule is related to confirming the update schedule for upcoming software releases.  
Criteria: Designers outline the schedule for upcoming software releases and confirm the schedules for updates.  
Phrase: Confirm software release schedule.  

5.
Concepts: address usability concerns, discuss usability challenges  
Relationship: Addressing usability concerns involves discussing the challenges faced in meeting user needs.  
Criteria: Designers address usability concerns and discuss limitations faced in enhancing user experiences.  
Phrase: Address usability challenges.  

6.
Concepts: provide usage instructions, provide user guidance  
Relationship: Providing usage instructions is a form of user guidance for effective software use.  
Criteria: Designers provide instructions on how to use the software and detailed guidance on new features.  
Phrase: Provide user guidance.  

7.
Concepts: adjust features, feature flexibility  
Relationship: Adjusting features relates to the flexibility of features that accommodate user requirements.  
Criteria: Designers discuss the need for adjustments to existing features and mention feature flexibility for customization.  
Phrase: Adjust features for flexibility.  

8.
Concepts: seek user input, implement user suggestions  
Relationship: Seeking user input is a precursor to implementing user suggestions in design.  
Criteria: Designers seek user input and acknowledge plans to implement suggested features.  
Phrase: Seek and implement user input.  

9.
Concepts: gather context, inquire about user background  
Relationship: Gathering context involves inquiring about the user's background to better understand their needs.  
Criteria: Designers gather context by inquiring about users' teaching roles and educational backgrounds.  
Phrase: Gather user context.  

10.
Concepts: gather user input, seek to understand needs  
Relationship: Gathering user input is essential for understanding specific user needs and experiences.  
Criteria: Designers gather input regarding specific needs and seek to understand user experiences for improvement.  
Phrase: Gather and understand user needs.  

11.
Concepts: provide quick responses, facilitate query and response  
Relationship: Providing quick responses facilitates effective communication between users and designers.  
Criteria: Designers promptly respond to user inquiries and engage in real-time communication.  
Phrase: Facilitate quick responses.  

12.
Concepts: build rapport, foster informal interactions  
Relationship: Building rapport is achieved through fostering informal interactions between designers and users.  
Criteria: Designers engage in casual conversation to build rapport and enhance community belonging.  
Phrase: Build rapport through interaction.  

13.
Concepts: use non-verbal communication, use emoji for engagement  
Relationship: Using emojis is a form of non-verbal communication that enhances engagement.  
Criteria: Users express emotions through non-verbal communication, including emojis, to engage within the community.  
Phrase: Use emojis for engagement.  

14.
Concepts: acknowledge and appreciate community support, acknowledge and express appreciation for designers  
Relationship: Acknowledging community support includes expressing appreciation for designers' efforts.  
Criteria: Designers and users express gratitude and appreciation for each other's support and work.  
Phrase: Acknowledge community appreciation.  

15.
Concepts: affirm user points, confirm and acknowledge points  
Relationship: Affirming user points involves confirming and acknowledging previous statements in discussions.  
Criteria: Users and designers affirm points made in conversations and confirm their understanding of earlier statements.  
Phrase: Affirm and confirm points.  

16.
Concepts: classroom environment, explain technical constraints  
Relationship: Describing classroom environments involves explaining the technical constraints that impact software usage.  
Criteria: Users describe restrictions in classroom environments and explain the limitations of their school's technology.  
Phrase: Explain classroom constraints.  

17.
Concepts: establish credibility, share professional background information  
Relationship: Establishing credibility involves sharing professional background information.  
Criteria: Users share their teaching experience and professional background to establish credibility within the community.  
Phrase: Establish credibility through background.  

18.
Concepts: suggest software improvements, request software features  
Relationship: Suggesting software improvements includes requesting new features for usability.  
Criteria: Users request new features and suggest improvements for the software's usability.  
Phrase: Suggest software improvements.  

19.
Concepts: justify efforts, provide reassurance  
Relationship: Justifying efforts involves providing reassurance about improvements and optimizations.  
Criteria: Designers justify their efforts to improve software and reassure users about future enhancements.  
Phrase: Justify and reassure efforts.  

20.
Concepts: confirm compatibility, suggesting checking compatibility of the system  
Relationship: Confirming compatibility relates to suggesting users check system compatibility issues.  
Criteria: Designers confirm specific versions' compatibility and suggest users check for system compatibility.  
Phrase: Confirm system compatibility.  

21.
Concepts: ask user inquiries, seek clarification  
Relationship: Asking user inquiries is part of seeking clarification on software features and information.  
Criteria: Users ask questions to clarify information and seek help regarding the software.  
Phrase: Ask and seek clarification.  
---