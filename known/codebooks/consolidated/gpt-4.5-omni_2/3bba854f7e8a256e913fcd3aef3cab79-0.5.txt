You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (21 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
21. 
Concepts: {Repeat the input 21}
Relationship: {What is logical relationship between concepts in code 21, or N/A if not applicable}
Criteria: {Who did what, and how for code 21}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: addressing usability issues, proposing usability improvements
- Designers consider and discuss usability solutions and user experience.
- Participants identify usability issues and propose improvements.

2.
Concepts: solving problems collaboratively, collaborating on problem-solving
- Users and designers working together to address issues or improve the software.
- Designers and users engage in back-and-forth interactions to clarify and solve issues.

3.
Concepts: inviting feature suggestions, suggestions of interactions
- Designers invite feature requests and suggestions for collaboration.
- Designers suggest ways users can interact with the community or software.

4.
Concepts: user guidance, usage instruction
- A designer provides guidance or instructions to users.
- A designer provides instructions on how to use specific features of the software.

5.
Concepts: mitigating usability issues, give response to mitigate the concern
- Designers address usability concerns and provide workarounds for software limitations.
- Designers provide responses to mitigate user concerns or issues.

6.
Concepts: answering user questions, providing solutions and answers
- Community members and designers provide answers and information to user questions.
- Designers or users provide solutions or direct answers to specific questions or issues.

7.
Concepts: confirming updates, informing about updates
- Participants confirm that updates have been or will be made.
- Participants communicate and notify the group about updates.

8.
Concepts: announce updates, announcing software updates
- Announcing new features, updates, or bug fixes to inform users.
- Participants announce software version updates and download information.

9.
Concepts: seeking update information, inquiring about update timelines
- Users check for and express interest in recent or upcoming updates.
- Users inquire about the timeline for upcoming or recent updates.

10.
Concepts: announcing future updates, announcing new features and updates
- Designers confirm, preview, and describe planned features and updates.
- Designers announce and describe upcoming features, updates, and improvements to users.

11.
Concepts: planning future design, planning and discussing future consultations
- Designers outline and describe future design and development plans.
- Designers plan future consultations and discuss ongoing research and future design considerations.

12.
Concepts: discussing feature stability, discussing feature development
- Designers discuss plans and the stability of software features.
- Participants discuss the development and improvement of features.

13.
Concepts: discussing design challenges, discussing technical considerations
- Designers discuss challenges and difficulties in development.
- Participants discuss technical considerations and constraints.

14.
Concepts: transparent developer discussion, ensure development transparency
- Transparent discussion about development processes or decisions.
- Designers provide transparent information about development processes, challenges, and progress.

15.
Concepts: utilizing community resources, discussing community context and resources
- Users acknowledge and utilize available resources within the group.
- Users discuss the context of their community and the resources available to them.

16.
Concepts: acknowledgment, acknowledging user contributions
- Users acknowledge and appreciate suggestions and updates.
- Users acknowledge the input and information provided by others.

17.
Concepts: appreciation of feedback, feedback acknowledgement
- Showing appreciation for user feedback and suggestions.
- Acknowledgements from designers in response to user feedback or comments.

18.
Concepts: fostering community appreciation, building community through gratitude
- Designers and community members express appreciation and encourage positivity.
- Users or designers engage in interactions that foster community building, often expressing gratitude or positive feedback.

19.
Concepts: express agreement, confirming and agreeing
- Users or designers express agreement or acknowledgment in a conversation.
- Users confirm or agree with previous statements.

20.
Concepts: network policy, explaining school network practices
- Describing network policies or restrictions in schools.
- Users explain common practices and reasons for network disablement in schools.

21.
Concepts: requesting specific features, inquiring about software usage
- Users request specific features or functionalities for the software.
- Users inquire about and express interest in using specific versions of the software.
===
---
Definitions for each code (21 in total):
1.
Concepts: addressing usability issues, proposing usability improvements
Relationship: Both concepts relate to identifying and improving the user experience.
Criteria: Participants identify usability issues and propose enhancements to improve user experience.
Phrase: Proposing usability improvements

2.
Concepts: solving problems collaboratively, collaborating on problem-solving
Relationship: Both concepts involve teamwork to resolve issues.
Criteria: Users and designers work together through interactive discussions to solve problems.
Phrase: Collaborating on problem-solving

3.
Concepts: inviting feature suggestions, suggestions of interactions
Relationship: Both concepts involve seeking and offering ideas for features and interactions.
Criteria: Designers invite and suggest feature requests and ways users can interact with the community or software.
Phrase: Inviting feature suggestions

4.
Concepts: user guidance, usage instruction
Relationship: Both concepts involve providing directions to users.
Criteria: A designer provides guidance and instructions on how to use specific features of the software.
Phrase: Providing usage instructions

5.
Concepts: mitigating usability issues, give response to mitigate the concern
Relationship: Both concepts involve addressing and responding to usability concerns.
Criteria: Designers address usability concerns by providing responses and workarounds.
Phrase: Mitigating usability issues

6.
Concepts: answering user questions, providing solutions and answers
Relationship: Both concepts involve responding to user inquiries.
Criteria: Community members and designers provide answers and solutions to user questions.
Phrase: Providing solutions and answers

7.
Concepts: confirming updates, informing about updates
Relationship: Both concepts involve communication about updates.
Criteria: Participants confirm and notify the group about updates.
Phrase: Informing about updates

8.
Concepts: announce updates, announcing software updates
Relationship: Both concepts involve making announcements regarding updates.
Criteria: Participants announce new features, updates, or bug fixes to inform users.
Phrase: Announcing software updates

9.
Concepts: seeking update information, inquiring about update timelines
Relationship: Both concepts involve users asking about updates.
Criteria: Users check for and express interest in recent or upcoming updates and timelines.
Phrase: Inquiring about update timelines

10.
Concepts: announcing future updates, announcing new features and updates
Relationship: Both concepts involve communication about future updates.
Criteria: Designers confirm, preview, and describe planned features and updates to users.
Phrase: Announcing future updates

11.
Concepts: planning future design, planning and discussing future consultations
Relationship: Both concepts involve planning and discussing future development.
Criteria: Designers outline, describe, and discuss future design and development plans.
Phrase: Planning future design

12.
Concepts: discussing feature stability, discussing feature development
Relationship: Both concepts involve discussions about software features.
Criteria: Participants discuss the stability, development, and improvement of features.
Phrase: Discussing feature development

13.
Concepts: discussing design challenges, discussing technical considerations
Relationship: Both concepts involve discussions about challenges and technical aspects.
Criteria: Designers and participants discuss development challenges and technical considerations.
Phrase: Discussing design challenges

14.
Concepts: transparent developer discussion, ensure development transparency
Relationship: Both concepts involve transparency in development processes.
Criteria: Designers provide transparent information about development processes, challenges, and progress.
Phrase: Ensuring development transparency

15.
Concepts: utilizing community resources, discussing community context and resources
Relationship: Both concepts involve the use and discussion of community resources.
Criteria: Users acknowledge, utilize, and discuss the context and resources available within the community.
Phrase: Utilizing community resources

16.
Concepts: acknowledgment, acknowledging user contributions
Relationship: Both concepts involve recognizing user input.
Criteria: Users acknowledge and appreciate the input and contributions of others.
Phrase: Acknowledging user contributions

17.
Concepts: appreciation of feedback, feedback acknowledgement
Relationship: Both concepts involve showing appreciation for feedback.
Criteria: Designers show appreciation and acknowledge user feedback and suggestions.
Phrase: Acknowledging feedback

18.
Concepts: fostering community appreciation, building community through gratitude
Relationship: Both concepts involve expressing gratitude and building community.
Criteria: Designers and community members express appreciation and engage in positive interactions to foster community building.
Phrase: Fostering community appreciation

19.
Concepts: express agreement, confirming and agreeing
Relationship: Both concepts involve agreement or confirmation.
Criteria: Users or designers express agreement or confirmation in conversations.
Phrase: Confirming and agreeing

20.
Concepts: network policy, explaining school network practices
Relationship: Both concepts involve explaining network-related practices.
Criteria: Users describe network policies and common practices related to network usage in schools.
Phrase: Explaining network policies

21.
Concepts: requesting specific features, inquiring about software usage
Relationship: Both concepts involve user requests and inquiries about software.
Criteria: Users request specific features and inquire about the usage of particular software versions.
Phrase: Requesting specific features
---