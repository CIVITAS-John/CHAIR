You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (22 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
22. 
Concepts: {Repeat the input 22}
Relationship: {What is logical relationship between concepts in code 22, or N/A if not applicable}
Criteria: {Who did what, and how for code 22}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: imagines ai as a pair programmer, envisioning ai as a peer programmer
- The participant imagines the AI interface as a pair programmer.
- Participants envision AI as a peer programmer and explore AI as a peer programming partner.

2.
Concepts: promotion of collaborative coding, setting the stage for collaborative coding
- The participant promotes collaborative coding.
- Participants set the stage for collaborative coding and emphasize the collaborative aspect.

3.
Concepts: engaging in creative coding, seeking collaborative coding experiences
- Participants engage in creative coding and adapt their approach based on AI-generated code.
- Participants seek collaborative coding experiences and engage in active learning with AI.

4.
Concepts: debugs ai-generated code, identifies loop issues in ai-generated code
- Participants debug or analyze AI-generated code to identify errors or potential issues.
- Participants identify loop issues and repetitive problems in AI-generated code.

5.
Concepts: integrates ai-generated code, selectively integrating ai-generated code, integrate ai suggestions
- Participants integrate AI-generated code into models.
- Participants selectively copy AI-generated code and engage in thoughtful code integration.
- Participants integrate AI suggestions into their work, integrating AI-generated code into their own coding.

6.
Concepts: using ai to fix own ideas, refining ai-generated code
- Participants use AI-driven interfaces to fix or refine their own coding ideas.
- Participants adjust and learn from AI-generated code, identifying necessary adjustments to the model setup.

7.
Concepts: uses ai for syntax recall, relies on ai for syntax guidance
- Participants use AI for syntax recall and seek help to reinforce memory.
- Participants rely on AI for syntax guidance and code structures.

8.
Concepts: requests ai code assistance, engages ai for task-specific support
- Participants make AI-directed programming requests to receive code assistance.
- Participants engage AI for task-specific support by leveraging ChatGPT for coding tasks.

9.
Concepts: integrate ai into netlogo model creation, envision practical ai applications in netlogo
- Participants use AI to convert code and integrate AI-driven interfaces into their NetLogo model creation process.
- Participants use AI for specific tasks and envision practical applications of AI in NetLogo.

10.
Concepts: uses reference materials for support, seek ai assistance with external resources
- Participants use reference materials, including NetLogo dictionaries, for support.
- Participants seek AI guidance and use external resources to complete tasks in NetLogo.

11.
Concepts: identify novice errors and common issues in netlogo, highlight conceptual understanding needs in netlogo
- Participants identify novice errors and highlight "scope" as a common issue in NetLogo.
- Participants note scope struggles and highlight conceptual understanding needs in NetLogo.

12.
Concepts: valuing netlogo competence, rely on personal expertise in netlogo
- Participants value and express confidence in their NetLogo skills.
- Participants reflect on personal expertise and competence in NetLogo.

13.
Concepts: think critically about language use, emphasize analysis and contextual learning in netlogo
- Participants think critically about language use in NetLogo.
- Participants emphasize the importance of analysis and contextual learning in NetLogo.

14.
Concepts: plans to build a neural network, specifies a neural network creation task, aims to create a simple neural network
- Participants plan to build a neural network by envisioning a straightforward project.
- Participants specify a neural network creation task by expressing an intention to create a neural network and specifying a clear goal for AI interaction.
- Participants aim to create a simple neural network by expressing an intent to create a neural network.

15.
Concepts: set up tasks, sets new tasks for ai
- Participants set up tasks or parameters for AI-driven interfaces.
- Participants set new tasks for AI by stating initial tasks.

16.
Concepts: define the task, propose a netlogo task for ai-driven interfaces
- Participants define the task or problem to be solved using AI-driven interfaces.
- Participants set an initial task and propose a specific task for AI-driven interfaces to solve in NetLogo.

17.
Concepts: states specific coding tasks, articulates specific programming task
- Participants state specific programming tasks by specifying coding tasks.
- The respondent articulates a specific programming task.

18.
Concepts: communicate needs, clarifies requirements for ai
- Participants communicate specific needs and requirements to AI-driven interfaces.
- Participants clarify requirements by specifying model requirements to AI.

19.
Concepts: ensuring request clarity, refine instructions for clarity
- Participants ensure clarity in requests, providing detailed parameters and ensuring clear guidance.
- Participants refine instructions or requests to ensure clarity and accuracy.

20.
Concepts: refines task details, refines task requests
- Refines task details in response to AI's counter questions.
- Participants refine task requests by engaging in thoughtful task specification.

21.
Concepts: set clear goals, expresses clear objectives
- Participants set clear goals or objectives for modeling tasks.
- Expresses clear objectives or goals for a task or project.

22.
Concepts: emphasize clarity
- Participants aim for and emphasize clarity in AI-generated code.
- Participants emphasize clarity and effort in requests and critique entitlement in help-seeking behavior.
===
Here are the definitions for each code:

---
1.
Concepts: imagines ai as a pair programmer, envisioning ai as a peer programmer
Relationship: The concepts are related as they both describe the participant's perspective on AI as a collaborative partner in coding.
Criteria: Participants imagine AI as a peer programmer and explore AI as a peer programming partner.
Phrase: Envisioning AI as a peer programmer.

2.
Concepts: promotion of collaborative coding, setting the stage for collaborative coding
Relationship: The concepts are related as they both describe the participant's efforts to facilitate collaborative coding with AI.
Criteria: Participants promote collaborative coding and set the stage for collaborative coding.
Phrase: Promoting collaborative coding.

3.
Concepts: engaging in creative coding, seeking collaborative coding experiences
Relationship: The concepts are related as they both describe the participant's desire to engage in creative and collaborative coding experiences with AI.
Criteria: Participants engage in creative coding and seek collaborative coding experiences.
Phrase: Engaging in collaborative coding.

4.
Concepts: debugs ai-generated code, identifies loop issues in ai-generated code
Relationship: The concepts are related as they both describe the participant's actions to review and improve AI-generated code.
Criteria: Participants debug AI-generated code and identify loop issues.
Phrase: Debugging AI-generated code.

5.
Concepts: integrates ai-generated code, selectively integrating ai-generated code, integrate ai suggestions
Relationship: The concepts are related as they all describe the participant's actions to incorporate AI-generated code into their work.
Criteria: Participants integrate AI-generated code and selectively copy AI-generated code.
Phrase: Integrating AI-generated code.

6.
Concepts: using ai to fix own ideas, refining ai-generated code
Relationship: The concepts are related as they both describe the participant's use of AI to improve their own coding ideas.
Criteria: Participants use AI to fix own ideas and refine AI-generated code.
Phrase: Refining AI-generated code.

7.
Concepts: uses ai for syntax recall, relies on ai for syntax guidance
Relationship: The concepts are related as they both describe the participant's use of AI for syntax-related support.
Criteria: Participants use AI for syntax recall and rely on AI for syntax guidance.
Phrase: Relying on AI for syntax guidance.

8.
Concepts: requests ai code assistance, engages ai for task-specific support
Relationship: The concepts are related as they both describe the participant's requests for AI assistance in coding tasks.
Criteria: Participants request AI code assistance and engage AI for task-specific support.
Phrase: Requesting AI code assistance.

9.
Concepts: integrate ai into netlogo model creation, envision practical ai applications in netlogo
Relationship: The concepts are related as they both describe the participant's use of AI in NetLogo model creation.
Criteria: Participants integrate AI into NetLogo model creation and envision practical AI applications.
Phrase: Integrating AI into NetLogo model creation.

10.
Concepts: uses reference materials for support, seek ai assistance with external resources
Relationship: The concepts are related as they both describe the participant's use of external resources for support in coding tasks.
Criteria: Participants use reference materials and seek AI assistance with external resources.
Phrase: Seeking AI assistance with external resources.

11.
Concepts: identify novice errors and common issues in netlogo, highlight conceptual understanding needs in netlogo
Relationship: The concepts are related as they both describe the participant's awareness of common issues and needs in NetLogo.
Criteria: Participants identify novice errors and highlight conceptual understanding needs.
Phrase: Identifying novice errors in NetLogo.

12.
Concepts: valuing netlogo competence, rely on personal expertise in netlogo
Relationship: The concepts are related as they both describe the participant's confidence in their NetLogo skills.
Criteria: Participants value NetLogo competence and rely on personal expertise.
Phrase: Relying on personal expertise in NetLogo.

13.
Concepts: think critically about language use, emphasize analysis and contextual learning in netlogo
Relationship: The concepts are related as they both describe the participant's critical thinking and analytical approach to NetLogo.
Criteria: Participants think critically about language use and emphasize analysis.
Phrase: Thinking critically about language use.

14.
Concepts: plans to build a neural network, specifies a neural network creation task, aims to create a simple neural network
Relationship: The concepts are related as they all describe the participant's plans to create a neural network.
Criteria: Participants plan to build a neural network and specify a creation task.
Phrase: Planning to build a neural network.

15.
Concepts: set up tasks, sets new tasks for ai
Relationship: The concepts are related as they both describe the participant's actions to set up tasks for AI-driven interfaces.
Criteria: Participants set up tasks and set new tasks for AI.
Phrase: Setting up tasks for AI.

16.
Concepts: define the task, propose a netlogo task for ai-driven interfaces
Relationship: The concepts are related as they both describe the participant's definition of a task for AI-driven interfaces.
Criteria: Participants define the task and propose a NetLogo task.
Phrase: Defining the task for AI.

17.
Concepts: states specific coding tasks, articulates specific programming task
Relationship: The concepts are related as they both describe the participant's specification of coding tasks.
Criteria: Participants state specific coding tasks and articulate specific programming tasks.
Phrase: Articulating specific programming tasks.

18.
Concepts: communicate needs, clarifies requirements for ai
Relationship: The concepts are related as they both describe the participant's communication of needs to AI-driven interfaces.
Criteria: Participants communicate needs and clarify requirements.
Phrase: Communicating needs to AI.

19.
Concepts: ensuring request clarity, refine instructions for clarity
Relationship: The concepts are related as they both describe the participant's efforts to ensure clarity in requests.
Criteria: Participants ensure request clarity and refine instructions.
Phrase: Ensuring request clarity.

20.
Concepts: refines task details, refines task requests
Relationship: The concepts are related as they both describe the participant's refinement of task details and requests.
Criteria: Participants refine task details and refine task requests.
Phrase: Refining task requests.

21.
Concepts: set clear goals, expresses clear objectives
Relationship: The concepts are related as they both describe the participant's setting of clear goals and objectives.
Criteria: Participants set clear goals and express clear objectives.
Phrase: Setting clear goals.

22.
Concepts: emphasize clarity
Relationship: N/A
Criteria: Participants emphasize clarity in AI-generated code and requests.
Phrase: Emphasizing clarity.