You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (24 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
24. 
Concepts: {Repeat the input 24}
Relationship: {What is logical relationship between concepts in code 24, or N/A if not applicable}
Criteria: {Who did what, and how for code 24}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: novice expectations for ai, novices may have high expectations
- Critiques novices' high expectations for AI performance.
- Highlights the high expectations of novices when using AI-driven interfaces, which may not always be met.

2.
Concepts: notes unrealistic ai expectations, acknowledges unrealistic expectations
- Notes unrealistic expectations from novices, who may expect AI to provide perfect answers.
- The user acknowledges that novices may have unrealistic expectations of AI.

3.
Concepts: reflects on novice struggles, reflects on novices' struggles
- Reflects on how novices might get stuck during the human-AI collaboration process
- Reflects on the struggles that novices may face when working with NetLogo and AI.

4.
Concepts: reflecting on beginners' struggles with ai, seeking better support for beginners
- Reflecting on beginners' struggles with AI and the need for guidance.
- Seeks better support for beginners, recognizing the challenges they face in the human-AI collaboration process.

5.
Concepts: discusses novice challenges, challenges for novices seeking help
- Participant discusses the challenges faced by novices, including posting large blocks of code without background information.
- The participant highlights the challenges faced by novices when seeking help, such as posting large chunks of code without background information.

6.
Concepts: identifies challenges for novices, novices posting chunky code without context, expresses difficulty in helping novices
- Identifies challenges for novices in seeking help, such as posting chunks of code.
- Identifies challenges faced by novices when seeking help, such as posting chunky code without context.
- Expresses difficulty in helping novices, particularly when they post large blocks of code.

7.
Concepts: novice challenges with ai, reflects on challenges novices face
- The interviewee highlights the challenges faced by novices when using AI, such as debugging and designing code.
- Reflects on the challenges novices face in programming and debugging with AI assistance

8.
Concepts: notes lack of background information, highlighting novice challenges in asking for help
- Notes the challenges faced by novices when seeking help, including the lack of background information.
- Notes the lack of background information in novice queries.
- Highlighting challenges faced by novices in seeking help and providing background information.

9.
Concepts: describes beginners' coding habits, beginners writing large code chunks, describes beginners' coding challenges
- Describes the coding habits of beginners, such as writing large chunks of code and then finding many errors.
- Identifies a common mistake made by beginners, writing large chunks of code without checking for errors.
- Describes beginners writing large chunks of code and struggling to fix errors by highlighting the challenges faced by novice coders.

10.
Concepts: observing novice coding habits, observes beginner tendencies
- Observes how beginners write code and identifies potential errors.
- Observing beginners' tendencies to write extensive code before error checking.

11.
Concepts: suggests incremental coding, seeks incremental error checking
- The participant suggests incremental coding, writing code in small chunks to identify and fix errors.
- The participant seeks incremental error checking, writing code in small chunks to identify and fix errors.

12.
Concepts: diverse language knowledge, describes diverse language knowledge
- Highlights diverse language knowledge
- Discussing diverse language knowledge and expertise.

13.
Concepts: time constraints for learning, time constraints for learning extensions, time constraints in learning, limited time for learning extensions
- Limited time availability for learning new extensions
- Highlighting time constraints for learning extensions
- Acknowledges limited time for learning new extensions or concepts.
- Expressing limited time and resources for learning new extensions

14.
Concepts: notes limited time for each language, acknowledges time constraints for language learning
- Reflects on the limited time available to spend on each language, highlighting the importance of efficient learning.
- Acknowledges time constraints for language learning, having limited time to dedicate to each language.

15.
Concepts: human (negative): time, limited time for multiple languages
- Values time and expertise, knowing many languages but not having much time for each.
- Knows many languages but doesn't have much time for each one, highlighting the limitations of human expertise.

16.
Concepts: oral tradition, oral tradition reflection
- Emphasizes the importance of oral tradition in knowledge sharing.
- Reflects on the importance of oral tradition in knowledge.

17.
Concepts: describing undocumented knowledge, oral tradition and undocumented knowledge
- Describes undocumented knowledge
- Mentions knowledge that is not documented

18.
Concepts: notes gaps in documentation, identifying gaps in knowledge transfer
- Notes gaps in documentation, citing the importance of oral tradition in software knowledge.
- The user identifies gaps in knowledge transfer, highlighting the importance of oral tradition and undocumented knowledge.

19.
Concepts: highlighting importance of tacit knowledge, acknowledges importance of tacit knowledge
- Highlights the importance of tacit knowledge in software development, which is not documented.
- Acknowledges the existence and importance of tacit knowledge in software development, which is not documented.

20.
Concepts: informal knowledge transfer, reflects on undocumented knowledge, highlights undocumented knowledge
- Identifies informal knowledge transfer and the importance of oral tradition in software development.
- Reflecting on the importance of undocumented knowledge or tacit knowledge in software development.
- Discussing the importance of undocumented knowledge and oral tradition in software development.

21.
Concepts: need for system support, need for support systems for learning
- Highlights the need for system support to facilitate learning and productivity.
- Needs system support to recall previous work, highlighting the importance of memory aids.
- The interviewee needs support from the system to remind them where they were in their learning process.
- Suggests the need for support systems for learning

22.
Concepts: fragmented learning, reflects on fragmented learning patterns
- Reflects on how professionals learn in fragments and need support from the system.
- Reflects on the fragmented nature of learning and the need for support from the system to remind users where they were.
- Reflects on fragmented learning patterns of professionals, needing system support for learning continuity.

23.
Concepts: learning in fragmented time blocks, fragmented learning experiences
- Reflects on learning in fragmented time blocks
- Describing fragmented learning experiences, seeking support for learning in short intervals.
- Describes fragmented learning among professionals.

24.
Concepts: cautious error review, suggests detailed error analysis, engages in error evaluation
- Cautiously reviews error messages before making a choice.
- Suggests detailed error analysis, reading error messages before making a choice.
- Evaluating error messages before making a choice
===
Here are the definitions for each code:

---
1.
Concepts: novice expectations for ai, novices may have high expectations
Relationship: The concepts are related in that they both describe the high expectations that novices may have when using AI-driven interfaces.
Criteria: Novices have high expectations for AI performance, which may not always be met.
Phrase: Expecting high AI performance.

2.
Concepts: notes unrealistic ai expectations, acknowledges unrealistic expectations
Relationship: The concepts are related in that they both describe the unrealistic expectations that novices may have when using AI-driven interfaces.
Criteria: Novices have unrealistic expectations of AI, which may not always be met.
Phrase: Acknowledging unrealistic AI expectations.

3.
Concepts: reflects on novice struggles, reflects on novices' struggles
Relationship: The concepts are related in that they both describe the struggles that novices may face when working with NetLogo and AI.
Criteria: Novices face struggles when working with NetLogo and AI.
Phrase: Reflecting on novice struggles.

4.
Concepts: reflecting on beginners' struggles with ai, seeking better support for beginners
Relationship: The concepts are related in that they both describe the struggles that beginners may face when working with AI and the need for better support.
Criteria: Beginners struggle with AI and need better support.
Phrase: Seeking support for beginners.

5.
Concepts: discusses novice challenges, challenges for novices seeking help
Relationship: The concepts are related in that they both describe the challenges that novices face when seeking help, such as posting large blocks of code without background information.
Criteria: Novices face challenges when seeking help, such as posting large blocks of code without background information.
Phrase: Discussing novice challenges.

6.
Concepts: identifies challenges for novices, novices posting chunky code without context, expresses difficulty in helping novices
Relationship: The concepts are related in that they all describe the challenges that novices face when seeking help, including posting large blocks of code without context, and the difficulty in helping them.
Criteria: Novices face challenges when seeking help, including posting large blocks of code without context, making it difficult to help them.
Phrase: Identifying challenges in helping novices.

7.
Concepts: novice challenges with ai, reflects on challenges novices face
Relationship: The concepts are related in that they both describe the challenges that novices face when using AI, such as debugging and designing code.
Criteria: Novices face challenges when using AI, such as debugging and designing code.
Phrase: Reflecting on novice challenges.

8.
Concepts: notes lack of background information, highlighting novice challenges in asking for help
Relationship: The concepts are related in that they both describe the challenges that novices face when seeking help, including the lack of background information.
Criteria: Novices lack background information when seeking help, making it challenging to assist them.
Phrase: Noting lack of background information.

9.
Concepts: describes beginners' coding habits, beginners writing large code chunks, describes beginners' coding challenges
Relationship: The concepts are related in that they all describe the coding habits and challenges of beginners, including writing large chunks of code and struggling to fix errors.
Criteria: Beginners have coding habits that lead to challenges, such as writing large chunks of code and struggling to fix errors.
Phrase: Describing beginners' coding habits.

10.
Concepts: observing novice coding habits, observes beginner tendencies
Relationship: The concepts are related in that they both describe the coding habits and tendencies of beginners.
Criteria: Beginners have coding habits and tendencies that can lead to challenges.
Phrase: Observing novice coding habits.

11.
Concepts: suggests incremental coding, seeks incremental error checking
Relationship: The concepts are related in that they both describe the suggestion of incremental coding and error checking as a solution to beginners' coding challenges.
Criteria: Beginners can benefit from incremental coding and error checking.
Phrase: Suggesting incremental coding.

12.
Concepts: diverse language knowledge, describes diverse language knowledge
Relationship: The concepts are related in that they both describe the diverse language knowledge and expertise of users.
Criteria: Users have diverse language knowledge and expertise.
Phrase: Describing diverse language knowledge.

13.
Concepts: time constraints for learning, time constraints for learning extensions, time constraints in learning, limited time for learning extensions
Relationship: The concepts are related in that they all describe the time constraints that users face when learning new extensions or concepts.
Criteria: Users face time constraints when learning new extensions or concepts.
Phrase: Acknowledging time constraints for learning.

14.
Concepts: notes limited time for each language, acknowledges time constraints for language learning
Relationship: The concepts are related in that they both describe the limited time available for learning each language.
Criteria: Users have limited time for learning each language.
Phrase: Noting limited time for language learning.

15.
Concepts: human (negative): time, limited time for multiple languages
Relationship: The concepts are related in that they both describe the limitations of human expertise and time when learning multiple languages.
Criteria: Humans have limited time and expertise for learning multiple languages.
Phrase: Valuing time and expertise.

16.
Concepts: oral tradition, oral tradition reflection
Relationship: The concepts are related in that they both describe the importance of oral tradition in knowledge sharing.
Criteria: Oral tradition is important for knowledge sharing.
Phrase: Emphasizing oral tradition.

17.
Concepts: describing undocumented knowledge, oral tradition and undocumented knowledge
Relationship: The concepts are related in that they both describe the importance of undocumented knowledge and oral tradition in software development.
Criteria: Undocumented knowledge and oral tradition are important in software development.
Phrase: Describing undocumented knowledge.

18.
Concepts: notes gaps in documentation, identifying gaps in knowledge transfer
Relationship: The concepts are related in that they both describe the gaps in documentation and knowledge transfer in software development.
Criteria: There are gaps in documentation and knowledge transfer in software development.
Phrase: Noting gaps in documentation.

19.
Concepts: highlighting importance of tacit knowledge, acknowledges importance of tacit knowledge
Relationship: The concepts are related in that they both describe the importance of tacit knowledge in software development.
Criteria: Tacit knowledge is important in software development.
Phrase: Highlighting tacit knowledge.

20.
Concepts: informal knowledge transfer, reflects on undocumented knowledge, highlights undocumented knowledge
Relationship: The concepts are related in that they all describe the importance of informal knowledge transfer, undocumented knowledge, and tacit knowledge in software development.
Criteria: Informal knowledge transfer, undocumented knowledge, and tacit knowledge are important in software development.
Phrase: Highlighting informal knowledge transfer.

21.
Concepts: need for system support, need for support systems for learning
Relationship: The concepts are related in that they both describe the need for system support to facilitate learning and productivity.
Criteria: Users need system support to facilitate learning and productivity.
Phrase: Needing system support.

22.
Concepts: fragmented learning, reflects on fragmented learning patterns
Relationship: The concepts are related in that they both describe the fragmented nature of learning and the need for system support to facilitate learning continuity.
Criteria: Learning is fragmented, and users need system support to facilitate learning continuity.
Phrase: Reflecting on fragmented learning.

23.
Concepts: learning in fragmented time blocks, fragmented learning experiences
Relationship: The concepts are related in that they both describe the fragmented nature of learning in short intervals.
Criteria: Learning occurs in fragmented time blocks and short intervals.
Phrase: Describing fragmented learning experiences.

24.
Concepts: cautious error review, suggests detailed error analysis, engages in error evaluation
Relationship: The concepts are related in that they all describe the importance of cautious error review and detailed error analysis.
Criteria: Users need to engage in cautious error review and detailed error analysis to evaluate errors.
Phrase: Engaging in error evaluation.