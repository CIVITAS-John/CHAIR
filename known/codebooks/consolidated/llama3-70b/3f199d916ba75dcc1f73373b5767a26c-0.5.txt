You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another and please do not merge them.
Determine the logical relationship between concepts within each code. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable criteria for each code and do not introduce unnecessary details. Then, write an accurate label for it.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1. {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Label: {A consolidated label of code 1}
...
32. {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Label: {A consolidated label of code 32}
---
~~~
1. Label: official announcements, developer announcement
- Announcing plans or upcoming features
- Announcements or updates about new features, releases, or changes.

2. Label: sending resources, resource provision
- Designer shares resources or provides access to information.
- Designers provide resources or updates to the community.

3. Label: community guidelines, community negotiation
- Designer sets guidelines for the community.
- Designer negotiates with the community.

4. Label: group interaction, group sharing
- Designer references or facilitates group interaction
- Designers or users suggesting or facilitating group sharing or collaboration.

5. Label: design query, ask a question
- Designers ask a question about design or functionality
- User or Designer asks a question or seeks information.

6. Label: collaborative planning, collaborative problem solving
- Designers and users collaboratively discuss and plan the development of the software
- Designers and users work together to address issues or improve the software.

7. Label: user experience optimization, instructional design
- Design decisions made to enhance the user experience are discussed.
- A designer discusses the instructional design of a feature or tool, focusing on user experience and learning.

8. Label: maintaining rapport, understanding designers' situation
- Designer apologizes or shows empathy towards users.
- Showing understanding or empathy towards designers' or developers' situations.

9. Label: design research, user needs assessment
- Designers conduct research or gather feedback from users on specific topics
- Designers inquire about user needs or requirements, and gather information from users to inform design decisions.

10. Label: design goals, goal setting
- Design goals or objectives are discussed
- Goals or objectives are set or mentioned.

11. Label: project planning, listing tasks to be done
- A statement that outlines or discusses the planning of a project or task.
- Listing tasks or actions that need to be taken or considered.

12. Label: development priorities, prioritization, feature prioritization
- Designer discusses priorities or focuses for development.
- Instances where the designer indicates the prioritization of certain features or development tasks.
- Priorities or decisions about which features to implement or focus on are being discussed.

13. Label: magnetism topic, electrical section
- Designer prioritizes completing the magnetism section.
- Designer prioritizes completing the electrical section, or a concept or topic related to electrical engineering is mentioned.

14. Label: gives feature example, functionality description
- Providing examples or illustrations of a feature's functions
- Features or functionalities are described.

15. Label: comparison, comparative analysis
- User compares or contrasts ideas or concepts
- Users compare the features and functionalities of the application to others.

16. Label: property adjustments, component adjustments
- Adjustments or changes to component properties
- Adjustments or changes to software components are being described.

17. Label: manual editing, customization options
- A designer mentions the possibility of manual editing or customization options.
- Discussion focuses on manual adjustments or customization options.

18. Label: layout customization, software customization
- Users can customize the layout.
- Customization options or capabilities of software are being mentioned.

19. Label: feature stability, long term stability
- A designer prioritizes the stability of a feature or tool, ensuring its long-term reliability.
- The long-term stability or reliability of software is being discussed or prioritized.

20. Label: design rationale, explanation for request
- Designers explain the reasoning behind design decisions or features.
- Designers provide reasons or justification for a request or feature

21. Label: design requirement, explaining the need
- Specifying or clarifying design requirements or needs.
- Explaining the need or purpose behind a feature or development.

22. Label: explanation, contextualizing response, design contextualization
- Designer explains a concept or feature, or a user describes a situation or context
- User provides context or explains a situation to clarify a question
- A user provides additional information or context about a design issue

23. Label: elaboration, elaborating suggestions
- Designers provide more information or explanation, or user provides more information to clarify a question.
- User suggests an improvement or modification, or designer elaborates on a suggestion or idea.

24. Label: component simulation, component properties
- Designer discusses or updates a component simulation.
- Designers discuss or update component properties or features in the software.

25. Label: mechanics, design process
- Designer discusses completing the mechanics section, or discussing or developing mechanics experiments.
- Designer discusses or shares ideas related to the design process of the Physics Lab software.

26. Label: software design, design appreciation
- The design or architecture of software is being discussed or described.
- Discussions about the visual and functional aspects of the software

27. Label: consideration, design discussion
- Designer considers or ponders an idea or issue
- Designer mentions design-related thoughts or ideas

28. Label: enthusiasm, expression of interest
- Designer or user expresses enthusiasm or excitement
- Designer expresses interest or enthusiasm

29. Label: designer interest, personal interest
- Designers express personal interests or opinions unrelated to the software.
- A designer expresses personal interest or enthusiasm for a particular subject or area.

30. Label: design optimization, simplification goals
- Goals or aspirations for simplifying the design or user experience.
- Advocating for simplicity or ease of use in the online platform.

31. Label: simplicity, intuitive design
- Simplifying the design or application
- Designing an intuitive interface that requires minimal instructions

32. Label: development approach, software development approach
- The approach to development is discussed.
- Users or designers discuss the approach or philosophy behind software development.
===
Here are the definitions for each code:

---
1. 
Relationship: Parallel concepts
Criteria: Official announcements or updates about new features, releases, or changes are made by developers.
Label: Official Announcements

2. 
Relationship: Inclusive concept
Criteria: Designers share resources or provide access to information with the community.
Label: Resource Provision

3. 
Relationship: Parallel concepts
Criteria: Designers set guidelines for the community or negotiate with the community.
Label: Community Guidelines

4. 
Relationship: Parallel concepts
Criteria: Designers reference or facilitate group interaction or suggest group sharing or collaboration.
Label: Group Interaction

5. 
Relationship: Parallel concepts
Criteria: Designers or users ask questions about design or functionality.
Label: Design Queries

6. 
Relationship: Inclusive concept
Criteria: Designers and users collaboratively discuss and plan the development of the software.
Label: Collaborative Planning

7. 
Relationship: Parallel concepts
Criteria: Design decisions are made to enhance the user experience, and instructional design is discussed.
Label: User Experience Optimization

8. 
Relationship: Parallel concepts
Criteria: Designers apologize or show empathy towards users, or show understanding towards designers' or developers' situations.
Label: Empathy and Understanding

9. 
Relationship: Inclusive concept
Criteria: Designers conduct research or gather feedback from users on specific topics.
Label: Design Research

10. 
Relationship: N/A
Criteria: Design goals or objectives are discussed or set.
Label: Design Goals

11. 
Relationship: Inclusive concept
Criteria: Statements outline or discuss the planning of a project or task.
Label: Project Planning

12. 
Relationship: Parallel concepts
Criteria: Designers discuss priorities or focuses for development, or prioritize features or development tasks.
Label: Development Priorities

13. 
Relationship: Inclusive concept
Criteria: Designers prioritize completing the magnetism or electrical section.
Label: Topic Prioritization

14. 
Relationship: Parallel concepts
Criteria: Examples or illustrations of a feature's functions are provided, or features or functionalities are described.
Label: Feature Description

15. 
Relationship: N/A
Criteria: Users compare or contrast ideas or concepts.
Label: Comparative Analysis

16. 
Relationship: Inclusive concept
Criteria: Adjustments or changes to component properties are described.
Label: Component Adjustments

17. 
Relationship: Inclusive concept
Criteria: Manual editing or customization options are discussed.
Label: Customization Options

18. 
Relationship: Inclusive concept
Criteria: Users can customize the layout, or customization options or capabilities of software are mentioned.
Label: Layout Customization

19. 
Relationship: N/A
Criteria: Designers prioritize the stability of a feature or tool, ensuring its long-term reliability.
Label: Feature Stability

20. 
Relationship: Inclusive concept
Criteria: Designers explain the reasoning behind design decisions or features.
Label: Design Rationale

21. 
Relationship: Inclusive concept
Criteria: Design requirements or needs are specified or clarified.
Label: Design Requirements

22. 
Relationship: Inclusive concept
Criteria: Designers explain a concept or feature, or users describe a situation or context.
Label: Contextualization

23. 
Relationship: Inclusive concept
Criteria: Designers provide more information or explanation, or users provide more information to clarify a question.
Label: Elaboration

24. 
Relationship: Inclusive concept
Criteria: Designers discuss or update a component simulation, or discuss component properties or features.
Label: Component Simulation

25. 
Relationship: Inclusive concept
Criteria: Designers discuss completing the mechanics section, or discuss or develop mechanics experiments.
Label: Design Process

26. 
Relationship: Parallel concepts
Criteria: The design or architecture of software is discussed or described, or discussions about the visual and functional aspects of the software.
Label: Software Design

27. 
Relationship: N/A
Criteria: Designers consider or ponder an idea or issue.
Label: Design Consideration

28. 
Relationship: N/A
Criteria: Designers or users express enthusiasm or excitement.
Label: Enthusiasm

29. 
Relationship: N/A
Criteria: Designers express personal interests or opinions unrelated to the software.
Label: Personal Interest

30. 
Relationship: Inclusive concept
Criteria: Goals or aspirations for simplifying the design or user experience are discussed.
Label: Design Optimization

31. 
Relationship: Inclusive concept
Criteria: Simplifying the design or application, or designing an intuitive interface that requires minimal instructions.
Label: Simplicity

32. 
Relationship: N/A
Criteria: The approach to development is discussed.
Label: Development Approach