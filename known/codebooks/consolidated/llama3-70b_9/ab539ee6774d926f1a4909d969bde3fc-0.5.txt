You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: considering accessibility, consider user accessibility
- The designer considers accessibility in software development.
- A designer considers user accessibility by suggesting a feature that caters to users' needs.

2.
Concepts: designer consideration, show consideration
- Designer 1 shows consideration or empathy towards users.
- Designer shows consideration or empathy towards users, acknowledging their concerns or needs.

3.
Concepts: broader implications, considering broader implications
- Designer questions the broader implications of an issue.
- Designer considers broader implications of software design.

4.
Concepts: show understanding, demonstrating understanding
- A designer or community member shows understanding or acknowledgement of a concern or idea.
- A designer demonstrates understanding of a specific concept or issue.
- A user shows understanding or agreement with a concept or idea.

5.
Concepts: reflective thinking, contemplation expression
- A designer engages in reflective thinking or consideration.
- A designer expresses contemplation or thoughtfulness.

6.
Concepts: consideration of local export, recognized need for local export
- The designer considers local export functionality.
- Designer recognizes the need for local export or offline capabilities.

7.
Concepts: consider technical requirements, practical constraint consideration
- A designer considers technical requirements or limitations.
- A designer considers practical constraints or limitations.

8.
Concepts: explaining software functionality, explain bidirectional conversion benefits, explaining bidirectional conversion
- The designer explains a feature of bidirectional conversion.
- Designer explains benefits of bidirectional conversion
- A designer explains the concept or functionality of bidirectional conversion.

9.
Concepts: clarify user interactions, clarifies touch screen functionality
- Designer explains how users can interact with specific features or components.
- A designer clarifies how a feature or functionality works, especially in relation to touch screens.

10.
Concepts: clarifying software features, clarify software capabilities
- The designer clarifies a feature.
- The designer clarifies software capabilities or features.

11.
Concepts: clarify purpose, clarify functionality
- A designer clarifies the purpose or functionality of a feature.
- Designer clarifies how a feature or component works.

12.
Concepts: enhancing user experience, clarifying user experience
- The designer enhances user experience with clarity.
- Enhancing user experience through design improvements.
- A designer clarifies or explains a user's experience.

13.
Concepts: guide user understanding, enhancing user understanding, facilitating user understanding
- A designer guides users in understanding updated resources or features.
- Designer enhances user understanding through additional explanations.
- Designer facilitates user understanding through explanations or instructions.

14.
Concepts: explaining existing features, informing about existing features
- Designer explains existing features or functionality.
- Designers inform about existing features.

15.
Concepts: explaining design benefits, emphasize utility of features
- Explaining the benefits or advantages of a design or feature.
- The designer highlights the benefits or advantages of a feature.

16.
Concepts: feature significance, feature importance explanation
- Explaining the importance or benefits of a feature or functionality.
- A designer explains the importance or rationale behind a specific software feature.

17.
Concepts: practical problem-solving, promotes practical application
- Designer promotes practical problem-solving using the application.
- Designer promotes the practical application of the software.

18.
Concepts: practical applications, software functionality
- A designer explains or illustrates the practical applications or benefits of the software.
- A designer illustrates or explains the practical functionality or application of the software.

19.
Concepts: explain practical applications, explaining practical applications, illustrates practical application
- Designer explains how a feature can be applied in a practical context.
- Designer explains the practical application of a feature or tool
- A designer provides an example or illustration of how a feature or concept works in practice.

20.
Concepts: feature explanation, explaining functionality, explain application functionality, functionality explanation, designer explains feature, describe component functionality, functional explanation
- Designer explains specific features or functionalities.
- Designer explains the functionality of a component or feature.
- Designer explains how to use or apply a specific application feature.
- Designer or user explains the functionality or features of a tool or component.
- A designer explains the functionality or features of the software.
- Designer describes or explains the functionality of a specific component or feature.
- Designer explains the functionality of a feature.

21.
Concepts: provide examples, providing feature examples, provide feature example, illustrate feature functionality
- The designer provides examples or illustrations to help explain a concept or feature.
- Designer provides examples of software features.
- The designer provides an example or illustration of a feature.
- Designer illustrates how a feature functions, providing examples or explanations.

22.
Concepts: proposing compromises, propose design compromise, propose compromise
- Designers propose compromises.
- A designer suggests a compromise or alternative design.
- A designer proposes a compromise or alternative solution.

23.
Concepts: propose design idea, designer proposes design change
- Designer proposes or suggests a design idea or feature.
- Proposals or suggestions for design changes or improvements, often from designers or developers.

24.
Concepts: self-correction, self-rebut the previous response
- Designer corrects or reconsiders their previous statement.
- The designer corrects or refutes their previous response or statement.

25.
Concepts: acknowledge future editing, acknowledging future manual editing
- A designer acknowledges future editing capabilities or features.
- Designer acknowledges the possibility of future manual editing or customization.

26.
Concepts: seeking improvement, considering design improvements
- A designer seeks improvement or feedback.
- A user considers design improvements or suggestions.

27.
Concepts: ongoing improvement, emphasize continuous improvement
- Designer emphasizes ongoing improvements.
- The designer emphasizes the importance of continuous improvement.

28.
Concepts: committing to improvement, commitment to improvement
- Designer expresses commitment to improvement.
- A designer commits to continuous improvement or development.
- A designer commits to improving or doing better.
- Designer commits to improving the software or their work.

29.
Concepts: design iteration, iterative design, iterative design discussion, engage in design iteration
- Refining or iterating on design decisions or ideas.
- A designer describes an iterative design process or planning.
- Designer engages in iterative design discussions.
- A designer engages in iterative design processes.

30.
Concepts: seek consensus, design consensus seeking, seeking consensus
- Designer seeks consensus or agreement from users.
- A designer seeks consensus or feedback on design elements.
- A designer seeks agreement on the best approach from others.

31.
Concepts: ensuring comprehensive feedback, ensuring comprehensive input
- The designer expresses the need to gather opinions to ensure comprehensive feedback.
- A designer ensures they have comprehensive input or opinions from users before proceeding with a task or decision.

32.
Concepts: opinion gathering, planning to gather opinions
- Designer or user plans to gather opinions or feedback from others.
- A designer announces or plans to gather opinions or feedback from users before proceeding with a design or development.
===
Here are the definitions for each code:

---
1.
Concepts: considering accessibility, consider user accessibility
Relationship: The designer's consideration of accessibility is focused on the user's needs.
Criteria: The designer considers accessibility to cater to users' needs.
Phrase: Consider user accessibility.

2.
Concepts: designer consideration, show consideration
Relationship: The designer's consideration is an expression of empathy towards users.
Criteria: The designer shows consideration or empathy towards users, acknowledging their concerns or needs.
Phrase: Show consideration.

3.
Concepts: broader implications, considering broader implications
Relationship: The designer's consideration of broader implications is a thoughtful and reflective process.
Criteria: The designer considers the broader implications of an issue or design.
Phrase: Consider broader implications.

4.
Concepts: show understanding, demonstrating understanding
Relationship: The designer's understanding is demonstrated through acknowledgment or explanation.
Criteria: The designer or user shows understanding or agreement with a concept or idea.
Phrase: Demonstrate understanding.

5.
Concepts: reflective thinking, contemplation expression
Relationship: The designer's reflective thinking is expressed through contemplation or thoughtfulness.
Criteria: The designer engages in reflective thinking or consideration.
Phrase: Express contemplation.

6.
Concepts: consideration of local export, recognized need for local export
Relationship: The designer's consideration of local export is driven by a recognized need.
Criteria: The designer considers local export functionality or recognizes the need for it.
Phrase: Consider local export.

7.
Concepts: consider technical requirements, practical constraint consideration
Relationship: The designer's consideration of technical requirements is influenced by practical constraints.
Criteria: The designer considers technical requirements or practical constraints.
Phrase: Consider technical requirements.

8.
Concepts: explaining software functionality, explain bidirectional conversion benefits, explaining bidirectional conversion
Relationship: The designer's explanation of software functionality is focused on bidirectional conversion.
Criteria: The designer explains the functionality or benefits of bidirectional conversion.
Phrase: Explain software functionality.

9.
Concepts: clarify user interactions, clarifies touch screen functionality
Relationship: The designer's clarification of user interactions is focused on touch screen functionality.
Criteria: The designer explains how users can interact with specific features or components.
Phrase: Clarify user interactions.

10.
Concepts: clarifying software features, clarify software capabilities
Relationship: The designer's clarification of software features is focused on capabilities.
Criteria: The designer clarifies software features or capabilities.
Phrase: Clarify software features.

11.
Concepts: clarify purpose, clarify functionality
Relationship: The designer's clarification of purpose is linked to functionality.
Criteria: The designer clarifies the purpose or functionality of a feature.
Phrase: Clarify purpose.

12.
Concepts: enhancing user experience, clarifying user experience
Relationship: The designer's enhancement of user experience is achieved through clarification.
Criteria: The designer enhances user experience with clarity.
Phrase: Enhance user experience.

13.
Concepts: guide user understanding, enhancing user understanding, facilitating user understanding
Relationship: The designer's guidance of user understanding is achieved through enhancement and facilitation.
Criteria: The designer guides users in understanding updated resources or features.
Phrase: Guide user understanding.

14.
Concepts: explaining existing features, informing about existing features
Relationship: The designer's explanation of existing features is a form of information provision.
Criteria: The designer explains existing features or functionality.
Phrase: Explain existing features.

15.
Concepts: explaining design benefits, emphasize utility of features
Relationship: The designer's explanation of design benefits is focused on the utility of features.
Criteria: The designer explains the benefits or advantages of a design or feature.
Phrase: Explain design benefits.

16.
Concepts: feature significance, feature importance explanation
Relationship: The designer's explanation of feature significance is focused on importance.
Criteria: The designer explains the importance or benefits of a feature or functionality.
Phrase: Explain feature significance.

17.
Concepts: practical problem-solving, promotes practical application
Relationship: The designer's promotion of practical problem-solving is achieved through application.
Criteria: The designer promotes practical problem-solving using the application.
Phrase: Promote practical problem-solving.

18.
Concepts: practical applications, software functionality
Relationship: The designer's explanation of practical applications is focused on software functionality.
Criteria: The designer explains or illustrates the practical applications or benefits of the software.
Phrase: Explain practical applications.

19.
Concepts: explain practical applications, explaining practical applications, illustrates practical application
Relationship: The designer's explanation of practical applications is achieved through illustration.
Criteria: The designer explains how a feature can be applied in a practical context.
Phrase: Explain practical applications.

20.
Concepts: feature explanation, explaining functionality, explain application functionality, functionality explanation, designer explains feature, describe component functionality, functional explanation
Relationship: The designer's explanation of features is focused on functionality and application.
Criteria: The designer explains specific features or functionalities.
Phrase: Explain feature functionality.

21.
Concepts: provide examples, providing feature examples, provide feature example, illustrate feature functionality
Relationship: The designer's provision of examples is a means of illustrating feature functionality.
Criteria: The designer provides examples or illustrations to help explain a concept or feature.
Phrase: Provide examples.

22.
Concepts: proposing compromises, propose design compromise, propose compromise
Relationship: The designer's proposal of compromises is a means of finding alternative solutions.
Criteria: The designer proposes compromises or alternative design solutions.
Phrase: Propose compromises.

23.
Concepts: propose design idea, designer proposes design change
Relationship: The designer's proposal of design ideas is a means of suggesting improvements.
Criteria: The designer proposes or suggests a design idea or feature.
Phrase: Propose design ideas.

24.
Concepts: self-correction, self-rebut the previous response
Relationship: The designer's self-correction is a form of revising their previous response.
Criteria: The designer corrects or reconsiders their previous statement.
Phrase: Correct oneself.

25.
Concepts: acknowledge future editing, acknowledging future manual editing
Relationship: The designer's acknowledgment of future editing is a recognition of potential improvements.
Criteria: The designer acknowledges future editing capabilities or features.
Phrase: Acknowledge future editing.

26.
Concepts: seeking improvement, considering design improvements
Relationship: The designer's seeking of improvement is a means of considering design enhancements.
Criteria: The designer seeks improvement or feedback.
Phrase: Seek improvement.

27.
Concepts: ongoing improvement, emphasize continuous improvement
Relationship: The designer's emphasis on ongoing improvement is a commitment to continuous development.
Criteria: The designer emphasizes the importance of continuous improvement.
Phrase: Emphasize ongoing improvement.

28.
Concepts: committing to improvement, commitment to improvement
Relationship: The designer's commitment to improvement is a promise to continue developing.
Criteria: The designer expresses commitment to improvement.
Phrase: Commit to improvement.

29.
Concepts: design iteration, iterative design, iterative design discussion, engage in design iteration
Relationship: The designer's engagement in design iteration is a process of refining design decisions.
Criteria: The designer engages in iterative design processes.
Phrase: Engage in design iteration.

30.
Concepts: seek consensus, design consensus seeking, seeking consensus
Relationship: The designer's seeking of consensus is a means of gathering agreement.
Criteria: The designer seeks consensus or agreement from users.
Phrase: Seek consensus.

31.
Concepts: ensuring comprehensive feedback, ensuring comprehensive input
Relationship: The designer's ensuring of comprehensive feedback is a means of gathering opinions.
Criteria: The designer ensures they have comprehensive input or opinions from users before proceeding with a task or decision.
Phrase: Ensure comprehensive feedback.

32.
Concepts: opinion gathering, planning to gather opinions
Relationship: The designer's planning to gather opinions is a means of collecting feedback.
Criteria: The designer plans to gather opinions or feedback from users before proceeding with a design or development.
Phrase: Gather opinions.