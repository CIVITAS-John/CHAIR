You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (11 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
11. 
Concepts: {Repeat the input 11}
Relationship: {What is logical relationship between concepts in code 11, or N/A if not applicable}
Criteria: {Who did what, and how for code 11}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: seeking user input, soliciting user feedback
- Designers seek and request user input for future iterations.
- Designers solicit and encourage users to provide feedback and suggestions.

2.
Concepts: offering help, providing technical support
- Designers offer help or assistance to users.
- Instances where designers provide technical support or guidance to users.

3.
Concepts: responding to users, responding to user concerns
- Designers respond to user queries or feedback.
- Designers respond to user concerns or questions.

4.
Concepts: design discussion, discussing future planning
- Designers discuss current and future design considerations and functionalities.
- Designers discuss and share plans for future development and design enhancements.

5.
Concepts: technical update, listing feature updates
- Designers provide detailed technical updates, including new features and bug fixes.
- Designers list new features, adjustments, and bug fixes in the software.

6.
Concepts: feature release, announcing feature updates
- Designers announce the release of new features or updates.
- Designers announce new versions, features, and updates.

7.
Concepts: positive interaction, user interaction and gratitude
- Users engage in positive or affirming interactions with each other.
- Users interact with each other and express gratitude or positive feedback.

8.
Concepts: praising software, expressing user satisfaction
- Users praise or express satisfaction with the software.
- Users express satisfaction and appreciation for the platform's features.

9.
Concepts: acknowledge understanding, providing confirmation
- Designers acknowledge user input or understanding.
- Users or designers confirm or acknowledge information and understanding.

10.
Concepts: clarifying versions, update clarification
- Users ask for clarification about the type or version of the software.
- A designer clarifies which version of the software is being discussed.

11.
Concepts: explaining limitations, system limitation explanation
- Designers explain the limitations of a feature or the current software version.
- Designers explain why certain issues cannot be resolved due to system limitations.
===
---
Definitions for each code (11 in total):
1.
Concepts: seeking user input, soliciting user feedback
Relationship: Both involve designers actively engaging users to gather their opinions and suggestions.
Criteria: Designers actively engage users to gather their input and feedback for future improvements.
Phrase: Soliciting user input and feedback

2.
Concepts: offering help, providing technical support
Relationship: Both involve designers assisting users with their issues or questions.
Criteria: Designers assist users by offering help and providing technical support.
Phrase: Providing user assistance

3.
Concepts: responding to users, responding to user concerns
Relationship: Both involve designers addressing user queries and concerns.
Criteria: Designers address user queries and concerns through responses.
Phrase: Addressing user queries and concerns

4.
Concepts: design discussion, discussing future planning
Relationship: Both involve designers discussing current and future design aspects.
Criteria: Designers discuss current design considerations and future planning.
Phrase: Discussing design and future planning

5.
Concepts: technical update, listing feature updates
Relationship: Both involve designers communicating updates and changes in the software.
Criteria: Designers communicate detailed updates, including new features and bug fixes.
Phrase: Communicating technical updates

6.
Concepts: feature release, announcing feature updates
Relationship: Both involve designers announcing new features or updates.
Criteria: Designers announce the release of new features and updates.
Phrase: Announcing feature releases

7.
Concepts: positive interaction, user interaction and gratitude
Relationship: Both involve users engaging positively and expressing gratitude.
Criteria: Users engage positively with each other and express gratitude.
Phrase: Engaging in positive user interactions

8.
Concepts: praising software, expressing user satisfaction
Relationship: Both involve users expressing positive opinions about the software.
Criteria: Users express satisfaction and praise for the software.
Phrase: Expressing user satisfaction

9.
Concepts: acknowledge understanding, providing confirmation
Relationship: Both involve acknowledging or confirming understanding.
Criteria: Designers or users acknowledge and confirm understanding of information.
Phrase: Acknowledging and confirming understanding

10.
Concepts: clarifying versions, update clarification
Relationship: Both involve clarifying information about software versions or updates.
Criteria: Users seek, and designers provide, clarification about software versions or updates.
Phrase: Clarifying software versions

11.
Concepts: explaining limitations, system limitation explanation
Relationship: Both involve explaining the limitations of the software.
Criteria: Designers explain the limitations of features or the software system.
Phrase: Explaining software limitations
---