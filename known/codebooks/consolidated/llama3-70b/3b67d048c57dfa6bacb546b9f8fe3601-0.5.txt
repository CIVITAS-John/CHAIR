You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between sub-codes. If a sub-code includes another, use the broader one. If sub-codes are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (32 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {A sentence of consolidated criteria 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
32.
Relationship: {The logical relationship between sub-codes in code 32}
Criteria: {A sentence of consolidated criteria 32}
Label: {A consolidated label of code 32}
Category: {2-4 words for code 32}
---
~~~
1. user agreement, consensus building.
- Expressions of concurrence or confirmation by users in response to statements or ideas within the community.
- Instances where users express agreement or confirm the validity of statements or solutions within the community.

2. agreement, agreement with designer's statement.
- Expressing agreement or affirmation with a statement or suggestion.
- Expressing agreement with a statement made by the designer.

3. positive feedback, positive community feedback.
- Positive responses or feedback from users, expressing encouragement or enthusiasm.
- Positive feedback and reception of platform features and community ideas.

4. feedback based development, feedback-based content planning.
- Development based on user feedback.
- Planning content development based on user feedback.

5. immediate response, developer responsiveness.
- Immediate responses provided to user queries.
- Providing immediate responses to user queries or feedback.

6. open feedback, direct communication.
- Invites open feedback or suggestions from users.
- Open and direct communication channels for feedback and suggestions.

7. progress acknowledgment, work in progress.
- Acknowledging that progress is being made on the software.
- Acknowledgment that the software or platform is still in development or undergoing refinement.

8. workaround, practical solutions.
- Temporary or alternative solutions to address limitations or issues.
- Practical solutions or workarounds for usability and technical issues.

9. direct support, personalized support.
- Offering direct and personal assistance to users.
- Offers of personalized support or assistance.

10. user request, content customization request.
- User requests for specific content or features, or inquiries within the community.
- Requests for new or modified content or features specific to the users' needs.

11. experiment requests, expansion of experiments.
- Requests for specific types of experiments or features
- Requests for additional experiments or suggestions for managing experiments in the software.

12. user inquiries, probing user issues.
- Users inquiring about the software or reporting issues they faced.
- Inquires about issues or challenges users have encountered with the software.

13. software usage inquiry, informational exchange.
- Inquiries or discussions about software usage and updates.
- Exchange of informational requests and clarifications regarding software use and features.

14. user curiosity, inquiry and curiosity.
- Expresses curiosity or interest in new information or updates.
- Questions or requests for information, and expressions of curiosity or inquiry in online interactions.

15. new user engagement, new user inquiry.
- Engagement from new users seeking information.
- Inquiries from new users about how to access resources or software versions.

16. amusement, emotive response.
- Expressing amusement or laughter in response to a situation or comment.
- Expressions of laughter or humor, contributing to a light-hearted community atmosphere.

17. specific feedback, input solicitation.
- Requests for specific types of feedback or information from the community.
- Involves requesting suggestions and feedback from community members or experts.

18. gratitude expression, community contribution acknowledgment.
- Expressing gratitude, appreciation, or positive acknowledgment within the community.
- Recognition of assistance and contributions within the community.

19. user knowledge, community expertise.
- Display of knowledge or expertise by users within the community.
- Expertise and knowledge shared within the community.

20. resource location, community resources and context.
- Comments acknowledging the location or availability of resources within the community.
- Statements referring to files, announcements, or other resources available within the online community, as well as references to the educational institution, school, or other contextual factors that shape the community.

21. social courtesy, politeness and online etiquette.
- Expressions of politeness and courtesy in community interactions.
- Expressions of politeness or courtesy, and establishing or promoting rules or norms for online behavior.

22. version updates, software version management.
- Information about new software versions and their features, indicating the availability or release of a new software version.
- Involves announcements and discussions related to different software versions and updates.

23. update communication strategy, update communication.
- Communication regarding updates, new technical features, and significant changes in the software.
- Statements that provide information to the community about software updates, including confirmation of completed updates, descriptions of update features/changes, announcements of planned updates, and indications of update availability or distribution.

24. release communication, release management.
- Relates to confirming or clarifying software releases and versions.
- Discussions or references to software updates, schedules, and distribution processes.

25. update planning, update schedule.
- Planning and scheduling future updates or changes based on feedback.
- Refers to specific dates or plans for releasing software updates or new versions.

26. optimization, design refinement.
- Efforts to refine, improve, or optimize the performance or functionality of the software or platform.
- Efforts to simplify complex designs or functionalities, iterative processes of refining software features or design.

27. user testing, testing phase.
- Testing phases for new features or versions, often involving user participation.
- Indicating a phase where features are being tested for functionality and stability.

28. software testing, software evaluation.
- Testing software functionality or features.
- Evaluating or reviewing the software or its features.

29. research direction, software development direction.
- Research focus or direction for the development team.
- Direction or focus of software development.

30. product development, research and development.
- Discussions or descriptions of product development or research activities.
- Information about research or development activities.

31. feature stability, software stability.
- Features designed to ensure stability or reduce the need for frequent updates.
- Ensuring the stability and reliability of the software through careful feature implementation.

32. scope expansion, software expansion.
- Discussions about extending the softwareâ€™s scope to include more features or topics.
- Considers expanding the software to cover other physics domains or subject areas.
===
Here is the output in the required format:

---
Categories:
* Community Building
* Feedback and Development
* User Engagement
* Communication and Support
* Software Development and Updates
* User Knowledge and Expertise
* Online Etiquette and Resources
* Research and Development

Definitions for each code:

1.
Relationship: Inclusive
Criteria: Expressions of concurrence or confirmation by users in response to statements or ideas within the community.
Label: User Agreement
Category: Community Building

2.
Relationship: Subset
Criteria: Expressing agreement or affirmation with a statement or suggestion.
Label: Agreement with Designer
Category: Community Building

3.
Relationship: Parallel
Criteria: Positive responses or feedback from users, expressing encouragement or enthusiasm.
Label: Positive Feedback
Category: User Engagement

4.
Relationship: Inclusive
Criteria: Development based on user feedback.
Label: Feedback-based Development
Category: Feedback and Development

5.
Relationship: Subset
Criteria: Immediate responses provided to user queries.
Label: Immediate Response
Category: Communication and Support

6.
Relationship: Parallel
Criteria: Invites open feedback or suggestions from users.
Label: Open Feedback
Category: Feedback and Development

7.
Relationship: Subset
Criteria: Acknowledging that progress is being made on the software.
Label: Progress Acknowledgment
Category: Communication and Support

8.
Relationship: Inclusive
Criteria: Temporary or alternative solutions to address limitations or issues.
Label: Workaround
Category: Feedback and Development

9.
Relationship: Subset
Criteria: Offering direct and personal assistance to users.
Label: Direct Support
Category: Communication and Support

10.
Relationship: Parallel
Criteria: User requests for specific content or features, or inquiries within the community.
Label: User Request
Category: User Engagement

11.
Relationship: Subset
Criteria: Requests for specific types of experiments or features.
Label: Experiment Request
Category: User Engagement

12.
Relationship: Parallel
Criteria: Users inquiring about the software or reporting issues they faced.
Label: User Inquiry
Category: User Engagement

13.
Relationship: Inclusive
Criteria: Inquiries or discussions about software usage and updates.
Label: Software Inquiry
Category: Communication and Support

14.
Relationship: Subset
Criteria: Expresses curiosity or interest in new information or updates.
Label: User Curiosity
Category: User Engagement

15.
Relationship: Parallel
Criteria: Inquiries from new users about how to access resources or software versions.
Label: New User Inquiry
Category: User Engagement

16.
Relationship: Inclusive
Criteria: Expressing amusement or laughter in response to a situation or comment.
Label: Amusement
Category: Online Etiquette and Resources

17.
Relationship: Subset
Criteria: Requests for specific types of feedback or information from the community.
Label: Specific Feedback
Category: Feedback and Development

18.
Relationship: Parallel
Criteria: Expressing gratitude, appreciation, or positive acknowledgment within the community.
Label: Gratitude Expression
Category: Community Building

19.
Relationship: Inclusive
Criteria: Display of knowledge or expertise by users within the community.
Label: User Knowledge
Category: User Knowledge and Expertise

20.
Relationship: Subset
Criteria: Comments acknowledging the location or availability of resources within the community.
Label: Resource Location
Category: Online Etiquette and Resources

21.
Relationship: Parallel
Criteria: Expressions of politeness and courtesy in community interactions.
Label: Social Courtesy
Category: Online Etiquette and Resources

22.
Relationship: Inclusive
Criteria: Information about new software versions and their features, indicating the availability or release of a new software version.
Label: Version Updates
Category: Software Development and Updates

23.
Relationship: Subset
Criteria: Communication regarding updates, new technical features, and significant changes in the software.
Label: Update Communication
Category: Software Development and Updates

24.
Relationship: Parallel
Criteria: Relates to confirming or clarifying software releases and versions.
Label: Release Communication
Category: Software Development and Updates

25.
Relationship: Inclusive
Criteria: Planning and scheduling future updates or changes based on feedback.
Label: Update Planning
Category: Feedback and Development

26.
Relationship: Subset
Criteria: Efforts to refine, improve, or optimize the performance or functionality of the software or platform.
Label: Optimization
Category: Software Development and Updates

27.
Relationship: Parallel
Criteria: Testing phases for new features or versions, often involving user participation.
Label: User Testing
Category: Software Development and Updates

28.
Relationship: Inclusive
Criteria: Testing software functionality or features.
Label: Software Testing
Category: Software Development and Updates

29.
Relationship: Subset
Criteria: Research focus or direction for the development team.
Label: Research Direction
Category: Research and Development

30.
Relationship: Parallel
Criteria: Discussions or descriptions of product development or research activities.
Label: Product Development
Category: Research and Development

31.
Relationship: Inclusive
Criteria: Features designed to ensure stability or reduce the need for frequent updates.
Label: Feature Stability
Category: Software Development and Updates

32.
Relationship: Subset
Criteria: Discussions about extending the softwareâ€™s scope to include more features or topics.
Label: Scope Expansion
Category: Software Development and Updates