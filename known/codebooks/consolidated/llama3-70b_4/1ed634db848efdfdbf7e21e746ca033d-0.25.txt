You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: system limitations, system limitation explanation
- Discussing limitations or constraints of a system or infrastructure.
- Explaining why a feature or request cannot be implemented due to system limitations.

2.
Concepts: technical consideration, discuss technical limitations
- Designer considers or discusses technical aspects or limitations of the software.
- Technical limitations or requirements are discussed.

3.
Concepts: explain limitations, limitation acknowledgement
- A designer explains the limitations or constraints of the current version.
- A designer or developer acknowledges limitations or potential issues with a feature or software.

4.
Concepts: address technical limitation, talk about why limitation is addressable
- The designer addresses a technical limitation or constraint.
- A person (designer) explains why a limitation can be addressed.

5.
Concepts: compatibility assurance, confirm compatibility
- Assuring compatibility with different systems or devices
- Confirmation or verification of compatibility, functionality, or performance of the Physics Lab platform on different devices or platforms.

6.
Concepts: system requirements, inform about system compatibility
- Discussing system requirements or compatibility issues.
- Informing users about system compatibility or limitations.

7.
Concepts: confirm system compatibility, suggesting checking compatibility of the system
- A designer discusses or confirms system compatibility or requirements.
- Suggesting or discussing the need to check compatibility with a system.

8.
Concepts: platform clarification, asking technical questions
- A user asks for clarification about a platform or software.
- Users ask technical questions about the platform or its features.

9.
Concepts: inquire about platform, platform question
- Specifying or inquiring about a particular platform or device.
- Questions or inquiries about the availability or compatibility of the Physics Lab platform on different devices or platforms.

10.
Concepts: correct previous statement, self rebut the previous response
- A designer corrects or clarifies a previous statement or mistake.
- Designer corrects or rebuts their previous response or statement.

11.
Concepts: elaborating on previous statements, give further information about the conversation
- Users explain or provide additional context to their previous statements.
- A person (user) provides additional information or clarification.

12.
Concepts: gives a more detailed and specific answer, adding more specific information and criteria to the answer
- Providing a detailed or specific answer to a question
- A designer adds more specific information or criteria to their answer or response.

13.
Concepts: request features, respond to feature request
- Users request specific features or functionalities.
- Responding to or addressing user feature requests.

14.
Concepts: express need, express interest or need
- Expressing a need or requirement for the software or community.
- Expressing interest or need for a particular feature or resource.

15.
Concepts: explain reason for suggestion, user input/feedback/suggestion with justifications
- The user explains the reason behind their suggestion or request.
- User provides feedback or suggestions with justifications or explanations.

16.
Concepts: explain intention of question, explain intention of follow-up question
- The user or designer explains the intention behind a question or statement.
- Explaining the intention or context behind a follow-up question.

17.
Concepts: ask a question, ask for permission to ask
- Asking a question or seeking clarification.
- Asking for permission to ask a question or seeking clarification.

18.
Concepts: seek clarification, user assistance request
- Users or designers request clarification on a topic or issue.
- Requests for assistance, clarification, or guidance from users.

19.
Concepts: personal interest, express personal interest
- Expression of personal interest in a subject (e.g., chemistry).
- Expressing personal interest or enthusiasm.

20.
Concepts: emphasize importance, describe feature importance
- A user emphasizes the importance of a feature or resource.
- Highlighting the importance or significance of a particular feature

21.
Concepts: visual aid provision, provide illustrative examples
- A designer or developer provides a visual aid, such as an image, to facilitate understanding.
- A designer provides examples or illustrations of a feature or functionality.

22.
Concepts: provide example, use images for demonstration
- Providing an example or illustration to explain a concept.
- Using images to aid in explanation or demonstration.

23.
Concepts: reflection on experiences, reference past experience
- Reflection on experiences, lessons learned, or insights gained from feature development or design decisions.
- Reference to past experiences, lessons learned, or previous attempts related to feature development or design decisions.

24.
Concepts: past incident, reference past incident
- A user shares a past experience or incident.
- Referencing a past event or incident.

25.
Concepts: explain version type, give more information about the version uploaded
- A designer explains the type or nature of a version.
- A designer provides more information about a version uploaded or released.

26.
Concepts: explanation, feature explanation
- Providing explanations or clarifications about a feature or concept.
- Explaining or describing a software feature or functionality.

27.
Concepts: teaching, instruction and updates
- Instruction, guidance, or explanation provided by the designer or developers to users.
- Designers providing updates and instructions to help users understand and use the software effectively.

28.
Concepts: personalized assistance, offer personalized support
- Offering personalized assistance or support.
- A designer offers personalized support or assistance.

29.
Concepts: implicit rejection, indirect rejection
- Implicitly rejecting or deferring a request or suggestion.
- The designer indirectly rejects or postpones a request or suggestion, often citing priorities or limitations.

30.
Concepts: insufficient data, vague on responses to the feature request
- The designer responds with a brief, non-committal phrase, indicating a lack of information or uncertainty.
- A designer responds vaguely or ambiguously to a feature request or question.

31.
Concepts: acknowledge potential issue, raise a concern for the new feature
- A designer acknowledges a potential issue or problem.
- The designer raises a concern or potential issue related to a new feature.

32.
Concepts: list bug fixes, noting for potential bugs
- Designer lists or describes bug fixes or updates to the software.
- The designer notes potential bugs or issues with the current version of the software.
===
Here are the definitions for each code:

---
1.
Concepts: system limitations, system limitation explanation
Relationship: The concepts are related as the explanation of system limitations provides context for the limitations.
Criteria: Designers explain or discuss system limitations or constraints that affect the implementation of features or requests.
Phrase: Explaining system limitations.

2.
Concepts: technical consideration, discuss technical limitations
Relationship: The concepts are related as technical considerations involve discussing technical limitations.
Criteria: Designers consider or discuss technical aspects or limitations of the software that impact its development or functionality.
Phrase: Discussing technical considerations.

3.
Concepts: explain limitations, limitation acknowledgement
Relationship: The concepts are related as explaining limitations involves acknowledging them.
Criteria: Designers explain or acknowledge limitations or constraints of the current version of the software.
Phrase: Acknowledging limitations.

4.
Concepts: address technical limitation, talk about why limitation is addressable
Relationship: The concepts are related as addressing technical limitations involves explaining why they can be addressed.
Criteria: Designers address technical limitations or constraints and explain why they can be addressed.
Phrase: Addressing technical limitations.

5.
Concepts: compatibility assurance, confirm compatibility
Relationship: The concepts are related as compatibility assurance involves confirming compatibility.
Criteria: Designers assure or confirm compatibility with different systems or devices.
Phrase: Assuring compatibility.

6.
Concepts: system requirements, inform about system compatibility
Relationship: The concepts are related as system requirements involve informing about compatibility.
Criteria: Designers discuss system requirements or compatibility issues and inform users about them.
Phrase: Informing about system requirements.

7.
Concepts: confirm system compatibility, suggesting checking compatibility of the system
Relationship: The concepts are related as confirming compatibility involves suggesting checking compatibility.
Criteria: Designers confirm system compatibility or requirements and suggest checking compatibility with a system.
Phrase: Confirming system compatibility.

8.
Concepts: platform clarification, asking technical questions
Relationship: The concepts are related as platform clarification involves asking technical questions.
Criteria: Users ask for clarification about a platform or software and ask technical questions.
Phrase: Seeking platform clarification.

9.
Concepts: inquire about platform, platform question
Relationship: The concepts are related as inquiring about a platform involves asking questions.
Criteria: Users specify or inquire about a particular platform or device and ask questions about its availability or compatibility.
Phrase: Inquiring about platforms.

10.
Concepts: correct previous statement, self rebut the previous response
Relationship: The concepts are related as correcting a previous statement involves rebutting it.
Criteria: Designers correct or clarify a previous statement or mistake.
Phrase: Correcting previous statements.

11.
Concepts: elaborating on previous statements, give further information about the conversation
Relationship: The concepts are related as elaborating on previous statements involves providing further information.
Criteria: Users explain or provide additional context to their previous statements.
Phrase: Elaborating on previous statements.

12.
Concepts: gives a more detailed and specific answer, adding more specific information and criteria to the answer
Relationship: The concepts are related as providing a detailed answer involves adding specific information.
Criteria: Designers provide detailed or specific answers to questions and add more specific information or criteria to their responses.
Phrase: Providing detailed answers.

13.
Concepts: request features, respond to feature request
Relationship: The concepts are related as requesting features involves responding to feature requests.
Criteria: Users request specific features or functionalities and designers respond to these requests.
Phrase: Requesting features.

14.
Concepts: express need, express interest or need
Relationship: The concepts are related as expressing a need involves expressing interest.
Criteria: Users express a need or requirement for the software or community and express interest or need for a particular feature or resource.
Phrase: Expressing needs.

15.
Concepts: explain reason for suggestion, user input/feedback/suggestion with justifications
Relationship: The concepts are related as explaining a reason involves providing justifications.
Criteria: Users explain the reason behind their suggestions or requests and provide feedback or suggestions with justifications.
Phrase: Explaining reasons.

16.
Concepts: explain intention of question, explain intention of follow-up question
Relationship: The concepts are related as explaining intention involves explaining context.
Criteria: Users or designers explain the intention behind a question or statement and explain the intention or context behind a follow-up question.
Phrase: Explaining intentions.

17.
Concepts: ask a question, ask for permission to ask
Relationship: The concepts are related as asking a question involves seeking permission.
Criteria: Users ask questions or seek clarification and ask for permission to ask a question or seek clarification.
Phrase: Asking questions.

18.
Concepts: seek clarification, user assistance request
Relationship: The concepts are related as seeking clarification involves requesting assistance.
Criteria: Users or designers request clarification on a topic or issue and request assistance, clarification, or guidance.
Phrase: Seeking clarification.

19.
Concepts: personal interest, express personal interest
Relationship: The concepts are related as expressing personal interest involves stating enthusiasm.
Criteria: Users express personal interest in a subject and express enthusiasm or interest.
Phrase: Expressing personal interest.

20.
Concepts: emphasize importance, describe feature importance
Relationship: The concepts are related as emphasizing importance involves describing significance.
Criteria: Users emphasize the importance of a feature or resource and describe its significance or importance.
Phrase: Emphasizing importance.

21.
Concepts: visual aid provision, provide illustrative examples
Relationship: The concepts are related as providing visual aids involves providing examples.
Criteria: Designers provide visual aids, such as images, to facilitate understanding and provide examples or illustrations of a feature or functionality.
Phrase: Providing visual aids.

22.
Concepts: provide example, use images for demonstration
Relationship: The concepts are related as providing examples involves using images.
Criteria: Designers provide examples or illustrations to explain a concept and use images to aid in explanation or demonstration.
Phrase: Providing examples.

23.
Concepts: reflection on experiences, reference past experience
Relationship: The concepts are related as reflecting on experiences involves referencing past experiences.
Criteria: Designers reflect on experiences, lessons learned, or insights gained from feature development or design decisions and reference past experiences or attempts.
Phrase: Reflecting on experiences.

24.
Concepts: past incident, reference past incident
Relationship: The concepts are related as referencing a past incident involves sharing experiences.
Criteria: Users share past experiences or incidents and reference past events or incidents.
Phrase: Referencing past incidents.

25.
Concepts: explain version type, give more information about the version uploaded
Relationship: The concepts are related as explaining a version type involves providing more information.
Criteria: Designers explain the type or nature of a version and provide more information about a version uploaded or released.
Phrase: Explaining version types.

26.
Concepts: explanation, feature explanation
Relationship: The concepts are related as providing explanations involves explaining features.
Criteria: Designers provide explanations or clarifications about a feature or concept and explain software features or functionalities.
Phrase: Providing explanations.

27.
Concepts: teaching, instruction and updates
Relationship: The concepts are related as teaching involves providing instructions and updates.
Criteria: Designers provide instruction, guidance, or explanation to users and provide updates and instructions to help users understand and use the software effectively.
Phrase: Teaching and instructing.

28.
Concepts: personalized assistance, offer personalized support
Relationship: The concepts are related as offering personalized assistance involves providing support.
Criteria: Designers offer personalized assistance or support to users.
Phrase: Offering personalized assistance.

29.
Concepts: implicit rejection, indirect rejection
Relationship: The concepts are related as implicit rejection involves indirect rejection.
Criteria: Designers implicitly reject or defer a request or suggestion, often citing priorities or limitations.
Phrase: Implicitly rejecting.

30.
Concepts: insufficient data, vague on responses to the feature request
Relationship: The concepts are related as insufficient data involves responding vaguely.
Criteria: Designers respond with brief, non-committal phrases, indicating a lack of information or uncertainty.
Phrase: Responding vaguely.

31.
Concepts: acknowledge potential issue, raise a concern for the new feature
Relationship: The concepts are related as acknowledging a potential issue involves raising concerns.
Criteria: Designers acknowledge potential issues or problems and raise concerns related to new features.
Phrase: Acknowledging potential issues.

32.
Concepts: list bug fixes, noting for potential bugs
Relationship: The concepts are related as listing bug fixes involves noting potential bugs.
Criteria: Designers list or describe bug fixes or updates to the software and note potential bugs or issues with the current version.
Phrase: Listing bug fixes.