You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (19 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
19. 
Concepts: {Repeat the input 19}
Relationship: {What is logical relationship between concepts in code 19, or N/A if not applicable}
Criteria: {Who did what, and how for code 19}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: announcing software updates, announcing new features
- Designers announce upcoming updates and new features.
- Designers explain and announce new features and improvements in the software.

2.
Concepts: inquiring about updates, inquire about update timeline
- Users inquire about the status or timing of updates.
- A user asks about the timing or timeline of a feature update.

3.
Concepts: outline future design plans, sharing future development plans
- Designers outline and discuss future design plans and considerations.
- Designers discuss future planning and share information about future development plans.

4.
Concepts: future development promise, promising future feature implementation
- Statements from designers about potential future development projects or updates.
- Designers assure the community that a feature or request will be implemented in the future.

5.
Concepts: giving feature examples, introduce feature functions
- Designers explain how features or functions work, providing examples.
- Designers introduce and explain new feature functions.

6.
Concepts: confirm understanding, expression of understanding
- A designer expresses understanding and asks for more detailed input.
- A user or designer expresses understanding or agreement.

7.
Concepts: seeking clarification, troubleshooting user issues
- Designers ask for clarification about an issue encountered by a user.
- Designers ask about and address issues users encounter.

8.
Concepts: encouraging discussion, soliciting user feedback
- Designers encourage open communication and feedback from users.
- Designers encourage users to provide feedback and communicate any issues they encounter.

9.
Concepts: consulting the community, involving the community in design
- Designers gather opinions from the community before making decisions.
- Designers involve the community in the development process by seeking their input.

10.
Concepts: discuss feature development, discussing feature improvement
- Users discuss the development and potential implementation of new features.
- Users or designers discuss improving features and ask for user input.

11.
Concepts: communicating progress updates, communicating development progress
- Designers communicate updates and timelines to users.
- Designers provide updates and reports on the project's progress.

12.
Concepts: share progress updates, providing update preview
- Designer shares progress updates and visual previews with the community.
- Designers share a preview or mention visual updates in preparation.

13.
Concepts: providing development updates, providing feature development updates
- Designers share updates or technical changes to the software.
- Designers engage users by discussing upcoming updates and providing information about feature development.

14.
Concepts: welcome community members, appreciating community support
- Designers welcome or reciprocate greetings from community members.
- Designers express gratitude towards the community for their support.

15.
Concepts: complimenting software usability, expressing satisfaction with software
- Users praise the software for its usability, practicality, and effectiveness.
- Users provide positive feedback and express satisfaction with the software's features.

16.
Concepts: craftsmanship, appreciate designers' efforts
- Users praise the designers' dedication and craftsmanship.
- Users express gratitude and appreciation for the designers' efforts and attention to detail.

17.
Concepts: requesting new features, requesting additional features
- Users request or propose new features or improvements for the software.
- Users request or express the need for specific additional features.

18.
Concepts: information seeking, requesting information
- Users asking questions to gain knowledge or resources related to the software.
- Users request specific resources or information related to the software.

19.
Concepts: requesting download instructions, show interest in using the software
- Users inquire about how to access or download the software.
- A user expresses interest in how to download the software.
===
---
Definitions for each code (19 in total):
1.
Concepts: announcing software updates, announcing new features
Relationship: Both involve communication from designers about changes in the software.
Criteria: Designers announce and explain upcoming updates and new features.
Phrase: Announcing software changes

2.
Concepts: inquiring about updates, inquire about update timeline
Relationship: Both involve users seeking information about updates.
Criteria: Users inquire about the status or timing of updates.
Phrase: Inquiring about updates

3.
Concepts: outline future design plans, sharing future development plans
Relationship: Both involve designers discussing future plans.
Criteria: Designers outline and share future design and development plans.
Phrase: Sharing future plans

4.
Concepts: future development promise, promising future feature implementation
Relationship: Both involve designers making commitments about future developments.
Criteria: Designers assure the community about future feature implementations.
Phrase: Promising future features

5.
Concepts: giving feature examples, introduce feature functions
Relationship: Both involve designers explaining how features work.
Criteria: Designers introduce and explain new feature functions with examples.
Phrase: Explaining feature functions

6.
Concepts: confirm understanding, expression of understanding
Relationship: Both involve expressing comprehension.
Criteria: A user or designer expresses understanding or agreement.
Phrase: Confirming understanding

7.
Concepts: seeking clarification, troubleshooting user issues
Relationship: Both involve addressing user issues.
Criteria: Designers ask for clarification to troubleshoot user issues.
Phrase: Clarifying user issues

8.
Concepts: encouraging discussion, soliciting user feedback
Relationship: Both involve prompting user engagement.
Criteria: Designers encourage users to discuss and provide feedback.
Phrase: Encouraging user feedback

9.
Concepts: consulting the community, involving the community in design
Relationship: Both involve community participation in decision-making.
Criteria: Designers seek community input before making design decisions.
Phrase: Consulting the community

10.
Concepts: discuss feature development, discussing feature improvement
Relationship: Both involve discussions about feature changes.
Criteria: Users or designers discuss the development and improvement of features.
Phrase: Discussing feature changes

11.
Concepts: communicating progress updates, communicating development progress
Relationship: Both involve sharing progress information.
Criteria: Designers communicate updates and timelines to users.
Phrase: Communicating progress updates

12.
Concepts: share progress updates, providing update preview
Relationship: Both involve sharing progress and previews.
Criteria: Designers share progress updates and visual previews with the community.
Phrase: Sharing progress previews

13.
Concepts: providing development updates, providing feature development updates
Relationship: Both involve updates about feature development.
Criteria: Designers provide updates on technical changes and feature development.
Phrase: Providing development updates

14.
Concepts: welcome community members, appreciating community support
Relationship: Both involve positive interactions with the community.
Criteria: Designers welcome new members and express gratitude for community support.
Phrase: Welcoming and appreciating the community

15.
Concepts: complimenting software usability, expressing satisfaction with software
Relationship: Both involve positive feedback from users.
Criteria: Users praise the software's usability and express satisfaction with its features.
Phrase: Complimenting software usability

16.
Concepts: craftsmanship, appreciate designers' efforts
Relationship: Both involve users appreciating designers' work.
Criteria: Users praise and appreciate the designers' efforts and craftsmanship.
Phrase: Appreciating designers' efforts

17.
Concepts: requesting new features, requesting additional features
Relationship: Both involve users asking for new functionalities.
Criteria: Users request or propose new features or improvements.
Phrase: Requesting new features

18.
Concepts: information seeking, requesting information
Relationship: Both involve users seeking knowledge.
Criteria: Users request specific information or resources related to the software.
Phrase: Seeking information

19.
Concepts: requesting download instructions, show interest in using the software
Relationship: Both involve users wanting to access the software.
Criteria: Users inquire about how to download and use the software.
Phrase: Requesting download instructions
---