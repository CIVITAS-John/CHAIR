You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (26 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
26. 
Concepts: {Repeat the input 26}
Relationship: {What is logical relationship between concepts in code 26, or N/A if not applicable}
Criteria: {Who did what, and how for code 26}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: clarifies ambiguity, clarifies process
- A designer clarifies ambiguity or uncertainty.
- A designer clarifies a process or explains how something works.

2.
Concepts: elaborating on suggestions, provides additional clarification
- Designers provide additional explanations or elaborations on features or concepts.
- A designer clarifies a point of consultation and provides additional information.

3.
Concepts: confirming and validating user requests, completing queries and acknowledging receipt
- Users or designers confirm or acknowledge messages, seeking confirmation or validating user requests.
- Users complete queries or confirm receipt of information, acknowledging messages or responses.

4.
Concepts: expressing approval and affirmation, confirming and agreeing with design decisions
- Designers express agreement or confirmation, providing affirmations or approvals.
- Designers confirm or agree with reasons or statements, confirming design elements or decisions.

5.
Concepts: confirms common practice, confirming and agreeing on a common style
- A user confirms or acknowledges a common practice or standard.
- Users confirm or acknowledge a particular style or approach, confirming a common style.

6.
Concepts: support user solution, agreeing with and supporting suggestions
- Supporting or agreeing with a user's solution or idea.
- Users agree with or affirm suggestions or statements, supporting previous statements.

7.
Concepts: gratitude, expressing admiration for software features
- Users express gratitude or appreciation for the software or the designers' efforts.
- Users share positive feedback or express admiration for specific software features in a way that demonstrates their enthusiasm.

8.
Concepts: appreciation for help, acknowledging community support
- Expressions of gratitude or appreciation towards teachers or designers.
- Designers acknowledge or express gratitude for community support or expertise.

9.
Concepts: community building, fostering community spirit
- A user participates in building a sense of community.
- Designers or users foster a positive community atmosphere or welcome others.

10.
Concepts: sharing resources, providing access to resources
- Designers share resources or engage in community support.
- Designers provide or facilitate access to resources or information within the online community.

11.
Concepts: acknowledging group resources, acknowledging help, resources, and expertise
- Acknowledging or referencing shared resources within the group
- Users acknowledge help, assistance, or support from others, acknowledging resources and expertise.

12.
Concepts: maintained rapport, building rapport
- Designer maintains a rapport with the user by responding with a brief acknowledgement.
- Designer builds rapport with users through casual conversation and engages in informal or casual conversation.

13.
Concepts: explain software limitations, explaining system limitations
- Designers acknowledge or clarify limitations or constraints imposed by the software or external factors.
- Designers explain system limitations or constraints that prevent a particular issue from being resolved.

14.
Concepts: shows consideration, exhibiting politeness and maintaining social etiquette
- Designers or users show consideration or apologize for any inconvenience caused.
- Users or designers exhibit politeness or courtesy, maintaining social etiquette, such as apologizing or excusing themselves.

15.
Concepts: expressing educational needs, emphasize importance and educational value
- Users express, highlight, or link specific features to their educational needs or requirements.
- Users or designers emphasize the importance of specific features or aspects and a user emphasizes the importance of a feature or functionality for school or educational purposes.

16.
Concepts: highlights usability need, acknowledges feature needs
- A user highlights a usability need or requirement.
- Acknowledging the need for a specific feature or usability issue.

17.
Concepts: highlighting software practicality, highlighting educational utility
- Users highlight the practicality or usefulness of the Physics Lab software.
- Designers highlight the educational value or utility of the Physics Lab software or features.

18.
Concepts: explaining practical needs, identifying needs or requirements
- Users explain, identify, or point out practical needs or requirements for the Physics Lab software.
- Users identify needs or requirements, including institutional requirements, for the Physics Lab software.

19.
Concepts: express curiosity, expressing interest in platform content and access
- The designer or user expresses curiosity or interest in a topic or feature.
- Users demonstrate curiosity about specific topics, features, or content and express a desire to access the platform or software.

20.
Concepts: sharing software-related stories, shares informative information
- Users share stories or past incidents related to the software.
- A user shares information that can inform the design or development of the software.

21.
Concepts: suggests future directions, suggesting focused development
- Users suggest future directions or development approaches.
- A user suggests focusing development on specific areas or features.

22.
Concepts: seeks technical support, initiating technical discussions
- Users seek technical guidance, assistance, or clarification on using the software.
- A user engages with technical aspects of the software or asks a technical question.

23.
Concepts: requests documentation, inquires about user manual
- Users request documentation or justify requests for manuals.
- A user inquires about the availability of a user manual.

24.
Concepts: introduces themselves as a teacher, shares professional background or experience
- A user identifies themselves as a teacher or educator and introduces themselves with relevant background information.
- A user shares their teaching experience or professional background with others.

25.
Concepts: explaining common practices, explaining institutional policies
- Users explain common practices or school policies.
- Users explain or emphasize institutional policies or restrictions.

26.
Concepts: directing to resources
- Designers direct users to resources or files, such as group files.
- Designers direct users to download files or access resources, or offer content or resources.
===
Here are the definitions for each code:

---
1.
Concepts: clarifies ambiguity, clarifies process
Relationship: Clarifying ambiguity is a precursor to clarifying process, as understanding the process requires first understanding the context.
Criteria: A designer clarifies uncertainty or explains how something works to facilitate understanding.
Phrase: Clarifying ambiguity and process.

2.
Concepts: elaborating on suggestions, provides additional clarification
Relationship: Elaborating on suggestions and providing additional clarification are complementary actions that facilitate understanding.
Criteria: Designers provide additional explanations or elaborations on features or concepts to clarify user requests.
Phrase: Elaborating and clarifying suggestions.

3.
Concepts: confirming and validating user requests, completing queries and acknowledging receipt
Relationship: Confirming and validating user requests are closely related to completing queries and acknowledging receipt, as they all involve responding to user input.
Criteria: Users or designers confirm or acknowledge messages, seeking confirmation or validating user requests, and complete queries or confirm receipt of information.
Phrase: Confirming and validating user requests.

4.
Concepts: expressing approval and affirmation, confirming and agreeing with design decisions
Relationship: Expressing approval and affirmation are closely related to confirming and agreeing with design decisions, as they both involve endorsing design elements.
Criteria: Designers express agreement or confirmation, providing affirmations or approvals, and confirm or agree with reasons or statements.
Phrase: Expressing approval and affirmation.

5.
Concepts: confirms common practice, confirming and agreeing on a common style
Relationship: Confirming common practice and agreeing on a common style are related in that they both involve acknowledging shared understanding or approach.
Criteria: A user confirms or acknowledges a common practice or standard, and confirms or acknowledges a particular style or approach.
Phrase: Confirming common practice and style.

6.
Concepts: support user solution, agreeing with and supporting suggestions
Relationship: Supporting user solutions and agreeing with suggestions are complementary actions that facilitate collaboration.
Criteria: Designers support or agree with a user's solution or idea, and users agree with or affirm suggestions or statements.
Phrase: Supporting and agreeing with user solutions.

7.
Concepts: gratitude, expressing admiration for software features
Relationship: Expressing gratitude and admiration for software features are closely related, as they both involve positive feedback.
Criteria: Users express gratitude or appreciation for the software or the designers' efforts, and share positive feedback or express admiration for specific software features.
Phrase: Expressing gratitude and admiration.

8.
Concepts: appreciation for help, acknowledging community support
Relationship: Appreciation for help and acknowledging community support are related in that they both involve recognizing assistance or expertise.
Criteria: Expressions of gratitude or appreciation towards teachers or designers, and designers acknowledge or express gratitude for community support or expertise.
Phrase: Appreciating help and community support.

9.
Concepts: community building, fostering community spirit
Relationship: Community building and fostering community spirit are complementary actions that promote a positive online environment.
Criteria: A user participates in building a sense of community, and designers or users foster a positive community atmosphere or welcome others.
Phrase: Building and fostering community spirit.

10.
Concepts: sharing resources, providing access to resources
Relationship: Sharing resources and providing access to resources are closely related, as they both involve facilitating access to information or expertise.
Criteria: Designers share resources or engage in community support, and provide or facilitate access to resources or information within the online community.
Phrase: Sharing and providing access to resources.

11.
Concepts: acknowledging group resources, acknowledging help, resources, and expertise
Relationship: Acknowledging group resources and acknowledging help, resources, and expertise are related in that they both involve recognizing shared resources or expertise.
Criteria: Acknowledging or referencing shared resources within the group, and users acknowledge help, assistance, or support from others, acknowledging resources and expertise.
Phrase: Acknowledging group resources and expertise.

12.
Concepts: maintained rapport, building rapport
Relationship: Maintaining rapport and building rapport are complementary actions that facilitate positive relationships.
Criteria: Designer maintains a rapport with the user by responding with a brief acknowledgement, and builds rapport with users through casual conversation.
Phrase: Maintaining and building rapport.

13.
Concepts: explain software limitations, explaining system limitations
Relationship: Explaining software limitations and explaining system limitations are closely related, as they both involve clarifying constraints.
Criteria: Designers acknowledge or clarify limitations or constraints imposed by the software or external factors, and explain system limitations or constraints.
Phrase: Explaining software and system limitations.

14.
Concepts: shows consideration, exhibiting politeness and maintaining social etiquette
Relationship: Showing consideration and exhibiting politeness are complementary actions that promote positive online interactions.
Criteria: Designers or users show consideration or apologize for any inconvenience caused, and exhibit politeness or courtesy, maintaining social etiquette.
Phrase: Showing consideration and politeness.

15.
Concepts: expressing educational needs, emphasize importance and educational value
Relationship: Expressing educational needs and emphasizing importance and educational value are related in that they both involve highlighting the significance of specific features.
Criteria: Users express, highlight, or link specific features to their educational needs or requirements, and emphasize the importance of specific features or aspects.
Phrase: Expressing and emphasizing educational needs and value.

16.
Concepts: highlights usability need, acknowledges feature needs
Relationship: Highlighting usability needs and acknowledging feature needs are complementary actions that facilitate understanding user requirements.
Criteria: A user highlights a usability need or requirement, and acknowledges the need for a specific feature or usability issue.
Phrase: Highlighting and acknowledging usability needs.

17.
Concepts: highlighting software practicality, highlighting educational utility
Relationship: Highlighting software practicality and highlighting educational utility are related in that they both involve emphasizing the usefulness of the software.
Criteria: Users highlight the practicality or usefulness of the Physics Lab software, and designers highlight the educational value or utility of the Physics Lab software or features.
Phrase: Highlighting software practicality and educational utility.

18.
Concepts: explaining practical needs, identifying needs or requirements
Relationship: Explaining practical needs and identifying needs or requirements are complementary actions that facilitate understanding user requirements.
Criteria: Users explain, identify, or point out practical needs or requirements for the Physics Lab software, and identify needs or requirements, including institutional requirements.
Phrase: Explaining and identifying practical needs.

19.
Concepts: express curiosity, expressing interest in platform content and access
Relationship: Expressing curiosity and expressing interest in platform content and access are related in that they both involve demonstrating interest in the software.
Criteria: The designer or user expresses curiosity or interest in a topic or feature, and demonstrates curiosity about specific topics, features, or content and expresses a desire to access the platform or software.
Phrase: Expressing curiosity and interest.

20.
Concepts: sharing software-related stories, shares informative information
Relationship: Sharing software-related stories and sharing informative information are complementary actions that facilitate knowledge sharing.
Criteria: Users share stories or past incidents related to the software, and share information that can inform the design or development of the software.
Phrase: Sharing software-related stories and information.

21.
Concepts: suggests future directions, suggesting focused development
Relationship: Suggesting future directions and suggesting focused development are related in that they both involve proposing ways to improve the software.
Criteria: Users suggest future directions or development approaches, and suggest focusing development on specific areas or features.
Phrase: Suggesting future directions and development.

22.
Concepts: seeks technical support, initiating technical discussions
Relationship: Seeking technical support and initiating technical discussions are complementary actions that facilitate technical assistance.
Criteria: Users seek technical guidance, assistance, or clarification on using the software, and engage with technical aspects of the software or ask a technical question.
Phrase: Seeking technical support and initiating discussions.

23.
Concepts: requests documentation, inquires about user manual
Relationship: Requesting documentation and inquiring about user manuals are related in that they both involve seeking information or resources.
Criteria: Users request documentation or justify requests for manuals, and inquire about the availability of a user manual.
Phrase: Requesting documentation and inquiring about user manuals.

24.
Concepts: introduces themselves as a teacher, shares professional background or experience
Relationship: Introducing oneself as a teacher and sharing professional background or experience are complementary actions that facilitate establishing credibility.
Criteria: A user identifies themselves as a teacher or educator and introduces themselves with relevant background information, and shares their teaching experience or professional background with others.
Phrase: Introducing themselves as a teacher and sharing professional background.

25.
Concepts: explaining common practices, explaining institutional policies
Relationship: Explaining common practices and explaining institutional policies are related in that they both involve clarifying contextual information.
Criteria: Users explain common practices or school policies, and explain or emphasize institutional policies or restrictions.
Phrase: Explaining common practices and institutional policies.

26.
Concepts: directing to resources
Relationship: N/A
Criteria: Designers direct users to resources or files, such as group files, and direct users to download files or access resources, or offer content or resources.
Phrase: Directing to resources.