You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (14 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
14. 
Concepts: {Repeat the input 14}
Relationship: {What is logical relationship between concepts in code 14, or N/A if not applicable}
Criteria: {Who did what, and how for code 14}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: user interaction strategies, describes effective ai questioning
- Describes strategies for interacting with AI to maximize its effectiveness.
- Users maximize AI's capability by asking iterative questions and describe effective questioning techniques to maximize the usefulness of AI responses.

2.
Concepts: model setup adjustment, customizes ai-generated code
- Users adjust their model setup based on AI-generated code.
- Users customize AI-generated code to fit their needs and adjust task complexity based on the parameters of AI-generated code.

3.
Concepts: refines ai prompts, dictates parameters to ai
- Users refine prompts for better AI responses and refine tasks based on AI feedback.
- Users guide and refine AI-generated solutions by dictating specific parameters or fields to the AI.

4.
Concepts: ai summarizing tool, suggests ai-assisted help posts
- Suggestion for AI to help users summarize and post their issues for external help.
- Users discuss seeking help and suggest AI could assist in formulating help requests.

5.
Concepts: needs for llm-based interfaces, identifies weaknesses in llm interfaces
- Specific requirements or features that the interviewee feels are necessary for improving LLM-based interfaces.
- The interviewee mentions features they dislike and the weaknesses of LLM-driven interfaces.

6.
Concepts: advocates ai for learning improvement, imagines ai improving the learning process
- Users critique current learning methods and suggest AI could improve them.
- Users hypothesize AI's role in designing better learning management paths.

7.
Concepts: appreciates free online help, reflects on benefits of online help
- Users appreciate and share positive experiences with free online help.
- Users reflect on the benefits of seeking help from online communities and proper practices for seeking online help.

8.
Concepts: novice-expert design tension, discusses tension between novice and expert ai design
- The AI's design needs to balance between novice and expert users.
- Users discuss the tension between novice and expert needs in AI interface design.

9.
Concepts: language proficiency, suggests need for efficient learning tools
- When a user reflects on their proficiency in multiple languages and the need for efficient learning tools.
- Users discuss constraints on time for learning multiple languages and the need for efficient learning tools.

10.
Concepts: doubts ai's code verification, requests ai verification for error-free code
- Users suspect that AI-generated code can contain errors and express doubt about the AI's capability to verify code correctness.
- Users request AI to verify their code to ensure it is error-free.

11.
Concepts: relies on self for debugging ai code, independently corrects ai-generated code
- Users rely on their own reasoning and debugging skills when using AI.
- Users manually fix errors in AI-generated code rather than using an "explain it" option.

12.
Concepts: notes variability in ai responses, experiences frustration with ai error resolution
- Users note that AI's output is inconsistent and unpredictable, leading to frustration.
- Users express frustration with AI over perceived errors and misleading error messages, finding them unhelpful and causing confusion.

13.
Concepts: ai output comparison, evaluating ai-generated code
- Evaluating AI by comparing its output to a specific coding task.
- Users review and engage in detailed evaluation of AI-generated code.

14.
Concepts: appreciates ai parameter clarification, values ai's troubleshooting capabilities
- Users like specific features of AI, such as error clarification and parameter definition, and appreciate AI's ability to help define and clarify parameters.
- Users value AI's ability to provide clear explanations for debugging and error codes, and appreciate its support in clarifying and troubleshooting errors.
===
---
Definitions for each code (14 in total):
1.
Concepts: user interaction strategies, describes effective ai questioning
Relationship: Users describe strategies to maximize AI effectiveness through questioning.
Criteria: Users describe strategies for interacting with AI to maximize its effectiveness by asking iterative questions.
Phrase: Describing effective AI questioning strategies

2.
Concepts: model setup adjustment, customizes ai-generated code
Relationship: Users adjust their model setup based on AI-generated code.
Criteria: Users adjust their model setup and customize AI-generated code to fit their needs.
Phrase: Customizing AI-generated code for model setup

3.
Concepts: refines ai prompts, dictates parameters to ai
Relationship: Users refine AI prompts and dictate parameters for better responses.
Criteria: Users refine prompts and dictate specific parameters to guide AI-generated solutions.
Phrase: Refining AI prompts and parameters

4.
Concepts: ai summarizing tool, suggests ai-assisted help posts
Relationship: Users suggest AI could assist in summarizing and posting help requests.
Criteria: Users suggest AI could help summarize and formulate help requests for external assistance.
Phrase: Suggesting AI-assisted help posts

5.
Concepts: needs for llm-based interfaces, identifies weaknesses in llm interfaces
Relationship: Users identify needs and weaknesses in LLM-based interfaces.
Criteria: Users identify specific requirements and weaknesses in LLM-based interfaces.
Phrase: Identifying needs and weaknesses in LLM interfaces

6.
Concepts: advocates ai for learning improvement, imagines ai improving the learning process
Relationship: Users advocate for AI's role in improving learning processes.
Criteria: Users suggest AI could improve current learning methods and design better learning paths.
Phrase: Advocating AI for learning improvement

7.
Concepts: appreciates free online help, reflects on benefits of online help
Relationship: Users appreciate and reflect on the benefits of free online help.
Criteria: Users share positive experiences and reflect on the benefits of free online help.
Phrase: Reflecting on benefits of free online help

8.
Concepts: novice-expert design tension, discusses tension between novice and expert ai design
Relationship: Users discuss the tension in AI design for novice and expert users.
Criteria: Users discuss the balance needed in AI interface design to cater to both novice and expert users.
Phrase: Discussing novice-expert design tension

9.
Concepts: language proficiency, suggests need for efficient learning tools
Relationship: Users discuss language proficiency and the need for efficient learning tools.
Criteria: Users reflect on their language proficiency and suggest the need for efficient learning tools.
Phrase: Suggesting need for efficient learning tools

10.
Concepts: doubts ai's code verification, requests ai verification for error-free code
Relationship: Users doubt AI's code verification and request error-free code.
Criteria: Users express doubt about AI's code verification and request AI to ensure error-free code.
Phrase: Requesting AI verification for error-free code

11.
Concepts: relies on self for debugging ai code, independently corrects ai-generated code
Relationship: Users rely on themselves for debugging AI-generated code.
Criteria: Users rely on their own skills to debug and correct AI-generated code.
Phrase: Independently correcting AI-generated code

12.
Concepts: notes variability in ai responses, experiences frustration with ai error resolution
Relationship: Users note variability in AI responses and experience frustration.
Criteria: Users note inconsistent AI responses and express frustration with AI error resolution.
Phrase: Experiencing frustration with AI error resolution

13.
Concepts: ai output comparison, evaluating ai-generated code
Relationship: Users compare and evaluate AI-generated code.
Criteria: Users engage in detailed evaluation by comparing AI-generated code to specific tasks.
Phrase: Evaluating AI-generated code

14.
Concepts: appreciates ai parameter clarification, values ai's troubleshooting capabilities
Relationship: Users appreciate AI's parameter clarification and troubleshooting capabilities.
Criteria: Users value AI's ability to clarify parameters and troubleshoot errors.
Phrase: Valuing AI's troubleshooting capabilities
---