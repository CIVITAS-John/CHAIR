You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: communicating development progress and plans, outlining development goals and priorities
- Communicating the development process or progress, often including plans or timelines, and sharing progress or plans with the community.
- Plans or goals are shared for future development or improvement, and information is shared about future development plans, outlining priorities or plans for development.

2.
Concepts: confirming planned features and updates, committing to future updates and making promises
- A planned feature is affirmed or confirmed, and confirmation is given about an upcoming feature update.
- A designer commits to including a feature or functionality in a future update, and a promise is made to perfect a feature, making statements or promises about future developments or projects.

3.
Concepts: fostering open communication, requesting future input and encouraging discussion
- Designers encourage open communication, feedback, or suggestions.
- Designers ask for future help or input from users, encouraging users to ask questions or discuss topics in the future.

4.
Concepts: request suggestions, seek community feedback
- Designer requests suggestions or feedback from the community.
- Users provide feedback and suggestions to improve the product, and designers seek it from the community.

5.
Concepts: suggesting collaboration and proposing feature ideas, focusing on user experience and proposing workflow improvements
- Suggestions or ideas are sought for interactions or features, proposing new features or inviting users to suggest new features or improvements.
- The user suggests or discusses improvements to the user experience, proposing a workflow improvement or suggesting a new feature.

6.
Concepts: provides guidance, usage instruction
- A designer provides instruction or guidance on using the app.
- A designer provides instructions or guidance on using the platform.

7.
Concepts: providing detailed and technical explanations, explaining software features and providing technical details
- Designers provide detailed or specific answers to questions and provide technical explanations.
- Designers explain the type or version of a feature or component, providing technical details and explanations about the software and its features.

8.
Concepts: visual design appreciation, appreciating and praising features
- The user appreciates or comments on the visual design or aesthetic of the software.
- Users express admiration for specific features and effects, expressing positive opinions or praise about the software or its features.

9.
Concepts: theorizing about compatibility, discussing and checking system compatibility
- Designers theorize about the compatibility of a feature or software.
- Designers and users discuss system compatibility and suggest checking for compatibility.

10.
Concepts: describe students' positive responses in class, highlighting student engagement and sharing positive experiences
- A positive response or reaction from students is described.
- Users highlight student engagement and reactions to the Physics Lab, sharing positive experiences and stories about using Physics Lab in the classroom.

11.
Concepts: responding indirectly to user questions, providing clarification in response to user inquiries
- A user asks a question, and an indirect answer or a question in response is provided.
- A user asks for clarification, and a response is provided to address the question or concern.

12.
Concepts: inquiring about software usage and functionality, seeking clarification through follow-up questions
- Users seek information and clarification about the software through questions and inquiries.
- A user asks questions to clarify software features or functionality, and follow-up questions are asked to seek additional information.
===
Here are the definitions for each code:

---
1.
Concepts: communicating development progress and plans, outlining development goals and priorities
Relationship: Development progress and plans are shared to inform the community about future goals and priorities.
Criteria: Designers share development progress and plans with the community, outlining future goals and priorities.
Phrase: Share development plans and progress.

2.
Concepts: confirming planned features and updates, committing to future updates and making promises
Relationship: Confirming planned features and updates involves committing to future updates and making promises to the community.
Criteria: Designers confirm planned features and updates, committing to future updates and making promises to the community.
Phrase: Confirm and commit to updates.

3.
Concepts: fostering open communication, requesting future input and encouraging discussion
Relationship: Fostering open communication involves requesting future input and encouraging discussion with the community.
Criteria: Designers foster open communication, requesting future input and encouraging discussion with the community.
Phrase: Foster open communication.

4.
Concepts: request suggestions, seek community feedback
Relationship: Requesting suggestions involves seeking feedback from the community.
Criteria: Designers request suggestions and seek feedback from the community.
Phrase: Seek community feedback.

5.
Concepts: suggesting collaboration and proposing feature ideas, focusing on user experience and proposing workflow improvements
Relationship: Suggesting collaboration involves proposing feature ideas and focusing on user experience and workflow improvements.
Criteria: Designers suggest collaboration, proposing feature ideas and focusing on user experience and workflow improvements.
Phrase: Propose feature ideas and improvements.

6.
Concepts: provides guidance, usage instruction
Relationship: Providing guidance involves giving usage instructions to the community.
Criteria: Designers provide guidance and usage instructions to the community.
Phrase: Provide usage guidance.

7.
Concepts: providing detailed and technical explanations, explaining software features and providing technical details
Relationship: Providing detailed explanations involves explaining software features and providing technical details.
Criteria: Designers provide detailed and technical explanations, explaining software features and providing technical details.
Phrase: Explain software features and details.

8.
Concepts: visual design appreciation, appreciating and praising features
Relationship: Visual design appreciation involves appreciating and praising features.
Criteria: Users appreciate and praise the visual design and features of the software.
Phrase: Appreciate software design and features.

9.
Concepts: theorizing about compatibility, discussing and checking system compatibility
Relationship: Theorizing about compatibility involves discussing and checking system compatibility.
Criteria: Designers and users discuss and check system compatibility, theorizing about its feasibility.
Phrase: Discuss and check compatibility.

10.
Concepts: describe students' positive responses in class, highlighting student engagement and sharing positive experiences
Relationship: Describing students' positive responses involves highlighting student engagement and sharing positive experiences.
Criteria: Users describe students' positive responses, highlighting engagement and sharing positive experiences with Physics Lab.
Phrase: Share positive experiences.

11.
Concepts: responding indirectly to user questions, providing clarification in response to user inquiries
Relationship: Responding indirectly involves providing clarification in response to user inquiries.
Criteria: Designers respond indirectly to user questions, providing clarification to address concerns.
Phrase: Provide indirect clarification.

12.
Concepts: inquiring about software usage and functionality, seeking clarification through follow-up questions
Relationship: Inquiring about software usage involves seeking clarification through follow-up questions.
Criteria: Users inquire about software usage and functionality, seeking clarification through follow-up questions.
Phrase: Seek software clarification.