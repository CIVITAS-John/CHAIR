You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: express interest, discussion of further interests
- A designer expresses interest in a particular subject or area.
- A designer discusses or expresses interest in a topic beyond the immediate context.

2.
Concepts: consideration, contemplation
- A designer considers a particular issue or problem.
- The designer expresses contemplation or thoughtfulness about a particular issue.

3.
Concepts: explaining plans, explain design intention, explain design rationale
- Designer explains or elaborates on their plans or intentions.
- A designer explains the design goals or philosophy behind the software.
- A designer explains the reasoning or thought process behind a design decision.

4.
Concepts: design principles, explain design philosophy
- The designer explains the underlying principles or philosophies guiding the design of the Physics Lab online community.
- The underlying principles and approaches guiding the design and development of the product.

5.
Concepts: mention ongoing research, mentioning future experiments
- Designer mentions ongoing research or development.
- Designer mentions potential future experiments or features.

6.
Concepts: product improvement, research and development
- A designer discusses plans for improving the product.
- A designer discusses research and development activities.

7.
Concepts: long-term planning, planning project tasks
- A designer discusses long-term plans or goals for the project.
- Designer discusses project planning or organization.

8.
Concepts: development goals, discussing future plans
- Designer discusses long-term goals or objectives for the physics lab.
- Designer discusses potential future plans or considerations for the Physics Lab online community.

9.
Concepts: feature stability, future compatibility
- A designer discusses or prioritizes the stability or reliability of a feature or application.
- A designer considers or plans for future compatibility, updates, or maintenance of the application or feature.

10.
Concepts: share potential future direction, suggest future possibilities
- Designer shares potential future directions or interests.
- The designer suggests or discusses potential future possibilities or directions for the software or community.

11.
Concepts: promising future development, promising future consultation
- A designer promises to develop an app or feature in the future.
- Designer promises to consult with users or gather opinions in the future.

12.
Concepts: committing to a solution, commit to improvement
- Designer commits to providing a solution or feature in the future.
- A designer commits to improving the software, addressing user concerns, or incorporating feedback.

13.
Concepts: setting user expectations, set timeline expectation
- Designer sets user expectations for upcoming updates, releases, or features.
- A designer sets or adjusts expectations for the timeline of a specific task or feature release.

14.
Concepts: explaining delays, development timeline
- A designer explains a delay or provides an update on progress.
- A designer discusses the development timeline or schedule.

15.
Concepts: providing release timelines, provide android update timeline, sharing update schedules
- Providing a timeline or schedule for a release or update.
- A designer provides a timeline or schedule for an update or release.
- A designer shares information about the schedule or timeline for updates.

16.
Concepts: plan feature development, explanation of upcoming features
- Statements about planned or upcoming features or developments.
- Descriptions or explanations of upcoming features or developments.

17.
Concepts: decision-making, prioritizing development tasks, development prioritization
- A decision-making process or discussion about prioritizing tasks or features.
- Statements indicating the order in which tasks or features will be developed.
- Instances where designers discuss the prioritization of different features or sections to be developed.

18.
Concepts: ios review status, update on review status
- Designer provides an update on the review status of the iOS version.
- The designer provides an update on the review status of the online community.

19.
Concepts: announcement of plans, sharing development plans
- A user or designer announces plans or updates for the platform.
- The designer shares or mentions the development plan or roadmap for the online community.

20.
Concepts: confirming future updates, previewing upcoming features
- Designers mention or confirm future updates or features.
- A designer previews or announces upcoming features or updates.

21.
Concepts: implementing features, discussing release processes
- A designer discusses the implementation of a feature or update.
- A designer discusses the process of releasing an update or new version.

22.
Concepts: bug fixes, listing new features and updates
- A designer lists or describes bug fixes, patches, or updates to the application.
- A designer lists or enumerates new features, updates, or changes to the software.

23.
Concepts: update magnitude, describing update scope
- A designer highlights the significance or scope of an update.
- A user or designer describes the scope or extent of an update or new feature.

24.
Concepts: informing about updates, instruction and updates
- Designers notify users about updates or changes to the software or its components.
- Designers providing updates and instructions to help users understand and use the software effectively.

25.
Concepts: consider hardware limitations, mentioning system limitations
- User considers or discusses hardware limitations or constraints.
- User mentions limitations or constraints of their system or environment.

26.
Concepts: explaining limitations, acknowledge limitations
- Designers explain limitations or constraints of the platform or development team.
- The designer acknowledges limitations or constraints, often related to technical or resource issues.

27.
Concepts: consider technical requirements, discussing technical constraints
- The designer considers technical requirements or limitations.
- Instances where technical limitations or requirements are discussed.

28.
Concepts: feature complexity, compare feature complexities
- Mentioning the complexity or difficulty of a feature or task.
- Comparisons or discussions about the complexity of different features.

29.
Concepts: platform specific update, providing platform-specific information
- Updates or information specific to a particular platform.
- A designer provides information specific to a platform or device.

30.
Concepts: discussing compatibility, speculate on compatibility
- Designers discuss or check system compatibility issues.
- A designer speculates or discusses compatibility with different systems or devices.

31.
Concepts: assure compatibility, system requirements
- Designer assures compatibility with specific devices or systems.
- A designer discusses the technical requirements or compatibility of the software with specific devices or systems.

32.
Concepts: software effectiveness, sharing user experience
- Users share their positive experiences or impressions of the software's effectiveness.
- Instances where users share their experiences or opinions about using the software.
===
Here are the definitions for each code:

---
1.
Concepts: express interest, discussion of further interests
Relationship: The designer's expression of interest leads to a discussion of further interests.
Criteria: A designer expresses interest in a subject and discusses it beyond the immediate context.
Phrase: Expressing interest and discussing further

2.
Concepts: consideration, contemplation
Relationship: Consideration involves contemplation or thoughtfulness about an issue.
Criteria: A designer considers an issue and expresses thoughtfulness about it.
Phrase: Considering and contemplating

3.
Concepts: explaining plans, explain design intention, explain design rationale
Relationship: Explaining plans involves explaining design intentions and rationales.
Criteria: A designer explains their plans, intentions, and rationales behind a design decision.
Phrase: Explaining plans and design intentions

4.
Concepts: design principles, explain design philosophy
Relationship: Design principles are guided by an underlying philosophy.
Criteria: A designer explains the underlying principles and philosophies guiding the design.
Phrase: Explaining design principles and philosophy

5.
Concepts: mention ongoing research, mentioning future experiments
Relationship: Ongoing research may lead to future experiments.
Criteria: A designer mentions ongoing research and potential future experiments.
Phrase: Mentioning ongoing research and future experiments

6.
Concepts: product improvement, research and development
Relationship: Product improvement involves research and development activities.
Criteria: A designer discusses plans for improving the product through research and development.
Phrase: Discussing product improvement and research

7.
Concepts: long-term planning, planning project tasks
Relationship: Long-term planning involves planning project tasks.
Criteria: A designer discusses long-term plans and project tasks.
Phrase: Planning long-term and project tasks

8.
Concepts: development goals, discussing future plans
Relationship: Development goals involve discussing future plans.
Criteria: A designer discusses long-term goals and potential future plans for the project.
Phrase: Discussing development goals and future plans

9.
Concepts: feature stability, future compatibility
Relationship: Feature stability involves planning for future compatibility.
Criteria: A designer discusses or prioritizes feature stability and future compatibility.
Phrase: Prioritizing feature stability and compatibility

10.
Concepts: share potential future direction, suggest future possibilities
Relationship: Sharing potential future directions involves suggesting possibilities.
Criteria: A designer shares potential future directions and suggests possibilities for the software or community.
Phrase: Sharing potential future directions and possibilities

11.
Concepts: promising future development, promising future consultation
Relationship: Promising future development involves promising consultation.
Criteria: A designer promises to develop an app or feature and consult with users in the future.
Phrase: Promising future development and consultation

12.
Concepts: committing to a solution, commit to improvement
Relationship: Committing to a solution involves committing to improvement.
Criteria: A designer commits to providing a solution or feature and improving the software.
Phrase: Committing to solutions and improvement

13.
Concepts: setting user expectations, set timeline expectation
Relationship: Setting user expectations involves setting timeline expectations.
Criteria: A designer sets user expectations for upcoming updates or releases.
Phrase: Setting user expectations and timelines

14.
Concepts: explaining delays, development timeline
Relationship: Explaining delays involves discussing the development timeline.
Criteria: A designer explains a delay and provides an update on progress.
Phrase: Explaining delays and development timelines

15.
Concepts: providing release timelines, provide android update timeline, sharing update schedules
Relationship: Providing release timelines involves sharing update schedules.
Criteria: A designer provides a timeline or schedule for a release or update.
Phrase: Providing release timelines and update schedules

16.
Concepts: plan feature development, explanation of upcoming features
Relationship: Planning feature development involves explaining upcoming features.
Criteria: A designer plans feature development and explains upcoming features.
Phrase: Planning feature development and explaining features

17.
Concepts: decision-making, prioritizing development tasks, development prioritization
Relationship: Decision-making involves prioritizing development tasks.
Criteria: A designer makes decisions about prioritizing tasks or features.
Phrase: Making decisions and prioritizing development tasks

18.
Concepts: ios review status, update on review status
Relationship: iOS review status involves updating on the review status.
Criteria: A designer provides an update on the review status of the iOS version.
Phrase: Updating on iOS review status

19.
Concepts: announcement of plans, sharing development plans
Relationship: Announcing plans involves sharing development plans.
Criteria: A designer announces plans or updates for the platform and shares the development plan.
Phrase: Announcing plans and sharing development plans

20.
Concepts: confirming future updates, previewing upcoming features
Relationship: Confirming future updates involves previewing upcoming features.
Criteria: A designer confirms future updates and previews upcoming features.
Phrase: Confirming future updates and previewing features

21.
Concepts: implementing features, discussing release processes
Relationship: Implementing features involves discussing release processes.
Criteria: A designer discusses implementing features and the release process.
Phrase: Implementing features and discussing release processes

22.
Concepts: bug fixes, listing new features and updates
Relationship: Bug fixes involve listing new features and updates.
Criteria: A designer lists or describes bug fixes, patches, or updates to the application.
Phrase: Listing bug fixes and new features

23.
Concepts: update magnitude, describing update scope
Relationship: Update magnitude involves describing the update scope.
Criteria: A designer highlights the significance or scope of an update.
Phrase: Describing update magnitude and scope

24.
Concepts: informing about updates, instruction and updates
Relationship: Informing about updates involves providing instructions and updates.
Criteria: A designer notifies users about updates or changes and provides instructions.
Phrase: Informing about updates and providing instructions

25.
Concepts: consider hardware limitations, mentioning system limitations
Relationship: Considering hardware limitations involves mentioning system limitations.
Criteria: A user considers or discusses hardware limitations or constraints.
Phrase: Considering hardware limitations and mentioning system constraints

26.
Concepts: explaining limitations, acknowledge limitations
Relationship: Explaining limitations involves acknowledging limitations.
Criteria: A designer explains limitations or constraints of the platform or development team.
Phrase: Explaining and acknowledging limitations

27.
Concepts: consider technical requirements, discussing technical constraints
Relationship: Considering technical requirements involves discussing technical constraints.
Criteria: A designer considers technical requirements or limitations.
Phrase: Considering technical requirements and discussing constraints

28.
Concepts: feature complexity, compare feature complexities
Relationship: Feature complexity involves comparing complexities.
Criteria: A designer mentions the complexity or difficulty of a feature or task.
Phrase: Comparing feature complexities

29.
Concepts: platform specific update, providing platform-specific information
Relationship: Platform-specific updates involve providing platform-specific information.
Criteria: A designer provides updates or information specific to a particular platform.
Phrase: Providing platform-specific updates and information

30.
Concepts: discussing compatibility, speculate on compatibility
Relationship: Discussing compatibility involves speculating on compatibility.
Criteria: A designer discusses or checks system compatibility issues.
Phrase: Discussing and speculating on compatibility

31.
Concepts: assure compatibility, system requirements
Relationship: Assuring compatibility involves discussing system requirements.
Criteria: A designer assures compatibility with specific devices or systems.
Phrase: Assuring compatibility and discussing system requirements

32.
Concepts: software effectiveness, sharing user experience
Relationship: Software effectiveness involves sharing user experiences.
Criteria: A user shares their positive experiences or impressions of the software's effectiveness.
Phrase: Sharing user experiences and software effectiveness