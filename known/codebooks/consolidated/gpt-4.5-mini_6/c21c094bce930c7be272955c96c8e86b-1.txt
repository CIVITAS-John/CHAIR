You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (6 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
6. 
Concepts: {Repeat the input 6}
Relationship: {What is logical relationship between concepts in code 6, or N/A if not applicable}
Criteria: {Who did what, and how for code 6}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: release software updates, announce important updates
- Designers announce and provide software updates, including new features.
- Designers regularly communicate new features and milestones to the community.

2.
Concepts: acknowledgment and support, acknowledge and promote appreciation
- Instances where support and acknowledgment are expressed within the community.
- Users express gratitude for assistance provided by others and encourage community appreciation.

3.
Concepts: make feature requests, request additional experimental features
- Users identify gaps in software capabilities and express specific functionalities needed for enhancement.
- Users request the addition of experimental features to broaden the platform's scope.

4.
Concepts: express anticipation for updates, respond to developer's earlier information on feature development
- Users and designers express enthusiasm for ideas and optimism for ongoing feature development.
- Users affirm their appreciation for developers' prior information regarding development, signaling positive reception.

5.
Concepts: share experiences, share successful experiences with software
- Users share their past experiences and support each other in using and improving the software.
- Users express satisfaction and share positive engagement experiences with the software in teaching.

6.
Concepts: plan future updates
- Designers express intentions for future software updates while acknowledging necessary tasks needed for future improvements.
- Designers outline current focuses and communicate long-term development goals to the community.
===
---
Definitions for each code (6 in total):
1.
Concepts: release software updates, announce important updates  
Relationship: The concepts are interrelated as announcing updates is a form of releasing them and ensures the community is informed.  
Criteria: Designers announce and provide software updates, including new features, while regularly communicating milestones to the community.  
Phrase: Communicate software updates.

2.
Concepts: acknowledgment and support, acknowledge and promote appreciation  
Relationship: These concepts are linked as acknowledgment involves expressing support, and promoting appreciation enhances community bonds.  
Criteria: Community members express support and acknowledgment while promoting appreciation for others' assistance.  
Phrase: Foster community support.

3.
Concepts: make feature requests, request additional experimental features  
Relationship: The concepts are connected as making feature requests often leads to a need for specific additional functionalities.  
Criteria: Users identify gaps in software capabilities and actively request additional experimental features for enhancement.  
Phrase: Solicit feature enhancements.

4.
Concepts: express anticipation for updates, respond to developer's earlier information on feature development  
Relationship: The concepts reflect a reciprocal relationship where users respond positively to prior information and express enthusiasm for future updates.  
Criteria: Users and designers express enthusiasm and acknowledgment regarding updates and prior developer information.  
Phrase: Convey excitement for updates.

5.
Concepts: share experiences, share successful experiences with software  
Relationship: These concepts are closely tied as sharing successful experiences encourages users to share broader experiences, creating a supportive environment.  
Criteria: Users share their successful experiences and support each other in using and improving the software.  
Phrase: Exchange successful experiences.

6.
Concepts: plan future updates  
Relationship: The concept of planning future updates is central to outlining the vision and tasks for software development.  
Criteria: Designers express intentions and outline necessary tasks for future software improvements to the community.  
Phrase: Outline future development plans.  
---