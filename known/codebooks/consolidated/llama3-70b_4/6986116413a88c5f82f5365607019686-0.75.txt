You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (21 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
21. 
Concepts: {Repeat the input 21}
Relationship: {What is logical relationship between concepts in code 21, or N/A if not applicable}
Criteria: {Who did what, and how for code 21}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: agree to implement, concurring on design ideas
- Designers agree to implement user suggestions or requests, fostering collaboration.
- Agreement or concurrence with design ideas or suggestions

2.
Concepts: practical advice, offer special tips
- A designer provides practical advice or a tip.
- The designer provides special tips or shortcuts for using the platform.

3.
Concepts: user support, provide technical support
- Assistance and support provided by designers to help users effectively use the product.
- Instances where designers provide technical support or information about the software.

4.
Concepts: share knowledge, collaborative learning
- Designer shares their knowledge or expertise with users.
- Designer promotes collaborative learning or sharing among users.

5.
Concepts: workaround or solution sharing, provide temporary solution
- A designer shares a workaround or solution to a problem.
- A designer provides a temporary solution or workaround to overcome a usability issue.

6.
Concepts: open to alternatives, offering alternative solutions
- The designer mentions flexibility in design or alternative approaches.
- A user or designer offers an alternative solution or option.

7.
Concepts: offering solutions, share potential solutions
- Designers offer solutions or problem-solving advice to users.
- A designer shares potential solutions or ideas.

8.
Concepts: engage in troubleshooting, collaborate on problem-solving
- Designers or users troubleshoot an issue or problem.
- Moments where designers and users work together to address issues.

9.
Concepts: raise related issue, raise a concern for the new feature
- The designer raises a related issue or question.
- The designer raises a concern or question about a new feature or update.

10.
Concepts: seek technical assistance, ask for teachers' help
- A designer seeks technical assistance or help.
- A designer asks for help or input from teachers or experts in the field.

11.
Concepts: usability need, community need, indicating user needs
- User highlights the need for improved usability or functionality
- A user expresses a need or desire for a feature or functionality that does not exist in the current software.
- A user expresses a need or requirement for the software.

12.
Concepts: further suggestions, subject expansion suggestion
- User provides additional suggestions or ideas.
- A user or designer suggests expanding the subject matter or scope.

13.
Concepts: making user requests, suggesting new features
- Users make requests or suggestions for new features or demonstrations.
- Users suggest new features or improvements to the platform.

14.
Concepts: feature request invitation, suggesting collaboration
- Designers invite users to suggest new features or improvements.
- A user suggests a collaboration or requests a specific feature or functionality from the designers.

15.
Concepts: request additional experiments, requesting feature enhancements
- User requests additional experiments or features in the software.
- Users request new features or improvements for the Physics Lab tool.

16.
Concepts: provide comparative feedback, comparison with other applications
- User compares the software to others, highlighting its advantages.
- A user compares the online community or its features to other applications.

17.
Concepts: share a user experience, reflect on past experience, shared experiences and support
- Instances where users share their experiences or opinions about using the software.
- Designers or users share past experiences or anecdotes related to the software.
- Users and designers sharing experiences and supporting each other in using and improving the software.

18.
Concepts: user interface, discuss software usability, ease of use
- Discussing the user interface or user experience of a tool.
- User discusses the usability or practicality of the software.
- Discussions related to the ease of use and user-friendliness of the software.

19.
Concepts: discussing usability, design discussion
- Designers discuss or consider the usability or instructional design of the software.
- The designer engages in discussions about design decisions, features, or technical aspects of the platform.

20.
Concepts: discuss input methods, interface layout decisions
- A designer discusses input methods or user interface aspects.
- A user or designer discusses interface layout decisions.

21.
Concepts: feature discussion, feature flexibility discussion
- Discussing or debating the merits of a particular feature.
- Discussion of feature flexibility or customization options.
===
Here are the definitions for each code:

---
1.
Concepts: agree to implement, concurring on design ideas
Relationship: Agreement on design ideas leads to implementation.
Criteria: Designers agree to implement user suggestions or requests.
Phrase: Concur on design ideas.

2.
Concepts: practical advice, offer special tips
Relationship: Designers provide tips as a form of practical advice.
Criteria: Designers offer special tips or shortcuts for using the platform.
Phrase: Offer practical advice.

3.
Concepts: user support, provide technical support
Relationship: User support involves providing technical support.
Criteria: Designers provide technical support or information about the software.
Phrase: Provide technical support.

4.
Concepts: share knowledge, collaborative learning
Relationship: Sharing knowledge promotes collaborative learning.
Criteria: Designers share their knowledge or expertise with users.
Phrase: Share knowledge.

5.
Concepts: workaround or solution sharing, provide temporary solution
Relationship: Workarounds provide temporary solutions to problems.
Criteria: Designers share workarounds or solutions to overcome usability issues.
Phrase: Share workarounds.

6.
Concepts: open to alternatives, offering alternative solutions
Relationship: Openness to alternatives leads to offering alternative solutions.
Criteria: Designers offer alternative solutions or options.
Phrase: Offer alternative solutions.

7.
Concepts: offering solutions, share potential solutions
Relationship: Offering solutions involves sharing potential solutions.
Criteria: Designers offer solutions or problem-solving advice to users.
Phrase: Offer solutions.

8.
Concepts: engage in troubleshooting, collaborate on problem-solving
Relationship: Troubleshooting involves collaborative problem-solving.
Criteria: Designers and users work together to address issues.
Phrase: Engage in troubleshooting.

9.
Concepts: raise related issue, raise a concern for the new feature
Relationship: Raising related issues leads to concerns about new features.
Criteria: Designers raise concerns or questions about new features or updates.
Phrase: Raise concerns.

10.
Concepts: seek technical assistance, ask for teachers' help
Relationship: Seeking technical assistance involves asking for help.
Criteria: Designers ask for help or input from teachers or experts.
Phrase: Seek technical assistance.

11.
Concepts: usability need, community need, indicating user needs
Relationship: User needs are indicated through expressing usability needs.
Criteria: Users express needs or desires for improved usability or functionality.
Phrase: Indicate user needs.

12.
Concepts: further suggestions, subject expansion suggestion
Relationship: Further suggestions involve expanding the subject matter.
Criteria: Users provide additional suggestions or ideas.
Phrase: Suggest expansions.

13.
Concepts: making user requests, suggesting new features
Relationship: User requests involve suggesting new features.
Criteria: Users make requests or suggestions for new features or demonstrations.
Phrase: Make user requests.

14.
Concepts: feature request invitation, suggesting collaboration
Relationship: Inviting feature requests involves suggesting collaboration.
Criteria: Designers invite users to suggest new features or improvements.
Phrase: Invite feature requests.

15.
Concepts: request additional experiments, requesting feature enhancements
Relationship: Requests for additional experiments involve feature enhancements.
Criteria: Users request new features or improvements for the Physics Lab tool.
Phrase: Request enhancements.

16.
Concepts: provide comparative feedback, comparison with other applications
Relationship: Comparative feedback involves comparing to other applications.
Criteria: Users compare the software to others, highlighting its advantages.
Phrase: Provide comparative feedback.

17.
Concepts: share a user experience, reflect on past experience, shared experiences and support
Relationship: Sharing user experiences involves reflecting on past experiences.
Criteria: Users share their experiences or opinions about using the software.
Phrase: Share user experiences.

18.
Concepts: user interface, discuss software usability, ease of use
Relationship: Discussing user interface involves discussing usability and ease of use.
Criteria: Users discuss the usability or practicality of the software.
Phrase: Discuss user interface.

19.
Concepts: discussing usability, design discussion
Relationship: Discussing usability involves design discussion.
Criteria: Designers discuss or consider the usability or instructional design of the software.
Phrase: Discuss design.

20.
Concepts: discuss input methods, interface layout decisions
Relationship: Discussing input methods involves interface layout decisions.
Criteria: Designers discuss input methods or user interface aspects.
Phrase: Discuss interface layout.

21.
Concepts: feature discussion, feature flexibility discussion
Relationship: Feature discussion involves discussing feature flexibility.
Criteria: Designers discuss or debate the merits of a particular feature.
Phrase: Discuss feature flexibility.