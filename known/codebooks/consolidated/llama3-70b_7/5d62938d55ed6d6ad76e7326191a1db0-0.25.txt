You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (25 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
25. 
Concepts: {Repeat the input 25}
Relationship: {What is logical relationship between concepts in code 25, or N/A if not applicable}
Criteria: {Who did what, and how for code 25}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: shares feature roadmap, sharing release schedules
- Sharing a timeline or roadmap for feature development or implementation.
- Designers share information about the release or development of the app or new features.

2.
Concepts: potential update mention, promising future consultation, confirming future features
- A designer mentions a potential future update or feature.
- Designers promise to consult with users or implement features in the future.
- Designers confirm or promise the development of a future feature or improvement.

3.
Concepts: making announcements, community announcement
- Designers announce plans or make a general announcement, sharing information with the community.
- A public announcement or notification about updates, changes, or plans for the community or app.

4.
Concepts: improving features, planning updates
- Designers discuss or plan improvements to the software or its features.
- Designers plan or announce future updates or changes to the software, listing new features or components.

5.
Concepts: proposing solutions, collaborating on solutions
- Designers or users propose solutions.
- Designers and users work together to address issues.

6.
Concepts: inquiring about user background, gathering requirements to understand needs
- Designers inquire about users' backgrounds or roles, gathering context or information to better understand their needs.
- Designer gathers detailed requirements to understand user needs.

7.
Concepts: indicate potential user needs, expressing user needs
- Indicating potential user needs or requirements.
- Designers or users express the need for specific features or functionalities, providing specific details or requirements.

8.
Concepts: reassuring users, user communication
- Designers reassure users about progress and express gratitude or encouragement.
- Designers communicate with users, often providing updates, explanations, or reassurances.

9.
Concepts: affirming a point, express agreement
- Designers or users acknowledge or agree with a point or concern.
- Users or designers confirm or agree with a statement, idea, or suggestion.

10.
Concepts: justify effort, providing rationale
- Designers explain the need or justify the effort behind a feature or update.
- Users or designers provide reasons or justification for a decision or feature, explaining the rationale behind design or development decisions.

11.
Concepts: explaining complexity, explaining functionality
- Designers explain the complexity or challenges of implementing a feature, comparing the complexity of different features.
- Designers explain how features or components work, providing detailed information about features or components, and clarifying technical aspects or functionality.

12.
Concepts: requesting features, request additional experiments
- Users request new features or improvements for the Physics Lab tool.
- A user requests additional experiments, features, or content for the software.

13.
Concepts: suggest platform expansion, proposing new features
- A user suggests or requests the expansion of the platform to include new areas or topics.
- Users or designers propose new features or invite suggestions for improvements, suggesting new educational features or enhancements.

14.
Concepts: invite user participation, inquiring user input for future iterations
- Invitations or requests for user participation or feedback.
- Soliciting or encouraging user input or suggestions for future iterations.

15.
Concepts: refining design, improving usability
- Designers refine or adjust features based on user feedback or needs, discussing or making adjustments to the platform's components or properties.
- Designers focus on improving the usability of the software, committing to addressing user concerns or incorporating feedback.

16.
Concepts: discussing future plans, sharing future design plans
- Designers or users discuss or mention plans for the future development of the online community or Physics Lab.
- Designers share potential future directions or ideas for the Physics Lab platform with the community.

17.
Concepts: explaining focus areas, discussing experimental simulations
- Designers outline development priorities or plans for the Physics Lab, and users agree with the focus areas or priorities of the Physics Lab development.
- Designers and users discuss or plan simulated experiments or assessments in the Physics Lab.

18.
Concepts: ask for teachers' help, consulting community
- Designer asks for help or input from teachers or experts.
- A designer seeks input, advice, or opinions from the community or teachers on specific aspects of the software.

19.
Concepts: requesting user manuals, requesting usage guidance
- Users request user manuals or instructional materials, often justifying their request.
- User requests guidance or instructions on how to use a feature or the platform.

20.
Concepts: inquiring about platform compatibility, inquiring about platform availability
- Users inquire about platform compatibility or availability on a specific device.
- Users ask about the availability of the Physics Lab on multiple platforms, including the PC version.

21.
Concepts: asking questions, inquiring about technical details
- Users ask questions to seek information or clarification.
- A user shows interest in technical details, asking questions or seeking clarification.

22.
Concepts: follow-up questions, seeking clarification
- Asking follow-up questions to clarify or gather more information.
- Seeking confirmation or clarification about specific details or features.

23.
Concepts: reciprocate greeting, exchanging greetings
- Responding to or initiating greetings or social interactions.
- Users initiate or respond to greetings, acknowledging the presence of others in the community, and designers or users greet or welcome others in the online community.

24.
Concepts: seeking software information
- Users ask questions to gain knowledge or resources related to the software.
- Users inquire about the timeline or status of updates or releases.

25.
Concepts: expressing gratitude and appreciation
- Users express gratitude and appreciation for the software.
- Expressions of appreciation and encouragement help build a positive community atmosphere, and community members respond to each other, often with gratitude, appreciation, or acknowledgement, providing support.
===
Here are the definitions for each code:

---
1.
Concepts: shares feature roadmap, sharing release schedules
Relationship: The concepts are related as they both involve designers sharing information about future plans.
Criteria: Designers share information about the development or release of features or the app.
Phrase: Sharing development timelines.

2.
Concepts: potential update mention, promising future consultation, confirming future features
Relationship: The concepts are related as they all involve designers making commitments or promises about future developments.
Criteria: Designers mention or promise future updates, features, or consultations.
Phrase: Promising future developments.

3.
Concepts: making announcements, community announcement
Relationship: The concepts are related as they both involve designers sharing information with the community.
Criteria: Designers make public announcements or share information with the community.
Phrase: Making community announcements.

4.
Concepts: improving features, planning updates
Relationship: The concepts are related as they both involve designers planning or discussing changes to the software.
Criteria: Designers plan or discuss improvements to the software or its features.
Phrase: Planning software updates.

5.
Concepts: proposing solutions, collaborating on solutions
Relationship: The concepts are related as they both involve designers and users working together to address issues.
Criteria: Designers and users propose or work together on solutions.
Phrase: Collaborating on solutions.

6.
Concepts: inquiring about user background, gathering requirements to understand needs
Relationship: The concepts are related as they both involve designers gathering information to understand user needs.
Criteria: Designers gather information about users' backgrounds or needs.
Phrase: Gathering user requirements.

7.
Concepts: indicate potential user needs, expressing user needs
Relationship: The concepts are related as they both involve expressing or identifying user needs.
Criteria: Users or designers express or indicate user needs or requirements.
Phrase: Expressing user needs.

8.
Concepts: reassuring users, user communication
Relationship: The concepts are related as they both involve designers communicating with users.
Criteria: Designers communicate with users, providing updates or reassurances.
Phrase: Communicating with users.

9.
Concepts: affirming a point, express agreement
Relationship: The concepts are related as they both involve acknowledging or agreeing with a point.
Criteria: Designers or users agree with or acknowledge a point or concern.
Phrase: Expressing agreement.

10.
Concepts: justify effort, providing rationale
Relationship: The concepts are related as they both involve explaining the reasoning behind a decision.
Criteria: Designers or users provide reasons or justification for a decision or feature.
Phrase: Providing rationale.

11.
Concepts: explaining complexity, explaining functionality
Relationship: The concepts are related as they both involve designers explaining technical aspects.
Criteria: Designers explain the complexity or functionality of features or components.
Phrase: Explaining technical aspects.

12.
Concepts: requesting features, request additional experiments
Relationship: The concepts are related as they both involve users making requests.
Criteria: Users request new features, improvements, or experiments.
Phrase: Requesting new features.

13.
Concepts: suggest platform expansion, proposing new features
Relationship: The concepts are related as they both involve users suggesting new ideas.
Criteria: Users suggest or propose new features or platform expansions.
Phrase: Proposing new features.

14.
Concepts: invite user participation, inquiring user input for future iterations
Relationship: The concepts are related as they both involve designers seeking user input.
Criteria: Designers invite or request user input for future developments.
Phrase: Seeking user input.

15.
Concepts: refining design, improving usability
Relationship: The concepts are related as they both involve designers making adjustments to the platform.
Criteria: Designers refine or improve the usability of the software.
Phrase: Refining design.

16.
Concepts: discussing future plans, sharing future design plans
Relationship: The concepts are related as they both involve designers sharing plans for the future.
Criteria: Designers discuss or share plans for future developments.
Phrase: Sharing future plans.

17.
Concepts: explaining focus areas, discussing experimental simulations
Relationship: The concepts are related as they both involve designers discussing development priorities.
Criteria: Designers outline development priorities or discuss experimental simulations.
Phrase: Discussing development priorities.

18.
Concepts: ask for teachers' help, consulting community
Relationship: The concepts are related as they both involve designers seeking input from others.
Criteria: Designers ask for help or input from teachers or the community.
Phrase: Consulting the community.

19.
Concepts: requesting user manuals, requesting usage guidance
Relationship: The concepts are related as they both involve users seeking guidance.
Criteria: Users request user manuals or guidance on using the platform.
Phrase: Requesting user guidance.

20.
Concepts: inquiring about platform compatibility, inquiring about platform availability
Relationship: The concepts are related as they both involve users inquiring about platform details.
Criteria: Users inquire about platform compatibility or availability.
Phrase: Inquiring about platform details.

21.
Concepts: asking questions, inquiring about technical details
Relationship: The concepts are related as they both involve users seeking information.
Criteria: Users ask questions to seek information or clarification.
Phrase: Asking questions.

22.
Concepts: follow-up questions, seeking clarification
Relationship: The concepts are related as they both involve users seeking clarification.
Criteria: Users ask follow-up questions to clarify or gather more information.
Phrase: Seeking clarification.

23.
Concepts: reciprocate greeting, exchanging greetings
Relationship: The concepts are related as they both involve social interactions.
Criteria: Users or designers initiate or respond to greetings.
Phrase: Exchanging greetings.

24.
Concepts: seeking software information
Relationship: The concepts are related as they both involve users seeking knowledge.
Criteria: Users ask questions to gain knowledge or resources about the software.
Phrase: Seeking software information.

25.
Concepts: expressing gratitude and appreciation
Relationship: The concepts are related as they both involve users expressing positive emotions.
Criteria: Users express gratitude and appreciation for the software or community.
Phrase: Expressing gratitude.