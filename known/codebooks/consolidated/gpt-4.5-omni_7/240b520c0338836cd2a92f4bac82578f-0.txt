You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (18 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
18. 
Concepts: {Repeat the input 18}
Relationship: {What is logical relationship between concepts in code 18, or N/A if not applicable}
Criteria: {Who did what, and how for code 18}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: commit to improvement, integrate user feedback, prioritize user feedback
- Designers commit to improving the software based on user feedback.
- Designers appreciate user feedback and mention adding it in future updates.
- Designers prioritize user feedback in their development plans.

2.
Concepts: community feedback, elicit feedback
- Users providing feedback and suggestions to improve the product.
- Eliciting feedback from the community about features, characteristics, or components.

3.
Concepts: offer support and personalized assistance, offer problem-solving and ongoing support
- Designers offer help, assistance, and personalized support to users.
- A designer offers help for problems and ongoing support for any issues encountered.

4.
Concepts: commit to providing a solution, offer solutions and resolve concerns
- Designers commit to providing a solution to a user's request.
- Designers offer solutions and respond to resolve user concerns or questions.

5.
Concepts: plan future developments, discuss and plan future projects
- Designers plan and outline the roadmap for future features.
- Designers discuss potential future interests and outline development priorities.

6.
Concepts: preview upcoming updates, explain future updates
- Designers share visual updates and introduce the content of upcoming updates.
- Designers explain plans, discuss potential updates, and describe the scope of future updates.

7.
Concepts: announce community updates, inform about component changes
- Designers make general announcements and inform the community about updates and changes.
- Designers introduce new components and announce updates to existing ones.

8.
Concepts: technical detail, explain technical details
- Technical details provided about features, components, and adjustments.
- Designers provide technical details and explain the functionality of features.

9.
Concepts: provide rationale, explain design rationale
- Users or designers provide rationale or reasons for certain actions or decisions.
- Designers explain the goals and philosophy guiding the software design.

10.
Concepts: discuss limitations, acknowledge limitations
- Designers mention team limitations and explain system constraints.
- Acknowledging limitations or constraints of a feature or product.

11.
Concepts: teacher identity, indicate professional role
- Identifying oneself or another as a teacher, specifying the level of teaching.
- Users indicate and confirm their professional roles, such as being a teacher.

12.
Concepts: share personal experiences, share teaching and positive experiences
- Users share past incidents and personal anecdotes related to the software.
- Users share their teaching experiences and positive classroom outcomes related to the software.

13.
Concepts: engaging positively, give positive feedback
- Users provide positive responses or engage in positive interactions.
- Users express approval and provide positive reviews and feedback.

14.
Concepts: express update anticipation, show interest in updates
- Users express anticipation or eagerness for updates.
- Users inquire about updates and express interest in platform development.

15.
Concepts: express user needs, clarify preferences and suggest prioritization
- Users indicate specific needs and highlight usability requirements.
- Users express their preferences and suggest prioritizing certain features or aspects of the software.

16.
Concepts: request documentation, reiterate need for manual
- Users request user manuals and justify their need for documentation.
- Reiterating the need for a user manual or documentation.

17.
Concepts: expressive, use non-verbal communication
- A user or designer uses expressive language or emojis to convey emotions.
- Users communicate and express emotions using emojis or other non-verbal forms.

18.
Concepts: raise concerns, express dissatisfaction
- Users express concerns about updates or features.
- Users express frustration and mention technical issues and limitations.
===
---
Definitions for each code (18 in total):
1.
Concepts: commit to improvement, integrate user feedback, prioritize user feedback
Relationship: All concepts revolve around the designers' dedication to user feedback.
Criteria: Designers commit to improving the software by integrating and prioritizing user feedback in their development plans.
Phrase: Prioritize user feedback

2.
Concepts: community feedback, elicit feedback
Relationship: Both concepts involve the process of gathering feedback from the community.
Criteria: Users provide feedback and suggestions, while designers actively elicit feedback from the community.
Phrase: Elicit community feedback

3.
Concepts: offer support and personalized assistance, offer problem-solving and ongoing support
Relationship: Both concepts focus on providing support to users.
Criteria: Designers offer personalized assistance and ongoing support to help users solve problems.
Phrase: Provide personalized support

4.
Concepts: commit to providing a solution, offer solutions and resolve concerns
Relationship: Both concepts involve addressing user concerns with solutions.
Criteria: Designers commit to providing solutions and actively resolve user concerns or questions.
Phrase: Resolve user concerns

5.
Concepts: plan future developments, discuss and plan future projects
Relationship: Both concepts involve planning for future developments.
Criteria: Designers discuss and outline plans for future features and projects.
Phrase: Plan future developments

6.
Concepts: preview upcoming updates, explain future updates
Relationship: Both concepts involve communicating about future updates.
Criteria: Designers share previews and explain the content and scope of upcoming updates.
Phrase: Preview future updates

7.
Concepts: announce community updates, inform about component changes
Relationship: Both concepts involve informing the community about updates and changes.
Criteria: Designers announce updates and inform the community about changes to components.
Phrase: Announce updates

8.
Concepts: technical detail, explain technical details
Relationship: Both concepts involve providing technical information.
Criteria: Designers provide and explain technical details about features and components.
Phrase: Explain technical details

9.
Concepts: provide rationale, explain design rationale
Relationship: Both concepts involve explaining the reasoning behind decisions.
Criteria: Designers provide and explain the rationale behind their design decisions.
Phrase: Explain design rationale

10.
Concepts: discuss limitations, acknowledge limitations
Relationship: Both concepts involve recognizing constraints.
Criteria: Designers discuss and acknowledge the limitations and constraints of features or the system.
Phrase: Acknowledge limitations

11.
Concepts: teacher identity, indicate professional role
Relationship: Both concepts involve identifying professional roles.
Criteria: Users identify themselves or others as teachers and specify their professional roles.
Phrase: Indicate professional role

12.
Concepts: share personal experiences, share teaching and positive experiences
Relationship: Both concepts involve sharing personal and teaching experiences.
Criteria: Users share personal anecdotes and positive teaching experiences related to the software.
Phrase: Share personal experiences

13.
Concepts: engaging positively, give positive feedback
Relationship: Both concepts involve positive interactions.
Criteria: Users engage positively and provide positive feedback and reviews.
Phrase: Give positive feedback

14.
Concepts: express update anticipation, show interest in updates
Relationship: Both concepts involve showing interest in updates.
Criteria: Users express anticipation and interest in upcoming updates.
Phrase: Show interest in updates

15.
Concepts: express user needs, clarify preferences and suggest prioritization
Relationship: Both concepts involve communicating user needs and preferences.
Criteria: Users express their needs, clarify preferences, and suggest prioritizing certain features.
Phrase: Express user needs

16.
Concepts: request documentation, reiterate need for manual
Relationship: Both concepts involve requesting documentation.
Criteria: Users request and reiterate the need for user manuals and documentation.
Phrase: Request documentation

17.
Concepts: expressive, use non-verbal communication
Relationship: Both concepts involve non-verbal communication.
Criteria: Users or designers use expressive language or non-verbal forms like emojis to convey emotions.
Phrase: Use non-verbal communication

18.
Concepts: raise concerns, express dissatisfaction
Relationship: Both concepts involve expressing negative feedback.
Criteria: Users raise concerns and express dissatisfaction with updates or features.
Phrase: Express dissatisfaction
---