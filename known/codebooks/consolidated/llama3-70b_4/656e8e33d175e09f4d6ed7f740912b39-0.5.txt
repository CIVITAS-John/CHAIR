You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (13 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
13. 
Concepts: {Repeat the input 13}
Relationship: {What is logical relationship between concepts in code 13, or N/A if not applicable}
Criteria: {Who did what, and how for code 13}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: providing solutions, share potential solutions
- Designer offers, provides, or suggests solutions to users' problems.
- Designer provides potential solutions to a problem or issue

2.
Concepts: compare task complexity, compares feature complexity
- Comparing the complexity or difficulty of different tasks or features.
- Designer compares the complexity of different features or tasks.

3.
Concepts: explaining complexity of updates, discussing and communicating complexity
- Designer explains the complexity of updates or changes.
- Designer discusses the complexity or difficulty of a task or update, and communicates the complexity or challenges of updates or releases.

4.
Concepts: inquiring about problems, inquiring about user issues and difficulties
- Designer asks about problems or issues encountered by users, and inquires about issues or problems encountered by users.
- Designer asks users about their problems or issues, inquires about user issues or problems encountered during use, and probes for user difficulties or problems encountered during use.

5.
Concepts: expresses confusion, expressing uncertainty
- Confusion or uncertainty is expressed about how to use the software or a feature.
- A user expresses uncertainty or confusion about the software or a specific feature.

6.
Concepts: engages in troubleshooting, engaging in problem-solving or troubleshooting
- Troubleshooting or technical issues are addressed or discussed.
- Engaging in problem-solving or troubleshooting activities.

7.
Concepts: product gap, identifying software gaps
- Identifying gaps or limitations in the current software or features.
- User identifies gaps in existing software and expresses feature wishes, and identifies a gap or limitation in existing tools or software.

8.
Concepts: engaging the community
- The designer engages the community with updates or discussions.
- Users engage with the community by asking questions, seeking information, or providing feedback.

9.
Concepts: express appreciation
- A user expresses appreciation or gratitude for effort, work, or a specific feature.
- Students express positive opinions or reactions about the online community or its features.

10.
Concepts: prompting feedback
- A user expresses needs or wishes for software improvement by prompting users for feedback.
- Designer encourages user participation and feedback.

11.
Concepts: considers long-term implications
- Considers the potential impact of current decisions on future development.
- Designer considers future technical issues or compatibility.

12.
Concepts: providing download information
- A designer directs users to group files for downloading.
- Users request download information, and designers provide download information.

13.
Concepts: providing status updates
- The designer provides updates on release, approval, or feature status.
- The designer provides status updates or communicates progress.
===
Here are the definitions for each code:

---
1.
Concepts: providing solutions, share potential solutions
Relationship: The concepts are related as they both involve offering possible answers to problems or issues.
Criteria: Designer offers or provides potential solutions to users' problems or issues.
Phrase: Offers solutions

2.
Concepts: compare task complexity, compares feature complexity
Relationship: The concepts are related as they both involve evaluating the difficulty or complexity of tasks or features.
Criteria: Designer compares the complexity of different tasks or features.
Phrase: Compares complexity

3.
Concepts: explaining complexity of updates, discussing and communicating complexity
Relationship: The concepts are related as they both involve clarifying the difficulty or complexity of updates or tasks.
Criteria: Designer explains or discusses the complexity of updates or tasks and communicates the challenges or difficulties.
Phrase: Explains complexity

4.
Concepts: inquiring about problems, inquiring about user issues and difficulties
Relationship: The concepts are related as they both involve asking users about their problems or issues.
Criteria: Designer inquires about users' problems or issues encountered during use.
Phrase: Inquires about problems

5.
Concepts: expresses confusion, expressing uncertainty
Relationship: The concepts are related as they both involve expressing doubt or unclearness about using the software or a feature.
Criteria: User expresses uncertainty or confusion about the software or a specific feature.
Phrase: Expresses confusion

6.
Concepts: engages in troubleshooting, engaging in problem-solving or troubleshooting
Relationship: The concepts are related as they both involve addressing or discussing technical issues.
Criteria: Designer or user engages in problem-solving or troubleshooting activities.
Phrase: Troubleshoots issues

7.
Concepts: product gap, identifying software gaps
Relationship: The concepts are related as they both involve recognizing limitations or shortcomings in the current software or features.
Criteria: User identifies gaps in existing software and expresses feature wishes.
Phrase: Identifies gaps

8.
Concepts: engaging the community
Relationship: The concepts are related as they both involve interacting with the community through updates, discussions, or feedback.
Criteria: Designer or user engages with the community by asking questions, seeking information, or providing feedback.
Phrase: Engages community

9.
Concepts: express appreciation
Relationship: The concepts are related as they both involve expressing gratitude or positive opinions.
Criteria: User expresses appreciation or gratitude for effort, work, or a specific feature.
Phrase: Expresses appreciation

10.
Concepts: prompting feedback
Relationship: The concepts are related as they both involve encouraging user participation and feedback.
Criteria: Designer prompts users for feedback or encourages user participation.
Phrase: Prompts feedback

11.
Concepts: considers long-term implications
Relationship: The concepts are related as they both involve thinking about the potential impact of current decisions on future development.
Criteria: Designer considers the potential impact of current decisions on future development.
Phrase: Considers implications

12.
Concepts: providing download information
Relationship: The concepts are related as they both involve providing or requesting information about downloading files.
Criteria: Designer provides download information or directs users to group files for downloading.
Phrase: Provides download information

13.
Concepts: providing status updates
Relationship: The concepts are related as they both involve providing information about the status of releases, approvals, or features.
Criteria: Designer provides updates on release, approval, or feature status.
Phrase: Provides status updates