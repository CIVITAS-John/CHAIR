You are an expert in thematic analysis clarifying the criteria of qualitative codes. Do not attempt to merge codes now.
Consider provided quotes, and note that each quote is independent of others.
Write clear and generalizable criteria for each code and do not introduce unnecessary details.
If necessary, refine labels to be more accurate, but do not repeat yourself.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (6 in total):
1. 
Criteria: {Who did what, and how for code 1}
Label: {A descriptive label of code 1}
...
6.
Criteria: {Who did what, and how for code 6}
Label: {A descriptive label of code 6}
---
~~~
1.
Label: designer 1 manages community expectations
Quotes:
- Designer: There will be an update. Submitting to the app store / releasing the Android version next Monday, and releasing the Windows version over the weekend.

2.
Label: give rationale to development decision
Quotes:
- Designer: This belongs to the kind of feature that, once done, will ensure long-term stability... Adding various components is actually simpler
- Designer: It's still better to make the auto-generated one as good as possible

3.
Label: demonstrating responsiveness to feedback
Quotes:
- Designer: Before starting mechanics, we will gather opinions again~ Otherwise, I'm afraid I won't remember everything.

4.
Label: consider future compatibility
Quotes:
- Designer: XP compatibility might need to be looked into later... probably need to install a virtual machine.

5.
Label: indirect reject
Quotes:
- Designer: Hmm... We will probably prioritize completing the electrical section first, then magnetism, and then other parts.
- Designer: Before starting mechanics, we will gather opinions again~ Otherwise, I'm afraid I won't remember everything.

6.
Label: advise on development approach
Quotes:
- User: Don't aim for completeness, it should be categorized and refined one by one
===
Here are the clarified codes with generalizable criteria and refined labels:

---
Definitions for each code:

1.
Criteria: A team member sets or adjusts expectations about a specific project milestone or deadline.
Label: Managing Community Expectations

2.
Criteria: A team member explains the reasoning behind a development decision or choice.
Label: Rationale for Development Decisions

3.
Criteria: A team member acknowledges or responds to user feedback or opinions.
Label: Responsiveness to Feedback

4.
Criteria: A team member considers potential future implications or compatibility issues.
Label: Future-Proofing Considerations

5.
Criteria: A team member indirectly rejects or postpones a request or suggestion.
Label: Deferred or Implicit Rejection

6.
Criteria: A team member provides guidance or recommendations on how to approach a development task.
Label: Development Approach Advice