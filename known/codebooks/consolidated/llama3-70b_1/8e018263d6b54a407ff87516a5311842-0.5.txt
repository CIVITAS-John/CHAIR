You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: share potential future direction, suggest future possibilities
- Designer shares potential future directions or interests.
- The designer suggests or proposes future possibilities or directions for the software.

2.
Concepts: touch screen considerations, inform about touch screens
- Users or designers consider the needs of touch screen devices.
- The designer informs users about touch screen features or functionality.

3.
Concepts: seek efficiency, suggesting simplification
- Designer seeks to simplify or improve a process or feature.
- A designer suggests simplifying a feature or aspect of the app.

4.
Concepts: suggesting manual adjustments, mention feedback-based prompts
- A designer discusses or suggests manual adjustments for the software.
- A designer mentions feedback-based prompts or instructions for the software.

5.
Concepts: consideration, consider comprehensive solution
- A designer considers or takes into account a specific issue or problem.
- The designer considers or discusses the need for a comprehensive solution to a problem or feature.

6.
Concepts: explaining development focus, outline development priorities
- Designers explain the priorities of the software's development.
- The designer outlines or prioritizes the development plans or goals for the app.

7.
Concepts: prioritization, prioritization suggestion
- Statements indicating the order in which tasks or features will be developed.
- A suggestion is made to prioritize certain features or tasks.

8.
Concepts: component functionality, address functionality
- A designer mentions a specific component and its functionality.
- The designer addresses or discusses the functionality of the app, including its features and capabilities.

9.
Concepts: describe new features, provide feature details
- Designers list and explain new features or changes to the software.
- Designers provide detailed information about a feature or software.

10.
Concepts: introducing new components, give an intro to the update content
- A designer announces or discusses new components or features.
- The designer introduces or summarizes the content of an update or new feature.

11.
Concepts: interface layout, design decision
- Decisions or discussions about interface layout or design elements.
- Making decisions or choices about the design or development of a feature or software.

12.
Concepts: system requirements, discuss technical considerations
- A designer discusses system requirements or technical specifications for the software.
- Designers consider or discuss technical aspects or limitations of the software.

13.
Concepts: discussing software design, engaging in design discussions
- Designers discuss software design aspects such as input methods or user interface.
- Designers engage in discussions about design principles or concepts.

14.
Concepts: feature discussion, discussing feature flexibility
- A designer or user discusses the implementation or details of a feature.
- Designer discusses the flexibility or customizability of a feature.

15.
Concepts: research and development, discussion of further interests
- A designer discusses or conducts research and development on a specific topic or feature.
- A designer discusses or expresses interest in exploring further topics or features.

16.
Concepts: providing design support, providing technical support
- Designers ask questions or provide support related to the software's design.
- Designers provide technical assistance or address technical issues.

17.
Concepts: user support, offer ongoing support, personalized assistance
- Assistance and support provided by designers to help users effectively use the product.
- Designer offers ongoing support or assistance to users.
- A designer offers personalized assistance or support to a user.

18.
Concepts: offer special tips, practical advice
- Designer provides special tips or shortcuts for using the platform.
- A designer provides practical advice or tips on how to use a feature or software.

19.
Concepts: speculate on compatibility, discussing system compatibility or issues
- A designer or user speculates or discusses compatibility with specific systems or devices.
- Discussing compatibility issues with different systems or hardware.

20.
Concepts: confirm compatibility, system compatibility confirmation
- Confirming or verifying compatibility with different systems or devices.
- A designer confirms or provides information about the software's compatibility with different systems or devices.

21.
Concepts: platform specification, providing platform-specific information or details
- Specifying a particular platform or device for the app.
- A designer provides information specific to a particular platform or operating system.

22.
Concepts: explaining technical artifacts, provide technical information, technical clarification
- Explanation of technical details or artifacts.
- Providing specific technical details or information about the app's functionality.
- Providing technical clarification or explanation for a particular feature or issue.

23.
Concepts: highlight practicality, suggest practical use case
- A user or designer highlights the practicality of a software or feature.
- A user suggests a practical application or feature for the software.

24.
Concepts: feature stability, long-term stability
- Discussing the stability or long-term viability of a particular feature.
- A designer mentions the importance of a feature for long-term stability.

25.
Concepts: improving features, feature development
- Designers discuss or plan to improve existing features.
- Discussing or planning new features or developments for the app.

26.
Concepts: usability need, usability improvement
- A need for improvement in the software's usability is highlighted.
- Instances where suggestions or changes are made to improve the usability of the software.

27.
Concepts: design refinement, feature adjustment
- Refining or improving design to make it more user-friendly.
- Adjusting or refining a feature based on user feedback or testing.

28.
Concepts: catering to user needs, balance user needs
- Catering to or addressing the needs and preferences of users.
- Balancing or weighing the needs and preferences of different users or stakeholders.

29.
Concepts: ask teachers' needs, inquire about classroom conditions
- Inquiring about teachers' needs or requirements.
- Inquiring about classroom or teaching conditions

30.
Concepts: teacher input request, teacher-admin interaction
- Designers ask teachers for help or input on specific topics.
- A designer interacts with teachers or administrators in the group, often seeking feedback or input.

31.
Concepts: teaching experience, providing educational context
- A user shares their teaching experience or background.
- A user provides context about their school, teaching experience, or environment.

32.
Concepts: school needs, emphasize importance for school
- The user mentions a specific need or requirement of their school.
- A user emphasizes the importance of a feature or functionality for school use.
===
Here are the definitions for each code:

---
1.
Concepts: share potential future direction, suggest future possibilities
Relationship: The concepts are related as the designer shares their vision for the future and suggests potential directions.
Criteria: Designers share potential future directions and suggest possibilities for the software.
Phrase: Share future directions

2.
Concepts: touch screen considerations, inform about touch screens
Relationship: The concepts are related as designers consider touch screen devices and inform users about their features.
Criteria: Designers consider touch screen devices and inform users about their features.
Phrase: Consider touch screens

3.
Concepts: seek efficiency, suggesting simplification
Relationship: The concepts are related as designers seek to simplify processes and suggest improvements.
Criteria: Designers seek to simplify processes and suggest improvements.
Phrase: Seek efficiency

4.
Concepts: suggesting manual adjustments, mention feedback-based prompts
Relationship: The concepts are related as designers suggest manual adjustments and mention feedback-based prompts.
Criteria: Designers suggest manual adjustments and mention feedback-based prompts.
Phrase: Suggest manual adjustments

5.
Concepts: consideration, consider comprehensive solution
Relationship: The concepts are related as designers consider specific issues and discuss comprehensive solutions.
Criteria: Designers consider specific issues and discuss comprehensive solutions.
Phrase: Consider comprehensive solutions

6.
Concepts: explaining development focus, outline development priorities
Relationship: The concepts are related as designers explain development priorities and outline plans.
Criteria: Designers explain development priorities and outline plans.
Phrase: Explain development focus

7.
Concepts: prioritization, prioritization suggestion
Relationship: The concepts are related as designers prioritize tasks and suggest prioritization.
Criteria: Designers prioritize tasks and suggest prioritization.
Phrase: Prioritize tasks

8.
Concepts: component functionality, address functionality
Relationship: The concepts are related as designers discuss component functionality and address functionality.
Criteria: Designers discuss component functionality and address functionality.
Phrase: Address functionality

9.
Concepts: describe new features, provide feature details
Relationship: The concepts are related as designers describe new features and provide details.
Criteria: Designers describe new features and provide details.
Phrase: Describe new features

10.
Concepts: introducing new components, give an intro to the update content
Relationship: The concepts are related as designers introduce new components and summarize update content.
Criteria: Designers introduce new components and summarize update content.
Phrase: Introduce new components

11.
Concepts: interface layout, design decision
Relationship: The concepts are related as designers discuss interface layout and make design decisions.
Criteria: Designers discuss interface layout and make design decisions.
Phrase: Make design decisions

12.
Concepts: system requirements, discuss technical considerations
Relationship: The concepts are related as designers discuss system requirements and technical considerations.
Criteria: Designers discuss system requirements and technical considerations.
Phrase: Discuss technical considerations

13.
Concepts: discussing software design, engaging in design discussions
Relationship: The concepts are related as designers discuss software design and engage in design discussions.
Criteria: Designers discuss software design and engage in design discussions.
Phrase: Engage in design discussions

14.
Concepts: feature discussion, discussing feature flexibility
Relationship: The concepts are related as designers discuss features and their flexibility.
Criteria: Designers discuss features and their flexibility.
Phrase: Discuss feature flexibility

15.
Concepts: research and development, discussion of further interests
Relationship: The concepts are related as designers conduct research and discuss further interests.
Criteria: Designers conduct research and discuss further interests.
Phrase: Conduct research and development

16.
Concepts: providing design support, providing technical support
Relationship: The concepts are related as designers provide design and technical support.
Criteria: Designers provide design and technical support.
Phrase: Provide design support

17.
Concepts: user support, offer ongoing support, personalized assistance
Relationship: The concepts are related as designers provide user support, offer ongoing support, and personalized assistance.
Criteria: Designers provide user support, offer ongoing support, and personalized assistance.
Phrase: Offer user support

18.
Concepts: offer special tips, practical advice
Relationship: The concepts are related as designers offer special tips and practical advice.
Criteria: Designers offer special tips and practical advice.
Phrase: Offer practical advice

19.
Concepts: speculate on compatibility, discussing system compatibility or issues
Relationship: The concepts are related as designers speculate on compatibility and discuss system compatibility issues.
Criteria: Designers speculate on compatibility and discuss system compatibility issues.
Phrase: Discuss system compatibility

20.
Concepts: confirm compatibility, system compatibility confirmation
Relationship: The concepts are related as designers confirm compatibility and provide system compatibility information.
Criteria: Designers confirm compatibility and provide system compatibility information.
Phrase: Confirm compatibility

21.
Concepts: platform specification, providing platform-specific information or details
Relationship: The concepts are related as designers specify platforms and provide platform-specific information.
Criteria: Designers specify platforms and provide platform-specific information.
Phrase: Specify platforms

22.
Concepts: explaining technical artifacts, provide technical information, technical clarification
Relationship: The concepts are related as designers explain technical artifacts, provide technical information, and clarify technical issues.
Criteria: Designers explain technical artifacts, provide technical information, and clarify technical issues.
Phrase: Explain technical artifacts

23.
Concepts: highlight practicality, suggest practical use case
Relationship: The concepts are related as designers highlight practicality and suggest practical use cases.
Criteria: Designers highlight practicality and suggest practical use cases.
Phrase: Highlight practicality

24.
Concepts: feature stability, long-term stability
Relationship: The concepts are related as designers discuss feature stability and long-term stability.
Criteria: Designers discuss feature stability and long-term stability.
Phrase: Discuss feature stability

25.
Concepts: improving features, feature development
Relationship: The concepts are related as designers improve features and develop new ones.
Criteria: Designers improve features and develop new ones.
Phrase: Improve features

26.
Concepts: usability need, usability improvement
Relationship: The concepts are related as designers identify usability needs and suggest improvements.
Criteria: Designers identify usability needs and suggest improvements.
Phrase: Identify usability needs

27.
Concepts: design refinement, feature adjustment
Relationship: The concepts are related as designers refine designs and adjust features.
Criteria: Designers refine designs and adjust features.
Phrase: Refine designs

28.
Concepts: catering to user needs, balance user needs
Relationship: The concepts are related as designers cater to user needs and balance different needs.
Criteria: Designers cater to user needs and balance different needs.
Phrase: Cater to user needs

29.
Concepts: ask teachers' needs, inquire about classroom conditions
Relationship: The concepts are related as designers ask about teachers' needs and inquire about classroom conditions.
Criteria: Designers ask about teachers' needs and inquire about classroom conditions.
Phrase: Ask about teachers' needs

30.
Concepts: teacher input request, teacher-admin interaction
Relationship: The concepts are related as designers request teacher input and interact with teachers.
Criteria: Designers request teacher input and interact with teachers.
Phrase: Request teacher input

31.
Concepts: teaching experience, providing educational context
Relationship: The concepts are related as users share teaching experience and provide educational context.
Criteria: Users share teaching experience and provide educational context.
Phrase: Share teaching experience

32.
Concepts: school needs, emphasize importance for school
Relationship: The concepts are related as users mention school needs and emphasize their importance.
Criteria: Users mention school needs and emphasize their importance.
Phrase: Emphasize school needs