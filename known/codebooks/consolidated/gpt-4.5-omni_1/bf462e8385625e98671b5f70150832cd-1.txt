You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (3 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
3. 
Concepts: {Repeat the input 3}
Relationship: {What is logical relationship between concepts in code 3, or N/A if not applicable}
Criteria: {Who did what, and how for code 3}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: acknowledgment, acknowledgement of resources
- User acknowledges previous contributions or expresses gratitude before making further requests.
- Users acknowledging receipt of resources or information.

2.
Concepts: share software tricks, sharing usage knowledge
- Sharing informal workarounds or tricks to navigate and use the software effectively.
- Participants offer practical tips for better software utilization and provide instructions on using specific components.

3.
Concepts: engage in dialogue, engaging in iterative development
- Designers and users engage in back-and-forth conversations about features, updates, and feedback.
- Designers discuss ongoing updates and improvements based on feedback and testing.
===
---
Definitions for each code (3 in total):
1.
Concepts: acknowledgment, acknowledgement of resources
Relationship: Both concepts are about users recognizing and showing appreciation for previous contributions or resources.
Criteria: Users express gratitude for previous resources or contributions before making further requests or after receiving information.
Phrase: Acknowledge contributions

2.
Concepts: share software tricks, sharing usage knowledge
Relationship: Both concepts revolve around the dissemination of practical information and tips for better software utilization.
Criteria: Participants share informal workarounds, practical tips, and instructions for navigating and effectively using software components.
Phrase: Share software usage tips

3.
Concepts: engage in dialogue, engaging in iterative development
Relationship: Both concepts involve interactive and ongoing discussions between designers and users about features and feedback to drive development.
Criteria: Designers and users participate in ongoing conversations about features, updates, and improvements, iterating based on feedback and testing.
Phrase: Participate in development dialogue
---