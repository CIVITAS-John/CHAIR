You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: show engagement, respond to initial question
- The designer shows engagement or acknowledgement through brief responses.
- A designer responds directly to an initial question or inquiry.

2.
Concepts: mention, name a specific person
- A message that mentions a specific person or group.
- References or addresses to specific individuals, often with a request or question.

3.
Concepts: user interaction, engage in dialogue
- A participant engages in conversation or discusses a topic with others.
- Users and designers engage in informal conversations or discussions

4.
Concepts: acknowledging understanding, acknowledging designer responses
- The designer acknowledges understanding or confirmation.
- Users acknowledge or agree with designers' responses or points.

5.
Concepts: design concurrence, agree with suggestion
- Agreeing or concurring with someone's design ideas or suggestions.
- A user or designer agrees with or supports a suggestion or opinion.

6.
Concepts: seeking consensus, confirmation/agreement of collaboration
- Designer seeks consensus or agreement from the community.
- A designer confirms or agrees to collaborate with the community on a task or feature.

7.
Concepts: inquires about user background, seeking contextual information
- Designer asks about the user's background
- The designer requests contextual information from the user.

8.
Concepts: inquire about user needs, trying to understand needs
- Designer inquires about user needs or requirements
- The developer seeks to understand user needs or requirements.

9.
Concepts: validate user request, align with user feedback, accepting user suggestions
- The designer validates or confirms a user's request or suggestion.
- A designer adjusts or adapts to user feedback or suggestions
- Designers agree to implement user requests or suggestions.

10.
Concepts: invite feedback, feature request invitation
- Designers invite users to ask questions or provide feedback.
- Designers invite users to suggest new features or improvements.

11.
Concepts: maintaining transparency, transparent designer discussion
- Designers provide detailed information about development processes, challenges, and progress.
- Designer engages in transparent discussion about design decisions or challenges.

12.
Concepts: project management, discussing long-term plans
- Designer discusses project management, prioritization, or plans
- Designer discusses or prioritizes long-term plans or goals for the software.

13.
Concepts: sharing development progress, communicating ongoing work
- Discussing or sharing development plans for new features.
- Developers communicate ongoing work or progress on a feature or update.

14.
Concepts: discuss future updates, share release plans
- Designers discuss planning for the next update with the community
- Designers share plans or discuss the schedule for releasing updates or new versions

15.
Concepts: discussing design decisions, discussing interface layout
- Discussing or debating design decisions or directions.
- User or designer discusses or decides on interface layout or design.

16.
Concepts: user interface, discuss usability
- A designer discusses or refers to the user interface or user experience of the software.
- Designers or users discuss the usability or user experience of the software

17.
Concepts: knowledge sharing, sharing information for design
- The designer shares knowledge or information about the software or related topics.
- Sharing of information or experiences related to design or development, often providing context or insight.

18.
Concepts: future planning, discuss future plans
- Discussing or proposing actions to be taken in the future.
- Discusses plans or priorities for future development with the community.

19.
Concepts: promise future development, confirming future implementation
- Designers promise to develop an app or feature in the future
- Designers confirm the implementation of a feature or plan in the future.

20.
Concepts: promise future consultation, announcing future consultation
- Promising to gather feedback or opinions in the future.
- The designer announces plans for future consultation or discussion.

21.
Concepts: project planning, plan explanation
- A message that discusses or outlines project plans or goals.
- Explaining plans, goals, or objectives for the software or community.

22.
Concepts: timeline setting, set timeline expectation
- Establishing a timeline or schedule for completing a task or feature.
- The designer sets or updates expectations for a specific timeline or milestone.

23.
Concepts: catering to user needs, balance user needs
- Catering to or accommodating user needs or demands
- Striking a balance or compromise between different user needs or demands

24.
Concepts: explaining delay, explaining delays
- An explanation or apology for a delay or lack of progress.
- The designer explains why a feature is not yet complete.

25.
Concepts: show consideration, apologize for inconvenience
- A designer shows politeness, apologizes, or expresses consideration for the community.
- Designers acknowledge potential inconvenience and express politeness.

26.
Concepts: promise to improve, improvement commitment
- A participant makes a promise or commitment to improve the app or its features.
- The designer commits to improving the software or addressing user concerns.

27.
Concepts: answer about progress, development response
- The developer responds to user inquiries about the progress of a feature or update.
- Responding to or acknowledging information provided by the developer about feature development.

28.
Concepts: reassurance, reassure users
- Instances where designers reassure users about the progress and express gratitude or encouragement.
- The developer reassures users about the development progress or addresses their concerns.

29.
Concepts: suggestion, make a suggestion
- A message that proposes an idea or solution.
- Suggests or proposes design ideas or potential solutions.

30.
Concepts: simplification suggestion, discussing feature simplification
- Suggesting or proposing simplification or reduction of complexity.
- Suggesting or discussing simplification or refinement of features or design elements.

31.
Concepts: alternative solution, suggesting alternative solutions, offering/seeking alternative
- The designer provides an alternative solution or workaround.
- Users suggest alternative solutions or workarounds.
- A user or designer offers or seeks alternative solutions or options.

32.
Concepts: share workaround, usability workaround
- The designer shares a workaround for a known issue or problem.
- The developer provides a usability workaround or tip for a specific feature or functionality.
===
Here are the definitions for each code:

---
1.
Concepts: show engagement, respond to initial question
Relationship: show engagement is a way of responding to initial questions
Criteria: Designers show engagement by responding directly to initial questions or inquiries.
Phrase: respond to initial questions
---

2.
Concepts: mention, name a specific person
Relationship: N/A
Criteria: Designers or users mention or address specific individuals, often with a request or question.
Phrase: mention specific individuals
---

3.
Concepts: user interaction, engage in dialogue
Relationship: user interaction involves engaging in dialogue
Criteria: Users and designers engage in informal conversations or discussions.
Phrase: engage in dialogue
---

4.
Concepts: acknowledging understanding, acknowledging designer responses
Relationship: acknowledging understanding involves acknowledging designer responses
Criteria: Users acknowledge or agree with designers' responses or points.
Phrase: acknowledge understanding
---

5.
Concepts: design concurrence, agree with suggestion
Relationship: design concurrence involves agreeing with suggestions
Criteria: Users or designers agree with or support design ideas or suggestions.
Phrase: concur with design suggestions
---

6.
Concepts: seeking consensus, confirmation/agreement of collaboration
Relationship: seeking consensus involves confirming collaboration
Criteria: Designers seek consensus or agreement from the community for collaboration.
Phrase: seek consensus
---

7.
Concepts: inquires about user background, seeking contextual information
Relationship: inquiring about user background involves seeking contextual information
Criteria: Designers ask about the user's background to understand their needs.
Phrase: inquire about user background
---

8.
Concepts: inquire about user needs, trying to understand needs
Relationship: inquiring about user needs involves trying to understand needs
Criteria: Designers inquire about user needs or requirements to understand them.
Phrase: inquire about user needs
---

9.
Concepts: validate user request, align with user feedback, accepting user suggestions
Relationship: validating user requests involves aligning with user feedback and accepting user suggestions
Criteria: Designers validate or confirm user requests or suggestions and adjust to user feedback.
Phrase: validate user requests
---

10.
Concepts: invite feedback, feature request invitation
Relationship: inviting feedback involves inviting feature requests
Criteria: Designers invite users to provide feedback or suggest new features.
Phrase: invite feedback
---

11.
Concepts: maintaining transparency, transparent designer discussion
Relationship: maintaining transparency involves transparent discussion
Criteria: Designers provide detailed information about development processes and engage in transparent discussions.
Phrase: maintain transparency
---

12.
Concepts: project management, discussing long-term plans
Relationship: project management involves discussing long-term plans
Criteria: Designers discuss project management, prioritization, or long-term plans for the software.
Phrase: discuss project management
---

13.
Concepts: sharing development progress, communicating ongoing work
Relationship: sharing development progress involves communicating ongoing work
Criteria: Developers communicate ongoing work or progress on features or updates.
Phrase: share development progress
---

14.
Concepts: discuss future updates, share release plans
Relationship: discussing future updates involves sharing release plans
Criteria: Designers discuss planning for the next update with the community and share release plans.
Phrase: discuss future updates
---

15.
Concepts: discussing design decisions, discussing interface layout
Relationship: discussing design decisions involves discussing interface layout
Criteria: Users or designers discuss or decide on design decisions or interface layout.
Phrase: discuss design decisions
---

16.
Concepts: user interface, discuss usability
Relationship: user interface involves discussing usability
Criteria: Designers or users discuss the user interface or user experience of the software.
Phrase: discuss user interface
---

17.
Concepts: knowledge sharing, sharing information for design
Relationship: knowledge sharing involves sharing information for design
Criteria: Designers share knowledge or information about the software or related topics.
Phrase: share knowledge
---

18.
Concepts: future planning, discuss future plans
Relationship: future planning involves discussing future plans
Criteria: Designers discuss or propose actions to be taken in the future.
Phrase: plan for the future
---

19.
Concepts: promise future development, confirming future implementation
Relationship: promising future development involves confirming future implementation
Criteria: Designers promise to develop an app or feature in the future.
Phrase: promise future development
---

20.
Concepts: promise future consultation, announcing future consultation
Relationship: promising future consultation involves announcing future consultation
Criteria: Designers announce plans for future consultation or discussion.
Phrase: promise future consultation
---

21.
Concepts: project planning, plan explanation
Relationship: project planning involves plan explanation
Criteria: Designers discuss or outline project plans or goals.
Phrase: explain project plans
---

22.
Concepts: timeline setting, set timeline expectation
Relationship: timeline setting involves setting timeline expectations
Criteria: Designers establish a timeline or schedule for completing a task or feature.
Phrase: set timeline expectations
---

23.
Concepts: catering to user needs, balance user needs
Relationship: catering to user needs involves balancing user needs
Criteria: Designers cater to or accommodate user needs or demands.
Phrase: cater to user needs
---

24.
Concepts: explaining delay, explaining delays
Relationship: explaining delay involves explaining delays
Criteria: Designers explain why a feature is not yet complete or apologize for delays.
Phrase: explain delays
---

25.
Concepts: show consideration, apologize for inconvenience
Relationship: showing consideration involves apologizing for inconvenience
Criteria: Designers show politeness, apologize, or express consideration for the community.
Phrase: show consideration
---

26.
Concepts: promise to improve, improvement commitment
Relationship: promising to improve involves making an improvement commitment
Criteria: Designers make a promise or commitment to improve the app or its features.
Phrase: promise to improve
---

27.
Concepts: answer about progress, development response
Relationship: answering about progress involves development response
Criteria: Developers respond to user inquiries about the progress of a feature or update.
Phrase: answer about progress
---

28.
Concepts: reassurance, reassure users
Relationship: reassurance involves reassuring users
Criteria: Designers reassure users about the progress and express gratitude or encouragement.
Phrase: reassure users
---

29.
Concepts: suggestion, make a suggestion
Relationship: N/A
Criteria: A message proposes an idea or solution.
Phrase: make a suggestion
---

30.
Concepts: simplification suggestion, discussing feature simplification
Relationship: simplification suggestion involves discussing feature simplification
Criteria: Suggesting or proposing simplification or reduction of complexity.
Phrase: suggest simplification
---

31.
Concepts: alternative solution, suggesting alternative solutions, offering/seeking alternative
Relationship: alternative solutions involve offering or seeking alternatives
Criteria: Designers provide alternative solutions or workarounds, or users suggest alternative solutions.
Phrase: suggest alternative solutions
---

32.
Concepts: share workaround, usability workaround
Relationship: sharing workarounds involves sharing usability workarounds
Criteria: Designers share a workaround for a known issue or problem.
Phrase: share workarounds
---

Note: Some codes may have no relationship between concepts if they are independent, but still related to the research question.