You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (21 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
21. 
Concepts: {Repeat the input 21}
Relationship: {What is logical relationship between concepts in code 21, or N/A if not applicable}
Criteria: {Who did what, and how for code 21}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: describing difficulties with long code, describes a failed attempt to analyze long code
- Participants describe difficulties with interacting with long code pieces.
- Participant describes a failed attempt to analyze long code using AI-driven interfaces.

2.
Concepts: identifying areas for improvement, identifying ai feedback loop limitations
- Identifies areas for potential improvement in AI-driven interfaces or suggests ways to optimize their use.
- Identifies limitations in current AI feedback loops and suggests improvements.

3.
Concepts: engaging in active problem-solving, demonstrating proactive problem-solving
- Chooses active problem-solving over seeking AI assistance, preferring to fix issues using own ideas and prioritizing self-reliance.
- Demonstrates proactive problem-solving by attempting to fix issues independently, demonstrating independent problem-solving skills and error resolution independence.

4.
Concepts: preferring immediate fixes, prefers direct code corrections
- Prefers immediate code fix options over explanations, requesting an immediate "fix" option.
- Prefers direct code corrections rather than explanations or troubleshooting.

5.
Concepts: critiques individualism and extreme individualism, critiques self-reliance and lack of help-seeking
- Participants critique individualism and its implications on seeking help.
- Participants critique excessive self-reliance and the lack of help-seeking behavior.

6.
Concepts: identifies challenges in seeking help, notes reluctance to seek help and cultural norms
- Participants identify challenges in seeking help and highlight them.
- Participants note reluctance to seek help and reflect on cultural norms around seeking help.

7.
Concepts: proper help request etiquette, emphasizing polite requests
- Critiques improper help requests, emphasizing the importance of doing one's own work.
- Emphasizes the importance of polite and gracious requests when seeking online help, advising on proper help-seeking etiquette.

8.
Concepts: follows structured setup process, follows a structured process
- Participants follow a structured setup process and set up a model structure before using AI.
- Participants follow a structured process, a structured modeling process, and approach model building in a structured way.

9.
Concepts: specifies requirements, communicates modeling needs
- Participants specify requirements and model requirements.
- Participants communicate modeling needs and specific needs.

10.
Concepts: asks for clarification, seeks summarization assistance
- Participants ask for clarification and engage in debugging.
- Participants seek summarization assistance and identify errors that users do not understand.

11.
Concepts: sets up a task, envisions a task
- Participants set up a task, engage in a new task, and propose a task.
- Participants articulate a specific task and envision a task.

12.
Concepts: refines task details, refines task requests
- Participants refine task details and clarify task requirements.
- Participants refine tasks or requests based on AI feedback and iteratively refine task formulation.

13.
Concepts: provides more details, adds detail to requests
- Provides additional details or clarifications to the AI.
- Participants add detail to requests and provide specific details when asking for help.

14.
Concepts: noting knowledge gaps, identifying gap in knowledge transfer, emphasizing undocumented knowledge
- Notes knowledge gaps and limitations, recognizing the importance of oral tradition and undocumented knowledge.
- Identifies gaps in knowledge transfer, including oral tradition.
- Emphasizes the importance of undocumented knowledge, observing that critical knowledge is often contained in oral tradition and not documented.

15.
Concepts: prioritizing code quality control, emphasizing code quality and readability
- Participants prioritize maintaining control over code quality.
- Participants emphasize the importance of clear and accessible code.

16.
Concepts: filling the gap in teaching systems development, distinguishing between system developers and teachers
- Fills the gap in teaching systems development by recognizing the difference between system developers and good teachers.
- Distinguishes between system developers and effective teachers, highlighting the difference between developing a system and teaching.

17.
Concepts: advocates for iterative questioning, advocates for iterative clarification
- Participants suggest iterative questioning as a means to develop skills or expertise.
- Participants emphasize the importance of iterative clarification and advocate for iterative questioning to enhance AI performance.

18.
Concepts: demonstrates iterative development, emphasizes iterative improvement
- Participants value an iterative approach and demonstrate an iterative development process.
- Participants highlight the importance of iterative improvement and see potential for iterative refinement.

19.
Concepts: valuing collaborative feedback, valuing collaborative learning
- Valuing collaborative feedback and peer review in the learning process
- Participants value shared knowledge and collaborative learning, value collaborative knowledge generation, and highlight the benefits of collaborative learning.

20.
Concepts: seeking collaborative problem-solving, highlights importance of seeking help, collaborative knowledge, and a collaborative approach
- Participants seek collaborative problem-solving with the AI and emphasize the importance of collective problem-solving.
- Participants highlight the importance of seeking help, collaborative knowledge, and a collaborative approach.

21.
Concepts: engaging in problem-solving, interviewee demonstrating their problem-solving approach
- Engages in problem-solving activities, exhibiting a problem-solving mindset.
- Interviewee demonstrates their problem-solving approach.
===
Here are the definitions for each code:

---
1.
Concepts: describing difficulties with long code, describes a failed attempt to analyze long code
Relationship: The two concepts are related as they both describe challenges with interacting with long code pieces.
Criteria: Participants describe difficulties and failed attempts to analyze long code using AI-driven interfaces.
Phrase: Describe difficulties with long code

2.
Concepts: identifying areas for improvement, identifying ai feedback loop limitations
Relationship: The two concepts are related as they both identify areas for improvement in AI-driven interfaces.
Criteria: Participants identify areas for potential improvement and limitations in current AI feedback loops.
Phrase: Identify areas for improvement

3.
Concepts: engaging in active problem-solving, demonstrating proactive problem-solving
Relationship: The two concepts are related as they both demonstrate independent problem-solving skills.
Criteria: Participants choose active problem-solving and demonstrate proactive problem-solving by attempting to fix issues independently.
Phrase: Engage in active problem-solving

4.
Concepts: preferring immediate fixes, prefers direct code corrections
Relationship: The two concepts are related as they both prefer direct and immediate solutions.
Criteria: Participants prefer immediate code fix options and direct code corrections over explanations.
Phrase: Prefer immediate fixes

5.
Concepts: critiques individualism and extreme individualism, critiques self-reliance and lack of help-seeking
Relationship: The two concepts are related as they both critique self-reliance and individualism.
Criteria: Participants critique individualism and excessive self-reliance, highlighting the lack of help-seeking behavior.
Phrase: Critique individualism

6.
Concepts: identifies challenges in seeking help, notes reluctance to seek help and cultural norms
Relationship: The two concepts are related as they both identify challenges in seeking help.
Criteria: Participants identify challenges in seeking help and note reluctance to seek help due to cultural norms.
Phrase: Identify challenges in seeking help

7.
Concepts: proper help request etiquette, emphasizing polite requests
Relationship: The two concepts are related as they both emphasize the importance of proper help-seeking etiquette.
Criteria: Participants critique improper help requests and emphasize the importance of polite and gracious requests.
Phrase: Emphasize proper help request etiquette

8.
Concepts: follows structured setup process, follows a structured process
Relationship: The two concepts are related as they both describe a structured approach to model building.
Criteria: Participants follow a structured setup process and approach model building in a structured way.
Phrase: Follow a structured process

9.
Concepts: specifies requirements, communicates modeling needs
Relationship: The two concepts are related as they both involve communicating specific needs.
Criteria: Participants specify requirements and communicate modeling needs.
Phrase: Specify requirements

10.
Concepts: asks for clarification, seeks summarization assistance
Relationship: The two concepts are related as they both involve seeking assistance.
Criteria: Participants ask for clarification and seek summarization assistance.
Phrase: Seek clarification

11.
Concepts: sets up a task, envisions a task
Relationship: The two concepts are related as they both involve setting up or envisioning a task.
Criteria: Participants set up a task and articulate a specific task.
Phrase: Set up a task

12.
Concepts: refines task details, refines task requests
Relationship: The two concepts are related as they both involve refining task requirements.
Criteria: Participants refine task details and refine tasks or requests based on AI feedback.
Phrase: Refine task details

13.
Concepts: provides more details, adds detail to requests
Relationship: The two concepts are related as they both involve providing additional information.
Criteria: Participants provide additional details or clarifications to the AI.
Phrase: Provide more details

14.
Concepts: noting knowledge gaps, identifying gap in knowledge transfer, emphasizing undocumented knowledge
Relationship: The two concepts are related as they all involve recognizing knowledge gaps.
Criteria: Participants note knowledge gaps, identify gaps in knowledge transfer, and emphasize the importance of undocumented knowledge.
Phrase: Note knowledge gaps

15.
Concepts: prioritizing code quality control, emphasizing code quality and readability
Relationship: The two concepts are related as they both prioritize code quality.
Criteria: Participants prioritize maintaining control over code quality and emphasize the importance of clear and accessible code.
Phrase: Prioritize code quality

16.
Concepts: filling the gap in teaching systems development, distinguishing between system developers and teachers
Relationship: The two concepts are related as they both involve recognizing the importance of effective teaching.
Criteria: Participants fill the gap in teaching systems development and distinguish between system developers and effective teachers.
Phrase: Fill the gap in teaching systems development

17.
Concepts: advocates for iterative questioning, advocates for iterative clarification
Relationship: The two concepts are related as they both advocate for iterative approaches.
Criteria: Participants advocate for iterative questioning and emphasize the importance of iterative clarification.
Phrase: Advocate for iterative questioning

18.
Concepts: demonstrates iterative development, emphasizes iterative improvement
Relationship: The two concepts are related as they both involve iterative approaches to development.
Criteria: Participants value an iterative approach and demonstrate an iterative development process.
Phrase: Demonstrate iterative development

19.
Concepts: valuing collaborative feedback, valuing collaborative learning
Relationship: The two concepts are related as they both value collaborative approaches.
Criteria: Participants value collaborative feedback and peer review in the learning process.
Phrase: Value collaborative feedback

20.
Concepts: seeking collaborative problem-solving, highlights importance of seeking help, collaborative knowledge, and a collaborative approach
Relationship: The two concepts are related as they both involve seeking collaborative help.
Criteria: Participants seek collaborative problem-solving and highlight the importance of seeking help, collaborative knowledge, and a collaborative approach.
Phrase: Seek collaborative problem-solving

21.
Concepts: engaging in problem-solving, interviewee demonstrating their problem-solving approach
Relationship: The two concepts are related as they both demonstrate problem-solving skills.
Criteria: Participants engage in problem-solving activities and demonstrate their problem-solving approach.
Phrase: Engage in problem-solving