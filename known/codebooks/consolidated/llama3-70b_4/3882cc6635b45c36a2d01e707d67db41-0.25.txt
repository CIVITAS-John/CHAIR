You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: follow-up, follow-up on design information
- A designer or user follows up on a previous discussion or issue.
- Users provide information about design or development requirements.

2.
Concepts: manual editing option, manual adjustment
- The designer mentions the possibility of manual editing or customization.
- The designer mentions the ability to manually adjust or customize certain aspects of the software.

3.
Concepts: design refinement, simplification and refinement in design
- Refining or simplifying a design aspect.
- Simplifying or refining design elements or features.

4.
Concepts: feature simplification, suggest simplification
- A designer or developer suggests simplifying a feature or process.
- Suggesting or advocating for simplification of a process or feature.

5.
Concepts: component adjustments, feature adjustment
- A person (designer) adjusts or updates components or features.
- A designer mentions adjusting or modifying a feature to improve its functionality.

6.
Concepts: explaining rationale, design rationale, design decision
- Explaining the rationale behind a design decision.
- The designer explains the reasoning or thought process behind a design decision.
- A designer explains the intention or design philosophy behind the software.
- Discussion or explanation of design decisions or rationales behind certain features or components.

7.
Concepts: give reason, confirms that reason
- A person (designer) provides a reason or explanation for a decision or action.
- A designer confirms or acknowledges a reason or explanation.

8.
Concepts: consider usability, consider user experience
- User or designer considers or discusses the usability of the software or its features.
- A designer considers or discusses user experience or usability.

9.
Concepts: touch screen consideration, consider implications of touch screen use
- A user considers the needs of touch screen devices.
- Considering the implications of using touch screens.

10.
Concepts: development process, explain development process
- A designer explains the development process or roadmap for the software.
- A person (designer) explains the development process or technical details.

11.
Concepts: design challenges, difficulty in development
- Issues and obstacles faced by designers during the development process.
- Discussion of challenges, difficulties, or complexities faced during feature development or design decisions.

12.
Concepts: feature discussion, design discussion
- Designer discusses or explains a feature or its development.
- Designer discusses or explains the design or development of a feature.

13.
Concepts: user guidance, feature guidance, usage instruction
- A designer provides guidance or instructions on how to use a feature or functionality.
- A designer or developer provides guidance or instructions on how to use a feature or software.
- A designer provides instructions or guidance on how to use a feature.

14.
Concepts: component functionality, component explanation
- Discussing the functionality or properties of a component.
- Describing the capabilities, features, or characteristics of a new component or tool.

15.
Concepts: technical clarification, provide technical details
- The designer provides technical clarification or explains a technical aspect.
- The designer is providing technical details or explanations about the system or feature.

16.
Concepts: give examples of feature, illustrative example
- Providing examples or illustrations of a feature or functionality
- The designer provides an example to illustrate the functionality or purpose of a feature.

17.
Concepts: highlight practicality, highlighting practicality
- Emphasizing the practicality or usability of the software
- Emphasizing the practical use or benefit of a feature or component.

18.
Concepts: comparison to similar apps, comparison with other applications
- Comparing the system to similar applications or tools.
- Users compare the software with other similar applications.

19.
Concepts: software usability, usability and practicality
- Comments or feedback about the usability, convenience, or practicality of the software.
- User comments on the ease of use and practicality of the software.

20.
Concepts: context of use, usability and context of use
- Instances where users describe the specific contexts in which they use the software.
- Discussions about how the software is used in different contexts and its usability.

21.
Concepts: further suggestion, provide alternative suggestion
- A user suggests or proposes an idea or solution.
- The user provides an alternative suggestion or solution to a problem.

22.
Concepts: suggest alternative system, offering/seeking alternative
- Suggesting alternative systems or solutions.
- Offers or suggestions of alternative solutions, workarounds, or approaches.

23.
Concepts: offering solution, share potential solutions, suggest potential solution
- A designer offers a solution or suggests a workaround for a problem or issue.
- Designer suggests or provides potential solutions to a problem or issue.
- A designer suggests a potential solution or workaround.

24.
Concepts: resolution, self-solved
- A user expresses gratitude or appreciation for a resolution or solution.
- User expresses gratitude or acknowledges a solution to their problem.

25.
Concepts: self answer, self-help
- A user finds an answer or solution on their own.
- A user takes initiative to find a solution or answer on their own.

26.
Concepts: support offer, personalized support
- A designer or developer offers support or assistance to users.
- A designer offers personalized support or assistance to a user.

27.
Concepts: troubleshooting, problem solving
- Troubleshooting or discussing issues with the software.
- Designer or user discusses or addresses a problem or issue with the software.

28.
Concepts: technical support, technical support and guidance
- Instances where designers or users provide technical assistance or address technical issues.
- Instances where designers provide technical support or information about the software.
- Instances where designers provide technical support or guidance to users.

29.
Concepts: explain current limitations, explain current version's limitation
- A designer explains or describes current limitations or issues with a feature or functionality.
- A person (designer) explains a limitation or constraint of the current version.

30.
Concepts: security concern, highlight security concerns
- Expressing concerns about security or safety.
- Highlighting security concerns or issues.

31.
Concepts: frustration, user frustration
- A designer or user expresses frustration or annoyance about a technical issue.
- The user is expressing frustration or dissatisfaction with the current system or technology.

32.
Concepts: answer a concern, address usability concern
- The designer addresses or responds to a user's concern or worry.
- The designer addresses a concern or issue related to usability.
===
Here are the definitions for each code:

---
1.
Concepts: follow-up, follow-up on design information
Relationship: The concepts are related as they both involve revisiting or building upon previous discussions or issues.
Criteria: A designer or user revisits or builds upon previous design discussions or issues.
Phrase: Follow up on design information.

2.
Concepts: manual editing option, manual adjustment
Relationship: The concepts are related as they both involve customization or modification of software aspects.
Criteria: A designer mentions the possibility of manual customization or adjustment of software aspects.
Phrase: Mention manual editing options.

3.
Concepts: design refinement, simplification and refinement in design
Relationship: The concepts are related as they both involve improving or streamlining design aspects.
Criteria: A designer refines or simplifies a design aspect.
Phrase: Refine design aspects.

4.
Concepts: feature simplification, suggest simplification
Relationship: The concepts are related as they both involve simplifying or streamlining features or processes.
Criteria: A designer or developer suggests simplifying a feature or process.
Phrase: Suggest feature simplification.

5.
Concepts: component adjustments, feature adjustment
Relationship: The concepts are related as they both involve modifying or updating software components or features.
Criteria: A designer adjusts or updates components or features.
Phrase: Adjust components or features.

6.
Concepts: explaining rationale, design rationale, design decision
Relationship: The concepts are related as they all involve explaining the thought process behind design decisions.
Criteria: A designer explains the rationale behind a design decision.
Phrase: Explain design rationale.

7.
Concepts: give reason, confirms that reason
Relationship: The concepts are related as they both involve providing or acknowledging explanations or reasons.
Criteria: A designer provides or confirms a reason or explanation.
Phrase: Provide or confirm reasons.

8.
Concepts: consider usability, consider user experience
Relationship: The concepts are related as they both involve considering the user's perspective.
Criteria: A designer considers the usability or user experience of the software.
Phrase: Consider usability.

9.
Concepts: touch screen consideration, consider implications of touch screen use
Relationship: The concepts are related as they both involve considering the implications of touch screen devices.
Criteria: A user considers the needs of touch screen devices.
Phrase: Consider touch screen implications.

10.
Concepts: development process, explain development process
Relationship: The concepts are related as they both involve explaining the process of developing the software.
Criteria: A designer explains the development process or roadmap.
Phrase: Explain development process.

11.
Concepts: design challenges, difficulty in development
Relationship: The concepts are related as they both involve discussing obstacles or difficulties in the development process.
Criteria: A designer discusses challenges or difficulties in development.
Phrase: Discuss design challenges.

12.
Concepts: feature discussion, design discussion
Relationship: The concepts are related as they both involve discussing or explaining features or design aspects.
Criteria: A designer discusses or explains a feature or design aspect.
Phrase: Discuss features or design.

13.
Concepts: user guidance, feature guidance, usage instruction
Relationship: The concepts are related as they all involve providing guidance or instructions on using the software.
Criteria: A designer provides guidance or instructions on using a feature or software.
Phrase: Provide user guidance.

14.
Concepts: component functionality, component explanation
Relationship: The concepts are related as they both involve explaining the properties or capabilities of components.
Criteria: A designer explains the functionality or properties of a component.
Phrase: Explain component functionality.

15.
Concepts: technical clarification, provide technical details
Relationship: The concepts are related as they both involve providing technical explanations or details.
Criteria: A designer provides technical clarification or explanations.
Phrase: Provide technical clarification.

16.
Concepts: give examples of feature, illustrative example
Relationship: The concepts are related as they both involve providing examples or illustrations of features or functionality.
Criteria: A designer provides examples or illustrations of a feature or functionality.
Phrase: Provide illustrative examples.

17.
Concepts: highlight practicality, highlighting practicality
Relationship: The concepts are related as they both involve emphasizing the practicality or usability of the software.
Criteria: A designer emphasizes the practicality or usability of the software.
Phrase: Highlight practicality.

18.
Concepts: comparison to similar apps, comparison with other applications
Relationship: The concepts are related as they both involve comparing the software to other similar applications.
Criteria: A user compares the software to similar applications.
Phrase: Compare to similar apps.

19.
Concepts: software usability, usability and practicality
Relationship: The concepts are related as they both involve commenting on the usability or practicality of the software.
Criteria: A user comments on the usability or practicality of the software.
Phrase: Comment on software usability.

20.
Concepts: context of use, usability and context of use
Relationship: The concepts are related as they both involve discussing the usability of the software in different contexts.
Criteria: A user discusses the usability of the software in different contexts.
Phrase: Discuss context of use.

21.
Concepts: further suggestion, provide alternative suggestion
Relationship: The concepts are related as they both involve suggesting alternative ideas or solutions.
Criteria: A user suggests an alternative idea or solution.
Phrase: Suggest alternative solutions.

22.
Concepts: suggest alternative system, offering/seeking alternative
Relationship: The concepts are related as they both involve suggesting or seeking alternative systems or solutions.
Criteria: A user suggests or seeks an alternative system or solution.
Phrase: Suggest alternative systems.

23.
Concepts: offering solution, share potential solutions, suggest potential solution
Relationship: The concepts are related as they all involve offering or suggesting solutions to problems or issues.
Criteria: A designer offers or suggests a solution to a problem or issue.
Phrase: Offer solutions.

24.
Concepts: resolution, self-solved
Relationship: The concepts are related as they both involve finding or expressing gratitude for a solution or resolution.
Criteria: A user expresses gratitude for a resolution or solution.
Phrase: Express gratitude for resolution.

25.
Concepts: self answer, self-help
Relationship: The concepts are related as they both involve finding answers or solutions on one's own.
Criteria: A user finds an answer or solution on their own.
Phrase: Find self-answer.

26.
Concepts: support offer, personalized support
Relationship: The concepts are related as they both involve offering or providing support or assistance.
Criteria: A designer offers personalized support or assistance.
Phrase: Offer personalized support.

27.
Concepts: troubleshooting, problem solving
Relationship: The concepts are related as they both involve addressing or resolving technical issues or problems.
Criteria: A designer or user troubleshoots or addresses a technical issue.
Phrase: Troubleshoot issues.

28.
Concepts: technical support, technical support and guidance
Relationship: The concepts are related as they both involve providing technical assistance or guidance.
Criteria: A designer provides technical support or guidance.
Phrase: Provide technical support.

29.
Concepts: explain current limitations, explain current version's limitation
Relationship: The concepts are related as they both involve explaining the limitations or constraints of the current version.
Criteria: A designer explains the limitations or constraints of the current version.
Phrase: Explain current limitations.

30.
Concepts: security concern, highlight security concerns
Relationship: The concepts are related as they both involve expressing or highlighting concerns about security or safety.
Criteria: A user expresses or highlights security concerns.
Phrase: Express security concerns.

31.
Concepts: frustration, user frustration
Relationship: The concepts are related as they both involve expressing frustration or annoyance about technical issues.
Criteria: A user expresses frustration or annoyance about a technical issue.
Phrase: Express frustration.

32.
Concepts: answer a concern, address usability concern
Relationship: The concepts are related as they both involve addressing or responding to user concerns or worries.
Criteria: A designer addresses a user's concern or worry.
Phrase: Address user concerns.