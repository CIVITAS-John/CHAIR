You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (15 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
15. 
Concepts: {Repeat the input 15}
Relationship: {What is logical relationship between concepts in code 15, or N/A if not applicable}
Criteria: {Who did what, and how for code 15}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: making justified suggestions, providing specific feedback
- Participants made suggestions and provided justifications or feedback.
- Participants provided detailed feedback or mentioned prompts based on prior feedback.

2.
Concepts: sharing personal anecdotes, sharing personal interests
- Participants shared personal stories or anecdotes to illustrate points.
- Participants shared their personal interests or topics related to the discussion.

3.
Concepts: describe update details, detailing software updates
- Participants give detailed descriptions of technical updates, including new features and fixes.
- Participants clarified and provided details on new software versions and updates.

4.
Concepts: visual and functional design, discuss design and layout
- Discussions about the visual and functional aspects of the software.
- Participants discuss design considerations and interface layout decisions for the application.

5.
Concepts: sharing development progress, highlighting progress visually
- Designers shared and communicated ongoing development progress.
- Designers highlighted progress and shared visual updates on developments.

6.
Concepts: design proposal, proposing design refinements
- Someone mentions a specific design idea or feature to consider.
- Designers proposed and discussed the need for design refinements.

7.
Concepts: proposing feature improvements, enhancing features and usability
- Users propose new features or suggest enhancements to existing functionalities.
- Users or designers suggest and implement changes to enhance software features and usability.

8.
Concepts: catering to user needs, highlighting user needs
- Designers emphasizing the importance of meeting user needs.
- Users highlighted their specific needs and usability requirements.

9.
Concepts: confirming system compatibility, providing specific compatibility information
- Users confirmed and suggested system compatibility checks.
- Users give detailed information or specific criteria about software or hardware compatibility.

10.
Concepts: highlighting limitations, highlighting outdated technology
- Participants discussed and highlighted system and solution limitations.
- Participants highlighted problems associated with using outdated technology.

11.
Concepts: expressing approval, expressing appreciation and satisfaction
- Users gave affirmative responses and expressed their approval or satisfaction.
- Users expressed their appreciation and satisfaction with the software.

12.
Concepts: explaining design decisions, justify development choices
- Participants explained reasons behind decisions and designs.
- Designers justify development decisions with explanations focused on enhancing usability.

13.
Concepts: guiding feature usage, giving usage instructions
- Designers guided and explained how to use specific software features.
- Designers provided specific instructions for using software features.

14.
Concepts: encouraging and acknowledging feedback
- Designers encouraged users to provide feedback and acknowledged their input.
- Participants sought and gathered feedback or input from the community.

15.
Concepts: proposing solutions
- Designers offer or propose potential technical solutions to user problems.
- Participants provided, requested, and discussed alternative solutions to problems.
===
---
Definitions for each code (15 in total):
1.
Concepts: making justified suggestions, providing specific feedback
Relationship: Both actions involve participants recommending actions or improvements with reasoning or detail.
Criteria: Participants made suggestions and provided justifications or detailed feedback based on previous prompts or issues.
Phrase: Offering constructive feedback

2.
Concepts: sharing personal anecdotes, sharing personal interests
Relationship: Both involve participants contributing personal experiences and interests to discussions.
Criteria: Participants shared personal stories and interests to illustrate points or engage with the community.
Phrase: Sharing personal experiences

3.
Concepts: describe update details, detailing software updates
Relationship: Both concepts relate to explaining technical aspects and new features of updates in depth.
Criteria: Participants gave detailed descriptions and clarifications on new software updates, versions, and their features.
Phrase: Explaining updates

4.
Concepts: visual and functional design, discuss design and layout
Relationship: Both concepts pertain to discussions about the aesthetic and functional components of the software's design.
Criteria: Participants discussed the visual and functional aspects, including design considerations and interface layout decisions for the software.
Phrase: Discussing design aspects

5.
Concepts: sharing development progress, highlighting progress visually
Relationship: Both involve communicating ongoing development through updates and visual representations.
Criteria: Designers shared and visually highlighted the ongoing development progress of the application.
Phrase: Communicating development progress

6.
Concepts: design proposal, proposing design refinements
Relationship: Both involve suggesting and discussing new design ideas and refinements.
Criteria: Participants mentioned specific design ideas and proposed refinements for consideration.
Phrase: Proposing design improvements

7.
Concepts: proposing feature improvements, enhancing features and usability
Relationship: Both focus on suggesting and implementing enhancements to software features and usability.
Criteria: Users or designers proposed new features or enhancements to existing functionalities to improve usability.
Phrase: Enhancing software features

8.
Concepts: catering to user needs, highlighting user needs
Relationship: Both emphasize understanding and addressing users' needs and requirements.
Criteria: Designers and users highlighted and emphasized the importance of meeting users' specific needs and requirements.
Phrase: Addressing user needs

9.
Concepts: confirming system compatibility, providing specific compatibility information
Relationship: Both involve verifying and detailing the compatibility of the system with various hardware or software.
Criteria: Users confirmed and provided detailed information and criteria related to system compatibility.
Phrase: Verifying system compatibility

10.
Concepts: highlighting limitations, highlighting outdated technology
Relationship: Both involve bringing attention to the limitations or drawbacks of current or outdated technology.
Criteria: Participants discussed and highlighted the limitations and issues related to outdated technology or systems.
Phrase: Identifying technology limitations

11.
Concepts: expressing approval, expressing appreciation and satisfaction
Relationship: Both actions involve users positively reacting to the software with approval or satisfaction.
Criteria: Users expressed their approval, appreciation, and satisfaction with the software.
Phrase: Showing user satisfaction

12.
Concepts: explaining design decisions, justify development choices
Relationship: Both involve providing reasons and justifications for design and development decisions.
Criteria: Participants explained and justified decisions behind designs and development choices to enhance usability.
Phrase: Justifying design choices

13.
Concepts: guiding feature usage, giving usage instructions
Relationship: Both involve providing instructions and guidance on how to use software features.
Criteria: Designers guided and provided specific instructions for using various software features.
Phrase: Instructing on feature use

14.
Concepts: encouraging and acknowledging feedback
Relationship: Both involve interactions where feedback is actively sought, encouraged, and acknowledged.
Criteria: Designers encouraged users to provide feedback and acknowledged the input from the community.
Phrase: Soliciting and recognizing feedback

15.
Concepts: proposing solutions
Relationship: N/A
Criteria: Participants offered, requested, and discussed potential solutions to technical problems faced by users.
Phrase: Suggesting solutions
---