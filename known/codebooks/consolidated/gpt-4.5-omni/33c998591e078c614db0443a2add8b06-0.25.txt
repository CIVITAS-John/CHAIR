You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (23 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
23. 
Concepts: {Repeat the input 23}
Relationship: {What is logical relationship between concepts in code 23, or N/A if not applicable}
Criteria: {Who did what, and how for code 23}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: answering questions, providing technical clarification
- Designers provide clarifications and answers to user questions.
- Designers request clarification or provide technical clarifications on feedback or suggestions.

2.
Concepts: confirming understanding, clarifying user requests
- A designer expresses understanding and asks for more details and users or designers confirm understanding of statements or requests.
- Users or designers ask questions to gather information or clarify doubts and ask follow-up questions to clarify requests or requirements.

3.
Concepts: answering queries, answering for design support
- Users or designers provide answers and resources to community queries.
- A user provides answers or support for design-related questions.

4.
Concepts: explaining design rationale, explaining design philosophy
- Designers explain the goals or intentions behind the design of the software and explain plans or the rationale behind certain features.
- A participant discusses the principles or philosophy behind the design and the underlying principles and approaches guiding the design and development of the product.

5.
Concepts: acknowledging limitations, addressing platform constraints
- Designers address and acknowledge potential limitations or usability issues.
- Designers discuss and adapt to platform limitations and constraints.

6.
Concepts: evaluating usability, addressing usability issues
- Users evaluate usability and provide comparative feedback.
- Users identify and designers address potential usability issues.

7.
Concepts: collaborate on problem-solving, engaging in problem-solving
- Instances where designers and users work together to address issues and improve the software.
- A designer troubleshoots issues with a user, tries to understand the problems users encounter, interacts with users to clarify input-related issues, and engages in problem-solving with users.

8.
Concepts: promoting open communication, accepting and sharing solutions
- Designers encourage open communication and promise to invite community feedback.
- Designers accept and acknowledge suggestions from the community and share potential solutions or improvements based on feedback.

9.
Concepts: encouraging user interaction, soliciting user feedback
- Designers invite user questions and encourage interaction and feedback.
- Designers invite, encourage, or solicit feedback from users and invite users to suggest new features or improvements.

10.
Concepts: detailing update content, providing detailed updates
- Designers describe and clarify the content and details of updates.
- Designers list bug fixes and provide detailed updates about new versions.

11.
Concepts: announcing updates, announcing new features
- Designers announce software updates to the community.
- Designers announce the release of new features or versions.

12.
Concepts: confirming updates, engaging users with updates
- Designers or users confirm the release of updates or planned features.
- Designers reassure, prepare, and engage users with information about upcoming updates.

13.
Concepts: describe future plans, describing planned features
- Discussions about potential future developments and directions for the product.
- Participants explain the need for and describe planned features.

14.
Concepts: discussing system requirements, considering future compatibility, discussing software compatibility
- Designers and users discuss system requirements and compatibility information.
- Designers discuss and suggest checking future compatibility with older systems.
- Designers theorize and confirm the compatibility of the software with specific systems.

15.
Concepts: explain development process, explaining software limitations
- Explaining the development process or compatibility of the software.
- Designers explain the limitations and testing status of the current software version.

16.
Concepts: understanding user background, showing interest in educational context
- Designers inquire about users' teaching backgrounds and needs.
- A user or designer provides context related to education and a designer shows interest in the user's teaching context.

17.
Concepts: sharing user experiences, highlighting student engagement
- Users share their experiences and positive classroom outcomes using the software.
- Users highlight student reactions and engagement with the software.

18.
Concepts: proposing usability improvements, suggesting design improvements
- Users suggest improvements to usability, workflow, and features.
- Users suggest new features, improvements, or provide feedback and suggestions.

19.
Concepts: technical question, requesting technical support
- Users ask technical questions about downloading and using the software.
- Users ask technical questions and request support for the software.

20.
Concepts: information seeking, inquiring about software access
- Users asking questions to gain knowledge or resources related to the software.
- Users inquire about how to download and access the software and platform versions.

21.
Concepts: ask for resources, requesting resources
- Asking for resources or information.
- Users request a user manual and ask for the location of resources.

22.
Concepts: expressive, using non-verbal communication
- Users and designers use expressive language and emojis in their interactions.
- Users use emojis or other non-verbal cues to express emotions or reactions.

23.
Concepts: providing detailed responses, exchanging additional information
- Participants elaborate on questions and provide detailed responses.
- Participants ask follow-up questions and exchange additional information.
===
---
Definitions for each code (23 in total):
1.
Concepts: answering questions, providing technical clarification
Relationship: Both involve designers addressing user inquiries.
Criteria: Designers provide clarifications and answers to user questions or feedback.
Phrase: Providing technical clarifications

2.
Concepts: confirming understanding, clarifying user requests
Relationship: Both involve ensuring mutual understanding between users and designers.
Criteria: Users or designers confirm understanding and ask follow-up questions to clarify requests or requirements.
Phrase: Clarifying user requests

3.
Concepts: answering queries, answering for design support
Relationship: Both involve responding to community queries.
Criteria: Users or designers provide answers and resources to community queries, including design-related questions.
Phrase: Answering community queries

4.
Concepts: explaining design rationale, explaining design philosophy
Relationship: Both involve explaining the reasoning behind design choices.
Criteria: Designers explain the goals, intentions, principles, or philosophy behind the design.
Phrase: Explaining design rationale

5.
Concepts: acknowledging limitations, addressing platform constraints
Relationship: Both involve discussing the limitations of the software.
Criteria: Designers acknowledge potential limitations or usability issues and discuss platform constraints.
Phrase: Addressing platform constraints

6.
Concepts: evaluating usability, addressing usability issues
Relationship: Both involve assessing and improving usability.
Criteria: Users evaluate usability and provide feedback, while designers address identified usability issues.
Phrase: Addressing usability issues

7.
Concepts: collaborate on problem-solving, engaging in problem-solving
Relationship: Both involve collaborative efforts to solve problems.
Criteria: Designers and users work together to troubleshoot and resolve issues.
Phrase: Collaborating on problem-solving

8.
Concepts: promoting open communication, accepting and sharing solutions
Relationship: Both involve fostering communication and sharing solutions.
Criteria: Designers encourage open communication, accept community suggestions, and share potential solutions.
Phrase: Promoting open communication

9.
Concepts: encouraging user interaction, soliciting user feedback
Relationship: Both involve inviting user participation and feedback.
Criteria: Designers encourage user interaction and solicit feedback for improvements.
Phrase: Encouraging user interaction

10.
Concepts: detailing update content, providing detailed updates
Relationship: Both involve providing detailed information about updates.
Criteria: Designers describe and clarify the content and details of updates.
Phrase: Providing detailed updates

11.
Concepts: announcing updates, announcing new features
Relationship: Both involve making announcements to the community.
Criteria: Designers announce software updates and new features.
Phrase: Announcing updates

12.
Concepts: confirming updates, engaging users with updates
Relationship: Both involve communicating about updates.
Criteria: Designers or users confirm updates and engage the community with information about upcoming features.
Phrase: Engaging users with updates

13.
Concepts: describe future plans, describing planned features
Relationship: Both involve discussing future developments.
Criteria: Participants discuss potential future developments and describe planned features.
Phrase: Describing future plans

14.
Concepts: discussing system requirements, considering future compatibility, discussing software compatibility
Relationship: All involve discussing compatibility and requirements.
Criteria: Designers and users discuss system requirements and future compatibility of the software.
Phrase: Discussing software compatibility

15.
Concepts: explain development process, explaining software limitations
Relationship: Both involve explaining aspects of software development.
Criteria: Designers explain the development process and limitations of the software.
Phrase: Explaining software limitations

16.
Concepts: understanding user background, showing interest in educational context
Relationship: Both involve understanding the user's context.
Criteria: Designers inquire about users' teaching backgrounds and show interest in their educational context.
Phrase: Understanding user background

17.
Concepts: sharing user experiences, highlighting student engagement
Relationship: Both involve sharing experiences and outcomes.
Criteria: Users share their experiences and highlight student engagement with the software.
Phrase: Sharing user experiences

18.
Concepts: proposing usability improvements, suggesting design improvements
Relationship: Both involve suggesting improvements.
Criteria: Users suggest usability and design improvements.
Phrase: Proposing usability improvements

19.
Concepts: technical question, requesting technical support
Relationship: Both involve seeking technical assistance.
Criteria: Users ask technical questions and request support for the software.
Phrase: Requesting technical support

20.
Concepts: information seeking, inquiring about software access
Relationship: Both involve seeking information about the software.
Criteria: Users inquire about how to access and download the software.
Phrase: Inquiring about software access

21.
Concepts: ask for resources, requesting resources
Relationship: Both involve requesting resources.
Criteria: Users request resources or information, such as user manuals.
Phrase: Requesting resources

22.
Concepts: expressive, using non-verbal communication
Relationship: Both involve non-verbal communication.
Criteria: Users and designers use expressive language and emojis in their interactions.
Phrase: Using non-verbal communication

23.
Concepts: providing detailed responses, exchanging additional information
Relationship: Both involve detailed communication.
Criteria: Participants provide detailed responses and exchange additional information.
Phrase: Exchanging additional information
---