You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: supports user needs, addressing user needs
- A designer supports user needs or requests.
- Designer 1 addresses a user's needs or requirements.

2.
Concepts: adapts to user needs, adapting to user needs
- Designer mentions adapting the system to meet user needs.
- Adapts to user needs or feedback by making changes or adjustments.
- Adapting to user constraints or limitations.
- Designer mentions adapting to user needs.

3.
Concepts: exploring context of use, providing context for software use
- Designer explores the context of software use.
- A designer provides context or background information about the software's use.

4.
Concepts: shows interest in user context, shows interest in user background
- Designer shows interest in the user's context or situation.
- A designer shows interest in a user's background or context.

5.
Concepts: considering user context, acknowledging user context
- The designer considers the user's context or situation.
- The designer considers or takes into account the user's context, limitations, or circumstances.
- Designer acknowledges user's context or situation
- Designers acknowledge or respond to users' context or situation.

6.
Concepts: gathering requirements, inquiring about user needs
- A designer asks for detailed requirements or information from a user.
- Designers ask users about their needs or requirements.

7.
Concepts: gathering context, seeking contextual information, designer 1 seeks context for feature use
- The designer gathers context or asks questions to clarify user needs or situations.
- The designer seeks contextual information or clarification about a user's situation.
- A designer seeks contextual information or clarification from a user.
- Designer 1 asks for context or clarification about a user's request or situation.

8.
Concepts: environment inquiry, seeking information about user environment
- Designer inquires about the user's environment or setup.
- A developer or designer seeks information about a user's environment, setup, or context.

9.
Concepts: software comparison, compares to other tools
- A user compares the software to other software.
- A user compares the software to other tools or platforms.

10.
Concepts: comparison to other applications, positive comparison to other software
- User compares the software to other applications, highlighting its practicality.
- Users compare the product favorably to other similar software or tools.

11.
Concepts: evaluating software usability, validate software effectiveness
- A user evaluates the usability or practicality of the software.
- A user validates the effectiveness or usefulness of the software.

12.
Concepts: provides feedback on software, providing specific feedback
- A user provides feedback on the software's effectiveness or usability.
- Users provide specific feedback or suggestions about the software or its features.

13.
Concepts: praising software practicality, appreciating software practicality, praising software usability, appreciating practicality
- User praises the software's practicality.
- User appreciates the software's practicality, and designer responds.
- A user praises the software as practical and user-friendly.
- A user appreciates the practicality or usefulness of the software.

14.
Concepts: practicality highlighting, highlighting practical application, highlighting user experience
- A user highlights the practicality or usefulness of the software.
- User highlights the practical application or usefulness of a feature
- A user highlights the user experience and practicality of the software.

15.
Concepts: appreciation of features, appreciating software features
- A user expresses appreciation or admiration for a feature or aspect of the software.
- A user appreciates a specific feature or aspect of the software.

16.
Concepts: compliment, praising software, expressing gratitude for the software
- Users express appreciation or admiration for the software or its features.
- Users express praise or admiration for the software.
- A user expresses admiration or appreciation for the software's quality or functionality.
- Expressing praise or positive feedback about the software.
- Users express gratitude or thanks for the product or its features.

17.
Concepts: expresses approval, providing positive feedback about the software, expressing software satisfaction, expressing positive opinions
- A user expresses approval, satisfaction, or enthusiasm for the software or a feature.
- A user expresses a positive opinion about the software.
- Users express satisfaction or positive experiences with the software.
- A user expresses a positive opinion about the software or application.

18.
Concepts: share success story, positive experience report
- User shares a success story or positive experience with the software.
- User reports a positive experience or outcome from using the software.

19.
Concepts: complimenting the 3d effect, compliments specific feature, complimenting software features
- A user compliments the 3D effect of the software.
- A user compliments a specific feature or aspect of the software, such as the 3D effect.
- User compliments the software's 3D effect.

20.
Concepts: praising simulation effect, praising software effectiveness, praising the simulation effect, simulation effect praise
- A user praises the simulation effect of the software.
- Praises or appreciates the simulation effect or quality of the platform.
- A user expresses a positive opinion about the software's effectiveness or simulation quality.
- User praises the software's simulation effect or educational value.

21.
Concepts: sharing personal interest, revealing personal interests
- Designer or moderator shares their personal interest or passion related to the platform's subject matter.
- Expresses personal interest or enthusiasm for a particular topic or feature.
- Designer shares personal interest or hobby
- Designer or moderator reveals their personal interests or passions related to the platform's subject matter.

22.
Concepts: personal interest, personal interest expression
- Designers express their personal interest in a specific topic or field.
- A designer expresses personal interest or enthusiasm for a specific topic or feature.

23.
Concepts: expresses interest, expressing interest
- A user expresses interest in specific topics or areas of study.
- A user expresses interest in a specific area (e.g., mechanics).
- User expresses interest in using the platform

24.
Concepts: interest in recent development updates, expressing interest in platform development, showing interest in ongoing development
- User shows interest in recent development updates.
- User expresses curiosity about recent updates or changes to the platform.
- User shows interest in ongoing development, updates, or changes to the platform.

25.
Concepts: interest in software, expressing interest in using software
- User expresses interest in downloading or using the software.
- A user expresses interest in using the software.

26.
Concepts: showing interest, shows interest in functionality, demonstrating user interest
- The user shows interest or curiosity about the project or features.
- A user shows interest in the software.
- A user shows interest in a specific feature or functionality.
- User shows enthusiasm or interest in upcoming updates or features.

27.
Concepts: enthusiasm, enthusiasm expressed
- A designer or user expresses enthusiasm or appreciation for the platform or its features.
- A designer or user expresses enthusiasm or excitement.

28.
Concepts: expressing progress, reacting positively to progress
- A user expresses progress or excitement about a task or feature.
- User reacts positively to software progress

29.
Concepts: reacting to updates, expressing positive sentiment about new features
- User reacts to updates or new features with enthusiasm or excitement.
- Users express positive emotions or sentiments about new features or updates.

30.
Concepts: update anticipation, showing anticipation
- A user demonstrates engagement and anticipation towards updates or new features.
- A user expresses anticipation or eagerness for a software update or feature.
- Expressing anticipation or expectation about a particular event or update.

31.
Concepts: appreciation for design work, appreciation for design vision, appreciation of designers
- Expressing appreciation or gratitude for the designer's work.
- Expressing appreciation or admiration for the designer's vision.
- Users express appreciation or admiration for the designers' work or dedication.

32.
Concepts: appreciates feedback, appreciating user support, acknowledging user support
- The designer expresses gratitude for user feedback or suggestions.
- A designer expresses appreciation for user support or feedback.
- The designer expresses gratitude or appreciation for user support or feedback.
- A designer acknowledges user support.
===
Here are the definitions for each code:

---
1.
Concepts: supports user needs, addressing user needs
Relationship: The concepts are related in that they both describe the designer's actions in meeting user requirements.
Criteria: A designer addresses user needs by supporting their requirements.
Phrase: Addressing user needs.

2.
Concepts: adapts to user needs, adapting to user needs
Relationship: The concepts are related in that they both describe the designer's actions in adjusting to user requirements.
Criteria: A designer adapts to user needs by making changes or adjustments.
Phrase: Adapting to user needs.

3.
Concepts: exploring context of use, providing context for software use
Relationship: The concepts are related in that they both describe the designer's actions in understanding user context.
Criteria: A designer provides context for software use by exploring user situations.
Phrase: Exploring user context.

4.
Concepts: shows interest in user context, shows interest in user background
Relationship: The concepts are related in that they both describe the designer's attitude towards user context.
Criteria: A designer shows interest in user context by inquiring about user background.
Phrase: Showing interest in user context.

5.
Concepts: considering user context, acknowledging user context
Relationship: The concepts are related in that they both describe the designer's consideration of user context.
Criteria: A designer considers user context by acknowledging user situations.
Phrase: Considering user context.

6.
Concepts: gathering requirements, inquiring about user needs
Relationship: The concepts are related in that they both describe the designer's actions in collecting user information.
Criteria: A designer gathers requirements by inquiring about user needs.
Phrase: Gathering user requirements.

7.
Concepts: gathering context, seeking contextual information, designer 1 seeks context for feature use
Relationship: The concepts are related in that they all describe the designer's actions in collecting user context.
Criteria: A designer gathers context by seeking information about user situations.
Phrase: Gathering user context.

8.
Concepts: environment inquiry, seeking information about user environment
Relationship: The concepts are related in that they both describe the designer's actions in collecting user environment information.
Criteria: A designer inquires about user environment by seeking information.
Phrase: Inquiring about user environment.

9.
Concepts: software comparison, compares to other tools
Relationship: The concepts are related in that they both describe the user's actions in evaluating software.
Criteria: A user compares software to other tools by evaluating its features.
Phrase: Comparing software to others.

10.
Concepts: comparison to other applications, positive comparison to other software
Relationship: The concepts are related in that they both describe the user's positive evaluation of software.
Criteria: A user compares software favorably to other applications by highlighting its practicality.
Phrase: Comparing software favorably.

11.
Concepts: evaluating software usability, validate software effectiveness
Relationship: The concepts are related in that they both describe the user's actions in assessing software usability.
Criteria: A user evaluates software usability by validating its effectiveness.
Phrase: Evaluating software usability.

12.
Concepts: provides feedback on software, providing specific feedback
Relationship: The concepts are related in that they both describe the user's actions in giving feedback.
Criteria: A user provides feedback on software by giving specific suggestions.
Phrase: Providing software feedback.

13.
Concepts: praising software practicality, appreciating software practicality, praising software usability, appreciating practicality
Relationship: The concepts are related in that they all describe the user's positive evaluation of software.
Criteria: A user praises software practicality by appreciating its usability.
Phrase: Praising software practicality.

14.
Concepts: practicality highlighting, highlighting practical application, highlighting user experience
Relationship: The concepts are related in that they all describe the user's actions in emphasizing software practicality.
Criteria: A user highlights software practicality by emphasizing its user experience.
Phrase: Highlighting software practicality.

15.
Concepts: appreciation of features, appreciating software features
Relationship: The concepts are related in that they both describe the user's positive evaluation of software features.
Criteria: A user appreciates software features by expressing admiration.
Phrase: Appreciating software features.

16.
Concepts: compliment, praising software, expressing gratitude for the software
Relationship: The concepts are related in that they all describe the user's positive evaluation of software.
Criteria: A user expresses gratitude for software by praising its features.
Phrase: Expressing gratitude for software.

17.
Concepts: expresses approval, providing positive feedback about the software, expressing software satisfaction, expressing positive opinions
Relationship: The concepts are related in that they all describe the user's positive evaluation of software.
Criteria: A user expresses approval by providing positive feedback about software.
Phrase: Expressing software approval.

18.
Concepts: share success story, positive experience report
Relationship: The concepts are related in that they both describe the user's actions in sharing positive experiences.
Criteria: A user shares a success story by reporting a positive experience.
Phrase: Sharing a success story.

19.
Concepts: complimenting the 3d effect, compliments specific feature, complimenting software features
Relationship: The concepts are related in that they all describe the user's positive evaluation of software features.
Criteria: A user compliments software features by praising the 3D effect.
Phrase: Complimenting software features.

20.
Concepts: praising simulation effect, praising software effectiveness, praising the simulation effect, simulation effect praise
Relationship: The concepts are related in that they all describe the user's positive evaluation of software effectiveness.
Criteria: A user praises software effectiveness by appreciating the simulation effect.
Phrase: Praising software effectiveness.

21.
Concepts: sharing personal interest, revealing personal interests
Relationship: The concepts are related in that they both describe the designer's actions in sharing personal enthusiasm.
Criteria: A designer shares personal interest by revealing personal passions.
Phrase: Sharing personal interest.

22.
Concepts: personal interest, personal interest expression
Relationship: The concepts are related in that they both describe the designer's personal enthusiasm.
Criteria: A designer expresses personal interest by sharing enthusiasm.
Phrase: Expressing personal interest.

23.
Concepts: expresses interest, expressing interest
Relationship: The concepts are related in that they both describe the user's actions in expressing enthusiasm.
Criteria: A user expresses interest by sharing enthusiasm.
Phrase: Expressing interest.

24.
Concepts: interest in recent development updates, expressing interest in platform development, showing interest in ongoing development
Relationship: The concepts are related in that they all describe the user's actions in expressing interest in software development.
Criteria: A user expresses interest in recent updates by showing enthusiasm for ongoing development.
Phrase: Expressing interest in development.

25.
Concepts: interest in software, expressing interest in using software
Relationship: The concepts are related in that they both describe the user's actions in expressing enthusiasm for software.
Criteria: A user expresses interest in software by expressing enthusiasm for using it.
Phrase: Expressing interest in software.

26.
Concepts: showing interest, shows interest in functionality, demonstrating user interest
Relationship: The concepts are related in that they all describe the user's actions in expressing enthusiasm for software features.
Criteria: A user shows interest in software by demonstrating enthusiasm for its functionality.
Phrase: Showing interest in software.

27.
Concepts: enthusiasm, enthusiasm expressed
Relationship: The concepts are related in that they both describe the user's or designer's positive emotions.
Criteria: A user or designer expresses enthusiasm by showing excitement.
Phrase: Expressing enthusiasm.

28.
Concepts: expressing progress, reacting positively to progress
Relationship: The concepts are related in that they both describe the user's actions in responding to software progress.
Criteria: A user expresses progress by reacting positively to software updates.
Phrase: Expressing progress.

29.
Concepts: reacting to updates, expressing positive sentiment about new features
Relationship: The concepts are related in that they both describe the user's actions in responding to software updates.
Criteria: A user reacts to updates by expressing positive sentiment about new features.
Phrase: Reacting to updates.

30.
Concepts: update anticipation, showing anticipation
Relationship: The concepts are related in that they both describe the user's actions in expressing enthusiasm for upcoming updates.
Criteria: A user demonstrates anticipation by showing enthusiasm for upcoming updates.
Phrase: Demonstrating anticipation.

31.
Concepts: appreciation for design work, appreciation for design vision, appreciation of designers
Relationship: The concepts are related in that they all describe the user's positive evaluation of design work.
Criteria: A user expresses appreciation for design work by acknowledging the designer's vision.
Phrase: Appreciating design work.

32.
Concepts: appreciates feedback, appreciating user support, acknowledging user support
Relationship: The concepts are related in that they all describe the designer's positive response to user feedback.
Criteria: A designer appreciates feedback by acknowledging user support.
Phrase: Appreciating user feedback.