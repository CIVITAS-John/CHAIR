You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (16 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
16. 
Concepts: {Repeat the input 16}
Relationship: {What is logical relationship between concepts in code 16, or N/A if not applicable}
Criteria: {Who did what, and how for code 16}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: share updates, announce updates
- Designers share updates and release notes with the online community.
- Designers clarify, confirm, and announce updates for the online community.

2.
Concepts: communicating update complexity and timeline, explain delays or announce update timelines
- Communication about the complexity, timeline, or progress of updates
- Designers explain delays or provide updates on the development process, announcing and offering timelines for updates and releases.

3.
Concepts: prioritize development, task listing and prioritization
- Designers prioritize tasks or features in the development process, explaining the rationale.
- The designer lists or outlines tasks, features, or improvements that need to be addressed or implemented.

4.
Concepts: addressing concerns through solutions, address concerns or acknowledge issues
- Designers or users address issues by providing solutions or suggestions to resolve concerns.
- A designer addresses or responds to user concerns or worries, acknowledging the need to investigate or address an issue.

5.
Concepts: refine design features or propose advanced features, promote refinement or refine development plans
- Designers refine design features and simulation settings, proposing and planning advanced features.
- Users promote refinement and suggest incremental development, designers plan iterative feedback and refine development plans based on user input.

6.
Concepts: adapt to constraints, manage limitations or consider limitations
- Designers adapt to constraints and provide context for design constraints.
- Designers manage limitations by setting boundaries, considering limitations, exploring technical constraints, and anticipating challenges.

7.
Concepts: explain feature usage, clarifying features and platform functionality
- Designers explain feature usage and demonstrate functionality.
- The designer clarifies existing features and platform features to users.

8.
Concepts: detailing experimental features, describing functionality and experimental details
- Experimental features or functionalities are detailed.
- Designers describe or explain functionality or experimental details.

9.
Concepts: consider system requirements, ensure system compatibility
- Designers consider system requirements and hardware environment compatibility.
- Designers ensure system compatibility by addressing issues and answering questions.

10.
Concepts: expressing hopes for features, support feature plans or development focus
- User expresses hopes or wishes for specific features, functionalities, or improvements.
- A user supports or endorses a specific feature or idea, showing development support.

11.
Concepts: make a suggestion, request or propose new features
- Users make suggestions or recommend the addition of a feature or function.
- A user requests new features or functionalities for the software.

12.
Concepts: request access, request or ask about updates
- Users request access to software or features, or request access to specific versions or platforms of the software.
- A user requests or inquires about updates or new features.

13.
Concepts: asking questions, inquiring about usage
- A user or designer asks a question about the software or its features.
- A user inquires about the usage of a feature or system.

14.
Concepts: extend a welcoming gesture, reciprocate social gestures
- Designers or users greet users and the community in a friendly manner.
- Designers reciprocate social gestures and respond with politeness and kindness.

15.
Concepts: foster community interaction, fostering community trust
- Designers build rapport and foster a sense of belonging and community interaction.
- Designers foster a sense of safety, openness, and trust within the online community or take actions to promote a sense of community.

16.
Concepts: engaging with users, encouraging discussion
- A designer engages with users in conversation or discussion about design or functionality.
- A designer initiates discussion or encourages users to share thoughts on a specific topic.
===
Here are the definitions for each code:

---
1.
Concepts: share updates, announce updates
Relationship: N/A
Criteria: Designers share updates with the online community.
Phrase: Share updates with the community.

2.
Concepts: communicating update complexity and timeline, explain delays or announce update timelines
Relationship: The concepts are related as they both involve communication about updates.
Criteria: Designers communicate update complexity and timelines to the online community.
Phrase: Communicate update timelines.

3.
Concepts: prioritize development, task listing and prioritization
Relationship: The concepts are related as they both involve planning and organizing development tasks.
Criteria: Designers prioritize development tasks and list features to be addressed.
Phrase: Prioritize development tasks.

4.
Concepts: addressing concerns through solutions, address concerns or acknowledge issues
Relationship: The concepts are related as they both involve responding to user concerns.
Criteria: Designers address user concerns by providing solutions or acknowledging issues.
Phrase: Address user concerns.

5.
Concepts: refine design features or propose advanced features, promote refinement or refine development plans
Relationship: The concepts are related as they both involve improving design features.
Criteria: Designers refine design features and propose advanced features based on user input.
Phrase: Refine design features.

6.
Concepts: adapt to constraints, manage limitations or consider limitations
Relationship: The concepts are related as they both involve working within limitations.
Criteria: Designers adapt to constraints and manage limitations in the development process.
Phrase: Manage limitations.

7.
Concepts: explain feature usage, clarifying features and platform functionality
Relationship: The concepts are related as they both involve clarifying feature usage.
Criteria: Designers explain feature usage and clarify platform functionality.
Phrase: Explain feature usage.

8.
Concepts: detailing experimental features, describing functionality and experimental details
Relationship: The concepts are related as they both involve describing experimental features.
Criteria: Designers detail experimental features and describe functionality.
Phrase: Detail experimental features.

9.
Concepts: consider system requirements, ensure system compatibility
Relationship: The concepts are related as they both involve ensuring system compatibility.
Criteria: Designers consider system requirements and ensure system compatibility.
Phrase: Ensure system compatibility.

10.
Concepts: expressing hopes for features, support feature plans or development focus
Relationship: The concepts are related as they both involve expressing support for features.
Criteria: Users express hopes for features and support development focus.
Phrase: Express hopes for features.

11.
Concepts: make a suggestion, request or propose new features
Relationship: The concepts are related as they both involve proposing new features.
Criteria: Users make suggestions and propose new features.
Phrase: Propose new features.

12.
Concepts: request access, request or ask about updates
Relationship: The concepts are related as they both involve requesting access or information.
Criteria: Users request access to software or updates.
Phrase: Request access or updates.

13.
Concepts: asking questions, inquiring about usage
Relationship: The concepts are related as they both involve seeking information.
Criteria: Users ask questions and inquire about feature usage.
Phrase: Ask about feature usage.

14.
Concepts: extend a welcoming gesture, reciprocate social gestures
Relationship: The concepts are related as they both involve social interactions.
Criteria: Designers extend welcoming gestures and reciprocate social gestures.
Phrase: Extend a welcoming gesture.

15.
Concepts: foster community interaction, fostering community trust
Relationship: The concepts are related as they both involve building community relationships.
Criteria: Designers foster community interaction and trust.
Phrase: Foster community trust.

16.
Concepts: engaging with users, encouraging discussion
Relationship: The concepts are related as they both involve interacting with users.
Criteria: Designers engage with users and encourage discussion.
Phrase: Engage with users.