You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: explaining design limitations, technical limitations are communicated directly
- A designer explains or justifies design limitations or constraints.
- Designer directly communicates technical limitations or constraints.

2.
Concepts: revealing potential challenges, expressing caution about limitations
- A designer highlights unique challenges or considerations in using a feature.
- A user or designer expresses caution, acknowledges limitations, or hints at potential considerations.

3.
Concepts: technical feasibility assessment, assessing and confirming feasibility
- Assessing technical feasibility or requirements
- Designers assess and confirm the feasibility of features or requests, evaluating their practicality.

4.
Concepts: exploring technical possibilities, researching and detailing new features
- A designer considers or explores different possibilities or solutions.
- Designers research and detail new or experimental features, exploring possibilities for development.

5.
Concepts: discussing design decisions and rationale, expressing design thoughts and considerations
- Designers discuss design decisions or plans, explaining design rationale and intentions.
- Designers express thoughts or opinions about design decisions or improvements, informing design considerations.

6.
Concepts: explaining plans, explaining project focus and goals
- Designer explains and details plans and features.
- Designers explain or clarify project focus and goals.

7.
Concepts: setting goals, development goals
- Designers set goals or priorities for development.
- Designer discusses long-term goals, development plans, or feature priorities.

8.
Concepts: prioritizing releases and managing dependencies, sequencing design phases and content development
- Designer prioritizes releases and strategies, and manages dependencies or prioritizes tasks.
- Designer sequences or prioritizes tasks or features, and plans the sequential development of content or features.

9.
Concepts: designing intuitive interface, explaining theoretical concepts and design principles
- Designer discusses or explores design principles or approaches for creating an intuitive interface.
- Designer explains theoretical concepts or principles, and explains design principles or philosophy behind the platform.

10.
Concepts: explaining development and optimization processes, informing users through explanations and highlights
- Designers explain or provide insight into the development process, explaining optimization process.
- Designers explain significance and highlight key features to inform users about the Physics Lab software, and explain differences and review processes to inform users about the development of the Physics Lab software.

11.
Concepts: facilitating learning, educating users through design insight
- Designer explains how a feature facilitates learning or problem-solving.
- Designers educate users about design choices or technical aspects, providing educational insight, and explain the educational benefits or value of a feature, enhancing educational value.

12.
Concepts: clarifying and refining functionality, refining design features and contributing to refinement
- Designers address issues, clarify functionality, and refine design decisions, incorporating feedback and suggestions.
- Designers refine or improve design features, contributing to the refinement of the software design.

13.
Concepts: clarifying and streamlining workflows, streamlining software functionality
- Designers clarify and streamline workflows or processes to improve user experience.
- Designers streamline functionality and improve usability through simplification and enhancement of software features.

14.
Concepts: clarifying software functionality, reassuring users about software functionality
- Designers clarify software functionality and feature purposes to facilitate users' understanding.
- Designers reassure users about the software's availability or functionality, ensuring an intuitive interface.

15.
Concepts: supporting and enhancing user experience, providing design support and guidance
- Designers provide support and specify details to enhance user experience.
- Designers provide resources and guidance to facilitate users' effective use of the software.

16.
Concepts: influencing development decisions, advising on development priorities
- Users influence software development by providing suggestions, ideas, and feedback.
- Users and designers advise on and prioritize software development to ensure effective allocation of resources.

17.
Concepts: ensuring collective input, ensuring collective decision making
- Designers and users seek consensus and ensure collective input to inform software development decisions.
- The designer ensures collective decision-making or involvement in the development or design process in the Physics Lab online community.

18.
Concepts: iterating on development plan, iterating on design with feedback
- Refining or adjusting the development plan based on feedback
- Designers iterate on design, planning for iterative feedback, and describe the iterative development process, influenced by user feedback and educational needs.

19.
Concepts: affirming user points and understanding, seeking design validation and confirming user input
- Designers affirm user points and confirm understanding, acknowledging user perspectives and arguments.
- Designers confirm or acknowledge user input, support design decisions, and seek validation from users, and confirm diagnoses, affirm statements, and confirm user feedback to acknowledge user input.

20.
Concepts: validate plans and perspectives, ensuring design accuracy and alignment
- Users and designers validate plans and perspectives.
- Designers ensure accuracy and confirm design alignment with users.

21.
Concepts: encouraging feedback, providing design feedback
- Designers encourage users to provide feedback, suggestions, or comments.
- Designers seek or provide feedback on design or features.

22.
Concepts: considering user input, responding to user input and incorporating feedback
- Designers consider user feedback, suggestions, or input, pondering their opinions and ideas.
- Designers respond to user input and advice, and incorporate user feedback and suggestions into the design.

23.
Concepts: accepting and agreeing to implement user suggestions, responding to feature requests and fulfilling user needs
- Designers accept or agree to user requests or suggestions, agree to implement user suggestions, and promise to consider user feedback and commit to consultation.
- A designer responds to a user's request or suggestion for a new feature, and fulfills or responds to user requests, validating their needs or suggestions.

24.
Concepts: inquiring about user background, showing empathy and understanding user needs
- Designers ask about users' backgrounds or professional contexts to understand their perspectives.
- Designers show interest in user background and express comprehension of user requests, demonstrating empathy and understanding.

25.
Concepts: identifying user pain points and difficulties, identifying and diagnosing areas for improvement
- Designers identify pain points and probe for user difficulties.
- Designers identify areas for improvement and diagnose problems, analyzing and addressing issues.

26.
Concepts: engaging with the designer, initiating interaction and conversation
- Users engage with the designer and show engagement.
- Designers initiate interaction and engage with users.

27.
Concepts: acknowledging workarounds, offering workarounds
- Designer acknowledges a workaround for a known issue.
- Designers offer or seek workarounds or solutions to overcome platform limitations.

28.
Concepts: seeking and offering solutions, promoting problem-solving and resourcefulness
- Designers seek and offer alternative solutions.
- Designers promote problem-solving and show resourcefulness.

29.
Concepts: empowering users, allowing manual editing and user control
- Designer gives users control or autonomy over the platform's features.
- Designers allow manual editing and acknowledge user control, enabling customization and adaptation.

30.
Concepts: express designer gratitude, appreciating effort or dedication, appreciating dedication and expressing gratitude
- Expressing gratitude or appreciation to designers or developers.
- A user appreciates the effort or dedication of the designer or developers.
- Users appreciate dedication and express gratitude, acknowledging effort and commitment.

31.
Concepts: appreciate craftsmanship, appreciating software design
- Expressing admiration for the craftsmanship and attention to detail in the software development.
- Users appreciate the aesthetic aspects and design philosophy behind the software.

32.
Concepts: expressive, expressing emotions through language or emojis
- Expressions of emotions, humor, or playfulness through the use of emojis, tone, or language.
- A user uses emoticons or emotive language to convey tone or emotion.
===
Here are the definitions for each code:

---
1.
Concepts: explaining design limitations, technical limitations are communicated directly
Relationship: The concepts are related in that they both involve the designer providing information about the limitations of the design.
Criteria: Designers explain or justify design limitations or constraints, and directly communicate technical limitations or constraints.
Phrase: Communicating design limitations.

2.
Concepts: revealing potential challenges, expressing caution about limitations
Relationship: The concepts are related in that they both involve the designer highlighting potential issues or limitations.
Criteria: Designers highlight unique challenges or considerations in using a feature, and express caution, acknowledging limitations, or hint at potential considerations.
Phrase: Highlighting potential challenges.

3.
Concepts: technical feasibility assessment, assessing and confirming feasibility
Relationship: The concepts are related in that they both involve evaluating the practicality of a feature or request.
Criteria: Designers assess technical feasibility or requirements, and assess and confirm the feasibility of features or requests, evaluating their practicality.
Phrase: Assessing technical feasibility.

4.
Concepts: exploring technical possibilities, researching and detailing new features
Relationship: The concepts are related in that they both involve the designer considering or exploring different possibilities or solutions.
Criteria: Designers consider or explore different possibilities or solutions, and research and detail new or experimental features, exploring possibilities for development.
Phrase: Exploring technical possibilities.

5.
Concepts: discussing design decisions and rationale, expressing design thoughts and considerations
Relationship: The concepts are related in that they both involve the designer explaining or discussing their design decisions.
Criteria: Designers discuss design decisions or plans, explaining design rationale and intentions, and express thoughts or opinions about design decisions or improvements, informing design considerations.
Phrase: Discussing design decisions.

6.
Concepts: explaining plans, explaining project focus and goals
Relationship: The concepts are related in that they both involve the designer explaining or clarifying plans or goals.
Criteria: Designers explain and detail plans and features, and explain or clarify project focus and goals.
Phrase: Explaining project plans.

7.
Concepts: setting goals, development goals
Relationship: The concepts are related in that they both involve the designer setting or discussing goals.
Criteria: Designers set goals or priorities for development, and discuss long-term goals, development plans, or feature priorities.
Phrase: Setting development goals.

8.
Concepts: prioritizing releases and managing dependencies, sequencing design phases and content development
Relationship: The concepts are related in that they both involve the designer prioritizing or sequencing tasks or features.
Criteria: Designers prioritize releases and strategies, and manage dependencies or prioritize tasks, and sequence or prioritize tasks or features, and plan the sequential development of content or features.
Phrase: Prioritizing releases.

9.
Concepts: designing intuitive interface, explaining theoretical concepts and design principles
Relationship: The concepts are related in that they both involve the designer explaining or discussing design principles or approaches.
Criteria: Designers discuss or explore design principles or approaches for creating an intuitive interface, and explain theoretical concepts or principles, and explain design principles or philosophy behind the platform.
Phrase: Designing intuitive interfaces.

10.
Concepts: explaining development and optimization processes, informing users through explanations and highlights
Relationship: The concepts are related in that they both involve the designer explaining or providing insight into the development process.
Criteria: Designers explain or provide insight into the development process, explaining optimization process, and explain significance and highlight key features to inform users about the Physics Lab software, and explain differences and review processes to inform users about the development of the Physics Lab software.
Phrase: Explaining development processes.

11.
Concepts: facilitating learning, educating users through design insight
Relationship: The concepts are related in that they both involve the designer explaining or providing educational insight.
Criteria: Designers explain how a feature facilitates learning or problem-solving, and educate users about design choices or technical aspects, providing educational insight, and explain the educational benefits or value of a feature, enhancing educational value.
Phrase: Facilitating learning.

12.
Concepts: clarifying and refining functionality, refining design features and contributing to refinement
Relationship: The concepts are related in that they both involve the designer refining or improving design decisions.
Criteria: Designers address issues, clarify functionality, and refine design decisions, incorporating feedback and suggestions, and refine or improve design features, contributing to the refinement of the software design.
Phrase: Refining functionality.

13.
Concepts: clarifying and streamlining workflows, streamlining software functionality
Relationship: The concepts are related in that they both involve the designer clarifying or streamlining workflows or processes.
Criteria: Designers clarify and streamline workflows or processes to improve user experience, and streamline functionality and improve usability through simplification and enhancement of software features.
Phrase: Streamlining workflows.

14.
Concepts: clarifying software functionality, reassuring users about software functionality
Relationship: The concepts are related in that they both involve the designer clarifying or reassuring users about software functionality.
Criteria: Designers clarify software functionality and feature purposes to facilitate users' understanding, and reassure users about the software's availability or functionality, ensuring an intuitive interface.
Phrase: Clarifying software functionality.

15.
Concepts: supporting and enhancing user experience, providing design support and guidance
Relationship: The concepts are related in that they both involve the designer providing support or guidance to facilitate user experience.
Criteria: Designers provide support and specify details to enhance user experience, and provide resources and guidance to facilitate users' effective use of the software.
Phrase: Supporting user experience.

16.
Concepts: influencing development decisions, advising on development priorities
Relationship: The concepts are related in that they both involve users influencing or advising on software development decisions.
Criteria: Users influence software development by providing suggestions, ideas, and feedback, and advise on and prioritize software development to ensure effective allocation of resources.
Phrase: Influencing development decisions.

17.
Concepts: ensuring collective input, ensuring collective decision making
Relationship: The concepts are related in that they both involve ensuring collective input or involvement in software development decisions.
Criteria: Designers and users seek consensus and ensure collective input to inform software development decisions, and ensure collective decision-making or involvement in the development or design process in the Physics Lab online community.
Phrase: Ensuring collective input.

18.
Concepts: iterating on development plan, iterating on design with feedback
Relationship: The concepts are related in that they both involve refining or adjusting the development plan based on feedback.
Criteria: Refining or adjusting the development plan based on feedback, and designers iterate on design, planning for iterative feedback, and describe the iterative development process, influenced by user feedback and educational needs.
Phrase: Iterating on development plans.

19.
Concepts: affirming user points and understanding, seeking design validation and confirming user input
Relationship: The concepts are related in that they both involve the designer affirming or confirming user input or perspectives.
Criteria: Designers affirm user points and confirm understanding, acknowledging user perspectives and arguments, and confirm or acknowledge user input, support design decisions, and seek validation from users, and confirm diagnoses, affirm statements, and confirm user feedback to acknowledge user input.
Phrase: Affirming user input.

20.
Concepts: validate plans and perspectives, ensuring design accuracy and alignment
Relationship: The concepts are related in that they both involve validating or ensuring the accuracy of plans or design decisions.
Criteria: Users and designers validate plans and perspectives, and ensure accuracy and confirm design alignment with users.
Phrase: Validating plans.

21.
Concepts: encouraging feedback, providing design feedback
Relationship: The concepts are related in that they both involve the designer encouraging or providing feedback.
Criteria: Designers encourage users to provide feedback, suggestions, or comments, and seek or provide feedback on design or features.
Phrase: Encouraging feedback.

22.
Concepts: considering user input, responding to user input and incorporating feedback
Relationship: The concepts are related in that they both involve the designer considering or responding to user input.
Criteria: Designers consider user feedback, suggestions, or input, pondering their opinions and ideas, and respond to user input and advice, and incorporate user feedback and suggestions into the design.
Phrase: Considering user input.

23.
Concepts: accepting and agreeing to implement user suggestions, responding to feature requests and fulfilling user needs
Relationship: The concepts are related in that they both involve the designer accepting or responding to user requests or suggestions.
Criteria: Designers accept or agree to user requests or suggestions, agree to implement user suggestions, and promise to consider user feedback and commit to consultation, and respond to a user's request or suggestion for a new feature, and fulfill or respond to user requests, validating their needs or suggestions.
Phrase: Accepting user suggestions.

24.
Concepts: inquiring about user background, showing empathy and understanding user needs
Relationship: The concepts are related in that they both involve the designer showing interest in or understanding user backgrounds or needs.
Criteria: Designers ask about users' backgrounds or professional contexts to understand their perspectives, and show interest in user background and express comprehension of user requests, demonstrating empathy and understanding.
Phrase: Inquiring about user background.

25.
Concepts: identifying user pain points and difficulties, identifying and diagnosing areas for improvement
Relationship: The concepts are related in that they both involve the designer identifying or diagnosing areas for improvement.
Criteria: Designers identify pain points and probe for user difficulties, and identify areas for improvement and diagnose problems, analyzing and addressing issues.
Phrase: Identifying pain points.

26.
Concepts: engaging with the designer, initiating interaction and conversation
Relationship: The concepts are related in that they both involve users engaging with the designer or initiating interaction.
Criteria: Users engage with the designer and show engagement, and designers initiate interaction and engage with users.
Phrase: Engaging with the designer.

27.
Concepts: acknowledging workarounds, offering workarounds
Relationship: The concepts are related in that they both involve the designer acknowledging or offering workarounds.
Criteria: Designer acknowledges a workaround for a known issue, and designers offer or seek workarounds or solutions to overcome platform limitations.
Phrase: Acknowledging workarounds.

28.
Concepts: seeking and offering solutions, promoting problem-solving and resourcefulness
Relationship: The concepts are related in that they both involve the designer seeking or offering solutions.
Criteria: Designers seek and offer alternative solutions, and promote problem-solving and show resourcefulness.
Phrase: Seeking solutions.

29.
Concepts: empowering users, allowing manual editing and user control
Relationship: The concepts are related in that they both involve the designer giving users control or autonomy.
Criteria: Designer gives users control or autonomy over the platform's features, and designers allow manual editing and acknowledge user control, enabling customization and adaptation.
Phrase: Empowering users.

30.
Concepts: express designer gratitude, appreciating effort or dedication, appreciating dedication and expressing gratitude
Relationship: The concepts are related in that they both involve expressing gratitude or appreciation.
Criteria: Expressing gratitude or appreciation to designers or developers, and users appreciate the effort or dedication of the designer or developers, and users appreciate dedication and express gratitude, acknowledging effort and commitment.
Phrase: Expressing gratitude.

31.
Concepts: appreciate craftsmanship, appreciating software design
Relationship: The concepts are related in that they both involve expressing admiration for the design or craftsmanship.
Criteria: Expressing admiration for the craftsmanship and attention to detail in the software development, and users appreciate the aesthetic aspects and design philosophy behind the software.
Phrase: Appreciating craftsmanship.

32.
Concepts: expressive, expressing emotions through language or emojis
Relationship: The concepts are related in that they both involve expressing emotions or tone.
Criteria: Expressions of emotions, humor, or playfulness through the use of emojis, tone, or language, and a user uses emoticons or emotive language to convey tone or emotion.
Phrase: Expressing emotions.