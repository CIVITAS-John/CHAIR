You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: designer explains adjustments, active engagement between designers and users
- A designer explains adjustments, updates, or improvements to the tool or community.
- Designer shares information about upcoming changes to the platform with users, and explains the reasoning behind it.

2.
Concepts: introducing update content, announcing internal updates
- A designer introduces or summarizes the content of an update.
- Designer announces or explains internal updates or changes.

3.
Concepts: describing update scope, explain component changes
- A designer describes the scope of an update or change.
- A designer describes changes or updates made to the software.

4.
Concepts: inferring design changes, proposing design changes
- Designer infers or suggests a design change or requirement.
- Designer discusses or proposes component updates or changes.

5.
Concepts: update magnitude, commenting on update size
- Designer shares the magnitude of an update.
- Designer comments on the size or scope of an upcoming update.

6.
Concepts: emphasize update impact, indicating significant changes
- A designer emphasizes the impact of an update.
- The designer indicates a substantial update or change.

7.
Concepts: announce new releases, announcing new versions
- A designer announces the release of a new version or update.
- Announcements of new software versions or releases.

8.
Concepts: informing new version availability, informs group about new version submission
- Informing users that a new version of Physics Lab has been shared in the group.
- A designer or moderator informs the group about a new version or update.

9.
Concepts: share info on app release, providing update availability information
- Designer shares information about the release or availability of the app.
- Designer shares update availability or release information.

10.
Concepts: feature incorporation plan, committing to feature implementation
- Plans or commitments to incorporate user-suggested features or functionalities.
- Committing to implementing a suggested feature or functionality.

11.
Concepts: agree to implement, agreeing to add feature
- A designer agrees to implement a user's suggestion or feedback.
- A designer agrees to add a feature in a future update.

12.
Concepts: feature development, responding to feature development
- Designer describes the development of a feature.
- A user responds to a designer's earlier information about feature development.

13.
Concepts: confirming features, assure planned features
- Designers confirm or announce a feature or update.
- The designer assures users that planned features are in development or will be implemented.

14.
Concepts: promise updates, promise to make the feature on a later time
- A designer promises timely updates or improvements.
- A designer promises to implement a feature or functionality at a later time.

15.
Concepts: future demonstration, future development mention
- Indicating the possibility of future demonstrations or experiments
- Mentioning potential future developments or experiments

16.
Concepts: share future directions, outlining future capabilities, discussing future experiments
- A designer shares potential future directions or areas of interest.
- Designer outlines future capabilities or research areas.
- Designer mentions potential future experiments or activities based on user needs.

17.
Concepts: considering future expansions, discussing future development plans, suggests future developments, hint at future possibilities
- Designers consider future expansions or possibilities.
- Designer mentions or considers future development plans or potential issues.
- Designer suggests future developments or features based on user needs or feedback.
- A designer hints at potential future projects or developments.

18.
Concepts: planning future engagement, future consultation promise
- Designer plans for future user engagement or feedback.
- Designer promises to consult with users in the future.

19.
Concepts: expectation setting, sets expectations, sets expectations on release timeline
- Setting or managing expectations for future product development
- Designer sets expectations or provides information about a feature or update.
- The speaker sets or manages expectations about when a feature or update will be released.

20.
Concepts: feature prioritization, suggesting prioritization
- Prioritizing features or development based on user needs
- A user suggests prioritizing tasks or features.

21.
Concepts: decision-making, delaying or prioritizing tasks
- Designer makes decisions about the development process or prioritization.
- Designers delay or prioritize specific tasks or features in the development process.

22.
Concepts: communicating priority, justifying development priorities
- A designer communicates the priority of certain features or topics.
- Designer justifies and explains development priorities.

23.
Concepts: outlining development sequence, outlines development strategy
- Designer outlines development sequence and priorities.
- Designer outlines a plan or strategy for product development.

24.
Concepts: outlining software focus, focusing on specific topics
- A designer outlines the software's focus or priorities.
- A designer focuses on specific topics or areas of the software.

25.
Concepts: defining project scope, managing project scope (designer 1)
- Designer defines and communicates project scope to stakeholders.
- Designer 1 manages project scope and prioritizes tasks.

26.
Concepts: progress highlight, development effort
- Designer highlights progress or achievement
- A designer highlights the effort or magnitude of a development or update.

27.
Concepts: ongoing work, communicating ongoing work
- A designer indicates ongoing work on a specific aspect of the project.
- Designer informs users about ongoing work or projects.

28.
Concepts: indicating a future action, indicating waiting period
- Designer indicates a future action or update.
- The designer indicates a waiting period for a specific task.

29.
Concepts: promoting anticipation, expressing anticipation, building anticipation
- Designer promotes anticipation or excitement for updates.
- User expresses anticipation or eagerness for an update.
- Building anticipation or excitement for an upcoming update or feature.

30.
Concepts: platform waiting period, awaiting platform review
- Mention of waiting period or delay due to platform review.
- Designer awaits review or approval from a platform or market.

31.
Concepts: set timeline goals, set feature timelines
- A designer sets a timeline goal or deadline.
- A designer sets a timeline for a specific feature or functionality.

32.
Concepts: explaining delays, apologize for delay
- Designer explains or justifies delays in the development process.
- Designer apologizes for a delay or issue with the software.
===
Here are the definitions for each code:

---
1.
Concepts: designer explains adjustments, active engagement between designers and users
Relationship: The designer's explanation of adjustments is a key aspect of active engagement with users.
Criteria: Designer explains adjustments to users and engages with them actively.
Phrase: Explaining adjustments to users.

2.
Concepts: introducing update content, announcing internal updates
Relationship: Introducing update content is a form of announcing internal updates.
Criteria: Designer introduces update content and announces internal updates.
Phrase: Announcing update content.

3.
Concepts: describing update scope, explain component changes
Relationship: Describing the scope of an update involves explaining component changes.
Criteria: Designer describes update scope and explains component changes.
Phrase: Describing update scope.

4.
Concepts: inferring design changes, proposing design changes
Relationship: Inferring design changes leads to proposing design changes.
Criteria: Designer infers and proposes design changes.
Phrase: Proposing design changes.

5.
Concepts: update magnitude, commenting on update size
Relationship: Update magnitude is reflected in comments on update size.
Criteria: Designer comments on update magnitude and size.
Phrase: Commenting on update size.

6.
Concepts: emphasize update impact, indicating significant changes
Relationship: Emphasizing update impact involves indicating significant changes.
Criteria: Designer emphasizes update impact and indicates significant changes.
Phrase: Emphasizing update impact.

7.
Concepts: announce new releases, announcing new versions
Relationship: Announcing new releases involves announcing new versions.
Criteria: Designer announces new releases and versions.
Phrase: Announcing new releases.

8.
Concepts: informing new version availability, informs group about new version submission
Relationship: Informing users about new version availability involves informing the group about submission.
Criteria: Designer informs users about new version availability and submission.
Phrase: Informing about new version availability.

9.
Concepts: share info on app release, providing update availability information
Relationship: Sharing information on app release involves providing update availability information.
Criteria: Designer shares information on app release and update availability.
Phrase: Sharing app release information.

10.
Concepts: feature incorporation plan, committing to feature implementation
Relationship: Feature incorporation plans involve committing to implementation.
Criteria: Designer plans and commits to feature implementation.
Phrase: Committing to feature implementation.

11.
Concepts: agree to implement, agreeing to add feature
Relationship: Agreeing to implement involves agreeing to add features.
Criteria: Designer agrees to implement and add features.
Phrase: Agreeing to implement features.

12.
Concepts: feature development, responding to feature development
Relationship: Feature development involves responding to user feedback.
Criteria: Designer develops features and responds to user feedback.
Phrase: Developing features.

13.
Concepts: confirming features, assure planned features
Relationship: Confirming features involves assuring planned features.
Criteria: Designer confirms and assures planned features.
Phrase: Confirming planned features.

14.
Concepts: promise updates, promise to make the feature on a later time
Relationship: Promising updates involves promising to implement features later.
Criteria: Designer promises updates and feature implementation.
Phrase: Promising feature implementation.

15.
Concepts: future demonstration, future development mention
Relationship: Future demonstrations involve mentioning future development.
Criteria: Designer mentions future demonstrations and development.
Phrase: Mentioning future development.

16.
Concepts: share future directions, outlining future capabilities, discussing future experiments
Relationship: Sharing future directions involves outlining capabilities and discussing experiments.
Criteria: Designer shares future directions and outlines capabilities and experiments.
Phrase: Sharing future directions.

17.
Concepts: considering future expansions, discussing future development plans, suggests future developments, hint at future possibilities
Relationship: Considering future expansions involves discussing plans, suggesting developments, and hinting at possibilities.
Criteria: Designer considers future expansions and discusses plans, suggests developments, and hints at possibilities.
Phrase: Considering future expansions.

18.
Concepts: planning future engagement, future consultation promise
Relationship: Planning future engagement involves promising consultation.
Criteria: Designer plans future engagement and promises consultation.
Phrase: Planning future engagement.

19.
Concepts: expectation setting, sets expectations, sets expectations on release timeline
Relationship: Setting expectations involves setting expectations on release timeline.
Criteria: Designer sets expectations and provides information on release timeline.
Phrase: Setting expectations.

20.
Concepts: feature prioritization, suggesting prioritization
Relationship: Feature prioritization involves suggesting prioritization.
Criteria: Designer prioritizes features and suggests prioritization.
Phrase: Prioritizing features.

21.
Concepts: decision-making, delaying or prioritizing tasks
Relationship: Decision-making involves delaying or prioritizing tasks.
Criteria: Designer makes decisions and delays or prioritizes tasks.
Phrase: Making decisions.

22.
Concepts: communicating priority, justifying development priorities
Relationship: Communicating priority involves justifying development priorities.
Criteria: Designer communicates priority and justifies development priorities.
Phrase: Communicating priority.

23.
Concepts: outlining development sequence, outlines development strategy
Relationship: Outlining development sequence involves outlining strategy.
Criteria: Designer outlines development sequence and strategy.
Phrase: Outlining development strategy.

24.
Concepts: outlining software focus, focusing on specific topics
Relationship: Outlining software focus involves focusing on specific topics.
Criteria: Designer outlines software focus and focuses on specific topics.
Phrase: Outlining software focus.

25.
Concepts: defining project scope, managing project scope (designer 1)
Relationship: Defining project scope involves managing project scope.
Criteria: Designer defines and manages project scope.
Phrase: Defining project scope.

26.
Concepts: progress highlight, development effort
Relationship: Highlighting progress involves highlighting development effort.
Criteria: Designer highlights progress and development effort.
Phrase: Highlighting progress.

27.
Concepts: ongoing work, communicating ongoing work
Relationship: Ongoing work involves communicating ongoing work.
Criteria: Designer indicates and communicates ongoing work.
Phrase: Communicating ongoing work.

28.
Concepts: indicating a future action, indicating waiting period
Relationship: Indicating a future action involves indicating a waiting period.
Criteria: Designer indicates future action and waiting period.
Phrase: Indicating future action.

29.
Concepts: promoting anticipation, expressing anticipation, building anticipation
Relationship: Promoting anticipation involves expressing and building anticipation.
Criteria: Designer promotes and builds anticipation.
Phrase: Promoting anticipation.

30.
Concepts: platform waiting period, awaiting platform review
Relationship: Platform waiting period involves awaiting platform review.
Criteria: Designer waits for platform review.
Phrase: Awaiting platform review.

31.
Concepts: set timeline goals, set feature timelines
Relationship: Setting timeline goals involves setting feature timelines.
Criteria: Designer sets timeline goals and feature timelines.
Phrase: Setting timeline goals.

32.
Concepts: explaining delays, apologize for delay
Relationship: Explaining delays involves apologizing for delay.
Criteria: Designer explains and apologizes for delays.
Phrase: Explaining delays.