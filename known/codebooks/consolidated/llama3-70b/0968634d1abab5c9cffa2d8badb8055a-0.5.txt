You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: revealing motivation, revealing designer's passion
- Designers reveal personal motivation or interest.
- A designer or developer expresses their personal passion or interest in a specific area.

2.
Concepts: providing rationale, justifying design choices, justifying feature development
- A user or designer provides a reason or justification for a particular feature, design, or functionality.
- Designer expresses an opinion on why a particular approach is necessary for future perfection.
- A designer justifies the development of a particular feature.

3.
Concepts: balancing realism and usability, balancing complexity and usability
- Balancing realism with usability in design
- The designer balances complexity and usability in design decisions.

4.
Concepts: feature simplicity, simplifying design elements, emphasizing simplicity
- Designer explains the simplicity or ease of implementing new features.
- Designers suggest or implement simplifications to features or design.
- A designer emphasizes the importance of simplicity in design or development.

5.
Concepts: highlighting ideal use, highlighting ideal components
- A designer highlights the ideal use or scenario for a feature.
- A designer highlights ideal components or features.

6.
Concepts: setting standards, emphasizing quality control
- A designer sets standards, prioritizing quality.
- A designer emphasizes the importance of quality control in the development process.

7.
Concepts: emphasizing impact, emphasizing optimization
- A designer emphasizes impact, highlighting significance.
- A designer emphasizes optimization, highlighting its importance.

8.
Concepts: recommending optimization, prioritizing improvement
- Designer recommends optimizing a specific aspect of the tool.
- Designer emphasizes the importance of improving a specific aspect of the tool.

9.
Concepts: identifying areas for improvement, showcasing and highlighting improvements and enhancements
- The designer identifies areas that need improvement.
- Designer showcases or highlights improvements or enhancements.

10.
Concepts: highlighting long-term benefits, demonstrating long-term thinking
- A designer highlights long-term benefits, emphasizing feature benefits.
- A designer or user thinks about the long-term implications or consequences of a feature or decision.

11.
Concepts: highlighting problem solving capabilities, demonstrating problem-solving capabilities
- Highlighting the problem-solving capabilities of the application.
- The designer demonstrates the software's problem-solving capabilities.

12.
Concepts: describe benefits, highlighting software advantages
- A designer describes the benefits or advantages of the software.
- Users emphasize the benefits or practical advantages of the software.

13.
Concepts: expanding features, expanding on user suggestions
- A designer expands or adds to the features or options available.
- A designer expands on a suggestion or idea.

14.
Concepts: confirming common practices, validating common practice
- The user confirms or agrees with common styles or practices.
- Validations or confirmations of common practices, experiences, or knowledge about the use of technology or software in educational settings.

15.
Concepts: suggest practical use case, highlighting practical application
- Suggesting a practical use case or application of a feature.
- A user highlights the practical application or use of a feature.

16.
Concepts: aligning with best practices, sharing best practices
- A user recommends or suggests best practices.
- A user shares tips, advice, or best practices related to using the software or a specific feature.

17.
Concepts: component improvements, component customization
- Explanation of improvements or updates to components
- Introduction of component customization or updates

18.
Concepts: clarifying feature purpose, explaining purpose of circuit diagram
- Clarifying the purpose, intent, or functionality of a particular feature or tool, such as a circuit diagram.
- Designer explains the purpose or functionality of a specific version of the circuit diagram.

19.
Concepts: functionality clarification, software behavior clarification
- Clarification on the functionality or behavior of a feature
- Designer clarifies how a feature or functionality works.

20.
Concepts: evaluating software effectiveness, evaluating software usability
- Evaluating or commenting on the effectiveness or quality of the software.
- Evaluations or assessments of the usability, practicality, or effectiveness of the Physics Lab software.

21.
Concepts: inquiring about new features, expanding software capabilities
- A user inquires about the possibility of including new features or experiments.
- User proposes expanding software capabilities to include new features or experiments.

22.
Concepts: broader application, demonstrating potential user expansion
- A user expresses interest in applying the software to a broader context.
- User demonstrates interest in expanding their use of the platform.

23.
Concepts: showing interest in user background, showing interest in user experience
- Showing interest in user background or experience
- Showing interest in user experiences or opinions.

24.
Concepts: demonstrating platform interest, expressing interest in specific topics
- A user demonstrates interest in a specific platform (e.g., Android).
- User expresses interest in a specific topic or feature.

25.
Concepts: encouraging user exploration, encouraging exploration
- Encouraging users to explore or test features.
- Encouraging or inviting others to explore or experiment with features, such as circuit diagrams.

26.
Concepts: refining simulation settings, modifying simulation components
- Refining simulation settings or parameters.
- Modifying or adjusting simulation components or features.

27.
Concepts: proposing simulated experiment assessment, planning a simulated experiment assessment function
- Proposing or discussing a feature or function for assessing or evaluating user experiments or simulations.
- Designer plans to add a simulated experiment assessment function to the platform.

28.
Concepts: detail simulated experiment assessment, describing plans for simulated experiment assessment
- Providing detailed information on simulated experiment assessment
- Describing plans or features related to simulated experiment assessment, including their functionality and benefits.

29.
Concepts: identifying technical needs, recognizing need for offline functionality
- A designer identifies a technical need or recognizes the need for local export functionality.
- Recognizing the need for offline functionality or local export capabilities in the software.

30.
Concepts: clarifying testing status, clarifies testing phase for circuit diagram version
- Clarifying the testing status of a feature or version.
- Clarifying or providing additional information about a testing phase or beta version.

31.
Concepts: providing context for testing, informing about testing phases
- A designer provides context for a testing phase or experimental feature.
- A designer informs users about the testing phase of a feature or version and provides guidance on manual adjustments due to algorithm limitations.

32.
Concepts: confirming feasibility, exploring availability
- Confirming the feasibility or possibility of a particular feature or request
- Exploring the availability or feasibility of a particular feature or version.
===
Here are the definitions for each code:

---
1.
Concepts: revealing motivation, revealing designer's passion
Relationship: The designer's motivation and passion are closely linked, as their passion drives their motivation.
Criteria: Designers express their personal motivation or interest in a specific area.
Phrase: Expressing personal passion.

2.
Concepts: providing rationale, justifying design choices, justifying feature development
Relationship: Providing a rationale justifies design choices and feature development.
Criteria: Designers provide reasons for particular features, designs, or functionalities.
Phrase: Providing justifications.

3.
Concepts: balancing realism and usability, balancing complexity and usability
Relationship: Balancing realism and usability is a trade-off, as is balancing complexity and usability.
Criteria: Designers balance realism and usability in design decisions.
Phrase: Balancing competing demands.

4.
Concepts: feature simplicity, simplifying design elements, emphasizing simplicity
Relationship: Simplifying design elements emphasizes simplicity, which is a key aspect of feature simplicity.
Criteria: Designers emphasize the importance of simplicity in design or development.
Phrase: Emphasizing simplicity.

5.
Concepts: highlighting ideal use, highlighting ideal components
Relationship: Highlighting ideal use and ideal components are related, as ideal components enable ideal use.
Criteria: Designers highlight the ideal use or scenario for a feature.
Phrase: Highlighting ideal scenarios.

6.
Concepts: setting standards, emphasizing quality control
Relationship: Setting standards is a way of emphasizing quality control.
Criteria: Designers set standards, prioritizing quality.
Phrase: Prioritizing quality.

7.
Concepts: emphasizing impact, emphasizing optimization
Relationship: Emphasizing impact and optimization are related, as optimization can have a significant impact.
Criteria: Designers emphasize the importance of optimization.
Phrase: Emphasizing optimization.

8.
Concepts: recommending optimization, prioritizing improvement
Relationship: Recommending optimization is a way of prioritizing improvement.
Criteria: Designers recommend optimizing a specific aspect of the tool.
Phrase: Recommending optimization.

9.
Concepts: identifying areas for improvement, showcasing and highlighting improvements and enhancements
Relationship: Identifying areas for improvement leads to showcasing and highlighting improvements and enhancements.
Criteria: Designers identify areas that need improvement.
Phrase: Identifying areas for improvement.

10.
Concepts: highlighting long-term benefits, demonstrating long-term thinking
Relationship: Highlighting long-term benefits demonstrates long-term thinking.
Criteria: Designers highlight long-term benefits, emphasizing feature benefits.
Phrase: Highlighting long-term benefits.

11.
Concepts: highlighting problem solving capabilities, demonstrating problem-solving capabilities
Relationship: Highlighting problem-solving capabilities demonstrates the software's capabilities.
Criteria: Designers highlight the problem-solving capabilities of the application.
Phrase: Highlighting problem-solving capabilities.

12.
Concepts: describe benefits, highlighting software advantages
Relationship: Describing benefits highlights software advantages.
Criteria: Designers describe the benefits or advantages of the software.
Phrase: Highlighting software advantages.

13.
Concepts: expanding features, expanding on user suggestions
Relationship: Expanding features is a way of expanding on user suggestions.
Criteria: Designers expand or add to the features or options available.
Phrase: Expanding features.

14.
Concepts: confirming common practices, validating common practice
Relationship: Confirming common practices validates common practice.
Criteria: Users confirm or agree with common styles or practices.
Phrase: Validating common practices.

15.
Concepts: suggest practical use case, highlighting practical application
Relationship: Suggesting practical use cases highlights practical applications.
Criteria: Users suggest a practical use case or application of a feature.
Phrase: Suggesting practical applications.

16.
Concepts: aligning with best practices, sharing best practices
Relationship: Aligning with best practices involves sharing best practices.
Criteria: Users recommend or suggest best practices.
Phrase: Sharing best practices.

17.
Concepts: component improvements, component customization
Relationship: Component improvements can involve component customization.
Criteria: Designers explain improvements or updates to components.
Phrase: Improving components.

18.
Concepts: clarifying feature purpose, explaining purpose of circuit diagram
Relationship: Clarifying feature purpose explains the purpose of a circuit diagram.
Criteria: Designers clarify the purpose, intent, or functionality of a particular feature or tool.
Phrase: Clarifying feature purpose.

19.
Concepts: functionality clarification, software behavior clarification
Relationship: Clarifying functionality clarifies software behavior.
Criteria: Designers clarify how a feature or functionality works.
Phrase: Clarifying functionality.

20.
Concepts: evaluating software effectiveness, evaluating software usability
Relationship: Evaluating software effectiveness involves evaluating software usability.
Criteria: Users evaluate or comment on the effectiveness or quality of the software.
Phrase: Evaluating software effectiveness.

21.
Concepts: inquiring about new features, expanding software capabilities
Relationship: Inquiring about new features involves expanding software capabilities.
Criteria: Users inquire about the possibility of including new features or experiments.
Phrase: Inquiring about new features.

22.
Concepts: broader application, demonstrating potential user expansion
Relationship: Broader application demonstrates potential user expansion.
Criteria: Users express interest in applying the software to a broader context.
Phrase: Demonstrating broader application.

23.
Concepts: showing interest in user background, showing interest in user experience
Relationship: Showing interest in user background involves showing interest in user experience.
Criteria: Designers show interest in user background or experience.
Phrase: Showing interest in users.

24.
Concepts: demonstrating platform interest, expressing interest in specific topics
Relationship: Demonstrating platform interest involves expressing interest in specific topics.
Criteria: Users demonstrate interest in a specific platform or topic.
Phrase: Demonstrating platform interest.

25.
Concepts: encouraging user exploration, encouraging exploration
Relationship: Encouraging user exploration involves encouraging exploration.
Criteria: Designers encourage users to explore or test features.
Phrase: Encouraging exploration.

26.
Concepts: refining simulation settings, modifying simulation components
Relationship: Refining simulation settings involves modifying simulation components.
Criteria: Designers refine simulation settings or parameters.
Phrase: Refining simulations.

27.
Concepts: proposing simulated experiment assessment, planning a simulated experiment assessment function
Relationship: Proposing simulated experiment assessment involves planning a function.
Criteria: Designers propose or discuss a feature or function for assessing user experiments or simulations.
Phrase: Proposing assessment functions.

28.
Concepts: detail simulated experiment assessment, describing plans for simulated experiment assessment
Relationship: Detailing simulated experiment assessment involves describing plans.
Criteria: Designers provide detailed information on simulated experiment assessment.
Phrase: Describing assessment plans.

29.
Concepts: identifying technical needs, recognizing need for offline functionality
Relationship: Identifying technical needs involves recognizing the need for offline functionality.
Criteria: Designers identify a technical need or recognize the need for local export functionality.
Phrase: Identifying technical needs.

30.
Concepts: clarifying testing status, clarifies testing phase for circuit diagram version
Relationship: Clarifying testing status involves clarifying the testing phase.
Criteria: Designers clarify the testing status of a feature or version.
Phrase: Clarifying testing status.

31.
Concepts: providing context for testing, informing about testing phases
Relationship: Providing context for testing involves informing about testing phases.
Criteria: Designers provide context for a testing phase or experimental feature.
Phrase: Providing testing context.

32.
Concepts: confirming feasibility, exploring availability
Relationship: Confirming feasibility involves exploring availability.
Criteria: Designers confirm the feasibility or possibility of a particular feature or request.
Phrase: Confirming feasibility.