You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (64 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
64. 
Concepts: {Repeat the input 64}
Relationship: {What is logical relationship between concepts in code 64, or N/A if not applicable}
Criteria: {Who did what, and how for code 64}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: open up plans, planning future updates, planning future projects
- A designer discusses future plans or potential updates.
- Designers discuss the planning and timeline for future updates and feature implementation.
- Designers discuss planning or suggest the possibility of future projects.

2.
Concepts: asking for future help, announce future consultation
- A designer asks for future help or consultation from the community.
- Designers announce future consultations with the community.

3.
Concepts: inform about development plan, announcing development plans
- Informing the community about the development plan.
- Making announcements about development plans or updates.

4.
Concepts: development plan, communicating development plans
- Designers share the development plan and download information with the community.
- Designers communicate progress and future plans for development.

5.
Concepts: development goals, share info about future development plan
- A participant discusses the goals or objectives of development.
- A participant shares information about future development plans.

6.
Concepts: memory aid, manage memory and task organization
- A designer expresses concern about remembering user opinions before starting a new project.
- Designers discuss managing memory, tasks, or gathering opinions before starting new projects.

7.
Concepts: suggest prioritization, prioritize tasks
- A user suggests prioritizing certain tasks or features.
- Statements indicating the order and decision-making process regarding the prioritization or sequence of tasks or features.

8.
Concepts: identify potential need, listing what might need to be done
- Designers identifying potential needs or considerations for features.
- A designer lists potential tasks or considerations for future updates.

9.
Concepts: highlight update frequency, indicating ongoing updates
- Designers highlight the frequency of updates.
- Designers indicate that updates are in progress.

10.
Concepts: sharing visual updates, group communication
- Designers share visual updates or changes.
- Designers communicate with the group about updates or new versions.

11.
Concepts: share progress, providing progress updates
- A designer shares progress updates with the community.
- Designers provide updates on the progress of software or feature development.

12.
Concepts: previewing updates, explaining upcoming features
- Designers preview upcoming updates or features.
- Designers explain features that will be included in future updates.

13.
Concepts: reassuring users, preparing for updates, engage users with update
- A designer reassures users about upcoming features or updates.
- A designer prepares users for significant updates or changes.
- A designer engages users with information about upcoming updates.

14.
Concepts: listing bug fixes, providing detailed updates
- Designers list updates and bug fixes included in new versions.
- Designers provide detailed information about new features, components, adjustments, and bug fixes.

15.
Concepts: update clarification, detailed overview of update
- A designer clarifies details about an update.
- A designer provides a detailed overview of the features and changes in a software update.

16.
Concepts: sharing development updates, announcing updates to the community
- Informing the community about new updates or versions.
- Designers notify the community about updates or changes.

17.
Concepts: updates, listing upcoming features
- Information about changes or new features in upcoming updates.
- Lists of features included in updates or planned for future releases.

18.
Concepts: describing update scope, give an intro to update content
- Descriptions of the scope or content of an update.
- Introduction or summary of new features in an update.

19.
Concepts: promise future feature, promise a future perfection of a feature, promising it will realize
- A designer commits to adding a feature at a later time.
- Promising future improvements or perfection of a feature.
- Designers promise the realization of features or updates.

20.
Concepts: designer confirmation, affirming planned feature
- Designers confirm the existence or implementation of features.
- A designer affirms that a planned feature will be implemented.

21.
Concepts: confirming updates, confirm feature update
- Users or designers confirm that an update has been or will be made.
- Confirming that a feature update will be released soon.

22.
Concepts: update status inquiry, inquiring about updates, update timeline inquiry
- A user inquires about the status of an update.
- Users ask about recent or upcoming updates or new features.
- A user asks about the timeline for software updates.

23.
Concepts: show interest in development progress, expressing anticipation for updates
- Users show interest in the development progress or updates.
- Users express eagerness or curiosity about upcoming updates or versions.

24.
Concepts: praise software, praise simulation effect, compliment on 3d effect
- A user praises the software for its practicality and features.
- A user praises the simulation effect of the software used in class.
- Users compliment the 3D visual effects of the software.

25.
Concepts: acknowledge craftsmanship, appreciating design effort
- Users acknowledge the craftsmanship and effort put into the software.
- Users express appreciation, acknowledge efforts, and praise the craftsmanship of the designers.

26.
Concepts: appreciation of plans, providing positive feedback
- Users express approval or positive feedback regarding the plans or progress of the project.
- Users express approval and provide positive feedback about the software or ideas.

27.
Concepts: comparative feedback, comparing favorably to other applications
- A user provides comparative feedback, highlighting the software's practicality.
- Users compare the software favorably to other similar applications.

28.
Concepts: discussing usability, discussing context of use
- Users or designers discuss user interface elements and usability features.
- Users describe the specific contexts in which they use the software and discuss its usability.

29.
Concepts: software effectiveness, evaluating software usability
- Statements evaluating the software's performance and its impact on users.
- Users evaluate and comment on the software's ease of use and practicality.

30.
Concepts: school implementation, classroom application
- Users discuss the implementation of the software in their school.
- A participant discusses the application of the software in a classroom setting.

31.
Concepts: sharing user experiences, user experience and impact
- Users share stories or experiences related to the software or its use.
- Users sharing their experiences and the impact of the software on their teaching or learning.

32.
Concepts: explain current limitations, testing version explanation
- Designers explain current limitations or testing status of features.
- A designer explains the purpose and limitations of a testing version.

33.
Concepts: platform limitation, talk about limitation of the solution, system limitation explanation
- A designer mentions limitations of the platform or software.
- A designer discusses the limitations of a proposed solution.
- A designer suggests why an issue cannot be solved due to system limitations.

34.
Concepts: identify usability issue, acknowledge potential issue
- A user identifies a usability issue.
- A designer acknowledges a potential issue with input functionality.

35.
Concepts: technical issue, discussing outdated technology
- A user mentions issues related to outdated or problematic computer systems.
- Users mention outdated technology or systems, including their school's computer systems.

36.
Concepts: consider future compatibility, considering future compatibility, suggest checking compatibility
- Discussions about future compatibility with older systems.
- A designer considers future compatibility or technical requirements.
- Designers mention the need to check system compatibility for future updates.

37.
Concepts: system requirements, system compatibility, system compatibility information
- A designer discusses the system requirements for the software.
- Designers and users discuss system compatibility and requirements.
- A designer informs users about system compatibility.

38.
Concepts: confirm compatibility, compatibility assurance
- Designers confirm compatibility with specific systems or versions.
- A participant assures compatibility of the software with certain systems or devices.

39.
Concepts: feature complexity, explain task complexity, difficulty in development
- A designer discusses the complexity and timeline of feature development.
- Designers explain the complexity of a task and the need for more time to complete it.
- Designers discuss the complexity and time required for development.

40.
Concepts: clarifying software versions, give more information about the version uploaded
- Designers explain the type or version of the software being discussed.
- A participant provides specific information about the version of the software uploaded.

41.
Concepts: release process, update on release process
- Describing the process of releasing the software on different platforms.
- Providing updates on the release process of the software.

42.
Concepts: adapt to platform specific constraints, providing platform-specific information
- Designers discuss adapting to platform-specific constraints or requirements.
- Designers provide updates or information specific to different platforms or versions.

43.
Concepts: highlight practicality, practical application highlight
- A participant highlights the practicality or usefulness of the software.
- A designer highlights the practical application of a feature.

44.
Concepts: introduce feature functions, explaining component functionality, providing feature examples
- A designer introduces the functions of a new feature.
- Designers provide technical details or describe the functionality of specific components.
- Designers explain features or functionalities of the software and provide examples.

45.
Concepts: user tips, share usage trick
- A designer provides tips or instructions for using the software.
- A designer shares a trick for using the software in a specific context.

46.
Concepts: provide information, inform about ideal components
- Designers provide information or facts about the software.
- Designers inform users about the ideal components in the software.

47.
Concepts: teaching, instruction and updates
- Designers provide instructional information or guidance on using the software.
- Designers providing updates and instructions to help users understand and use the software effectively.

48.
Concepts: manual editing, manual adjustment
- Allowing for manual editing of features or components.
- A participant mentions the ability to manually adjust a feature or layout.

49.
Concepts: engage in iterative development, iterative development based on user feedback
- Instances where the design process is described as iterative, with ongoing optimizations and updates based on feedback and testing.
- Developing the software iteratively based on user feedback and suggestions.

50.
Concepts: commit to improvement, emphasize continuous improvement
- Designers promise or commit to improving the software based on user feedback.
- A designer emphasizes the continuous improvement of the software through updates and fixes.

51.
Concepts: refine design, simplification and refinement in design
- Designers discuss or implement refinements and adjustments to the design or features.
- Discussions about simplifying and refining the design of the software.

52.
Concepts: consider user experience, address usability concerns
- Designers consider user experience when discussing features or design decisions.
- Designers consider or address concerns related to the usability of the software.

53.
Concepts: user experience improvement, user experience prioritization
- A user focuses on improving the user experience.
- A designer prioritizes improving the user experience.

54.
Concepts: simulation enhancement, inform about simulation capability
- A designer describes the capabilities of a component used in simulations.
- Designers inform users about the simulation capabilities of the software.

55.
Concepts: internal update, product iteration
- Designers discuss internal updates or changes to the software.
- Designers discuss the iteration process of the software.

56.
Concepts: subject expansion, discuss subject focus
- A designer or user discusses expanding the subject matter of the software.
- Designers discuss or explain the subject focus and potential future directions of the software.

57.
Concepts: design thoughts, design discussion
- A designer shares thoughts or ideas about the design process.
- Discussions about the design or development process.

58.
Concepts: long-term stability, feature stability
- Discussing the long-term stability of a feature.
- Designers discuss the stability and reliability of features once implemented.

59.
Concepts: explaining the need, describe planned feature
- A participant explains the need for a feature or development.
- A participant describes a planned feature or functionality.

60.
Concepts: questioning user identity, confirming user identity
- Designers ask about the user's identity or role.
- Users confirm their identity or role in response to a question.

61.
Concepts: student identification, community member identification
- A user identifies themselves as a student.
- A user identifies themselves as a community member.

62.
Concepts: teaching experience, providing teaching background, identifying as a teacher
- A user shares their teaching experience.
- Users introduce their teaching experience and provide background information.
- Users identify themselves as teachers or discuss their teaching experience.

63.
Concepts: high school, middle school
- Users mention their experience teaching high school.
- Users mention their experience teaching middle school.

64.
Concepts: user background, sharing professional background
- Information provided by users about their professional or personal background, which helps in understanding the community's composition.
- Users share their professional background to build trust and context.
===
---
Definitions for each code (64 in total):
1.
Concepts: open up plans, planning future updates, planning future projects
Relationship: All concepts involve discussing future directions and updates.
Criteria: Designers discuss plans and timelines for future updates and projects.
Phrase: Planning future updates and projects

2.
Concepts: asking for future help, announce future consultation
Relationship: Both concepts involve seeking or announcing future community involvement.
Criteria: Designers ask for or announce future help or consultation from the community.
Phrase: Seeking future community help

3.
Concepts: inform about development plan, announcing development plans
Relationship: Both concepts involve communicating development plans to the community.
Criteria: Designers inform or announce development plans to the community.
Phrase: Announcing development plans

4.
Concepts: development plan, communicating development plans
Relationship: Both concepts involve sharing information about development plans.
Criteria: Designers share and communicate development plans with the community.
Phrase: Communicating development plans

5.
Concepts: development goals, share info about future development plan
Relationship: Both concepts involve discussing goals and plans for future development.
Criteria: Participants discuss development goals and share information about future plans.
Phrase: Sharing development goals and plans

6.
Concepts: memory aid, manage memory and task organization
Relationship: Both concepts involve managing memory and task organization before starting new projects.
Criteria: Designers discuss managing memory and tasks, including gathering opinions before new projects.
Phrase: Managing memory and tasks

7.
Concepts: suggest prioritization, prioritize tasks
Relationship: Both concepts involve the prioritization of tasks or features.
Criteria: Users suggest and discuss the prioritization of tasks or features.
Phrase: Prioritizing tasks and features

8.
Concepts: identify potential need, listing what might need to be done
Relationship: Both concepts involve identifying and listing potential tasks or needs.
Criteria: Designers identify and list potential needs or tasks for future updates.
Phrase: Identifying and listing potential needs

9.
Concepts: highlight update frequency, indicating ongoing updates
Relationship: Both concepts involve communicating the frequency and ongoing nature of updates.
Criteria: Designers highlight and indicate the frequency and ongoing nature of updates.
Phrase: Highlighting update frequency

10.
Concepts: sharing visual updates, group communication
Relationship: Both concepts involve sharing updates and communicating with the group.
Criteria: Designers share visual updates and communicate with the group about changes.
Phrase: Sharing visual updates

11.
Concepts: share progress, providing progress updates
Relationship: Both concepts involve sharing progress updates with the community.
Criteria: Designers share and provide updates on the progress of development.
Phrase: Providing progress updates

12.
Concepts: previewing updates, explaining upcoming features
Relationship: Both concepts involve previewing and explaining upcoming features.
Criteria: Designers preview and explain features that will be included in future updates.
Phrase: Previewing and explaining updates

13.
Concepts: reassuring users, preparing for updates, engage users with update
Relationship: All concepts involve engaging and preparing users for upcoming updates.
Criteria: Designers reassure, prepare, and engage users with information about upcoming updates.
Phrase: Engaging users with updates

14.
Concepts: listing bug fixes, providing detailed updates
Relationship: Both concepts involve providing detailed information about updates and bug fixes.
Criteria: Designers list bug fixes and provide detailed updates about new versions.
Phrase: Providing detailed updates

15.
Concepts: update clarification, detailed overview of update
Relationship: Both concepts involve clarifying and providing a detailed overview of updates.
Criteria: Designers clarify and provide a detailed overview of features and changes in updates.
Phrase: Clarifying and detailing updates

16.
Concepts: sharing development updates, announcing updates to the community
Relationship: Both concepts involve informing the community about updates.
Criteria: Designers inform and announce updates to the community.
Phrase: Announcing updates

17.
Concepts: updates, listing upcoming features
Relationship: Both concepts involve providing information about updates and upcoming features.
Criteria: Designers provide information and lists of features included in updates.
Phrase: Listing upcoming features

18.
Concepts: describing update scope, give an intro to update content
Relationship: Both concepts involve describing and introducing the content of updates.
Criteria: Designers describe the scope and provide an introduction to new features in updates.
Phrase: Describing update content

19.
Concepts: promise future feature, promise a future perfection of a feature, promising it will realize
Relationship: All concepts involve promising future features or improvements.
Criteria: Designers commit to adding and perfecting features in the future.
Phrase: Promising future features

20.
Concepts: designer confirmation, affirming planned feature
Relationship: Both concepts involve confirming the implementation of planned features.
Criteria: Designers confirm and affirm the implementation of planned features.
Phrase: Confirming planned features

21.
Concepts: confirming updates, confirm feature update
Relationship: Both concepts involve confirming that updates or feature updates will be made.
Criteria: Users or designers confirm that updates or feature updates will be released.
Phrase: Confirming updates

22.
Concepts: update status inquiry, inquiring about updates, update timeline inquiry
Relationship: All concepts involve inquiring about the status or timeline of updates.
Criteria: Users inquire about the status or timeline of updates and new features.
Phrase: Inquiring about updates

23.
Concepts: show interest in development progress, expressing anticipation for updates
Relationship: Both concepts involve expressing interest or anticipation for updates.
Criteria: Users show interest and express anticipation for development progress and updates.
Phrase: Expressing interest in updates

24.
Concepts: praise software, praise simulation effect, compliment on 3d effect
Relationship: All concepts involve praising different aspects of the software.
Criteria: Users praise the software, its simulation effects, and 3D visual effects.
Phrase: Praising software features

25.
Concepts: acknowledge craftsmanship, appreciating design effort
Relationship: Both concepts involve acknowledging and appreciating the design effort.
Criteria: Users acknowledge and appreciate the craftsmanship and effort put into the software.
Phrase: Appreciating design effort

26.
Concepts: appreciation of plans, providing positive feedback
Relationship: Both concepts involve expressing approval and providing positive feedback.
Criteria: Users express approval and provide positive feedback about plans and progress.
Phrase: Providing positive feedback

27.
Concepts: comparative feedback, comparing favorably to other applications
Relationship: Both concepts involve providing feedback by comparing to other applications.
Criteria: Users provide comparative feedback, highlighting the software's advantages.
Phrase: Providing comparative feedback

28.
Concepts: discussing usability, discussing context of use
Relationship: Both concepts involve discussing usability and the context of use.
Criteria: Users and designers discuss usability features and specific contexts of software use.
Phrase: Discussing usability and context

29.
Concepts: software effectiveness, evaluating software usability
Relationship: Both concepts involve evaluating the software's performance and usability.
Criteria: Users evaluate and comment on the software's effectiveness and usability.
Phrase: Evaluating software usability

30.
Concepts: school implementation, classroom application
Relationship: Both concepts involve discussing the use of software in educational settings.
Criteria: Users discuss the implementation and application of the software in schools and classrooms.
Phrase: Discussing educational implementation

31.
Concepts: sharing user experiences, user experience and impact
Relationship: Both concepts involve sharing experiences and the impact of the software.
Criteria: Users share their experiences and discuss the impact of the software on teaching or learning.
Phrase: Sharing user experiences

32.
Concepts: explain current limitations, testing version explanation
Relationship: Both concepts involve explaining limitations and testing status.
Criteria: Designers explain current limitations and the status of testing versions.
Phrase: Explaining limitations and testing

33.
Concepts: platform limitation, talk about limitation of the solution, system limitation explanation
Relationship: All concepts involve discussing limitations of the platform or system.
Criteria: Designers discuss limitations of the platform, proposed solutions, and system constraints.
Phrase: Discussing platform limitations

34.
Concepts: identify usability issue, acknowledge potential issue
Relationship: Both concepts involve identifying and acknowledging usability issues.
Criteria: Users identify and designers acknowledge potential usability issues.
Phrase: Identifying usability issues

35.
Concepts: technical issue, discussing outdated technology
Relationship: Both concepts involve discussing technical issues related to outdated technology.
Criteria: Users mention technical issues and outdated technology or systems.
Phrase: Discussing technical issues

36.
Concepts: consider future compatibility, considering future compatibility, suggest checking compatibility
Relationship: All concepts involve considering and suggesting checks for future compatibility.
Criteria: Designers discuss and suggest checking future compatibility with older systems.
Phrase: Considering future compatibility

37.
Concepts: system requirements, system compatibility, system compatibility information
Relationship: All concepts involve discussing system requirements and compatibility.
Criteria: Designers and users discuss system requirements and compatibility information.
Phrase: Discussing system requirements

38.
Concepts: confirm compatibility, compatibility assurance
Relationship: Both concepts involve confirming and assuring system compatibility.
Criteria: Designers confirm and assure the compatibility of the software with specific systems.
Phrase: Confirming system compatibility

39.
Concepts: feature complexity, explain task complexity, difficulty in development
Relationship: All concepts involve discussing the complexity and difficulty of development tasks.
Criteria: Designers discuss the complexity and time required for feature development.
Phrase: Discussing development complexity

40.
Concepts: clarifying software versions, give more information about the version uploaded
Relationship: Both concepts involve providing information about software versions.
Criteria: Designers explain and provide information about the specific versions of the software.
Phrase: Clarifying software versions

41.
Concepts: release process, update on release process
Relationship: Both concepts involve describing and updating the release process.
Criteria: Designers describe and provide updates on the software release process.
Phrase: Updating release process

42.
Concepts: adapt to platform specific constraints, providing platform-specific information
Relationship: Both concepts involve adapting to and providing information about platform-specific constraints.
Criteria: Designers discuss adapting to platform-specific constraints and provide relevant information.
Phrase: Adapting to platform constraints

43.
Concepts: highlight practicality, practical application highlight
Relationship: Both concepts involve highlighting the practicality and usefulness of the software.
Criteria: Participants highlight the practicality and useful applications of the software.
Phrase: Highlighting software practicality

44.
Concepts: introduce feature functions, explaining component functionality, providing feature examples
Relationship: All concepts involve explaining and providing examples of feature functions.
Criteria: Designers introduce, explain, and provide examples of new feature functions.
Phrase: Explaining feature functions

45.
Concepts: user tips, share usage trick
Relationship: Both concepts involve sharing tips and tricks for using the software.
Criteria: Designers provide tips and share tricks for using the software effectively.
Phrase: Sharing user tips

46.
Concepts: provide information, inform about ideal components
Relationship: Both concepts involve providing information about the software and its components.
Criteria: Designers provide information and inform users about ideal software components.
Phrase: Providing software information

47.
Concepts: teaching, instruction and updates
Relationship: Both concepts involve providing instructional information and updates.
Criteria: Designers provide instructional information and updates to help users understand the software.
Phrase: Providing instruction and updates

48.
Concepts: manual editing, manual adjustment
Relationship: Both concepts involve allowing manual editing and adjustments.
Criteria: Participants mention the ability to manually edit or adjust features.
Phrase: Allowing manual adjustments

49.
Concepts: engage in iterative development, iterative development based on user feedback
Relationship: Both concepts involve iterative development based on feedback.
Criteria: Designers engage in iterative development and make updates based on user feedback.
Phrase: Engaging in iterative development

50.
Concepts: commit to improvement, emphasize continuous improvement
Relationship: Both concepts involve committing to and emphasizing continuous improvement.
Criteria: Designers commit to and emphasize the continuous improvement of the software.
Phrase: Committing to continuous improvement

51.
Concepts: refine design, simplification and refinement in design
Relationship: Both concepts involve refining and simplifying the design.
Criteria: Designers discuss and implement refinements and simplifications in the design.
Phrase: Refining design

52.
Concepts: consider user experience, address usability concerns
Relationship: Both concepts involve considering and addressing user experience and usability concerns.
Criteria: Designers consider user experience and address usability concerns in their discussions.
Phrase: Addressing usability concerns

53.
Concepts: user experience improvement, user experience prioritization
Relationship: Both concepts involve prioritizing and improving user experience.
Criteria: Users and designers focus on prioritizing and improving the user experience.
Phrase: Prioritizing user experience

54.
Concepts: simulation enhancement, inform about simulation capability
Relationship: Both concepts involve enhancing and informing about simulation capabilities.
Criteria: Designers describe and inform users about the simulation capabilities of the software.
Phrase: Enhancing simulation capabilities

55.
Concepts: internal update, product iteration
Relationship: Both concepts involve discussing internal updates and product iterations.
Criteria: Designers discuss internal updates and the iteration process of the software.
Phrase: Discussing product iterations

56.
Concepts: subject expansion, discuss subject focus
Relationship: Both concepts involve discussing the expansion and focus of the subject matter.
Criteria: Designers and users discuss expanding the subject matter and focus of the software.
Phrase: Discussing subject expansion

57.
Concepts: design thoughts, design discussion
Relationship: Both concepts involve sharing thoughts and discussions about the design process.
Criteria: Designers share thoughts and engage in discussions about the design process.
Phrase: Discussing design thoughts

58.
Concepts: long-term stability, feature stability
Relationship: Both concepts involve discussing the stability and reliability of features.
Criteria: Designers discuss the long-term stability and reliability of features.
Phrase: Discussing feature stability

59.
Concepts: explaining the need, describe planned feature
Relationship: Both concepts involve explaining the need and describing planned features.
Criteria: Participants explain the need for and describe planned features.
Phrase: Describing planned features

60.
Concepts: questioning user identity, confirming user identity
Relationship: Both concepts involve questioning and confirming user identity or role.
Criteria: Designers ask about and users confirm their identity or role.
Phrase: Confirming user identity

61.
Concepts: student identification, community member identification
Relationship: Both concepts involve identifying oneself as a student or community member.
Criteria: Users identify themselves as students or community members.
Phrase: Identifying as a community member

62.
Concepts: teaching experience, providing teaching background, identifying as a teacher
Relationship: All concepts involve sharing teaching experience and background.
Criteria: Users share their teaching experience and background, identifying as teachers.
Phrase: Sharing teaching experience

63.
Concepts: high school, middle school
Relationship: Both concepts involve mentioning teaching experience in high school or middle school.
Criteria: Users mention their teaching experience in high school or middle school.
Phrase: Mentioning teaching levels

64.
Concepts: user background, sharing professional background
Relationship: Both concepts involve sharing professional or personal background information.
Criteria: Users share their professional background to build trust and context.
Phrase: Sharing professional background
---