You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (24 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
24. {Repeat the input 24}
Relationship: {The logical relationship between concepts in input 24}
Criteria: {A sentence of consolidated criteria for code 24}
Label: {A consolidated label of code 24}
Category: {2-4 words for code 24}
---
~~~
1. ios review, apple store review.
- Waiting for or discussing iOS reviews.
- Discussing or waiting for reviews or approvals.

2. platform specific updates, platform specific release.
- Updates specific to a particular platform.
- Releases, updates, or versions of the product on specific platforms.

3. compatibility planning, compatibility assurance.
- Planning or preparation for ensuring compatibility with different devices or systems.
- Ensuring, verifying, or clarifying compatibility with different systems or devices.

4. hardware limitations, software limitations.
- Limitations or constraints imposed by hardware.
- Limitations or constraints of software or technology.

5. system limitations, platform limitations.
- Discussion of limitations or constraints of a system.
- Discussing limitations or constraints of a platform or system.

6. layout limitations, interface design limitation.
- Discussing or acknowledging limitations or constraints in a design or process.
- Identifying limitations or constraints in interface design.

7. update confirmation, update acknowledgment.
- A message that confirms an update has been made.
- Acknowledgment or notification of an update or change.

8. user notification, update notification.
- Notifying users of updates or changes.
- Informing users about new updates or features.

9. update status communication, feature update communication.
- Communication of update status to users.
- Communicating updates or changes to the system.

10. new feature, software features, feature enhancement.
- Description of new features or functionality in the software.
- Describing new features, components, or enhancements in software.
- Describes new features or enhancements to the software.

11. feature expansion, component additions.
- Addition of new features to the software.
- Adding or introducing new components or elements to software.

12. software update, version update.
- Describing software updates or changes.
- Involving updates or changes to a software version.

13. update planning, future update.
- Plans or schedules updates or changes to a system.
- Planning or considering future updates or changes to a system.

14. update scale, update magnitude.
- Discussions or descriptions of the scope, size, or impact of updates.
- Description of the magnitude or scope of an update or change.

15. update preview, feature preview.
- Previews or announcements of upcoming features or updates.
- Preview or announcement of upcoming features or updates.

16. release schedule, release plan.
- Discussing or planning for releases or updates.
- Discussing or planning the release or deployment of a new feature or update.

17. update schedule, software update schedule, update timeline.
- Discussion of schedules or timelines for updates.
- Discussion of the schedule or timeline for software updates.
- Discussions or descriptions of timelines, schedules, or deadlines for updates or releases.

18. development timeline, feature development timeline.
- Mentions of timelines, schedules, or deadlines for updates or releases.
- Discusses the timeline for feature development.

19. roadmap, feature roadmap, roadmap sharing.
- Statements that outline future updates or releases.
- Roadmap or plan for future features or updates.

20. future development, future software development plans.
- Discussion of future plans or roadmap for the software.
- Discusses future plans for software development.

21. development plan, development roadmap.
- Discussion of plans or timelines for development.
- Discussion of development plans or roadmaps.

22. ongoing work, work in progress.
- Mention of ongoing work or development.
- Indications of ongoing work, development, or progress on the project.

23. progress update, software development progress.
- Provides updates on the progress of software development.
- Discusses the progress of software development.

24. content planning, content prioritization, content development.
- Planning or prioritizing content development.
- Prioritizing content development.
- Relates to the development of content, prioritizing specific topics or sections.
===
Here are the merged codes with their relationships, criteria, labels, and categories:

---
Categories:
* Platform Development
* Update Management
* Communication
* Feature Development
* Planning and Roadmapping
* Development Progress
* Content Development

Definitions for each code:

1. ios review, apple store review.
Relationship: Inclusion (iOS review is a type of review)
Criteria: Discussions related to reviews on the Apple Store or iOS reviews.
Label: Review Management
Category: Update Management

2. platform specific updates, platform specific release.
Relationship: Inclusion (Platform-specific updates are a type of update)
Criteria: Updates or releases specific to a particular platform.
Label: Platform Updates
Category: Platform Development

3. compatibility planning, compatibility assurance.
Relationship: Synonyms (Both refer to ensuring compatibility)
Criteria: Planning or ensuring compatibility with different systems or devices.
Label: Compatibility Assurance
Category: Platform Development

4. hardware limitations, software limitations.
Relationship: Parallel (Both refer to limitations)
Criteria: Limitations or constraints imposed by hardware or software.
Label: Technical Limitations
Category: Platform Development

5. system limitations, platform limitations.
Relationship: Synonyms (Both refer to limitations)
Criteria: Discussion of limitations or constraints of a system or platform.
Label: System Limitations
Category: Platform Development

6. layout limitations, interface design limitation.
Relationship: Inclusion (Layout limitations are a type of design limitation)
Criteria: Discussing limitations or constraints in a design or process.
Label: Design Limitations
Category: Platform Development

7. update confirmation, update acknowledgment.
Relationship: Synonyms (Both refer to acknowledging updates)
Criteria: Messages that confirm an update has been made.
Label: Update Acknowledgment
Category: Update Management

8. user notification, update notification.
Relationship: Synonyms (Both refer to notifying users)
Criteria: Notifying users of updates or changes.
Label: User Notification
Category: Communication

9. update status communication, feature update communication.
Relationship: Synonyms (Both refer to communicating updates)
Criteria: Communication of update status to users.
Label: Update Communication
Category: Communication

10. new feature, software features, feature enhancement.
Relationship: Inclusion (New features are a type of software feature)
Criteria: Description of new features or functionality in the software.
Label: Feature Development
Category: Feature Development

11. feature expansion, component additions.
Relationship: Synonyms (Both refer to adding features)
Criteria: Addition of new features to the software.
Label: Feature Expansion
Category: Feature Development

12. software update, version update.
Relationship: Synonyms (Both refer to updates)
Criteria: Describing software updates or changes.
Label: Software Update
Category: Update Management

13. update planning, future update.
Relationship: Synonyms (Both refer to planning updates)
Criteria: Plans or schedules updates or changes to a system.
Label: Update Planning
Category: Planning and Roadmapping

14. update scale, update magnitude.
Relationship: Synonyms (Both refer to the scope of updates)
Criteria: Discussions or descriptions of the scope, size, or impact of updates.
Label: Update Scope
Category: Update Management

15. update preview, feature preview.
Relationship: Synonyms (Both refer to previewing updates)
Criteria: Previews or announcements of upcoming features or updates.
Label: Update Preview
Category: Update Management

16. release schedule, release plan.
Relationship: Synonyms (Both refer to planning releases)
Criteria: Discussing or planning for releases or updates.
Label: Release Planning
Category: Planning and Roadmapping

17. update schedule, software update schedule, update timeline.
Relationship: Synonyms (All refer to scheduling updates)
Criteria: Discussion of schedules or timelines for updates.
Label: Update Scheduling
Category: Planning and Roadmapping

18. development timeline, feature development timeline.
Relationship: Synonyms (Both refer to development timelines)
Criteria: Mentions of timelines, schedules, or deadlines for updates or releases.
Label: Development Timeline
Category: Planning and Roadmapping

19. roadmap, feature roadmap, roadmap sharing.
Relationship: Synonyms (All refer to roadmapping)
Criteria: Statements that outline future updates or releases.
Label: Roadmapping
Category: Planning and Roadmapping

20. future development, future software development plans.
Relationship: Synonyms (Both refer to future development plans)
Criteria: Discussion of future plans or roadmap for the software.
Label: Future Development
Category: Planning and Roadmapping

21. development plan, development roadmap.
Relationship: Synonyms (Both refer to development planning)
Criteria: Discussion of plans or timelines for development.
Label: Development Planning
Category: Planning and Roadmapping

22. ongoing work, work in progress.
Relationship: Synonyms (Both refer to ongoing development)
Criteria: Mention of ongoing work or development.
Label: Ongoing Development
Category: Development Progress

23. progress update, software development progress.
Relationship: Synonyms (Both refer to development progress)
Criteria: Provides updates on the progress of software development.
Label: Progress Update
Category: Development Progress

24. content planning, content prioritization, content development.
Relationship: Inclusion (Content planning and prioritization are part of content development)
Criteria: Planning or prioritizing content development.
Label: Content Development
Category: Content Development