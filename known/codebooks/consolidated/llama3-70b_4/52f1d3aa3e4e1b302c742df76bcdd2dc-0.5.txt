You are an expert in thematic analysis clarifying the criteria of qualitative codes. Do not attempt to merge codes now.
Consider provided quotes, and note that each quote is independent of others.
Write clear and generalizable criteria for each code and do not introduce unnecessary details.
If necessary, refine labels to be more accurate, but do not repeat yourself.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1. 
Criteria: {Who did what, and how for code 1}
Label: {A descriptive label of code 1}
...
32.
Criteria: {Who did what, and how for code 32}
Label: {A descriptive label of code 32}
---
~~~
1.
Label: teacher-admin interaction
Quotes:
- Designer: Consulting the teachers in the group: which type of intersection is used in the circuit diagrams in the current textbooks?
[Image]

2.
Label: offering advice
Quotes:
- User: Don't aim for completeness, it should be categorized and refined one by one

3.
Label: requesting user guidance
Quotes:
- User: Is there a user manual?

4.
Label: problem solving
Quotes:
- User: Win7 should be fine.
- User: Hello everyone

5.
Label: managing scope
Quotes:
- Designer: Mechanics will have to wait until electromagnetism is figured out; it will take some more time

6.
Label: suggests adding an export function or the ability to save/import experiments for enhanced convenience in educational settings
Quotes:
- User: If there could be an export function, or the ability to save or import experiments, it would be convenient. We could set up the parameters in the office and directly import them in class.

7.
Label: explaining the focus on electricity and mechanics, and the potential for future expansion
Quotes:
- Designer: Physics mainly focuses on electricity and mechanics; other directions don't have much room for free experiments before high school. In the future, we might do some demonstration experiments based on everyone's needs, but it won't be as open as electricity

8.
Label: ensuring user needs are met
Quotes:
- Designer: There will be.

9.
Label: inviting more questions
Quotes:
- Designer: No need to be polite, if you encounter any problems during use, you can directly mention them in the group.

10.
Label: inquire about update timeline
Quotes:
- User: Will there be an update this week? [Emoji]

11.
Label: planning for improvements
Quotes:
- Designer: XP compatibility might need to be looked into later... probably need to install a virtual machine.

12.
Label: seeking updates
Quotes:
- User: Has the Android version not been updated yet?
- User: Will there be an update this week? [Emoji]
- User: Are there any other updates recently?

13.
Label: praising software features
Quotes:
- User: The 3D effect of your software is very good

14.
Label: specifies pc version in the group
Quotes:
- Designer: The one in the group is the PC version

15.
Label: seeking to influence development
Quotes:
- User: First, let's pay homage to the experts, then I'll make a small request. Could you create a dynamic demonstration of mechanical waves and mechanical vibrations, such as the propagation of transverse and longitudinal waves, wave superposition, diffraction, and interference? Also, for optical experiments, it would be great to have optical benches, single slits, double slits, and polarizers to demonstrate optical experiments.

16.
Label: demonstrating long term thinking
Quotes:
- Designer: This belongs to the kind of feature that, once done, will ensure long-term stability... Adding various components is actually simpler

17.
Label: acknowledging the need to investigate xp compatibility
Quotes:
- Designer: XP compatibility might need to be looked into later... probably need to install a virtual machine.

18.
Label: finding requested information
Quotes:
- User: I saw the group files, thank you.

19.
Label: explaining technicalities
Quotes:
- Designer: Theoretically, it should be compatible (but the machine itself shouldn't be too old, probably from 2008 onwards).
- Designer: Touch screens have their own on-screen keyboards.

20.
Label: offer a solution
Quotes:
- Designer: Touch screens have their own on-screen keyboards.
- Designer: I'll upload one now... Are you a teacher?

21.
Label: noting for potential bugs
Quotes:
- Designer: This version of the circuit diagram is for testing only... You can drag the Editor because the auto-layout algorithm is not very stable and may produce some odd results

22.
Label: describe students'positive responses in class
Quotes:
- User: The simulation effect of this software is really good. When I used it in class yesterday, the students were amazed.

23.
Label: ensuring relevance to current teaching practices
Quotes:
- Designer: Consulting the teachers in the group: which type of intersection is used in the circuit diagrams in the current textbooks?
[Image]

24.
Label: excuse me
Quotes:
- User: Excuse me.

25.
Label: acknowledging the limitations of the auto layout algorithm
Quotes:
- Designer: This version of the circuit diagram is for testing only... You can drag the Editor because the auto-layout algorithm is not very stable and may produce some odd results

26.
Label: managing expectations for complex features
Quotes:
- Designer: Hope to figure out electromagnetism before the end of the year

27.
Label: seeking clarification on circuit diagram style
Quotes:
- Designer: Uh... left side or right side
- User: Left side

28.
Label: expanding power supply options
Quotes:
- Designer: The student power supply supports both DC and AC and is an ideal component.

29.
Label: highlighting practical application
Quotes:
- User: If there could be an export function, or the ability to save or import experiments, it would be convenient. We could set up the parameters in the office and directly import them in class.
- Designer: With bidirectional conversion, you can directly do problems in the application

30.
Label: align with best practices
Quotes:
- User: But it's better to use the right side for non-crossing

31.
Label: clarifying intersection type options
Quotes:
- Designer: Uh... left side or right side

32.
Label: explaining development challenges
Quotes:
- Designer: This is quite complex, so it will take more time... Hopefully, it can be released this week
===
Here are the definitions for each code:

---
1.
Criteria: Teacher or designer initiates interaction with the group, seeking input or guidance.
Label: Seeking Input

2.
Criteria: User provides guidance or advice to others.
Label: Offering Guidance

3.
Criteria: User requests guidance or instruction from others.
Label: Requesting Guidance

4.
Criteria: User attempts to solve a problem or provide a solution.
Label: Problem-Solving

5.
Criteria: Designer or teacher sets boundaries or prioritizes tasks.
Label: Managing Scope

6.
Criteria: User suggests a new feature or improvement.
Label: Feature Suggestion

7.
Criteria: Designer or teacher explains the focus or priorities of the project.
Label: Explaining Focus

8.
Criteria: Designer or teacher ensures that user needs are met or acknowledged.
Label: Ensuring User Needs

9.
Criteria: Designer or teacher invites users to ask questions or provide feedback.
Label: Inviting Feedback

10.
Criteria: User inquires about the timeline for updates or releases.
Label: Inquiring about Updates

11.
Criteria: Designer or teacher plans or discusses improvements or future development.
Label: Planning Improvements

12.
Criteria: User seeks information about recent or upcoming updates.
Label: Seeking Updates

13.
Criteria: User praises or appreciates a feature or aspect of the software.
Label: Praising Software

14.
Criteria: Designer or teacher clarifies or specifies a particular version of the software.
Label: Specifying Software Version

15.
Criteria: User attempts to influence the development of the software.
Label: Influencing Development

16.
Criteria: Designer or teacher thinks long-term, considering future implications or stability.
Label: Long-term Thinking

17.
Criteria: Designer or teacher acknowledges the need to investigate or address a technical issue.
Label: Acknowledging Technical Issues

18.
Criteria: User finds or receives requested information.
Label: Finding Information

19.
Criteria: Designer or teacher explains technical details or concepts.
Label: Explaining Technicalities

20.
Criteria: Designer or teacher offers a solution or alternative.
Label: Offering Solutions

21.
Criteria: Designer or teacher notes potential bugs or issues.
Label: Noting Potential Bugs

22.
Criteria: User shares positive feedback or experiences with the software.
Label: Sharing Positive Experiences

23.
Criteria: Designer or teacher ensures that the software is relevant to current teaching practices.
Label: Ensuring Relevance

24.
Criteria: User apologizes or excuses themselves.
Label: Apologizing

25.
Criteria: Designer or teacher acknowledges limitations or constraints.
Label: Acknowledging Limitations

26.
Criteria: Designer or teacher manages expectations for complex features or development.
Label: Managing Expectations

27.
Criteria: User seeks clarification on a specific aspect of the software.
Label: Seeking Clarification

28.
Criteria: Designer or teacher expands or enhances a feature or component.
Label: Expanding Features

29.
Criteria: User highlights the practical application or usefulness of a feature.
Label: Highlighting Practical Application

30.
Criteria: User aligns with best practices or conventions.
Label: Aligning with Best Practices

31.
Criteria: Designer or teacher clarifies options or possibilities.
Label: Clarifying Options

32.
Criteria: Designer or teacher explains challenges or difficulties in development.
Label: Explaining Development Challenges