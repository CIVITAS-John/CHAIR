You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (13 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
13. 
Concepts: {Repeat the input 13}
Relationship: {What is logical relationship between concepts in code 13, or N/A if not applicable}
Criteria: {Who did what, and how for code 13}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: positive interaction, user interaction and gratitude
- Users engage positively with each other, showing agreement or appreciation.
- When gratitude or interaction occurs between users.

2.
Concepts: inquiring about feature usage, requesting software assistance
- Users request instructions or guidance on using particular software features.
- Users seek assistance or guidance on using or understanding the software.

3.
Concepts: context provision, providing context
- Provides a background story or context relevant to a discussion.
- Participants provide general context or background information for understanding.

4.
Concepts: encouraging feedback, encourage community engagement
- Participants encourage users to submit feedback or interact with the community.
- Participants invite community members to join activities or give feedback.

5.
Concepts: update status inquiry, inquiring about updates
- Inquiring about the availability or status of updates for different platforms.
- Users inquire about the existence or timelines of upcoming software updates.

6.
Concepts: communication of updates, communicating release timelines
- Instances where designers communicate updates, release schedules, or new features to users.
- Designers provide and communicate timelines or schedules for software updates or releases.

7.
Concepts: planning future updates, discussing future updates
- Designers share and discuss plans for future software developments.
- Designers discuss potential updates and future compatibility considerations.

8.
Concepts: detailing updates, providing update details
- Designers give detailed information about new features, components, and bug fixes in updates.
- Designers provide detailed notes on features, changes, and specifics included in version updates.

9.
Concepts: announcing feature releases, announcing feature updates
- Designers inform the community about new feature releases or updates.
- Designers announce new features, updates, or bug fixes based on user feedback.

10.
Concepts: make feature requests, requesting and suggesting improvements
- Users request specific features or improvements to enhance the software.
- Users request and suggest improvements or features to enhance the software.

11.
Concepts: gathering user input, user input collection
- Designers collect user input for informing future software development.
- Designer gathers specific input from users about design preferences or requirements.

12.
Concepts: discussing system compatibility, confirming software compatibility
- Designers discuss software compatibility with different operating systems.
- Designers confirm the softwareâ€™s compatibility with different systems or standards.

13.
Concepts: discussing software usability, discussing feature improvements
- Designers discuss and explain efforts to improve software usability.
- Users or designers discuss improvements or optimizations for software features.
===
---
Definitions for each code (13 in total):
1.
Concepts: positive interaction, user interaction and gratitude
Relationship: Gratitude is an aspect of positive user interactions.
Criteria: Users engage positively with each other, showing agreement or appreciation.
Phrase: Engaging positively with gratitude

2.
Concepts: inquiring about feature usage, requesting software assistance
Relationship: Inquiring about feature usage requires requesting software assistance.
Criteria: Users request instructions or guidance on using or understanding particular software features.
Phrase: Seeking guidance on software usage

3.
Concepts: context provision, providing context
Relationship: Providing background or situational information.
Criteria: Participants provide background information relevant to a discussion.
Phrase: Providing discussion context

4.
Concepts: encouraging feedback, encourage community engagement
Relationship: Encouraging feedback fosters community engagement.
Criteria: Participants encourage users to submit feedback or interact within the community.
Phrase: Promoting community feedback

5.
Concepts: update status inquiry, inquiring about updates
Relationship: Inquiry about the status focuses on updates.
Criteria: Users inquire about the availability or status of software updates.
Phrase: Asking about update status

6.
Concepts: communication of updates, communicating release timelines
Relationship: Communication includes both updates and timelines.
Criteria: Designers communicate updates, release schedules, or new features to users.
Phrase: Communicating update schedules

7.
Concepts: planning future updates, discussing future updates
Relationship: Planning is a part of discussing future updates.
Criteria: Designers share and discuss plans for future software developments.
Phrase: Discussing future developments

8.
Concepts: detailing updates, providing update details
Relationship: Detailing is the act of providing update specifics.
Criteria: Designers give detailed information about new features and bug fixes in updates.
Phrase: Offering detailed update notes

9.
Concepts: announcing feature releases, announcing feature updates
Relationship: Announcing encompasses both releases and updates.
Criteria: Designers inform the community about new feature releases or updates.
Phrase: Announcing new features

10.
Concepts: make feature requests, requesting and suggesting improvements
Relationship: Requests involve suggesting improvements or new features.
Criteria: Users request or suggest specific features and improvements.
Phrase: Requesting software enhancements

11.
Concepts: gathering user input, user input collection
Relationship: Gathering involves the collection of user input.
Criteria: Designers collect input from users for future software development.
Phrase: Collecting user feedback

12.
Concepts: discussing system compatibility, confirming software compatibility
Relationship: Discussion focuses on confirming compatibility.
Criteria: Designers discuss and confirm software compatibility with different systems.
Phrase: Confirming compatibility

13.
Concepts: discussing software usability, discussing feature improvements
Relationship: Usability discussion includes feature improvements.
Criteria: Designers discuss efforts to improve software usability and feature optimization.
Phrase: Discussing usability improvements
---