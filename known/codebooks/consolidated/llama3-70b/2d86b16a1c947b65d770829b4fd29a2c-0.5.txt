You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another and please do not merge them.
Determine the logical relationship between concepts within each code. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable criteria for each code and do not introduce unnecessary details. Then, write an accurate label for it.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (11 in total):
1. {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Label: {A consolidated label of code 1}
...
11. {Repeat the input 11}
Relationship: {What is logical relationship between concepts in code 11, or N/A if not applicable}
Criteria: {Who did what, and how for code 11}
Label: {A consolidated label of code 11}
---
~~~
1. Label: co-design, co-creation
- Instances where designers involve the community in the design process
- Designers involve users in the design process, allowing them to contribute ideas and make decisions

2. Label: response, response or follow-up
- Responding to a question, comment, or suggestion, or responding to previous information or updates.
- A user or designer responds to a previous statement or question

3. Label: confirmation, affirmation
- Users confirm or acknowledge a diagnosis or explanation, or confirm or agree with information.
- Expressing agreement or confirmation, or affirmation or confirmation of a software's capabilities or functionality is provided.

4. Label: positive, positive emotions
- Expressing positive emotions or sentiments about the software or community.
- Designers or users express enthusiasm, excitement, or gratitude for the tool.

5. Label: tutorial guidance, guidance
- Guidance or tutorials are provided.
- Instructions or guidance on how to use or operate something are given, or guidance on how to navigate an interface.

6. Label: design goals, design optimization
- Design goals or objectives are discussed or set.
- Goals or aspirations for simplifying the design or user experience are discussed, making design decisions to enhance the user experience.

7. Label: curriculum constraints, technology constraints
- Constraints imposed by the curriculum, discussions or mentions of constraints or limitations in the classroom
- Limitations or restrictions of a software or platform are mentioned, and identification of barriers or constraints related to classroom technology.

8. Label: compatibility assurance, hardware adaptation and accommodation
- Designers' considerations around software compatibility and operating system compatibility, assuring the compatibility of the software with certain devices or systems.
- Adaptation of software to specific hardware or devices, the consideration of various hardware configurations and their implications for the software's design.

9. Label: platform-specific communication, platform differences
- Designer discusses platform-specific information.
- Differences or variations between different platforms are mentioned, discussing using the platform on different devices or systems.

10. Label: share knowledge, software distribution
- Sharing knowledge or information about the software or its functionality.
- Designers or users discuss sharing or distributing the software, or users or designers discuss accessing or downloading the software, or mentioning or discussing software usage, including how to use it or issues encountered.

11. Label: resource sharing, resource provision
- Sharing or discussing file-sharing processes, or users share information, images, or resources related to the software.
- Sharing or requesting community resources, such as user manuals or files, designers share resources or provide access to information with the community.
===
Here are the definitions for each code:

---
1. Co-design, co-creation
Relationship: Inclusion
Criteria: Designers involve users in the design process, allowing them to contribute ideas and make decisions
Label: Community Involvement in Design

2. Response, response or follow-up
Relationship: Causal
Criteria: Users or designers respond to previous statements, questions, or updates
Label: Response to Feedback

3. Confirmation, affirmation
Relationship: Agreement
Criteria: Users confirm or acknowledge diagnoses, explanations, or information
Label: Acknowledgement and Agreement

4. Positive, positive emotions
Relationship: Emotional Expression
Criteria: Designers or users express enthusiasm, excitement, or gratitude for the tool
Label: Positive Sentiment

5. Tutorial guidance, guidance
Relationship: Instructional
Criteria: Instructions or guidance on how to use or operate something are given
Label: Guidance and Tutorials

6. Design goals, design optimization
Relationship: Goal-oriented
Criteria: Design goals or objectives are discussed or set
Label: Design Objectives

7. Curriculum constraints, technology constraints
Relationship: Limitation
Criteria: Limitations or restrictions of a software or platform are mentioned
Label: Constraints and Limitations

8. Compatibility assurance, hardware adaptation and accommodation
Relationship: Compatibility
Criteria: Designers consider software compatibility with certain devices or systems
Label: Compatibility and Adaptation

9. Platform-specific communication, platform differences
Relationship: Variation
Criteria: Differences or variations between different platforms are mentioned
Label: Platform Variations

10. Share knowledge, software distribution
Relationship: Information Sharing
Criteria: Designers or users discuss sharing or distributing the software
Label: Knowledge Sharing and Distribution

11. Resource sharing, resource provision
Relationship: Resource Exchange
Criteria: Users share information, images, or resources related to the software
Label: Resource Sharing and Provision