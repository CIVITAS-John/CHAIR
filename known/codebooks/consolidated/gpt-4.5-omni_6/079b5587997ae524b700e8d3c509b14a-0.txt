You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (58 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
58. 
Concepts: {Repeat the input 58}
Relationship: {What is logical relationship between concepts in code 58, or N/A if not applicable}
Criteria: {Who did what, and how for code 58}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: use non verbal communication, using emojis for communication
- Use of emojis or other non-verbal forms of communication by users.
- Users engage with the conversation using emojis to express emotions or reactions.

2.
Concepts: expressing sentiment with emojis, use emoji to convey sentiment
- A user uses an emoji to convey sentiment.
- A user uses an emoji to convey sentiment about the application's progress.

3.
Concepts: demonstrating politeness, maintain polite communication
- Users or designers express politeness in their communication.
- Designers maintaining polite communication, especially when addressing potential inconveniences.

4.
Concepts: apologizing for inconvenience, apologies and politeness
- Users or designers apologize for any inconvenience or disturbance caused.
- Expressions of politeness, apologies, or acknowledgment of potential inconvenience by the designers.

5.
Concepts: acknowledging understanding, express understanding
- Users acknowledge or confirm understanding.
- A participant acknowledges or shows understanding of another's statement or action.

6.
Concepts: expressing agreement, providing confirmation
- A user or designer agrees with or supports a statement or idea.
- Users or designers confirm or agree with a statement or question.

7.
Concepts: appreciation for support, acknowledging assistance
- Showing appreciation for support or help.
- A user expresses gratitude for assistance or support.

8.
Concepts: positive interaction, expressing user appreciation
- Instances of users expressing gratitude or positive acknowledgment towards others.
- A user expresses appreciation or gratitude.

9.
Concepts: sharing identity, sharing teaching experience
- A user shares their teaching experience and identity.
- Users share their personal teaching experiences.

10.
Concepts: platform question, inquiring about platform specifics
- A user asks questions about platform-specific versions or updates.
- Users inquire about the availability or specifics of a version for a particular platform.

11.
Concepts: request technical help, requesting user assistance
- A user requests assistance with technical aspects or functionalities.
- Users seek help with downloading or using the product.

12.
Concepts: inquiring about software access, inquiring about software usage
- Users inquire about how to download or access the software.
- Users ask questions about how to use specific features or versions of the software.

13.
Concepts: asking follow-up questions, ask followup question on usage scenario
- Participants ask follow-up questions to gain more information or clarification.
- A participant asks a follow-up question to understand the context or usage scenario better.

14.
Concepts: seeking clarification, clarifying user requests
- Participants ask for clarification about a user's problem or issue.
- Participants ask questions to clarify a request or requirement.

15.
Concepts: inquiry, asking questions
- Users ask questions to seek information or clarification.
- Users or designers ask questions to seek information or clarification.

16.
Concepts: providing detailed answers, elaborating on responses or questions
- Participants add detailed information to an answer to make it more specific and useful.
- Users elaborate on their questions or responses to provide additional context.

17.
Concepts: community context, providing context for responses or questions
- Users provide context about their environment or situation.
- Users provide context for their responses or questions, often related to their specific environment or situation.

18.
Concepts: story sharing, sharing user experience
- Users share stories or experiences related to the software or its use.
- Users provide reviews or share their experiences with the software.

19.
Concepts: evaluating software usability, providing comparative feedback
- Users comment on the software's usability and practicality.
- Users provide comparative feedback, highlighting the software's practicality.

20.
Concepts: sharing classroom experience, describe students' positive responses in class
- Users share positive classroom experiences using the software.
- Describing positive responses from students when using the software in a classroom setting.

21.
Concepts: acknowledging features, providing positive feedback, complimenting the software, expressing user satisfaction
- Users express appreciation for specific features of the software.
- Users provide positive feedback about the software's features and quality.
- Users provide positive feedback or compliments about the software.
- Users express satisfaction with the software or its features.

22.
Concepts: collaborative learning, promoting group sharing
- A designer mentions group sharing as a form of collaborative learning.
- Designers share or suggest sharing resources or information within a group.

23.
Concepts: personal interest, expressing personal interest
- Designers expressing personal interests.
- A designer expresses personal interest in a related subject.

24.
Concepts: suggesting features, requesting specific features, proposing additional features
- Users suggest new features or functionalities to be added to the software.
- Participants request specific features or functionalities to be added to the software.
- Users suggest new features or functionalities that could enhance the software.

25.
Concepts: release schedule, scheduling and planning updates
- A designer discusses the release schedule for different versions of the application.
- A designer provides a schedule and discusses the planning for future updates.

26.
Concepts: providing development timelines, give a timeline of feature development
- Designers provide timelines for future updates or releases.
- Providing a timeline for when a feature or update will be completed.

27.
Concepts: development process communication, communicating development progress and plans
- A designer communicates the development process or priorities.
- Designers communicate the progress of development and future plans.

28.
Concepts: share progress, sharing visual updates
- A designer shares progress updates with the community.
- A designer shares visual updates or images related to the project.

29.
Concepts: communicate progress, providing progress updates
- Updates on the progress of software development and release schedules.
- Designers provide updates on the progress or status of software development.

30.
Concepts: providing detailed version update notes, providing detailed technical overviews
- A designer provides detailed notes on version updates and new features.
- A designer provides a detailed overview of new features, components, adjustments, and bug fixes in an update.

31.
Concepts: making community announcements, notifying and updating the community
- Designers make general announcements to the community about updates or changes.
- Designers notify and update the community about changes in the software.

32.
Concepts: announcing software updates, announcing software releases, announcing and detailing new features
- Designers announce and provide details about software updates.
- Designers announce the release of a new software version and its features.
- Designers announce and detail new and upcoming features in the software.

33.
Concepts: announcing feature updates, developer announcement
- Designers announce new features, updates, or bug fixes.
- Designers make detailed announcements about new features, updates, and bug fixes.

34.
Concepts: development update, providing product and technical updates
- Information shared by designers about the current status, updates, and future plans for the Physics Lab software.
- Designers provide information about updates or technical changes to the Physics Lab software.

35.
Concepts: update status inquiry, inquiring about updates
- Inquiring about the status of an update.
- Inquiring about recent or upcoming updates.

36.
Concepts: listing upcoming features, providing information on planned updates
- Listing features included in updates or planned for future releases.
- Information about changes or new features in upcoming updates.

37.
Concepts: promote communication, fostering open communication
- Designers encouraging group members to communicate and share their issues.
- Designers encourage open communication and dialogue within the group.

38.
Concepts: interaction encouragement, encouraging user feedback
- A designer encourages user interaction and feedback.
- Designers encourage users to provide feedback and suggestions.

39.
Concepts: consulting community, consulting the community
- Consulting the community for input or feedback.
- Designers consult the community and gather opinions or feedback before making design decisions.

40.
Concepts: inviting user feedback, seeking community feedback
- Designers invite and request feedback or suggestions from the community to improve the software.
- Designers elicit feedback and encourage community involvement to improve the software.

41.
Concepts: seeking input, requesting community suggestions
- Seeking input or suggestions from the community.
- Designers request suggestions and ask for future help or input from the community.

42.
Concepts: providing user feedback, providing feedback and suggestions
- Users provide feedback or suggestions regarding the software's design and functionality.
- Users provide feedback or suggestions on features and improvements for the software.

43.
Concepts: providing suggestions, suggesting design improvements
- Users or designers provide suggestions for improvements or new features for the software.
- Users provide suggestions for design improvements or new features.

44.
Concepts: inquiring about user identity and role, identifying user needs through interaction
- A designer inquires about the user's role and teaching level to understand their needs better.
- A designer interacts with a user by asking about their profession to identify their needs.

45.
Concepts: understand user needs, inquiring about user needs, inquiring about user problems
- Designers trying to understand the specific needs or problems of users.
- Designers ask about user needs and follow-up questions to understand their requirements better.
- Designers inquire about specific issues encountered by the user.

46.
Concepts: accepting suggestions, acknowledging and accepting suggestions
- Designers accept and agree to implement user suggestions.
- A designer acknowledges and accepts a suggestion or request for inclusion in the next update.

47.
Concepts: feature request response, acknowledging and planning updates
- Designers responding to feature requests with updates or plans.
- Designers acknowledge user feedback and discuss plans to implement suggested features.

48.
Concepts: acknowledging user feedback, integrating user feedback
- Designers acknowledge and take user feedback into account.
- Designers acknowledge and incorporate user feedback into the design process.

49.
Concepts: responding to user feedback, address feedback process
- Designers respond to user feedback or suggestions.
- Designers respond to user queries, feedback, or suggestions.
- Designers address the process of receiving and incorporating user feedback.

50.
Concepts: usability, usability discussion
- A designer describes usability features designed to enhance user experience.
- A designer discusses aspects of usability or user interface design.

51.
Concepts: address usability concern, addressing and mitigating user concerns
- Designers address concerns related to the usability of the software.
- Designers address user concerns and provide responses to mitigate them.

52.
Concepts: future planning and development, sharing future development goals and plans
- Discussing future planning and development.
- A participant discusses and shares information about future development goals and plans.

53.
Concepts: feature development, engaging in design and feature discussions
- Discussions about the development and implementation of new features.
- Discussions about the design and development of specific features.

54.
Concepts: updating on feature development and expansion, previewing and discussing future feature implementation
- A designer discusses the expansion and provides updates on the development of a specific feature.
- A designer shares a preview and discusses the implementation of features in future updates.

55.
Concepts: explaining task complexity and delays, discussing feature complexity and development difficulty
- A designer explains the complexity of a task and the need for more time to complete it.
- A designer discusses the complexity and time required for developing a feature.

56.
Concepts: user support, providing technical support
- Assistance and support provided by designers to help users effectively use the product.
- Designers provide technical support or guidance to users.

57.
Concepts: engaging with the community
- A designer engages with the community by sharing personal interests or thoughts.
- Community members actively participate in discussions and provide feedback.

58.
Concepts: expressing gratitude
- Users or designers express gratitude or appreciation for the software or the efforts of the community.
- Users or designers express gratitude or acknowledge contributions.
===
---
Definitions for each code (58 in total):
1.
Concepts: use non verbal communication, using emojis for communication
Relationship: Both concepts involve using emojis as a form of non-verbal communication.
Criteria: Users engage in conversations using emojis to express emotions or reactions.
Phrase: Using emojis for communication

2.
Concepts: expressing sentiment with emojis, use emoji to convey sentiment
Relationship: Both concepts involve using emojis to convey sentiment.
Criteria: Users use emojis to convey their sentiments about the application's progress.
Phrase: Conveying sentiment with emojis

3.
Concepts: demonstrating politeness, maintain polite communication
Relationship: Both concepts involve maintaining politeness in communication.
Criteria: Users or designers express politeness in their communication, especially when addressing potential inconveniences.
Phrase: Maintaining polite communication

4.
Concepts: apologizing for inconvenience, apologies and politeness
Relationship: Both concepts involve expressing apologies and politeness.
Criteria: Users or designers apologize for any inconvenience or disturbance caused, demonstrating politeness.
Phrase: Apologizing for inconvenience

5.
Concepts: acknowledging understanding, express understanding
Relationship: Both concepts involve acknowledging or confirming understanding.
Criteria: Participants acknowledge or show understanding of another's statement or action.
Phrase: Expressing understanding

6.
Concepts: expressing agreement, providing confirmation
Relationship: Both concepts involve agreeing with or confirming a statement or idea.
Criteria: Users or designers agree with or support a statement or idea.
Phrase: Providing confirmation

7.
Concepts: appreciation for support, acknowledging assistance
Relationship: Both concepts involve showing appreciation for support or help.
Criteria: Users express gratitude for assistance or support.
Phrase: Acknowledging assistance

8.
Concepts: positive interaction, expressing user appreciation
Relationship: Both concepts involve expressing gratitude or positive acknowledgment.
Criteria: Users express appreciation or gratitude towards others.
Phrase: Expressing user appreciation

9.
Concepts: sharing identity, sharing teaching experience
Relationship: Both concepts involve sharing personal information or experiences.
Criteria: Users share their personal teaching experiences and identity.
Phrase: Sharing teaching experience

10.
Concepts: platform question, inquiring about platform specifics
Relationship: Both concepts involve asking questions about platform-specific details.
Criteria: Users inquire about the availability or specifics of a version for a particular platform.
Phrase: Inquiring about platform specifics

11.
Concepts: request technical help, requesting user assistance
Relationship: Both concepts involve requesting help with technical aspects.
Criteria: Users seek assistance with downloading or using the product.
Phrase: Requesting technical help

12.
Concepts: inquiring about software access, inquiring about software usage
Relationship: Both concepts involve asking questions about accessing or using the software.
Criteria: Users inquire about how to download or access the software and its features.
Phrase: Inquiring about software usage

13.
Concepts: asking follow-up questions, ask followup question on usage scenario
Relationship: Both concepts involve asking follow-up questions for more information.
Criteria: Participants ask follow-up questions to gain more information or clarification about a usage scenario.
Phrase: Asking follow-up questions

14.
Concepts: seeking clarification, clarifying user requests
Relationship: Both concepts involve asking for clarification.
Criteria: Participants ask questions to clarify a user's problem or issue.
Phrase: Seeking clarification

15.
Concepts: inquiry, asking questions
Relationship: Both concepts involve asking questions to seek information.
Criteria: Users or designers ask questions to seek information or clarification.
Phrase: Asking questions

16.
Concepts: providing detailed answers, elaborating on responses or questions
Relationship: Both concepts involve providing detailed information.
Criteria: Participants elaborate on their questions or responses to provide additional context.
Phrase: Elaborating on responses

17.
Concepts: community context, providing context for responses or questions
Relationship: Both concepts involve providing context related to the community or situation.
Criteria: Users provide context for their responses or questions, often related to their specific environment or situation.
Phrase: Providing context for responses

18.
Concepts: story sharing, sharing user experience
Relationship: Both concepts involve sharing personal experiences.
Criteria: Users share stories or experiences related to the software or its use.
Phrase: Sharing user experience

19.
Concepts: evaluating software usability, providing comparative feedback
Relationship: Both concepts involve providing feedback on software usability.
Criteria: Users provide comparative feedback, highlighting the software's practicality.
Phrase: Evaluating software usability

20.
Concepts: sharing classroom experience, describe students' positive responses in class
Relationship: Both concepts involve sharing positive classroom experiences.
Criteria: Users describe positive responses from students when using the software in a classroom setting.
Phrase: Sharing classroom experience

21.
Concepts: acknowledging features, providing positive feedback, complimenting the software, expressing user satisfaction
Relationship: All concepts involve providing positive feedback about the software.
Criteria: Users express appreciation and satisfaction with the software's features and quality.
Phrase: Providing positive feedback

22.
Concepts: collaborative learning, promoting group sharing
Relationship: Both concepts involve promoting group sharing as a form of collaborative learning.
Criteria: Designers share or suggest sharing resources or information within a group.
Phrase: Promoting group sharing

23.
Concepts: personal interest, expressing personal interest
Relationship: Both concepts involve expressing personal interests.
Criteria: Designers express personal interest in a related subject.
Phrase: Expressing personal interest

24.
Concepts: suggesting features, requesting specific features, proposing additional features
Relationship: All concepts involve suggesting or requesting new features.
Criteria: Users suggest or request new features or functionalities to be added to the software.
Phrase: Suggesting features

25.
Concepts: release schedule, scheduling and planning updates
Relationship: Both concepts involve discussing the release schedule and planning updates.
Criteria: Designers provide a schedule and discuss the planning for future updates.
Phrase: Scheduling and planning updates

26.
Concepts: providing development timelines, give a timeline of feature development
Relationship: Both concepts involve providing timelines for development.
Criteria: Designers provide timelines for future updates or releases.
Phrase: Providing development timelines

27.
Concepts: development process communication, communicating development progress and plans
Relationship: Both concepts involve communicating the development process and plans.
Criteria: Designers communicate the progress of development and future plans.
Phrase: Communicating development progress

28.
Concepts: share progress, sharing visual updates
Relationship: Both concepts involve sharing progress updates.
Criteria: Designers share visual updates or images related to the project.
Phrase: Sharing visual updates

29.
Concepts: communicate progress, providing progress updates
Relationship: Both concepts involve providing updates on progress.
Criteria: Designers provide updates on the progress or status of software development.
Phrase: Providing progress updates

30.
Concepts: providing detailed version update notes, providing detailed technical overviews
Relationship: Both concepts involve providing detailed information about updates.
Criteria: Designers provide detailed notes and overviews of new features, components, adjustments, and bug fixes in an update.
Phrase: Providing detailed update notes

31.
Concepts: making community announcements, notifying and updating the community
Relationship: Both concepts involve making announcements to the community.
Criteria: Designers notify and update the community about changes in the software.
Phrase: Making community announcements

32.
Concepts: announcing software updates, announcing software releases, announcing and detailing new features
Relationship: All concepts involve announcing and detailing updates or new features.
Criteria: Designers announce and provide details about software updates, releases, and new features.
Phrase: Announcing software updates

33.
Concepts: announcing feature updates, developer announcement
Relationship: Both concepts involve making announcements about new features or updates.
Criteria: Designers announce new features, updates, or bug fixes.
Phrase: Announcing feature updates

34.
Concepts: development update, providing product and technical updates
Relationship: Both concepts involve providing updates about the software.
Criteria: Designers provide information about updates or technical changes to the Physics Lab software.
Phrase: Providing development updates

35.
Concepts: update status inquiry, inquiring about updates
Relationship: Both concepts involve inquiring about the status of updates.
Criteria: Users inquire about recent or upcoming updates.
Phrase: Inquiring about updates

36.
Concepts: listing upcoming features, providing information on planned updates
Relationship: Both concepts involve providing information about future updates.
Criteria: Designers list features included in updates or planned for future releases.
Phrase: Listing upcoming features

37.
Concepts: promote communication, fostering open communication
Relationship: Both concepts involve encouraging communication within the group.
Criteria: Designers encourage open communication and dialogue within the group.
Phrase: Fostering open communication

38.
Concepts: interaction encouragement, encouraging user feedback
Relationship: Both concepts involve encouraging user interaction and feedback.
Criteria: Designers encourage users to provide feedback and suggestions.
Phrase: Encouraging user feedback

39.
Concepts: consulting community, consulting the community
Relationship: Both concepts involve consulting the community for input or feedback.
Criteria: Designers consult the community and gather opinions or feedback before making design decisions.
Phrase: Consulting the community

40.
Concepts: inviting user feedback, seeking community feedback
Relationship: Both concepts involve inviting and seeking feedback from the community.
Criteria: Designers elicit feedback and encourage community involvement to improve the software.
Phrase: Seeking community feedback

41.
Concepts: seeking input, requesting community suggestions
Relationship: Both concepts involve requesting input or suggestions from the community.
Criteria: Designers request suggestions and ask for future help or input from the community.
Phrase: Requesting community suggestions

42.
Concepts: providing user feedback, providing feedback and suggestions
Relationship: Both concepts involve providing feedback or suggestions.
Criteria: Users provide feedback or suggestions on features and improvements for the software.
Phrase: Providing feedback and suggestions

43.
Concepts: providing suggestions, suggesting design improvements
Relationship: Both concepts involve providing suggestions for improvements.
Criteria: Users provide suggestions for design improvements or new features.
Phrase: Suggesting design improvements

44.
Concepts: inquiring about user identity and role, identifying user needs through interaction
Relationship: Both concepts involve inquiring about user identity to understand their needs.
Criteria: Designers interact with users by asking about their profession to identify their needs.
Phrase: Identifying user needs

45.
Concepts: understand user needs, inquiring about user needs, inquiring about user problems
Relationship: All concepts involve understanding or inquiring about user needs or problems.
Criteria: Designers ask about user needs and follow-up questions to understand their requirements better.
Phrase: Inquiring about user needs

46.
Concepts: accepting suggestions, acknowledging and accepting suggestions
Relationship: Both concepts involve acknowledging and accepting user suggestions.
Criteria: Designers acknowledge and accept a suggestion or request for inclusion in the next update.
Phrase: Accepting suggestions

47.
Concepts: feature request response, acknowledging and planning updates
Relationship: Both concepts involve responding to feature requests with updates or plans.
Criteria: Designers acknowledge user feedback and discuss plans to implement suggested features.
Phrase: Responding to feature requests

48.
Concepts: acknowledging user feedback, integrating user feedback
Relationship: Both concepts involve acknowledging and incorporating user feedback.
Criteria: Designers acknowledge and incorporate user feedback into the design process.
Phrase: Integrating user feedback

49.
Concepts: responding to user feedback, address feedback process
Relationship: Both concepts involve responding to user feedback.
Criteria: Designers respond to user queries, feedback, or suggestions.
Phrase: Responding to user feedback

50.
Concepts: usability, usability discussion
Relationship: Both concepts involve discussing usability features.
Criteria: Designers discuss aspects of usability or user interface design.
Phrase: Discussing usability

51.
Concepts: address usability concern, addressing and mitigating user concerns
Relationship: Both concepts involve addressing user concerns.
Criteria: Designers address concerns related to the usability of the software.
Phrase: Addressing usability concerns

52.
Concepts: future planning and development, sharing future development goals and plans
Relationship: Both concepts involve discussing future planning and development.
Criteria: Participants discuss and share information about future development goals and plans.
Phrase: Sharing future development plans

53.
Concepts: feature development, engaging in design and feature discussions
Relationship: Both concepts involve discussing the development of new features.
Criteria: Participants discuss the design and development of specific features.
Phrase: Engaging in feature discussions

54.
Concepts: updating on feature development and expansion, previewing and discussing future feature implementation
Relationship: Both concepts involve discussing and previewing future feature development.
Criteria: Designers share a preview and discuss the implementation of features in future updates.
Phrase: Previewing future feature implementation

55.
Concepts: explaining task complexity and delays, discussing feature complexity and development difficulty
Relationship: Both concepts involve discussing the complexity and time required for development.
Criteria: Designers explain the complexity of a task and the need for more time to complete it.
Phrase: Discussing development complexity

56.
Concepts: user support, providing technical support
Relationship: Both concepts involve providing technical support to users.
Criteria: Designers provide technical support or guidance to users.
Phrase: Providing technical support

57.
Concepts: engaging with the community
Relationship: Both concepts involve active participation and engagement with the community.
Criteria: Community members actively participate in discussions and provide feedback.
Phrase: Engaging with the community

58.
Concepts: expressing gratitude
Relationship: Both concepts involve expressing gratitude or appreciation.
Criteria: Users or designers express gratitude or acknowledge contributions.
Phrase: Expressing gratitude
---