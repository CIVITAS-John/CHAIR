You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (38 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
38. 
Concepts: {Repeat the input 38}
Relationship: {What is logical relationship between concepts in code 38, or N/A if not applicable}
Criteria: {Who did what, and how for code 38}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: user manual request, usage support need, documentation need
- Users request a user manual for the software.
- Users expressing the need for a user manual or support.
- Users express a need for documentation or user manuals for the software.

2.
Concepts: teaching, instruction and updates
- Designers provide instructions or explanations about using the software.
- Designers providing updates and instructions to help users understand and use the software effectively.

3.
Concepts: pc version, pc version inquiry
- Users ask about the PC version of the software.
- Inquiring about the use of the PC version.

4.
Concepts: ask a question, ask a question about how to use
- Users ask questions about various aspects of the software or its use.
- Users ask questions about how to use specific features or versions of the software.

5.
Concepts: usage inquiry, request usage guidance, technical support request, usage instructions inquiry
- Users inquire about how to use specific versions of the software.
- A user asks for guidance on how to use a specific version of the software.
- A user requests help or instructions on how to use a specific version of the software.
- Users seek instructions on how to use the software.

6.
Concepts: internet restrictions, internet restriction explanation
- Users discuss restrictions on internet access in educational settings.
- Users explain why internet access is restricted in their educational settings.

7.
Concepts: student engagement, sharing classroom experiences, positive student feedback
- A user shares positive feedback about student engagement with the software.
- A user shares positive classroom experiences with the software.
- Users describe positive reactions from students when using the software in class.

8.
Concepts: educational alignment, align with educational standards
- Aligning software features with educational needs.
- Aligning software features with educational standards.

9.
Concepts: compliment on 3d effect, compliment software's 3d effect
- A user compliments the 3D effect of the software.
- A participant compliments the software's 3D effect.

10.
Concepts: compliment, software compliment, praise software, positive feedback
- Users compliment the software or its features.
- Users expressing positive feedback about the software.
- Users express positive feedback or praise for the software.
- Users provide positive feedback about the software, often highlighting its strengths.

11.
Concepts: feature appreciation, appreciation of features
- Users appreciate specific features of the software.
- Users express appreciation for specific features of the platform.

12.
Concepts: software comparison, comparison to similar apps
- Comparing the software with other applications.
- Users compare the software to other similar software, highlighting differences in usability or functionality.
- A user compares the software to similar applications, highlighting its advantages.

13.
Concepts: user satisfaction, usability and practicality
- Users express satisfaction with the software's practicality and features.
- User comments on the ease of use and practicality of the software.

14.
Concepts: ease of use, address usability
- Discussions related to the ease of use and user-friendliness of the software.
- Addressing the ease of use or user-friendliness of the software.

15.
Concepts: usability, usability discussion
- Designers discuss the usability of the software and how it is designed to be user-friendly.
- Discussing the usability of the software.

16.
Concepts: context of use, usability and context of use
- Instances where users describe the specific contexts in which they use the software.
- Discussions about how the software is used in different contexts and its usability.

17.
Concepts: user experience, user experience and impact
- Instances where users share their experiences or opinions about using the software.
- Users sharing their experiences and the impact of the software on their teaching or learning.

18.
Concepts: resources sharing
- Instances where designers or users share resources, such as download links, development plans, or announcements.
- Information about where and how to access resources, files, or downloads related to Physics Lab.
- Instances where users or designers share files, images, or other resources with the community.

19.
Concepts: acknowledgment
- Users acknowledge and appreciate responses or features.
- Users acknowledging information or instructions.

20.
Concepts: technical inquiry
- Instances where users ask technical questions about the platform, indicating areas of user interest or potential issues.
- Asking technical questions about the software.

21.
Concepts: collaborative problem solving
- Moments where designers and users work together to address issues.
- Collaborative efforts between users and designers to solve issues and improve the product.
- Instances where users and designers work together to address issues or improve the software.

22.
Concepts: development prioritization
- Instances where designers discuss the prioritization of different features or sections to be developed.
- Making decisions about the order of feature development.

23.
Concepts: educational context
- Discussions or mentions of educational settings, policies, or experiences.
- Users provide context about their educational environment or institution.

24.
Concepts: iterative development
- Instances where designers discuss updates, new features, or bug fixes.
- The process of repeatedly refining and improving a product based on feedback and testing.
- The process of continuously improving the product based on feedback and testing.
- Instances where the design process is described as iterative, with ongoing optimizations and updates.
- Iterative development based on user feedback.

25.
Concepts: encourage discussion
- Encouraging users to discuss issues within the community.
- Encouraging discussion or problem-solving within the community.

26.
Concepts: designer responsiveness
- Instances where designers respond to user queries or engage with user comments, indicating active communication between designers and users.
- Instances where designers respond to user inquiries, suggestions, or feedback.
- Instances where designers respond to user feedback or suggestions.
- Instances where designers acknowledge user feedback and discuss potential solutions or updates.
- Designers responding to user feedback and addressing their concerns or suggestions.
- Instances where designers respond to user queries or feedback, showing attentiveness to user needs.

27.
Concepts: community interaction
- Instances of interaction that foster a sense of community among users and designers.
- Designers maintain interaction with the community.

28.
Concepts: user background inquiry
- A participant inquires about another participant's teaching background.
- Developers inquire about the background or role of users to better understand their needs.

29.
Concepts: role identification
- Instances where users or designers identify their roles, which can help understand the community structure and the roles within it.
- Instances where participants identify their roles or expertise, contributing to the problem-solving process.
- Identifying roles within the community, such as designers, teachers, or other users.

30.
Concepts: encourage participatory design
- Instances where the community contributes to the design and development of the Physics Lab by providing suggestions or feedback that influence the development process.
- Instances where designers seek or consider user input in the design and development process.
- Instances where users are invited to participate in the design process or provide input.
- Instances where users and designers collaboratively discuss features and usability, reflecting a user-centered design approach.
- The involvement of users in the design and development process, contributing their insights and needs.
- Encouragement by designers for users to contribute ideas, feedback, and suggestions for the development of Physics Lab.
- Active involvement of users in the design process to ensure the product meets their needs and preferences.
- The involvement of users in the design process to ensure the product meets their needs and preferences.
- Instances where users and designers collaboratively discuss or work on design improvements.

31.
Concepts: promote community engagement
- Instances where members of the community actively participate in discussions, ask questions, or provide feedback.
- Instances where users or designers engage in discussions that foster community interaction and participation.
- Active participation and interaction among community members, including both users and designers.
- Efforts made by designers to actively involve and communicate with the user community.

32.
Concepts: feature prioritization
- Prioritizing features or components for development.
- Users suggest prioritizing certain features or aspects of the software.

33.
Concepts: user feedback integration
- Instances where user feedback is acknowledged and incorporated into the design process.
- Instances where user feedback is actively sought and incorporated into the design process.

34.
Concepts: user engagement
- Instances where users actively participate in the conversation, showing interest or involvement in the community.
- Instances where users engage with designers through questions, feedback, or expressions of anticipation.
- Instances where users actively participate in the conversation, showing interest and involvement.

35.
Concepts: usage instructions
- Giving instructions on how to use specific features of the software.
- Providing instructions on how to use a feature.

36.
Concepts: informal communication
- Instances where the tone of the conversation is casual or informal, indicating the nature of the community's communication style.
- Casual and non-technical interactions among community members, including humor and personal remarks.

37.
Concepts: manage expectations
- A participant manages expectations regarding features or updates.
- Managing user expectations regarding feature requests.

38.
Concepts: user response
- Input and suggestions provided by users regarding the design and functionality of the product.
- Instances where users provide feedback or ask questions that influence the design process.
- Instances where users provide feedback or suggestions to improve the software.
- Instances where users provide suggestions or feedback on features and functionalities.
- Instances where users provide feedback or ask questions about the app's development and updates.
===
---
Definitions for each code (38 in total):
1.
Concepts: user manual request, usage support need, documentation need
Relationship: All concepts relate to users expressing a need for guidance or documentation.
Criteria: Users request or express a need for a user manual or documentation to support their use of the software.
Phrase: Requesting documentation support

2.
Concepts: teaching, instruction and updates
Relationship: Both concepts involve designers providing information to help users understand and use the software.
Criteria: Designers provide instructions and updates to help users effectively use the software.
Phrase: Providing instructional updates

3.
Concepts: pc version, pc version inquiry
Relationship: Both concepts involve users inquiring about the availability or use of the PC version of the software.
Criteria: Users inquire about the availability or use of the PC version of the software.
Phrase: Inquiring about PC version

4.
Concepts: ask a question, ask a question about how to use
Relationship: Both concepts involve users asking questions about the software.
Criteria: Users ask questions about various aspects or specific features of the software.
Phrase: Asking usage questions

5.
Concepts: usage inquiry, request usage guidance, technical support request, usage instructions inquiry
Relationship: All concepts involve users seeking guidance or support on how to use the software.
Criteria: Users inquire or request guidance and support on how to use specific versions or features of the software.
Phrase: Seeking usage guidance

6.
Concepts: internet restrictions, internet restriction explanation
Relationship: Both concepts involve discussions about internet access restrictions in educational settings.
Criteria: Users discuss or explain restrictions on internet access in their educational settings.
Phrase: Discussing internet restrictions

7.
Concepts: student engagement, sharing classroom experiences, positive student feedback
Relationship: All concepts involve users sharing positive experiences and feedback related to student engagement with the software.
Criteria: Users share positive feedback and classroom experiences regarding student engagement with the software.
Phrase: Sharing positive student engagement

8.
Concepts: educational alignment, align with educational standards
Relationship: Both concepts involve aligning the software with educational needs or standards.
Criteria: Aligning software features with educational needs and standards.
Phrase: Aligning with educational standards

9.
Concepts: compliment on 3d effect, compliment software's 3d effect
Relationship: Both concepts involve users complimenting the 3D effect of the software.
Criteria: Users compliment the 3D effect of the software.
Phrase: Complimenting 3D effect

10.
Concepts: compliment, software compliment, praise software, positive feedback
Relationship: All concepts involve users providing positive feedback or praise for the software.
Criteria: Users provide positive feedback or praise for the software and its features.
Phrase: Praising the software

11.
Concepts: feature appreciation, appreciation of features
Relationship: Both concepts involve users expressing appreciation for specific features of the software.
Criteria: Users express appreciation for specific features of the software.
Phrase: Appreciating software features

12.
Concepts: software comparison, comparison to similar apps
Relationship: Both concepts involve users comparing the software to other similar applications.
Criteria: Users compare the software to other similar applications, highlighting differences in usability or functionality.
Phrase: Comparing to similar software

13.
Concepts: user satisfaction, usability and practicality
Relationship: Both concepts involve users expressing satisfaction with the software's usability and practicality.
Criteria: Users express satisfaction with the software's practicality and ease of use.
Phrase: Expressing user satisfaction

14.
Concepts: ease of use, address usability
Relationship: Both concepts involve discussions about the software's ease of use and user-friendliness.
Criteria: Discussions related to the ease of use and user-friendliness of the software.
Phrase: Discussing ease of use

15.
Concepts: usability, usability discussion
Relationship: Both concepts involve discussions about the software's usability.
Criteria: Discussing the usability of the software.
Phrase: Discussing usability

16.
Concepts: context of use, usability and context of use
Relationship: Both concepts involve discussions about how the software is used in different contexts and its usability.
Criteria: Discussions about the specific contexts in which the software is used and its usability.
Phrase: Discussing context of use

17.
Concepts: user experience, user experience and impact
Relationship: Both concepts involve users sharing their experiences and the impact of the software.
Criteria: Users share their experiences and the impact of the software on their teaching or learning.
Phrase: Sharing user experience

18.
Concepts: resources sharing
Relationship: N/A
Criteria: Instances where designers or users share resources, such as files, links, or announcements, with the community.
Phrase: Sharing resources

19.
Concepts: acknowledgment
Relationship: N/A
Criteria: Users acknowledge and appreciate responses, information, or features.
Phrase: Acknowledging responses

20.
Concepts: technical inquiry
Relationship: N/A
Criteria: Instances where users ask technical questions about the software.
Phrase: Asking technical questions

21.
Concepts: collaborative problem solving
Relationship: N/A
Criteria: Instances where users and designers work together to address issues or improve the software.
Phrase: Collaborating to solve problems

22.
Concepts: development prioritization
Relationship: N/A
Criteria: Instances where designers discuss the prioritization of different features or sections to be developed.
Phrase: Prioritizing development

23.
Concepts: educational context
Relationship: N/A
Criteria: Discussions or mentions of educational settings, policies, or experiences.
Phrase: Discussing educational context

24.
Concepts: iterative development
Relationship: N/A
Criteria: Instances where designers discuss updates, new features, or bug fixes as part of an iterative development process.
Phrase: Discussing iterative development

25.
Concepts: encourage discussion
Relationship: N/A
Criteria: Encouraging users to discuss issues or topics within the community.
Phrase: Encouraging community discussion

26.
Concepts: designer responsiveness
Relationship: N/A
Criteria: Instances where designers respond to user queries, feedback, or suggestions, showing attentiveness to user needs.
Phrase: Responding to user feedback

27.
Concepts: community interaction
Relationship: N/A
Criteria: Instances of interaction that foster a sense of community among users and designers.
Phrase: Fostering community interaction

28.
Concepts: user background inquiry
Relationship: N/A
Criteria: Instances where participants inquire about the background or role of other users to better understand their needs.
Phrase: Inquiring about user background

29.
Concepts: role identification
Relationship: N/A
Criteria: Instances where users or designers identify their roles or expertise within the community.
Phrase: Identifying roles

30.
Concepts: encourage participatory design
Relationship: N/A
Criteria: Instances where users and designers collaboratively discuss or work on design improvements, reflecting a user-centered design approach.
Phrase: Encouraging participatory design

31.
Concepts: promote community engagement
Relationship: N/A
Criteria: Instances where members of the community actively participate in discussions, ask questions, or provide feedback.
Phrase: Promoting community engagement

32.
Concepts: feature prioritization
Relationship: N/A
Criteria: Prioritizing features or components for development based on user suggestions or needs.
Phrase: Prioritizing features

33.
Concepts: user feedback integration
Relationship: N/A
Criteria: Instances where user feedback is acknowledged and incorporated into the design process.
Phrase: Integrating user feedback

34.
Concepts: user engagement
Relationship: N/A
Criteria: Instances where users actively participate in the conversation, showing interest and involvement in the community.
Phrase: Engaging users

35.
Concepts: usage instructions
Relationship: N/A
Criteria: Providing instructions on how to use specific features of the software.
Phrase: Giving usage instructions

36.
Concepts: informal communication
Relationship: N/A
Criteria: Instances where the tone of the conversation is casual or informal, indicating the nature of the community's communication style.
Phrase: Communicating informally

37.
Concepts: manage expectations
Relationship: N/A
Criteria: Managing user expectations regarding features or updates.
Phrase: Managing expectations

38.
Concepts: user response
Relationship: N/A
Criteria: Instances where users provide feedback, suggestions, or questions that influence the design process.
Phrase: Providing user feedback
---