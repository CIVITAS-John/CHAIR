You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (27 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
27. 
Concepts: {Repeat the input 27}
Relationship: {What is logical relationship between concepts in code 27, or N/A if not applicable}
Criteria: {Who did what, and how for code 27}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: requesting guidance, inquiring about image upload through guidance
- A user requests guidance, support, or tutorials.
- Users request or provide guidance on uploading or sharing visual content.

2.
Concepts: asking for resource location, request resource access
- A user asks about the location or availability of resources.
- The designer or user asks about or provides information on how to access a resource or feature, and/or users request resources or information, including access to features or files.

3.
Concepts: expressing emotions, conveying tone through emojis
- A user expresses emotions or sentiments through language, tone, or emojis.
- A user conveys tone or emotions through emojis or casual communication.

4.
Concepts: confirming diagnosis, expressing agreement
- A user confirms or agrees with a diagnosis or situation.
- A user agrees or confirms something, and/or affirms previous statements.

5.
Concepts: showing respect for expertise, acknowledging community expertise
- A user shows respect for expertise or acknowledges the designer's expertise.
- A designer acknowledges or seeks input from users with expertise in a particular area.

6.
Concepts: explaining limitations and challenges, discussing and clarifying limitations and constraints
- Designers explain limitations and development challenges.
- Designers discuss and clarify limitations and constraints of the software.

7.
Concepts: appreciation of features, expressing enthusiasm about software features
- Users express gratitude or admiration for specific features or functionalities of the Physics Lab software.
- Users express satisfaction and enthusiasm for a particular feature of the software.

8.
Concepts: sharing user reviews, providing user perspective
- A user shares their opinions, experiences, or thoughts about the software, often providing feedback.
- Users provide their perspective or insights on the software, often based on their own experiences or needs.

9.
Concepts: sharing release updates, announcing updates and releases
- Designers share release updates and community news.
- Designers announce significant updates and new releases.

10.
Concepts: suggesting prioritization, prioritizing development tasks
- Designers suggest or prioritize tasks or features.
- Designers prioritize software development tasks.

11.
Concepts: explaining delays and timelines, communicating complexity and timeline
- Designers explain delays and development timelines.
- Designer communicates the complexity or timeline of updates.

12.
Concepts: revealing development plans, outlining future plans
- A designer reveals advanced development plans or research.
- A designer outlines plans or ideas for future design or development, and outlines development plans or timelines.

13.
Concepts: identifying technical issues, addressing technical concerns
- Designers identify or diagnose technical issues.
- A designer explains technical issues or limitations, and/or addresses compatibility issues.

14.
Concepts: asking technical questions, raising design questions
- A user or designer asks a technical question.
- A designer asks a question about design decisions or technical aspects.

15.
Concepts: illustrating functionality, explaining functionality and design
- Designers illustrate functionality and highlight capabilities.
- Designers explain functionality, design, and features.

16.
Concepts: simplifying complexities, seeking efficiency
- Designers simplify complexities and highlight ease of use.
- Designers seek efficiency or simplicity in software design or features and simplify functionality.

17.
Concepts: considering user modes, adapting to user context
- Designers consider user experience in different modes or scenarios.
- Designers adapt to user context or consider diverse user needs.

18.
Concepts: users invested in development, engaging in user-driven development
- Users show interest or investment in the development of the software.
- Users participate in development and provide advice that influences software development through feedback.

19.
Concepts: inquiring about user experiences, gathering information and feedback.
let me know if you need any further assistance!
- Designers inquire about users' experiences and investigate incorporating user feedback.
- Designers gather information or feedback from users to inform design decisions and gather opinions and feedback from users to understand their needs.

20.
Concepts: valuing user input, prioritizing user feedback and experience
- Designers value user input in the development process.
- Designers prioritize user feedback and user experience.

21.
Concepts: aligning with user feedback, concluding based on user feedback
- Aligning with user feedback or suggestions and mentioning feedback-based prompts or design decisions.
- The designer concludes or decides on a solution based on a user's response or feedback.

22.
Concepts: expressing intent to consult, seek community input
- Designer expresses intention to consult with the community, and consults the community for opinions or feedback.
- Input or feedback is solicited from the community on development plans or features, and designer values and considers community input for future development.

23.
Concepts: encouraging open dialogue, encouraging in-group discussion
- Designers encourage open dialogue and foster community growth.
- Designers consult with the group and encourage discussion.

24.
Concepts: teacher-admin interaction, initiate community interactions
- Teacher or designer initiates interaction with the online community.
- Designers or users greet the community or initiate conversation, and/or users initiate greetings or introductions to establish connections with others in the online community.

25.
Concepts: committing to collaborative design, engaging in collaborative decision making
- Designers commit to group consultation and seek collective agreement.
- Participating in collaborative decision-making or discussion.

26.
Concepts: explore solutions with users, discussing and exploring technical solutions
- Designers explore and propose compromises to find optimal solutions and seek solutions and alternative solutions to problems.
- Designers discuss and explore technical solutions to problems.

27.
Concepts: make feature requests
- Users request new features or functionalities to improve their experience with the Physics Lab.
- A user requests convenience features or makes detailed requests.
===
Here are the definitions for each code:

---
1.
Concepts: requesting guidance, inquiring about image upload through guidance
Relationship: Guidance is requested to facilitate image upload.
Criteria: A user requests guidance on how to upload or share visual content.
Phrase: Seeking guidance on image upload.

2.
Concepts: asking for resource location, request resource access
Relationship: Resource access is requested to facilitate usage.
Criteria: A user asks about the location or availability of resources or features.
Phrase: Requesting resource access.

3.
Concepts: expressing emotions, conveying tone through emojis
Relationship: Emotions are expressed through language and tone.
Criteria: A user conveys emotions or sentiments through language, tone, or emojis.
Phrase: Expressing emotions through tone.

4.
Concepts: confirming diagnosis, expressing agreement
Relationship: Agreement is expressed through confirmation.
Criteria: A user confirms or agrees with a diagnosis or situation.
Phrase: Confirming agreement.

5.
Concepts: showing respect for expertise, acknowledging community expertise
Relationship: Respect is shown through acknowledgment of expertise.
Criteria: A user shows respect for expertise or acknowledges the designer's expertise.
Phrase: Showing respect for expertise.

6.
Concepts: explaining limitations and challenges, discussing and clarifying limitations and constraints
Relationship: Limitations are explained and clarified.
Criteria: Designers explain and discuss limitations and challenges of the software.
Phrase: Explaining limitations.

7.
Concepts: appreciation of features, expressing enthusiasm about software features
Relationship: Enthusiasm is expressed through appreciation.
Criteria: Users express gratitude or admiration for specific features or functionalities.
Phrase: Expressing enthusiasm for features.

8.
Concepts: sharing user reviews, providing user perspective
Relationship: Perspective is provided through user reviews.
Criteria: A user shares their opinions, experiences, or thoughts about the software.
Phrase: Sharing user reviews.

9.
Concepts: sharing release updates, announcing updates and releases
Relationship: Updates are shared through announcements.
Criteria: Designers share release updates and community news.
Phrase: Sharing release updates.

10.
Concepts: suggesting prioritization, prioritizing development tasks
Relationship: Prioritization is suggested and implemented.
Criteria: Designers suggest or prioritize tasks or features.
Phrase: Prioritizing development tasks.

11.
Concepts: explaining delays and timelines, communicating complexity and timeline
Relationship: Delays are explained through timeline communication.
Criteria: Designers explain delays and development timelines.
Phrase: Explaining delays.

12.
Concepts: revealing development plans, outlining future plans
Relationship: Plans are revealed and outlined.
Criteria: A designer reveals advanced development plans or research.
Phrase: Revealing development plans.

13.
Concepts: identifying technical issues, addressing technical concerns
Relationship: Issues are identified and addressed.
Criteria: Designers identify or diagnose technical issues.
Phrase: Identifying technical issues.

14.
Concepts: asking technical questions, raising design questions
Relationship: Questions are asked to clarify design and technical aspects.
Criteria: A user or designer asks a technical question.
Phrase: Asking technical questions.

15.
Concepts: illustrating functionality, explaining functionality and design
Relationship: Functionality is illustrated through explanation.
Criteria: Designers illustrate functionality and highlight capabilities.
Phrase: Illustrating functionality.

16.
Concepts: simplifying complexities, seeking efficiency
Relationship: Complexities are simplified for efficiency.
Criteria: Designers simplify complexities and highlight ease of use.
Phrase: Simplifying complexities.

17.
Concepts: considering user modes, adapting to user context
Relationship: User context is considered for adaptation.
Criteria: Designers consider user experience in different modes or scenarios.
Phrase: Adapting to user context.

18.
Concepts: users invested in development, engaging in user-driven development
Relationship: Users are invested in development through engagement.
Criteria: Users show interest or investment in the development of the software.
Phrase: Engaging in user-driven development.

19.
Concepts: inquiring about user experiences, gathering information and feedback
Relationship: Feedback is gathered through inquiry.
Criteria: Designers inquire about users' experiences and gather information.
Phrase: Gathering user feedback.

20.
Concepts: valuing user input, prioritizing user feedback and experience
Relationship: User input is valued and prioritized.
Criteria: Designers value user input in the development process.
Phrase: Valuing user input.

21.
Concepts: aligning with user feedback, concluding based on user feedback
Relationship: Feedback is aligned with and influences conclusions.
Criteria: Aligning with user feedback or suggestions.
Phrase: Aligning with user feedback.

22.
Concepts: expressing intent to consult, seek community input
Relationship: Intent is expressed to seek community input.
Criteria: Designer expresses intention to consult with the community.
Phrase: Seeking community input.

23.
Concepts: encouraging open dialogue, encouraging in-group discussion
Relationship: Dialogue is encouraged for discussion.
Criteria: Designers encourage open dialogue and foster community growth.
Phrase: Encouraging open dialogue.

24.
Concepts: teacher-admin interaction, initiate community interactions
Relationship: Interactions are initiated through greetings.
Criteria: Teacher or designer initiates interaction with the online community.
Phrase: Initiating community interactions.

25.
Concepts: committing to collaborative design, engaging in collaborative decision making
Relationship: Commitment is made to collaborative decision-making.
Criteria: Designers commit to group consultation and seek collective agreement.
Phrase: Engaging in collaborative design.

26.
Concepts: explore solutions with users, discussing and exploring technical solutions
Relationship: Solutions are explored through discussion.
Criteria: Designers explore and propose compromises to find optimal solutions.
Phrase: Exploring technical solutions.

27.
Concepts: make feature requests
Relationship: Requests are made for new features.
Criteria: Users request new features or functionalities to improve their experience.
Phrase: Requesting new features.