You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: provide version details, give more information about version
- Designers provide detailed information about software versions.
- Designer provides more information about the version of the software uploaded to the group.

2.
Concepts: communicate updates, announce software updates
- Designers provide information about upcoming software updates and new features.
- Designers share information about the current status, updates, and future plans for the software.

3.
Concepts: announce new features and updates, announce new version release
- Designers announce new features, updates, or bug fixes.
- Designers announce the release of new software versions and provide details about the updates.

4.
Concepts: discuss future plans, outline future design plans
- Designers discuss plans or timelines for future updates.
- Designers discuss plans or considerations for future features or directions of the project.

5.
Concepts: respond to user feedback, respond to user queries
- Designers respond to user feedback or queries.
- Designers respond to user queries, feedback, or suggestions.

6.
Concepts: solicit user feedback, provide user feedback
- Designers seek or encourage feedback from users on features or updates.
- Users provide feedback or suggestions that influence the design process.

7.
Concepts: promise future feature, confirm future feature implementation
- Developers promise to implement a feature at a later time.
- Confirming that a feature will be available in the future.

8.
Concepts: express gratitude, appreciate designer effort
- Users and designers express gratitude and appreciation for contributions or work.
- Users express gratitude or appreciation for the designers' efforts.

9.
Concepts: request assistance, request usage guidance
- Users seek help or instructions on how to perform specific actions.
- Users ask for guidance or information on how to use the software.

10.
Concepts: comparative feedback, compare with other software
- User provides feedback by comparing the software to other software.
- Users compare the software to similar applications.

11.
Concepts: ease of use, comment on software usability
- Discussions related to the ease of use and user-friendliness of the software.
- Users comment on the ease of use and practicality of the software.

12.
Concepts: question, ask a question
- A user or designer asks a question to the community.
- User or designer asks a question regarding the use, features, or availability of the software.
===
---
Definitions for each code (12 in total):
1.
Concepts: provide version details, give more information about version
Relationship: Both involve providing detailed information about software versions.
Criteria: Designers provide detailed information about the version of the software uploaded to the group.
Phrase: Providing version details

2.
Concepts: communicate updates, announce software updates
Relationship: Both involve sharing information about software updates.
Criteria: Designers communicate updates and announce new features or the current status of the software.
Phrase: Communicating software updates

3.
Concepts: announce new features and updates, announce new version release
Relationship: Both involve making announcements about new features or version releases.
Criteria: Designers announce new software versions, features, updates, and bug fixes.
Phrase: Announcing new features and updates

4.
Concepts: discuss future plans, outline future design plans
Relationship: Both involve discussing future plans or design directions.
Criteria: Designers discuss and outline plans or considerations for future updates and features.
Phrase: Discussing future plans

5.
Concepts: respond to user feedback, respond to user queries
Relationship: Both involve responding to user inputs.
Criteria: Designers respond to user feedback, queries, or suggestions.
Phrase: Responding to user feedback and queries

6.
Concepts: solicit user feedback, provide user feedback
Relationship: Both involve the exchange of feedback between users and designers.
Criteria: Designers solicit feedback from users, and users provide feedback or suggestions.
Phrase: Exchanging feedback

7.
Concepts: promise future feature, confirm future feature implementation
Relationship: Both involve commitments regarding future features.
Criteria: Designers promise or confirm the implementation of new features in the future.
Phrase: Promising future features

8.
Concepts: express gratitude, appreciate designer effort
Relationship: Both involve expressing gratitude and appreciation.
Criteria: Users and designers express gratitude and appreciation for contributions and efforts.
Phrase: Expressing gratitude

9.
Concepts: request assistance, request usage guidance
Relationship: Both involve users seeking help or guidance.
Criteria: Users request assistance or guidance on how to use the software.
Phrase: Requesting assistance

10.
Concepts: comparative feedback, compare with other software
Relationship: Both involve comparing the software to other applications.
Criteria: Users provide comparative feedback by comparing the software to other similar applications.
Phrase: Comparing software

11.
Concepts: ease of use, comment on software usability
Relationship: Both involve discussing the usability of the software.
Criteria: Users comment on the ease of use and practicality of the software.
Phrase: Commenting on usability

12.
Concepts: question, ask a question
Relationship: Both involve asking questions.
Criteria: Users or designers ask questions regarding the use, features, or availability of the software.
Phrase: Asking questions
---