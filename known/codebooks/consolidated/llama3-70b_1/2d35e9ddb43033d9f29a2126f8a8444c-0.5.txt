You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: engaging with users, encouraging user engagement, fostering engagement
- The designer shows engagement or interest in user input.
- The designer encourages user engagement or participation.
- A designer engages with a user or encourages user participation.

2.
Concepts: encourages group participation, encouraging in-group discussion
- The designer consults with the group or seeks input from others.
- Designer encourages users to discuss or share their thoughts in the group.

3.
Concepts: consensus, designer seeks consensus
- A designer seeks consensus or agreement from users.
- A designer seeks consensus or agreement.

4.
Concepts: collaborative decision-making, engaging in collaborative decision-making, ensuring collective decision-making
- A designer engages in collaborative decision-making by considering others' opinions.
- Users engage in collaborative decision-making or provide input on design choices.
- A designer ensures collective decision-making, consulting with users or seeking feedback.

5.
Concepts: promoting collaboration, promoting collaborative development, collaboration invitation
- A designer promotes or encourages collaboration, sharing, or discussion among users.
- Emphasizing the collaborative nature of the community.
- Designers encourage or invite users to participate in the development process or provide feedback.
- A designer encourages collaboration and invites users to share their suggestions or requirements.

6.
Concepts: suggests participatory design, engages in participatory design
- A user suggests or implies a participatory design approach.
- Engaging in participatory design or suggesting new features

7.
Concepts: participatory design approach, committing to participatory design
- Designer involves users in the design process.
- Designer commits to involving users in the design process.

8.
Concepts: promising user involvement, involving users in development
- Designer promises to involve users in the development process.
- Developer promises to involve users in the decision-making process.
- The designer is actively involving users in the development process.

9.
Concepts: reassuring community, reassuring the community
- Developer reassures the community about a concern or issue.
- Designer reassures the community about upcoming features or updates.

10.
Concepts: update assurance, reassuring users about update
- The designer assures or reassures the user about an upcoming update or feature.
- Designer reassures users about the update or release process.

11.
Concepts: reassure user, confirming upcoming update
- Reassures or comforts users regarding upcoming updates or features.
- Confirming or reassuring users about upcoming updates.

12.
Concepts: reassurance, reassure users, providing reassurance
- A designer offers reassurance or comfort to a user.
- A designer reassures or comforts a user.
- Designers reassure users that a particular feature or functionality will be available or addressed.
- The designer reassures users about ease of communication or feedback.
- Designer provides reassurance or comfort.

13.
Concepts: resolving concerns, addressing user concerns
- The designer resolves a user's concern or issue.
- The designer addresses or responds to user concerns or issues.

14.
Concepts: addressing concerns, mitigating concerns
- Designer addresses or alleviates concerns.
- The designer responds to mitigate user concerns or doubts.

15.
Concepts: transparency, transparent communication
- A designer provides transparent information about the development process or timelines.
- The designer is transparent about development progress, timelines, or limitations.

16.
Concepts: promoting transparency, maintaining transparency
- A designer promotes transparency, openness, or honesty in their communication.
- The designer maintains transparency by sharing information or updates.

17.
Concepts: fostering open dialogue, fostering open communication, open communication channels, promoting open communication
- A designer encourages open dialogue and feedback.
- Designer encourages open communication and feedback from users.
- Designer opens communication channels for problem-solving, suggestions, or feedback.
- Designer promotes open communication and encourages users to share their thoughts.

18.
Concepts: open communication, encouraging open communication
- A designer encourages open and honest communication within the community.
- Designer initiates conversation by asking for honest feedback.

19.
Concepts: encouraging open feedback, encourages open feedback, open feedback encouragement
- Designers encourage users to provide open and honest feedback.
- The designer explicitly invites users to report problems directly in the group.
- The designer explicitly encourages users to report problems or issues in the online community.

20.
Concepts: problem reporting, encouraging problem reporting
- A designer encourages users to report problems or issues.
- Encouraging community members to report problems or issues.
- Designer encourages users to report problems or issues.

21.
Concepts: theoretical compatibility, mentioning theoretical compatibility requirements
- The designer expresses theoretical compatibility of the software.
- A designer expresses theoretical compatibility of the software with certain devices.
- A designer theorizes about the compatibility of the software with certain devices.
- Designer mentions theoretical compatibility requirements for the software.

22.
Concepts: compatibility theory, speculate on compatibility, theorizing system compatibility
- A designer theorizes about the compatibility of the software.
- A designer speculates or discusses the potential compatibility of the software with different platforms or systems.
- Designer theorizes or discusses the potential compatibility of the software with a system or hardware.

23.
Concepts: software compatibility, compatibility with older systems
- A designer mentions the software's compatibility with older machines.
- A designer discusses or mentions compatibility issues with older systems or devices.

24.
Concepts: considering future compatibility, considering future compatibility solutions
- Considering or planning for future compatibility or updates.
- A designer considers or discusses potential solutions for future compatibility issues.

25.
Concepts: clarifying compatibility issues, clarifying incompatibility, clarifying system compatibility
- Designer clarifies compatibility issues or limitations.
- Designers clarify that a particular system or software is not compatible with the platform.
- Designer clarifies system compatibility or limitations.

26.
Concepts: identifying compatible systems, considering system compatibility, informing about system compatibility
- Identifying compatible systems or software
- Considering or discussing the compatibility of software with different systems or versions.
- Designer considers or discusses compatibility with a specific system or hardware.
- The designer considers system compatibility for older systems or devices.
- Informing about the compatibility of the software with different systems or devices.
- Providing information about system compatibility or technical requirements.

27.
Concepts: system compatibility concern, expressing system compatibility concerns
- User expresses concern about system compatibility
- User expresses concern about system compatibility.

28.
Concepts: platform availability, highlighting platform availability
- A designer provides information about the software's availability on a specific platform.
- A designer mentions the availability of the software on multiple platforms.

29.
Concepts: platform question, inquiring about platform availability, inquiring about platform compatibility
- Asks about the availability or access to a specific platform or version.
- A user inquires about the availability of a platform or version.
- Inquiring about platform compatibility or availability.
- User inquires about platform compatibility, asking if the software works on a specific device or system.

30.
Concepts: cross-platform interest, expressing interest in cross-platform access
- A user expresses interest in cross-platform functionality or compatibility.
- Expressing interest in cross-platform access or compatibility.

31.
Concepts: explaining limitations, providing context for limitation, design constraint context
- A user explains limitations or constraints they face.
- Designers explain the limitations or constraints of a particular feature or functionality.
- A designer explains the current limitations or constraints of the software.
- A user provides context or explanation for a limitation or issue.
- A user provides context or explains design constraints or limitations.

32.
Concepts: technical constraints, highlighting practical constraints, highlighting technical challenges
- A user highlights technical limitations or constraints.
- User highlights practical constraints or limitations.
- A user highlights practical constraints or challenges in using the software.
- User highlights technical challenges or limitations.
===
Here are the definitions for each code:

---
1.
Concepts: engaging with users, encouraging user engagement, fostering engagement
Relationship: The designer's actions (engaging, encouraging, fostering) lead to user engagement.
Criteria: A designer engages with users, encouraging their participation and fostering engagement.
Phrase: Engaging with users to foster engagement.

2.
Concepts: encourages group participation, encouraging in-group discussion
Relationship: The designer's encouragement leads to group participation and discussion.
Criteria: A designer encourages group participation, promoting in-group discussion.
Phrase: Encouraging group participation and discussion.

3.
Concepts: consensus, designer seeks consensus
Relationship: The designer seeks agreement or consensus from users.
Criteria: A designer seeks consensus or agreement from users.
Phrase: Seeking consensus from users.

4.
Concepts: collaborative decision-making, engaging in collaborative decision-making, ensuring collective decision-making
Relationship: The designer engages in collaborative decision-making, ensuring collective input.
Criteria: A designer engages in collaborative decision-making, ensuring collective input from users.
Phrase: Engaging in collaborative decision-making.

5.
Concepts: promoting collaboration, promoting collaborative development, collaboration invitation
Relationship: The designer promotes collaboration, inviting user participation.
Criteria: A designer promotes collaboration, inviting user participation in development.
Phrase: Promoting collaboration and inviting participation.

6.
Concepts: suggests participatory design, engages in participatory design
Relationship: The user suggests or the designer engages in participatory design.
Criteria: A user suggests or a designer engages in participatory design.
Phrase: Suggesting or engaging in participatory design.

7.
Concepts: participatory design approach, committing to participatory design
Relationship: The designer commits to involving users in the design process.
Criteria: A designer commits to involving users in the design process.
Phrase: Committing to participatory design.

8.
Concepts: promising user involvement, involving users in development
Relationship: The designer promises or involves users in the development process.
Criteria: A designer promises or involves users in the development process.
Phrase: Promising or involving users in development.

9.
Concepts: reassuring community, reassuring the community
Relationship: The designer reassures the community about concerns or issues.
Criteria: A designer reassures the community about concerns or issues.
Phrase: Reassuring the community.

10.
Concepts: update assurance, reassuring users about update
Relationship: The designer assures or reassures users about updates.
Criteria: A designer assures or reassures users about updates.
Phrase: Assuring or reassuring users about updates.

11.
Concepts: reassure user, confirming upcoming update
Relationship: The designer reassures or confirms updates to users.
Criteria: A designer reassures or confirms updates to users.
Phrase: Reassuring or confirming updates.

12.
Concepts: reassurance, reassure users, providing reassurance
Relationship: The designer offers comfort or reassurance to users.
Criteria: A designer offers comfort or reassurance to users.
Phrase: Providing reassurance.

13.
Concepts: resolving concerns, addressing user concerns
Relationship: The designer resolves or addresses user concerns.
Criteria: A designer resolves or addresses user concerns.
Phrase: Resolving or addressing concerns.

14.
Concepts: addressing concerns, mitigating concerns
Relationship: The designer addresses or alleviates user concerns.
Criteria: A designer addresses or alleviates user concerns.
Phrase: Addressing or alleviating concerns.

15.
Concepts: transparency, transparent communication
Relationship: The designer provides transparent information about development.
Criteria: A designer provides transparent information about development.
Phrase: Providing transparent communication.

16.
Concepts: promoting transparency, maintaining transparency
Relationship: The designer promotes or maintains transparency in communication.
Criteria: A designer promotes or maintains transparency in communication.
Phrase: Promoting or maintaining transparency.

17.
Concepts: fostering open dialogue, fostering open communication, open communication channels, promoting open communication
Relationship: The designer encourages open communication and feedback.
Criteria: A designer encourages open communication and feedback.
Phrase: Fostering open communication.

18.
Concepts: open communication, encouraging open communication
Relationship: The designer encourages open and honest communication.
Criteria: A designer encourages open and honest communication.
Phrase: Encouraging open communication.

19.
Concepts: encouraging open feedback, encourages open feedback, open feedback encouragement
Relationship: The designer encourages users to provide open and honest feedback.
Criteria: A designer encourages users to provide open and honest feedback.
Phrase: Encouraging open feedback.

20.
Concepts: problem reporting, encouraging problem reporting
Relationship: The designer encourages users to report problems or issues.
Criteria: A designer encourages users to report problems or issues.
Phrase: Encouraging problem reporting.

21.
Concepts: theoretical compatibility, mentioning theoretical compatibility requirements
Relationship: The designer expresses theoretical compatibility of the software.
Criteria: A designer expresses theoretical compatibility of the software.
Phrase: Expressing theoretical compatibility.

22.
Concepts: compatibility theory, speculate on compatibility, theorizing system compatibility
Relationship: The designer theorizes about software compatibility.
Criteria: A designer theorizes about software compatibility.
Phrase: Theorizing about compatibility.

23.
Concepts: software compatibility, compatibility with older systems
Relationship: The designer discusses software compatibility with older systems.
Criteria: A designer discusses software compatibility with older systems.
Phrase: Discussing software compatibility.

24.
Concepts: considering future compatibility, considering future compatibility solutions
Relationship: The designer plans for future compatibility or updates.
Criteria: A designer plans for future compatibility or updates.
Phrase: Considering future compatibility.

25.
Concepts: clarifying compatibility issues, clarifying incompatibility, clarifying system compatibility
Relationship: The designer clarifies compatibility issues or limitations.
Criteria: A designer clarifies compatibility issues or limitations.
Phrase: Clarifying compatibility.

26.
Concepts: identifying compatible systems, considering system compatibility, informing about system compatibility
Relationship: The designer identifies or discusses compatible systems.
Criteria: A designer identifies or discusses compatible systems.
Phrase: Identifying or discussing compatible systems.

27.
Concepts: system compatibility concern, expressing system compatibility concerns
Relationship: The user expresses concern about system compatibility.
Criteria: A user expresses concern about system compatibility.
Phrase: Expressing concern about compatibility.

28.
Concepts: platform availability, highlighting platform availability
Relationship: The designer provides information about platform availability.
Criteria: A designer provides information about platform availability.
Phrase: Highlighting platform availability.

29.
Concepts: platform question, inquiring about platform availability, inquiring about platform compatibility
Relationship: The user inquires about platform availability or compatibility.
Criteria: A user inquires about platform availability or compatibility.
Phrase: Inquiring about platform availability or compatibility.

30.
Concepts: cross-platform interest, expressing interest in cross-platform access
Relationship: The user expresses interest in cross-platform functionality.
Criteria: A user expresses interest in cross-platform functionality.
Phrase: Expressing interest in cross-platform functionality.

31.
Concepts: explaining limitations, providing context for limitation, design constraint context
Relationship: The designer or user explains limitations or constraints.
Criteria: A designer or user explains limitations or constraints.
Phrase: Explaining limitations or constraints.

32.
Concepts: technical constraints, highlighting practical constraints, highlighting technical challenges
Relationship: The user highlights technical limitations or challenges.
Criteria: A user highlights technical limitations or challenges.
Phrase: Highlighting technical constraints or challenges.