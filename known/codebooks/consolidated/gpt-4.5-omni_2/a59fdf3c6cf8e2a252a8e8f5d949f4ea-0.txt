You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (9 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
9. 
Concepts: {Repeat the input 9}
Relationship: {What is logical relationship between concepts in code 9, or N/A if not applicable}
Criteria: {Who did what, and how for code 9}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: updating on visual and release progress, highlighting progress and ongoing updates
- Designers share visual updates and communicate release progress.
- Designers highlight progress and promise that updates are ongoing.

2.
Concepts: group communication, providing progress updates
- Communicating within the group about updates.
- Participants provide updates and communicate about the progress and future plans.

3.
Concepts: subject focus, explaining limitations
- A designer explains the focus and limitations of the platform.
- Designers explain platform and software limitations.

4.
Concepts: direct users to resources, software updates and downloads
- A designer directs users to resources or download locations.
- A designer informs users about software updates and where to download them.

5.
Concepts: discussing software compatibility, discussing platform compatibility
- Designers discuss and speculate on software compatibility.
- Participants inquire about and discuss the compatibility of the software with different systems.

6.
Concepts: expressing enthusiasm and compliments, expressing appreciation and recognizing efforts
- Users or designers express enthusiasm or compliments for the software or team.
- Users and designers express appreciation and recognize each other's efforts.

7.
Concepts: complimenting 3d effects, praising software effectiveness
- Users compliment the software's 3D effects.
- Users comment on the effectiveness and praise features of the software.

8.
Concepts: acknowledge help, expressing gratitude in interactions
- A user expresses gratitude for assistance.
- Users interact with others and express gratitude, often to conclude the interaction.

9.
Concepts: collaborative learning, cultivating community discussion
- Designers promote collaborative learning within the community.
- Designers engage with the community and encourage discussions and problem-solving.
===
---
Definitions for each code (9 in total):
1.
Concepts: updating on visual and release progress, highlighting progress and ongoing updates
Relationship: Both concepts involve designers communicating progress and updates.
Criteria: Designers share visual updates and communicate release progress, highlighting ongoing progress and updates.
Phrase: Communicating progress updates

2.
Concepts: group communication, providing progress updates
Relationship: Both concepts involve participants communicating updates within the group.
Criteria: Participants communicate within the group about updates, providing progress updates and future plans.
Phrase: Sharing group updates

3.
Concepts: subject focus, explaining limitations
Relationship: Both concepts involve designers explaining aspects of the platform.
Criteria: Designers explain the focus and limitations of the platform and software.
Phrase: Explaining platform limitations

4.
Concepts: direct users to resources, software updates and downloads
Relationship: Both concepts involve designers providing information about resources and updates.
Criteria: Designers direct users to resources or download locations and inform them about software updates.
Phrase: Providing resource information

5.
Concepts: discussing software compatibility, discussing platform compatibility
Relationship: Both concepts involve discussions about compatibility.
Criteria: Participants discuss and inquire about the compatibility of the software with different systems.
Phrase: Discussing compatibility

6.
Concepts: expressing enthusiasm and compliments, expressing appreciation and recognizing efforts
Relationship: Both concepts involve expressing positive sentiments.
Criteria: Users and designers express enthusiasm, compliments, appreciation, and recognize each other's efforts.
Phrase: Expressing positive sentiments

7.
Concepts: complimenting 3d effects, praising software effectiveness
Relationship: Both concepts involve users praising aspects of the software.
Criteria: Users compliment the software's 3D effects and praise its effectiveness and features.
Phrase: Praising software features

8.
Concepts: acknowledge help, expressing gratitude in interactions
Relationship: Both concepts involve expressing gratitude.
Criteria: Users express gratitude for assistance and in interactions, often to conclude them.
Phrase: Expressing gratitude

9.
Concepts: collaborative learning, cultivating community discussion
Relationship: Both concepts involve promoting community engagement and learning.
Criteria: Designers promote collaborative learning and engage with the community to encourage discussions and problem-solving.
Phrase: Promoting community engagement
---