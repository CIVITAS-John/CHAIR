You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (38 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
38. 
Concepts: {Repeat the input 38}
Relationship: {What is logical relationship between concepts in code 38, or N/A if not applicable}
Criteria: {Who did what, and how for code 38}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: engaging users in design, offering co-designing opportunities
- Designers involve users by soliciting their feedback and encouraging their participation in the design process.
- Designers offer opportunities for users to participate in the design process.

2.
Concepts: align features with user needs, consider usability and feature needs
- Designers align features with user needs and feedback.
- Designers consider usability and feature needs.

3.
Concepts: prioritize user feedback, gathering user feedback
- Designers prioritize user feedback in their development plans.
- Designers seek user input or gather opinions before starting new tasks or projects.

4.
Concepts: user mention, addressing specific users
- Designers mention or tag specific users in their responses.
- Designers address or mention specific users by name.

5.
Concepts: elaborating on responses, prompt detailed feedback and future engagement, mention feedback-based prompts
- Designers elaborate on topics or responses, setting expectations for task completion.
- Designers encourage users to elaborate and engage in future discussions or questions.
- Designers mention feedback-based prompts or instructions.

6.
Concepts: explaining intentions, explaining design rationale
- Designers explain the intentions behind design decisions or questions.
- Designers provide rationale or explain principles guiding the design and development.

7.
Concepts: confirming collaboration, demonstrate designer engagement
- Designers confirm statements, plans, or agreements to collaborate.
- Designers show engagement by sharing interests or confirming statements.

8.
Concepts: introduce feature functionality, introduce new features and components, explain feature functionality with examples
- Designers address and introduce feature and component functionality.
- Designers explain and introduce new features and components.
- Designers provide examples and explanations of feature functionality.

9.
Concepts: answer about access, provide access and download information
- A designer or user provides or seeks information on how to access or download resources.
- Designers provide access information and download guidance.

10.
Concepts: offer ongoing support, provide user and technical support
- Designers offer assistance and ongoing support, encouraging users to report any issues.
- Designers offer user and technical support.

11.
Concepts: explain team and feature limitations, discuss platform and version limitations
- Designers explain team and feature limitations.
- Designers explain platform and current version limitations.

12.
Concepts: ensure system compatibility, discuss technical constraints and requirements
- Designers discuss and assure system compatibility.
- Designers discuss technical constraints and requirements.

13.
Concepts: explain and compare complexities, discuss feature complexity and difficulty
- Designers explain and compare feature complexities.
- Designers discuss feature complexity and development difficulty.

14.
Concepts: long-term planning, discuss feature stability
- Designers discuss long-term planning and stability for software features.
- A designer discusses the stability and long-term stability of a feature once implemented.

15.
Concepts: import/export functionality, discussing local export needs
- Users discuss the need for import/export functionality.
- Designers or community members discuss the necessity of local export functionality.

16.
Concepts: collaborative planning, discuss user interface and layout decisions
- Designers and users collaboratively discussing and planning the development of the software.
- Designers and users discuss user interface and layout decisions.

17.
Concepts: discuss manual adjustments, discuss feature and component adjustments
- Designers suggest and discuss manual adjustments.
- Designers discuss feature and component adjustments.

18.
Concepts: communicate development progress, provide progress and status updates
- Designers communicate progress and ongoing work.
- Designers provide progress updates and status information.

19.
Concepts: detail updates and version notes, describe update scope and content
- Designers provide detailed notes on specific updates.
- Designers describe the scope and introduce the content of updates.

20.
Concepts: set development scope, define development goals and priorities
- A designer sets the boundaries or focus areas for development.
- Designers outline development goals and priorities.

21.
Concepts: highlight progress, reassure users about progress
- A designer highlights the progress or size of an update.
- Designers reassure users about feature progress.

22.
Concepts: explain update delays, communicate update timelines
- Designers explain delays in updates or feature releases.
- Designers provide and communicate update timelines.

23.
Concepts: sharing identity, confirming professional identity
- Users share or confirm their identity or background.
- Users or designers confirm their role or professional background.

24.
Concepts: share resources and plans, share design knowledge and information
- Designers share resources and development plans.
- Designers and users share knowledge and information for design.

25.
Concepts: responding to inquiries, providing community responses
- Community members respond to inquiries, ask follow-up questions, or inquire about updates.
- Community members provide answers or solutions to questions posed by others.

26.
Concepts: appreciating community support, expressing support and gratitude
- Designers express gratitude and acknowledge the support from the community.
- Community members express acknowledgment, support, gratitude, and encouragement.

27.
Concepts: announcing future consultation, promising future consultation
- Designers indicate plans to seek help or consult the community in the future.
- Designers promise to invite feedback or consult the user group in future development phases.

28.
Concepts: expressing emotions, using non-verbal communication
- A user or designer uses expressive language or emojis to convey emotions.
- Users express themselves using emojis or other non-verbal symbols.

29.
Concepts: restate request, providing additional information
- A user restates a request for clarity.
- Users provide additional information or clarification about a previous conversation.

30.
Concepts: practical application, discussing classroom application
- Instances where the practical application of the software in educational settings is discussed.
- Users discuss or illustrate the application and success of the software in classroom settings.

31.
Concepts: seeking guidance, requesting technical support
- Users seek guidance or instructions on how to use the application.
- Users ask for help or instructions to understand or use the platform, indicating areas of interest or potential issues.

32.
Concepts: diagnosing problems, engage in troubleshooting
- Designers diagnose or analyze technical problems to understand their cause or solution.
- Designers or users engage in troubleshooting to resolve issues.

33.
Concepts: highlight technical constraints, acknowledge limitations, address technical issues and limitations
- A user highlights technical constraints.
- A community member acknowledges limitations or constraints of the software or system.
- Users mention technical issues and system limitations.

34.
Concepts: praising software practicality, appreciating software features
- Users express praise or satisfaction with the software's practicality and features.
- Users express appreciation for specific features of the software and suggest improvements.

35.
Concepts: expressing enthusiasm, acknowledging craftsmanship
- Users or designers express enthusiasm or appreciation for the software's visual design.
- Users acknowledge and appreciate the craftsmanship and quality of the software.

36.
Concepts: share past experiences, sharing user experiences, shared experiences and support
- Designers reflect on and share their past experiences using the software.
- Users share past incidents, experiences, or anecdotes related to the software.
- Users and designers sharing experiences and supporting each other in using and improving the software.

37.
Concepts: proposing new features, requesting additional features
- Users suggest adding new features or improvements to the platform.
- Users request specific features or functionalities to be added to the software.

38.
Concepts: appreciating app development, respond to developer's information
- Users express appreciation for the app's development plans or progress.
- Users respond positively to information about feature development.
===
---
Definitions for each code (38 in total):
1.
Concepts: engaging users in design, offering co-designing opportunities
Relationship: Both concepts involve user participation in the design process.
Criteria: Designers involve users by soliciting their feedback and encouraging their participation in the design process.
Phrase: Engaging users in co-design

2.
Concepts: align features with user needs, consider usability and feature needs
Relationship: Both concepts focus on aligning design features with user requirements.
Criteria: Designers align features with user needs and feedback while considering usability and feature requirements.
Phrase: Aligning features with user needs

3.
Concepts: prioritize user feedback, gathering user feedback
Relationship: Both concepts involve the collection and prioritization of user feedback.
Criteria: Designers prioritize and gather user feedback in their development plans.
Phrase: Prioritizing and gathering user feedback

4.
Concepts: user mention, addressing specific users
Relationship: Both concepts involve directly addressing specific users.
Criteria: Designers mention or tag specific users in their responses.
Phrase: Addressing specific users

5.
Concepts: elaborating on responses, prompt detailed feedback and future engagement, mention feedback-based prompts
Relationship: All concepts involve encouraging detailed user feedback and engagement.
Criteria: Designers elaborate on topics or responses, encourage users to provide detailed feedback, and mention feedback-based prompts.
Phrase: Encouraging detailed feedback and engagement

6.
Concepts: explaining intentions, explaining design rationale
Relationship: Both concepts involve providing explanations for design decisions.
Criteria: Designers explain the intentions and rationale behind design decisions.
Phrase: Explaining design rationale

7.
Concepts: confirming collaboration, demonstrate designer engagement
Relationship: Both concepts involve confirming and demonstrating engagement in collaborative efforts.
Criteria: Designers confirm collaboration plans and demonstrate engagement by sharing interests.
Phrase: Confirming and demonstrating collaboration

8.
Concepts: introduce feature functionality, introduce new features and components, explain feature functionality with examples
Relationship: All concepts involve introducing and explaining new features and their functionality.
Criteria: Designers introduce new features and components, explaining their functionality with examples.
Phrase: Introducing and explaining new features

9.
Concepts: answer about access, provide access and download information
Relationship: Both concepts involve providing information about accessing resources.
Criteria: Designers provide information on how to access or download resources.
Phrase: Providing access and download information

10.
Concepts: offer ongoing support, provide user and technical support
Relationship: Both concepts involve offering support to users.
Criteria: Designers offer ongoing user and technical support.
Phrase: Offering ongoing support

11.
Concepts: explain team and feature limitations, discuss platform and version limitations
Relationship: Both concepts involve explaining limitations related to the team, features, platform, or version.
Criteria: Designers explain team, feature, platform, and version limitations.
Phrase: Explaining limitations

12.
Concepts: ensure system compatibility, discuss technical constraints and requirements
Relationship: Both concepts involve discussing technical constraints and ensuring system compatibility.
Criteria: Designers discuss technical constraints, requirements, and ensure system compatibility.
Phrase: Discussing technical constraints and compatibility

13.
Concepts: explain and compare complexities, discuss feature complexity and difficulty
Relationship: Both concepts involve discussing and comparing feature complexities.
Criteria: Designers explain and compare feature complexities and development difficulties.
Phrase: Discussing feature complexities

14.
Concepts: long-term planning, discuss feature stability
Relationship: Both concepts involve discussing long-term planning and feature stability.
Criteria: Designers discuss long-term planning and stability for software features.
Phrase: Discussing long-term planning and stability

15.
Concepts: import/export functionality, discussing local export needs
Relationship: Both concepts involve discussing import/export functionality.
Criteria: Users and designers discuss the need for import/export functionality.
Phrase: Discussing import/export functionality

16.
Concepts: collaborative planning, discuss user interface and layout decisions
Relationship: Both concepts involve collaborative planning and discussing user interface decisions.
Criteria: Designers and users collaboratively discuss and plan user interface and layout decisions.
Phrase: Collaborative planning of UI and layout

17.
Concepts: discuss manual adjustments, discuss feature and component adjustments
Relationship: Both concepts involve discussing adjustments to features and components.
Criteria: Designers discuss manual adjustments and feature/component adjustments.
Phrase: Discussing feature adjustments

18.
Concepts: communicate development progress, provide progress and status updates
Relationship: Both concepts involve communicating progress and status updates.
Criteria: Designers communicate development progress and provide status updates.
Phrase: Communicating development progress

19.
Concepts: detail updates and version notes, describe update scope and content
Relationship: Both concepts involve providing detailed information about updates.
Criteria: Designers provide detailed notes and describe the scope and content of updates.
Phrase: Detailing updates and version notes

20.
Concepts: set development scope, define development goals and priorities
Relationship: Both concepts involve defining the scope and priorities of development.
Criteria: Designers set the development scope and define goals and priorities.
Phrase: Defining development scope and priorities

21.
Concepts: highlight progress, reassure users about progress
Relationship: Both concepts involve highlighting and reassuring users about progress.
Criteria: Designers highlight progress and reassure users about feature development.
Phrase: Highlighting and reassuring progress

22.
Concepts: explain update delays, communicate update timelines
Relationship: Both concepts involve communicating information about update timelines and delays.
Criteria: Designers explain delays and communicate update timelines.
Phrase: Communicating update timelines and delays

23.
Concepts: sharing identity, confirming professional identity
Relationship: Both concepts involve sharing and confirming identity or professional background.
Criteria: Users or designers share and confirm their identity or professional background.
Phrase: Confirming identity

24.
Concepts: share resources and plans, share design knowledge and information
Relationship: Both concepts involve sharing resources, plans, and design knowledge.
Criteria: Designers and users share resources, development plans, and design knowledge.
Phrase: Sharing resources and design knowledge

25.
Concepts: responding to inquiries, providing community responses
Relationship: Both concepts involve responding to community inquiries.
Criteria: Community members respond to inquiries and provide answers or solutions.
Phrase: Responding to community inquiries

26.
Concepts: appreciating community support, expressing support and gratitude
Relationship: Both concepts involve expressing support and gratitude.
Criteria: Designers and community members express support and gratitude.
Phrase: Expressing support and gratitude

27.
Concepts: announcing future consultation, promising future consultation
Relationship: Both concepts involve indicating plans for future consultation.
Criteria: Designers announce and promise to consult the community in future development phases.
Phrase: Announcing future consultation

28.
Concepts: expressing emotions, using non-verbal communication
Relationship: Both concepts involve conveying emotions through expressive language or non-verbal symbols.
Criteria: Users or designers use expressive language or emojis to convey emotions.
Phrase: Expressing emotions

29.
Concepts: restate request, providing additional information
Relationship: Both concepts involve clarifying or providing additional information.
Criteria: Users restate requests and provide additional information for clarity.
Phrase: Clarifying requests

30.
Concepts: practical application, discussing classroom application
Relationship: Both concepts involve discussing the practical application of the software.
Criteria: Users discuss the practical application of the software in educational settings.
Phrase: Discussing practical application

31.
Concepts: seeking guidance, requesting technical support
Relationship: Both concepts involve seeking guidance or technical support.
Criteria: Users seek guidance and request technical support for using the application.
Phrase: Seeking guidance and support

32.
Concepts: diagnosing problems, engage in troubleshooting
Relationship: Both concepts involve diagnosing and troubleshooting problems.
Criteria: Designers diagnose problems and engage in troubleshooting to resolve issues.
Phrase: Diagnosing and troubleshooting problems

33.
Concepts: highlight technical constraints, acknowledge limitations, address technical issues and limitations
Relationship: All concepts involve addressing technical constraints and limitations.
Criteria: Users and designers highlight and acknowledge technical constraints and limitations.
Phrase: Addressing technical constraints and limitations

34.
Concepts: praising software practicality, appreciating software features
Relationship: Both concepts involve expressing appreciation for the software's features.
Criteria: Users praise the practicality and features of the software.
Phrase: Praising software features

35.
Concepts: expressing enthusiasm, acknowledging craftsmanship
Relationship: Both concepts involve expressing enthusiasm and appreciation for the software's design quality.
Criteria: Users and designers express enthusiasm and acknowledge the craftsmanship of the software.
Phrase: Expressing enthusiasm and appreciation

36.
Concepts: share past experiences, sharing user experiences, shared experiences and support
Relationship: All concepts involve sharing past experiences and support.
Criteria: Users and designers share past experiences and support each other in using the software.
Phrase: Sharing experiences and support

37.
Concepts: proposing new features, requesting additional features
Relationship: Both concepts involve suggesting or requesting new features.
Criteria: Users propose and request additional features for the software.
Phrase: Proposing new features

38.
Concepts: appreciating app development, respond to developer's information
Relationship: Both concepts involve responding positively to app development information.
Criteria: Users express appreciation and respond positively to information about app development.
Phrase: Appreciating app development
---