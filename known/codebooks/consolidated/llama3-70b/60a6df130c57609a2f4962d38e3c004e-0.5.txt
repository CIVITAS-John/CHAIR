You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. If a sub-code includes another, use the broader one. If sub-codes are parallel, write one that covers both.
Write clear and generalizable labels and criteria for each code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization (e.g. "social interaction" instead of "interaction", "communication approach" instead of "communication").
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (21 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {Consolidated criteria of code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
21.
Relationship: {The logical relationship between sub-codes in code 21}
Criteria: {Consolidated criteria of code 21}
Label: {A consolidated label of code 21}
Category: {2-4 words for code 21}
---
~~~
1. community role, role identification and professional identity.
- Identifications or references to the roles individuals play within the community, whether explicitly stated or implied.
- Instances where community members identify or clarify their roles within the community

2. design decision, decision making and collaborative decision-making.
- Decision-making process, agreement on design decisions, specific design decisions
- How design decisions are made through collective input and agreement

3. usability evaluation, software usability and evaluation.
- Assessing real-world uses and ease of software functionality
- Comments about software ease of use, practicality, or user-friendliness

4. software compatibility, system requirements and compatibility.
- Conversations about software versions and compatibility with systems
- Discussions about system requirements and software compatibility
- Noting problems with software compatibility or hardware requirements

5. technical user support, technical assistance and support.
- Offering support and seeking technical assistance
- Instances where users or designers provide technical assistance or troubleshooting advice

6. assessment functionality, simulated experiment assessment function.
- Describing plans to add assessment or evaluation functionality for simulated experiments within the software.
- Discussion related to the planned addition of a simulated experiment assessment function.

7. development priorities & roadmap, development plan and development strategy.
- Mentioning priorities, discussing development roadmaps/plans
- Instances of discussing or referencing the development plan or roadmap

8. troubleshooting.
- Discussion of problems or issues with the software
- Dialogue involving troubleshooting or solving issues related to software use

9. user guidance.
- Requests or inquiries about software usage or documentation
- Instances where users seek or provide guidance on using the software

10. prioritization.
- Prioritization of tasks or features
- Instances where the Designer prioritizes tasks or features

11. design iteration.
- Iterating or refining designs, research or investigation into design principles
- Quotes that demonstrate the designer's commitment to an iterative design process

12. user appreciation.
- Acknowledging feedback, user experience
- Expressions of gratitude or appreciation towards the designers or the software

13. information exchange.
- Instances of providing or seeking additional information or explanation
- Moments where users or designers provide information or updates about the software and its features

14. feature planning.
- Instances where the Designer discusses plans for new features or updates
- Describing plans for specific features

15. resource sharing.
- Instances where community members seek or offer assistance about resources
- Sharing materials, supportive use of resources

16. teaching experience.
- Participants sharing their teaching backgrounds and experiences.
- Sharing personal experiences, describing prior teaching experience

17. technical challenges.
- Discussion of technical limitations or obstacles in using Physics Lab.
- Issues and obstacles in technology use, constraints in technology

18. collaborative problem-solving.
- The process of working together to identify and address issues within the community.
- Collaborative development, problem-solving

19. user-centered design.
- The design approach that focuses on the needs and preferences of the users
- User feedback, design involvement

20. apology.
- Participants or designers apologize for potential disruptions or issues.
- Expression of apology or regret

21. feature development.
- Mentions of new features, bug fixes, or improvements to the Physics Lab platform
- Discussions or suggestions for adding or improving features
===
Here is the output in the requested format:

---
Categories: 
* Community Building
* Design and Development
* User Experience
* Social Interaction
* Learning and Teaching
* Technical Issues
* Collaborative Work
* Design Approach

Definitions for each code:

1.
Relationship: Inclusive
Criteria: References to community members' roles, identities, or positions
Label: Community Role Identification
Category: Community Building

2.
Relationship: Parallel
Criteria: Decision-making processes, collaborative input, and agreement on design decisions
Label: Collaborative Decision-Making
Category: Design and Development

3.
Relationship: Inclusive
Criteria: Assessing software usability, ease of use, and practicality
Label: Software Usability Evaluation
Category: User Experience

4.
Relationship: Inclusive
Criteria: Discussions about software versions, system requirements, and compatibility issues
Label: Software Compatibility Issues
Category: Technical Issues

5.
Relationship: Parallel
Criteria: Offering technical support, seeking assistance, and troubleshooting
Label: Technical User Support
Category: User Experience

6.
Relationship: Inclusive
Criteria: Plans to add assessment functionality for simulated experiments
Label: Assessment Functionality Planning
Category: Design and Development

7.
Relationship: Inclusive
Criteria: Discussing development priorities, roadmaps, and plans
Label: Development Prioritization
Category: Design and Development

8.
Relationship: Inclusive
Criteria: Discussing problems or issues with the software
Label: Troubleshooting
Category: Technical Issues

9.
Relationship: Parallel
Criteria: Requests or inquiries about software usage or documentation
Label: User Guidance
Category: User Experience

10.
Relationship: Inclusive
Criteria: Prioritizing tasks or features
Label: Prioritization
Category: Design and Development

11.
Relationship: Inclusive
Criteria: Iterating or refining designs, researching design principles
Label: Design Iteration
Category: Design and Development

12.
Relationship: Parallel
Criteria: Expressions of gratitude or appreciation towards designers or software
Label: User Appreciation
Category: Social Interaction

13.
Relationship: Inclusive
Criteria: Providing or seeking additional information or explanation
Label: Information Exchange
Category: Social Interaction

14.
Relationship: Inclusive
Criteria: Discussing plans for new features or updates
Label: Feature Planning
Category: Design and Development

15.
Relationship: Inclusive
Criteria: Sharing resources, seeking or offering assistance
Label: Resource Sharing
Category: Social Interaction

16.
Relationship: Inclusive
Criteria: Sharing teaching backgrounds and experiences
Label: Teaching Experience
Category: Learning and Teaching

17.
Relationship: Inclusive
Criteria: Discussing technical limitations or obstacles
Label: Technical Challenges
Category: Technical Issues

18.
Relationship: Inclusive
Criteria: Collaborative problem-solving and issue addressing
Label: Collaborative Problem-Solving
Category: Collaborative Work

19.
Relationship: Inclusive
Criteria: Focus on user needs and preferences in design
Label: User-Centered Design
Category: Design Approach

20.
Relationship: Inclusive
Criteria: Expressions of apology or regret
Label: Apology
Category: Social Interaction

21.
Relationship: Inclusive
Criteria: Mentions of new features, bug fixes, or improvements
Label: Feature Development
Category: Design and Development