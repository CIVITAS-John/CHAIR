You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (45 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
45. 
Concepts: {Repeat the input 45}
Relationship: {What is logical relationship between concepts in code 45, or N/A if not applicable}
Criteria: {Who did what, and how for code 45}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: engage in follow-up dialogue, give further information about the conversation
- Participants engage in discussions that clarify or add to previous conversations.
- Providing additional context or clarification in the conversation.

2.
Concepts: share past incidents, share personal anecdotes
- Users share past incidents that shape their current practices or perceptions.
- Users share stories that reflect community experiences and challenges.

3.
Concepts: acknowledge self-help, confirm information retrieval
- A user expresses gratitude for accessing group files, indicating self-sufficiency.
- The user expresses gratitude for accessing group files.

4.
Concepts: agree with focus areas, agree with suggestions
- A user agrees with identified focus areas in the discussion.
- Users express agreement or approval of ideas shared within the community.

5.
Concepts: confirm understanding, confirm and acknowledge points
- Users and designers confirm their understanding of previous statements and provide context.
- The designer and users affirm points made in previous discussions.

6.
Concepts: explain technical constraints, share context about school resources
- Users describe the limitations of their school's technology and systems.
- Users share context regarding the limitations and conditions of their school environments.

7.
Concepts: sharing identity per request, share professional background information
- A user shares their professional background in response to a request.
- Users share their professional background to establish credibility and context within the community.

8.
Concepts: expert recognition, acknowledgment
- User acknowledges the expertise of others and requests specific features.
- Users acknowledge contributions from experts while making requests for specific features or demonstrations.

9.
Concepts: express concern for updates, inquire about software updates
- Users express concern about the status of software updates and anticipate future improvements.
- Users inquire about recent updates to the software and the status of specific updates.

10.
Concepts: update on review status, share app release info
- Designer updates the community on the status of app reviews.
- Designers share visual updates and information about the status of app releases to keep users informed.

11.
Concepts: introduce new features, provide feature previews
- Designers introduce new features and explain their content and intended use in updates.
- The designer provides visual content or information about upcoming features or updates.

12.
Concepts: explain design philosophy, explain design rationale and intentions
- Designers explain principles guiding their design choices and future plans.
- Designer explains the rationale and intentions behind the app's design choices.

13.
Concepts: discuss input methods, soft keyboard consideration
- Designers discuss the necessity and implications of specific input methods for the software.
- Designers consider the implications of user input methods, particularly regarding accessibility and usability for inputting data.

14.
Concepts: discuss future plans, discuss future planning
- Designers discuss potential future developments and share information about goals based on user needs.
- Designers discuss plans for future development and express interests that may align with community needs.

15.
Concepts: seek visual confirmation, share visual references
- Designer seeks confirmation through visual representation.
- The designer shares visual references or images to clarify points in discussions.

16.
Concepts: discuss solution limitations, discuss usability challenges and technical considerations
- The designer discusses limitations faced by the team in addressing user requests and potential solutions.
- The designer discusses usability challenges and technical considerations necessary for software enhancement.

17.
Concepts: address usability concerns, acknowledge user experience
- Designers emphasize and address usability concerns to create an intuitive user experience.
- The designer acknowledges users' experiences and the challenges faced by designers in a technical context.

18.
Concepts: feature adjustment, design adaptation
- Designer discusses the need for adjustments to existing features.
- Designers identify the need for adjustments to accommodate specific user requirements or functionalities.

19.
Concepts: simplification and refinement in design, seek efficiency through feature simplification
- Designers discuss the importance of simplifying and refining design features for better user experience.
- The designer expresses a desire for simplification to enhance efficiency in the software design.

20.
Concepts: promise future realization, suggest future possibilities
- Designer expresses certainty about future features and hopes for a timely release.
- The designer mentions possibilities for future software developments and expresses aspirations for progress.

21.
Concepts: indicate future updates, consider future compatibility
- Designers indicate that future updates will occur after resolving current issues and acknowledge potential areas for improvement.
- The designer notes considerations for future compatibility and lists potential areas for further work.

22.
Concepts: ask user inquiries, ask technical questions, new user interaction
- Users ask questions to clarify information or seek help regarding the software.
- Users ask questions related to software features or updates for clarification.
- Users engage with the community by asking questions about software usage or features.

23.
Concepts: seek clarification, ask for resources
- Participants seek clarification on specific aspects of the software.
- Users inquire about resources related to the software for better understanding.

24.
Concepts: seek technical support, inquire about download process
- Users seek assistance with downloading or accessing the software.
- Users ask about the process to download the software.

25.
Concepts: platform question, question access and platform clarification
- Users inquire about the platform's functionalities or updates, seeking specific information.
- Users ask questions regarding access to specific versions and their availability.

26.
Concepts: specifics, inquire about platform compatibility
- Specific inquiries or statements made by users regarding system compatibility.
- Users inquire about the PC version and compatibility of the software.

27.
Concepts: confirm compatibility, compatibility assurance, answer about compatibility
- Designers confirm that specific versions are compatible with operating systems.
- Assurance given by the developer regarding the compatibility of the application with user hardware.
- Designers provide clear answers about software compatibility with different systems, adding specific criteria.

28.
Concepts: acknowledge limitations, provide technical information
- The designer acknowledges potential software compatibility issues and explains limitations based on user systems.
- Designer provides technical specifications and explains limitations regarding software functionality.

29.
Concepts: acknowledge need for feature, align features with user feedback and needs
- The designer acknowledges the necessity for a feature based on user feedback.
- The designer aligns their actions and features with user feedback and needs.

30.
Concepts: seek user input, promise future consultation
- The designer indicates a willingness to seek user input and mentions that feedback will guide future software developments.
- The developer promises to seek user feedback before implementing new features in future updates.

31.
Concepts: promise to improve, provide reassurance
- The designer expresses gratitude for user support and promises improvements based on user feedback.
- Designers reassure users about the status of pending features and express gratitude for their support.

32.
Concepts: request software features, request additional experiments
- Users request new features or improvements for the Physics Lab tool.
- Users suggest and request the inclusion of additional experiments or features in the software.

33.
Concepts: open to alternatives, suggest alternative solutions
- Openness to alternative approaches or solutions based on user feedback.
- Users suggest alternative methods for using the software and provide development advice.

34.
Concepts: suggest practical use case, justify feature suggestions
- User suggests practical functionalities that could enhance usability.
- Users recommend adding specific functions and provide justification for those requests.

35.
Concepts: image sharing, shared experiences and support
- Designer and user share images related to the software.
- Users and designers sharing experiences and supporting each other in using and improving the software.

36.
Concepts: share community resources, share development plans and resources
- Designer and users share resources relevant to the community to support members.
- Designer shares the development plan and relevant resources with the group.

37.
Concepts: mention, address a specific user
- Designers mention specific users in conversations, indicating direct engagement and addressing individual contributions.
- The designer directly addresses a specific individual in conversations, indicating personalized interaction.

38.
Concepts: share personal interest, express interest in subject expansion
- The designer shares personal interests that relate to their engagement with the community and the subject matter.
- The designer expresses openness to expanding the subject matter and shares personal interests related to this expansion.

39.
Concepts: user role inquiry, inquire about user background
- Designer inquires about the user's role to tailor assistance.
- The designer inquires about users' educational and professional backgrounds to better understand their needs.

40.
Concepts: invite more questions, ask follow-up questions
- The designer encourages users to ask additional questions and to elaborate on their needs or concerns.
- Designers ask follow-up questions to clarify user issues and explain the purpose of these inquiries for better understanding.

41.
Concepts: facilitate query and response, share information for design
- Users ask questions and receive responses from designers or community members regarding design support.
- Users share experiences, and designers respond with relevant solutions or information for design considerations.

42.
Concepts: offer a solution, offers a diagnose for the problem
- The designer offers solutions to user concerns regarding software usage and usability.
- Designers provide diagnoses or explanations for specific problems users are experiencing with the software.

43.
Concepts: seek technical assistance, provide technical clarification
- The designer seeks assistance regarding user interface issues or technical problems encountered.
- Designer clarifies technical aspects related to the software's user interface and provides responses to inquiries.

44.
Concepts: offer help, deliver user support
- Designers offer assistance to users facing challenges, demonstrating a commitment to community support.
- Designers offer user support and technical assistance to help users effectively utilize the product.

45.
Concepts: user guidance, instruction and updates
- Designer provides detailed guidance on new features and updates to the software.
- Designers providing updates and instructions to help users understand and use the software effectively.
===
---
Definitions for each code (45 in total):
1.
Concepts: engage in follow-up dialogue, give further information about the conversation
Relationship: Participants build on previous discussions to enhance understanding and context.
Criteria: Participants engage in discussions that clarify or add to previous conversations by providing additional context or clarification.
Phrase: Engage in follow-up dialogue.

2.
Concepts: share past incidents, share personal anecdotes
Relationship: Users reflect on their experiences to establish common ground and context within the community.
Criteria: Users share past incidents and stories that shape their current practices or perceptions, reflecting community experiences and challenges.
Phrase: Share personal anecdotes.

3.
Concepts: acknowledge self-help, confirm information retrieval
Relationship: Users express self-sufficiency and gratitude for available resources.
Criteria: A user expresses gratitude for accessing group files, indicating self-sufficiency and confirming information retrieval.
Phrase: Confirm information retrieval.

4.
Concepts: agree with focus areas, agree with suggestions
Relationship: Users build consensus around specific topics and ideas for discussion.
Criteria: A user agrees with identified focus areas in the discussion and expresses approval of ideas shared within the community.
Phrase: Agree with suggestions.

5.
Concepts: confirm understanding, confirm and acknowledge points
Relationship: Users and designers establish mutual understanding of discussions.
Criteria: Users and designers confirm their understanding of previous statements and affirm points made in earlier discussions.
Phrase: Confirm and acknowledge points.

6.
Concepts: explain technical constraints, share context about school resources
Relationship: Users provide context to help others understand limitations affecting their experiences.
Criteria: Users describe the limitations of their school's technology and share context regarding the conditions of their school environments.
Phrase: Explain technical constraints.

7.
Concepts: sharing identity per request, share professional background information
Relationship: Users establish credibility and context by sharing relevant personal information.
Criteria: A user shares their professional background in response to a request to establish credibility within the community.
Phrase: Share professional background information.

8.
Concepts: expert recognition, acknowledgment
Relationship: Users validate the contributions of knowledgeable members in the community.
Criteria: Users acknowledge the expertise of others while requesting specific features or demonstrations.
Phrase: Acknowledge expertise.

9.
Concepts: express concern for updates, inquire about software updates
Relationship: Users actively seek information regarding the status of improvements.
Criteria: Users express concern about the status of software updates and inquire about recent updates to the software.
Phrase: Inquire about software updates.

10.
Concepts: update on review status, share app release info
Relationship: Designers keep the community informed about development progress.
Criteria: Designers update the community on the status of app reviews and share information about app releases.
Phrase: Share app release info.

11.
Concepts: introduce new features, provide feature previews
Relationship: Designers communicate upcoming changes to keep users engaged and informed.
Criteria: Designers introduce new features and provide visual content or information about upcoming updates.
Phrase: Introduce new features.

12.
Concepts: explain design philosophy, explain design rationale and intentions
Relationship: Designers articulate their guiding principles to clarify their decisions.
Criteria: Designers explain the principles guiding their design choices and the rationale behind those choices.
Phrase: Explain design philosophy.

13.
Concepts: discuss input methods, soft keyboard consideration
Relationship: Designers analyze user interaction methods to enhance accessibility.
Criteria: Designers discuss the necessity and implications of specific input methods, particularly regarding accessibility and usability.
Phrase: Discuss input methods.

14.
Concepts: discuss future plans, discuss future planning
Relationship: Designers align their development goals with user needs and community feedback.
Criteria: Designers discuss potential future developments and share information about goals based on user needs.
Phrase: Discuss future plans.

15.
Concepts: seek visual confirmation, share visual references
Relationship: Visual aids are used to enhance understanding and communication.
Criteria: Designers seek confirmation through visual representation and share visual references to clarify points.
Phrase: Share visual references.

16.
Concepts: discuss solution limitations, discuss usability challenges and technical considerations
Relationship: Designers address challenges to improve user experience and software functionality.
Criteria: Designers discuss limitations faced in addressing user requests and the necessary technical considerations for enhancements.
Phrase: Discuss usability challenges.

17.
Concepts: address usability concerns, acknowledge user experience
Relationship: Designers prioritize user experience in their development process.
Criteria: Designers emphasize and address usability concerns while acknowledging users' experiences and challenges.
Phrase: Address usability concerns.

18.
Concepts: feature adjustment, design adaptation
Relationship: Designers respond to user needs by modifying existing features.
Criteria: Designers discuss the need for adjustments to existing features to accommodate specific user requirements.
Phrase: Adjust features.

19.
Concepts: simplification and refinement in design, seek efficiency through feature simplification
Relationship: Designers focus on enhancing user experience through streamlined features.
Criteria: Designers discuss the importance of simplifying and refining design features for better user experience.
Phrase: Simplify design features.

20.
Concepts: promise future realization, suggest future possibilities
Relationship: Designers express optimism about future developments based on community feedback.
Criteria: Designers express certainty about future features and mention possibilities for software developments.
Phrase: Suggest future possibilities.

21.
Concepts: indicate future updates, consider future compatibility
Relationship: Designers plan for ongoing improvements and compatibility considerations.
Criteria: Designers indicate that future updates will occur and acknowledge potential areas for improvement.
Phrase: Indicate future updates.

22.
Concepts: ask user inquiries, ask technical questions, new user interaction
Relationship: Users actively engage with the community to seek information and support.
Criteria: Users ask questions to clarify information or seek help regarding the software and features.
Phrase: Ask user inquiries.

23.
Concepts: seek clarification, ask for resources
Relationship: Users strive for better understanding by requesting additional information.
Criteria: Participants seek clarification on specific aspects of the software and inquire about related resources.
Phrase: Seek clarification.

24.
Concepts: seek technical support, inquire about download process
Relationship: Users require assistance to access the software effectively.
Criteria: Users seek assistance with downloading or accessing the software and inquire about the download process.
Phrase: Seek technical support.

25.
Concepts: platform question, question access and platform clarification
Relationship: Users seek specific information to navigate the software effectively.
Criteria: Users inquire about the platform's functionalities or updates and ask questions regarding access to specific versions.
Phrase: Question platform access.

26.
Concepts: specifics, inquire about platform compatibility
Relationship: Users seek detailed information to ensure their systems can support the software.
Criteria: Users make specific inquiries regarding system compatibility and the PC version of the software.
Phrase: Inquire about compatibility.

27.
Concepts: confirm compatibility, compatibility assurance, answer about compatibility
Relationship: Designers provide clarity on software compatibility to users.
Criteria: Designers confirm that specific versions are compatible with operating systems and provide clear answers about compatibility.
Phrase: Confirm compatibility.

28.
Concepts: acknowledge limitations, provide technical information
Relationship: Designers communicate constraints to manage user expectations.
Criteria: Designers acknowledge potential software compatibility issues and explain limitations regarding functionality.
Phrase: Acknowledge limitations.

29.
Concepts: acknowledge need for feature, align features with user feedback and needs
Relationship: Designers respond to user feedback to enhance the software.
Criteria: Designers acknowledge the necessity for a feature based on user feedback and align their actions with those needs.
Phrase: Acknowledge need for feature.

30.
Concepts: seek user input, promise future consultation
Relationship: Designers value user feedback in shaping future developments.
Criteria: Designers indicate a willingness to seek user input and promise to consult users before implementing new features.
Phrase: Seek user input.

31.
Concepts: promise to improve, provide reassurance
Relationship: Designers build trust with users through commitment to enhancements.
Criteria: Designers express gratitude for user support and promise improvements based on feedback.
Phrase: Provide reassurance.

32.
Concepts: request software features, request additional experiments
Relationship: Users actively contribute to the development process by suggesting enhancements.
Criteria: Users request new features or improvements for the Physics Lab tool and suggest additional experiments.
Phrase: Request software features.

33.
Concepts: open to alternatives, suggest alternative solutions
Relationship: Users and designers explore various approaches to improve the software.
Criteria: Users suggest alternative methods for using the software and provide development advice.
Phrase: Suggest alternative solutions.

34.
Concepts: suggest practical use case, justify feature suggestions
Relationship: Users advocate for enhancements based on practical needs.
Criteria: Users suggest practical functionalities that could enhance usability and provide justification for those requests.
Phrase: Justify feature suggestions.

35.
Concepts: image sharing, shared experiences and support
Relationship: Users and designers foster a supportive environment through shared resources.
Criteria: Users and designers share images related to the software and support each other in using and improving it.
Phrase: Share experiences.

36.
Concepts: share community resources, share development plans and resources
Relationship: Designers and users collaborate by sharing relevant information and resources.
Criteria: Designers and users share resources relevant to the community and development plans to support members.
Phrase: Share community resources.

37.
Concepts: mention, address a specific user
Relationship: Designers create personalized engagement by addressing community members directly.
Criteria: Designers mention specific users in conversations, indicating direct engagement and personalized interaction.
Phrase: Address a specific user.

38.
Concepts: share personal interest, express interest in subject expansion
Relationship: Designers connect their interests with the community's goals for enrichment.
Criteria: Designers share personal interests related to their engagement with the community and express openness to subject expansion.
Phrase: Share personal interest.

39.
Concepts: user role inquiry, inquire about user background
Relationship: Designers tailor their assistance based on user profiles.
Criteria: Designers inquire about the user's role and educational background to better understand their needs.
Phrase: Inquire about user background.

40.
Concepts: invite more questions, ask follow-up questions
Relationship: Designers encourage ongoing dialogue to clarify user needs.
Criteria: Designers encourage users to ask additional questions and ask follow-up questions for better understanding.
Phrase: Invite more questions.

41.
Concepts: facilitate query and response, share information for design
Relationship: Users and designers collaborate to address inquiries and share insights.
Criteria: Users ask questions and receive responses from designers regarding design support and solutions.
Phrase: Facilitate query and response.

42.
Concepts: offer a solution, offers a diagnose for the problem
Relationship: Designers actively address user concerns and provide solutions.
Criteria: Designers offer solutions to user concerns and provide diagnoses for specific problems users are experiencing.
Phrase: Offer a solution.

43.
Concepts: seek technical assistance, provide technical clarification
Relationship: Designers clarify technical aspects to assist users effectively.
Criteria: Designers seek assistance regarding user interface issues and clarify technical aspects related to the software.
Phrase: Provide technical clarification.

44.
Concepts: offer help, deliver user support
Relationship: Designers demonstrate commitment to community by providing assistance.
Criteria: Designers offer assistance to users facing challenges and deliver user support to help them utilize the product.
Phrase: Offer help.

45.
Concepts: user guidance, instruction and updates
Relationship: Designers provide necessary information to enhance user understanding and software utilization.
Criteria: Designers provide detailed guidance on new features and updates to help users understand and use the software effectively.
Phrase: Provide user guidance.
---