You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: promise of update, answer about progress
- A designer assures users that an update is in progress or being worked on.
- The designer provides an update on the progress of a task or project.

2.
Concepts: share feature previews, announce software developments
- Designers share visual updates or previews of new features with the community.
- Designers share information about software releases and upcoming features.

3.
Concepts: provide a release schedule, version release management
- A designer provides a schedule or timeline for upcoming updates or releases.
- A designer discusses the management or planning of version releases, including updates and deployments.

4.
Concepts: announcement, announcement of plans
- An announcement is made about a significant event or update.
- Announcements or notifications about plans, schedules, or timelines for future updates or developments.

5.
Concepts: user communication, communicate progress
- Communicating with users about updates, releases, or development progress.
- Updates or notifications about the progress of software development, testing, or release.

6.
Concepts: inform about updates, sharing info on app release
- Information about updates, releases, or changes is shared.
- Information is shared about the release or update of the software on a specific platform.

7.
Concepts: software update process, software updates and downloads
- The designer mentions the process of updating software or a specific update.
- Discussing software updates, downloads, or installation processes.

8.
Concepts: explain version type, version clarification
- The designer explains the type or version of a feature or component.
- A designer or developer clarifies the version of a software or application.

9.
Concepts: update scope, update magnitude sharing
- The designer describes the scope or extent of an update or change.
- A designer or developer shares the magnitude or scope of an update.

10.
Concepts: provides technical clarification, gives a more detailed and specific answer
- The designer provides technical explanations or clarifications on specific features or issues.
- A designer provides a detailed or specific answer to a question or request.

11.
Concepts: visual confirmation, confirming understanding
- The designer seeks visual confirmation or clarification.
- The designer or user confirms understanding or clarifies a point.

12.
Concepts: follow-up question, following up on discussions
- A designer or user asks a question to clarify or gather more information.
- A designer or user follows up on a previous discussion or issue.

13.
Concepts: responding to questions, answering for design support, query and response
- A user or designer responds directly to a question.
- A user provides design support or answers a design-related question.
- Instances where users ask questions and receive answers from designers or other community members.

14.
Concepts: inquire about user background, show interest in user context
- Designers inquire about a user's background or profession.
- Designers show interest in users' context, such as their profession or teaching level.

15.
Concepts: express comprehension, understanding designers' situation
- Designers express comprehension or understanding of users' needs or requests.
- User understands or acknowledges the designer's situation or constraints.

16.
Concepts: identify user needs, interact with users
- Designers attempt to identify or understand the needs of the user.
- Designers seek input or clarification from users to better understand their needs.

17.
Concepts: sharing current efforts, sharing development progress
- Designers share their current efforts, projects, or research.
- Sharing information about current feature development or research.

18.
Concepts: open communication, foster open dialogue
- A designer encourages open communication, feedback, or suggestions.
- Designers encourage open and honest communication, without formalities or politeness.

19.
Concepts: feature adjustment, adapts design plan
- Designer adjusts or refines a feature based on feedback.
- A designer adapts or adjusts their design plan based on user feedback.

20.
Concepts: acknowledge community expertise, acknowledging community needs
- Designer acknowledges or seeks input from the community or experts.
- A designer acknowledges or responds to the needs or concerns of the community.

21.
Concepts: soliciting suggestions, seek community input
- Designers request suggestions or feedback from the community.
- Designers seek input or opinions from users before making decisions or implementing features.

22.
Concepts: feature complexity, explain complexity
- Designers discuss the complexity or challenges of implementing specific features.
- A designer explains the complexity of a task or feature, often providing a timeline for its completion.

23.
Concepts: refines design, suggests simplification
- Refining or simplifying design elements or features.
- A designer or developer suggests simplifying a feature or process.

24.
Concepts: feature optimization, communicate ongoing optimization
- A designer or developer discusses optimizing or refining a feature or component.
- Ongoing optimization or refinement of a feature is communicated.

25.
Concepts: feature stability, long-term stability
- The designer discusses or prioritizes feature stability or reliability.
- The designer mentions the importance of long-term stability or reliability.

26.
Concepts: design principles, explain design philosophy
- A designer discusses the underlying principles or philosophy behind the software's design.
- The underlying principles and approaches guiding the design and development of the product.

27.
Concepts: explain plans, explains design goals
- Designer explains or outlines their plans or strategies.
- The designer explains the goals or philosophy behind a design decision.

28.
Concepts: explaining the need, describe feature importance
- A designer explains the need or purpose behind a feature or development.
- A designer explains the importance of a particular feature.

29.
Concepts: elaboration, provides an illustrative example
- Designer provides additional details or explanations about a feature or concept.
- The designer provides an example to illustrate a concept or feature.

30.
Concepts: design thoughts, design question
- Thoughts or ideas are shared about the design of the software or a specific feature.
- A designer or developer asks a question about the design or functionality of the software.

31.
Concepts: usability, describe usability features, instructional design
- Designer discusses the usability of the app.
- The designer describes or explains usability features or design decisions.
- A designer or developer discusses the instructional design or user experience of the software.

32.
Concepts: design decision, interface layout decisions
- The designer makes or discusses a design decision or choice.
- Decisions or discussions are made about the interface layout or design.
===
Here are the definitions for each code:

---
1.
Concepts: promise of update, answer about progress
Relationship: The promise of an update implies providing an answer about the progress.
Criteria: Designers assure users about updates and provide progress information.
Phrase: Assuring users about updates.

2.
Concepts: share feature previews, announce software developments
Relationship: Sharing feature previews is a way to announce software developments.
Criteria: Designers share previews and announce software developments with the community.
Phrase: Sharing feature previews.

3.
Concepts: provide a release schedule, version release management
Relationship: Providing a release schedule is part of version release management.
Criteria: Designers provide schedules and manage version releases.
Phrase: Providing release schedules.

4.
Concepts: announcement, announcement of plans
Relationship: An announcement is a way to announce plans.
Criteria: Announcements are made about significant events or updates.
Phrase: Making announcements.

5.
Concepts: user communication, communicate progress
Relationship: User communication involves communicating progress.
Criteria: Designers communicate with users about updates and progress.
Phrase: Communicating with users.

6.
Concepts: inform about updates, sharing info on app release
Relationship: Informing about updates involves sharing information on app releases.
Criteria: Information is shared about updates and app releases.
Phrase: Informing about updates.

7.
Concepts: software update process, software updates and downloads
Relationship: The software update process involves updates and downloads.
Criteria: Designers discuss software updates and downloads.
Phrase: Discussing software updates.

8.
Concepts: explain version type, version clarification
Relationship: Explaining version type involves clarifying versions.
Criteria: Designers explain and clarify software versions.
Phrase: Explaining software versions.

9.
Concepts: update scope, update magnitude sharing
Relationship: Update scope involves sharing the magnitude of updates.
Criteria: Designers describe and share the scope of updates.
Phrase: Sharing update scope.

10.
Concepts: provides technical clarification, gives a more detailed and specific answer
Relationship: Providing technical clarification involves giving detailed answers.
Criteria: Designers provide technical explanations and detailed answers.
Phrase: Providing technical clarification.

11.
Concepts: visual confirmation, confirming understanding
Relationship: Visual confirmation involves confirming understanding.
Criteria: Designers seek visual confirmation and confirm understanding.
Phrase: Seeking visual confirmation.

12.
Concepts: follow-up question, following up on discussions
Relationship: Follow-up questions involve following up on discussions.
Criteria: Designers and users ask follow-up questions and follow up on discussions.
Phrase: Following up on discussions.

13.
Concepts: responding to questions, answering for design support, query and response
Relationship: Responding to questions involves answering and providing design support.
Criteria: Designers and users respond to questions and provide design support.
Phrase: Responding to questions.

14.
Concepts: inquire about user background, show interest in user context
Relationship: Inquiring about user background involves showing interest in user context.
Criteria: Designers inquire about user background and show interest in user context.
Phrase: Inquiring about user background.

15.
Concepts: express comprehension, understanding designers' situation
Relationship: Expressing comprehension involves understanding designers' situations.
Criteria: Designers express comprehension and understand users' needs.
Phrase: Expressing comprehension.

16.
Concepts: identify user needs, interact with users
Relationship: Identifying user needs involves interacting with users.
Criteria: Designers identify user needs and interact with users.
Phrase: Identifying user needs.

17.
Concepts: sharing current efforts, sharing development progress
Relationship: Sharing current efforts involves sharing development progress.
Criteria: Designers share their current efforts and development progress.
Phrase: Sharing current efforts.

18.
Concepts: open communication, foster open dialogue
Relationship: Open communication involves fostering open dialogue.
Criteria: Designers encourage open communication and foster open dialogue.
Phrase: Fostering open dialogue.

19.
Concepts: feature adjustment, adapts design plan
Relationship: Feature adjustment involves adapting design plans.
Criteria: Designers adjust features and adapt design plans.
Phrase: Adjusting features.

20.
Concepts: acknowledge community expertise, acknowledging community needs
Relationship: Acknowledging community expertise involves acknowledging community needs.
Criteria: Designers acknowledge community expertise and respond to community needs.
Phrase: Acknowledging community expertise.

21.
Concepts: soliciting suggestions, seek community input
Relationship: Soliciting suggestions involves seeking community input.
Criteria: Designers solicit suggestions and seek community input.
Phrase: Soliciting suggestions.

22.
Concepts: feature complexity, explain complexity
Relationship: Feature complexity involves explaining complexity.
Criteria: Designers discuss feature complexity and explain timelines.
Phrase: Explaining feature complexity.

23.
Concepts: refines design, suggests simplification
Relationship: Refining design involves suggesting simplification.
Criteria: Designers refine design elements and suggest simplification.
Phrase: Refining design.

24.
Concepts: feature optimization, communicate ongoing optimization
Relationship: Feature optimization involves communicating ongoing optimization.
Criteria: Designers discuss optimization and communicate ongoing optimization.
Phrase: Communicating optimization.

25.
Concepts: feature stability, long-term stability
Relationship: Feature stability involves prioritizing long-term stability.
Criteria: Designers prioritize feature stability and long-term reliability.
Phrase: Prioritizing stability.

26.
Concepts: design principles, explain design philosophy
Relationship: Design principles involve explaining design philosophy.
Criteria: Designers discuss design principles and explain their philosophy.
Phrase: Explaining design principles.

27.
Concepts: explain plans, explains design goals
Relationship: Explaining plans involves explaining design goals.
Criteria: Designers explain plans and design goals.
Phrase: Explaining plans.

28.
Concepts: explaining the need, describe feature importance
Relationship: Explaining the need involves describing feature importance.
Criteria: Designers explain the need and describe feature importance.
Phrase: Explaining the need.

29.
Concepts: elaboration, provides an illustrative example
Relationship: Elaboration involves providing illustrative examples.
Criteria: Designers provide elaboration and illustrative examples.
Phrase: Providing elaboration.

30.
Concepts: design thoughts, design question
Relationship: Design thoughts involve asking design questions.
Criteria: Designers share design thoughts and ask design questions.
Phrase: Sharing design thoughts.

31.
Concepts: usability, describe usability features, instructional design
Relationship: Usability involves describing usability features and instructional design.
Criteria: Designers discuss usability and describe usability features.
Phrase: Discussing usability.

32.
Concepts: design decision, interface layout decisions
Relationship: Design decisions involve making interface layout decisions.
Criteria: Designers make design decisions and discuss interface layout.
Phrase: Making design decisions.