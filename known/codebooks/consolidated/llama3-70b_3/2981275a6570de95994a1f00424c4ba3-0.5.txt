You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: building relationships, building rapport with users
- A designer builds relationships with users by asking about their profession.
- Designer or user engages in friendly, rapport-building conversation.

2.
Concepts: reacting to updates, expressing feature enthusiasm
- User reacts to updates or new features with enthusiasm.
- Users express enthusiasm and support for advanced features.

3.
Concepts: acknowledging progress, complimenting platform progress
- A user acknowledges or comments on the progress of the project.
- Users compliment the app's progress and express satisfaction.

4.
Concepts: expressing gratitude and commitment, expressing positivity and gratitude
- Designers express gratitude and commitment.
- Designers express positivity and gratitude for community support.

5.
Concepts: appreciating design, appreciating craftsmanship
- Users appreciate design and express admiration.
- Users acknowledge attention to detail and appreciate craftsmanship.

6.
Concepts: appreciating efforts and user support, appreciating valued input and feedback
- Users appreciate efforts and acknowledge user support.
- Users suggest their input is valued and appreciate feedback or suggestions.

7.
Concepts: sharing software review, sharing user experiences
- A user shares their review or opinion about the software.
- Users share their experiences or feedback about existing systems or software, sharing a past experience or workaround for a specific issue.

8.
Concepts: encouraging open feedback, encouraging sharing and feedback
- Designers encourage users to provide open and honest feedback.
- Designers or users encourage sharing or invite feedback.

9.
Concepts: providing user perspective and suggestions, suggesting workflow and feature improvements
- Users provide their perspective, additional suggestions, and feedback with justifications.
- Users suggest workflow improvements, align with best practices, and recommend feature improvements.

10.
Concepts: requesting new features or improvements, proposing new features and experiment types
- Users request or express a need for new features or software improvements.
- Users propose new features and request specific experiment types.

11.
Concepts: highlighting features
- Mentioning or highlighting a specific feature or functionality, such as group sharing.
- Designer highlights or lists features or functionalities of the software.

12.
Concepts: manage user expectations
- Designers set and manage user expectations about software features, updates, or timelines.
- Sets or manages expectations for timelines or deadlines.
===
Here are the definitions for each code:

---
1.
Concepts: building relationships, building rapport with users
Relationship: The concepts are related as building relationships is a broader concept that involves building rapport with users.
Criteria: Designers engage with users in friendly conversations to establish connections.
Phrase: Establishing user connections.

2.
Concepts: reacting to updates, expressing feature enthusiasm
Relationship: The concepts are related as reacting to updates often involves expressing enthusiasm for new features.
Criteria: Users respond positively to new features or updates.
Phrase: Expressing feature enthusiasm.

3.
Concepts: acknowledging progress, complimenting platform progress
Relationship: The concepts are related as acknowledging progress often involves complimenting the platform's progress.
Criteria: Users recognize and appreciate the project's advancements.
Phrase: Acknowledging progress.

4.
Concepts: expressing gratitude and commitment, expressing positivity and gratitude
Relationship: The concepts are related as expressing gratitude and commitment involves expressing positivity and gratitude.
Criteria: Designers convey appreciation for community support.
Phrase: Expressing gratitude.

5.
Concepts: appreciating design, appreciating craftsmanship
Relationship: The concepts are related as appreciating design often involves appreciating the craftsmanship involved.
Criteria: Users admire and appreciate the attention to detail in the design.
Phrase: Appreciating design.

6.
Concepts: appreciating efforts and user support, appreciating valued input and feedback
Relationship: The concepts are related as appreciating efforts and user support involves appreciating valued input and feedback.
Criteria: Users recognize the importance of their input and feedback.
Phrase: Appreciating user input.

7.
Concepts: sharing software review, sharing user experiences
Relationship: The concepts are related as sharing software reviews often involves sharing user experiences.
Criteria: Users share their opinions and experiences with the software.
Phrase: Sharing user experiences.

8.
Concepts: encouraging open feedback, encouraging sharing and feedback
Relationship: The concepts are related as encouraging open feedback involves encouraging sharing and feedback.
Criteria: Designers invite users to provide honest and open feedback.
Phrase: Encouraging feedback.

9.
Concepts: providing user perspective and suggestions, suggesting workflow and feature improvements
Relationship: The concepts are related as providing user perspective and suggestions often involves suggesting workflow and feature improvements.
Criteria: Users offer their insights and recommendations for improvement.
Phrase: Providing user insights.

10.
Concepts: requesting new features or improvements, proposing new features and experiment types
Relationship: The concepts are related as requesting new features or improvements often involves proposing new features and experiment types.
Criteria: Users express their needs and propose new features or experiment types.
Phrase: Requesting new features.

11.
Concepts: highlighting features
Relationship: N/A
Criteria: Designers or users draw attention to specific software features or functionalities.
Phrase: Highlighting features.

12.
Concepts: manage user expectations
Relationship: N/A
Criteria: Designers set and manage user expectations about software features, updates, or timelines.
Phrase: Managing expectations.