You are an expert in thematic analysis clarifying the criteria of qualitative codes. Do not attempt to merge codes now.
Consider provided quotes, and note that each quote is independent of others.
Write clear and generalizable criteria for each code and do not introduce unnecessary details.
If necessary, refine labels to be more accurate, but do not repeat yourself.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1. 
Criteria: {Who did what, and how for code 1}
Label: {A descriptive label of code 1}
...
32.
Criteria: {Who did what, and how for code 32}
Label: {A descriptive label of code 32}
---
~~~
1.
Label: prioritizing user experience
Quotes:
- Designer: We try to design it so that it can be used without additional instructions, or we will provide some prompts when you open it for the first time based on feedback

2.
Label: the development process seems iterative
Quotes:
- User: This software is great! It's quite practical, unlike some software that tries to be comprehensive but ends up being inconvenient to use.
- Designer: Thank you all for your support. We will do better!
- User: [Emoji][Emoji]

3.
Label: instructs on using student power supply and switch
Quotes:
- Designer: After connecting the student power supply, you need to turn on the switch

4.
Label: utilizing community provided information
Quotes:
- User: I saw the group files, thank you.

5.
Label: inviting
Quotes:
- Designer: If you have any suggestions or requirements, feel free to bring them up.

6.
Label: providing theoretical explanations
Quotes:
- Designer: Theoretically, it should be compatible (but the machine itself shouldn't be too old, probably from 2008 onwards).

7.
Label: follow-up on design information
Quotes:
- User: Most schools will disable the network on classroom computers to prevent students from going online or to avoid various software auto-downloads from slowing down the computers.

8.
Label: expressing confusion
Quotes:
- User: How do you use the PC version?
- User: How to download?

9.
Label: providing technical instructions
Quotes:
- Designer: You can download Windows in the group files.

10.
Label: appreciating attention to detail
Quotes:
- User: Yes, the spirit of craftsmanship that strives for perfection ðŸ¤”

11.
Label: propose potential solution
Quotes:
- Designer: XP compatibility might need to be looked into later... probably need to install a virtual machine.

12.
Label: inquiring about development progress
Quotes:
- User: Are there any other updates recently?

13.
Label: illustrating development goals
Quotes:
- Designer: For example, see the circuit diagram to connect the physical diagram, or vice versa

14.
Label: expressing playfulness
Quotes:
- User: [Emoji][Emoji]

15.
Label: emphasizing user centric design
Quotes:
- Designer: We try to design it so that it can be used without additional instructions, or we will provide some prompts when you open it for the first time based on feedback

16.
Label: clarifying design choices
Quotes:
- Designer: Touch screens have their own on-screen keyboards.
- Designer: [Image] This one, right?

17.
Label: outlining learning goals
Quotes:
- Designer: With bidirectional conversion, you can directly do problems in the application

18.
Label: providing feedback on software effectiveness
Quotes:
- User: The simulation effect of this software is really good. When I used it in class yesterday, the students were amazed.

19.
Label: request additional experiments
Quotes:
- User: Can you also include mechanics experiments?

20.
Label: elaboration of question
Quotes:
- User: [Image]

21.
Label: showing empathy
Quotes:
- Designer: Last time I tried it in middle school, there's a trick where you click the link button in the top right, and when the browser pops up, it's no longer full screen... = =
- Designer: Sorry for the late-night disturbance :)
- Designer: Hmm hmm.
- Designer: ðŸ˜‚

22.
Label: outlining development plan
Quotes:
- Designer: We will also update the multimeter and powered solenoid this week. If there are any other features, characteristics, or electronic components you hope to include in the production plan, please leave a message in the group, and we will consider it as much as possible. The previously mentioned feature of saving experiments to the cloud/local is also in the plan. Thank you, everyone!

23.
Label: providing specific input
Quotes:
- User: Left side

24.
Label: explain reasons for the request
Quotes:
- User: This is good, I hope it can be very convenient to draw circuit diagrams, and I also hope there is a function to hide the background grid with one click, which is convenient for us teachers to take screenshots for test papers. Currently, there is no software that makes it easy to draw circuit diagrams for exam questions

25.
Label: promising inclusive decision making
Quotes:
- Designer: When we are ready to start, we will consult everyone in the group

26.
Label: indicates openness to user suggestions and feedback
Quotes:
- Designer: Hmm.

27.
Label: highlighting user engagement
Quotes:
- User: The simulation effect of this software is really good. When I used it in class yesterday, the students were amazed.

28.
Label: highlight usability need
Quotes:
- User: It is recommended to add an exit button function to the PC version. Many regions now use all-in-one touch screen machines without physical keyboards.

29.
Label: consulting experts
Quotes:
- Designer: Consulting the teachers in the group: which type of intersection is used in the circuit diagrams in the current textbooks?
[Image]

30.
Label: engaging in conversation
Quotes:
- Designer: I'll upload one now... Are you a teacher?
- User: [Emoji][Emoji]

31.
Label: prioritizing quality
Quotes:
- Designer: It's still better to make the auto-generated one as good as possible

32.
Label: show interest
Quotes:
- User: Will there be an update this week? [Emoji]
- User: Are there any other updates recently?
- User: How to download?
===
Here are the definitions for each code:

---
1.
Criteria: The designer focuses on creating a user-friendly experience by minimizing the need for instructions.
Label: Prioritizing User Experience

2.
Criteria: The development process involves iterative improvements based on user feedback.
Label: Iterative Development

3.
Criteria: The designer provides step-by-step instructions on using specific equipment or software.
Label: Providing Technical Guidance

4.
Criteria: The user acknowledges and appreciates the community's contributions to the project.
Label: Appreciating Community Input

5.
Criteria: The designer encourages users to share their thoughts, suggestions, or requirements.
Label: Open Invitation

6.
Criteria: The designer explains theoretical concepts or principles underlying the software.
Label: Theoretical Explanations

7.
Criteria: The user shares information or insights that can inform design decisions.
Label: Sharing Design Information

8.
Criteria: The user expresses confusion or uncertainty about using the software.
Label: Expressing Confusion

9.
Criteria: The designer provides specific instructions on how to accomplish a task.
Label: Providing Technical Instructions

10.
Criteria: The user appreciates the attention to detail in the software design.
Label: Appreciating Attention to Detail

11.
Criteria: The designer proposes potential solutions to identified problems or limitations.
Label: Proposing Solutions

12.
Criteria: The user inquires about the progress or updates on the software development.
Label: Inquiring about Development Progress

13.
Criteria: The designer illustrates the goals or objectives of the software development.
Label: Illustrating Development Goals

14.
Criteria: The user expresses playfulness or humor in their interaction.
Label: Expressing Playfulness

15.
Criteria: The designer emphasizes the importance of user-centered design principles.
Label: Emphasizing User-Centric Design

16.
Criteria: The designer explains or justifies specific design choices or decisions.
Label: Clarifying Design Choices

17.
Criteria: The designer outlines the learning objectives or outcomes of the software.
Label: Outlining Learning Goals

18.
Criteria: The user provides feedback on the effectiveness or impact of the software.
Label: Providing Feedback on Software Effectiveness

19.
Criteria: The user requests additional features or experiments to be included in the software.
Label: Requesting Additional Features

20.
Criteria: The user elaborates or provides more context to their question or inquiry.
Label: Elaborating on Questions

21.
Criteria: The designer shows empathy or understanding towards the user's concerns or frustrations.
Label: Showing Empathy

22.
Criteria: The designer outlines the plan or roadmap for future software development.
Label: Outlining Development Plan

23.
Criteria: The user provides specific input or suggestions for the software development.
Label: Providing Specific Input

24.
Criteria: The user explains the reasons or motivations behind their request or suggestion.
Label: Explaining Reasons

25.
Criteria: The designer promises to involve users in the decision-making process.
Label: Promising Inclusive Decision Making

26.
Criteria: The designer indicates openness to user suggestions and feedback.
Label: Indicating Openness to Feedback

27.
Criteria: The user highlights the engagement or impact of the software on students.
Label: Highlighting User Engagement

28.
Criteria: The user identifies a specific usability need or requirement.
Label: Identifying Usability Needs

29.
Criteria: The designer consults with experts or users to gather information or insights.
Label: Consulting Experts

30.
Criteria: The designer engages in conversation or dialogue with users.
Label: Engaging in Conversation

31.
Criteria: The designer prioritizes quality and strives for excellence in the software development.
Label: Prioritizing Quality

32.
Criteria: The user shows interest in the software development or updates.
Label: Showing Interest