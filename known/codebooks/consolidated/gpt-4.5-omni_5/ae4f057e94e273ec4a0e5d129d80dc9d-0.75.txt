You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (10 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
10. 
Concepts: {Repeat the input 10}
Relationship: {What is logical relationship between concepts in code 10, or N/A if not applicable}
Criteria: {Who did what, and how for code 10}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: encourage group discussion, encouraging feedback and discussion
- Encourages group members to discuss issues within the group.
- Members encourage feedback and discussions on issues and updates.

2.
Concepts: confirmation, confirming understanding
- Participants confirm statements or information provided by others.
- Community members confirm or express agreement and understanding regarding ideas and conversations.

3.
Concepts: greeting back, exchanging greetings
- Responding to a greeting in a friendly manner.
- Members welcome each other and reciprocate introductory or affirmative greetings.

4.
Concepts: inquiring about identities and backgrounds, inquiring about professional background
- Members ask about and share their professional roles and teaching backgrounds.
- Designers inquire about users' teaching levels and ask about their professional backgrounds to tailor support.

5.
Concepts: providing technical answers, clarifying technical functionality
- Members answer technical questions and provide clarifications.
- Address functionality concerns and provide technical clarifications.

6.
Concepts: suggesting improvements, proposing features and collaboration
- Users suggest improvements and provide feedback to enhance the software.
- Users propose new features and suggest collaboration opportunities to enhance the software.

7.
Concepts: raising feature concerns, justifying feature requests
- Designers and community members raise issues and concerns related to features and functionality.
- Community members express needs for specific functionalities and justify their feature requests.

8.
Concepts: discussing feature development, prioritizing feature development
- Designers discuss the development, design choices, and potential features of the software.
- Designers discuss the prioritization of different features or sections to be developed.

9.
Concepts: maintaining development transparency, conducting transparent development discussions
- A designer provides and maintains transparency about the development process and timelines.
- Designers discuss development details, issues, and progress transparently to keep the community informed.

10.
Concepts: seeking context, seeking clarification on user requests
- Designers seeking contextual information to better understand user needs or issues.
- Designers follow up on user needs and seek clarification on their requests.
===
---
Definitions for each code (10 in total):
1.
Concepts: encourage group discussion, encouraging feedback and discussion
Relationship: Both concepts involve promoting interactive communication within the group.
Criteria: Members actively promote interactive communication by discussing issues and encouraging feedback within the group.
Phrase: Facilitating interactive communication

2.
Concepts: confirmation, confirming understanding
Relationship: Both concepts involve validating and agreeing on shared information or ideas.
Criteria: Participants validate and express agreement and understanding about shared ideas and information.
Phrase: Validating shared information

3.
Concepts: greeting back, exchanging greetings
Relationship: Both concepts involve the reciprocation of introductory or affirmative greetings.
Criteria: Members welcome one another by reciprocating greetings and responding in a friendly manner.
Phrase: Reciprocating greetings

4.
Concepts: inquiring about identities and backgrounds, inquiring about professional background
Relationship: Both concepts involve asking about and sharing personal or professional information.
Criteria: Members inquire about and share their professional roles and backgrounds to tailor support.
Phrase: Sharing professional information

5.
Concepts: providing technical answers, clarifying technical functionality
Relationship: Both concepts involve addressing and clarifying technical questions and concerns.
Criteria: Members provide answers and clarifications to address technical questions and functionality concerns.
Phrase: Addressing technical questions

6.
Concepts: suggesting improvements, proposing features and collaboration
Relationship: Both concepts involve providing feedback and suggesting enhancements to the software.
Criteria: Users suggest improvements, propose new features, and recommend collaboration opportunities to enhance the software.
Phrase: Enhancing software collaboratively

7.
Concepts: raising feature concerns, justifying feature requests
Relationship: Both concepts involve expressing needs and concerns related to software features and functionality.
Criteria: Designers and community members raise concerns and justify the need for specific functionalities.
Phrase: Expressing feature needs

8.
Concepts: discussing feature development, prioritizing feature development
Relationship: Both concepts involve conversations about the development and prioritization of software features.
Criteria: Designers discuss and prioritize the development of various software features and sections.
Phrase: Prioritizing feature development

9.
Concepts: maintaining development transparency, conducting transparent development discussions
Relationship: Both concepts involve keeping the community informed about the development process.
Criteria: Designers maintain transparency by discussing development details, issues, and progress openly.
Phrase: Ensuring development transparency

10.
Concepts: seeking context, seeking clarification on user requests
Relationship: Both concepts involve understanding user needs and clarifying their requests.
Criteria: Designers seek contextual information and follow up to better understand and address user needs.
Phrase: Understanding user needs
---