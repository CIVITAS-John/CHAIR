You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: user interface, instructional design
- A designer mentions the user interface or design of a software.
- A designer discusses the instructional design or user experience of the software.

2.
Concepts: input methods, input methods discussion
- A designer discusses or suggests input methods or interfaces for the software.
- Designers discuss or consider various input methods.

3.
Concepts: feature complexity, explain complexity
- A designer comments on the complexity of a feature or task.
- The designer explains the complexity of a feature or functionality.

4.
Concepts: design challenges, development challenges
- Issues and obstacles faced by designers during the development process.
- The designer mentions difficulties or challenges in development.

5.
Concepts: simulation accuracy, explain simulation detail
- The designer discusses the accuracy of a simulation or feature.
- A designer explains or provides details about a simulation or experimental feature.

6.
Concepts: explain focus areas, explain current focus
- Designers explain the focus areas or priorities of the software's development.
- The designer explains the current focus or priority of the development team.

7.
Concepts: user guidance, usage instruction
- Providing guidance, instructions, or tutorials on how to use a feature or software.
- Giving instructions or guidance on how to use a feature or software.

8.
Concepts: feature guidance, usage instructions
- Designers provide guidance on how to use specific features or functions in the software.
- A designer provides instructions or guidance on how to use a feature or software.

9.
Concepts: provide example, give examples of feature
- The designer provides an example or illustration of a feature's functions or capabilities.
- The designer provides examples or illustrations of a feature or functionality.

10.
Concepts: explain functionality, introduce feature functions, feature explanation
- A designer explains how a feature or software works or functions.
- Designer introduces or explains the functions of a feature.
- A designer explains or describes a feature or functionality of the software.

11.
Concepts: feature details, technical details
- A designer provides detailed information about a feature or software.
- Designers provide technical details about the software or its features.

12.
Concepts: offer solution, offer a solution
- Designer provides a solution or workaround to a problem.
- A designer offers a solution or suggestion to a user's problem or question.

13.
Concepts: share workaround, usability workaround
- A designer shares a workaround or solution to a problem.
- The designer provides a usability workaround or tip for a specific issue or problem.

14.
Concepts: offering/seeking alternative, provide alternative solution, suggest alternative solution
- A user offers or seeks an alternative solution.
- A user provides an alternative suggestion or solution.
- The user suggests an alternative solution or workaround for a problem or issue.

15.
Concepts: technical support, technical support and guidance
- Instances where designers or users provide technical assistance or address technical issues.
- Instances where designers provide technical support or information about the software.
- Instances where designers provide technical support or guidance to users.

16.
Concepts: offering help, offer help
- Designer provides help or troubleshooting advice to users.
- The designer offers help or support to a user, often in response to a question or issue.

17.
Concepts: problem inquiry, inquire about specific problems
- Inquiring about problems or issues encountered by users
- A designer asks users about specific issues or problems they encountered while using the software.

18.
Concepts: show consideration, apologies and politeness, apology or acknowledgment of inconvenience
- A designer shows consideration or apologizes for an inconvenience.
- Expressions of politeness, apologies, or acknowledgment of potential inconvenience by the designers.
- Designers acknowledge potential inconvenience or apologize.

19.
Concepts: apology for disturbance, apologize for interruption, apologize for timing
- Designers apologize for any inconvenience caused to the users.
- The designer apologizes for a potential interruption or inconvenience.
- The designer apologizes for any inconvenience or disturbance caused to the users.

20.
Concepts: manual adjustment, suggest manual adjustments
- A designer discusses or suggests manual adjustments or workarounds for the software.
- The designer suggests manual adjustments or workarounds for a problem or issue.

21.
Concepts: suggest simplification, simplification and refinement in design, feature simplification
- Suggesting or recommending simplification of a feature or design.
- The designer suggests or recommends refining or simplifying the design of a feature or aspect of the app.
- The designer suggests or recommends simplifying a feature or aspect of the app.

22.
Concepts: feature improvement, feature optimization
- Designers discuss or plan to improve existing features.
- Designers discuss optimizing or refining existing features.

23.
Concepts: design goals, app design intention
- The designer explains the design goals or philosophy behind the application.
- The intention or design philosophy behind the app is explained.

24.
Concepts: design principles, explain design philosophy
- The designer explains or discusses the underlying principles or philosophies guiding the app's design.
- The underlying principles and approaches guiding the design and development of the product.

25.
Concepts: rationale, provide rationale for development decision, design rationale
- Statements that provide reasons or justifications for a particular feature or design.
- The designer provides a justification or explanation for a development decision.
- The designer explains the reasoning or thought process behind a design decision.

26.
Concepts: reassurance, reassure users
- Instances where designers reassure users about the progress and express gratitude or encouragement.
- The designer reassures users about the development or implementation of a feature or functionality.

27.
Concepts: align with user needs, align with user feedback
- Aligning the app's development with user needs or feedback.
- A designer indicates alignment with user feedback or suggestions in the development process.

28.
Concepts: user requests, request new feature, requesting features
- Instances where users request new features or improvements.
- Specific features or improvements requested by users.
- A user makes a detailed request for a new feature or functionality.
- User requests specific features or functionalities in the software.

29.
Concepts: feature request, feature requests for physics experiments
- Instances where users request new features or improvements for the Physics Lab tool.
- Suggestions from users about desired features or improvements for the software.
- User requests new features or experiments related to physics.

30.
Concepts: user suggestion, design suggestion
- Users provide suggestions or ideas for the app's development, or the designer invites users to share their suggestions.
- Users provide suggestions or ideas for the app's design, or the designer invites users to share their design suggestions.

31.
Concepts: feature suggestions, propose another feature, feature suggestion, suggest new feature, suggest improvements
- Users suggest new design features or functionalities.
- A user proposes or suggests a new feature or functionality for the software.
- A user suggests a new feature or functionality for the application.
- User suggests a new feature or improvement for the platform.
- A user suggests improvements or features for a software or platform.

32.
Concepts: designer feedback, respond to user feedback, acknowledge feedback, designer response
- Designers provide feedback on user requests or suggestions.
- A designer responds to user feedback or suggestions in the development process.
- A designer acknowledges or responds to user feedback.
- Instances where designers respond to user feedback or suggestions.
- Instances where designers respond to user feedback or queries.
===
Here are the definitions for each code:

---
1.
Concepts: user interface, instructional design
Relationship: The concepts are related as the user interface is a crucial aspect of instructional design.
Criteria: A designer discusses the design of a software's user interface.
Phrase: Discussing user interface design.

2.
Concepts: input methods, input methods discussion
Relationship: The concepts are related as input methods are a topic of discussion.
Criteria: Designers discuss various input methods for a software.
Phrase: Discussing input methods.

3.
Concepts: feature complexity, explain complexity
Relationship: The concepts are related as explaining complexity is a way to comment on feature complexity.
Criteria: A designer explains the complexity of a feature or task.
Phrase: Explaining feature complexity.

4.
Concepts: design challenges, development challenges
Relationship: The concepts are related as design challenges can lead to development challenges.
Criteria: Designers face issues during the development process.
Phrase: Facing development challenges.

5.
Concepts: simulation accuracy, explain simulation detail
Relationship: The concepts are related as explaining simulation details can imply accuracy.
Criteria: A designer discusses the accuracy of a simulation or feature.
Phrase: Explaining simulation accuracy.

6.
Concepts: explain focus areas, explain current focus
Relationship: The concepts are related as explaining focus areas can imply the current focus.
Criteria: Designers explain the priorities of the software's development.
Phrase: Explaining development focus.

7.
Concepts: user guidance, usage instruction
Relationship: The concepts are related as user guidance involves providing instructions.
Criteria: Designers provide instructions on how to use a feature or software.
Phrase: Providing user guidance.

8.
Concepts: feature guidance, usage instructions
Relationship: The concepts are related as feature guidance involves providing instructions.
Criteria: Designers provide instructions on how to use specific features.
Phrase: Providing feature guidance.

9.
Concepts: provide example, give examples of feature
Relationship: The concepts are related as providing examples is a way to illustrate a feature.
Criteria: Designers provide examples of a feature's functions or capabilities.
Phrase: Providing feature examples.

10.
Concepts: explain functionality, introduce feature functions, feature explanation
Relationship: The concepts are related as explaining functionality involves introducing feature functions.
Criteria: A designer explains how a feature or software works.
Phrase: Explaining feature functionality.

11.
Concepts: feature details, technical details
Relationship: The concepts are related as feature details can involve technical details.
Criteria: Designers provide detailed information about a feature or software.
Phrase: Providing feature details.

12.
Concepts: offer solution, offer a solution
Relationship: The concepts are related as offering a solution implies providing a solution.
Criteria: A designer provides a solution to a problem.
Phrase: Offering a solution.

13.
Concepts: share workaround, usability workaround
Relationship: The concepts are related as sharing a workaround involves providing a usability workaround.
Criteria: A designer shares a solution to a problem.
Phrase: Sharing a workaround.

14.
Concepts: offering/seeking alternative, provide alternative solution, suggest alternative solution
Relationship: The concepts are related as offering an alternative involves providing or suggesting an alternative solution.
Criteria: A user offers or seeks an alternative solution to a problem.
Phrase: Offering an alternative solution.

15.
Concepts: technical support, technical support and guidance
Relationship: The concepts are related as technical support involves providing guidance.
Criteria: Designers provide technical assistance or address technical issues.
Phrase: Providing technical support.

16.
Concepts: offering help, offer help
Relationship: The concepts are related as offering help implies providing help.
Criteria: A designer provides help or troubleshooting advice to users.
Phrase: Offering help.

17.
Concepts: problem inquiry, inquire about specific problems
Relationship: The concepts are related as inquiring about problems involves asking about specific issues.
Criteria: A designer asks users about specific issues or problems they encountered.
Phrase: Inquiring about problems.

18.
Concepts: show consideration, apologies and politeness, apology or acknowledgment of inconvenience
Relationship: The concepts are related as showing consideration involves apologizing or acknowledging inconvenience.
Criteria: A designer shows consideration or apologizes for an inconvenience.
Phrase: Showing consideration.

19.
Concepts: apology for disturbance, apologize for interruption, apologize for timing
Relationship: The concepts are related as apologizing for disturbance involves apologizing for interruption or timing.
Criteria: A designer apologizes for any inconvenience caused to users.
Phrase: Apologizing for disturbance.

20.
Concepts: manual adjustment, suggest manual adjustments
Relationship: The concepts are related as suggesting manual adjustments involves discussing manual adjustments.
Criteria: A designer discusses or suggests manual adjustments for the software.
Phrase: Suggesting manual adjustments.

21.
Concepts: suggest simplification, simplification and refinement in design, feature simplification
Relationship: The concepts are related as suggesting simplification involves refining or simplifying design.
Criteria: A designer suggests simplifying a feature or aspect of the app.
Phrase: Suggesting simplification.

22.
Concepts: feature improvement, feature optimization
Relationship: The concepts are related as improving features involves optimizing them.
Criteria: Designers discuss or plan to improve existing features.
Phrase: Improving features.

23.
Concepts: design goals, app design intention
Relationship: The concepts are related as design goals involve the app's design intention.
Criteria: The designer explains the design goals or philosophy behind the application.
Phrase: Explaining design goals.

24.
Concepts: design principles, explain design philosophy
Relationship: The concepts are related as design principles involve explaining design philosophy.
Criteria: The designer explains the underlying principles or philosophies guiding the app's design.
Phrase: Explaining design principles.

25.
Concepts: rationale, provide rationale for development decision, design rationale
Relationship: The concepts are related as providing a rationale involves explaining design decisions.
Criteria: The designer provides a justification for a development decision.
Phrase: Providing design rationale.

26.
Concepts: reassurance, reassure users
Relationship: The concepts are related as reassuring users involves providing reassurance.
Criteria: Designers reassure users about the development or implementation of a feature or functionality.
Phrase: Reassuring users.

27.
Concepts: align with user needs, align with user feedback
Relationship: The concepts are related as aligning with user needs involves aligning with user feedback.
Criteria: A designer indicates alignment with user feedback or suggestions in the development process.
Phrase: Aligning with user needs.

28.
Concepts: user requests, request new feature, requesting features
Relationship: The concepts are related as user requests involve requesting new features.
Criteria: Users request new features or improvements.
Phrase: Requesting features.

29.
Concepts: feature request, feature requests for physics experiments
Relationship: The concepts are related as feature requests involve requesting features for physics experiments.
Criteria: Users request new features or improvements for the Physics Lab tool.
Phrase: Requesting features for physics experiments.

30.
Concepts: user suggestion, design suggestion
Relationship: The concepts are related as user suggestions involve providing design suggestions.
Criteria: Users provide suggestions or ideas for the app's development.
Phrase: Providing user suggestions.

31.
Concepts: feature suggestions, propose another feature, feature suggestion, suggest new feature, suggest improvements
Relationship: The concepts are related as feature suggestions involve proposing or suggesting new features or improvements.
Criteria: Users suggest new design features or functionalities.
Phrase: Suggesting features.

32.
Concepts: designer feedback, respond to user feedback, acknowledge feedback, designer response
Relationship: The concepts are related as designer feedback involves responding to user feedback.
Criteria: Designers provide feedback on user requests or suggestions.
Phrase: Providing designer feedback.