You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. If a sub-code includes another, use the broader one. If sub-codes are parallel, write one that covers both.
Write clear and generalizable labels and criteria for each code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization (e.g. "social interaction" instead of "interaction", "communication approach" instead of "communication").
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (27 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {Consolidated criteria of code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
27.
Relationship: {The logical relationship between sub-codes in code 27}
Criteria: {Consolidated criteria of code 27}
Label: {A consolidated label of code 27}
Category: {2-4 words for code 27}
---
~~~
1. feature functionality, product feature details.
- Explanation of feature usage and software functionality
- Detailed descriptions of software features, including technical specifications and functionalities.

2. software feature compliment, feature confirmation and relevance.
- Positive feedback specifically about a software feature's visual or functional effect.
- Confirmation and reassurance regarding the relevance and implementation of software features.

3. component addition, feature expansion.
- Adding components to enhance the product's functionality.
- Adding augmented reality features and expanding product features.

4. component adjustments, component modification and updates.
- Mention of manual editing and adjustments to features or components.
- Planned or implemented modifications to software components as part of significant updates.

5. feature simplification, feature enhancement and optimization.
- Efforts to simplify features to improve usability, sometimes through the addition of new elements.
- Enhancements and refinements made to software features to optimize performance and user experience.

6. optimization, product refinement.
- Discussing the optimization of features or design elements.
- Emphasizing the need for refining and reiterating product features.

7. bidirectional conversion, diagram manipulation capabilities.
- Discussion about converting between different types of diagrams.
- Involves features or utilities within a tool that enable manipulation or transformation of diagrams, specifically connecting different diagram types or converting between them.

8. non-verbal interaction, visual communication.
- Use of non-verbal symbols in communication
- Use of visual elements like images to communicate and share information within the community.

9. software access, download instructions.
- Questions and information about accessing or downloading the software.
- Instructions for downloading files or software

10. user onboarding, initial user guidance.
- Processes aimed at helping users get started with the software.
- Initial guidance and orientation for new users

11. design simplicity principle, simplicity and simplification.
- Principles and explanations focusing on simplicity in design
- Emphasizing simplicity in design and simplifying the product.

12. continuous improvement, quality improvement philosophy.
- Commitment to and emphasis on continuous product improvement.
- Focus on quality improvement and the philosophy behind it

13. simulation accuracy, simulation changes and details.
- Efforts to ensure realism and accuracy in simulations.
- Changes and details related to simulated experiments

14. platform inquiry, physics concepts.
- Questions about different platforms where the Physics Lab can be used.
- Discussions of physics concepts and their application in the Physics Lab.

15. practical solutions, workaround solution.
- Workarounds and practical solutions for platform issues.
- Creative or alternative solutions proposed by users to overcome limitations or issues.

16. system compatibility, compatibility considerations, theoretical compatibility.
- Statements about compatibility with systems and requirements.
- Considerations related to ensuring software compatibility with various systems and requirements.
- Statements about theoretical compatibility of the software with certain systems or conditions.

17. technical constraints, system limitations discussion.
- Discussions about hardware use and technical limitations.
- Discussions on the limitations of current technology and systems

18. usage inquiries, documentation requests.
- Inquiries about platform usage and user manuals
- Requests for software documentation and seeking clarifications.

19. troubleshooting, technical and troubleshooting inquiry.
- Efforts to address and resolve usability problems.
- Technical inquiries and troubleshooting within the community

20. teacher consultation, specific inquiry to educators.
- Asking teachers or experts for specific information or advice.
- Inquiry directed specifically at educators regarding technical or content-specific details.

21. feature requests, feature development inquiry.
- Requests or suggestions for new features or improvements.
- Inquiries and discussions about the development of new features based on user feedback.

22. design improvements, expansion and alternative suggestions.
- Suggestions for design and usability improvements
- Proposals for expanding or altering software features to enhance functionality or user experience.

23. educational content requests, detailed feature request.
- User-initiated suggestions and requests for specific educational content or features.
- Detailed requests for specific features or functionalities, often related to educational or experimental needs.

24. usability design, interaction design issues.
- Aspects related to user experience and usability design principles.
- Issues and design aspects related to user experience

25. user support, platform usability and usage.
- Providing usability guidance and technical help
- Usability discussions and facilitation of platform usage

26. designer support, designer responsiveness.
- Support or assistance requests directed specifically at designers.
- Designer responses to feedback and assistance offered to users

27. design decision, user feedback on design.
- Decision-making process in the design or configuration of a feature.
- User feedback specifically related to design choices, reflecting personal preferences.
===
Here is the output in the required format:

---
Categories:
* Software Development
* User Experience
* Community Interaction
* Design Principles
* Educational Content
* Technical Support

Definitions for each code:

1.
Relationship: Inclusive
Criteria: Discussion of software features and their functionalities
Label: Software Functionality
Category: Software Development

2.
Relationship: Parallel
Criteria: Positive feedback on software features
Label: Feature Compliments
Category: User Experience

3.
Relationship: Inclusive
Criteria: Adding components to enhance software functionality
Label: Feature Expansion
Category: Software Development

4.
Relationship: Inclusive
Criteria: Modifying software components for updates
Label: Component Adjustments
Category: Software Development

5.
Relationship: Inclusive
Criteria: Simplifying and enhancing software features
Label: Feature Optimization
Category: Software Development

6.
Relationship: Parallel
Criteria: Optimizing and refining software features
Label: Product Refinement
Category: Software Development

7.
Relationship: Inclusive
Criteria: Converting and manipulating diagrams
Label: Diagram Manipulation
Category: Software Development

8.
Relationship: Inclusive
Criteria: Using non-verbal symbols and visual elements for communication
Label: Visual Communication
Category: Community Interaction

9.
Relationship: Inclusive
Criteria: Accessing and downloading software
Label: Software Access
Category: Technical Support

10.
Relationship: Inclusive
Criteria: Guiding new users
Label: User Onboarding
Category: User Experience

11.
Relationship: Inclusive
Criteria: Focusing on simplicity in design
Label: Design Simplicity
Category: Design Principles

12.
Relationship: Inclusive
Criteria: Commitment to continuous improvement
Label: Quality Improvement
Category: Software Development

13.
Relationship: Inclusive
Criteria: Ensuring accuracy in simulations
Label: Simulation Accuracy
Category: Educational Content

14.
Relationship: Parallel
Criteria: Inquiring about platforms and physics concepts
Label: Platform Inquiry
Category: Educational Content

15.
Relationship: Inclusive
Criteria: Finding practical solutions and workarounds
Label: Practical Solutions
Category: Technical Support

16.
Relationship: Inclusive
Criteria: Ensuring system compatibility
Label: System Compatibility
Category: Software Development

17.
Relationship: Inclusive
Criteria: Discussing technical constraints and limitations
Label: Technical Constraints
Category: Technical Support

18.
Relationship: Inclusive
Criteria: Inquiring about usage and documentation
Label: Usage Inquiries
Category: Technical Support

19.
Relationship: Inclusive
Criteria: Troubleshooting and technical inquiries
Label: Troubleshooting
Category: Technical Support

20.
Relationship: Inclusive
Criteria: Consulting teachers and experts
Label: Teacher Consultation
Category: Community Interaction

21.
Relationship: Inclusive
Criteria: Requesting new features and improvements
Label: Feature Requests
Category: Software Development

22.
Relationship: Inclusive
Criteria: Suggesting design improvements and alternatives
Label: Design Improvements
Category: Design Principles

23.
Relationship: Inclusive
Criteria: Requesting specific educational content and features
Label: Educational Content Requests
Category: Educational Content

24.
Relationship: Inclusive
Criteria: Discussing usability design and interaction issues
Label: Usability Design
Category: User Experience

25.
Relationship: Inclusive
Criteria: Providing user support and guidance
Label: User Support
Category: Technical Support

26.
Relationship: Inclusive
Criteria: Supporting designers and responding to feedback
Label: Designer Support
Category: Community Interaction

27.
Relationship: Inclusive
Criteria: Making design decisions and receiving user feedback
Label: Design Decisions
Category: Design Principles