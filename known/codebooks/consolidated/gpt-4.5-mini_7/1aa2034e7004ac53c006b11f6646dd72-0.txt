You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (21 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
21. 
Concepts: {Repeat the input 21}
Relationship: {What is logical relationship between concepts in code 21, or N/A if not applicable}
Criteria: {Who did what, and how for code 21}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: communicate release plans, communicate community updates
- A designer informs the community about the expected timing and schedule for software updates and versions.
- A designer announces updates and invites community input on features and future plans.

2.
Concepts: preview upcoming features, share development plans
- Designers preview upcoming features and introduce the content of upcoming updates to the community.
- Designers discuss potential future developments and share information about upcoming features with the community.

3.
Concepts: communicate ongoing work, share development updates
- The designer communicates that work is actively being done on a specific aspect of the software.
- The designer shares visual updates or images related to the software's development and communicates new features.

4.
Concepts: announce component updates, communicate software updates
- A designer announces changes to component specifications and informs users about functionality changes.
- Designers list new components and features, note bug fixes, and provide detailed update notes to inform the community.

5.
Concepts: announce software developments, announce software updates
- Designers announce updates, release schedules, and new features to users.
- Designer announces the release of a software update and informs users about new features and downloads.

6.
Concepts: assess compatibility, clarify compatibility issues
- Designers note potential compatibility issues and confirm specific version compatibility with hardware.
- Designers provide clear information about software compatibility and discuss related technical details.

7.
Concepts: user guidance, offer user tips
- A designer provides detailed guidance on new features and functionalities of the software.
- The designer shares detailed information about new features and tips for effectively using the software.

8.
Concepts: feature development, explain new features
- Designer discusses various aspects of feature development in the software.
- A designer explains upcoming features that are being developed for the app and their significance.

9.
Concepts: outline release schedule, outline development priorities
- Designers outline the timeline and plans for future updates to the app.
- Designers outline a plan for the order of feature development and priorities for the project.

10.
Concepts: discuss educational context, providing context for user experiences
- Designers discuss the educational context in which the software is used and elaborate on past experiences.
- Users provide context about their experiences and challenges in education, particularly in using the software within educational settings.

11.
Concepts: enhance software usability, suggest usability improvements
- Designers express a desire for increased efficiency and users suggest features that enhance convenience.
- Instances where suggestions or changes are made to improve the usability of the software and enhance it for teachers.

12.
Concepts: recognize efforts, appreciation of designers
- Instances where users acknowledge and appreciate the efforts of the designers.
- A user expresses appreciation for the designers' efforts and quality of work.

13.
Concepts: respond to the feature request, acknowledge feature need
- Designers respond to specific feature requests, indicating ongoing research or development.
- Designers acknowledge the necessity of a feature that users have indicated is needed and discuss plans for implementation.

14.
Concepts: collect user input, seek consensus for collaboration
- Designers seek user input and discuss plans for gathering opinions before starting new features.
- The designer seeks agreement on a proposed idea, confirming the need for collaboration and gathering opinions.

15.
Concepts: invite user feedback, solicit suggestions
- Designers invite users to share feedback on features and suggest new improvements.
- Designers solicit suggestions from users to enhance the app and users provide additional refinements.

16.
Concepts: respond to user feedback, demonstrate designer responsiveness
- Designers respond to user feedback and suggestions regarding feature support.
- Instances where designers respond to user queries or feedback, showing attentiveness to user needs.

17.
Concepts: clarify user concerns, ask follow-up questions
- Designers ask users to clarify problems and raise concerns regarding software functionality.
- Designers ask follow-up questions to clarify user issues and users follow up on design information.

18.
Concepts: share solutions, engage in collaborative problem solving
- Designers share potential solutions based on user feedback and users share relevant information.
- Moments where designers and users work together to address issues.

19.
Concepts: share workarounds, provide solutions to issues
- Designers share workarounds for known issues and enhance usability in specific contexts.
- Designers provide solutions to compatibility issues and commit to addressing user needs.

20.
Concepts: establish credibility, confirm identity
- Users share their professional background and teaching experiences to contribute to the community's knowledge.
- Users share their teaching background and identify their experience in education.
- Users affirm their professional status or involvement in education and confirm their professional role, contributing to community understanding.

21.
Concepts: engage in troubleshooting
- Users engage in troubleshooting discussions and seek assistance regarding software use.
- Users request assistance with downloading the software and seek clarification on specific versions.
===
---
Definitions for each code (21 in total):
1.
Concepts: communicate release plans, communicate community updates
Relationship: Both concepts involve the designer informing the community about updates and future plans.
Criteria: A designer informs the community about expected software updates and invites input on features.
Phrase: Communicate updates and plans

2.
Concepts: preview upcoming features, share development plans
Relationship: Both concepts involve designers providing information about future features and developments.
Criteria: Designers preview upcoming features and discuss potential future developments with the community.
Phrase: Preview features and plans

3.
Concepts: communicate ongoing work, share development updates
Relationship: Both concepts involve the designer providing information about the current state of software development.
Criteria: The designer communicates ongoing work and shares visual updates related to software development.
Phrase: Communicate ongoing work

4.
Concepts: announce component updates, communicate software updates
Relationship: Both concepts involve informing users about changes and updates to software components.
Criteria: A designer announces changes to components and informs users about functionality updates.
Phrase: Announce updates and changes

5.
Concepts: announce software developments, announce software updates
Relationship: Both concepts involve designers informing users about software updates and new features.
Criteria: Designers announce updates and release schedules to users.
Phrase: Announce software updates

6.
Concepts: assess compatibility, clarify compatibility issues
Relationship: Both concepts involve designers addressing compatibility concerns related to software and hardware.
Criteria: Designers note potential compatibility issues and provide clear information about software compatibility.
Phrase: Assess and clarify compatibility

7.
Concepts: user guidance, offer user tips
Relationship: Both concepts involve providing users with information to enhance their experience with the software.
Criteria: A designer provides guidance and tips on new features and functionalities of the software.
Phrase: Offer user guidance

8.
Concepts: feature development, explain new features
Relationship: Both concepts involve discussing and explaining the development of new features in the software.
Criteria: Designer discusses feature development and explains upcoming features to the community.
Phrase: Explain feature development

9.
Concepts: outline release schedule, outline development priorities
Relationship: Both concepts involve planning and communicating timelines and priorities for software updates.
Criteria: Designers outline the timeline and priorities for future updates to the app.
Phrase: Outline schedules and priorities

10.
Concepts: discuss educational context, providing context for user experiences
Relationship: Both concepts involve discussing the educational environment and user experiences with the software.
Criteria: Designers and users discuss the educational context and share experiences related to software use.
Phrase: Discuss educational context

11.
Concepts: enhance software usability, suggest usability improvements
Relationship: Both concepts involve efforts to improve the software's usability based on user feedback.
Criteria: Designers express a desire for increased efficiency and users suggest features to enhance usability.
Phrase: Enhance usability

12.
Concepts: recognize efforts, appreciation of designers
Relationship: Both concepts involve users acknowledging and appreciating the work of designers.
Criteria: Users express appreciation for the designers' efforts and quality of work.
Phrase: Recognize and appreciate efforts

13.
Concepts: respond to the feature request, acknowledge feature need
Relationship: Both concepts involve designers addressing user requests for specific features.
Criteria: Designers respond to feature requests and acknowledge the necessity of those features.
Phrase: Respond to feature requests

14.
Concepts: collect user input, seek consensus for collaboration
Relationship: Both concepts involve gathering user opinions and seeking agreement for collaborative efforts.
Criteria: Designers seek user input and discuss plans for collaboration on new features.
Phrase: Collect input and seek consensus

15.
Concepts: invite user feedback, solicit suggestions
Relationship: Both concepts involve encouraging users to provide feedback and suggestions for improvements.
Criteria: Designers invite users to share feedback and solicit suggestions for enhancing the app.
Phrase: Invite feedback and suggestions

16.
Concepts: respond to user feedback, demonstrate designer responsiveness
Relationship: Both concepts involve designers addressing user feedback and showing attentiveness to their needs.
Criteria: Designers respond to user feedback and demonstrate responsiveness to user queries.
Phrase: Respond to feedback

17.
Concepts: clarify user concerns, ask follow-up questions
Relationship: Both concepts involve designers seeking to understand user issues and concerns more clearly.
Criteria: Designers ask users to clarify problems and raise follow-up questions regarding software functionality.
Phrase: Clarify concerns

18.
Concepts: share solutions, engage in collaborative problem solving
Relationship: Both concepts involve designers and users working together to find solutions to issues.
Criteria: Designers share potential solutions and engage users in collaborative problem solving.
Phrase: Share solutions collaboratively

19.
Concepts: share workarounds, provide solutions to issues
Relationship: Both concepts involve offering solutions to known issues and enhancing usability.
Criteria: Designers share workarounds for issues and provide solutions to enhance usability.
Phrase: Share workarounds and solutions

20.
Concepts: establish credibility, confirm identity
Relationship: Both concepts involve users sharing their professional backgrounds to enhance community understanding.
Criteria: Users share their professional background and confirm their identity within the community.
Phrase: Establish credibility

21.
Concepts: engage in troubleshooting
Relationship: N/A
Criteria: Users engage in troubleshooting discussions and seek assistance regarding software use.
Phrase: Engage in troubleshooting
---