You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (21 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
21. 
Concepts: {Repeat the input 21}
Relationship: {What is logical relationship between concepts in code 21, or N/A if not applicable}
Criteria: {Who did what, and how for code 21}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: ask for software access, inquire about the download process
- Users ask for instructions on how to download or access the software effectively.
- Users ask about how to download the software and where to find specific versions.

2.
Concepts: request technical support, request software usage assistance
- Users pose questions relating to the softwareâ€™s usage or technical functionalities.
- Users ask for help in using the software and request specific usage instructions.

3.
Concepts: acknowledge and express gratitude, express appreciation for user feedback
- Users express thanks and acknowledge support from community members.
- Users thank others for their feedback and contributions.

4.
Concepts: express emotion, expressive
- A user expresses feelings through emoji.
- Use of expressive language or emojis to convey feelings or sentiments in conversation.

5.
Concepts: context, community context
- Users providing context about their educational environment that affects software use.
- Users provide context about the evolving nature of their educational institution.

6.
Concepts: share update timeline, communicate update schedules
- Designers share updates and anticipated timelines for software versions and releases.
- Designers inform users about upcoming releases and update timelines.

7.
Concepts: provide update details, inform about changes
- Designers provide thorough information about version updates and features.
- Designers inform users about upcoming changes and describe the extent of software updates in detail.

8.
Concepts: announce software release, announce component updates
- Designers announce the release details of new software versions and enhancements.
- Designers announce significant updates concerning software components and features.

9.
Concepts: confirm upcoming updates, announce upcoming updates
- Designers share details about upcoming features and update releases.
- Designers inform the community regarding new features and upcoming updates.

10.
Concepts: share visual updates, provide an update preview
- Designers share visual updates or previews about application features and modifications.
- Designers provide an introduction to features in upcoming software updates.

11.
Concepts: provide product updates, share development updates
- Designers deliver updates regarding features and bug fixes relevant to the software.
- Designers provide updates on current developments related to software features and improvement plans.

12.
Concepts: outline future development plans, communicate future development plans
- Designers share various future plans concerning software enhancements and goals.
- Designers relay plans regarding future software releases to the community.

13.
Concepts: answer to a question, reassure users about improvements
- Designer assures users of an upcoming software feature by clarifying ongoing optimizations.
- Designers reassure users concerning software progress and ongoing enhancements.

14.
Concepts: respond to user feedback, reaction to feedback
- Designers actively respond to and acknowledge user feedback.
- A designer reflects on user's feedback and determines how to incorporate it into future updates.

15.
Concepts: invite user feedback, inquire about user input
- Designers strive to gather user feedback to enhance software functionalities.
- Designers gather user input to assist in refining software developments.

16.
Concepts: seeking input, encourage community feedback
- Designers actively invite suggestions and input from users, fostering an inclusive environment for collaboration.
- Designers actively encourage user participation and suggestions.

17.
Concepts: personal anecdote, share experiences related to software use
- Users share personal experiences related to software usage within educational contexts, adding depth to discussions.
- Users recount how the software has influenced their teaching or learning experiences.

18.
Concepts: address functionality, explain component functionality
- Designers address issues related to software functionality, providing explanations about how features operate.
- Designers provide explanations regarding features and their functionalities.

19.
Concepts: explain design rationale, explain design philosophy
- Designers explain the rationale and philosophy behind the software design decisions.
- Designers articulate principles and philosophies that underlie the design of the software.

20.
Concepts: seek efficiency improvements, advocate design refinement
- Designers express desires to enhance efficiency and simplify user processes.
- Designers advocate for design changes that simplify the interface and strive for improvement in design features.

21.
Concepts: provide user feedback, provide design suggestions
- Users provide suggestions for improvements to the software.
- Users suggest specific improvements and enhancements for software functionality.
===
---
Definitions for each code (21 in total):

1.  
Concepts: ask for software access, inquire about the download process  
Relationship: Both involve user inquiries about accessing software.  
Criteria: Users seek instructions for software access and downloading specific versions.  
Phrase: Request software access information.

2.  
Concepts: request technical support, request software usage assistance  
Relationship: Both pertain to user inquiries about how to use the software.  
Criteria: Users seek help regarding software functionalities and usage instructions.  
Phrase: Request software usage assistance.

3.  
Concepts: acknowledge and express gratitude, express appreciation for user feedback  
Relationship: Both express positive sentiments towards community support.  
Criteria: Users thank and show appreciation for support and feedback received.  
Phrase: Express gratitude for community support.

4.  
Concepts: express emotion, expressive  
Relationship: Both involve communicating feelings through language and emojis.  
Criteria: Users convey feelings using expressive language or emojis in conversation.  
Phrase: Convey emotional expression.

5.  
Concepts: context, community context  
Relationship: Both provide background information relevant to the educational environment.  
Criteria: Users share information about their educational context influencing software use.  
Phrase: Provide context for software use.

6.  
Concepts: share update timeline, communicate update schedules  
Relationship: Both relate to communicating release information about software updates.  
Criteria: Designers inform users about timelines for software versions and releases.  
Phrase: Share update timelines.

7.  
Concepts: provide update details, inform about changes  
Relationship: Both involve sharing specific information about software updates.  
Criteria: Designers detail updates and changes in new software versions.  
Phrase: Provide update details.

8.  
Concepts: announce software release, announce component updates  
Relationship: Both involve communicating new software versions and enhancements.  
Criteria: Designers announce important updates regarding software releases and components.  
Phrase: Announce software releases.

9.  
Concepts: confirm upcoming updates, announce upcoming updates  
Relationship: Both pertain to the communication of future software features.  
Criteria: Designers share and confirm details about forthcoming software updates.  
Phrase: Confirm upcoming updates.

10.  
Concepts: share visual updates, provide an update preview  
Relationship: Both involve presenting visual information about software features.  
Criteria: Designers offer visual previews of upcoming software modifications.  
Phrase: Provide visual update previews.

11.  
Concepts: provide product updates, share development updates  
Relationship: Both relate to delivering information about software improvements.  
Criteria: Designers update the community on software features and developments.  
Phrase: Provide development updates.

12.  
Concepts: outline future development plans, communicate future development plans  
Relationship: Both revolve around sharing goals and plans for software evolution.  
Criteria: Designers relay future enhancement plans to the community.  
Phrase: Communicate future plans.

13.  
Concepts: answer to a question, reassure users about improvements  
Relationship: Both involve responding to user concerns regarding software enhancements.  
Criteria: Designers provide reassurance about upcoming features and improvements.  
Phrase: Reassure users about enhancements.

14.  
Concepts: respond to user feedback, reaction to feedback  
Relationship: Both focus on acknowledging and integrating user opinions into design.  
Criteria: Designers actively respond to and consider user feedback for future updates.  
Phrase: React to user feedback.

15.  
Concepts: invite user feedback, inquire about user input  
Relationship: Both pertain to gathering user opinions to inform software development.  
Criteria: Designers seek user feedback to improve software functionalities.  
Phrase: Gather user feedback.

16.  
Concepts: seeking input, encourage community feedback  
Relationship: Both involve soliciting suggestions and fostering collaboration among users.  
Criteria: Designers invite and encourage input from the community for enhancements.  
Phrase: Encourage community feedback.

17.  
Concepts: personal anecdote, share experiences related to software use  
Relationship: Both involve users sharing their personal stories related to the software.  
Criteria: Users recount experiences that highlight the impact of the software in education.  
Phrase: Share personal software experiences.

18.  
Concepts: address functionality, explain component functionality  
Relationship: Both focus on clarifying how software features operate.  
Criteria: Designers explain issues and functionalities related to software components.  
Phrase: Explain software functionality.

19.  
Concepts: explain design rationale, explain design philosophy  
Relationship: Both involve articulating the thought behind software design choices.  
Criteria: Designers share the reasoning and principles guiding their design decisions.  
Phrase: Explain design rationale.

20.  
Concepts: seek efficiency improvements, advocate design refinement  
Relationship: Both relate to enhancing user experience through design changes.  
Criteria: Designers express desires to improve efficiency and user interface simplicity.  
Phrase: Advocate for design improvements.

21.  
Concepts: provide user feedback, provide design suggestions  
Relationship: Both involve users suggesting enhancements for the software.  
Criteria: Users offer suggestions to improve software functionality and usability.  
Phrase: Provide design suggestions.
---