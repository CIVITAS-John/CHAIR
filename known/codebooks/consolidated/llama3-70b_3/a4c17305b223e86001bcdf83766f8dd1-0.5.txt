You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: effort constraints, polyglot with time constraints, juggles multiple languages and time constraints
- Faces effort constraints due to limited time for each language.
- Knows many languages but lacks time to dedicate to each one, highlighting the importance of efficient learning.
- The participant juggles multiple languages and time constraints.

2.
Concepts: expresses confidence in netlogo skills, feels competent in netlogo and aims to help others
- The participant expresses confidence in their abilities or competence in using NetLogo.
- The participant expresses a desire to help others learn NetLogo and feels competent in doing so.

3.
Concepts: valuing teaching role, prefer to help others learn netlogo
- Valuing the teaching role and helping others learn NetLogo or programming.
- Interviewees prefer to help others learn NetLogo.

4.
Concepts: acknowledges tacit knowledge, reflects on undocumented knowledge, oral tradition and undocumented knowledge
- The participant acknowledges the importance of tacit knowledge in software development.
- Participant reflects on undocumented knowledge in software development.
- Reflects on the importance of oral tradition and undocumented knowledge in software development.

5.
Concepts: emphasizes oral tradition, identifies knowledge gaps
- The participant emphasizes the importance of oral tradition in knowledge transmission.
- The interviewee identifies gaps in knowledge transfer, particularly in oral traditions.

6.
Concepts: establishes credibility, hints at depth of knowledge
- The participant underscores their credibility and prior experiences in computer programming.
- Reveals the interviewee's prior experience and expertise in computer programming.

7.
Concepts: suggests importance of instruction writing, highlights importance of clear instructions
- The interviewee suggests that writing instructions is a key capability for working with AI.
- The interviewee highlights the importance of people's ability to write clear instructions.

8.
Concepts: recognizing need for user education, requiring education on ai limitations
- Interviewee recognizes the need for user education in AI use.
- The participant recognizes the need for education on AI limitations and potential biases.

9.
Concepts: emphasizes user skills, emphasizes importance of expertise, emphasizing importance of user expertise
- The interviewee emphasizes the importance of user skills in communicating effectively with AI systems.
- The interviewee emphasizes the need for expertise when working with AI-driven interfaces to understand and fix errors.
- Participant emphasizes the importance of user expertise.

10.
Concepts: identifies need for efficient learning tools, identifying need for context retention in learning tools
- The user identifies the need for efficient learning tools.
- The participant identifies the need for a system to retain context in learning tools.

11.
Concepts: highlighting cognitive load concerns, recognizing cognitive load in error handling
- The participant highlights cognitive load concerns.
- Participant recognizes cognitive load in error handling.

12.
Concepts: describes fragmented learning, reflect on fragmented learning
- The interviewee describes fragmented learning sessions.
- The participant reflects on how professionals learn in fragments.

13.
Concepts: developers vs. good teachers, system developers vs. effective teachers
- Notes that developers might not be good teachers.
- Highlights the distinction between system developers and effective teachers.

14.
Concepts: human-effort: decision, chooses manual ai code integration
- The interviewee decides to use AI-generated code despite having the ability to run it themselves.
- The interviewee chooses to manually integrate AI-generated code.

15.
Concepts: executes ai-generated code, deciding to use ai-generated code
- Chooses to execute AI-generated code.
- The participant decides to copy and run the AI-generated code, despite some reservations or concerns.

16.
Concepts: adapting to ai-generated code, selectively adopts ai-generated code
- Adapts based on AI-generated code.
- Selectively adopts AI-generated code into their model.

17.
Concepts: adapting existing code, customizing ai-generated code
- The participant uses AI to adapt existing code, seeking to modify and improve it.
- The participant customizes the AI-generated code by selectively copying parts of it into their model.

18.
Concepts: adjusts model setup, prepares model structure before ai assistance
- The participant adjusts their model setup based on the AI-generated code.
- The participant sets up the model structure before using AI to generate code.

19.
Concepts: uses ai-generated code as reference, writes code manually with ai guidance
- The participant uses AI-generated code as a reference.
- Writes code manually with AI guidance, using generated code as reference.

20.
Concepts: ai-assisted help seeking, proposing ai assistance in summarizing coding issues
- The interviewee suggests that AI could assist users in seeking help by generating summaries of their coding issues.
- The quote proposes AI assistance in summarizing coding issues for user group discussions.

21.
Concepts: suggests ai debugging, proposing automated problem summarization
- The participant suggests using AI for debugging and error fixing.
- The participant proposes automated problem summarization and debugging features.

22.
Concepts: assistance to optimize & debug, envisioning ai as a coding assistant
- User wants AI assistance in optimizing and debugging code.
- Envisioning the AI as a coding assistant that can optimize code.

23.
Concepts: suggest ai code optimization, proposing ai-inspired code modifications
- The interviewee suggests that AI can help optimize code by providing feedback.
- Interviewees propose AI-inspired code improvements.

24.
Concepts: identifying potential improvements, realizing code improvement opportunities, informing ai-assisted interface design
- Identifies potential improvements in AI responses, reasoning through errors.
- Recognizes opportunities for code improvement through AI-driven interfaces.
- Identifying potential design improvements for AI-assisted programming interfaces.

25.
Concepts: ai-assisted coding, proposing ai fixes
- Using AI to implement ideas or fix code.
- Proposes own solutions or fixes to AI-generated code or output.

26.
Concepts: seeking ai-generated code, seeking alternative solutions
- Seeks AI-generated code or solutions.
- Seeks alternative solutions, using AI to optimize code.

27.
Concepts: code validation, seeks error-free code
- Recognizes the importance of code validation and debugging.
- Seeks error-free code and verification of code correctness.

28.
Concepts: questioning ai's knowledge boundaries, asking chatgpt to verify code and produce no more bugs
- Questions AI's knowledge boundaries in verifying code and producing no more bugs.
- Asks ChatGPT to verify code and produce no more bugs.

29.
Concepts: compares ai-generated code, expert evaluation of ai-generated code
- The participant compares AI-generated code with initial code, evaluating its quality and effectiveness.
- Evaluates AI-generated code and makes decisions based on expertise.

30.
Concepts: evaluates ai instructions and code suggestions, showing the ability to critically evaluate and adapt the ai's suggestions
- Evaluates the AI system's instructions and code suggestions.
- Critically evaluates and adapts AI's suggestions for code improvement.

31.
Concepts: commenting on ai's interpretation, commenting on ai-generated code and documentation
- Commenting on AI's interpretation of code and its potential impact on the user's understanding.
- Comments on AI-generated code and documentation.

32.
Concepts: summarizes ai-generated code, summarizes code
- Summarizes AI-generated code.
- Summarizes code, reading and commenting on it, thinking about AI's understanding of the request.
===
Here are the definitions for each code:

---
1.
Concepts: effort constraints, polyglot with time constraints, juggles multiple languages and time constraints
Relationship: The concepts are related in that they all describe the challenges of managing multiple languages and limited time.
Criteria: Participants face effort constraints due to limited time for each language, juggle multiple languages, and prioritize efficient learning.
Phrase: Juggling multiple languages under time constraints.

2.
Concepts: expresses confidence in netlogo skills, feels competent in netlogo and aims to help others
Relationship: The concepts are related in that they all describe the participant's confidence and willingness to help others.
Criteria: Participants express confidence in their NetLogo skills and aim to help others learn.
Phrase: Confidently helping others with NetLogo.

3.
Concepts: valuing teaching role, prefer to help others learn netlogo
Relationship: The concepts are related in that they both describe the importance of teaching and helping others.
Criteria: Participants value the teaching role and prefer to help others learn NetLogo.
Phrase: Valuing the teaching role.

4.
Concepts: acknowledges tacit knowledge, reflects on undocumented knowledge, oral tradition and undocumented knowledge
Relationship: The concepts are related in that they all describe the importance of unspoken knowledge and traditions.
Criteria: Participants acknowledge the importance of tacit knowledge, reflect on undocumented knowledge, and recognize oral traditions.
Phrase: Acknowledging tacit knowledge.

5.
Concepts: emphasizes oral tradition, identifies knowledge gaps
Relationship: The concepts are related in that they both describe the importance of oral traditions and the need to fill knowledge gaps.
Criteria: Participants emphasize the importance of oral traditions and identify gaps in knowledge transfer.
Phrase: Emphasizing oral traditions.

6.
Concepts: establishes credibility, hints at depth of knowledge
Relationship: The concepts are related in that they both describe the participant's credibility and expertise.
Criteria: Participants establish credibility and hint at the depth of their knowledge.
Phrase: Establishing credibility.

7.
Concepts: suggests importance of instruction writing, highlights importance of clear instructions
Relationship: The concepts are related in that they both describe the importance of clear instructions.
Criteria: Participants suggest that writing instructions is key and highlight the importance of clear instructions.
Phrase: Highlighting clear instructions.

8.
Concepts: recognizing need for user education, requiring education on ai limitations
Relationship: The concepts are related in that they both describe the need for user education.
Criteria: Participants recognize the need for user education on AI limitations and potential biases.
Phrase: Recognizing the need for user education.

9.
Concepts: emphasizes user skills, emphasizes importance of expertise, emphasizing importance of user expertise
Relationship: The concepts are related in that they all describe the importance of user skills and expertise.
Criteria: Participants emphasize the importance of user skills, expertise, and effective communication with AI systems.
Phrase: Emphasizing user expertise.

10.
Concepts: identifies need for efficient learning tools, identifying need for context retention in learning tools
Relationship: The concepts are related in that they both describe the need for efficient learning tools.
Criteria: Participants identify the need for efficient learning tools that retain context.
Phrase: Identifying the need for efficient learning tools.

11.
Concepts: highlighting cognitive load concerns, recognizing cognitive load in error handling
Relationship: The concepts are related in that they both describe cognitive load concerns.
Criteria: Participants highlight cognitive load concerns and recognize cognitive load in error handling.
Phrase: Highlighting cognitive load concerns.

12.
Concepts: describes fragmented learning, reflect on fragmented learning
Relationship: The concepts are related in that they both describe fragmented learning.
Criteria: Participants describe and reflect on fragmented learning sessions.
Phrase: Describing fragmented learning.

13.
Concepts: developers vs. good teachers, system developers vs. effective teachers
Relationship: The concepts are related in that they both describe the distinction between developers and effective teachers.
Criteria: Participants note that developers might not be good teachers and highlight the distinction between system developers and effective teachers.
Phrase: Distinguishing between developers and effective teachers.

14.
Concepts: human-effort: decision, chooses manual ai code integration
Relationship: The concepts are related in that they both describe the participant's decision to use AI-generated code.
Criteria: Participants decide to use AI-generated code despite having the ability to run it themselves.
Phrase: Choosing manual AI code integration.

15.
Concepts: executes ai-generated code, deciding to use ai-generated code
Relationship: The concepts are related in that they both describe the participant's decision to execute AI-generated code.
Criteria: Participants decide to copy and run the AI-generated code despite some reservations or concerns.
Phrase: Deciding to use AI-generated code.

16.
Concepts: adapting to ai-generated code, selectively adopts ai-generated code
Relationship: The concepts are related in that they both describe the participant's adaptation to AI-generated code.
Criteria: Participants adapt to AI-generated code and selectively adopt it into their model.
Phrase: Adapting to AI-generated code.

17.
Concepts: adapting existing code, customizing ai-generated code
Relationship: The concepts are related in that they both describe the participant's adaptation of AI-generated code.
Criteria: Participants adapt existing code and customize AI-generated code.
Phrase: Adapting and customizing AI-generated code.

18.
Concepts: adjusts model setup, prepares model structure before ai assistance
Relationship: The concepts are related in that they both describe the participant's preparation for AI assistance.
Criteria: Participants adjust their model setup and prepare the model structure before using AI-generated code.
Phrase: Preparing the model setup.

19.
Concepts: uses ai-generated code as reference, writes code manually with ai guidance
Relationship: The concepts are related in that they both describe the participant's use of AI-generated code as a reference.
Criteria: Participants use AI-generated code as a reference and write code manually with AI guidance.
Phrase: Using AI-generated code as a reference.

20.
Concepts: ai-assisted help seeking, proposing ai assistance in summarizing coding issues
Relationship: The concepts are related in that they both describe the participant's suggestion for AI assistance.
Criteria: Participants suggest AI assistance in seeking help by generating summaries of coding issues.
Phrase: Proposing AI-assisted help seeking.

21.
Concepts: suggests ai debugging, proposing automated problem summarization
Relationship: The concepts are related in that they both describe the participant's suggestion for AI debugging.
Criteria: Participants suggest using AI for debugging and propose automated problem summarization.
Phrase: Proposing AI debugging.

22.
Concepts: assistance to optimize & debug, envisioning ai as a coding assistant
Relationship: The concepts are related in that they both describe the participant's vision for AI assistance.
Criteria: Participants want AI assistance in optimizing and debugging code and envision AI as a coding assistant.
Phrase: Envisioning AI as a coding assistant.

23.
Concepts: suggest ai code optimization, proposing ai-inspired code modifications
Relationship: The concepts are related in that they both describe the participant's suggestion for AI code optimization.
Criteria: Participants suggest AI code optimization and propose AI-inspired code modifications.
Phrase: Proposing AI code optimization.

24.
Concepts: identifying potential improvements, realizing code improvement opportunities, informing ai-assisted interface design
Relationship: The concepts are related in that they all describe the participant's identification of potential improvements.
Criteria: Participants identify potential improvements, recognize opportunities for code improvement, and inform AI-assisted interface design.
Phrase: Identifying potential improvements.

25.
Concepts: ai-assisted coding, proposing ai fixes
Relationship: The concepts are related in that they both describe the participant's use of AI-assisted coding.
Criteria: Participants use AI to implement ideas or fix code and propose AI fixes.
Phrase: Proposing AI fixes.

26.
Concepts: seeking ai-generated code, seeking alternative solutions
Relationship: The concepts are related in that they both describe the participant's seeking of AI-generated code or alternative solutions.
Criteria: Participants seek AI-generated code or alternative solutions to optimize code.
Phrase: Seeking AI-generated code.

27.
Concepts: code validation, seeks error-free code
Relationship: The concepts are related in that they both describe the participant's seeking of error-free code.
Criteria: Participants recognize the importance of code validation and seek error-free code.
Phrase: Seeking error-free code.

28.
Concepts: questioning ai's knowledge boundaries, asking chatgpt to verify code and produce no more bugs
Relationship: The concepts are related in that they both describe the participant's questioning of AI's knowledge boundaries.
Criteria: Participants question AI's knowledge boundaries in verifying code and producing no more bugs.
Phrase: Questioning AI's knowledge boundaries.

29.
Concepts: compares ai-generated code, expert evaluation of ai-generated code
Relationship: The concepts are related in that they both describe the participant's evaluation of AI-generated code.
Criteria: Participants compare AI-generated code, evaluate its quality, and make decisions based on expertise.
Phrase: Evaluating AI-generated code.

30.
Concepts: evaluates ai instructions and code suggestions, showing the ability to critically evaluate and adapt the ai's suggestions
Relationship: The concepts are related in that they both describe the participant's evaluation of AI instructions and code suggestions.
Criteria: Participants evaluate AI instructions and code suggestions, critically evaluate, and adapt AI's suggestions.
Phrase: Critically evaluating AI's suggestions.

31.
Concepts: commenting on ai's interpretation, commenting on ai-generated code and documentation
Relationship: The concepts are related in that they both describe the participant's commenting on AI's interpretation.
Criteria: Participants comment on AI's interpretation, AI-generated code, and documentation.
Phrase: Commenting on AI's interpretation.

32.
Concepts: summarizes ai-generated code, summarizes code
Relationship: The concepts are related in that they both describe the participant's summarization of code.
Criteria: Participants summarize AI-generated code, read, and comment on it, thinking about AI's understanding of the request.
Phrase: Summarizing AI-generated code.