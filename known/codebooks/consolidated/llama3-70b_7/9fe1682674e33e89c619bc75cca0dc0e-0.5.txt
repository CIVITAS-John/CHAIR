You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: using ai code under time pressure, overwriting with ai-generated code, using ai-generated code fully
- The participant uses AI-generated code under time constraints.
- The participant overwrites existing code with AI-generated output due to time constraints.
- The participant uses AI-generated code fully, often due to time constraints or expediency.

2.
Concepts: avoids direct copying from ai, avoiding direct code copying
- The participant avoids direct copying and pasting from AI-generated code.
- The participant avoids direct code copying, using generated code as a reference instead.

3.
Concepts: selectively copies ai code, reuses ai-generated code
- The participant selectively copies AI-generated code into their model.
- The participant decides to use AI-generated code, copying and pasting it into their work.

4.
Concepts: analyzes ai-generated code, understanding ai-generated code
- The participant analyzes and reasons through AI-generated code.
- The participant tries to understand the logic behind AI-generated code.

5.
Concepts: learning through comparison, compares ai-generated code with initial code
- The participant compares their own understanding with the AI-generated code.
- The participant compares the AI-generated code with the initial code.

6.
Concepts: uses ai-generated code as a reference, referring to generated code or seeking a reference
- The participant selectively uses AI-generated code as a reference.
- The participant refers to the generated code or seeks a reference to guide their development.

7.
Concepts: adapts code using ai, ai-assisted code adjustments
- The participant adapts code based on AI-generated suggestions.
- Participant uses AI for specific code adjustments or modifications.

8.
Concepts: summarizes ai-generated code, comments on ai-generated code
- The participant summarizes or interprets the code generated by AI.
- The participant comments on code output, summarizing and understanding AI responses.

9.
Concepts: reviews ai generated code, reads and comments on ai-generated code
- The interviewee reviews or examines code generated by the AI system.
- The interviewee reads and comments on AI-generated code, summarizing its functionality.

10.
Concepts: reviews ai output, evaluates ai-generated code
- The participant reads through AI-generated code outputs.
- The participant reads and evaluates the AI-generated code.
- The participant evaluates AI-generated code and provides feedback.

11.
Concepts: requests code modifications, requests ai-driven model modification
- Requests AI to modify code according to user ideas.
- Asks AI to modify a model based on personal ideas.

12.
Concepts: seeks ai-generated code, requests ai code generation
- Seeks AI-generated code or assistance for code specifics.
- Requests AI to generate code for a specific task.

13.
Concepts: seeks ai verification, requests ai verification, asks ai to verify code
- The participant seeks error-free code and verification from AI.
- The participant requests verification of code correctness from AI.
- The participant asks ChatGPT to verify code and produce no more bugs.

14.
Concepts: demonstrating thorough code review, emphasizing thorough code validation
- Participants demonstrate thorough code review by evaluating AI-generated code.
- Participants emphasize the importance of thoroughly checking and validating AI-generated code.

15.
Concepts: valuing ai's suggestions, valuing ai's potential for code improvement
- Participants value AI's suggestions for code improvement.
- AI has the potential to improve code quality and provide suggestions.

16.
Concepts: envisioning ai for code optimization, considering ai for code optimization
- Participants envision AI for code optimization.
- Participants consider using AI for code optimization.

17.
Concepts: prefers readable code, prioritizes code readability
- Participant prefers readable code.
- Participant prioritizes code readability over complexity.

18.
Concepts: prioritizes code simplicity, prefers simple, maintainable code
- Participant prioritizes code simplicity and maintainability.
- Participant prefers simple, maintainable code.

19.
Concepts: discusses code quality and complexity, discusses code readability and simplicity
- Participant discusses code quality and complexity.
- Participant discusses code readability and simplicity.

20.
Concepts: appreciating executable code, appreciating readable ai-generated code, appreciating ai functionality
- Interviewee appreciates the ability to run AI-generated code.
- Interviewee appreciates the ease of understanding AI-generated code.
- Participant appreciates AI's code generation capabilities.

21.
Concepts: valuing ai documentation skills, valuing readable generated code
- Participant values AI's documentation skills and generated code readability.
- Participant appreciates easy-to-read generated code with comments and documentation.

22.
Concepts: praising ai's code commenting and documentation, appreciating ai code organization and documentation
- Participant praises AI's code commenting and documentation capabilities.
- Appreciates the code organization and documentation features of the AI.

23.
Concepts: valuing automatic code integration, preferring automatic code integration
- Participant values and appreciates automatic code integration feature of the AI tool.
- Participant likes the idea of automatic code integration, valuing efficiency.

24.
Concepts: integrating ai-generated code, desiring automatic code integration
- Participant values integration of AI-generated code into the model.
- Participant desires automatic integration of AI-generated code into the model.

25.
Concepts: seeing ai as a time-saver, believing ai can save time
- Participants see AI as a time-saving solution for learning or working with NetLogo.
- Participants believe that AI can save time in learning new extensions of NetLogo.

26.
Concepts: arguing for ai efficiency, advocating for ai adoption
- Participants argue that AI can increase efficiency and save time.
- Participants advocate for the adoption of AI to save time and increase efficiency.

27.
Concepts: appreciating ai efficiency gains, appreciating time-saving benefits
- Participants appreciate AI's ability to save time and effort.
- Participants appreciate and acknowledge the time-saving benefits of AI-generated solutions.

28.
Concepts: recognizing ai time-saving potential, highlighting ai time-saving benefits
- Participants perceive AI as a time-saving tool.
- Participants highlight the benefit of AI in saving time.

29.
Concepts: highlighting ai's prompt feedback, highlighting ai's instant feedback
- Participants highlight or suggest the potential of AI to provide timely feedback.
- Participants compare AI to other resources, highlighting the benefit of instant feedback.

30.
Concepts: valuing immediate feedback, appreciating chatgpt's feedback, appreciating timely feedback
- Participants value and appreciate the immediate feedback provided by AI.
- Participants appreciate timely feedback provided by ChatGPT.
- Participants appreciate timely feedback and quick error analysis from AI.

31.
Concepts: finding ai easy to use, finding ai tool intuitive, finding ai interface intuitive
- Participants find AI easy to use and intuitive.
- Participant finds the AI tool intuitive to use.
- Participants find the AI interface easy to use and intuitive.

32.
Concepts: valuing clear explanations, appreciating non-technical explanations, valuing ai communication
- Participants value or appreciate clear and non-technical explanations provided by the AI.
- Participants appreciate AI's ability to explain things in a clear and non-technical manner.
- Participants value AI communication, noting that it provides clear and less technical explanations.
===
Here are the definitions for each code:

---
1.
Concepts: using ai code under time pressure, overwriting with ai-generated code, using ai-generated code fully
Relationship: The concepts are related to the participant's behavior of using AI-generated code under time constraints, which may lead to overwriting existing code or using AI-generated code fully.
Criteria: Participants use AI-generated code under time pressure, overwriting existing code or using it fully.
Phrase: Using AI-generated code under time pressure.

2.
Concepts: avoids direct copying from ai, avoiding direct code copying
Relationship: The concepts are related to the participant's behavior of avoiding direct copying from AI-generated code, instead using it as a reference.
Criteria: Participants avoid direct copying from AI-generated code, using it as a reference instead.
Phrase: Avoiding direct copying from AI.

3.
Concepts: selectively copies ai code, reuses ai-generated code
Relationship: The concepts are related to the participant's behavior of selectively copying and reusing AI-generated code.
Criteria: Participants selectively copy and reuse AI-generated code.
Phrase: Selectively copying AI-generated code.

4.
Concepts: analyzes ai-generated code, understanding ai-generated code
Relationship: The concepts are related to the participant's behavior of analyzing and understanding AI-generated code.
Criteria: Participants analyze and understand AI-generated code.
Phrase: Analyzing AI-generated code.

5.
Concepts: learning through comparison, compares ai-generated code with initial code
Relationship: The concepts are related to the participant's behavior of comparing AI-generated code with their initial code to learn.
Criteria: Participants compare AI-generated code with their initial code to learn.
Phrase: Comparing AI-generated code with initial code.

6.
Concepts: uses ai-generated code as a reference, referring to generated code or seeking a reference
Relationship: The concepts are related to the participant's behavior of using AI-generated code as a reference or seeking a reference.
Criteria: Participants use AI-generated code as a reference or seek a reference.
Phrase: Using AI-generated code as a reference.

7.
Concepts: adapts code using ai, ai-assisted code adjustments
Relationship: The concepts are related to the participant's behavior of adapting code using AI-generated suggestions.
Criteria: Participants adapt code using AI-generated suggestions.
Phrase: Adapting code using AI.

8.
Concepts: summarizes ai-generated code, comments on ai-generated code
Relationship: The concepts are related to the participant's behavior of summarizing and commenting on AI-generated code.
Criteria: Participants summarize and comment on AI-generated code.
Phrase: Summarizing AI-generated code.

9.
Concepts: reviews ai generated code, reads and comments on ai-generated code
Relationship: The concepts are related to the participant's behavior of reviewing and commenting on AI-generated code.
Criteria: Participants review and comment on AI-generated code.
Phrase: Reviewing AI-generated code.

10.
Concepts: reviews ai output, evaluates ai-generated code
Relationship: The concepts are related to the participant's behavior of reviewing and evaluating AI-generated code.
Criteria: Participants review and evaluate AI-generated code.
Phrase: Evaluating AI-generated code.

11.
Concepts: requests code modifications, requests ai-driven model modification
Relationship: The concepts are related to the participant's behavior of requesting code modifications using AI.
Criteria: Participants request code modifications using AI.
Phrase: Requesting code modifications using AI.

12.
Concepts: seeks ai-generated code, requests ai code generation
Relationship: The concepts are related to the participant's behavior of seeking AI-generated code or requesting code generation.
Criteria: Participants seek AI-generated code or request code generation.
Phrase: Seeking AI-generated code.

13.
Concepts: seeks ai verification, requests ai verification, asks ai to verify code
Relationship: The concepts are related to the participant's behavior of seeking AI verification or requesting code verification.
Criteria: Participants seek AI verification or request code verification.
Phrase: Seeking AI verification.

14.
Concepts: demonstrating thorough code review, emphasizing thorough code validation
Relationship: The concepts are related to the participant's behavior of demonstrating thorough code review and emphasizing code validation.
Criteria: Participants demonstrate thorough code review and emphasize code validation.
Phrase: Demonstrating thorough code review.

15.
Concepts: valuing ai's suggestions, valuing ai's potential for code improvement
Relationship: The concepts are related to the participant's behavior of valuing AI's suggestions for code improvement.
Criteria: Participants value AI's suggestions for code improvement.
Phrase: Valuing AI's suggestions.

16.
Concepts: envisioning ai for code optimization, considering ai for code optimization
Relationship: The concepts are related to the participant's behavior of envisioning or considering AI for code optimization.
Criteria: Participants envision or consider AI for code optimization.
Phrase: Envisioning AI for code optimization.

17.
Concepts: prefers readable code, prioritizes code readability
Relationship: The concepts are related to the participant's behavior of preferring readable code and prioritizing code readability.
Criteria: Participants prefer readable code and prioritize code readability.
Phrase: Preferring readable code.

18.
Concepts: prioritizes code simplicity, prefers simple, maintainable code
Relationship: The concepts are related to the participant's behavior of prioritizing code simplicity and preferring simple, maintainable code.
Criteria: Participants prioritize code simplicity and prefer simple, maintainable code.
Phrase: Prioritizing code simplicity.

19.
Concepts: discusses code quality and complexity, discusses code readability and simplicity
Relationship: The concepts are related to the participant's behavior of discussing code quality and complexity, as well as code readability and simplicity.
Criteria: Participants discuss code quality and complexity, as well as code readability and simplicity.
Phrase: Discussing code quality and complexity.

20.
Concepts: appreciating executable code, appreciating readable ai-generated code, appreciating ai functionality
Relationship: The concepts are related to the participant's behavior of appreciating executable code, readable AI-generated code, and AI functionality.
Criteria: Participants appreciate executable code, readable AI-generated code, and AI functionality.
Phrase: Appreciating AI-generated code.

21.
Concepts: valuing ai documentation skills, valuing readable generated code
Relationship: The concepts are related to the participant's behavior of valuing AI documentation skills and readable generated code.
Criteria: Participants value AI documentation skills and readable generated code.
Phrase: Valuing AI documentation skills.

22.
Concepts: praising ai's code commenting and documentation, appreciating ai code organization and documentation
Relationship: The concepts are related to the participant's behavior of praising AI's code commenting and documentation, and appreciating code organization and documentation.
Criteria: Participants praise AI's code commenting and documentation, and appreciate code organization and documentation.
Phrase: Praising AI's code commenting and documentation.

23.
Concepts: valuing automatic code integration, preferring automatic code integration
Relationship: The concepts are related to the participant's behavior of valuing and preferring automatic code integration.
Criteria: Participants value and prefer automatic code integration.
Phrase: Valuing automatic code integration.

24.
Concepts: integrating ai-generated code, desiring automatic code integration
Relationship: The concepts are related to the participant's behavior of integrating AI-generated code and desiring automatic code integration.
Criteria: Participants integrate AI-generated code and desire automatic code integration.
Phrase: Integrating AI-generated code.

25.
Concepts: seeing ai as a time-saver, believing ai can save time
Relationship: The concepts are related to the participant's behavior of seeing AI as a time-saver and believing AI can save time.
Criteria: Participants see AI as a time-saver and believe AI can save time.
Phrase: Seeing AI as a time-saver.

26.
Concepts: arguing for ai efficiency, advocating for ai adoption
Relationship: The concepts are related to the participant's behavior of arguing for AI efficiency and advocating for AI adoption.
Criteria: Participants argue for AI efficiency and advocate for AI adoption.
Phrase: Arguing for AI efficiency.

27.
Concepts: appreciating ai efficiency gains, appreciating time-saving benefits
Relationship: The concepts are related to the participant's behavior of appreciating AI efficiency gains and time-saving benefits.
Criteria: Participants appreciate AI efficiency gains and time-saving benefits.
Phrase: Appreciating AI efficiency gains.

28.
Concepts: recognizing ai time-saving potential, highlighting ai time-saving benefits
Relationship: The concepts are related to the participant's behavior of recognizing AI time-saving potential and highlighting time-saving benefits.
Criteria: Participants recognize AI time-saving potential and highlight time-saving benefits.
Phrase: Recognizing AI time-saving potential.

29.
Concepts: highlighting ai's prompt feedback, highlighting ai's instant feedback
Relationship: The concepts are related to the participant's behavior of highlighting AI's prompt feedback and instant feedback.
Criteria: Participants highlight AI's prompt feedback and instant feedback.
Phrase: Highlighting AI's prompt feedback.

30.
Concepts: valuing immediate feedback, appreciating chatgpt's feedback, appreciating timely feedback
Relationship: The concepts are related to the participant's behavior of valuing immediate feedback, appreciating ChatGPT's feedback, and appreciating timely feedback.
Criteria: Participants value immediate feedback, appreciate ChatGPT's feedback, and appreciate timely feedback.
Phrase: Valuing immediate feedback.

31.
Concepts: finding ai easy to use, finding ai tool intuitive, finding ai interface intuitive
Relationship: The concepts are related to the participant's behavior of finding AI easy to use, intuitive, and easy to interface with.
Criteria: Participants find AI easy to use, intuitive, and easy to interface with.
Phrase: Finding AI easy to use.

32.
Concepts: valuing clear explanations, appreciating non-technical explanations, valuing ai communication
Relationship: The concepts are related to the participant's behavior of valuing clear explanations, appreciating non-technical explanations, and valuing AI communication.
Criteria: Participants value clear explanations, appreciate non-technical explanations, and value AI communication.
Phrase: Valuing clear explanations.