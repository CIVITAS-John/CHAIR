You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (15 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
15. 
Concepts: {Repeat the input 15}
Relationship: {What is logical relationship between concepts in code 15, or N/A if not applicable}
Criteria: {Who did what, and how for code 15}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: request user manual, request additional resources
- Users request and reiterate their need for a user manual for the software.
- Users request resources such as manuals or guides for the software.

2.
Concepts: seek technical support, request guidance for usage
- Users request assistance or guidance on using the software or platform.
- Users ask for guidance on operating specific features of the software.

3.
Concepts: make feature requests, propose design suggestions
- Users request new features or improvements for the software.
- Users propose additional features or improvements for the software.

4.
Concepts: acknowledge provided resources, acknowledge designers' dedication
- Users acknowledge and appreciate the resources and efforts of designers in the community.
- Users acknowledge and appreciate the efforts and dedication of the designers.

5.
Concepts: community building, engage in positive interactions
- Users express gratitude or engage positively with the community.
- Users engage positively with one another, expressing agreement or gratitude.

6.
Concepts: compliment the software, describe student engagement
- Users praise the software's effectiveness and describe successful classroom experiences.
- Users share positive experiences with the software's impact on student engagement.

7.
Concepts: express user satisfaction, highlight software usability
- Users express satisfaction and appreciation for specific features of the software.
- Users express satisfaction with the software's practicality compared to other options.

8.
Concepts: validate user request, agree to implement user suggestions
- Designers validate user requests or suggestions, indicating they will be considered.
- Designers acknowledge user requests and commit to including them in future updates.

9.
Concepts: apologize for inconvenience, apologies and politeness
- Designers express apologies for any disturbances or inconveniences caused.
- Expressions of politeness, apologies, or acknowledgment of potential inconvenience by the designers.

10.
Concepts: clarify version details, clarify testing status
- Designers clarify the type of version available and being discussed.
- Designers clarify the purpose or limitations of a specific version of a product.

11.
Concepts: explain software features, clarify component functionality
- Designers explain the operation and functions of specific software features.
- A designer describes the functionalities of specific software components.

12.
Concepts: announce new features, release new features
- Designers announce new features and updates in version release notes.
- Designers announce the release of new software versions and their features.

13.
Concepts: announce software updates, announce product improvements
- Designers make announcements regarding updates or plans for the software.
- Designers announce a planned change to improve the software in future updates.

14.
Concepts: share update timelines, confirm upcoming updates
- Designers provide a timeline for upcoming updates and releases.
- Designers confirm upcoming feature updates and their timelines.

15.
Concepts: outline feature roadmap, give a timeline of feature development
- Designers outline a plan for the order of feature development.
- Designer outlines a timeline for the development of a specific feature.
===
---
Definitions for each code (15 in total):
1.
Concepts: request user manual, request additional resources  
Relationship: Both concepts involve users expressing their need for guidance materials related to the software.  
Criteria: Users actively seek a user manual and additional resources to better understand the software.  
Phrase: Request guidance materials.

2.
Concepts: seek technical support, request guidance for usage  
Relationship: Both concepts involve users asking for help in understanding or using the software effectively.  
Criteria: Users seek assistance and guidance on how to operate the software and its features.  
Phrase: Seek assistance.

3.
Concepts: make feature requests, propose design suggestions  
Relationship: Both concepts involve users suggesting enhancements or new functionalities for the software.  
Criteria: Users propose new features and improvements to enhance the software's functionality.  
Phrase: Propose enhancements.

4.
Concepts: acknowledge provided resources, acknowledge designers' dedication  
Relationship: Both concepts involve users recognizing and appreciating the efforts of designers and the resources provided.  
Criteria: Users express appreciation for the resources and dedication shown by designers in the community.  
Phrase: Acknowledge contributions.

5.
Concepts: community building, engage in positive interactions  
Relationship: Both concepts involve users fostering a supportive and positive community atmosphere.  
Criteria: Users engage positively with one another, contributing to community building through gratitude and agreement.  
Phrase: Foster community.

6.
Concepts: compliment the software, describe student engagement  
Relationship: Both concepts involve users sharing positive feedback about the software's impact on education.  
Criteria: Users praise the software's effectiveness and share experiences of enhanced student engagement.  
Phrase: Share positive feedback.

7.
Concepts: express user satisfaction, highlight software usability  
Relationship: Both concepts involve users articulating their contentment with the software's features and usability.  
Criteria: Users express satisfaction with the software's practicality and specific features compared to alternatives.  
Phrase: Express satisfaction.

8.
Concepts: validate user request, agree to implement user suggestions  
Relationship: Both concepts involve designers acknowledging and committing to user input.  
Criteria: Designers validate and agree to consider user requests and suggestions for future updates.  
Phrase: Acknowledge user input.

9.
Concepts: apologize for inconvenience, apologies and politeness  
Relationship: Both concepts involve designers expressing regret and maintaining politeness in communication.  
Criteria: Designers apologize for any inconveniences and maintain a polite tone in their interactions.  
Phrase: Express apologies.

10.
Concepts: clarify version details, clarify testing status  
Relationship: Both concepts involve designers providing clear information about the software's version and its testing.  
Criteria: Designers clarify the details and purpose of the software version being discussed.  
Phrase: Provide clarifications.

11.
Concepts: explain software features, clarify component functionality  
Relationship: Both concepts involve designers detailing how specific features and components of the software work.  
Criteria: Designers explain the operation and functionalities of various software features and components.  
Phrase: Explain functionalities.

12.
Concepts: announce new features, release new features  
Relationship: Both concepts involve designers communicating updates regarding new functionalities in the software.  
Criteria: Designers announce and release new features in version updates.  
Phrase: Announce updates.

13.
Concepts: announce software updates, announce product improvements  
Relationship: Both concepts involve designers making announcements about changes and enhancements to the software.  
Criteria: Designers announce updates and planned improvements for the software.  
Phrase: Make announcements.

14.
Concepts: share update timelines, confirm upcoming updates  
Relationship: Both concepts involve designers providing information about when updates will occur.  
Criteria: Designers share timelines and confirm the schedule for upcoming software updates.  
Phrase: Provide timelines.

15.
Concepts: outline feature roadmap, give a timeline of feature development  
Relationship: Both concepts involve designers planning and communicating the development schedule for features.  
Criteria: Designers outline the order and timeline for the development of specific software features.  
Phrase: Outline development plans.
---