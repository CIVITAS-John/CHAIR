You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: evaluate software, compare software to others
- Users evaluate the usability or effectiveness of the software.
- Users compare the software to other applications.

2.
Concepts: feature benefits, highlighting features and benefits
- Highlights or explanations of the benefits or advantages of specific features or functionalities.
- Designers emphasize the value of features to users.

3.
Concepts: explaining feature importance, explaining feature significance
- Explaining the importance or significance of a specific feature or development.
- Explanations of the significance or importance of specific features in Physics Lab.

4.
Concepts: emphasizing ease of use, highlighting user convenience
- Speakers promote or highlight the ease of use of a feature.
- Users highlight or emphasize the convenience or benefits of a feature.

5.
Concepts: innovative feature, describing innovative features
- Showcasing innovative or unique features of the app.
- Designer describes innovative or unique features of the software.

6.
Concepts: educating users, user understanding
- Designers educate users and promote understanding of features.
- Ensuring users understand a concept or feature, often through explanation or example

7.
Concepts: instruction, providing tutorial information
- Providing instruction or explanation to educate or clarify something.
- Providing educational or tutorial-like information on a specific topic or feature.

8.
Concepts: providing prompts, facilitating learning
- Providing guidance or prompts to facilitate user understanding.
- Statements that facilitate learning or provide instructions on how to use the software.

9.
Concepts: clarifying version details, clarifying differences, clarifying version availability
- Clarifying details about a specific version or release.
- The speaker clarifies differences between versions or features of the software.
- The speaker clarifies which version of the product is available in a specific context.

10.
Concepts: demonstrating capabilities, problem-solving capabilities
- Demonstrating the problem-solving capabilities of an application
- Highlighting the problem-solving capabilities or functionalities of the Physics Lab application.

11.
Concepts: providing real-world context, highlighting practical application
- A user provides real-world context or examples related to the software.
- A user highlights the practical application or use of a feature in the software or online community.

12.
Concepts: addressing compatibility issues, system compatibility consideration
- Designers address compatibility issues and consider technical limitations.
- A designer considers the compatibility of the system with older systems.

13.
Concepts: suggesting system compatibility, expressing hope for compatibility
- Users suggest or mention the compatibility of the software with specific operating systems.
- User expresses hope or expectation for compatibility with a specific system or platform.

14.
Concepts: theoretical compatibility, speculating on compatibility, theoretical compatibility requirements
- Mentioning hypothetical compatibility of software with older machines
- A designer speculates about the compatibility of the software with different devices or systems.
- The designer mentions theoretical compatibility requirements for the software.

15.
Concepts: offers manual adjustments, allowing manual editing, acknowledging manual adjustments
- The designer offers manual adjustments.
- Designers allow or mention manual editing capabilities.
- A designer or moderator acknowledges the ability to manually adjust or customize a feature.

16.
Concepts: promising manual editing option, acknowledging manual editing needs
- A designer promises to include a manual editing option in the future.
- Designer mentions the need for manual editing and provides a timeline for implementation.

17.
Concepts: personalization solutions, offering customization options
- Seeking solutions or suggestions for personalization or customization.
- Offering options for customization or personalization.

18.
Concepts: cautionary notes, warning about potential issues
- Expressing caution or warning about potential issues.
- The designer warns about potential issues or limitations.

19.
Concepts: expressing concern about memory, anticipating potential forgetting
- The designer expresses concern about memory or recalling information.
- Designer anticipates potential forgetting of important details.

20.
Concepts: describing limitations, informing about touch screens
- Designer describes limitations or constraints of the system, such as touch screen limitations.
- A designer informs users about the capabilities or limitations of touch screens.

21.
Concepts: balancing realism with usability, balancing complexity with usability
- A designer balances realism with usability in a feature or design.
- The designer balances complexity with usability in software design.

22.
Concepts: considering offline functionality, recognizing need for offline functionality
- Considering the functionality of the application in offline settings.
- The designer recognizes the need for offline functionality.

23.
Concepts: recognizing need for local export, requesting local export support
- Recognizing the need for local export functionality
- Designers or users mention the need for local export support or similar features.

24.
Concepts: provide reason, explaining reasoning
- A statement that provides a reason or justification for an action or decision.
- Explaining the reason behind a specific decision or policy

25.
Concepts: providing rationale, justifying feature development, justifying design decisions
- A user or designer provides a reason or justification for a feature or design decision.
- The designer justifies the development of a feature.
- Designers provide explanations for their design choices.

26.
Concepts: explaining options, explaining user control options
- Designer explains available options or features.
- A designer or moderator explains user control options or features.

27.
Concepts: clarify feature, clarifying feature existence
- Reiterating explanations or clarifying feature functionality.
- Designer clarifies feature existence or functionality.

28.
Concepts: explaining functionality, providing feature details
- Designers explain component functionality and features.
- Designers provide details about software features and functionalities.

29.
Concepts: purpose explanation, app design intention
- Explanations of the purpose or intent behind a design or feature.
- Explaining the design intention behind a specific aspect of the app.

30.
Concepts: highlight ideal use, explaining ideal components
- Designer highlights the ideal use of a feature or component.
- A designer explains the purpose or functionality of ideal components.

31.
Concepts: informs users, informing
- The designer informs users.
- Designer provides general information or updates about the system.

32.
Concepts: clarifying system capabilities, specifying system requirements
- Designer provides information about system capabilities.
- Designers provide information on system compatibility and requirements to facilitate software use.
===
Here are the definitions for each code:

---
1.
Concepts: evaluate software, compare software to others
Relationship: Evaluation is done by comparing the software to others.
Criteria: Users evaluate software by comparing it to other applications.
Phrase: Evaluate software in comparison to others.

2.
Concepts: feature benefits, highlighting features and benefits
Relationship: Features are highlighted to emphasize their benefits.
Criteria: Designers highlight features to emphasize their benefits to users.
Phrase: Highlight feature benefits.

3.
Concepts: explaining feature importance, explaining feature significance
Relationship: Features are explained to highlight their importance.
Criteria: Designers explain the importance of specific features in Physics Lab.
Phrase: Explain feature importance.

4.
Concepts: emphasizing ease of use, highlighting user convenience
Relationship: Ease of use is emphasized to highlight user convenience.
Criteria: Speakers highlight the ease of use of a feature to emphasize user convenience.
Phrase: Emphasize ease of use.

5.
Concepts: innovative feature, describing innovative features
Relationship: Innovative features are described to showcase their uniqueness.
Criteria: Designers describe innovative features of the software.
Phrase: Describe innovative features.

6.
Concepts: educating users, user understanding
Relationship: Users are educated to promote understanding.
Criteria: Designers educate users to promote understanding of features.
Phrase: Educate users.

7.
Concepts: instruction, providing tutorial information
Relationship: Instruction is provided through tutorial information.
Criteria: Providing educational or tutorial-like information on a specific topic or feature.
Phrase: Provide instructional information.

8.
Concepts: providing prompts, facilitating learning
Relationship: Prompts are provided to facilitate learning.
Criteria: Statements facilitate learning or provide instructions on how to use the software.
Phrase: Provide learning prompts.

9.
Concepts: clarifying version details, clarifying differences, clarifying version availability
Relationship: Clarification is provided on version details, differences, and availability.
Criteria: The speaker clarifies details about a specific version or release.
Phrase: Clarify version details.

10.
Concepts: demonstrating capabilities, problem-solving capabilities
Relationship: Capabilities are demonstrated to showcase problem-solving abilities.
Criteria: Demonstrating the problem-solving capabilities of an application.
Phrase: Demonstrate problem-solving capabilities.

11.
Concepts: providing real-world context, highlighting practical application
Relationship: Real-world context is provided to highlight practical application.
Criteria: A user provides real-world context or examples related to the software.
Phrase: Provide real-world context.

12.
Concepts: addressing compatibility issues, system compatibility consideration
Relationship: Compatibility issues are addressed through system consideration.
Criteria: Designers address compatibility issues and consider technical limitations.
Phrase: Address compatibility issues.

13.
Concepts: suggesting system compatibility, expressing hope for compatibility
Relationship: Suggestions are made with hope for compatibility.
Criteria: Users suggest or mention the compatibility of the software with specific operating systems.
Phrase: Suggest system compatibility.

14.
Concepts: theoretical compatibility, speculating on compatibility, theoretical compatibility requirements
Relationship: Theoretical compatibility is speculated and requirements are mentioned.
Criteria: Mentioning hypothetical compatibility of software with older machines.
Phrase: Speculate on theoretical compatibility.

15.
Concepts: offers manual adjustments, allowing manual editing, acknowledging manual adjustments
Relationship: Manual adjustments are offered, allowed, and acknowledged.
Criteria: The designer offers manual adjustments or allows manual editing capabilities.
Phrase: Offer manual adjustments.

16.
Concepts: promising manual editing option, acknowledging manual editing needs
Relationship: Promises are made to acknowledge manual editing needs.
Criteria: A designer promises to include a manual editing option in the future.
Phrase: Promise manual editing option.

17.
Concepts: personalization solutions, offering customization options
Relationship: Personalization solutions are offered through customization options.
Criteria: Offering options for customization or personalization.
Phrase: Offer personalization solutions.

18.
Concepts: cautionary notes, warning about potential issues
Relationship: Cautionary notes are given to warn about potential issues.
Criteria: Expressing caution or warning about potential issues.
Phrase: Provide cautionary notes.

19.
Concepts: expressing concern about memory, anticipating potential forgetting
Relationship: Concern is expressed to anticipate potential forgetting.
Criteria: The designer expresses concern about memory or recalling information.
Phrase: Express concern about memory.

20.
Concepts: describing limitations, informing about touch screens
Relationship: Limitations are described to inform about touch screens.
Criteria: Designer describes limitations or constraints of the system, such as touch screen limitations.
Phrase: Describe system limitations.

21.
Concepts: balancing realism with usability, balancing complexity with usability
Relationship: Realism and complexity are balanced with usability.
Criteria: A designer balances realism with usability in a feature or design.
Phrase: Balance realism and complexity with usability.

22.
Concepts: considering offline functionality, recognizing need for offline functionality
Relationship: Offline functionality is considered to recognize the need.
Criteria: Considering the functionality of the application in offline settings.
Phrase: Consider offline functionality.

23.
Concepts: recognizing need for local export, requesting local export support
Relationship: Need is recognized and support is requested.
Criteria: Recognizing the need for local export functionality.
Phrase: Recognize need for local export.

24.
Concepts: provide reason, explaining reasoning
Relationship: Reasons are provided to explain reasoning.
Criteria: A statement that provides a reason or justification for an action or decision.
Phrase: Provide reasons.

25.
Concepts: providing rationale, justifying feature development, justifying design decisions
Relationship: Rationale is provided to justify development and design decisions.
Criteria: A user or designer provides a reason or justification for a feature or design decision.
Phrase: Provide rationale.

26.
Concepts: explaining options, explaining user control options
Relationship: Options are explained to provide user control.
Criteria: Designer explains available options or features.
Phrase: Explain user control options.

27.
Concepts: clarify feature, clarifying feature existence
Relationship: Features are clarified to ensure understanding.
Criteria: Reiterating explanations or clarifying feature functionality.
Phrase: Clarify feature existence.

28.
Concepts: explaining functionality, providing feature details
Relationship: Functionality is explained to provide feature details.
Criteria: Designers explain component functionality and features.
Phrase: Explain feature functionality.

29.
Concepts: purpose explanation, app design intention
Relationship: Purpose is explained to reveal design intention.
Criteria: Explanations of the purpose or intent behind a design or feature.
Phrase: Explain design intention.

30.
Concepts: highlight ideal use, explaining ideal components
Relationship: Ideal use is highlighted to explain ideal components.
Criteria: Designer highlights the ideal use of a feature or component.
Phrase: Highlight ideal use.

31.
Concepts: informs users, informing
Relationship: Users are informed through general information.
Criteria: The designer informs users.
Phrase: Inform users.

32.
Concepts: clarifying system capabilities, specifying system requirements
Relationship: System capabilities are clarified to specify requirements.
Criteria: Designer provides information about system capabilities.
Phrase: Clarify system capabilities.