You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (6 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
6. {Repeat the input 6}
Relationship: {The logical relationship between concepts in input 6}
Criteria: {A sentence of consolidated criteria for code 6}
Label: {A consolidated label of code 6}
Category: {2-4 words for code 6}
---
~~~
1. professional identity, professional background.
- References to a participant's professional role or identity.
- Discussion or mention of participants' educational or professional backgrounds.

2. user representation, user-centered design.
- The consideration of users' needs, characteristics, and contexts in the design of the software.
- Instances where the design approach involves users to ensure the software meets their needs.

3. feature development, feature discussion.
- Discussions about new features or updates to the platform.
- Discussion points around specific features of the tool, including both existing features and those planned for future updates.

4. design suggestions, usability improvement discussions.
- Suggestions from users or discussions that could influence future design decisions.
- Discussions that identify and propose solutions for usability issues within the software.

5. feedback elicitation, user feedback and interaction.
- Instances where designers seek input or feedback from users to improve the software.
- Instances where users provide feedback or interact directly with the developers about the tool's features or usability.

6. designer response, acknowledgment of feedback.
- Replies from the designer indicating acknowledgment or action based on user feedback.
- Instances where the designer acknowledges user feedback and considers it for future updates.
===
Here is the output in the required format:

---
Categories: 
* Professional Identity
* Design Approach
* Feature Development
* Design Improvement
* Feedback Mechanisms
* Designer Response

Definitions for each code:

1. professional identity, professional background.
Relationship: Inclusion (professional background is a part of professional identity)
Criteria: References to a participant's professional role, identity, or educational/professional background.
Label: Professional Background
Category: Professional Identity

2. user representation, user-centered design.
Relationship: Equivalence (both concepts convey a user-focused approach)
Criteria: Consideration of users' needs, characteristics, and contexts in the design of the software.
Label: User-Centered Design
Category: Design Approach

3. feature development, feature discussion.
Relationship: Equivalence (both concepts relate to discussing or developing features)
Criteria: Discussions about new features or updates to the platform, including specific features and updates.
Label: Feature Development
Category: Feature Development

4. design suggestions, usability improvement discussions.
Relationship: Equivalence (both concepts relate to improving the design)
Criteria: Suggestions or discussions that identify and propose solutions for usability issues within the software.
Label: Design Improvement
Category: Design Improvement

5. feedback elicitation, user feedback and interaction.
Relationship: Inclusion (user feedback is a part of feedback elicitation)
Criteria: Instances where designers seek input or feedback from users to improve the software, or users provide feedback or interact with developers.
Label: Feedback Elicitation
Category: Feedback Mechanisms

6. designer response, acknowledgment of feedback.
Relationship: Equivalence (both concepts relate to responding to user feedback)
Criteria: Replies from the designer indicating acknowledgment or action based on user feedback.
Label: Designer Response
Category: Designer Response