You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: discussing usability, focus on user experience
- Discussing the usability or user experience of the app.
- The conversation focuses on improving the user experience.

2.
Concepts: user interface, instructional design
- The designer discusses or addresses user interface issues, design elements, or usability concerns.
- The designer discusses the instructional design or user experience of the software.

3.
Concepts: design discussion, designer engagement
- A designer discusses or explores design ideas or concepts.
- A designer engages in conversation or shows interest in a topic.

4.
Concepts: discussing future updates, discussing feature development
- Designers discuss or plan for future updates or releases, including discussing potential future updates or features.
- Designers discuss or propose improvements to the software or its features, including new features or functionality.

5.
Concepts: feature improvement, feature requests for physics experiments
- The designer or user suggests or discusses ways to improve a feature or aspect of the Physics Lab.
- A user requests or suggests new features or functionalities for physics experiments.

6.
Concepts: usability improvement, suggest broader usability feature
- Instances where suggestions or changes are made to improve the usability of the software.
- A suggestion is made to improve the usability or functionality of the product.

7.
Concepts: accepting suggestions, acknowledgment and implementation
- Users or designers accept or agree with a suggestion or idea.
- Designers acknowledging user feedback and discussing plans to implement suggested features.

8.
Concepts: theorize compatibility, consider future compatibility
- A designer or developer theorizes about the compatibility of a feature or software.
- A designer considers future compatibility or potential issues with a feature or functionality.

9.
Concepts: proposing design idea, suggesting potential project
- The designer proposes a design idea or suggests a new feature.
- A designer or developer mentions a potential future project or idea.

10.
Concepts: reference past experience, reflection on experiences
- The designer references their past experiences or knowledge.
- The designer reflects on their experiences or lessons learned.

11.
Concepts: reiterate bidirectional conversion feature, explain bidirectional conversion feature
- Emphasizing or explaining the bidirectional conversion feature.
- The designer explains a feature that allows for bidirectional conversion between different representations.

12.
Concepts: local export necessity, acknowledge need for local export
- The designer or user discusses the need for local export or saving capabilities in the Physics Lab.
- The designer acknowledges the need for local export or offline capabilities.

13.
Concepts: manual editing, manual adjustment
- The speaker mentions manual editing as an option or feature.
- A designer mentions the ability to manually adjust a feature or layout.

14.
Concepts: optimizing features, communicate ongoing optimization
- The designer discusses adjusting or optimizing features or functionality.
- Ongoing optimization or refinement of a feature or process is discussed.

15.
Concepts: high school context, middle school context
- Mentioning or referencing high school education or context.
- Mentioning or referencing middle school education or context.

16.
Concepts: outdated system description, outdated technology
- A user describes an outdated or old system or process.
- The user mentions limitations or issues with the technology or infrastructure used in the school.

17.
Concepts: student engagement, highlight student engagement
- Comments about student engagement or reactions to the software.
- A user highlights the engagement or reaction of students to the application.

18.
Concepts: sharing positive classroom experiences, describe students' positive responses in class
- Users share positive experiences using the software in the classroom.
- A positive response or reaction is described regarding the product's use in a classroom setting.

19.
Concepts: user experience and impact, user experience in educational contexts
- Users sharing their experiences and the impact of the software on their teaching or learning.
- User experiences and challenges in using the software within educational settings.

20.
Concepts: usage scenario, educational use case
- Describing a scenario or use case for a feature or app.
- The speaker describes a use case or scenario for educational purposes.

21.
Concepts: detail educational utility, highlighting educational tools
- A designer details the educational utility or benefits of a feature.
- A designer highlights educational tools or features.

22.
Concepts: input methods, on-screen keyboard functionality
- Discussion of input methods or functionality.
- Discussing the functionality or need for on-screen keyboards or input methods.

23.
Concepts: describing context of use, commenting on software usability with experiences and feedback
- Users describe the context in which they use the software and its usability.
- A user comments on the software's usability, shares their experiences, and provides comparative feedback.

24.
Concepts: sharing information for design, shared experiences and support
- Users share information or experiences related to the app or its usage.
- Users and designers sharing experiences and supporting each other in using and improving the software.

25.
Concepts: comparison, comparison to similar apps
- A user or designer makes a comparison between two things.
- Comparing the system or feature to similar ones.

26.
Concepts: community feedback, sharing usability feedback
- Users providing feedback and suggestions to improve the product.
- Users provide feedback or opinions about the user experience or usability issues.

27.
Concepts: feedback consideration, address feedback process
- The speaker considers or responds to user feedback or suggestions.
- The designer addresses user feedback, provides explanations, or mentions the importance of feedback.

28.
Concepts: responding to feature development, iterative development based on user feedback
- Users respond to designers' earlier information on feature development.
- The development process is influenced by user feedback, and iterative improvements are discussed.

29.
Concepts: follow-up, follow-up on design information
- The designer or user follows up on a previous discussion or issue, often related to compatibility or technical aspects.
- Users provide information about design or development requirements.

30.
Concepts: inviting further questions, clarifying user requests
- A designer invites users to ask more questions or share their thoughts.
- Designers ask follow-up questions to clarify user requests or gather more information.

31.
Concepts: provide workaround, sharing workarounds
- Provision of temporary solutions or workarounds.
- Designers provide a workaround for a usability issue, or share an alternative solution.

32.
Concepts: offering personalized support, providing technical support
- Designers offer personalized support or assistance to users.
- Designers offer support or assistance to users, including providing technical support or guidance.
===
Here are the definitions for each code:

---
1.
Concepts: discussing usability, focus on user experience
Relationship: The concepts are related as they both focus on improving the user experience of the app.
Criteria: Designers discuss or focus on improving the user experience of the app.
Phrase: Focusing on user experience.

2.
Concepts: user interface, instructional design
Relationship: The concepts are related as they both involve the design of the software.
Criteria: Designers discuss or address user interface issues, design elements, or usability concerns.
Phrase: Addressing user interface issues.

3.
Concepts: design discussion, designer engagement
Relationship: The concepts are related as they both involve the designer's active participation.
Criteria: A designer discusses or explores design ideas or concepts and engages in conversation.
Phrase: Engaging in design discussions.

4.
Concepts: discussing future updates, discussing feature development
Relationship: The concepts are related as they both involve planning for future improvements.
Criteria: Designers discuss or plan for future updates or releases, including discussing potential future updates or features.
Phrase: Planning for future updates.

5.
Concepts: feature improvement, feature requests for physics experiments
Relationship: The concepts are related as they both involve improving the software's features.
Criteria: Users or designers suggest or discuss ways to improve a feature or aspect of the Physics Lab.
Phrase: Requesting feature improvements.

6.
Concepts: usability improvement, suggest broader usability feature
Relationship: The concepts are related as they both involve improving the software's usability.
Criteria: Suggestions or changes are made to improve the usability of the software.
Phrase: Suggesting usability improvements.

7.
Concepts: accepting suggestions, acknowledgment and implementation
Relationship: The concepts are related as they both involve responding to user feedback.
Criteria: Users or designers accept or agree with a suggestion or idea and discuss plans to implement suggested features.
Phrase: Accepting user feedback.

8.
Concepts: theorize compatibility, consider future compatibility
Relationship: The concepts are related as they both involve thinking about the software's compatibility.
Criteria: Designers theorize about the compatibility of a feature or software and consider future compatibility or potential issues.
Phrase: Theorizing about compatibility.

9.
Concepts: proposing design idea, suggesting potential project
Relationship: The concepts are related as they both involve proposing new ideas.
Criteria: The designer proposes a design idea or suggests a new feature or potential future project.
Phrase: Proposing design ideas.

10.
Concepts: reference past experience, reflection on experiences
Relationship: The concepts are related as they both involve drawing on past experiences.
Criteria: The designer references their past experiences or knowledge and reflects on their experiences or lessons learned.
Phrase: Reflecting on experiences.

11.
Concepts: reiterate bidirectional conversion feature, explain bidirectional conversion feature
Relationship: The concepts are related as they both involve explaining a feature.
Criteria: Emphasizing or explaining the bidirectional conversion feature.
Phrase: Explaining bidirectional conversion.

12.
Concepts: local export necessity, acknowledge need for local export
Relationship: The concepts are related as they both involve recognizing the need for a feature.
Criteria: The designer or user discusses the need for local export or saving capabilities in the Physics Lab.
Phrase: Acknowledging the need for local export.

13.
Concepts: manual editing, manual adjustment
Relationship: The concepts are related as they both involve manual intervention.
Criteria: The speaker mentions manual editing as an option or feature, or the ability to manually adjust a feature or layout.
Phrase: Mentioning manual editing.

14.
Concepts: optimizing features, communicate ongoing optimization
Relationship: The concepts are related as they both involve improving the software.
Criteria: The designer discusses adjusting or optimizing features or functionality and communicates ongoing optimization or refinement.
Phrase: Optimizing features.

15.
Concepts: high school context, middle school context
Relationship: The concepts are related as they both involve educational contexts.
Criteria: Mentioning or referencing high school or middle school education or context.
Phrase: Referencing educational contexts.

16.
Concepts: outdated system description, outdated technology
Relationship: The concepts are related as they both involve describing limitations.
Criteria: A user describes an outdated or old system or process, or mentions limitations or issues with the technology or infrastructure used in the school.
Phrase: Describing outdated technology.

17.
Concepts: student engagement, highlight student engagement
Relationship: The concepts are related as they both involve student reactions.
Criteria: Comments about student engagement or reactions to the software, or highlighting the engagement or reaction of students to the application.
Phrase: Highlighting student engagement.

18.
Concepts: sharing positive classroom experiences, describe students' positive responses in class
Relationship: The concepts are related as they both involve sharing positive experiences.
Criteria: Users share positive experiences using the software in the classroom, or describe a positive response or reaction regarding the product's use in a classroom setting.
Phrase: Sharing positive classroom experiences.

19.
Concepts: user experience and impact, user experience in educational contexts
Relationship: The concepts are related as they both involve the user's experience.
Criteria: Users sharing their experiences and the impact of the software on their teaching or learning, or discussing user experiences and challenges in using the software within educational settings.
Phrase: Sharing user experiences.

20.
Concepts: usage scenario, educational use case
Relationship: The concepts are related as they both involve describing how the software is used.
Criteria: Describing a scenario or use case for a feature or app, or describing a use case or scenario for educational purposes.
Phrase: Describing usage scenarios.

21.
Concepts: detail educational utility, highlighting educational tools
Relationship: The concepts are related as they both involve highlighting the software's educational benefits.
Criteria: A designer details the educational utility or benefits of a feature, or highlights educational tools or features.
Phrase: Highlighting educational utility.

22.
Concepts: input methods, on-screen keyboard functionality
Relationship: The concepts are related as they both involve input mechanisms.
Criteria: Discussion of input methods or functionality, or discussing the functionality or need for on-screen keyboards or input methods.
Phrase: Discussing input methods.

23.
Concepts: describing context of use, commenting on software usability with experiences and feedback
Relationship: The concepts are related as they both involve describing how the software is used.
Criteria: Users describe the context in which they use the software and its usability, or comment on the software's usability, share their experiences, and provide comparative feedback.
Phrase: Describing context of use.

24.
Concepts: sharing information for design, shared experiences and support
Relationship: The concepts are related as they both involve sharing information.
Criteria: Users share information or experiences related to the app or its usage, or users and designers sharing experiences and supporting each other in using and improving the software.
Phrase: Sharing information for design.

25.
Concepts: comparison, comparison to similar apps
Relationship: The concepts are related as they both involve making comparisons.
Criteria: A user or designer makes a comparison between two things, or comparing the system or feature to similar ones.
Phrase: Making comparisons.

26.
Concepts: community feedback, sharing usability feedback
Relationship: The concepts are related as they both involve providing feedback.
Criteria: Users providing feedback and suggestions to improve the product, or providing feedback or opinions about the user experience or usability issues.
Phrase: Providing community feedback.

27.
Concepts: feedback consideration, address feedback process
Relationship: The concepts are related as they both involve responding to feedback.
Criteria: The speaker considers or responds to user feedback or suggestions, or addresses user feedback, provides explanations, or mentions the importance of feedback.
Phrase: Considering feedback.

28.
Concepts: responding to feature development, iterative development based on user feedback
Relationship: The concepts are related as they both involve responding to user input.
Criteria: Users respond to designers' earlier information on feature development, or the development process is influenced by user feedback, and iterative improvements are discussed.
Phrase: Responding to feature development.

29.
Concepts: follow-up, follow-up on design information
Relationship: The concepts are related as they both involve following up on previous discussions.
Criteria: The designer or user follows up on a previous discussion or issue, often related to compatibility or technical aspects, or provides information about design or development requirements.
Phrase: Following up on design information.

30.
Concepts: inviting further questions, clarifying user requests
Relationship: The concepts are related as they both involve seeking clarification.
Criteria: A designer invites users to ask more questions or share their thoughts, or asks follow-up questions to clarify user requests or gather more information.
Phrase: Inviting further questions.

31.
Concepts: provide workaround, sharing workarounds
Relationship: The concepts are related as they both involve providing temporary solutions.
Criteria: Provision of temporary solutions or workarounds, or designers provide a workaround for a usability issue, or share an alternative solution.
Phrase: Providing workarounds.

32.
Concepts: offering personalized support, providing technical support
Relationship: The concepts are related as they both involve providing assistance.
Criteria: Designers offer personalized support or assistance to users, or offer support or assistance to users, including providing technical support or guidance.
Phrase: Offering personalized support.