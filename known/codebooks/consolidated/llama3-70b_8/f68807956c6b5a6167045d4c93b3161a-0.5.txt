You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (23 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
23. 
Concepts: {Repeat the input 23}
Relationship: {What is logical relationship between concepts in code 23, or N/A if not applicable}
Criteria: {Who did what, and how for code 23}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: educating users about ai limitations, recognizing need for user education in ai use
- The expert recognizes the importance of educating users about AI limitations.
- Recognizing the need for user education in AI use and debugging

2.
Concepts: emphasizing need for expertise in ai-driven coding, recognizing need for expertise in ai error handling
- Participants emphasize the need for expertise in AI-driven coding.
- Participants recognize the need for expertise in AI error handling.

3.
Concepts: recognizing need for human oversight, highlighting the need for external feedback
- The interviewee recognizes the need for human oversight or review of AI-generated code.
- Participant highlights the need for external feedback mechanisms to improve the accuracy and reliability of AI-generated code.

4.
Concepts: needing system support, highlighting the need for system support
- Needing system support for reminders and tracking progress.
- Highlighting the need for system support and reminders in the learning process

5.
Concepts: need for context retention, fragmented learning sessions
- The participant identifies the need for context retention in learning tools, which would support their fragmented learning style.
- The participant describes fragmented learning sessions, where they learn in short, disconnected time blocks and need system support to remind them where they were.

6.
Concepts: identifying fragmented learning patterns, reflecting on fragmented learning and system support
- Describing fragmented learning patterns and the need for system support.
- Participants reflect on how professionals learn in fragments, needing support from the system.

7.
Concepts: recognizing knowledge gaps, knowledge gaps in documentation
- Participant identifies a gap in knowledge transfer.
- Identifies knowledge gaps in documentation.

8.
Concepts: knowledge gaps in software development, identifying undocumented knowledge and oral tradition
- Notes knowledge gaps in software development, particularly in oral traditions.
- Participants identify undocumented knowledge and oral tradition in software development.

9.
Concepts: inadequate documentation, technical documentation critique
- Criticizing current technical documentation
- Critiquing current technical documentation

10.
Concepts: criticizes ai output, notes incomplete ai responses
- Criticizes AI output for missing essential code structures.
- Notes incomplete AI responses that miss code structures.

11.
Concepts: ai providing comments and documentation, chatgpt provides comments and documentation
- Noting AI's tendency to provide comments and documentation.
- ChatGPT provides comments and documentation in the generated code.

12.
Concepts: importance of documentation, highlighting need for customized documentation
- The interviewee emphasizes the importance of documentation or reading documentation.
- The interviewee highlights the need for customized documentation.

13.
Concepts: importance of instruction writing skills, valuing clear instruction-writing skills
- Interviewee emphasizes the importance of instruction writing skills.
- Participants value and emphasize the importance of clear instruction-writing skills.

14.
Concepts: writing instructions for another person, importance of writing instructions for ai collaboration
- The expert discusses the importance of writing instructions for another person and conceptualizing problems.
- Expert recognizes the relevance of writing instructions for AI collaboration.

15.
Concepts: accessibility, recognizing importance of accessibility
- Valuing accessibility
- Recognizing the importance of accessibility in AI-generated explanations.

16.
Concepts: advocate for user debugging practice, recognizes importance of user skills
- Participants recognize the importance of user debugging practice and debugging skills.
- Participant recognizes the importance of user skills, such as debugging, in AI-assisted coding.

17.
Concepts: user expertise and experience, emphasizing user expertise
- Emphasizing importance of user expertise and experience
- Emphasizing the importance of user expertise in understanding and debugging errors.

18.
Concepts: suggests incremental coding, need for incremental code checking
- Participant suggests an incremental coding approach, writing and testing code in small chunks.
- The participant suggests the need for incremental code checking to help beginners.

19.
Concepts: ai-based learning pathways, recognizing the importance of teaching skills
- The interviewee wonders if AI can design a generic learning management path, highlighting the importance of teaching skills in programming.
- The interviewee recognizes the importance of teaching skills in programming, emphasizing the need for effective learning pathways.

20.
Concepts: ai follows best practices, recognizing ai's coding standards, acknowledging ai's adherence to best practices
- The code is assigned when the interviewee observes that the AI follows best practices in coding.
- The participant recognizes AI's adherence to coding standards.
- The participant acknowledges the AI's adherence to best practices.

21.
Concepts: highlights best practices, adhering to programming best practices
- Highlighting best practices in coding, such as debugging and unit testing.
- Participants adhere to best practices in programming.

22.
Concepts: code validation, recognizing the importance of code testing and plain code
- Recognizing importance of code validation
- Participants recognize the importance of testing and debugging code.

23.
Concepts: ensuring clarity, advocate for clear code
- Ensuring clarity in code and documentation.
- Participants prioritize code clarity, simplicity, and maintainability.
===
Here are the definitions for each code:

---
1.
Concepts: educating users about ai limitations, recognizing need for user education in ai use
Relationship: Causal (recognizing the need leads to educating users)
Criteria: Educators recognize the need to educate users about AI limitations and take steps to do so.
Phrase: Educating users about AI limitations

2.
Concepts: emphasizing need for expertise in ai-driven coding, recognizing need for expertise in ai error handling
Relationship: Associative (expertise in coding is related to expertise in error handling)
Criteria: Experts emphasize the need for expertise in AI-driven coding and error handling.
Phrase: Emphasizing expertise in AI-driven coding

3.
Concepts: recognizing need for human oversight, highlighting the need for external feedback
Relationship: Causal (recognizing the need leads to highlighting the need)
Criteria: Participants recognize the need for human oversight and highlight the need for external feedback.
Phrase: Recognizing need for human oversight

4.
Concepts: needing system support, highlighting the need for system support
Relationship: Redundant (both concepts convey the same meaning)
Criteria: Participants need and highlight the need for system support.
Phrase: Needing system support

5.
Concepts: need for context retention, fragmented learning sessions
Relationship: Causal (fragmented learning leads to the need for context retention)
Criteria: Participants identify the need for context retention due to fragmented learning sessions.
Phrase: Needing context retention

6.
Concepts: identifying fragmented learning patterns, reflecting on fragmented learning and system support
Relationship: Associative (identifying patterns is related to reflecting on them)
Criteria: Participants identify and reflect on fragmented learning patterns, needing system support.
Phrase: Identifying fragmented learning patterns

7.
Concepts: recognizing knowledge gaps, knowledge gaps in documentation
Relationship: Associative (recognizing gaps is related to gaps in documentation)
Criteria: Participants recognize knowledge gaps, particularly in documentation.
Phrase: Recognizing knowledge gaps

8.
Concepts: knowledge gaps in software development, identifying undocumented knowledge and oral tradition
Relationship: Associative (gaps in software development are related to undocumented knowledge)
Criteria: Participants identify knowledge gaps in software development, including undocumented knowledge and oral tradition.
Phrase: Identifying knowledge gaps in software development

9.
Concepts: inadequate documentation, technical documentation critique
Relationship: Associative (inadequate documentation is related to critique)
Criteria: Participants critique inadequate technical documentation.
Phrase: Critiquing technical documentation

10.
Concepts: criticizes ai output, notes incomplete ai responses
Relationship: Associative (criticizing output is related to noting incompleteness)
Criteria: Participants criticize AI output for being incomplete.
Phrase: Criticizing AI output

11.
Concepts: ai providing comments and documentation, chatgpt provides comments and documentation
Relationship: Redundant (both concepts convey the same meaning)
Criteria: AI provides comments and documentation, as demonstrated by ChatGPT.
Phrase: Providing comments and documentation

12.
Concepts: importance of documentation, highlighting need for customized documentation
Relationship: Causal (importance leads to highlighting the need)
Criteria: Participants emphasize the importance of documentation and highlight the need for customization.
Phrase: Emphasizing importance of documentation

13.
Concepts: importance of instruction writing skills, valuing clear instruction-writing skills
Relationship: Redundant (both concepts convey the same meaning)
Criteria: Participants value and emphasize the importance of clear instruction-writing skills.
Phrase: Valuing instruction-writing skills

14.
Concepts: writing instructions for another person, importance of writing instructions for ai collaboration
Relationship: Causal (writing for another person leads to importance in AI collaboration)
Criteria: Experts discuss the importance of writing instructions for another person and AI collaboration.
Phrase: Emphasizing importance of writing instructions

15.
Concepts: accessibility, recognizing importance of accessibility
Relationship: Redundant (both concepts convey the same meaning)
Criteria: Participants value and recognize the importance of accessibility.
Phrase: Recognizing importance of accessibility

16.
Concepts: advocate for user debugging practice, recognizes importance of user skills
Relationship: Causal (advocating leads to recognizing importance)
Criteria: Participants advocate for user debugging practice and recognize the importance of user skills.
Phrase: Advocating for user debugging practice

17.
Concepts: user expertise and experience, emphasizing user expertise
Relationship: Redundant (both concepts convey the same meaning)
Criteria: Participants emphasize the importance of user expertise and experience.
Phrase: Emphasizing user expertise

18.
Concepts: suggests incremental coding, need for incremental code checking
Relationship: Causal (suggesting leads to need)
Criteria: Participants suggest incremental coding and recognize the need for incremental code checking.
Phrase: Suggesting incremental coding

19.
Concepts: ai-based learning pathways, recognizing the importance of teaching skills
Relationship: Causal (recognizing leads to importance)
Criteria: Participants recognize the importance of teaching skills in AI-based learning pathways.
Phrase: Recognizing importance of teaching skills

20.
Concepts: ai follows best practices, recognizing ai's coding standards, acknowledging ai's adherence to best practices
Relationship: Redundant (all concepts convey the same meaning)
Criteria: Participants recognize and acknowledge AI's adherence to best practices and coding standards.
Phrase: Recognizing AI's adherence to best practices

21.
Concepts: highlights best practices, adhering to programming best practices
Relationship: Redundant (both concepts convey the same meaning)
Criteria: Participants highlight and adhere to best practices in programming.
Phrase: Highlighting best practices

22.
Concepts: code validation, recognizing the importance of code testing and plain code
Relationship: Causal (recognizing leads to importance)
Criteria: Participants recognize the importance of code validation, testing, and plain code.
Phrase: Recognizing importance of code validation

23.
Concepts: ensuring clarity, advocate for clear code
Relationship: Redundant (both concepts convey the same meaning)
Criteria: Participants prioritize and advocate for clear code and documentation.
Phrase: Advocating for clear code