You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: problem analysis, problem diagnosis
- A designer analyzes or troubleshoots a problem or issue.
- User or designer offers a diagnosis or solution to a problem.

2.
Concepts: sharing potential solutions, designer engages in problem-solving
- Designer shares potential solutions or ideas for addressing user concerns.
- Designer engages in problem-solving by asking questions or providing solutions.

3.
Concepts: suggest manual adjustments, manual adjustment option
- The designer suggests manual adjustments or workarounds to a problem or issue.
- The designer offers a manual adjustment option or workaround for a specific issue or limitation in the Physics Lab.

4.
Concepts: user constraint adaptation, adapt to user context, adapting to system requirements
- Adapting to user constraints or limitations.
- A person adapts their response or solution to the user's context or situation.
- User shows adaptability in response to system requirements.

5.
Concepts: contextual limitation discussion, provide context for limitation
- Discussing limitations or restrictions in a specific context.
- User provides context for a limitation or constraint to understand its implications.

6.
Concepts: explains limitation, highlighting technical constraints
- A designer explains a limitation or constraint in the Physics Lab application.
- User mentions limitations or restrictions that affect the use of Physics Lab.

7.
Concepts: mention limitations, acknowledging limitations
- Designer mentions a specific limitation or constraint to set expectations.
- A designer acknowledges limitations or constraints, such as memory limitations.

8.
Concepts: practical constraints, hardware limitations
- User highlights practical limitations or constraints in using the software.
- Consideration of limitations or constraints imposed by hardware or technical capabilities.

9.
Concepts: touch screen features, informing about touch screens
- Discussing the features of touch screens
- A designer informs users about the capabilities or limitations of touch screens.

10.
Concepts: address input method, discussing input methods
- Addressing or discussing input methods or user interfaces.
- The designer addresses input methods for different devices.

11.
Concepts: highlights design challenges, highlight usability challenges
- The designer highlights UI or design challenges.
- User reveals potential usability challenges or difficulties and highlights technical challenges or limitations.

12.
Concepts: feature concern, noting potential bugs, warning about potential issues
- Designer raises a concern or potential issue with a new feature.
- A designer notes potential bugs or issues with a feature or update.
- A designer warns about potential issues or limitations with the software.

13.
Concepts: acknowledge potential issue, acknowledging technical issue
- Designer acknowledges a related issue as a potential problem that needs to be addressed.
- Designer acknowledges the need to investigate or address a specific technical issue (e.g., XP compatibility).

14.
Concepts: promoting accessibility, highlighting accessibility concerns
- Promoting or emphasizing the importance of accessibility.
- Highlighting accessibility concerns or issues.

15.
Concepts: understanding user needs, consider user experience
- Attempting to understand the needs or problems of users.
- Considering user experience or needs, taking into account their specific situations or constraints.

16.
Concepts: consider offline functionality, recognizing need for offline functionality
- Designer considers offline functionality or internet availability.
- Identifying the need for offline functionality or accessibility.

17.
Concepts: identify product gap, identifying gaps or limitations in existing software
- Identifying a gap or limitation in the current product or feature.
- The user identifies gaps or limitations in existing software.

18.
Concepts: engaging with technical aspects, showing interest in technical details
- A user engages with technical aspects or details of the application.
- User shows interest in technical details or specifications.

19.
Concepts: sharing knowledge, shares technical knowledge
- The designer shares knowledge or information about a specific topic or feature.
- A designer shares technical knowledge or expertise related to the Physics Lab application.

20.
Concepts: clarifies technical issues, providing technical information, provides technical explanations
- The designer clarifies technical issues or system requirements.
- A user or designer provides information about compatibility or technical requirements.
- The designer provides technical explanations or information.

21.
Concepts: providing examples, explains software concepts, providing simulation details
- A designer provides examples of a feature or functionality.
- The designer explains software features or concepts.
- A designer provides explanations or details about a simulation or feature to clarify its functionality.

22.
Concepts: clarifying testing status, informing users about testing phase
- A designer clarifies the testing status or phase of a feature or update.
- A designer informs users about the testing phase of a feature and provides guidance on manual adjustments due to algorithm limitations.

23.
Concepts: testing context, providing context for software use
- Designer provides context for the testing phase of the software.
- A designer provides context or background information about the software's use.

24.
Concepts: explains software limitations, inform system requirements, clarifying system capabilities
- The designer explains software limitations to users.
- Designer informs users about the software's system requirements or limitations to set expectations.
- The designer clarifies the capabilities of the system or software.

25.
Concepts: detail bug fixes, addresses bug fixes
- The designer provides detailed information about bug fixes.
- Designer addresses or explains bug fixes or issues in Physics Lab.

26.
Concepts: version explanation, clarify version type, clarifies software version
- A designer explains the type or version of a product.
- The designer clarifies the type or version of the Physics Lab.
- The designer clarifies the software version.

27.
Concepts: feature development, elaborating on features, plan feature development
- A description or explanation of a feature or functionality being developed.
- Describing or explaining planned or potential features of the software
- Planning or discussing the development of new features.

28.
Concepts: feature discussion, exploring software functionality
- Discussion about specific features of the online community or tool.
- Exploring or discussing the functionality or capabilities of the online community or tool.

29.
Concepts: compare task complexity, comparing feature complexities
- Designer compares the complexity of different tasks or features to understand their relative difficulties.
- Comparing the complexity of different features and their implementation.

30.
Concepts: expressing development difficulty, explain development complexity
- A person expresses the difficulty or complexity of developing something.
- Speaker explains the complexity or challenges of a specific feature or development to provide context or justification.

31.
Concepts: providing visual clarification, clarifying visual representations
- A designer provides visual examples or images to clarify a concept.
- Requests for clarification or confirmation about visual representations (e.g., diagrams).

32.
Concepts: shares visual aids, engaging visually
- The designer shares visual aids to convey information.
- A designer uses visual aids to engage users or convey information.
===
Here are the definitions for each code:

---
1.
Concepts: problem analysis, problem diagnosis
Relationship: The concepts are related as they both involve identifying and understanding a problem or issue.
Criteria: A designer analyzes or troubleshoots a problem or issue and offers a diagnosis or solution.
Phrase: Analyze and diagnose problems.

2.
Concepts: sharing potential solutions, designer engages in problem-solving
Relationship: The concepts are related as they both involve the designer actively working to address a problem or issue.
Criteria: A designer shares potential solutions or ideas for addressing user concerns and engages in problem-solving by asking questions or providing solutions.
Phrase: Share and explore solutions.

3.
Concepts: suggest manual adjustments, manual adjustment option
Relationship: The concepts are related as they both involve offering alternative solutions to a problem or issue.
Criteria: The designer suggests manual adjustments or workarounds to a problem or issue and offers a manual adjustment option or workaround for a specific issue or limitation in the Physics Lab.
Phrase: Suggest manual adjustments.

4.
Concepts: user constraint adaptation, adapt to user context, adapting to system requirements
Relationship: The concepts are related as they all involve adapting to specific constraints or limitations.
Criteria: Adapting to user constraints or limitations, adapting to the user's context or situation, and showing adaptability in response to system requirements.
Phrase: Adapt to user and system constraints.

5.
Concepts: contextual limitation discussion, provide context for limitation
Relationship: The concepts are related as they both involve discussing limitations in a specific context.
Criteria: Discussing limitations or restrictions in a specific context and providing context for a limitation or constraint to understand its implications.
Phrase: Discuss limitations in context.

6.
Concepts: explains limitation, highlighting technical constraints
Relationship: The concepts are related as they both involve explaining or highlighting limitations or constraints.
Criteria: A designer explains a limitation or constraint in the Physics Lab application and highlights technical constraints that affect its use.
Phrase: Explain and highlight limitations.

7.
Concepts: mention limitations, acknowledging limitations
Relationship: The concepts are related as they both involve acknowledging or mentioning limitations or constraints.
Criteria: A designer mentions a specific limitation or constraint to set expectations and acknowledges limitations or constraints, such as memory limitations.
Phrase: Mention and acknowledge limitations.

8.
Concepts: practical constraints, hardware limitations
Relationship: The concepts are related as they both involve highlighting limitations or constraints imposed by external factors.
Criteria: User highlights practical limitations or constraints in using the software and considers limitations or constraints imposed by hardware or technical capabilities.
Phrase: Highlight practical and hardware limitations.

9.
Concepts: touch screen features, informing about touch screens
Relationship: The concepts are related as they both involve discussing the capabilities or limitations of touch screens.
Criteria: Discussing the features of touch screens and informing users about the capabilities or limitations of touch screens.
Phrase: Discuss touch screen features.

10.
Concepts: address input method, discussing input methods
Relationship: The concepts are related as they both involve discussing or addressing input methods or user interfaces.
Criteria: Addressing or discussing input methods or user interfaces and discussing input methods for different devices.
Phrase: Address and discuss input methods.

11.
Concepts: highlights design challenges, highlight usability challenges
Relationship: The concepts are related as they both involve highlighting challenges or difficulties in design or usability.
Criteria: The designer highlights UI or design challenges and reveals potential usability challenges or difficulties and highlights technical challenges or limitations.
Phrase: Highlight design and usability challenges.

12.
Concepts: feature concern, noting potential bugs, warning about potential issues
Relationship: The concepts are related as they all involve expressing concerns or warnings about potential issues or limitations.
Criteria: Designer raises a concern or potential issue with a new feature, notes potential bugs or issues with a feature or update, and warns about potential issues or limitations with the software.
Phrase: Express concerns and warn about potential issues.

13.
Concepts: acknowledge potential issue, acknowledging technical issue
Relationship: The concepts are related as they both involve acknowledging or recognizing a potential issue or technical problem.
Criteria: Designer acknowledges a related issue as a potential problem that needs to be addressed and acknowledges the need to investigate or address a specific technical issue (e.g., XP compatibility).
Phrase: Acknowledge potential issues.

14.
Concepts: promoting accessibility, highlighting accessibility concerns
Relationship: The concepts are related as they both involve promoting or highlighting the importance of accessibility.
Criteria: Promoting or emphasizing the importance of accessibility and highlighting accessibility concerns or issues.
Phrase: Promote and highlight accessibility.

15.
Concepts: understanding user needs, consider user experience
Relationship: The concepts are related as they both involve understanding or considering the needs or experiences of users.
Criteria: Attempting to understand the needs or problems of users and considering user experience or needs, taking into account their specific situations or constraints.
Phrase: Understand and consider user needs.

16.
Concepts: consider offline functionality, recognizing need for offline functionality
Relationship: The concepts are related as they both involve considering or recognizing the need for offline functionality or internet availability.
Criteria: Designer considers offline functionality or internet availability and identifies the need for offline functionality or accessibility.
Phrase: Consider and recognize need for offline functionality.

17.
Concepts: identify product gap, identifying gaps or limitations in existing software
Relationship: The concepts are related as they both involve identifying gaps or limitations in existing software or products.
Criteria: Identifying a gap or limitation in the current product or feature and identifying gaps or limitations in existing software.
Phrase: Identify product gaps.

18.
Concepts: engaging with technical aspects, showing interest in technical details
Relationship: The concepts are related as they both involve engaging with or showing interest in technical aspects or details.
Criteria: A user engages with technical aspects or details of the application and shows interest in technical details or specifications.
Phrase: Engage with technical aspects.

19.
Concepts: sharing knowledge, shares technical knowledge
Relationship: The concepts are related as they both involve sharing knowledge or information about a specific topic or feature.
Criteria: The designer shares knowledge or information about a specific topic or feature and shares technical knowledge or expertise related to the Physics Lab application.
Phrase: Share technical knowledge.

20.
Concepts: clarifies technical issues, providing technical information, provides technical explanations
Relationship: The concepts are related as they all involve clarifying or providing technical information or explanations.
Criteria: The designer clarifies technical issues or system requirements, provides information about compatibility or technical requirements, and provides technical explanations or information.
Phrase: Clarify and provide technical information.

21.
Concepts: providing examples, explains software concepts, providing simulation details
Relationship: The concepts are related as they all involve providing explanations or examples to clarify software concepts or functionality.
Criteria: A designer provides examples of a feature or functionality, explains software features or concepts, and provides explanations or details about a simulation or feature to clarify its functionality.
Phrase: Provide explanations and examples.

22.
Concepts: clarifying testing status, informing users about testing phase
Relationship: The concepts are related as they both involve clarifying or informing users about the testing phase of a feature or update.
Criteria: A designer clarifies the testing status or phase of a feature or update and informs users about the testing phase of a feature and provides guidance on manual adjustments due to algorithm limitations.
Phrase: Clarify testing status.

23.
Concepts: testing context, providing context for software use
Relationship: The concepts are related as they both involve providing context for the testing phase of the software or its use.
Criteria: Designer provides context for the testing phase of the software and provides context or background information about the software's use.
Phrase: Provide testing context.

24.
Concepts: explains software limitations, inform system requirements, clarifying system capabilities
Relationship: The concepts are related as they all involve explaining or clarifying software limitations, system requirements, or capabilities.
Criteria: The designer explains software limitations to users, informs users about the software's system requirements or limitations to set expectations, and clarifies the capabilities of the system or software.
Phrase: Explain software limitations and capabilities.

25.
Concepts: detail bug fixes, addresses bug fixes
Relationship: The concepts are related as they both involve providing detailed information about bug fixes or addressing bug fixes.
Criteria: The designer provides detailed information about bug fixes and addresses or explains bug fixes or issues in Physics Lab.
Phrase: Address and detail bug fixes.

26.
Concepts: version explanation, clarify version type, clarifies software version
Relationship: The concepts are related as they all involve explaining or clarifying software versions or types.
Criteria: A designer explains the type or version of a product, clarifies the type or version of the Physics Lab, and clarifies the software version.
Phrase: Clarify software versions.

27.
Concepts: feature development, elaborating on features, plan feature development
Relationship: The concepts are related as they all involve discussing or planning the development of new features.
Criteria: A description or explanation of a feature or functionality being developed, describing or explaining planned or potential features of the software, and planning or discussing the development of new features.
Phrase: Discuss and plan feature development.

28.
Concepts: feature discussion, exploring software functionality
Relationship: The concepts are related as they both involve discussing or exploring software features or functionality.
Criteria: Discussion about specific features of the online community or tool and exploring or discussing the functionality or capabilities of the online community or tool.
Phrase: Discuss and explore software features.

29.
Concepts: compare task complexity, comparing feature complexities
Relationship: The concepts are related as they both involve comparing the complexity of different tasks or features.
Criteria: Designer compares the complexity of different tasks or features to understand their relative difficulties and comparing the complexity of different features and their implementation.
Phrase: Compare task and feature complexities.

30.
Concepts: expressing development difficulty, explain development complexity
Relationship: The concepts are related as they both involve expressing or explaining the difficulty or complexity of development.
Criteria: A person expresses the difficulty or complexity of developing something and explains the complexity or challenges of a specific feature or development to provide context or justification.
Phrase: Express and explain development complexity.

31.
Concepts: providing visual clarification, clarifying visual representations
Relationship: The concepts are related as they both involve providing clarification or confirmation about visual representations.
Criteria: A designer provides visual examples or images to clarify a concept and requests for clarification or confirmation about visual representations (e.g., diagrams).
Phrase: Provide visual clarification.

32.
Concepts: shares visual aids, engaging visually
Relationship: The concepts are related as they both involve sharing or using visual aids to convey information.
Criteria: The designer shares visual aids to convey information and uses visual aids to engage users or convey information.
Phrase: Share and engage with visual aids.