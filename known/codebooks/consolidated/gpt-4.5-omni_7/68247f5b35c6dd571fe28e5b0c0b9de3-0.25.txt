You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (13 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
13. 
Concepts: {Repeat the input 13}
Relationship: {What is logical relationship between concepts in code 13, or N/A if not applicable}
Criteria: {Who did what, and how for code 13}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: provide technical support, offer personalized assistance
- Designers or users provide technical support or guidance.
- Designers offer resources or personalized assistance to users.

2.
Concepts: explain design rationale, explain design principles
- Explain the intention behind questions and the rationale for design decisions.
- Designers explain the principles and philosophy guiding the design and development of the product.

3.
Concepts: share update timeline, highlight update frequency
- Designers share the timeline for upcoming updates and information about app releases.
- Designers highlight the frequency or schedule of software updates.

4.
Concepts: inquiring about updates, provide platform-specific updates
- Users inquire about the status or details of recent software updates.
- Users inquire about and receive platform-specific updates and information.

5.
Concepts: offer support, share information and support
- Users offer or seek support and guidance for using the software.
- Share information, experiences, and support related to the design and use of the software.

6.
Concepts: inquire about software access, seek technical information
- Users inquire about downloading and accessing the software.
- Users inquire to gain technical information or resources about the software.

7.
Concepts: address usability concerns, discuss software usability
- Users identify and address usability concerns in the software.
- Users describe the context of use and comment on the software's usability and effectiveness.

8.
Concepts: responding to user feedback, respond to feature requests
- Designers acknowledge and respond to user feedback and queries about features.
- Designers respond to feature requests and consider user feedback for future updates.

9.
Concepts: gather user input, collect specific feedback
- Interact with users to gather input for future software iterations.
- Users provide specific feedback or answers to questions.

10.
Concepts: suggest new features, request new features
- Users suggest new features or improvements for the software.
- Users make specific requests for new features or improvements.

11.
Concepts: provide explanations, provide detailed answers
- Users explain their answers or situations in response to questions.
- Users provide detailed and specific answers to questions.

12.
Concepts: confirm agreement with suggestions, acknowledge and confirm understanding
- Users agree with or confirm previous suggestions or statements.
- Users acknowledge or confirm their understanding of information.

13.
Concepts: understand user needs
- Seek to understand users' contexts, needs, and preferences.
- Users identify and express their needs or requirements for the software.
===
---
Definitions for each code (13 in total):
1.
Concepts: provide technical support, offer personalized assistance
Relationship: Both involve offering help and resources to users.
Criteria: Designers or users provide technical support and personalized assistance to other users.
Phrase: Offering technical and personalized support

2.
Concepts: explain design rationale, explain design principles
Relationship: Both involve explaining the reasoning and principles behind design decisions.
Criteria: Designers explain the rationale and principles guiding the design and development of the product.
Phrase: Explaining design rationale and principles

3.
Concepts: share update timeline, highlight update frequency
Relationship: Both involve communicating information about software updates.
Criteria: Designers share the timeline and highlight the frequency of upcoming software updates.
Phrase: Communicating update schedules

4.
Concepts: inquiring about updates, provide platform-specific updates
Relationship: Both involve users seeking and receiving information about updates.
Criteria: Users inquire about and receive platform-specific updates and information.
Phrase: Seeking and receiving update information

5.
Concepts: offer support, share information and support
Relationship: Both involve users providing or seeking help and sharing information.
Criteria: Users offer support and share information and experiences related to the software.
Phrase: Sharing support and information

6.
Concepts: inquire about software access, seek technical information
Relationship: Both involve users seeking information about accessing and using the software.
Criteria: Users inquire about software access and seek technical information.
Phrase: Seeking access and technical information

7.
Concepts: address usability concerns, discuss software usability
Relationship: Both involve users discussing and addressing the usability of the software.
Criteria: Users identify and discuss usability concerns and the effectiveness of the software.
Phrase: Discussing and addressing usability

8.
Concepts: responding to user feedback, respond to feature requests
Relationship: Both involve designers addressing user feedback and requests.
Criteria: Designers acknowledge and respond to user feedback and feature requests.
Phrase: Addressing user feedback and requests

9.
Concepts: gather user input, collect specific feedback
Relationship: Both involve collecting feedback from users.
Criteria: Designers interact with users to gather input and specific feedback for future iterations.
Phrase: Collecting user input and feedback

10.
Concepts: suggest new features, request new features
Relationship: Both involve users proposing new features or improvements.
Criteria: Users suggest and request new features or improvements for the software.
Phrase: Proposing new features

11.
Concepts: provide explanations, provide detailed answers
Relationship: Both involve users giving detailed responses to questions.
Criteria: Users provide explanations and detailed answers to questions.
Phrase: Giving detailed responses

12.
Concepts: confirm agreement with suggestions, acknowledge and confirm understanding
Relationship: Both involve users agreeing with or confirming understanding of information.
Criteria: Users confirm agreement with suggestions and acknowledge understanding.
Phrase: Confirming agreement and understanding

13.
Concepts: understand user needs
Relationship: N/A
Criteria: Users identify and express their needs and preferences for the software.
Phrase: Identifying and expressing user needs
---