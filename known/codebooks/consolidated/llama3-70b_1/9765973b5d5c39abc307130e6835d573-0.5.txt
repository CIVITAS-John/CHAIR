You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: recognizes ai plotting errors, recognizing ai's error detection
- Participants recognize and identify errors in AI-generated plots.
- Participants engage with AI feedback and recognize AI's ability to detect errors.

2.
Concepts: critiquing error messages, expressing confusion with error messages
- Participants critique current error messages and seek informative feedback.
- Participants express confusion and identify misleading error messages.

3.
Concepts: envisions ai-assisted customized documentation, envisioning ai-based jargon translation for communication ease
- Participants emphasize the importance of customized documentation, envisioning AI-assisted customization for different user groups.
- Participants believe in AI's potential to translate jargon and envision AI-based jargon translation for customized documentation.

4.
Concepts: novice pain points, recognizes novice struggles
- Identifies common issues faced by novices in NetLogo.
- Participants recognize beginners' struggles with NetLogo concepts.

5.
Concepts: discussing code quality and complexity, emphasizing code quality importance
- Participants discuss code quality and complexity.
- Participants emphasize code quality importance and demonstrate thorough code review.

6.
Concepts: highlights cognitive load, recognizing cognitive load in error handling
- Participants suggest showing one error at a time to avoid overwhelming users.
- The participant recognizes the cognitive load associated with error handling and suggests ways to mitigate it.

7.
Concepts: reflects on programming experience, shares programming experience and code analysis insights
- Reflects on extensive programming experience and its implications for AI-driven systems.
- Participants share their extensive programming experience and code analysis experience with LLM-driven interfaces.

8.
Concepts: values community support, appreciates online user groups
- Participants value community support and online resources for problem-solving.
- Interviewee appreciates the value of online user groups for problem-solving.

9.
Concepts: promotes help-seeking culture, encouraging help seeking behavior
- Participants promote a culture of asking for help.
- Reflects on the importance of seeking help.

10.
Concepts: hands-on debugging preference, prefers manual coding and direct code corrections
- Participants prefer hands-on debugging over relying on AI explanations.
- Participants prefer manual coding over copying AI-generated code, seeking direct code corrections.

11.
Concepts: demonstrates independence, fixes errors independently
- Participants demonstrate self-reliance and independence in error resolution.
- Participants rely on their own expertise to fix common NetLogo mistakes.

12.
Concepts: chooses to fix, prioritizing fixing errors
- Participants choose to fix a problem rather than explaining it.
- Participants prefer the "fix" option when encountering errors and prioritize fixing errors over explaining the problem.
===
Here are the definitions for each code:

---
1.
Concepts: recognizes ai plotting errors, recognizing ai's error detection
Relationship: The concepts are related as they both involve participants' awareness of AI's capabilities in detecting errors.
Criteria: Participants identify AI-generated plot errors and engage with AI feedback to recognize its error detection abilities.
Phrase: Recognizing AI's error detection capabilities.

2.
Concepts: critiquing error messages, expressing confusion with error messages
Relationship: The concepts are related as they both involve participants' reactions to current error messages.
Criteria: Participants critique and express confusion with current error messages, seeking more informative feedback.
Phrase: Critiquing error messages.

3.
Concepts: envisions ai-assisted customized documentation, envisioning ai-based jargon translation for communication ease
Relationship: The concepts are related as they both involve participants' visions for AI-assisted documentation.
Criteria: Participants envision AI-assisted customized documentation and AI-based jargon translation for easier communication.
Phrase: Envisioning AI-assisted documentation.

4.
Concepts: novice pain points, recognizes novice struggles
Relationship: The concepts are related as they both involve participants' awareness of novice difficulties.
Criteria: Participants identify common issues faced by novices and recognize beginners' struggles with NetLogo concepts.
Phrase: Recognizing novice struggles.

5.
Concepts: discussing code quality and complexity, emphasizing code quality importance
Relationship: The concepts are related as they both involve participants' focus on code quality.
Criteria: Participants discuss code quality and complexity, emphasizing its importance and demonstrating thorough code review.
Phrase: Emphasizing code quality importance.

6.
Concepts: highlights cognitive load, recognizing cognitive load in error handling
Relationship: The concepts are related as they both involve participants' awareness of cognitive load.
Criteria: Participants recognize the cognitive load associated with error handling and suggest ways to mitigate it.
Phrase: Recognizing cognitive load.

7.
Concepts: reflects on programming experience, shares programming experience and code analysis insights
Relationship: The concepts are related as they both involve participants' reflections on their programming experience.
Criteria: Participants reflect on their extensive programming experience and share insights on code analysis with LLM-driven interfaces.
Phrase: Sharing programming experience insights.

8.
Concepts: values community support, appreciates online user groups
Relationship: The concepts are related as they both involve participants' appreciation for community resources.
Criteria: Participants value community support and appreciate online user groups for problem-solving.
Phrase: Valuing community support.

9.
Concepts: promotes help-seeking culture, encouraging help seeking behavior
Relationship: The concepts are related as they both involve participants' promotion of help-seeking.
Criteria: Participants promote a culture of asking for help and reflect on the importance of seeking help.
Phrase: Promoting help-seeking culture.

10.
Concepts: hands-on debugging preference, prefers manual coding and direct code corrections
Relationship: The concepts are related as they both involve participants' preferences for hands-on debugging.
Criteria: Participants prefer hands-on debugging over relying on AI explanations and prefer manual coding with direct code corrections.
Phrase: Preferring hands-on debugging.

11.
Concepts: demonstrates independence, fixes errors independently
Relationship: The concepts are related as they both involve participants' self-reliance in error resolution.
Criteria: Participants demonstrate self-reliance and independence in error resolution, relying on their own expertise.
Phrase: Demonstrating independence.

12.
Concepts: chooses to fix, prioritizing fixing errors
Relationship: The concepts are related as they both involve participants' preferences for fixing errors.
Criteria: Participants choose to fix errors rather than explaining them, prioritizing fixing errors over explaining the problem.
Phrase: Prioritizing error fixing.