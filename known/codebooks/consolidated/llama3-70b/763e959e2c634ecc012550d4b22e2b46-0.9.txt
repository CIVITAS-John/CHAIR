You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (16 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
16. 
Concepts: {Repeat the input 16}
Relationship: {What is logical relationship between concepts in code 16, or N/A if not applicable}
Criteria: {Who did what, and how for code 16}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: appreciating clear code, appreciation for clear and readable code
- Appreciating clear, commented, and well-documented code generated by the AI, rather than complex or condensed code.
- Preferring well-commented and documented code over complex, condensed solutions.

2.
Concepts: prefers readable code, prefers simple and readable code
- The interviewee values code readability and appreciates when AI-generated code is easy to understand and well-commented.
- The interviewee values simplicity and readability in code, making it easier to maintain and understand.

3.
Concepts: recognizing the importance of code testing, importance of incremental testing and debugging
- The interviewee recognizes the importance of code testing and debugging in the development process.
- The interviewee highlights the importance of incremental testing and debugging.

4.
Concepts: code complexity and quality, discussing code complexity
- Discussing code complexity and quality.
- Discussing the importance of code simplicity and maintainability

5.
Concepts: emphasizing plain code importance, emphasizing code readability
- The participant emphasizes the importance of plain code for maintenance.
- The participant emphasizes the importance of code readability and simplicity for future maintenance.

6.
Concepts: uses ai-generated code entirely, using ai-generated code due to time constraints
- Using AI-generated code entirely due to time constraints
- Uses AI-generated code completely due to time constraints.

7.
Concepts: realizing time constraints, using ai-generated code under time pressure, adapting to time constraints
- Realizing time constraints, using AI-generated code completely.
- Uses AI-generated code under time constraints.
- Adapts to time constraints, such as using AI-generated code completely when time is limited.
- Recognizes the finite time available for learning and the potential of AI to save time.

8.
Concepts: uses ai code due to time constraints, relying on ai output under time pressure
- The interviewee uses AI-generated code due to time constraints.
- The interviewee relies on AI output when facing time constraints.

9.
Concepts: copying and pasting code, reading ai output and copying code
- The participant decides to copy and paste code from the AI output.
- Reading AI output and deciding to copy and paste code

10.
Concepts: selective use of ai-generated code, maintaining control over coding process
- The interviewee selectively uses AI-generated code, choosing to write their own code with AI suggestions as reference.
- The interviewee prefers to maintain control over the coding process by writing their own code with AI-generated suggestions as reference.

11.
Concepts: manual coding with ai guidance, writing code with ai guidance, manual coding with ai-provided steps, manual coding with ai assistance, manually codes with ai guidance
- Using AI-generated code as a reference to write own code manually.
- Writes code manually with AI guidance, rather than copying and pasting.
- The participant writes code manually with AI-provided steps, rather than copying and pasting code.
- The participant writes code manually with the AI's guidance.
- Writes code manually with AI guidance, rather than copying and pasting code.

12.
Concepts: referencing generated code, using generated code as reference
- Refers to generated code or uses it as a reference.
- Uses generated code as a reference when writing one's own code.

13.
Concepts: uses ai code as reference, avoids direct code copying
- The participant uses AI-generated code as a reference rather than copying and pasting it.
- The participant avoids direct code copying, using generated code only as a reference.

14.
Concepts: adapting to ai-generated code, integrating ai-generated code, selectively copying code from ai output
- Interviewee adapts to AI-generated code by selectively copying code.
- The interviewee integrates AI-generated code into their work, selectively copying code to the model.
- Integrating AI-generated code into a model, with the user selectively copying code.
- The interviewee selectively copies code from AI output, choosing what to use and what to modify.

15.
Concepts: adapts based on ai generated code, flexibility in using ai-generated code
- The interviewee adapts their approach based on AI-generated code and feedback.
- The participant demonstrates flexibility in their approach to using AI-generated code.

16.
Concepts: selective code copying, selectively copying ai code, selective code integration
- Selectively copying code from AI-generated output.
- Selectively copies AI-generated code.
- Selectively copies AI-generated code into the model
- Users selectively copy code from the AI's response to their model, integrating relevant parts into their work.
===
Here are the definitions for each code:

---
1.
Concepts: appreciating clear code, appreciation for clear and readable code
Relationship: The concepts are closely related, as appreciating clear code implies an appreciation for code that is readable and well-documented.
Criteria: Interviewees appreciate AI-generated code that is clear, commented, and well-documented.
Phrase: Appreciates clear code

2.
Concepts: prefers readable code, prefers simple and readable code
Relationship: The concepts are synonymous, as preferring readable code implies a preference for simplicity and ease of understanding.
Criteria: Interviewees prefer AI-generated code that is simple and easy to understand.
Phrase: Prefers readable code

3.
Concepts: recognizing the importance of code testing, importance of incremental testing and debugging
Relationship: The concepts are closely related, as recognizing the importance of code testing implies an understanding of the need for incremental testing and debugging.
Criteria: Interviewees recognize the importance of testing and debugging AI-generated code.
Phrase: Recognizes importance of testing

4.
Concepts: code complexity and quality, discussing code complexity
Relationship: The concepts are closely related, as discussing code complexity implies a consideration of code quality.
Criteria: Interviewees discuss the complexity and quality of AI-generated code.
Phrase: Discusses code complexity

5.
Concepts: emphasizing plain code importance, emphasizing code readability
Relationship: The concepts are synonymous, as emphasizing the importance of plain code implies an emphasis on code readability.
Criteria: Interviewees emphasize the importance of plain and readable code for maintenance.
Phrase: Emphasizes code readability

6.
Concepts: uses ai-generated code entirely, using ai-generated code due to time constraints
Relationship: The concepts are closely related, as using AI-generated code entirely implies doing so due to time constraints.
Criteria: Interviewees use AI-generated code entirely due to time constraints.
Phrase: Uses AI-generated code entirely

7.
Concepts: realizing time constraints, using ai-generated code under time pressure, adapting to time constraints
Relationship: The concepts are closely related, as realizing time constraints implies using AI-generated code under time pressure and adapting to these constraints.
Criteria: Interviewees realize time constraints and adapt by using AI-generated code.
Phrase: Adapts to time constraints

8.
Concepts: uses ai code due to time constraints, relying on ai output under time pressure
Relationship: The concepts are synonymous, as using AI-generated code due to time constraints implies relying on AI output under time pressure.
Criteria: Interviewees use AI-generated code due to time constraints.
Phrase: Relies on AI output

9.
Concepts: copying and pasting code, reading ai output and copying code
Relationship: The concepts are closely related, as copying and pasting code implies reading AI output and deciding to copy and paste code.
Criteria: Interviewees copy and paste code from AI-generated output.
Phrase: Copies and pastes code

10.
Concepts: selective use of ai-generated code, maintaining control over coding process
Relationship: The concepts are closely related, as selective use of AI-generated code implies a desire to maintain control over the coding process.
Criteria: Interviewees selectively use AI-generated code to maintain control over the coding process.
Phrase: Uses AI-generated code selectively

11.
Concepts: manual coding with ai guidance, writing code with ai guidance, manual coding with ai-provided steps, manual coding with ai assistance, manually codes with ai guidance
Relationship: The concepts are synonymous, as manual coding with AI guidance implies writing code with AI-provided steps and assistance.
Criteria: Interviewees write code manually with AI guidance.
Phrase: Writes code manually with AI guidance

12.
Concepts: referencing generated code, using generated code as reference
Relationship: The concepts are synonymous, as referencing generated code implies using it as a reference.
Criteria: Interviewees reference AI-generated code when writing their own code.
Phrase: References generated code

13.
Concepts: uses ai code as reference, avoids direct code copying
Relationship: The concepts are closely related, as using AI-generated code as a reference implies avoiding direct code copying.
Criteria: Interviewees use AI-generated code as a reference rather than copying and pasting it.
Phrase: Uses AI-generated code as reference

14.
Concepts: adapting to ai-generated code, integrating ai-generated code, selectively copying code from ai output
Relationship: The concepts are closely related, as adapting to AI-generated code implies integrating it into one's work and selectively copying code from AI output.
Criteria: Interviewees adapt to AI-generated code by selectively copying code.
Phrase: Adapts to AI-generated code

15.
Concepts: adapts based on ai generated code, flexibility in using ai-generated code
Relationship: The concepts are closely related, as adapting based on AI-generated code implies demonstrating flexibility in its use.
Criteria: Interviewees adapt their approach based on AI-generated code and feedback.
Phrase: Adapts to AI-generated code feedback

16.
Concepts: selective code copying, selectively copying ai code, selective code integration
Relationship: The concepts are synonymous, as selective code copying implies selectively copying AI-generated code and integrating it into one's work.
Criteria: Interviewees selectively copy code from AI-generated output.
Phrase: Selectively copies AI-generated code