You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another and please do not merge them.
Determine the logical relationship between concepts within each code, such as inclusion, parallel, or intersection.
Write clear and generalizable criteria for each code and do not introduce unnecessary details. Then, write an accurate verb phrase as label for the combined concept.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (33 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Label: {A consolidated verb phrase of code 1}
...
33. 
Concepts: {Repeat the input 33}
Relationship: {What is logical relationship between concepts in code 33, or N/A if not applicable}
Criteria: {Who did what, and how for code 33}
Label: {A consolidated verb phrase of code 33}
---
~~~
1.
Concepts: identify as teacher, share teaching experiences
- Users identify as teachers or discuss teaching-related matters.
- Users introduce their teaching identity and share their teaching experiences.

2.
Concepts: share professional background, sharing identity per request
- Users share their professional or personal background to establish credibility and context.
- A user discloses their professional background or experience in response to a request for such information.

3.
Concepts: request resources, community resource
- Users request resources such as user manuals or downloadable content.
- Users or designers discuss or request shared resources like manuals.

4.
Concepts: express comprehension, acknowledge agreement
- Expressing understanding or agreement.
- Users confirm or agree with statements, questions, or responses in a conversation.

5.
Concepts: agree with suggestion, agree with design ideas
- A user agrees with a suggestion made by someone else.
- Users express agreement or concurrence with design ideas or suggestions within the community.

6.
Concepts: give positive feedback, express positive feedback
- Users provide short or affirmative responses to queries or statements.
- Users express approval or positive reactions to ideas, features, or updates.

7.
Concepts: discuss classroom use, share educational impact
- Users discuss their experiences and contexts of using the software in classroom settings.
- Users share their experiences and the impact of the software on their teaching or learning in educational settings.

8.
Concepts: follow-up on grade level, inquire about user background
- Following up on a user's teaching background to gather more information.
- Asking about a user's background or experience and their teaching background to understand their needs better.

9.
Concepts: inquire about user identity, confirm professional identity
- Designers inquire about the user's identity or role.
- Users or designers confirm or inquire about a user's professional role, including confirming their identity as a teacher.

10.
Concepts: provide contextual explanations, contextualize questions
- Users provide context or explanations for situations or responses.
- Users provide contextual information about their environment or specific conditions to frame their questions.

11.
Concepts: encourage further inquiries, request contextual information, seek follow-up clarification
- A designer invites users to ask more questions and encourages users to provide more detailed information.
- A designer asks for context or additional information from the user and asks a question about a user's request.
- Designers follow up with additional questions for clarity on user requests or usage scenarios, and a user provides information relevant to design considerations.

12.
Concepts: inquire about software access, inquire about platform compatibility
- Users ask about how to access or download the software, including specific versions.
- Users inquire about the availability and specifications of the software on different platforms.

13.
Concepts: seek information, ask technical questions, inquire about application features
- Users ask questions to seek information or clarification related to the software.
- Users ask technical questions about the application or its features.
- Users ask questions about features, updates, or other aspects of the software application.

14.
Concepts: provide update notes, clarify version details
- Designers describe bug fixes, improvements, and provide detailed update notes.
- Designers provide detailed information and clarification about software version updates and features.

15.
Concepts: provide platform updates, provide product updates
- Designers provide updates and information specific to different software platforms.
- Designers provide updates and instructions to help users understand and use the software effectively.

16.
Concepts: introduce update content, preview upcoming features
- Designers engage users by providing an overview of what will be included in an update.
- Designers provide a visual preview, list, or detailed explanation of upcoming features.

17.
Concepts: explain features, explain component functionality, introduce feature functions
- Designers provide explanations or examples to illustrate how a feature functions.
- A designer describes the functionalities or explains the capabilities of a specific or new component.
- Introducing or explaining the functions of a feature.

18.
Concepts: highlight educational tools, highlight educational utility
- Highlighting educational tools and features within the software.
- Emphasizing the educational value and applications of the software features.

19.
Concepts: encourage user discussion, encourage feature suggestions
- Designers encourage users to discuss issues, ask questions, or engage in discussions in the future.
- Designers invite users to suggest new features or improvements, and users provide suggestions to enhance feature usability.

20.
Concepts: design support answers, sharing information for design
- Users provide direct answers to questions or design inquiries posed by the designer.
- Users share information relevant to the design.

21.
Concepts: open communication, encourage open communication
- A designer encourages open communication and feedback.
- Users or designers actively encourage open communication and problem-solving within the group.

22.
Concepts: visual and functional design, discuss design and layout
- Discussions about the visual and functional aspects of the software.
- Discussions about design choices or considerations, and users and designers discuss preferences for interface layout.

23.
Concepts: memory aid, gather user opinions
- A designer mentions a need to gather opinions to aid memory.
- A designer seeks input or advice from the group on specific topics and mentions gathering opinions or feedback from users.

24.
Concepts: provide update schedule, provide feature roadmap
- Designers provide a schedule for upcoming updates or new versions.
- Designers outline the order and timeline in which new features or sections will be developed and released.

25.
Concepts: reflection on experiences, reflect on design process
- A designer reflects on their previous experience using the software in an educational setting.
- A designer shares their thoughts on the design process or decisions and discusses or reflects on a previous attempt or action.

26.
Concepts: provide workaround, provide usability workaround
- Providing temporary solutions or workarounds for existing issues.
- Designers provide a workaround for usability issues.

27.
Concepts: address user concerns, address usability problems
- Designers address and provide information to alleviate user concerns.
- Designers analyze and offer solutions for technical or usability issues encountered by users.

28.
Concepts: commit to software improvements, emphasize continuous improvement
- A designer promises to improve the software based on user feedback and expresses gratitude and commitment to future improvements.
- A designer details changes and adjustments to software components and emphasizes the ongoing improvements and adjustments being made to the software.

29.
Concepts: propose user-centric improvements, advocate for design simplification
- A designer discusses catering to user needs by improving a feature and suggests a feature for broader usability.
- A designer or user discusses the importance of simplification and refinement in design, and a designer or developer suggests making an aspect of the design or a feature simpler.

30.
Concepts: discuss feature optimization, discuss iterative development
- Designers discuss ongoing efforts to improve and optimize features.
- Instances where designers discuss updates, new features, or bug fixes as part of a process of continuously refining and improving the product.

31.
Concepts: discuss release process, discuss software updates
- Designers discuss the process and status of releasing updates or features.
- Designers discuss upcoming or recent software updates and download options.

32.
Concepts: acknowledge system limitations, explain platform limitations
- Designers acknowledge limitations in system compatibility or usability.
- Designers explain the limitations of the software platform and why certain features cannot be implemented.

33.
Concepts: educational needs
- A user describes specific educational needs and requests features related to those needs.
- Users describe their school's needs and specific educational use cases for the software.
===
---
Definitions for each code (33 in total):
1.
Concepts: identify as teacher, share teaching experiences
Relationship: Parallel
Criteria: Users identify themselves as teachers and share their teaching experiences or related matters.
Label: Share teaching identity and experiences

2.
Concepts: share professional background, sharing identity per request
Relationship: Parallel
Criteria: Users share their professional background either voluntarily or in response to a request for such information.
Label: Share professional background

3.
Concepts: request resources, community resource
Relationship: Intersection
Criteria: Users request resources such as manuals or downloadable content, and discussions around community-shared resources occur.
Label: Request and discuss community resources

4.
Concepts: express comprehension, acknowledge agreement
Relationship: Parallel
Criteria: Users express understanding or agreement with statements, questions, or responses in a conversation.
Label: Express comprehension and agreement

5.
Concepts: agree with suggestion, agree with design ideas
Relationship: Inclusion
Criteria: Users express agreement with suggestions or design ideas within the community.
Label: Agree with suggestions or design ideas

6.
Concepts: give positive feedback, express positive feedback
Relationship: Parallel
Criteria: Users provide positive responses or express approval of ideas, features, or updates.
Label: Give positive feedback

7.
Concepts: discuss classroom use, share educational impact
Relationship: Parallel
Criteria: Users discuss how they use the software in classroom settings and share its educational impact.
Label: Discuss classroom use and educational impact

8.
Concepts: follow-up on grade level, inquire about user background
Relationship: Inclusion
Criteria: Users or designers follow up on a user's teaching background to gather more information about their needs.
Label: Inquire about user background and teaching context

9.
Concepts: inquire about user identity, confirm professional identity
Relationship: Inclusion
Criteria: Designers or users inquire about or confirm a user's professional role, such as their identity as a teacher.
Label: Inquire and confirm professional identity

10.
Concepts: provide contextual explanations, contextualize questions
Relationship: Inclusion
Criteria: Users provide context or explanations to frame their questions or responses.
Label: Provide contextual explanations

11.
Concepts: encourage further inquiries, request contextual information, seek follow-up clarification
Relationship: Parallel
Criteria: Designers encourage users to ask more questions, request additional contextual information, and seek follow-up clarification on user requests or usage scenarios.
Label: Encourage further inquiries and seek clarification

12.
Concepts: inquire about software access, inquire about platform compatibility
Relationship: Parallel
Criteria: Users inquire about how to access the software and its compatibility with different platforms.
Label: Inquire about software access and compatibility

13.
Concepts: seek information, ask technical questions, inquire about application features
Relationship: Inclusion
Criteria: Users ask questions to seek information or clarification about technical aspects and features of the software.
Label: Seek information and ask technical questions

14.
Concepts: provide update notes, clarify version details
Relationship: Inclusion
Criteria: Designers provide detailed notes and clarifications about software updates and versions.
Label: Provide update notes and version details

15.
Concepts: provide platform updates, provide product updates
Relationship: Inclusion
Criteria: Designers provide updates specific to different software platforms and general product updates.
Label: Provide platform and product updates

16.
Concepts: introduce update content, preview upcoming features
Relationship: Inclusion
Criteria: Designers engage users by introducing update content and previewing upcoming features.
Label: Introduce updates and preview features

17.
Concepts: explain features, explain component functionality, introduce feature functions
Relationship: Inclusion
Criteria: Designers explain how features and components function, introducing their capabilities.
Label: Explain feature and component functionality

18.
Concepts: highlight educational tools, highlight educational utility
Relationship: Inclusion
Criteria: Emphasizing the educational tools and value of the software features.
Label: Highlight educational tools and utility

19.
Concepts: encourage user discussion, encourage feature suggestions
Relationship: Parallel
Criteria: Designers encourage users to discuss issues and suggest new features or improvements.
Label: Encourage discussion and feature suggestions

20.
Concepts: design support answers, sharing information for design
Relationship: Parallel
Criteria: Users provide answers to design-related questions and share information relevant to the design process.
Label: Share design support and information

21.
Concepts: open communication, encourage open communication
Relationship: Inclusion
Criteria: Designers and users actively encourage open communication and feedback within the group.
Label: Encourage open communication

22.
Concepts: visual and functional design, discuss design and layout
Relationship: Inclusion
Criteria: Discussions about the visual and functional aspects of the software, including interface layout preferences.
Label: Discuss visual and functional design

23.
Concepts: memory aid, gather user opinions
Relationship: Parallel
Criteria: Designers mention the need to gather user opinions to aid memory and seek input or advice from the group.
Label: Gather user opinions

24.
Concepts: provide update schedule, provide feature roadmap
Relationship: Inclusion
Criteria: Designers provide a schedule and roadmap for upcoming updates and new features.
Label: Provide update schedule and feature roadmap

25.
Concepts: reflection on experiences, reflect on design process
Relationship: Parallel
Criteria: Designers reflect on their previous experiences using the software and the design process.
Label: Reflect on experiences and design process

26.
Concepts: provide workaround, provide usability workaround
Relationship: Inclusion
Criteria: Designers provide temporary solutions or workarounds for existing usability issues.
Label: Provide usability workarounds

27.
Concepts: address user concerns, address usability problems
Relationship: Inclusion
Criteria: Designers address user concerns and provide solutions for technical or usability issues.
Label: Address user concerns and usability problems

28.
Concepts: commit to software improvements, emphasize continuous improvement
Relationship: Inclusion
Criteria: Designers commit to improving the software based on user feedback and emphasize ongoing improvements.
Label: Commit to continuous software improvement

29.
Concepts: propose user-centric improvements, advocate for design simplification
Relationship: Inclusion
Criteria: Designers discuss user-centric improvements and advocate for design simplification.
Label: Propose user-centric improvements and simplification

30.
Concepts: discuss feature optimization, discuss iterative development
Relationship: Inclusion
Criteria: Designers discuss efforts to optimize features as part of continuous iterative development.
Label: Discuss feature optimization and iterative development

31.
Concepts: discuss release process, discuss software updates
Relationship: Inclusion
Criteria: Designers discuss the process and status of releasing updates or features.
Label: Discuss release process and software updates

32.
Concepts: acknowledge system limitations, explain platform limitations
Relationship: Inclusion
Criteria: Designers acknowledge and explain limitations in system compatibility or usability.
Label: Acknowledge and explain system limitations

33.
Concepts: educational needs
Relationship: N/A
Criteria: Users describe specific educational needs and request features related to those needs.
Label: Describe educational needs
---