You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (7 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
7. {Repeat the input 7}
Relationship: {The logical relationship between concepts in input 7}
Criteria: {A sentence of consolidated criteria for code 7}
Label: {A consolidated label of code 7}
Category: {2-4 words for code 7}
---
~~~
1. seeking information, providing information.
- Instances where participants seek information or clarification from others in the community.
- Instances where participants share knowledge, information, or resources with others in the community.

2. emoji usage, image sharing.
- Instances where participants use emojis in their communication, potentially indicating shared norms or practices within the community.
- Instances where participants share images or screenshots, potentially indicating shared norms or practices within the community.

3. designer soliciting user input, soliciting feedback and input.
- The designer explicitly asking for feedback or instances of designer-user communication.
- Instances where developers or designers actively solicit feedback, suggestions, or input from the community or stakeholders during the design and development process.

4. active learning, educational features for understanding.
- Aspects of the software that encourage active learning, experimentation, or hands-on engagement with physics concepts.
- Features or affordances aimed at facilitating conceptual physics understanding through visualizations or simulations.

5. usability issues, pedagogical constraints.
- Quotes that mention usability issues or challenges with the software.
- Quotes that identify potential constraints or limitations of the software in supporting learning.

6. feature planning, prioritization of development tasks.
- Discussions around planned software features and capabilities.
- Discussions or decisions regarding the priority or order of features/sections to be developed.

7. component update, software updates and releases, sharing updates.
- Information or announcements about updates or changes to software components or functionality.
- Mentions of new versions, releases, planned updates, or upcoming features of Physics Lab software.
- Instances where developers or designers share information about upcoming updates or changes to the software.
===
---
Categories:
* Community Dynamics
* Design Processes
* Learning Affordances 
* Software Development

Definitions for each code (7 in total):

1. seeking information, providing information.
Relationship: Parallel concepts of information exchange within the community.
Criteria: Instances where participants seek, share, or exchange information, knowledge, or resources.
Label: Information Seeking and Sharing
Category: Community Dynamics

2. emoji usage, image sharing.
Relationship: Parallel concepts of using non-text communication modes.
Criteria: Instances where participants use emojis, images, or visuals in their communication.
Label: Non-text Communication
Category: Community Dynamics

3. designer soliciting user input, soliciting feedback and input. 
Relationship: Broader concept of soliciting input from users/stakeholders.
Criteria: Instances where designers or developers actively seek feedback, suggestions, or input from the community or stakeholders.
Label: Soliciting User Input
Category: Design Processes

4. active learning, educational features for understanding.
Relationship: Parallel concepts related to learning affordances.
Criteria: Features or aspects of the software that encourage active learning, experimentation, or facilitate conceptual understanding.
Label: Learning Affordances
Category: Learning Affordances

5. usability issues, pedagogical constraints.
Relationship: Parallel concepts related to limitations or challenges.
Criteria: Mentions of usability issues, constraints, or limitations of the software in supporting learning or usability.
Label: Software Limitations
Category: Software Development

6. feature planning, prioritization of development tasks.
Relationship: Broader concept of planning and prioritizing software development.
Criteria: Discussions or decisions regarding planned features, capabilities, and prioritization of development tasks.
Label: Development Planning
Category: Software Development

7. component update, software updates and releases, sharing updates.
Relationship: Parallel concepts related to software updates and releases.
Criteria: Information, announcements, or sharing of updates, releases, or changes to the software components or functionality.
Label: Software Updates
Category: Software Development
---