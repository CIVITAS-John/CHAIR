You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (26 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
26. 
Concepts: {Repeat the input 26}
Relationship: {What is logical relationship between concepts in code 26, or N/A if not applicable}
Criteria: {Who did what, and how for code 26}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: expressing frustration, express frustration with current limitations
- Users express frustration or dissatisfaction with a system or tool.
- Designer expresses frustration or annoyance with current limitations.

2.
Concepts: suggest simplification, simplifying features
- Suggesting or advocating for simplification or streamlining of a design or feature.
- Designers simplify or refine a feature or design element, focusing on simplification and refinement in design or development.

3.
Concepts: component update, component integration
- Updating or modifying existing components or features.
- Integrating new components or features into the system.

4.
Concepts: design adaptation, component adjustments
- Identifying or discussing the need for design adaptations or changes.
- Designer discusses changes or adjustments to the platform's components or properties.

5.
Concepts: design refinement, feature adjustments
- Refining or improving a design or feature based on feedback or input.
- Adjusting or refining features or components based on user feedback or needs.

6.
Concepts: usability considerations, usability improvement
- Focusing on designing or improving the usability of a feature or product.
- Instances where suggestions or changes are made to improve the usability of the software.

7.
Concepts: discussing system compatibility, suggest checking compatibility, assuring compatibility
- Designers discuss or confirm system compatibility of the software.
- Designers suggest checking the compatibility of the system with different platforms or devices.
- Designers confirm or verify compatibility with specific devices, systems, or versions, and assure users about the platform's compatibility.

8.
Concepts: user interface, usability discussion
- Discussing or inquiring about the user interface.
- Discussing or considering the usability or user experience of the app.

9.
Concepts: collaborative planning, interface layout decisions
- Designers and users collaboratively discussing and planning the development of the software.
- Users or designers discuss or decide on the layout or design of the software's interface.

10.
Concepts: discussing input methods, soft keyboard consideration
- Designers discuss or explore different input methods or options for the software.
- A designer considers or discusses the implementation of a soft keyboard feature.

11.
Concepts: clarify version type, version clarification
- Clarification or explanation of version types or differences.
- Clarifying or asking about the version of the app or software.

12.
Concepts: new feature explanation, explanation of upcoming features
- Explaining or describing new features or updates in the app.
- Descriptions or explanations of upcoming features or developments.

13.
Concepts: technical clarification, clarify existing feature
- Clarifying technical aspects or functionality of features or components.
- The designer clarifies or explains the functionality or features of the platform.

14.
Concepts: functionality explanation, component functionality
- Explaining how a feature or component works.
- Discussing the functionality or capabilities of components.

15.
Concepts: feature details, simulation detail
- Providing detailed information about a feature or component.
- Explaining or detailing simulation aspects or features.

16.
Concepts: access, direct users to resources
- A designer provides access to resources, such as development plans or download links.
- The designer directs users to resources, such as downloadable files or group files.

17.
Concepts: proper operation guidance, providing feature guidance, explaining software features
- A designer ensures that users understand how to properly operate the software.
- Designers provide guidance on using a specific feature or functionality, and provide instructions or guidance on how to use a feature.
- Designers provide explanations about software features to users.

18.
Concepts: rationale provision, providing reasons, giving reasons
- User provides a rationale.
- Users provide reasons or justification for a specific feature or functionality.
- Providing reasons or justification for an action or decision.

19.
Concepts: explaining the need, justify effort
- Designer explains the need or purpose behind a feature or update.
- Designer justifies or explains the effort or reasoning behind a design decision or feature.

20.
Concepts: practicality, emphasize convenience
- Highlighting the practicality or usefulness of something.
- Emphasizing the importance of convenience or ease of use.

21.
Concepts: design principles, explain design philosophy
- Explaining the design principles or philosophies behind the Physics Lab.
- The underlying principles and approaches guiding the design and development of the product.

22.
Concepts: making design decisions, discussing design decisions
- Designers make decisions about the design of the Physics Lab online community.
- Designers discuss or explain design decisions, features, or technical aspects of the Physics Lab, and explain the development process or technical aspects of the Physics Lab.

23.
Concepts: reiterate bidirectional conversion, explain bidirectional conversion
- Designer reiterates or emphasizes the bidirectional conversion feature.
- Designer explains or describes the process of bidirectional conversion or synchronization.

24.
Concepts: complexity explanation, discussing design challenges
- A designer explains the complexity or challenges of implementing a feature.
- Designers mention difficulties or challenges in development.

25.
Concepts: share knowledge, sharing technical details
- A designer shares knowledge or information about the software's features, limitations, or technical aspects.
- Designers share technical details or specifications about a feature or system.

26.
Concepts: design thoughts, sharing information for design
- Sharing thoughts or ideas about the design or development process.
- Sharing information or experiences related to design or development.
===
Here are the definitions for each code:

---
1.
Concepts: expressing frustration, express frustration with current limitations
Relationship: The concepts are related as they both convey a sense of dissatisfaction with the current state of the system or tool.
Criteria: Users or designers express dissatisfaction with a system or tool, highlighting its limitations.
Phrase: Express frustration with limitations.

2.
Concepts: suggest simplification, simplifying features
Relationship: The concepts are related as they both aim to improve the design or feature by making it more streamlined.
Criteria: Designers suggest or implement simplifications to improve the design or feature.
Phrase: Suggest simplification.

3.
Concepts: component update, component integration
Relationship: The concepts are related as they both involve modifying or adding new components to the system.
Criteria: Designers update or integrate new components or features into the system.
Phrase: Update or integrate components.

4.
Concepts: design adaptation, component adjustments
Relationship: The concepts are related as they both involve making changes to the design or components.
Criteria: Designers discuss or make adjustments to the platform's components or properties.
Phrase: Adapt or adjust design.

5.
Concepts: design refinement, feature adjustments
Relationship: The concepts are related as they both aim to improve the design or feature based on feedback.
Criteria: Designers refine or adjust features based on user feedback or needs.
Phrase: Refine design.

6.
Concepts: usability considerations, usability improvement
Relationship: The concepts are related as they both focus on improving the usability of the feature or product.
Criteria: Designers focus on improving the usability of the software.
Phrase: Improve usability.

7.
Concepts: discussing system compatibility, suggest checking compatibility, assuring compatibility
Relationship: The concepts are related as they all involve ensuring the system's compatibility with different platforms or devices.
Criteria: Designers discuss, suggest, or confirm system compatibility.
Phrase: Ensure compatibility.

8.
Concepts: user interface, usability discussion
Relationship: The concepts are related as they both involve discussing the user interface and its usability.
Criteria: Designers discuss the user interface and its usability.
Phrase: Discuss user interface.

9.
Concepts: collaborative planning, interface layout decisions
Relationship: The concepts are related as they both involve collaborative decision-making about the software's development.
Criteria: Designers and users collaboratively plan and decide on the interface layout.
Phrase: Plan interface layout.

10.
Concepts: discussing input methods, soft keyboard consideration
Relationship: The concepts are related as they both involve exploring input methods for the software.
Criteria: Designers discuss or consider input methods, including soft keyboards.
Phrase: Discuss input methods.

11.
Concepts: clarify version type, version clarification
Relationship: The concepts are related as they both involve clarifying version differences or types.
Criteria: Designers clarify or explain version types or differences.
Phrase: Clarify version.

12.
Concepts: new feature explanation, explanation of upcoming features
Relationship: The concepts are related as they both involve explaining new or upcoming features.
Criteria: Designers explain new or upcoming features.
Phrase: Explain features.

13.
Concepts: technical clarification, clarify existing feature
Relationship: The concepts are related as they both involve clarifying technical aspects or functionality.
Criteria: Designers clarify technical aspects or functionality of features.
Phrase: Clarify functionality.

14.
Concepts: functionality explanation, component functionality
Relationship: The concepts are related as they both involve explaining how features or components work.
Criteria: Designers explain how features or components work.
Phrase: Explain functionality.

15.
Concepts: feature details, simulation detail
Relationship: The concepts are related as they both involve providing detailed information about features or components.
Criteria: Designers provide detailed information about features or components.
Phrase: Provide feature details.

16.
Concepts: access, direct users to resources
Relationship: The concepts are related as they both involve providing access to resources or directing users to them.
Criteria: Designers provide access to resources or direct users to them.
Phrase: Provide access.

17.
Concepts: proper operation guidance, providing feature guidance, explaining software features
Relationship: The concepts are related as they all involve guiding users on how to use the software.
Criteria: Designers provide guidance on using the software or its features.
Phrase: Provide guidance.

18.
Concepts: rationale provision, providing reasons, giving reasons
Relationship: The concepts are related as they all involve providing justification or reasons for a decision or feature.
Criteria: Users or designers provide reasons or justification for a decision or feature.
Phrase: Provide rationale.

19.
Concepts: explaining the need, justify effort
Relationship: The concepts are related as they both involve explaining the purpose or reasoning behind a feature or update.
Criteria: Designers explain the need or justify the effort behind a feature or update.
Phrase: Justify effort.

20.
Concepts: practicality, emphasize convenience
Relationship: The concepts are related as they both involve highlighting the practical benefits of a feature or design.
Criteria: Designers emphasize the practicality or convenience of a feature or design.
Phrase: Emphasize convenience.

21.
Concepts: design principles, explain design philosophy
Relationship: The concepts are related as they both involve explaining the underlying principles guiding the design.
Criteria: Designers explain the design principles or philosophy behind the Physics Lab.
Phrase: Explain design principles.

22.
Concepts: making design decisions, discussing design decisions
Relationship: The concepts are related as they both involve making or discussing design decisions.
Criteria: Designers make or discuss design decisions.
Phrase: Make design decisions.

23.
Concepts: reiterate bidirectional conversion, explain bidirectional conversion
Relationship: The concepts are related as they both involve explaining or emphasizing the bidirectional conversion feature.
Criteria: Designers explain or reiterate the bidirectional conversion feature.
Phrase: Explain bidirectional conversion.

24.
Concepts: complexity explanation, discussing design challenges
Relationship: The concepts are related as they both involve explaining the complexity or challenges of implementing a feature.
Criteria: Designers explain the complexity or challenges of implementing a feature.
Phrase: Explain complexity.

25.
Concepts: share knowledge, sharing technical details
Relationship: The concepts are related as they both involve sharing information about the software's features or technical aspects.
Criteria: Designers share knowledge or technical details about the software.
Phrase: Share knowledge.

26.
Concepts: design thoughts, sharing information for design
Relationship: The concepts are related as they both involve sharing thoughts or information related to design or development.
Criteria: Designers share thoughts or information related to design or development.
Phrase: Share design thoughts.