You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (25 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
25. 
Concepts: {Repeat the input 25}
Relationship: {What is logical relationship between concepts in code 25, or N/A if not applicable}
Criteria: {Who did what, and how for code 25}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: expressive, using non-verbal communication
- Users and designers use emojis and informal language to express themselves.
- Users communicate using emojis and other non-verbal forms to express emotions or reactions.

2.
Concepts: explain answer, providing context
- Users explaining answers to questions or concerns.
- Users explain situations and provide additional context or background information.

3.
Concepts: acknowledgment and support, acknowledging community expertise
- Instances where support and acknowledgment are expressed within the community.
- Acknowledging the expertise within the community.

4.
Concepts: identifying teacher role, sharing teaching background
- Users identify themselves as teachers or discuss teaching-related requests.
- Users introduce themselves by mentioning their teaching experience and grade level.

5.
Concepts: listing future updates, sharing and confirming update timelines, promising future updates
- Participants discuss future updates and list features that will be included in upcoming updates.
- Participants share the expected timeline for updates and confirm the occurrence of feature updates.
- Participants commit to including features or updates in future releases and promise to enhance features later.

6.
Concepts: making announcements, communicating with the community
- Designers inform the community about new versions, updates, future plans, or important information.
- Designers share updates, information, or resources with the community.

7.
Concepts: engaging users with updates, addressing platform-specific updates
- Designers communicate updates, release schedules, and engage users by discussing updates and addressing feedback.
- Designers specify and discuss updates and information related to different platforms.

8.
Concepts: discussing future plans, discussing update plans
- Designers discuss future plans, potential updates, and design considerations for future features and improvements.
- Designers share information about changes or new features in upcoming updates and provide specific information about the schedule and planning process.

9.
Concepts: explaining development process, ensuring development transparency
- Designers explain and communicate aspects and phases of the development process.
- Designers ensure transparency by providing detailed information about development processes and progress.

10.
Concepts: describing planned features, clarifying feature functionality
- Participants explain planned features and provide examples of how they function or could be used.
- Participants provide design support answers and clarify feature functionality.

11.
Concepts: user guidance, usage instruction
- Designers provide user guidance or instructions.
- A designer provides instructions on how to use a feature or component.

12.
Concepts: adapting design plans, planning based on user input
- Designers adapt the design plan based on user feedback or requirements.
- Designers acknowledge user suggestions and discuss plans for implementation based on user input.

13.
Concepts: design decision, explaining design rationale
- Designers make or clarify a design decision.
- Designers explain the principles and rationale guiding their design and development decisions.

14.
Concepts: quick response, demonstrating designer responsiveness
- Designers quickly respond to user inquiries.
- Designers respond to user queries, feedback, or suggestions, showing attentiveness to user needs.

15.
Concepts: promise to develop future app, suggesting future possibilities
- Statements about potential future development projects.
- Designers promise certain features will be realized and hint at potential future projects or features.

16.
Concepts: optimizing features, refining design and features
- Designers discuss the need for adjustments and optimization of features before implementation.
- Designers discuss refining the design and improving specific software features.

17.
Concepts: emphasizing quality, addressing usability concerns
- Designers emphasize the importance of quality in features to meet user needs.
- Designers address usability concerns and consider the impact of features on user experience.

18.
Concepts: expressing approval with emojis, expressing approval and appreciation
- Users express their reactions, often using emojis to show approval or acknowledgment.
- Users express approval and appreciation for feedback, ideas, features, and ongoing or proposed plans.

19.
Concepts: information seeking, inquiring about software usage
- Users asking questions to gain knowledge or resources related to the software.
- Users or designers ask about various aspects of the software, including technical questions.

20.
Concepts: proposing usability improvements, committing to user-driven improvements
- Users suggest new features and improvements to the software's usability and workflow.
- Designers promise to seek feedback and commit to improving the software based on user input.

21.
Concepts: engaging with user feedback, inviting and responding to user feedback
- Designers encourage users to provide feedback and respond to their suggestions for improvements.
- Designers seek future input, respond to feature requests, and invite users to suggest new features or improvements.

22.
Concepts: consulting community, seeking community input
- Seeking input or feedback from the community.
- Designers request suggestions and gather opinions from the community before making decisions.

23.
Concepts: offer support, providing user support
- Offering support or assistance to users.
- Participants offer personalized and technical support to help users effectively use the software.

24.
Concepts: suggesting solutions, offering problem-solving solutions
- Participants share workarounds and suggest potential solutions to problems.
- Participants troubleshoot and offer solutions to user questions or problems.

25.
Concepts: acknowledging potential issues, acknowledging technical constraints
- Participants note and acknowledge potential issues or bugs in the software.
- Participants discuss and acknowledge the technical constraints and limitations of the software.
===
---
Definitions for each code (25 in total):
1.
Concepts: expressive, using non-verbal communication
Relationship: Both concepts involve the use of non-verbal elements to convey thoughts or emotions.
Criteria: Users and designers use emojis and informal language to express emotions or reactions.
Phrase: Expressing non-verbally

2.
Concepts: explain answer, providing context
Relationship: Both concepts involve giving detailed explanations to enhance understanding.
Criteria: Users explain answers to questions and provide additional context or background information.
Phrase: Explaining with context

3.
Concepts: acknowledgment and support, acknowledging community expertise
Relationship: Both concepts involve recognizing and supporting the skills and contributions of community members.
Criteria: Instances where support and acknowledgment are expressed within the community, recognizing the expertise of others.
Phrase: Acknowledging and supporting expertise

4.
Concepts: identifying teacher role, sharing teaching background
Relationship: Both concepts involve users identifying themselves based on their teaching roles and experiences.
Criteria: Users identify themselves as teachers and share their teaching background and grade level.
Phrase: Identifying teaching roles

5.
Concepts: listing future updates, sharing and confirming update timelines, promising future updates
Relationship: All concepts involve discussions about future software updates and timelines.
Criteria: Participants discuss future updates, share and confirm timelines, and promise enhancements in future releases.
Phrase: Discussing future updates

6.
Concepts: making announcements, communicating with the community
Relationship: Both concepts involve sharing important information with the community.
Criteria: Designers inform the community about new versions, updates, future plans, or important information.
Phrase: Announcing to the community

7.
Concepts: engaging users with updates, addressing platform-specific updates
Relationship: Both concepts involve updating users about platform-specific changes and engaging them in discussions.
Criteria: Designers communicate updates, release schedules, and engage users by addressing feedback specific to different platforms.
Phrase: Engaging with platform updates

8.
Concepts: discussing future plans, discussing update plans
Relationship: Both concepts involve discussions about future updates and plans.
Criteria: Designers share information about changes or new features in upcoming updates and provide specific information about the schedule and planning process.
Phrase: Discussing future plans

9.
Concepts: explaining development process, ensuring development transparency
Relationship: Both concepts involve providing detailed information about the development process.
Criteria: Designers explain aspects and phases of the development process to ensure transparency.
Phrase: Explaining development process

10.
Concepts: describing planned features, clarifying feature functionality
Relationship: Both concepts involve providing detailed explanations about planned features and their functionality.
Criteria: Participants explain planned features and clarify how they function or could be used.
Phrase: Describing and clarifying features

11.
Concepts: user guidance, usage instruction
Relationship: Both concepts involve providing instructions and guidance to users.
Criteria: Designers provide user guidance and instructions on how to use features or components.
Phrase: Providing user instructions

12.
Concepts: adapting design plans, planning based on user input
Relationship: Both concepts involve modifying design plans based on user feedback.
Criteria: Designers adapt the design plan based on user feedback and discuss plans for implementation.
Phrase: Adapting based on user input

13.
Concepts: design decision, explaining design rationale
Relationship: Both concepts involve making and explaining design decisions.
Criteria: Designers make design decisions and explain the principles and rationale guiding those decisions.
Phrase: Explaining design decisions

14.
Concepts: quick response, demonstrating designer responsiveness
Relationship: Both concepts involve responding promptly to user inquiries.
Criteria: Designers quickly respond to user queries, feedback, or suggestions, showing attentiveness to user needs.
Phrase: Responding promptly

15.
Concepts: promise to develop future app, suggesting future possibilities
Relationship: Both concepts involve discussing potential future development projects.
Criteria: Designers promise certain features will be realized and hint at potential future projects or features.
Phrase: Promising future development

16.
Concepts: optimizing features, refining design and features
Relationship: Both concepts involve improving and optimizing features before implementation.
Criteria: Designers discuss the need for adjustments and optimization of features before implementation.
Phrase: Refining and optimizing features

17.
Concepts: emphasizing quality, addressing usability concerns
Relationship: Both concepts involve focusing on the quality and usability of features.
Criteria: Designers emphasize the importance of quality in features and address usability concerns.
Phrase: Emphasizing quality and usability

18.
Concepts: expressing approval with emojis, expressing approval and appreciation
Relationship: Both concepts involve showing approval and appreciation, often using emojis.
Criteria: Users express their reactions using emojis to show approval and appreciation for feedback, ideas, or features.
Phrase: Expressing approval

19.
Concepts: information seeking, inquiring about software usage
Relationship: Both concepts involve asking questions to gain knowledge about the software.
Criteria: Users ask questions to gain knowledge or resources related to the software.
Phrase: Seeking information

20.
Concepts: proposing usability improvements, committing to user-driven improvements
Relationship: Both concepts involve suggesting and committing to improvements based on user input.
Criteria: Users suggest new features and improvements, and designers commit to improving the software based on user input.
Phrase: Proposing and committing to improvements

21.
Concepts: engaging with user feedback, inviting and responding to user feedback
Relationship: Both concepts involve encouraging and responding to user feedback.
Criteria: Designers encourage users to provide feedback and respond to their suggestions for improvements.
Phrase: Engaging with feedback

22.
Concepts: consulting community, seeking community input
Relationship: Both concepts involve seeking input and feedback from the community.
Criteria: Designers request suggestions and gather opinions from the community before making decisions.
Phrase: Consulting the community

23.
Concepts: offer support, providing user support
Relationship: Both concepts involve offering assistance and support to users.
Criteria: Participants offer personalized and technical support to help users effectively use the software.
Phrase: Offering user support

24.
Concepts: suggesting solutions, offering problem-solving solutions
Relationship: Both concepts involve providing solutions to problems.
Criteria: Participants share workarounds and suggest potential solutions to user questions or problems.
Phrase: Suggesting solutions

25.
Concepts: acknowledging potential issues, acknowledging technical constraints
Relationship: Both concepts involve recognizing issues and constraints within the software.
Criteria: Participants note and acknowledge potential issues or bugs and discuss technical constraints and limitations.
Phrase: Acknowledging issues and constraints
---