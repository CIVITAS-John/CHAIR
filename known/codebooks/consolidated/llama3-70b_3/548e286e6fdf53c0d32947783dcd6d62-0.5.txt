You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: explaining plans, sharing development plans
- Explaining plans, goals, or objectives
- Sharing or referring to development plans, timelines, or roadmaps.

2.
Concepts: prioritization, development prioritization, suggest prioritization
- Statements indicating the order in which tasks or features will be developed.
- Instances where designers discuss the prioritization of different features or sections to be developed.
- User suggests prioritizing features or development.

3.
Concepts: feature implementation, planning feature development
- Implementing or planning to add new features or functionalities.
- Discussing or planning the development of a new feature or functionality.

4.
Concepts: estimated completion date, give a timeline of feature development
- A designer or developer gives a tentative or estimated completion date for a feature or update.
- A designer provides a timeline for the development of a feature.

5.
Concepts: sharing development updates, providing development updates
- Designers share information about development updates or new features.
- Information shared by designers about the current status, updates, and future plans for the Physics Lab software.

6.
Concepts: managing release processes, providing review status updates
- Designers discuss the process or status of releasing new versions or updates.
- Designers provide updates or status reports on the review or approval process of software.

7.
Concepts: describe update scope, providing update details, instruction and updates
- Designers describe the scope of software updates.
- Designers provide detailed information about updates or changes.
- Designers providing updates and instructions to help users understand and use the software effectively.

8.
Concepts: engage with development process, platform development interest
- A user engages with the development process or asks about updates.
- A user expresses interest in the development or updates of a specific platform.

9.
Concepts: answer about progress, respond to developer's earlier information
- The developer responds to a question about the progress of a feature or update.
- The speaker responds to the developer's earlier information on feature development.

10.
Concepts: feature preview, explanation of upcoming features
- A preview or sneak peek of upcoming features or updates.
- Descriptions or explanations of upcoming features or developments.

11.
Concepts: testing phase, clarify testing status
- Announcements or descriptions of testing phases or processes.
- Clarifications about the status of testing or development.

12.
Concepts: clarify version type, version clarification
- Clarifications about the type or nature of a version or update.
- A participant seeks or provides clarification about different versions of a product or software.

13.
Concepts: design challenges, development difficulty
- Issues and obstacles faced by designers during the development process.
- A designer or developer discusses the challenges or complexity of developing a feature or update.

14.
Concepts: acknowledge limitations, explain platform limitations
- A designer acknowledges the limitations or potential issues of a feature or technology.
- Designers explain limitations, constraints, or technical issues with the platform.

15.
Concepts: system limitations, explain current version's limitation
- Mentioning limitations or constraints of a system or technology
- An explanation or description of the limitations or constraints of a current version or tool.

16.
Concepts: answer about compatibility, platform compatibility inquiry
- Designer responds to a question about compatibility with a specific platform.
- A user inquires about the compatibility of the software with a specific platform.

17.
Concepts: system compatibility, suggesting checking compatibility of the system, confirming compatibility
- Discussing compatibility or technical requirements
- Designer suggests checking the compatibility of the system with a specific platform.
- Designers confirm the compatibility of the software with specific devices or systems.

18.
Concepts: explain design goals, explain intention of the app design
- Designer explains the design goals or philosophy behind a feature or tool.
- Designer explains the intention or design philosophy behind the app.

19.
Concepts: design decision, design rationale
- Making or explaining design decisions or choices.
- A person explains the rationale behind a design decision.

20.
Concepts: context, gather context
- A person provides context or background information about their situation.
- A person asks for or seeks context or background information.

21.
Concepts: give reason, give rationale to development decision
- Providing a reason or justification for an action or decision
- A person provides a rationale for a development decision.

22.
Concepts: explanation, technical clarification, elaboration
- Providing explanations or clarifications on specific topics
- Providing technical clarification or explanation about a feature or functionality.
- Providing additional details or explanations about a technical aspect.

23.
Concepts: introducing features, providing examples of feature functionality
- Introduce feature functions involves explaining or showcasing the capabilities or functionalities of the Physics Lab online community.
- Participants provide examples or illustrations of features or functionalities.

24.
Concepts: feature explanation, explaining feature importance
- Explaining features, functionalities, or how-to's
- Explaining the importance or significance of a feature or functionality.

25.
Concepts: discussing ease of use, highlight practicality
- Users comment on the practicality or ease of use of the software.
- A user or designer mentions the practicality of a software or feature.

26.
Concepts: feature stability, long-term stability
- Discussing the stability or reliability of a feature or functionality.
- A designer mentions the long-term stability of a feature or solution.

27.
Concepts: experiment assessment, simulated experiment
- Discussing details of a simulated experiment assessment.
- A designer discusses or plans a simulated experiment or assessment feature.

28.
Concepts: explaining complexity, explaining new features
- Designers explain the complexity of a feature or tool.
- Designers explain or introduce new features or components.

29.
Concepts: component integration, component functionality
- A designer discusses the integration of components or features.
- A designer describes the functionality of a component.

30.
Concepts: noting potential bugs, bug fixes and updates
- Noting potential issues or bugs in the Physics Lab.
- Listing or describing bug fixes, new features, or component adjustments in the Physics Lab.

31.
Concepts: discuss usability, research and development
- A designer discusses usability issues or ideas related to Physics Lab.
- A designer discusses research and development activities related to Physics Lab.

32.
Concepts: making a request, physics concepts, suggest practical use case
- A user makes a specific request or asks for a feature or functionality in the Physics Lab online community.
- A user discusses or requests specific physics concepts or demonstrations in the Physics Lab online community.
- A user suggests a practical use case or scenario for a feature or functionality in the Physics Lab online community.
===
Here are the definitions for each code:

---
1.
Concepts: explaining plans, sharing development plans
Relationship: The concepts are related as they both involve sharing information about future development.
Criteria: Designers share information about development plans or timelines.
Phrase: Share development plans.

2.
Concepts: prioritization, development prioritization, suggest prioritization
Relationship: The concepts are related as they all involve determining the order of tasks or features.
Criteria: Designers or users prioritize tasks or features for development.
Phrase: Prioritize development tasks.

3.
Concepts: feature implementation, planning feature development
Relationship: The concepts are related as they both involve planning or implementing new features.
Criteria: Designers plan or implement new features or functionalities.
Phrase: Plan feature development.

4.
Concepts: estimated completion date, give a timeline of feature development
Relationship: The concepts are related as they both involve providing a timeline for feature development.
Criteria: Designers provide a timeline for feature development.
Phrase: Provide development timeline.

5.
Concepts: sharing development updates, providing development updates
Relationship: The concepts are related as they both involve sharing information about development progress.
Criteria: Designers share information about development updates or new features.
Phrase: Share development updates.

6.
Concepts: managing release processes, providing review status updates
Relationship: The concepts are related as they both involve managing the release of new versions or updates.
Criteria: Designers manage the release process or provide review status updates.
Phrase: Manage release process.

7.
Concepts: describe update scope, providing update details, instruction and updates
Relationship: The concepts are related as they all involve providing information about updates.
Criteria: Designers describe the scope of software updates or provide detailed information.
Phrase: Describe update scope.

8.
Concepts: engage with development process, platform development interest
Relationship: The concepts are related as they both involve users engaging with the development process.
Criteria: Users engage with the development process or express interest in platform development.
Phrase: Engage with development process.

9.
Concepts: answer about progress, respond to developer's earlier information
Relationship: The concepts are related as they both involve responding to questions or earlier information.
Criteria: Designers respond to questions about progress or earlier information.
Phrase: Respond to progress inquiry.

10.
Concepts: feature preview, explanation of upcoming features
Relationship: The concepts are related as they both involve providing information about upcoming features.
Criteria: Designers provide a preview or explanation of upcoming features.
Phrase: Preview upcoming features.

11.
Concepts: testing phase, clarify testing status
Relationship: The concepts are related as they both involve providing information about testing.
Criteria: Designers announce or clarify the testing phase or status.
Phrase: Clarify testing status.

12.
Concepts: clarify version type, version clarification
Relationship: The concepts are related as they both involve clarifying information about versions.
Criteria: Designers clarify the type or nature of a version or update.
Phrase: Clarify version type.

13.
Concepts: design challenges, development difficulty
Relationship: The concepts are related as they both involve discussing obstacles in the development process.
Criteria: Designers discuss challenges or difficulties in developing a feature or update.
Phrase: Discuss development challenges.

14.
Concepts: acknowledge limitations, explain platform limitations
Relationship: The concepts are related as they both involve acknowledging or explaining limitations.
Criteria: Designers acknowledge or explain limitations or potential issues of a feature or technology.
Phrase: Acknowledge limitations.

15.
Concepts: system limitations, explain current version's limitation
Relationship: The concepts are related as they both involve explaining limitations of a system or technology.
Criteria: Designers explain limitations or constraints of a system or technology.
Phrase: Explain system limitations.

16.
Concepts: answer about compatibility, platform compatibility inquiry
Relationship: The concepts are related as they both involve responding to questions about compatibility.
Criteria: Designers respond to questions about compatibility with a specific platform.
Phrase: Respond to compatibility inquiry.

17.
Concepts: system compatibility, suggesting checking compatibility of the system, confirming compatibility
Relationship: The concepts are related as they all involve discussing compatibility or technical requirements.
Criteria: Designers discuss or confirm compatibility or suggest checking compatibility.
Phrase: Discuss system compatibility.

18.
Concepts: explain design goals, explain intention of the app design
Relationship: The concepts are related as they both involve explaining the design philosophy or goals.
Criteria: Designers explain the design goals or philosophy behind a feature or tool.
Phrase: Explain design goals.

19.
Concepts: design decision, design rationale
Relationship: The concepts are related as they both involve explaining the reasoning behind a design decision.
Criteria: Designers explain the rationale behind a design decision.
Phrase: Explain design rationale.

20.
Concepts: context, gather context
Relationship: The concepts are related as they both involve providing or seeking background information.
Criteria: Participants provide or seek context or background information.
Phrase: Provide context.

21.
Concepts: give reason, give rationale to development decision
Relationship: The concepts are related as they both involve providing a justification for an action or decision.
Criteria: Designers provide a reason or rationale for a development decision.
Phrase: Provide development rationale.

22.
Concepts: explanation, technical clarification, elaboration
Relationship: The concepts are related as they all involve providing additional information or clarification.
Criteria: Designers provide explanations, technical clarification, or elaboration.
Phrase: Provide technical clarification.

23.
Concepts: introducing features, providing examples of feature functionality
Relationship: The concepts are related as they both involve introducing or explaining features.
Criteria: Designers introduce features or provide examples of feature functionality.
Phrase: Introduce feature functionality.

24.
Concepts: feature explanation, explaining feature importance
Relationship: The concepts are related as they both involve explaining features or their importance.
Criteria: Designers explain features or their importance.
Phrase: Explain feature importance.

25.
Concepts: discussing ease of use, highlight practicality
Relationship: The concepts are related as they both involve discussing the usability or practicality of the software.
Criteria: Users comment on the practicality or ease of use of the software.
Phrase: Discuss ease of use.

26.
Concepts: feature stability, long-term stability
Relationship: The concepts are related as they both involve discussing the stability or reliability of a feature.
Criteria: Designers discuss the stability or reliability of a feature or solution.
Phrase: Discuss feature stability.

27.
Concepts: experiment assessment, simulated experiment
Relationship: The concepts are related as they both involve discussing or planning experiments or assessments.
Criteria: Designers discuss or plan simulated experiments or assessments.
Phrase: Plan simulated experiment.

28.
Concepts: explaining complexity, explaining new features
Relationship: The concepts are related as they both involve explaining complex or new features.
Criteria: Designers explain complex or new features or functionalities.
Phrase: Explain feature complexity.

29.
Concepts: component integration, component functionality
Relationship: The concepts are related as they both involve discussing components or their integration.
Criteria: Designers discuss the integration of components or their functionality.
Phrase: Discuss component integration.

30.
Concepts: noting potential bugs, bug fixes and updates
Relationship: The concepts are related as they both involve discussing or addressing issues or bugs.
Criteria: Designers note potential issues or bugs or list bug fixes and updates.
Phrase: Note potential bugs.

31.
Concepts: discuss usability, research and development
Relationship: The concepts are related as they both involve discussing usability or research and development activities.
Criteria: Designers discuss usability issues or research and development activities.
Phrase: Discuss usability issues.

32.
Concepts: making a request, physics concepts, suggest practical use case
Relationship: The concepts are related as they all involve users making requests or suggesting ideas.
Criteria: Users make requests or suggest practical use cases for features or functionalities.
Phrase: Make a request.