You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (64 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
64. 
Concepts: {Repeat the input 64}
Relationship: {What is logical relationship between concepts in code 64, or N/A if not applicable}
Criteria: {Who did what, and how for code 64}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: giving reasons, justification of efforts
- Participants provide rationales for their actions or decisions.
- Who provides reasoning to justify their choices or efforts.

2.
Concepts: explaining the plans, development rationale
- Plans and reasoning behind feature implementation decisions.
- Providing reasons or justification behind development choices or feature implementations.

3.
Concepts: simulated experiment, explain simulation detail
- Discussing simulated experiments and their functionalities in the software.
- Explaining specific details or adjustments in the simulation elements of the software.

4.
Concepts: elaboration, elaborating on suggestions
- Detailed explanation or analysis of a specific feature or solution.
- Explains a detailed feature or suggestion in the application.

5.
Concepts: explaining technical artifacts, explaining software features
- Explaining specific technical aspects or artifacts within the software.
- Designers provide examples and detailed explanations of software features and functionalities.

6.
Concepts: compare software, comparison with other applications, compare with other software
- Participants provide feedback by comparing the software with others.
- Who compares software performance or usability with other existing applications.
- A user compares the software favorably against other similar software.

7.
Concepts: review software, sharing positive feedback
- Users provide reviews and share their experiences using the software.
- Users share positive feedback and praise the software.

8.
Concepts: appreciate features, compliment visual/functionality
- Participants express appreciation for specific software features.
- Users compliment specific visual or functional aspects of the software.

9.
Concepts: invite to co-design, user-designer interaction
- Designers invite users to contribute to the design process collaboratively.
- The collaborative interaction between users and designers that contributes to the design process.

10.
Concepts: knowledge sharing, shared experiences and support
- When designers or users share knowledge, information, or functionality details about the software.
- Users and designers sharing experiences and supporting each other in using and improving the software.

11.
Concepts: offer help, user feedback and communication
- Designers offer assistance and invite users to share their issues.
- Designers encourage users to report problems and provide feedback.

12.
Concepts: ease of use, address usability
- Discussions related to the ease of use and user-friendliness of the software.
- Addressing the usability of the software, including design decisions made to facilitate ease of use.

13.
Concepts: highlight usability, emphasize usability improvements
- Participants highlight the practical usability of the software.
- Participants provide feedback highlighting the need for usability improvements.

14.
Concepts: user interface, usability improvement
- Discussions related to user interface issues or enhancements.
- Instances where suggestions or changes are made to improve the usability of the software.

15.
Concepts: suggesting design simplification, discussing usability improvements
- Designers discuss or suggest simplifying software features or designs.
- Designers discuss efforts to improve software usability and feature optimization.

16.
Concepts: designer engagement, connect to community
- A designer shows personal interest or engagement in related topics.
- A designer connects their interests to the community's focus areas.

17.
Concepts: making design decisions, design decision rationale
- Who mentions a design or efficacy decision in the process.
- Who explains the rationale behind specific design choices.

18.
Concepts: explain design philosophy, explaining design principles
- The underlying principles and approaches guiding the design and development of the product.
- Designers explain the principles and intentions behind software design choices.

19.
Concepts: simplification approach, simplification and refinement in design
- Designer mentions design approach aimed at simplification.
- A shared understanding about keeping design features simple and focused.

20.
Concepts: manual adjustment mention, manual adjustments suggestion
- When designers mention or describe the possibility of manual adjustments.
- Recommending manual adjustments to users as an alternative to automatic ones.

21.
Concepts: consider local export, local export necessity
- Considering the need to include a local export functionality in the software.
- When designers discuss the necessity or support for local export features.

22.
Concepts: proposing suggestions, accepting suggestions
- Participants suggest alternatives or new recommendations.
- Participants accept and agree to consider or implement suggestions.

23.
Concepts: request new features, additional experiment request
- Users suggest specific features or improvements for the Physics Lab tool.
- When users request new experiments or features to be added to the software.

24.
Concepts: propose new features, feature request invitation, suggesting collaboration
- Participants propose ideas for additional software features.
- Designers invite users to suggest new features or improvements.
- Users suggesting collaboration on new features or experiments.

25.
Concepts: classroom application feature, educational enhancement suggestions
- When users discuss or request features for classroom applications.
- Users suggesting enhancements or features specific to educational applications.

26.
Concepts: request, detailed feature request
- A user making a detailed request for specific features or demonstrations in the application.
- Making detailed and specific requests for new features or improvements.

27.
Concepts: ask about user needs, considering community needs
- A designer asks the community about their needs or preferences.
- Who acknowledges user needs and how feedback may influence future implementations.

28.
Concepts: suggestion solicitation, broader feedback solicitation
- Soliciting suggestions or additional requirements from users.
- Explicit invitation to the community to provide more ideas or requirements.

29.
Concepts: asking for future help, announcing future plans
- A designer indicates they will seek help or input from the community in the future.
- Designers announce future plans or updates, sometimes seeking community input.

30.
Concepts: opinion gathering, opinion gathering for memory
- Designers describe plans for gathering opinions before proceeding with tasks.
- When designers refer to gathering opinions as a memory aid for planning.

31.
Concepts: elicit feedback, plan for iterative feedback
- Gathering feedback or suggestions in a structured way to inform future development.
- Planning to gather user feedback before proceeding with certain developments.

32.
Concepts: clarify user needs, seek detailed requirements, seek user issue details
- Participants ask follow-up questions to better understand user needs.
- Participants solicit detailed user requirements to refine development.
- Participants inquire about user issues to understand and address their needs.

33.
Concepts: balancing user needs, catering to user needs
- Who considers user needs while discussing possible solutions.
- Who discusses efforts to meet user needs in design or functionality.

34.
Concepts: react to user's story, reaction to feedback
- A designer reacts to a user's story or comment.
- A designer reacts to user feedback by indicating planned updates or changes.

35.
Concepts: acknowledgment and implementation, acknowledging and integrating feedback
- Designers acknowledging user feedback and discussing plans to implement suggested features.
- Designers acknowledge and integrate user feedback into the design process.

36.
Concepts: feedback acknowledgement, feedback acknowledgment
- Who notes user feedback and links it to future changes or updates.
- Receiving and acknowledging user feedback about development priorities or ordering.

37.
Concepts: self-help, resolve issues independently
- User identifies independent utilization of resources without additional help.
- Participants acknowledge their ability to resolve issues using available resources.

38.
Concepts: share workaround, usability workaround
- Sharing a workaround or alternative method to accomplish a task.
- Describing workarounds to overcome usability issues or limitations.

39.
Concepts: openness to alternatives, offering/seeking alternative
- Indicating openness to alternative approaches or feedback-based adaptations.
- Offering or seeking alternatives to a given solution or consideration.

40.
Concepts: problem solving, offering solutions, share potential solutions
- When issues are addressed, and solutions are offered.
- When solutions to problems or availability of resources are offered.
- Sharing solutions or approaches to potential problems or feedback.

41.
Concepts: indirect answer, vague response to feature request
- A designer gives an indirect answer to a user's query.
- A designer gives a vague response to feature requests or development queries.

42.
Concepts: respond to inquiry, response to initial inquiry
- Responding directly to user inquiries or questions.
- When an initial inquiry receives a detailed response or next steps.

43.
Concepts: clarification response, requesting clarification
- Designer responding to a requested clarification.
- Users or designers request further clarity or elaboration on usability or design preferences.

44.
Concepts: follow-up on design information, follow-up discussion
- A user follows up on previous design information or decisions.
- When users or designers follow up on previous discussions, especially regarding technical compatibility or requirements.

45.
Concepts: clarify preference, specific choice response
- A user clarifies their preference on a specific issue or feature.
- Users provide direct responses regarding preferences or configurations.

46.
Concepts: classroom success illustration, describe students' positive responses
- When users describe successful use of the software in a classroom or instructional setting.
- A user describes students' positive reactions to the software in class.

47.
Concepts: user experience and impact, user experience in educational contexts
- Users sharing their experiences and the impact of the software on their teaching or learning.
- User experiences and challenges in using the software within educational settings.

48.
Concepts: indicate user need, emphasize importance for school
- A user indicates a need related to school initiatives or specific documentation.
- Users emphasize their need for certain resources or information.

49.
Concepts: community context, mention school initiative
- A user provides context about the community or their school's initiatives.
- Users mention or discuss initiatives or projects related to their schools.

50.
Concepts: share teaching experiences, sharing teaching experience
- Participants share their teaching experiences and backgrounds.
- When teaching experience with grade level and years is shared.

51.
Concepts: compatibility assurance, compatibility clarification
- Statements ensuring that the software should be compatible with a range of hardware or systems.
- Design specifies the necessary compatibility requirements for the software to function.

52.
Concepts: check compatibility, confirming compatibility
- A designer suggests checking the system compatibility for potential issues.
- Designers discuss and confirm software compatibility with different systems.

53.
Concepts: touch screen information, on-screen keyboard discussion
- Informing about touch screen features, particularly the on-screen keyboard.
- Discussion about on-screen keyboard function for touch screen devices.

54.
Concepts: platform specification, platform specific update
- Specifying the platform for which a feature or update applies.
- Updates or announcements referring to platform-specific issues or news.

55.
Concepts: highlight outdated technology, mentioning outdated technology
- Highlighting the use of outdated technology or systems.
- Who comments on the outdated state of technology or infrastructure.

56.
Concepts: classroom setup inquiry, inquire about classroom conditions
- A designer asks about the classroom setup, focusing on internet availability.
- Inquiring about the connectivity and technology available in classrooms.

57.
Concepts: technical issue, address technical problems
- Identifying specific technical issues faced by users.
- Participants engage in identifying and solving technical issues.

58.
Concepts: addressing technical considerations, consider technical requirements
- Participants discuss technical requirements affecting software
- A participant considers the technical requirements or infrastructure needed for an action.

59.
Concepts: asking about software access, platform availability inquiry
- Users ask for information regarding access or downloading the software.
- When users ask for clarification on where to find or download specific versions of the software.

60.
Concepts: platform feature inquiry, inquire about platform compatibility
- When inquiries about platform-specific features or updates are made.
- Inquiring about compatibility with specific platforms.

61.
Concepts: resource inquiry, community resource
- User asks for specific resources such as downloads or manuals.
- Community members discuss or request resources like user manuals or guides.

62.
Concepts: information seeking, seeking guidance on software usage, requesting documentation
- Users asking questions to gain knowledge or resources related to the software.
- Users request instructions or guidance on using or understanding particular software features.
- Users request manuals or documentation for better understanding of the software.

63.
Concepts: multiple technical questions, technical inquiry
- Multiple queries regarding application usage and troubleshooting.
- Instances where users ask technical questions about the platform, indicating areas of user interest or potential issues.

64.
Concepts: functional tips, provide practical advice
- Offering tips about functionality or feature use in the software.
- Offering practical advice or tips to enhance usage or overcome a problem.
===
---
Definitions for each code (64 in total):

1.
Concepts: giving reasons, justification of efforts
Relationship: N/A
Criteria: Participants provide rationales for their actions or decisions to justify their efforts.
Phrase: Justify actions with reasoning

2.
Concepts: explaining the plans, development rationale
Relationship: N/A
Criteria: Participants explain the plans and the reasons behind feature implementation decisions.
Phrase: Explain development reasoning

3.
Concepts: simulated experiment, explain simulation detail
Relationship: N/A
Criteria: Participants discuss simulated experiments and explain specific details or adjustments in the simulation elements of the software.
Phrase: Explain simulation details

4.
Concepts: elaboration, elaborating on suggestions
Relationship: N/A
Criteria: Participants provide detailed explanations or analyses of specific features or solutions.
Phrase: Elaborate on suggestions

5.
Concepts: explaining technical artifacts, explaining software features
Relationship: N/A
Criteria: Designers provide examples and detailed explanations of specific technical aspects and software features.
Phrase: Explain software features

6.
Concepts: compare software, comparison with other applications, compare with other software
Relationship: Complementary
Criteria: Participants compare the software's performance or usability with other existing applications.
Phrase: Compare with other software

7.
Concepts: review software, sharing positive feedback
Relationship: N/A
Criteria: Users provide reviews and share positive feedback and their experiences with the software.
Phrase: Share positive reviews

8.
Concepts: appreciate features, compliment visual/functionality
Relationship: N/A
Criteria: Participants express appreciation and compliment specific visual or functional aspects of the software.
Phrase: Compliment features

9.
Concepts: invite to co-design, user-designer interaction
Relationship: Complementary
Criteria: Designers invite users to collaborate and contribute to the design process.
Phrase: Invite to co-design

10.
Concepts: knowledge sharing, shared experiences and support
Relationship: Complementary
Criteria: Users and designers share knowledge, experiences, and support each other in using and improving the software.
Phrase: Share knowledge and support

11.
Concepts: offer help, user feedback and communication
Relationship: Complementary
Criteria: Designers offer assistance and encourage users to report problems and provide feedback.
Phrase: Encourage user feedback

12.
Concepts: ease of use, address usability
Relationship: N/A
Criteria: Discussions focus on the ease of use and user-friendliness of the software.
Phrase: Discuss ease of use

13.
Concepts: highlight usability, emphasize usability improvements
Relationship: Complementary
Criteria: Participants highlight the software's practical usability and emphasize the need for usability improvements.
Phrase: Emphasize usability improvements

14.
Concepts: user interface, usability improvement
Relationship: Complementary
Criteria: Discussions focus on user interface issues or enhancements and suggestions to improve usability.
Phrase: Discuss user interface improvements

15.
Concepts: suggesting design simplification, discussing usability improvements
Relationship: Complementary
Criteria: Designers discuss or suggest efforts to simplify software features and improve usability.
Phrase: Suggest design simplifications

16.
Concepts: designer engagement, connect to community
Relationship: Complementary
Criteria: Designers show personal interest and engage with the community's focus areas.
Phrase: Engage with community interests

17.
Concepts: making design decisions, design decision rationale
Relationship: Complementary
Criteria: Participants mention design decisions and explain the rationale behind those choices.
Phrase: Explain design decisions

18.
Concepts: explain design philosophy, explaining design principles
Relationship: Complementary
Criteria: Designers explain the principles and approaches guiding the design and development of the product.
Phrase: Explain design principles

19.
Concepts: simplification approach, simplification and refinement in design
Relationship: Complementary
Criteria: Designers mention and share an understanding about keeping design features simple and focused.
Phrase: Discuss design simplifications

20.
Concepts: manual adjustment mention, manual adjustments suggestion
Relationship: Complementary
Criteria: Designers mention the possibility or recommend manual adjustments to users as an alternative to automatic ones.
Phrase: Suggest manual adjustments

21.
Concepts: consider local export, local export necessity
Relationship: Complementary
Criteria: Designers discuss the necessity and support for including a local export function in the software.
Phrase: Discuss local export features

22.
Concepts: proposing suggestions, accepting suggestions
Relationship: Complementary
Criteria: Participants suggest alternatives or new recommendations and accept or consider implementing these suggestions.
Phrase: Propose and accept suggestions

23.
Concepts: request new features, additional experiment request
Relationship: Complementary
Criteria: Users request specific features or new experiments to be added to the Physics Lab tool.
Phrase: Request new features

24.
Concepts: propose new features, feature request invitation, suggesting collaboration
Relationship: Complementary
Criteria: Participants propose ideas for additional software features, and designers invite users to collaborate on new features or experiments.
Phrase: Propose and solicit feature requests

25.
Concepts: classroom application feature, educational enhancement suggestions
Relationship: Complementary
Criteria: Users discuss or request features for classroom applications and suggest enhancements for educational use.
Phrase: Suggest educational enhancements

26.
Concepts: request, detailed feature request
Relationship: N/A
Criteria: Users make detailed requests for specific features or demonstrations in the application.
Phrase: Make detailed feature requests

27.
Concepts: ask about user needs, considering community needs
Relationship: Complementary
Criteria: Designers inquire about the community's needs and preferences, acknowledging how feedback may influence future implementations.
Phrase: Inquire about user needs

28.
Concepts: suggestion solicitation, broader feedback solicitation
Relationship: Complementary
Criteria: Participants explicitly invite the community to provide suggestions or additional requirements.
Phrase: Solicit broader feedback

29.
Concepts: asking for future help, announcing future plans
Relationship: Complementary
Criteria: Designers indicate they will seek community input in the future and announce future plans or updates.
Phrase: Announce future plans and seek help

30.
Concepts: opinion gathering, opinion gathering for memory
Relationship: Complementary
Criteria: Designers describe plans to gather opinions before proceeding with tasks, sometimes using it as a memory aid for planning.
Phrase: Gather user opinions

31.
Concepts: elicit feedback, plan for iterative feedback
Relationship: Complementary
Criteria: Designers gather feedback or suggestions in a structured way to inform future development before proceeding with certain aspects.
Phrase: Plan iterative feedback

32.
Concepts: clarify user needs, seek detailed requirements, seek user issue details
Relationship: Complementary
Criteria: Participants ask follow-up questions to better understand user needs and solicit detailed requirements to refine development.
Phrase: Seek detailed user needs

33.
Concepts: balancing user needs, catering to user needs
Relationship: Complementary
Criteria: Participants consider and discuss efforts to meet user needs in design or functionality.
Phrase: Balance user needs

34.
Concepts: react to user's story, reaction to feedback
Relationship: Complementary
Criteria: Designers react to a user's story or feedback by indicating planned updates or changes.
Phrase: React to user feedback

35.
Concepts: acknowledgment and implementation, acknowledging and integrating feedback
Relationship: Complementary
Criteria: Designers acknowledge user feedback and discuss plans to integrate it into the design process.
Phrase: Acknowledge and implement feedback

36.
Concepts: feedback acknowledgement, feedback acknowledgment
Relationship: N/A
Criteria: Participants receive and acknowledge user feedback and link it to future changes or updates.
Phrase: Acknowledge user feedback

37.
Concepts: self-help, resolve issues independently
Relationship: Complementary
Criteria: Users identify their independent utilization of resources without additional help to resolve issues.
Phrase: Promote self-help

38.
Concepts: share workaround, usability workaround
Relationship: Complementary
Criteria: Participants share workarounds or alternative methods to accomplish tasks, especially to overcome usability issues.
Phrase: Share usability workarounds

39.
Concepts: openness to alternatives, offering/seeking alternative
Relationship: Complementary
Criteria: Participants indicate openness to alternative approaches and offer or seek adaptations based on feedback.
Phrase: Offer and seek alternatives

40.
Concepts: problem solving, offering solutions, share potential solutions
Relationship: Complementary
Criteria: Participants address issues, offer solutions, and share approaches to potential problems based on feedback.
Phrase: Share problem-solving solutions

41.
Concepts: indirect answer, vague response to feature request
Relationship: Complementary
Criteria: Designers give indirect or vague responses to user queries or feature requests.
Phrase: Give indirect answers

42.
Concepts: respond to inquiry, response to initial inquiry
Relationship: Complementary
Criteria: Participants respond directly to user inquiries or questions with detailed responses or next steps.
Phrase: Respond to inquiries

43.
Concepts: clarification response, requesting clarification
Relationship: Complementary
Criteria: Designers respond to requests for clarification or ask for further details on usability or design preferences.
Phrase: Provide and request clarifications

44.
Concepts: follow-up on design information, follow-up discussion
Relationship: Complementary
Criteria: Users follow up on previous design information or decisions, prompting discussions, especially about technical compatibility or requirements.
Phrase: Follow up on design discussions

45.
Concepts: clarify preference, specific choice response
Relationship: Complementary
Criteria: Users clarify their preferences on specific issues or features, providing direct responses regarding configurations.
Phrase: Clarify user preferences

46.
Concepts: classroom success illustration, describe students' positive responses
Relationship: Complementary
Criteria: Users describe successful use and positive student reactions to the software in a classroom or instructional setting.
Phrase: Illustrate classroom success

47.
Concepts: user experience and impact, user experience in educational contexts
Relationship: Complementary
Criteria: Users share their experiences and the impact of the software within educational settings.
Phrase: Share educational experiences

48.
Concepts: indicate user need, emphasize importance for school
Relationship: Complementary
Criteria: Users indicate specific needs related to school initiatives and emphasize the importance of certain resources or information.
Phrase: Emphasize school needs

49.
Concepts: community context, mention school initiative
Relationship: Complementary
Criteria: Users provide context about the community or mention initiatives or projects related to their schools.
Phrase: Discuss school initiatives

50.
Concepts: share teaching experiences, sharing teaching experience
Relationship: N/A
Criteria: Participants share their teaching experiences and backgrounds, including grade levels and years of experience.
Phrase: Share teaching experiences

51.
Concepts: compatibility assurance, compatibility clarification
Relationship: Complementary
Criteria: Participants ensure and specify the necessary compatibility requirements for the software to function across various systems.
Phrase: Ensure compatibility requirements

52.
Concepts: check compatibility, confirming compatibility
Relationship: Complementary
Criteria: Designers suggest checking and confirm system compatibility to address potential issues.
Phrase: Confirm system compatibility

53.
Concepts: touch screen information, on-screen keyboard discussion
Relationship: Complementary
Criteria: Participants inform about and discuss touch screen features, particularly the on-screen keyboard functionality.
Phrase: Discuss touch screen features

54.
Concepts: platform specification, platform specific update
Relationship: Complementary
Criteria: Updates or announcements refer to platform-specific features or issues.
Phrase: Provide platform-specific updates

55.
Concepts: highlight outdated technology, mentioning outdated technology
Relationship: Complementary
Criteria: Participants highlight and comment on the use of outdated technology or systems.
Phrase: Mention outdated technology

56.
Concepts: classroom setup inquiry, inquire about classroom conditions
Relationship: Complementary
Criteria: Designers inquire about classroom setups, focusing on internet availability and technology.
Phrase: Inquire about classroom conditions

57.
Concepts: technical issue, address technical problems
Relationship: N/A
Criteria: Participants identify and engage in solving specific technical issues faced by users.
Phrase: Address technical issues

58.
Concepts: addressing technical considerations, consider technical requirements
Relationship: Complementary
Criteria: Participants discuss and consider the technical requirements affecting software use.
Phrase: Discuss technical requirements

59.
Concepts: asking about software access, platform availability inquiry
Relationship: Complementary
Criteria: Users ask for information regarding access or downloading the software.
Phrase: Inquire about software access

60.
Concepts: platform feature inquiry, inquire about platform compatibility
Relationship: Complementary
Criteria: Participants inquire about platform-specific features, updates, and compatibility.
Phrase: Inquire about platform compatibility

61.
Concepts: resource inquiry, community resource
Relationship: Complementary
Criteria: Users ask for or discuss specific resources like downloads, manuals, or guides within the community.
Phrase: Seek community resources

62.
Concepts: information seeking, seeking guidance on software usage, requesting documentation
Relationship: Complementary
Criteria: Users request instructions, guidance, or documentation to understand and use particular software features.
Phrase: Seek software guidance

63.
Concepts: multiple technical questions, technical inquiry
Relationship: N/A
Criteria: Users ask multiple technical questions about the software's usage and troubleshooting.
Phrase: Pose technical inquiries

64.
Concepts: functional tips, provide practical advice
Relationship: Complementary
Criteria: Participants offer practical advice or tips about functionality or feature use in the software.
Phrase: Provide practical tips
---