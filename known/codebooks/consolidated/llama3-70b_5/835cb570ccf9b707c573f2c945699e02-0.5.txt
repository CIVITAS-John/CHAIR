You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: emphasize iterative feedback, engage in design iteration
- A designer emphasizes the importance of iterative feedback in the development process.
- Designers refine or iterate on the design based on feedback or discussions, engaging in iterative design processes.

2.
Concepts: iterative design planning, iterative feedback planning
- Designer outlines a planned iterative design process
- Planning or preparing for iterative feedback or testing

3.
Concepts: encourage elaboration, encourage future discussion or questions
- The designer encourages users to elaborate on their thoughts or opinions.
- A designer encourages users to ask questions or discuss issues in the future.

4.
Concepts: ongoing engagement, encourage continued conversation
- A designer or user continues to engage in a conversation or topic.
- Designer responds to maintain or continue the conversation

5.
Concepts: gathering opinions, organizing workflow
- The designer ensures comprehensive feedback by gathering opinions.
- Designer takes initiative to organize workflow and gather opinions.

6.
Concepts: sharing knowledge or information, foster community knowledge sharing
- A designer or user shares knowledge or information about the project.
- A designer or user shares knowledge or tips about using the software.

7.
Concepts: teaching, engage in technical discourse
- A designer or community member educates or teaches others about a topic or feature.
- A designer engages in technical discussions or explanations with community members.

8.
Concepts: share visual references, shares visual updates
- A designer shares visual references or examples.
- A designer shares visual updates, such as images or screenshots, with the community.

9.
Concepts: design ideas, idea elaboration
- A designer shares their design thoughts or ideas.
- A designer elaborates on a suggestion or idea.

10.
Concepts: enhance design process, share development insights
- A designer shares their design process or approach.
- Designer shares insights into the development process, providing context for the platform's evolution.

11.
Concepts: discuss features, discuss interface design
- A designer discusses or debates the features or functionalities of the software.
- Discussing or debating the design of user interfaces.

12.
Concepts: inquires about infrastructure, inquiring about technical requirements
- User or designer inquires about the infrastructure or technical capabilities.
- Designers discuss or inquire about technical requirements or conditions.

13.
Concepts: sharing download information, providing download instructions
- A designer shares information about downloading or accessing resources.
- A designer provides instructions or guidance on how to download or access software or resources.

14.
Concepts: directing to resources, providing resource access, direct users to resources
- A designer directs users to resources or support.
- A designer provides access to resources or information.
- Designers direct users to resources, such as downloads or files, providing access.

15.
Concepts: resource awareness, promoting resource awareness
- A designer or administrator informs users about available resources or materials.
- Raising awareness about available resources or features for users.

16.
Concepts: providing clear instructions, ensure proper operation
- Designers provide clear instructions to ensure proper operation.
- Designers ensure proper operation of the software by providing instructions, ensuring proper functionality.

17.
Concepts: guide users through processes, communicating procedural steps
- Provide step-by-step instructions to facilitate user understanding
- Outlining step-by-step procedures or instructions for a task or process.

18.
Concepts: sharing practical insights, offer interface tips
- Designers share practical insights or offer practical advice to users.
- Designers share tips or tricks for using a software or feature more effectively, offering special tips.

19.
Concepts: promising user guidance, providing feature guidance, provide user guidance
- Designer promises user guidance or support
- Designers provide instructions or guidance on using features, and provide guidance to support effective usage of the platform.
- Designers provide guidance for user interaction or navigation, illustrating user interface navigation.

20.
Concepts: specify platform context, clarifying platform version
- Inform users about the type of platform being referred to.
- Designers clarify the platform or version being referred to.

21.
Concepts: contribute to design clarification, providing clarification, clarifies platform specifics
- A user contributes to clarifying design or functionality.
- Users or designers clarify or correct previous responses, and ensure precise communication by clarifying or asking for clarification.
- A user or designer clarifies or seeks clarification on specific details about the platform.

22.
Concepts: enhancing user understanding, providing elaborate responses
- Designers provide additional information to enhance user understanding.
- Designers provide additional information or clarification to users.

23.
Concepts: clarify software features, clarifying technical aspects
- A designer clarifies the functionality or features of a specific component or tool.
- Designers explain and clarify technical aspects and specifications to users

24.
Concepts: verify understanding visually, promote clarity in communication
- A designer uses visual aids to ensure understanding.
- Designers promote clarity in communication using visual aids.

25.
Concepts: innovative design emphasis, innovative feature promotion
- Emphasizing innovative design, features, or approaches.
- Highlighting or showcasing innovative or unique features

26.
Concepts: highlight platform capabilities, highlighting future features
- Designer highlights a feature or capability of the platform.
- Designer explains or highlights a future feature or functionality of the platform.

27.
Concepts: enhancing experimental details, support for experimental setups
- A designer enhances experimental details or features.
- A designer supports or highlights the use of experimental setups or equipment.

28.
Concepts: feature benefits, explaining bidirectional conversion
- A designer explains the benefits of a feature, such as bidirectional conversion.
- A designer explains the concept of bidirectional conversion.

29.
Concepts: ideal component provision, highlight ideal component use
- Designer 1 provides or mentions an ideal component.
- Designer highlights the ideal use of a component.

30.
Concepts: describe components, provide details about new ideal components
- Designer describes a specific component or feature.
- Designer provides details about new ideal components or features in the platform.

31.
Concepts: promoting feature understanding, highlighting key features
- Designer promotes understanding of feature significance
- Designers highlight key features or benefits of a specific component or tool to users.

32.
Concepts: explain design benefits, explain long-term benefits
- Designer explains the benefits or advantages of a design or feature.
- A designer explains the long-term benefits of a feature or update.
===
Here are the definitions for each code:

---
1.
Concepts: emphasize iterative feedback, engage in design iteration
Relationship: Emphasizing iterative feedback is a necessary condition for engaging in design iteration.
Criteria: Designers emphasize the importance of iterative feedback in the development process and refine or iterate on the design based on feedback or discussions.
Phrase: Emphasize iterative feedback for design iteration.

2.
Concepts: iterative design planning, iterative feedback planning
Relationship: Iterative design planning involves planning for iterative feedback.
Criteria: Designers outline a planned iterative design process and plan or prepare for iterative feedback or testing.
Phrase: Plan for iterative design and feedback.

3.
Concepts: encourage elaboration, encourage future discussion or questions
Relationship: Encouraging elaboration can lead to encouraging future discussion or questions.
Criteria: Designers encourage users to elaborate on their thoughts or opinions and encourage users to ask questions or discuss issues in the future.
Phrase: Encourage elaboration and future discussion.

4.
Concepts: ongoing engagement, encourage continued conversation
Relationship: Ongoing engagement involves encouraging continued conversation.
Criteria: Designers or users continue to engage in a conversation or topic and respond to maintain or continue the conversation.
Phrase: Engage in ongoing conversation.

5.
Concepts: gathering opinions, organizing workflow
Relationship: Gathering opinions is part of organizing workflow.
Criteria: Designers ensure comprehensive feedback by gathering opinions and take initiative to organize workflow and gather opinions.
Phrase: Gather opinions to organize workflow.

6.
Concepts: sharing knowledge or information, foster community knowledge sharing
Relationship: Sharing knowledge or information can foster community knowledge sharing.
Criteria: Designers or users share knowledge or information about the project and share knowledge or tips about using the software.
Phrase: Share knowledge to foster community sharing.

7.
Concepts: teaching, engage in technical discourse
Relationship: Teaching involves engaging in technical discourse.
Criteria: Designers or community members educate or teach others about a topic or feature and engage in technical discussions or explanations with community members.
Phrase: Teach through technical discourse.

8.
Concepts: share visual references, shares visual updates
Relationship: Sharing visual references can involve sharing visual updates.
Criteria: Designers share visual references or examples and share visual updates, such as images or screenshots, with the community.
Phrase: Share visual references and updates.

9.
Concepts: design ideas, idea elaboration
Relationship: Design ideas can lead to idea elaboration.
Criteria: Designers share their design thoughts or ideas and elaborate on a suggestion or idea.
Phrase: Share design ideas for elaboration.

10.
Concepts: enhance design process, share development insights
Relationship: Enhancing the design process involves sharing development insights.
Criteria: Designers share their design process or approach and share insights into the development process, providing context for the platform's evolution.
Phrase: Share design process and insights.

11.
Concepts: discuss features, discuss interface design
Relationship: Discussing features can involve discussing interface design.
Criteria: Designers discuss or debate the features or functionalities of the software and discuss or debate the design of user interfaces.
Phrase: Discuss features and interface design.

12.
Concepts: inquires about infrastructure, inquiring about technical requirements
Relationship: Inquiring about infrastructure involves inquiring about technical requirements.
Criteria: Users or designers inquire about the infrastructure or technical capabilities and discuss or inquire about technical requirements or conditions.
Phrase: Inquire about infrastructure and technical requirements.

13.
Concepts: sharing download information, providing download instructions
Relationship: Sharing download information involves providing download instructions.
Criteria: Designers share information about downloading or accessing resources and provide instructions or guidance on how to download or access software or resources.
Phrase: Share download information and instructions.

14.
Concepts: directing to resources, providing resource access, direct users to resources
Relationship: Directing to resources involves providing resource access.
Criteria: Designers direct users to resources or support and provide access to resources or information, directing users to resources.
Phrase: Direct users to resources and provide access.

15.
Concepts: resource awareness, promoting resource awareness
Relationship: Resource awareness involves promoting resource awareness.
Criteria: Designers or administrators inform users about available resources or materials and raise awareness about available resources or features for users.
Phrase: Promote resource awareness.

16.
Concepts: providing clear instructions, ensure proper operation
Relationship: Providing clear instructions ensures proper operation.
Criteria: Designers provide clear instructions to ensure proper operation and ensure proper operation of the software by providing instructions, ensuring proper functionality.
Phrase: Provide clear instructions for proper operation.

17.
Concepts: guide users through processes, communicating procedural steps
Relationship: Guiding users through processes involves communicating procedural steps.
Criteria: Designers provide step-by-step instructions to facilitate user understanding and outline step-by-step procedures or instructions for a task or process.
Phrase: Guide users through processes with procedural steps.

18.
Concepts: sharing practical insights, offer interface tips
Relationship: Sharing practical insights involves offering interface tips.
Criteria: Designers share practical insights or offer practical advice to users and share tips or tricks for using a software or feature more effectively, offering special tips.
Phrase: Share practical insights and interface tips.

19.
Concepts: promising user guidance, providing feature guidance, provide user guidance
Relationship: Promising user guidance involves providing feature guidance.
Criteria: Designers promise user guidance or support and provide instructions or guidance on using features, and provide guidance to support effective usage of the platform, providing guidance for user interaction or navigation.
Phrase: Promise user guidance and provide feature guidance.

20.
Concepts: specify platform context, clarifying platform version
Relationship: Specifying platform context involves clarifying platform version.
Criteria: Designers inform users about the type of platform being referred to and clarify the platform or version being referred to.
Phrase: Specify platform context and clarify version.

21.
Concepts: contribute to design clarification, providing clarification, clarifies platform specifics
Relationship: Contributing to design clarification involves providing clarification.
Criteria: Users or designers clarify or correct previous responses, and ensure precise communication by clarifying or asking for clarification, and clarify or seek clarification on specific details about the platform.
Phrase: Contribute to design clarification through providing clarification.

22.
Concepts: enhancing user understanding, providing elaborate responses
Relationship: Enhancing user understanding involves providing elaborate responses.
Criteria: Designers provide additional information to enhance user understanding and provide additional information or clarification to users.
Phrase: Enhance user understanding with elaborate responses.

23.
Concepts: clarify software features, clarifying technical aspects
Relationship: Clarifying software features involves clarifying technical aspects.
Criteria: Designers clarify the functionality or features of a specific component or tool and explain and clarify technical aspects and specifications to users.
Phrase: Clarify software features and technical aspects.

24.
Concepts: verify understanding visually, promote clarity in communication
Relationship: Verifying understanding visually promotes clarity in communication.
Criteria: Designers use visual aids to ensure understanding and promote clarity in communication using visual aids.
Phrase: Verify understanding visually to promote clarity.

25.
Concepts: innovative design emphasis, innovative feature promotion
Relationship: Innovative design emphasis involves innovative feature promotion.
Criteria: Designers emphasize innovative design, features, or approaches and highlight or showcase innovative or unique features.
Phrase: Emphasize innovative design and feature promotion.

26.
Concepts: highlight platform capabilities, highlighting future features
Relationship: Highlighting platform capabilities involves highlighting future features.
Criteria: Designers highlight a feature or capability of the platform and explain or highlight a future feature or functionality of the platform.
Phrase: Highlight platform capabilities and future features.

27.
Concepts: enhancing experimental details, support for experimental setups
Relationship: Enhancing experimental details involves supporting experimental setups.
Criteria: Designers enhance experimental details or features and support or highlight the use of experimental setups or equipment.
Phrase: Enhance experimental details and support experimental setups.

28.
Concepts: feature benefits, explaining bidirectional conversion
Relationship: Explaining feature benefits involves explaining bidirectional conversion.
Criteria: Designers explain the benefits of a feature, such as bidirectional conversion, and explain the concept of bidirectional conversion.
Phrase: Explain feature benefits and bidirectional conversion.

29.
Concepts: ideal component provision, highlight ideal component use
Relationship: Ideal component provision involves highlighting ideal component use.
Criteria: Designers provide or mention an ideal component and highlight the ideal use of a component.
Phrase: Provide ideal components and highlight ideal use.

30.
Concepts: describe components, provide details about new ideal components
Relationship: Describing components involves providing details about new ideal components.
Criteria: Designers describe a specific component or feature and provide details about new ideal components or features in the platform.
Phrase: Describe components and provide details about new ideal components.

31.
Concepts: promoting feature understanding, highlighting key features
Relationship: Promoting feature understanding involves highlighting key features.
Criteria: Designers promote understanding of feature significance and highlight key features or benefits of a specific component or tool to users.
Phrase: Promote feature understanding and highlight key features.

32.
Concepts: explain design benefits, explain long-term benefits
Relationship: Explaining design benefits involves explaining long-term benefits.
Criteria: Designers explain the benefits or advantages of a design or feature and explain the long-term benefits of a feature or update.
Phrase: Explain design benefits and long-term benefits.