You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: seeking convenience features, suggesting convenience features
- Users express a desire for convenience in a specific feature to improve their experience.
- Users suggest features or functions for convenience or efficiency to improve their experience.

2.
Concepts: providing justification, user input with justification
- Users provide reasons or justifications for suggestions or requests.
- User feedback or suggestions with justifications or explanations.

3.
Concepts: identify user needs, express user needs
- A user expresses a need or asks for something.
- A user expresses a need or requirement for the software.

4.
Concepts: emphasize requirements, highlight usability needs
- User emphasizes the need for a specific feature or resource.
- User emphasizes the need for usability improvements.

5.
Concepts: encouraging problem reporting, encouraging problem sharing
- A designer encourages users to report problems or issues.
- Designers encourage users to share problems or issues they encountered during use.

6.
Concepts: user feedback inquiry, inquiring about user issues
- Asking users about their experiences or problems with a specific feature.
- Inquiring about problems or issues encountered by users.
- Designer inquires about issues or problems faced by a user.

7.
Concepts: offer a workaround, share a workaround
- Designer offers a workaround or solution to a problem or issue.
- A user or designer shares a workaround or solution to a problem.

8.
Concepts: seeking technical support, requesting technical support
- Users seek technical support or assistance from the community.
- Users request technical assistance or help with an issue.

9.
Concepts: apologize for disturbance, apologize for inconvenience
- Apologizing for a disturbance or inconvenience.
- Apologizing for potential inconvenience.

10.
Concepts: explaining school policy, sharing school policies
- A user explains a common school policy or practice.
- A user shares knowledge about school policies or regulations.

11.
Concepts: sharing school initiatives, mentioning school projects
- A user mentions a school initiative or project.
- User mentions a school project or activity related to the application.

12.
Concepts: mentioning educational context, educational context reference
- Mentioning or implying an educational context or scenario.
- Referencing or consulting the educational context or curriculum.

13.
Concepts: professional inquiry, inquiring about teaching level
- Asking about the user's teaching level or profession
- Designer inquires about user's teaching level or educational background.

14.
Concepts: ask teachers' needs, seeking teacher input
- A designer asks teachers about their needs or preferences.
- Designer seeks input or feedback from teachers or educators.

15.
Concepts: teacher need highlighting, highlighting teaching needs
- Highlighting teacher-specific needs or requirements.
- User highlights a need or requirement for educational purposes.

16.
Concepts: aligning with curriculum, aligning with educational standards
- Designers align software development with curriculum requirements.
- Designer aligns design with educational standards or requirements.

17.
Concepts: outlining focus areas, explaining physics lab focus
- Designer outlines or states the focus areas of the Physics Lab.
- Designer explains or discusses the focus or scope of the Physics Lab.

18.
Concepts: detailed simulation, provides simulation details
- A designer indicates a detailed or realistic simulation.
- Designer provides details about a simulation or feature.

19.
Concepts: discusses simulation improvements, enhancing realism of experiments
- Designer discusses improving simulation realism or capabilities.
- The designer discusses enhancing the realism of experiments or simulations.

20.
Concepts: describes experiment assessment, outlining simulated experiment assessment
- Designer details or discusses the assessment of simulated experiments.
- Outlining or describing a specific feature or assessment method related to a simulated experiment.

21.
Concepts: explaining technical aspects, providing technical information
- Designer explains technical aspects of the software.
- Designer provides technical details about a feature or component.

22.
Concepts: explains conversion process, bidirectional conversion explanation
- Designer explains the concept of bidirectional conversion.
- Explaining the concept or functionality of bidirectional conversion.

23.
Concepts: explaining reasoning, reason for restriction
- A user explains reasons or context for certain restrictions or limitations.
- A user or designer provides a reason or explanation for a restriction or limitation.

24.
Concepts: explain design limitations, explain technical requirements
- Designer explains limitations or constraints of the design.
- Designer explains technical requirements or limitations.

25.
Concepts: identify technical constraints, highlight practical constraints
- User highlights technical limitations or constraints.
- A user highlights practical constraints or limitations.

26.
Concepts: inform about compatibility, clarify compatibility issues
- Designer informs users about software compatibility or system requirements.
- Designers clarify incompatibility issues with specific systems or devices.

27.
Concepts: use of humor
- A user or designer uses humor or an emoji in their message.
- Humorous tone or language is used in the conversation.

28.
Concepts: introduces new features
- Designer introduces, informs about, or explains new features or functionality.
- Designer introduces new design elements or features.

29.
Concepts: providing context for feedback
- Users provide context or background information that influences their needs or expectations.
- Providing context or explanations for specific needs or requirements.
- Users provide context or background information for their interest or question.

30.
Concepts: instructing on downloading
- A designer instructs on how to download a specific version of the software.
- The designer provides information about downloading the software or resources.

31.
Concepts: suggest an alternative
- Suggesting a compromise or alternative solution.
- User suggests an alternative approach or solution.

32.
Concepts: comparing software to others
- Users compare the software to other similar tools or platforms to highlight its advantages.
- Users compare the software to other similar software or applications to highlight its practicality.
===
Here are the definitions for each code:

---
1.
Concepts: seeking convenience features, suggesting convenience features
Relationship: Users express their desire for convenience and suggest features to improve their experience.
Criteria: Users express a desire for convenience features to improve their experience and suggest features or functions for convenience or efficiency.
Phrase: Seeking convenience features.

2.
Concepts: providing justification, user input with justification
Relationship: Users provide reasons or justifications for their suggestions or requests.
Criteria: Users provide reasons or justifications for their suggestions or requests.
Phrase: Providing justification.

3.
Concepts: identify user needs, express user needs
Relationship: Users express their needs or requirements for the software.
Criteria: Users express their needs or requirements for the software.
Phrase: Expressing user needs.

4.
Concepts: emphasize requirements, highlight usability needs
Relationship: Users emphasize the need for specific features or resources for usability improvements.
Criteria: Users emphasize the need for specific features or resources for usability improvements.
Phrase: Emphasizing usability needs.

5.
Concepts: encouraging problem reporting, encouraging problem sharing
Relationship: Designers encourage users to report problems or issues they encountered.
Criteria: Designers encourage users to report problems or issues they encountered.
Phrase: Encouraging problem reporting.

6.
Concepts: user feedback inquiry, inquiring about user issues
Relationship: Designers ask users about their experiences or problems with specific features.
Criteria: Designers ask users about their experiences or problems with specific features.
Phrase: Inquiring about user issues.

7.
Concepts: offer a workaround, share a workaround
Relationship: Designers offer or share workarounds or solutions to problems.
Criteria: Designers offer or share workarounds or solutions to problems.
Phrase: Offering a workaround.

8.
Concepts: seeking technical support, requesting technical support
Relationship: Users seek technical support or assistance from the community.
Criteria: Users seek technical support or assistance from the community.
Phrase: Seeking technical support.

9.
Concepts: apologize for disturbance, apologize for inconvenience
Relationship: Apologies are made for disturbances or inconvenience.
Criteria: Apologies are made for disturbances or inconvenience.
Phrase: Apologizing for inconvenience.

10.
Concepts: explaining school policy, sharing school policies
Relationship: Users explain or share knowledge about school policies or regulations.
Criteria: Users explain or share knowledge about school policies or regulations.
Phrase: Explaining school policy.

11.
Concepts: sharing school initiatives, mentioning school projects
Relationship: Users mention school initiatives or projects related to the application.
Criteria: Users mention school initiatives or projects related to the application.
Phrase: Sharing school initiatives.

12.
Concepts: mentioning educational context, educational context reference
Relationship: Users mention or imply an educational context or scenario.
Criteria: Users mention or imply an educational context or scenario.
Phrase: Referencing educational context.

13.
Concepts: professional inquiry, inquiring about teaching level
Relationship: Designers ask about users' teaching level or profession.
Criteria: Designers ask about users' teaching level or profession.
Phrase: Inquiring about teaching level.

14.
Concepts: ask teachers' needs, seeking teacher input
Relationship: Designers ask teachers about their needs or preferences.
Criteria: Designers ask teachers about their needs or preferences.
Phrase: Seeking teacher input.

15.
Concepts: teacher need highlighting, highlighting teaching needs
Relationship: Users highlight teacher-specific needs or requirements.
Criteria: Users highlight teacher-specific needs or requirements.
Phrase: Highlighting teaching needs.

16.
Concepts: aligning with curriculum, aligning with educational standards
Relationship: Designers align software development with curriculum requirements.
Criteria: Designers align software development with curriculum requirements.
Phrase: Aligning with curriculum.

17.
Concepts: outlining focus areas, explaining physics lab focus
Relationship: Designers outline or explain the focus areas of the Physics Lab.
Criteria: Designers outline or explain the focus areas of the Physics Lab.
Phrase: Outlining focus areas.

18.
Concepts: detailed simulation, provides simulation details
Relationship: Designers indicate a detailed or realistic simulation.
Criteria: Designers indicate a detailed or realistic simulation.
Phrase: Providing simulation details.

19.
Concepts: discusses simulation improvements, enhancing realism of experiments
Relationship: Designers discuss improving simulation realism or capabilities.
Criteria: Designers discuss improving simulation realism or capabilities.
Phrase: Discussing simulation improvements.

20.
Concepts: describes experiment assessment, outlining simulated experiment assessment
Relationship: Designers detail or discuss the assessment of simulated experiments.
Criteria: Designers detail or discuss the assessment of simulated experiments.
Phrase: Outlining experiment assessment.

21.
Concepts: explaining technical aspects, providing technical information
Relationship: Designers explain technical aspects of the software.
Criteria: Designers explain technical aspects of the software.
Phrase: Explaining technical aspects.

22.
Concepts: explains conversion process, bidirectional conversion explanation
Relationship: Designers explain the concept of bidirectional conversion.
Criteria: Designers explain the concept of bidirectional conversion.
Phrase: Explaining conversion process.

23.
Concepts: explaining reasoning, reason for restriction
Relationship: Users explain reasons or context for certain restrictions or limitations.
Criteria: Users explain reasons or context for certain restrictions or limitations.
Phrase: Explaining reasoning.

24.
Concepts: explain design limitations, explain technical requirements
Relationship: Designers explain limitations or constraints of the design.
Criteria: Designers explain limitations or constraints of the design.
Phrase: Explaining design limitations.

25.
Concepts: identify technical constraints, highlight practical constraints
Relationship: Users highlight technical limitations or constraints.
Criteria: Users highlight technical limitations or constraints.
Phrase: Highlighting technical constraints.

26.
Concepts: inform about compatibility, clarify compatibility issues
Relationship: Designers inform users about software compatibility or system requirements.
Criteria: Designers inform users about software compatibility or system requirements.
Phrase: Informing about compatibility.

27.
Concepts: use of humor
Relationship: N/A
Criteria: Users or designers use humor or an emoji in their message.
Phrase: Using humor.

28.
Concepts: introduces new features
Relationship: Designers introduce new features or functionality.
Criteria: Designers introduce new features or functionality.
Phrase: Introducing new features.

29.
Concepts: providing context for feedback
Relationship: Users provide context or background information that influences their needs or expectations.
Criteria: Users provide context or background information that influences their needs or expectations.
Phrase: Providing context for feedback.

30.
Concepts: instructing on downloading
Relationship: Designers instruct on how to download a specific version of the software.
Criteria: Designers instruct on how to download a specific version of the software.
Phrase: Instructing on downloading.

31.
Concepts: suggest an alternative
Relationship: Users suggest a compromise or alternative solution.
Criteria: Users suggest a compromise or alternative solution.
Phrase: Suggesting an alternative.

32.
Concepts: comparing software to others
Relationship: Users compare the software to other similar tools or platforms.
Criteria: Users compare the software to other similar tools or platforms to highlight its advantages.
Phrase: Comparing software to others.