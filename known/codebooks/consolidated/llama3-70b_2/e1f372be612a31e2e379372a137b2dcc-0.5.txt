You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (7 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
7. 
Concepts: {Repeat the input 7}
Relationship: {What is logical relationship between concepts in code 7, or N/A if not applicable}
Criteria: {Who did what, and how for code 7}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: notes ai getting stuck, reflects on ai limitations and errors, expresses frustration with ai's error loop, notes ai's inability to fix errors
- Participants note instances where the AI gets stuck or unable to fix an error.
- Participants reflect on AI's limitations in handling errors or getting stuck in loops.
- Participants express frustration with AI's error loop, noting that AI cannot fix errors.
- Participants note AI's inability to fix certain errors or get stuck in loops.

2.
Concepts: notes chatgpt's limitations, notes limitations in processing long code
- Participants note ChatGPT's limitation in reading long codes, recognizing its limitations.
- Participants note the limitations of AI in processing long code pieces.

3.
Concepts: finds ai code limitations, notes incomplete ai code, notes missing code structures
- Participants find AI code lacking or incomplete, requiring manual correction.
- Participants note that AI-generated code may be incomplete or lacking essential code structures.
- Participants note the limitations of AI-generated code structures and experience frustration.

4.
Concepts: critiques ai limitations, identifies limitations in ai, highlights ai limitations
- Participants critique current AI limitations.
- Participants identify limitations in current AI implementations and suggest improvements.
- Participants highlight limitations in AI responsiveness and current AI limitations.

5.
Concepts: acknowledge ai output limitations, acknowledges ai's debugging limitations
- Participants acknowledge limitations in AI output, noting gaps in code structures.
- Participants acknowledge the limitations of the AI's debugging capability.

6.
Concepts: appreciate clear explanations
- Appreciating clear, non-technical explanations
- Participants appreciate the clear and non-technical language used by the AI system, making it easier to understand and use.

7.
Concepts: accepts ai's limitations
- Accepts the limitations of AI-driven interfaces.
- Participants acknowledge AI's constraints, such as limitations on reading long code pieces.
===
Here are the definitions for each code:

---
1.
Concepts: notes ai getting stuck, reflects on ai limitations and errors, expresses frustration with ai's error loop, notes ai's inability to fix errors
Relationship: The concepts are related in that they all describe the participants' experiences with AI limitations and errors, with a focus on the emotional response of frustration.
Criteria: Participants identify and express frustration with AI limitations and errors, including getting stuck and inability to fix errors.
Phrase: Expressing frustration with AI limitations and errors.

2.
Concepts: notes chatgpt's limitations, notes limitations in processing long code
Relationship: The concepts are related in that they both describe the limitations of ChatGPT in processing code, specifically long code pieces.
Criteria: Participants recognize and note the limitations of ChatGPT in processing long code pieces.
Phrase: Noting ChatGPT's limitations in code processing.

3.
Concepts: finds ai code limitations, notes incomplete ai code, notes missing code structures
Relationship: The concepts are related in that they all describe the limitations of AI-generated code, including incompleteness and missing structures.
Criteria: Participants identify and experience limitations in AI-generated code, including incompleteness and missing structures.
Phrase: Identifying limitations in AI-generated code.

4.
Concepts: critiques ai limitations, identifies limitations in ai, highlights ai limitations
Relationship: The concepts are related in that they all describe the participants' critical evaluation of AI limitations, with a focus on identifying and highlighting them.
Criteria: Participants critically evaluate and identify AI limitations, highlighting areas for improvement.
Phrase: Critiquing AI limitations.

5.
Concepts: acknowledge ai output limitations, acknowledges ai's debugging limitations
Relationship: The concepts are related in that they both describe the participants' recognition of AI limitations, specifically in output and debugging.
Criteria: Participants acknowledge and recognize AI limitations in output and debugging.
Phrase: Acknowledging AI limitations.

6.
Concepts: appreciate clear explanations
Relationship: N/A
Criteria: Participants appreciate clear and non-technical explanations provided by the AI system.
Phrase: Appreciating clear explanations.

7.
Concepts: accepts ai's limitations
Relationship: N/A
Criteria: Participants acknowledge and accept AI limitations, including constraints on reading long code pieces.
Phrase: Accepting AI limitations.