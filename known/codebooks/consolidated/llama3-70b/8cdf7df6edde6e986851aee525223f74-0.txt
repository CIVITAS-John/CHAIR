You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: co-designing with users, user-designer interaction
- Involving users in the design process, allowing them to contribute ideas and make decisions.
- The collaborative interaction between users and designers that contributes to the design process.

2.
Concepts: usability, discuss usability
- A user or designer discusses the usability or user experience of the platform.
- The designer discusses the usability of the software, including suggestions for improvement.

3.
Concepts: touch screen functionality, inform about touch screens
- Designer discusses touch screen functionality or limitations.
- Designer informs users about touch screen capabilities or limitations.

4.
Concepts: input methods, discuss input methods
- A designer discusses or suggests input methods or user interface features.
- Designer or user discusses input methods or options.

5.
Concepts: system compatibility, system requirements
- Designer discusses system compatibility or requirements.
- A designer discusses the technical requirements or compatibility of the software with specific devices or systems.

6.
Concepts: compatibility answer, system compatibility confirmation
- A designer or user answers a question about compatibility.
- A designer confirms or responds to a user's question about system compatibility.

7.
Concepts: compatibility assurance, confirm compatibility
- Designer assures compatibility with specific devices or systems.
- The designer confirms whether a feature or function is compatible with a specific system or device.

8.
Concepts: pc version mention, pc version inquiries
- A user mentions or inquires about the PC version of the software.
- Inquiries or questions about the PC version of the software.

9.
Concepts: platform specific update, platform-specific information
- Updates or information specific to a particular platform.
- Discussion of platform-specific information.

10.
Concepts: platform specification, platform compatibility inquiry
- User inquires about the platform or device compatibility of the physics lab.
- User inquires about compatibility of the platform with a specific device or system.

11.
Concepts: technical consideration, consider technical requirements
- The designer considers or discusses technical aspects or limitations, often related to software development.
- Considerations or discussions about technical requirements or limitations.

12.
Concepts: technical constraints, highlight technical constraints
- Instances where technical limitations or requirements are discussed.
- Instances where limitations or constraints of the software are mentioned.
- A user or designer highlights technical constraints, limitations, or challenges.

13.
Concepts: explain limitation, platform limitation
- Designer explains a limitation or constraint of the platform.
- Designer mentions a limitation or restriction of a platform or system.

14.
Concepts: explain current version's limitation, talk about limitation of the solution
- The designer explains the limitations or constraints of the current version.
- A designer highlights limitations or constraints of the current solution or feature.

15.
Concepts: context of use, usability and context of use
- Instances where users describe the specific contexts in which they use the software.
- Discussions about how the software is used in different contexts and its usability.

16.
Concepts: troubleshooting, engage in troubleshooting
- Troubleshooting an issue.
- A user engages in troubleshooting or offers technical assistance.

17.
Concepts: outdated technology, highlight outdated technology
- A user mentions outdated technology or infrastructure.
- A user highlights or mentions outdated technology or infrastructure.

18.
Concepts: frustration, user frustration
- Expressions of annoyance, disappointment, or dissatisfaction.
- User expresses dissatisfaction or annoyance with a system or tool.

19.
Concepts: design rationale, give rationale to development decision
- A designer explains the reasoning or thought process behind a design decision.
- The designer provides a justification for a development decision, explaining the reasoning behind it.

20.
Concepts: explaining plans, design discussion
- Designer explains plans or rationales behind a feature or design decision.
- The designer discusses design decisions, shares ideas, and explains the reasoning behind certain features.

21.
Concepts: design intention, design goal explanation
- A designer explains the intention or design philosophy behind the software.
- A designer explains the design goals or philosophy behind the software.

22.
Concepts: expressing personal interest, express personal interest
- Designer expresses personal interest or enthusiasm.
- The designer expresses personal interest or enthusiasm for a particular subject or feature.

23.
Concepts: reflecting on experiences, reflect on past experience
- Designer reflects on past experiences.
- A designer reflects on a past experience or shares a personal anecdote.

24.
Concepts: apology, apology for disturbance
- Designer apologizes for an inconvenience or disturbance caused.
- Designers apologize for any inconvenience caused to the users.
- Apologizing for potential disruptions or inconvenience.

25.
Concepts: indirect rejection, implicit rejection
- Designer indirectly rejects or postpones a feature or request.
- The designer implicitly rejects or defers a feature request or suggestion.

26.
Concepts: self-help, self-answering, self-solved issues
- User takes initiative to find a solution or help themselves.
- User answers their own question or provides a solution to their own problem.
- User resolves their own issue or finds a solution.

27.
Concepts: workaround, provide temporary solution, usability workaround
- Designer shares a workaround for an issue.
- Designer provides a temporary solution or workaround for an issue.
- Designer provides a temporary solution or workaround to a problem.

28.
Concepts: suggest alternative solution, provide alternative suggestion, offering/seeking alternative
- User proposes an alternative solution to a problem or issue.
- A user provides an alternative suggestion or solution to a problem or issue.
- A user or designer suggests an alternative solution, option, or approach.

29.
Concepts: offer solution, offer a solution, proposing solution
- Designer offers a solution or workaround to a problem.
- A designer offers a solution or suggestion to a user's problem or question.
- Designer proposes a potential solution to a problem or issue.

30.
Concepts: technical support, technical support and guidance
- Instances where designers or users provide technical assistance or address technical issues.
- Instances where designers provide technical support or information about the software.
- Instances where designers provide technical support or guidance to users.

31.
Concepts: help offering, personalized assistance
- A designer offers help or support to a user.
- A designer offers personalized assistance or support to a user.

32.
Concepts: usage instructions, usage instruction
- Designer provides instructions on how to use a feature.
- The designer provides instructions on how to use a feature or function.
===
Here are the definitions for each code:

---
1.
Concepts: co-designing with users, user-designer interaction
Relationship: Co-designing with users involves user-designer interaction, which is a collaborative process.
Criteria: Users and designers collaborate to design the platform.
Phrase: Collaborate on design decisions.

2.
Concepts: usability, discuss usability
Relationship: Discussing usability involves evaluating the user experience.
Criteria: Users or designers discuss the usability of the platform.
Phrase: Discuss usability issues.

3.
Concepts: touch screen functionality, inform about touch screens
Relationship: Informing about touch screen functionality involves discussing its capabilities or limitations.
Criteria: Designers inform users about touch screen capabilities or limitations.
Phrase: Inform about touch screen functionality.

4.
Concepts: input methods, discuss input methods
Relationship: Discussing input methods involves evaluating user interface features.
Criteria: Designers or users discuss input methods or options.
Phrase: Discuss input methods.

5.
Concepts: system compatibility, system requirements
Relationship: System compatibility involves meeting system requirements.
Criteria: Designers discuss system compatibility or requirements.
Phrase: Discuss system compatibility.

6.
Concepts: compatibility answer, system compatibility confirmation
Relationship: Answering compatibility questions involves confirming system compatibility.
Criteria: Designers or users answer questions about system compatibility.
Phrase: Confirm system compatibility.

7.
Concepts: compatibility assurance, confirm compatibility
Relationship: Assuring compatibility involves confirming system compatibility.
Criteria: Designers assure compatibility with specific devices or systems.
Phrase: Assure compatibility.

8.
Concepts: pc version mention, pc version inquiries
Relationship: Mentioning the PC version involves inquiring about its features or compatibility.
Criteria: Users mention or inquire about the PC version of the software.
Phrase: Inquire about PC version.

9.
Concepts: platform specific update, platform-specific information
Relationship: Providing platform-specific updates involves discussing platform-specific information.
Criteria: Updates or information are specific to a particular platform.
Phrase: Provide platform-specific information.

10.
Concepts: platform specification, platform compatibility inquiry
Relationship: Inquiring about platform compatibility involves specifying device or system requirements.
Criteria: Users inquire about platform or device compatibility.
Phrase: Inquire about platform compatibility.

11.
Concepts: technical consideration, consider technical requirements
Relationship: Considering technical aspects involves evaluating technical requirements.
Criteria: Designers consider technical aspects or limitations.
Phrase: Consider technical requirements.

12.
Concepts: technical constraints, highlight technical constraints
Relationship: Highlighting technical constraints involves discussing technical limitations.
Criteria: Users or designers highlight technical constraints or limitations.
Phrase: Highlight technical constraints.

13.
Concepts: explain limitation, platform limitation
Relationship: Explaining limitations involves discussing platform constraints.
Criteria: Designers explain limitations or constraints of the platform.
Phrase: Explain platform limitations.

14.
Concepts: explain current version's limitation, talk about limitation of the solution
Relationship: Explaining current limitations involves discussing constraints of the current solution.
Criteria: Designers explain limitations or constraints of the current version.
Phrase: Explain current limitations.

15.
Concepts: context of use, usability and context of use
Relationship: Discussing context of use involves evaluating usability in different contexts.
Criteria: Users describe specific contexts in which they use the software.
Phrase: Discuss context of use.

16.
Concepts: troubleshooting, engage in troubleshooting
Relationship: Troubleshooting involves engaging in technical assistance.
Criteria: Users engage in troubleshooting or offer technical assistance.
Phrase: Engage in troubleshooting.

17.
Concepts: outdated technology, highlight outdated technology
Relationship: Highlighting outdated technology involves discussing infrastructure limitations.
Criteria: Users mention outdated technology or infrastructure.
Phrase: Highlight outdated technology.

18.
Concepts: frustration, user frustration
Relationship: Expressing frustration involves experiencing dissatisfaction.
Criteria: Users express dissatisfaction or annoyance with a system or tool.
Phrase: Express frustration.

19.
Concepts: design rationale, give rationale to development decision
Relationship: Providing design rationale involves explaining development decisions.
Criteria: Designers explain the reasoning behind design decisions.
Phrase: Explain design rationale.

20.
Concepts: explaining plans, design discussion
Relationship: Explaining plans involves discussing design decisions.
Criteria: Designers explain plans or rationales behind a feature or design decision.
Phrase: Discuss design plans.

21.
Concepts: design intention, design goal explanation
Relationship: Explaining design intention involves discussing design philosophy.
Criteria: Designers explain the intention or design philosophy behind the software.
Phrase: Explain design intention.

22.
Concepts: expressing personal interest, express personal interest
Relationship: Expressing personal interest involves showing enthusiasm.
Criteria: Designers express personal interest or enthusiasm.
Phrase: Express personal interest.

23.
Concepts: reflecting on experiences, reflect on past experience
Relationship: Reflecting on experiences involves sharing personal anecdotes.
Criteria: Designers reflect on past experiences or share personal anecdotes.
Phrase: Reflect on experiences.

24.
Concepts: apology, apology for disturbance
Relationship: Apologizing involves expressing regret for inconvenience.
Criteria: Designers apologize for any inconvenience caused to users.
Phrase: Apologize for inconvenience.

25.
Concepts: indirect rejection, implicit rejection
Relationship: Indirectly rejecting involves implicitly deferring a feature or request.
Criteria: Designers indirectly reject or postpone a feature or request.
Phrase: Indirectly reject a request.

26.
Concepts: self-help, self-answering, self-solved issues
Relationship: Self-help involves finding solutions independently.
Criteria: Users take initiative to find a solution or help themselves.
Phrase: Engage in self-help.

27.
Concepts: workaround, provide temporary solution, usability workaround
Relationship: Providing a workaround involves offering a temporary solution.
Criteria: Designers share a workaround for an issue.
Phrase: Provide a workaround.

28.
Concepts: suggest alternative solution, provide alternative suggestion, offering/seeking alternative
Relationship: Suggesting an alternative solution involves providing an alternative approach.
Criteria: Users propose an alternative solution to a problem or issue.
Phrase: Suggest an alternative solution.

29.
Concepts: offer solution, offer a solution, proposing solution
Relationship: Offering a solution involves proposing a potential solution.
Criteria: Designers offer a solution or workaround to a problem.
Phrase: Offer a solution.

30.
Concepts: technical support, technical support and guidance
Relationship: Providing technical support involves offering technical assistance.
Criteria: Designers provide technical support or guidance to users.
Phrase: Provide technical support.

31.
Concepts: help offering, personalized assistance
Relationship: Offering help involves providing personalized assistance.
Criteria: Designers offer help or support to users.
Phrase: Offer personalized assistance.

32.
Concepts: usage instructions, usage instruction
Relationship: Providing usage instructions involves explaining how to use a feature.
Criteria: Designers provide instructions on how to use a feature or function.
Phrase: Provide usage instructions.