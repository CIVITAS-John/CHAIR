You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (24 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
24. 
Concepts: {Repeat the input 24}
Relationship: {What is logical relationship between concepts in code 24, or N/A if not applicable}
Criteria: {Who did what, and how for code 24}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: context, community context
- A user provides context about their school, teaching experience, or environment.
- User provides context about their educational setting or environment.

2.
Concepts: sharing classroom experiences, illustrate classroom success
- A user shares their experience using the platform in a classroom setting.
- A user shares a success story or positive experience using the software in a classroom setting.

3.
Concepts: student engagement, student reaction
- Students are engaged or impressed with the software's features
- The speaker describes students' positive responses or reactions to the software.

4.
Concepts: comparison to similar apps, comparison with other applications
- Comparing the software to similar applications
- A comparison is made between the software and other similar applications.

5.
Concepts: context of use, usability and context of use
- Instances where users describe the specific contexts in which they use the software.
- Discussions about how the software is used in different contexts and its usability.

6.
Concepts: user experience, user experience and impact
- Instances where users share their experiences or opinions about using the software.
- Users sharing their experiences and the impact of the software on their teaching or learning.

7.
Concepts: managing expectations
- The designer sets expectations or clarifies how a feature will work.
- The designer manages or sets expectations about a particular feature or update.

8.
Concepts: promote community engagement
- Instances where members of the community actively participate in discussions, ask questions, or provide feedback.
- Instances where users or designers engage in discussions that foster community interaction and participation.
- Active participation and interaction among community members, including both users and designers.
- Efforts made by designers to actively involve and communicate with the user community.

9.
Concepts: designer responsiveness
- Instances where designers respond to user queries or engage with user comments, indicating active communication between designers and users.
- Instances where designers respond to user inquiries, suggestions, or feedback.
- Instances where designers respond to user feedback or suggestions.
- Instances where designers acknowledge user feedback and discuss potential solutions or updates.
- Designers responding to user feedback and addressing their concerns or suggestions.
- Instances where designers respond to user queries or feedback, showing attentiveness to user needs.

10.
Concepts: update description
- Description of updates or changes made to the platform.
- Designer describes the scope or content of an update.

11.
Concepts: visual update
- Sharing visual updates or screenshots
- Sharing visual content, such as images, to update the community on progress.

12.
Concepts: role identification
- Instances where users or designers identify their roles, which can help understand the community structure and the roles within it.
- Instances where participants identify their roles or expertise, contributing to the problem-solving process.
- Identifying roles within the community, such as designers, teachers, or other users.

13.
Concepts: user engagement
- Instances where users actively participate in the conversation, showing interest or involvement in the community.
- Instances where users engage with designers through questions, feedback, or expressions of anticipation.
- Instances where users actively participate in the conversation, showing interest and involvement.

14.
Concepts: informal communication
- Instances where the tone of the conversation is casual or informal, indicating the nature of the community's communication style.
- Casual and non-technical interactions among community members, including humor and personal remarks.

15.
Concepts: development transparency
- Instances where designers provide detailed information about development processes, challenges, and progress.
- Keeping the community informed about the development process and upcoming changes.

16.
Concepts: pc version inquiry
- User mentions or inquires about the PC version of the software.
- The speaker inquires about the PC version of the Physics Lab software.

17.
Concepts: resources sharing
- Instances where designers or users share resources, such as download links, development plans, or announcements.
- Information about where and how to access resources, files, or downloads related to Physics Lab.
- Instances where users or designers share files, images, or other resources with the community.

18.
Concepts: technical constraints
- Instances where technical limitations or requirements are discussed.
- Instances where limitations or constraints of the software are mentioned.

19.
Concepts: encourage participatory design
- Instances where the community contributes to the design and development of the Physics Lab by providing suggestions or feedback that influence the development process.
- Instances where designers seek or consider user input in the design and development process.
- Instances where users are invited to participate in the design process or provide input.
- Instances where users and designers collaboratively discuss features and usability, reflecting a user-centered design approach.
- The involvement of users in the design and development process, contributing their insights and needs.
- Encouragement by designers for users to contribute ideas, feedback, and suggestions for the development of Physics Lab.
- Active involvement of users in the design process to ensure the product meets their needs and preferences.
- The involvement of users in the design process to ensure the product meets their needs and preferences.
- Instances where users and designers collaboratively discuss or work on design improvements.

20.
Concepts: user response
- Input and suggestions provided by users regarding the design and functionality of the product.
- Instances where users provide feedback or ask questions that influence the design process.
- Instances where users provide feedback or suggestions to improve the software.
- Instances where users provide suggestions or feedback on features and functionalities.
- Instances where users provide feedback or ask questions about the app's development and updates.
- User experience feedback involves sharing thoughts or opinions about a product or service's usability or performance.

21.
Concepts: user feedback integration
- Instances where user feedback is acknowledged and incorporated into the design process.
- Instances where user feedback is actively sought and incorporated into the design process.

22.
Concepts: update confirmation
- User confirms or announces an update
- Confirm update completion involves verifying or confirming that an update has been completed.

23.
Concepts: collaborative problem solving
- Moments where designers and users work together to address issues.
- Collaborative efforts between users and designers to solve issues and improve the product.
- Instances where users and designers work together to address issues or improve the software.

24.
Concepts: iterative development
- Instances where designers discuss updates, new features, or bug fixes.
- The process of repeatedly refining and improving a product based on feedback and testing.
- The process of continuously improving the product based on feedback and testing.
- Instances where the design process is described as iterative, with ongoing optimizations and updates.
===
Here are the definitions for each code:

---
1.
Concepts: context, community context
Relationship: The concepts are related as they both provide background information about the user's environment.
Criteria: A user provides context about their educational setting or environment.
Phrase: Providing context about the educational setting.

2.
Concepts: sharing classroom experiences, illustrate classroom success
Relationship: The concepts are related as they both describe positive experiences using the platform in a classroom setting.
Criteria: A user shares a success story or positive experience using the software in a classroom setting.
Phrase: Sharing classroom success stories.

3.
Concepts: student engagement, student reaction
Relationship: The concepts are related as they both describe students' positive responses to the software.
Criteria: Students are engaged or impressed with the software's features.
Phrase: Describing student engagement.

4.
Concepts: comparison to similar apps, comparison with other applications
Relationship: The concepts are related as they both involve comparing the software to other similar applications.
Criteria: A comparison is made between the software and other similar applications.
Phrase: Comparing to similar applications.

5.
Concepts: context of use, usability and context of use
Relationship: The concepts are related as they both describe how the software is used in different contexts.
Criteria: Discussions about how the software is used in different contexts and its usability.
Phrase: Describing context of use.

6.
Concepts: user experience, user experience and impact
Relationship: The concepts are related as they both describe users' experiences and the impact of the software on their teaching or learning.
Criteria: Users sharing their experiences and the impact of the software on their teaching or learning.
Phrase: Sharing user experiences.

7.
Concepts: managing expectations
Relationship: N/A
Criteria: The designer sets expectations or clarifies how a feature will work.
Phrase: Managing expectations.

8.
Concepts: promote community engagement
Relationship: The concepts are related as they all describe instances of community interaction and participation.
Criteria: Active participation and interaction among community members, including both users and designers.
Phrase: Promoting community engagement.

9.
Concepts: designer responsiveness
Relationship: The concepts are related as they all describe instances of designers responding to user queries or feedback.
Criteria: Designers responding to user feedback and addressing their concerns or suggestions.
Phrase: Responding to user feedback.

10.
Concepts: update description
Relationship: N/A
Criteria: Description of updates or changes made to the platform.
Phrase: Describing updates.

11.
Concepts: visual update
Relationship: N/A
Criteria: Sharing visual updates or screenshots.
Phrase: Sharing visual updates.

12.
Concepts: role identification
Relationship: The concepts are related as they both describe instances of identifying roles within the community.
Criteria: Identifying roles within the community, such as designers, teachers, or other users.
Phrase: Identifying roles.

13.
Concepts: user engagement
Relationship: The concepts are related as they both describe instances of users actively participating in the conversation.
Criteria: Instances where users actively participate in the conversation, showing interest and involvement.
Phrase: Engaging in conversation.

14.
Concepts: informal communication
Relationship: N/A
Criteria: Casual and non-technical interactions among community members, including humor and personal remarks.
Phrase: Engaging in informal communication.

15.
Concepts: development transparency
Relationship: N/A
Criteria: Keeping the community informed about the development process and upcoming changes.
Phrase: Providing development transparency.

16.
Concepts: pc version inquiry
Relationship: N/A
Criteria: User mentions or inquires about the PC version of the software.
Phrase: Inquiring about the PC version.

17.
Concepts: resources sharing
Relationship: The concepts are related as they both describe instances of sharing resources with the community.
Criteria: Instances where users or designers share files, images, or other resources with the community.
Phrase: Sharing resources.

18.
Concepts: technical constraints
Relationship: N/A
Criteria: Instances where limitations or constraints of the software are mentioned.
Phrase: Discussing technical constraints.

19.
Concepts: encourage participatory design
Relationship: The concepts are related as they all describe instances of involving users in the design and development process.
Criteria: The involvement of users in the design and development process, contributing their insights and needs.
Phrase: Encouraging participatory design.

20.
Concepts: user response
Relationship: The concepts are related as they all describe instances of users providing feedback or suggestions.
Criteria: Instances where users provide feedback or suggestions to improve the software.
Phrase: Providing user feedback.

21.
Concepts: user feedback integration
Relationship: N/A
Criteria: Instances where user feedback is acknowledged and incorporated into the design process.
Phrase: Integrating user feedback.

22.
Concepts: update confirmation
Relationship: N/A
Criteria: User confirms or announces an update.
Phrase: Confirming updates.

23.
Concepts: collaborative problem solving
Relationship: The concepts are related as they both describe instances of designers and users working together to address issues.
Criteria: Collaborative efforts between users and designers to solve issues and improve the product.
Phrase: Collaborating on problem-solving.

24.
Concepts: iterative development
Relationship: The concepts are related as they all describe the process of repeatedly refining and improving the product.
Criteria: The process of continuously improving the product based on feedback and testing.
Phrase: Engaging in iterative development.