You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (64 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
64. 
Concepts: {Repeat the input 64}
Relationship: {What is logical relationship between concepts in code 64, or N/A if not applicable}
Criteria: {Who did what, and how for code 64}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: user reactions, engagement reaction
- Instances where users express their reactions to updates or announcements, often using emojis.
- Developers react emotionally or humorously to users' stories or comments.

2.
Concepts: avatar setup, image and avatar management
- Mentioning or discussing how to change or upload a new avatar image in the community.
- Users and designers discuss images or avatars, including their management and updates.

3.
Concepts: visual demonstration, visual reference sharing
- Use of visual aids like images to support explanations or instructions.
- Sharing images or visual references for clarification.

4.
Concepts: image sharing, sharing visual status updates
- Sharing visual content such as images within the community.
- Users provide status updates using visual aids or images.

5.
Concepts: community member identification, identifying roles in the community
- Identifying members of the community through their roles or comments.
- Participants identify their roles or expertise within the community.

6.
Concepts: interaction suggestions, community participation encouragement
- Proposing or suggesting specific actions or interactions within the community.
- Encouraging active participation and feedback in the community.

7.
Concepts: downplay formality, communicating informally
- Encouragement of casual interaction and minimization of formalities within the community.
- Community members engage in casual and non-technical interactions.

8.
Concepts: greeting back, greeting reciprocation
- Designers respond to users' greetings.
- Responding to or reciprocating user greetings.

9.
Concepts: greeting, greet the community
- Greetings are exchanged between users and developers within the community.
- User greeting the community.

10.
Concepts: suggesting private messages, gather detailed requirements
- Suggesting private messaging to discuss specific details.
- Asking users to privately message detailed requirements.

11.
Concepts: acknowledge craftsmanship, craftsmanship appreciation
- Users acknowledge and recognize quality craftsmanship or perfectionism.
- Appreciating the detailed craftsmanship and effort put into the software.

12.
Concepts: acknowledge feedback, acknowledge points and understanding
- A designer acknowledges user feedback, sometimes non-verbally or with simple acknowledgments.
- Designers acknowledge and affirm points made by users to indicate understanding.

13.
Concepts: acknowledge response, acknowledging contributions
- Acknowledging and appreciating responses or feedback.
- Members acknowledge contributions or express thanks.

14.
Concepts: compliment, compliment on the app's evolvement
- Users express admiration followed by a request for additional features or enhancements.
- User expressing positive feedback on the app's progress.

15.
Concepts: role confirmation, confirm professional role
- Identifying or confirming the role of a user, often as a teacher.
- Confirmation of professional occupation or role.

16.
Concepts: user confirmation, confirming updates
- Users confirming a point or detail.
- Users confirm and acknowledge the completion or state of updates.

17.
Concepts: designer confirmation, confirmation/agreement of collaboration
- Confirming that a feature will be added.
- A designer confirms or agrees to collaborate, often indicating plans to gather community input.

18.
Concepts: positive response, short affirmative response
- User provides a straightforward, positive response.
- Providing a brief, affirmative response.

19.
Concepts: feedback with justification, justifying feature suggestions
- Offering suggestions or feedback along with justifications for those suggestions.
- Members provide justifications for recommending specific features.

20.
Concepts: design rationale, provide rationale
- Explaining the rationale or purpose behind design choices.
- Users and designers provide reasons or justifications for certain decisions or actions.

21.
Concepts: elaboration, elaboration of question
- A designer provides a detailed explanation or elaboration on a topic or query.
- A person elaborates on a question or issue, sometimes using images for clarity.

22.
Concepts: specific answer, complex response elaboration
- Providing a detailed and specific answer to user questions.
- Providing a detailed response to a complex question.

23.
Concepts: request clarification, ask follow-up questions
- Participants seek or provide clarification on specific details.
- Participants ask follow-up questions to clarify or add to previous statements.

24.
Concepts: provide context for need, contextualization of question
- User provides context for their request, explaining the broader needs or goals behind it.
- A user provides context around a question or statement, often relating to their specific conditions.

25.
Concepts: apologize for timing, acknowledge potential inconvenience, express consideration and apologies, apologize for potential interruption, apologize for any disturbance
- A designer apologizes for any inconvenience, usually related to the timing of an activity or disturbance.
- A designer acknowledges and apologizes for any inconvenience that may have caused by late-night communications.
- Designers frequently show consideration by expressing politeness and offering apologies for potential inconveniences.
- Users or designers apologize for disruptions or interruptions.
- Designers apologize to the community for any inconvenience or disturbances caused.

26.
Concepts: implicit rejection, indirect reject
- Implicitly rejecting a suggestion through indirect language.
- Non-direct response implying a rejection or delay, often using deflection or justification.

27.
Concepts: personal interest, designer personal interest, expressing personal interest
- Developers share their personal interests that relate to the domain of the software.
- Designers sharing personal interest related to contextual topics.
- Users express personal interest or passion in specific subject matters or development areas.

28.
Concepts: teacher background, teacher identity disclosure
- Mentioning professional experience or background in teaching to provide context.
- Introducing oneself with specific details about teaching background.

29.
Concepts: role inquiry, inquiring about educational background
- Inquiring about user roles or professional background.
- Users or developers inquire about the educational background or teaching level of community members.

30.
Concepts: user background, personal background sharing, professional background sharing
- Information provided by users about their professional or personal background, which helps in understanding the community's composition.
- Sharing personal background to provide context for questions or suggestions.
- Users share their professional background to establish credibility and context.

31.
Concepts: share past experiences, experience sharing
- Users share stories or incidents from the past to provide context to the discussion.
- A user or participant identifies their prior experience or roles to establish familiarity and expertise within the community.

32.
Concepts: internet access follow-up, inquire about classroom conditions
- Follow-up questions specifically about whether there is internet access in the classroom.
- Participants inquire about the presence of internet access or resources in classrooms.

33.
Concepts: school needs discussion, discuss educational context
- Describing or discussing a school's needs, such as for information-based education or resources.
- Participants provide background context regarding school resources or educational infrastructure.

34.
Concepts: educational alignment, educational standards alignment
- Aligning product features with educational needs.
- Aligning features or components with commonly accepted educational standards.

35.
Concepts: classroom application, highlight educational needs
- User discusses the functionality's relevance to classroom use, including features that would be beneficial.
- A user highlights their educational needs, often related to the functionality and usability of the software for teaching purposes.

36.
Concepts: experience reflection, user experience in educational contexts
- Reflections on past experiences using the software or related tools in educational settings.
- User experiences and challenges in using the software within educational settings.

37.
Concepts: classroom experience sharing, sharing user experiences and impact
- Sharing experiences using the software in a classroom setting.
- Users share their experiences and the impact of the software on their teaching or learning.

38.
Concepts: ease of use, usability and practicality
- Discussions related to the ease of use and user-friendliness of the software.
- User comments on the ease of use and practicality of the software.

39.
Concepts: user reviews, express positive feedback about software
- Users provide their overall reviews or opinions about the software.
- Users express approval, satisfaction, and appreciation for the software and its features.

40.
Concepts: compare software usability, favorably comparing the software
- Users provide feedback by comparing the software's usability with other alternatives.
- Users highlight the app's advantages by comparing it positively against similar applications.

41.
Concepts: user tips, offer practical tips
- Sharing user tips or advice regarding features.
- Sharing practical tips or methods to effectively utilize the software.

42.
Concepts: usage instructions, component usage instruction
- Explaining how to use certain features within the software step by step.
- Giving instructions for proper usage of specific components within the application.

43.
Concepts: detailed functionality, functionality demonstration
- Elaborating on how specific components or features operate.
- Giving practical examples of how features work or could be used.

44.
Concepts: feature expansion, feature clarification
- Expanding details about a feature or update.
- Providing information about existing features or functionalities.

45.
Concepts: compatibility consideration, consider future compatibility
- Evaluating future technical compatibility requirements.
- A designer considers the need for future compatibility with older systems or platforms.

46.
Concepts: compatibility answers, platform compatibility inquiry
- Answers provided about the software’s compatibility with certain operating systems.
- Inquiry regarding the compatibility or availability of the software on different platforms.

47.
Concepts: system compatibility check, confirm software compatibility
- Developers suggest steps or solutions for users to check system compatibility.
- Designers confirm and assure users about the compatibility of the software with specific systems.

48.
Concepts: version feature details, software version information
- Detailing the features and specifics of a software version.
- Informing about the status of software versions.

49.
Concepts: question for access, platform clarification
- Users ask where they can access or download specific versions of the software.
- User asks for clarification on where to download specific versions of the software.

50.
Concepts: clarify software versions, discuss platform versions
- Participants clarify or request clarification about the type or version of software.
- Participants provide specific information regarding platform versions of the software.

51.
Concepts: express concern, inquiring about update status
- A user expresses concern or inquiries about the status of an update or feature.
- Users question the status or availability of updates, especially for Android.

52.
Concepts: provide download information, software updates and downloads
- Sharing locations or methods to download software or resources.
- Informing users about software updates or download locations.

53.
Concepts: access information, answer about access
- Providing access information for resources or files.
- A person provides or seeks information on how to access or download a resource.

54.
Concepts: community feature need, community needs acknowledgement
- Expressing the need for specific functions or features beneficial to the community.
- Acknowledging community needs or feedback in feature prioritization.

55.
Concepts: usability preferences, clarify preference
- Discussion about the preferred usability options or features.
- Users express their preferences or choices clearly in relation to design or usage aspects of the software.

56.
Concepts: expressing user needs, explain reasons for the request, making feature requests
- Users express specific demands or preferences related to software usage.
- User explains their needs or reasons for requesting specific software functionalities or features.
- Users articulate and request specific feature additions or improvements.

57.
Concepts: requesting new features, experiment expansion request, request additional experiments
- Users request new features or improvements related to physics experiments.
- Asking to include additional physics experiments or topics.
- User requests inclusion of additional types of experiments in the software.

58.
Concepts: inquiry, information seeking
- Users ask questions to seek information or clarification.
- Users asking questions to gain knowledge or resources related to the software.

59.
Concepts: user manual request, documentation need
- Requesting a user manual for detailed instructions.
- Users express a need for documentation, such as user manuals, to better understand or utilize the software.

60.
Concepts: general announcement, making community announcements
- General information or announcements are shared with the community.
- Group-wide notifications about updates or production plans.

61.
Concepts: community communication, user communication
- Communicating update release information to the community.
- Developers provide updates and communicate timelines about software releases to the community.

62.
Concepts: community update, developer announcement, inform about changes
- Instances where designers provide updates or announcements about the software.
- A designer provides an official notification to users about new features, updates, or bug fixes.
- A designer informs the community about changes that will be made in future updates.

63.
Concepts: confirm feature update, confirm upcoming update
- Confirming the timeline of a feature update.
- Designers confirm scheduled updates or new versions.

64.
Concepts: update description, describe update scope
- A person describes the scope or nature of an update.
- Designers describe the extent or scope of upcoming software updates.
===
---
Definitions for each code (64 in total):
1.
Concepts: user reactions, engagement reaction
Relationship: Both concepts pertain to how users express their responses within the community.
Criteria: Users and developers express reactions using emojis or emotionally/humorously responding to stories or comments.
Phrase: React to community content

2.
Concepts: avatar setup, image and avatar management
Relationship: Both involve discussions about avatars and visual aspects in the community.
Criteria: Users and designers discuss or manage avatar images and updates.
Phrase: Manage avatars

3.
Concepts: visual demonstration, visual reference sharing
Relationship: Both concepts involve using visuals to support communication.
Criteria: Users share visual aids or references to clarify explanations or instructions.
Phrase: Share visual aids for explanation

4.
Concepts: image sharing, sharing visual status updates
Relationship: Both involve users sharing visual content within the community.
Criteria: Users share visual content or status updates using images.
Phrase: Share visual status updates

5.
Concepts: community member identification, identifying roles in the community
Relationship: Both involve recognizing or defining member roles.
Criteria: Participants identify community members by their roles or expertise.
Phrase: Identify member roles

6.
Concepts: interaction suggestions, community participation encouragement
Relationship: Both concepts aim to enhance community engagement.
Criteria: Participants propose actions or encourage active participation and feedback.
Phrase: Encourage community participation

7.
Concepts: downplay formality, communicating informally
Relationship: Both involve fostering casual interactions within the community.
Criteria: Community members promote casual and informal communication.
Phrase: Promote casual interaction

8.
Concepts: greeting back, greeting reciprocation
Relationship: Both involve responding to greetings within the community.
Criteria: Participants reciprocate or respond to greetings.
Phrase: Respond to greetings

9.
Concepts: greeting, greet the community
Relationship: Both focus on initial forms of communication.
Criteria: Users exchange greetings within the community.
Phrase: Exchange greetings

10.
Concepts: suggesting private messages, gather detailed requirements
Relationship: Both involve private communication to discuss specifics.
Criteria: Participants suggest private messaging to gather detailed requirements.
Phrase: Suggest private messaging for details

11.
Concepts: acknowledge craftsmanship, craftsmanship appreciation
Relationship: Both involve recognizing quality work.
Criteria: Users appreciate and acknowledge the craftsmanship put into the software.
Phrase: Appreciate craftsmanship

12.
Concepts: acknowledge feedback, acknowledge points and understanding
Relationship: Both involve recognition and understanding of user input.
Criteria: Designers acknowledge feedback and affirm points to show understanding.
Phrase: Acknowledge user feedback

13.
Concepts: acknowledge response, acknowledging contributions
Relationship: Both involve recognition of community member input.
Criteria: Participants acknowledge and express thanks for contributions.
Phrase: Acknowledge contributions

14.
Concepts: compliment, compliment on the app's evolvement
Relationship: Both involve positive feedback related to the app's development.
Criteria: Users express admiration and often suggest additional features or enhancements.
Phrase: Compliment app progress

15.
Concepts: role confirmation, confirm professional role
Relationship: Both involve verifying professional roles or identities.
Criteria: Participants confirm the professional roles of users.
Phrase: Confirm professional roles

16.
Concepts: user confirmation, confirming updates
Relationship: Both involve users confirming aspects related to the software.
Criteria: Users confirm points or the completion/state of updates.
Phrase: Confirm updates

17.
Concepts: designer confirmation, confirmation/agreement of collaboration
Relationship: Both involve designers confirming or agreeing to actions.
Criteria: Designers confirm feature additions or agree to collaborate with input from the community.
Phrase: Confirm collaboration

18.
Concepts: positive response, short affirmative response
Relationship: Both involve short, positive user interactions.
Criteria: Users provide brief, positive responses.
Phrase: Provide positive feedback

19.
Concepts: feedback with justification, justifying feature suggestions
Relationship: Both involve providing feedback along with reasons.
Criteria: Participants justify their feature suggestions with explanations.
Phrase: Justify feature suggestions

20.
Concepts: design rationale, provide rationale
Relationship: Both involve explaining the reasons behind decisions.
Criteria: Participants provide reasons or justifications for decisions or actions.
Phrase: Explain design rationale

21.
Concepts: elaboration, elaboration of question
Relationship: Both involve providing detailed explanations.
Criteria: Participants elaborate on questions or issues, sometimes using images for clarity.
Phrase: Elaborate on questions

22.
Concepts: specific answer, complex response elaboration
Relationship: Both involve detailed and specific answers.
Criteria: Participants provide detailed responses to complex questions.
Phrase: Provide specific answers

23.
Concepts: request clarification, ask follow-up questions
Relationship: Both involve seeking further clarification.
Criteria: Participants ask follow-up questions to clarify previous statements.
Phrase: Seek clarification

24.
Concepts: provide context for need, contextualization of question
Relationship: Both involve providing background information for better understanding.
Criteria: Users provide context around questions or statements to explain broader needs or goals.
Phrase: Provide context for inquiries

25.
Concepts: apologize for timing, acknowledge potential inconvenience, express consideration and apologies, apologize for potential interruption, apologize for any disturbance
Relationship: All involve expressing apologies for various reasons.
Criteria: Designers or users apologize for inconveniences, timing issues, or potential disturbances.
Phrase: Apologize for inconveniences

26.
Concepts: implicit rejection, indirect reject
Relationship: Both involve rejecting suggestions indirectly.
Criteria: Participants implicitly reject suggestions through indirect language.
Phrase: Implicitly reject suggestions

27.
Concepts: personal interest, designer personal interest, expressing personal interest
Relationship: Both involve sharing personal interests related to the domain.
Criteria: Developers and users share personal interests or passions related to the software context.
Phrase: Share personal interests

28.
Concepts: teacher background, teacher identity disclosure
Relationship: Both involve disclosing professional teaching backgrounds.
Criteria: Participants introduce themselves with details about their teaching experience.
Phrase: Disclose teaching background

29.
Concepts: role inquiry, inquiring about educational background
Relationship: Both involve inquiring about professional backgrounds.
Criteria: Participants inquire about the educational or professional background of community members.
Phrase: Inquire about educational background

30.
Concepts: user background, personal background sharing, professional background sharing
Relationship: Both involve sharing personal or professional histories.
Criteria: Users share their professional or personal backgrounds to establish context and familiarity.
Phrase: Share personal background

31.
Concepts: share past experiences, experience sharing
Relationship: Both involve recounting previous incidents or roles.
Criteria: Participants share their past experiences to provide context or establish expertise.
Phrase: Share past experiences

32.
Concepts: internet access follow-up, inquire about classroom conditions
Relationship: Both involve follow-up questions about classroom resources.
Criteria: Participants inquire about the availability of internet access and other resources in classrooms.
Phrase: Inquire about classroom resources

33.
Concepts: school needs discussion, discuss educational context
Relationship: Both involve discussing educational needs and context.
Criteria: Participants discuss the needs and context of schools, including resources and infrastructure.
Phrase: Discuss school needs

34.
Concepts: educational alignment, educational standards alignment
Relationship: Both involve aligning features with educational requirements.
Criteria: Participants discuss aligning the software features with educational needs or standards.
Phrase: Align with educational standards

35.
Concepts: classroom application, highlight educational needs
Relationship: Both involve discussing the relevance to classroom settings.
Criteria: Users highlight features beneficial for classroom use and discuss educational needs.
Phrase: Discuss classroom application

36.
Concepts: experience reflection, user experience in educational contexts
Relationship: Both involve reflecting on educational experiences.
Criteria: Participants reflect on their experiences using the software in educational settings.
Phrase: Reflect on educational experiences

37.
Concepts: classroom experience sharing, sharing user experiences and impact
Relationship: Both involve sharing the impacts of software in classroom settings.
Criteria: Users share their experiences and the software's impact on teaching or learning.
Phrase: Share classroom experiences

38.
Concepts: ease of use, usability and practicality
Relationship: Both involve discussing the usability of the software.
Criteria: Users comment on the ease of use and practical aspects of the software.
Phrase: Discuss usability

39.
Concepts: user reviews, express positive feedback about software
Relationship: Both involve expressing opinions on the software.
Criteria: Users provide reviews and express satisfaction with the software's features.
Phrase: Provide positive feedback

40.
Concepts: compare software usability, favorably comparing the software
Relationship: Both involve comparing the software's usability against other options.
Criteria: Users compare and highlight the app's advantages against similar alternatives.
Phrase: Compare software usability

41.
Concepts: user tips, offer practical tips
Relationship: Both involve sharing advice for effective usage.
Criteria: Participants share practical tips for utilizing the software effectively.
Phrase: Offer practical tips

42.
Concepts: usage instructions, component usage instruction
Relationship: Both involve explaining how to use features.
Criteria: Participants provide instructions on using specific software components.
Phrase: Provide usage instructions

43.
Concepts: detailed functionality, functionality demonstration
Relationship: Both involve explaining how features work.
Criteria: Participants demonstrate or elaborate on how specific features operate.
Phrase: Demonstrate functionality

44.
Concepts: feature expansion, feature clarification
Relationship: Both involve providing more information about features.
Criteria: Participants expand on or clarify details about features or updates.
Phrase: Expand feature details

45.
Concepts: compatibility consideration, consider future compatibility
Relationship: Both involve evaluating future compatibility needs.
Criteria: Designers consider future compatibility with older systems or platforms.
Phrase: Consider future compatibility

46.
Concepts: compatibility answers, platform compatibility inquiry
Relationship: Both involve inquiries and answers about software compatibility.
Criteria: Participants inquire about and receive answers on software compatibility with various platforms.
Phrase: Answer compatibility inquiries

47.
Concepts: system compatibility check, confirm software compatibility
Relationship: Both involve checking or confirming system compatibility.
Criteria: Designers confirm and suggest steps for checking software compatibility with specific systems.
Phrase: Confirm system compatibility

48.
Concepts: version feature details, software version information
Relationship: Both involve providing information about software versions.
Criteria: Participants provide detailed information about software versions and their features.
Phrase: Provide version information

49.
Concepts: question for access, platform clarification
Relationship: Both involve inquiries about accessing software.
Criteria: Users ask where to access or download specific software versions.
Phrase: Inquire about software access

50.
Concepts: clarify software versions, discuss platform versions
Relationship: Both involve discussing or clarifying software versions.
Criteria: Participants provide or seek information on specific software versions and platforms.
Phrase: Clarify software versions

51.
Concepts: express concern, inquiring about update status
Relationship: Both involve concerns about software updates.
Criteria: Users express concerns or inquiries regarding the status or availability of updates.
Phrase: Inquire about update status

52.
Concepts: provide download information, software updates and downloads
Relationship: Both involve sharing details on downloading software or updates.
Criteria: Participants provide information on where and how to download software or updates.
Phrase: Provide download information

53.
Concepts: access information, answer about access
Relationship: Both involve providing or seeking information on resource access.
Criteria: Participants provide or request information on accessing resources or files.
Phrase: Provide access information

54.
Concepts: community feature need, community needs acknowledgement
Relationship: Both involve acknowledging and expressing the community's needs.
Criteria: Participants express the need for features and acknowledge community feedback in prioritizing features.
Phrase: Acknowledge community needs

55.
Concepts: usability preferences, clarify preference
Relationship: Both involve discussing preferred usability options.
Criteria: Users express their preferences or choices related to design or software usage.
Phrase: Clarify usability preferences

56.
Concepts: expressing user needs, explain reasons for the request, making feature requests
Relationship: Both involve users articulating their needs and reasons.
Criteria: Participants express needs or requests specific software functionalities and explain the reasons.
Phrase: Articulate user needs

57.
Concepts: requesting new features, experiment expansion request, request additional experiments
Relationship: Both involve requests for new or expanded features.
Criteria: Users request new features or additional content focused on physics experiments.
Phrase: Request new features

58.
Concepts: inquiry, information seeking
Relationship: Both involve asking questions to seek information.
Criteria: Users ask questions to gain information or resources related to the software.
Phrase: Seek information

59.
Concepts: user manual request, documentation need
Relationship: Both involve requesting documentation.
Criteria: Users request detailed instructions or user manuals to better understand the software.
Phrase: Request documentation

60.
Concepts: general announcement, making community announcements
Relationship: Both involve sharing general information with the community.
Criteria: Participants make group-wide announcements or share general information about updates.
Phrase: Make community announcements

61.
Concepts: community communication, user communication
Relationship: Both involve providing updates to the community.
Criteria: Developers communicate update release information and timelines to the community.
Phrase: Communicate updates

62.
Concepts: community update, developer announcement, inform about changes
Relationship: Both involve providing official notifications about software changes.
Criteria: Designers inform the community about new features, updates, or changes.
Phrase: Announce updates

63.
Concepts: confirm feature update, confirm upcoming update
Relationship: Both involve confirming scheduled software updates.
Criteria: Designers confirm the timeline and details of upcoming feature updates.
Phrase: Confirm upcoming updates

64.
Concepts: update description, describe update scope
Relationship: Both involve describing the nature and extent of updates.
Criteria: Designers describe the scope and details of upcoming software updates.
Phrase: Describe update scope
---