You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (64 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
64. 
Concepts: {Repeat the input 64}
Relationship: {What is logical relationship between concepts in code 64, or N/A if not applicable}
Criteria: {Who did what, and how for code 64}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: plan for feedback, opinion gathering
- A designer plans to gather feedback before starting new development.
- Designers gathering opinions or feedback before starting new features.

2.
Concepts: consulting community, community consultation
- Designers consult the community for opinions or feedback.
- Developers consult the community for their opinions or information.

3.
Concepts: future feedback consultation, promise future consultation
- Developer promises to seek feedback from the community before proceeding.
- Developer promises to gather community opinions before starting a new project.

4.
Concepts: technical support, technical support and guidance
- Instances where designers or users provide technical assistance or address technical issues.
- Instances where designers provide technical support or information about the software.
- Instances where designers provide technical support or guidance to users.

5.
Concepts: offer help, user support
- Designers offering help or assistance to users.
- Assistance and support provided by designers to help users effectively use the product.

6.
Concepts: usage instruction, usage instructions
- Designer provides specific instructions for using a feature.
- A designer provides instructions on how to use specific features.

7.
Concepts: user guidance, feature guidance
- Designer provides instructions or guidance on using features.
- A designer provides guidance or instructions on using a feature.

8.
Concepts: feature explanation, introduce feature functions
- Explanation of how a feature works or its purpose.
- Introduction or explanation of how a feature functions.

9.
Concepts: feature stability, long-term stability
- A designer discusses the stability of a feature once implemented.
- A designer explains that a feature will ensure long-term reliability once completed.

10.
Concepts: explain functionality, component functionality
- A designer explains the functionality of a component.
- A designer mentions the specific functionalities of a component.

11.
Concepts: suggest simplification, feature simplification
- Designers suggest simplifying the design.
- A designer suggests simplifying a feature or aspect of the software.

12.
Concepts: design principles, explain design philosophy
- A designer explains the principles or philosophy behind the design.
- The underlying principles and approaches guiding the design and development of the product.

13.
Concepts: design rationale, development rationale
- Designer explains the rationale behind design choices.
- A designer provides reasons for specific development decisions.

14.
Concepts: feature improvement, product improvement
- Developer and user discuss ways to improve or optimize a feature.
- Developers discuss specific improvements or changes to the software.

15.
Concepts: input methods, discuss input methods
- Designers discuss methods of input or data entry.
- Developer discusses methods of input for the software.

16.
Concepts: feature discussion, feature development
- A designer discusses various aspects of a feature.
- A designer discusses various aspects of feature development.

17.
Concepts: usability, usability discussion, software usability
- Designers discussing the usability or user-friendliness of the software.
- Discussing the usability of specific features or functionalities.
- Users discuss the usability and practicality of the software.

18.
Concepts: user reviews, user experience
- Users provide reviews or opinions about the software.
- Instances where users share their experiences or opinions about using the software.

19.
Concepts: context of use, usability and context of use
- Instances where users describe the specific contexts in which they use the software.
- Discussions about how the software is used in different contexts and its usability.

20.
Concepts: highlight practicality, usability and practicality
- A user expresses the usefulness and convenience of the software.
- User comments on the ease of use and practicality of the software.

21.
Concepts: comparison to similar apps, comparison with other applications
- A user compares the software favorably to similar applications.
- User compares the software favorably with other applications.

22.
Concepts: comparative feedback, software comparison
- Users compare the software favorably to other software.
- Users compare the software with other software, highlighting its advantages or disadvantages.

23.
Concepts: feature appreciation, appreciation of features, feature compliment
- Users appreciate specific features of the software.
- Users expressing appreciation for specific features or aspects of the platform.
- User compliments the developer on a particular feature or aspect of the software.

24.
Concepts: positive, praise software, share positive feedback, positive feedback
- User expresses positive feedback about the software.
- Users praising or expressing satisfaction with the software.
- Sharing positive feedback or compliments about the software.
- Users provide positive feedback about the software.

25.
Concepts: resolution, resource acknowledgement
- Acknowledging the receipt of information or resources.
- Acknowledging receipt of resources or information.

26.
Concepts: acknowledge receipt, user acknowledgment
- Acknowledging receipt or understanding of information.
- User acknowledges receipt of information or instruction.

27.
Concepts: designer confirmation, confirmation/agreement of collaboration
- Confirming a statement or plan.
- A designer confirms or agrees on collaboration plans.

28.
Concepts: agreement, understanding confirmation
- Expressions of agreement or acknowledgment by users or developers.
- Confirmation of understanding or agreement by users or developers.

29.
Concepts: affirm user point, confirm argument
- Developer affirms or agrees with a user's point or suggestion.
- A user confirms or agrees with the developer's argument or statement.

30.
Concepts: update confirmation, confirm update completion
- Confirming that an update has been applied.
- User confirms that an update has been completed.

31.
Concepts: confirmation, user confirmation
- Acknowledging or confirming previous statements or actions.
- Users confirming or agreeing with previous statements.

32.
Concepts: gratitude, express gratitude, gratitude and acknowledgment
- Users and designers express gratitude or appreciation.
- Instances where users express thanks or appreciation for the work done by the designers or other community members.
- Instances where users or designers express gratitude or acknowledge contributions.
- Users expressing gratitude or acknowledgment for the designers' work.
- Expressions of gratitude and recognition of user contributions.

33.
Concepts: user appreciation, user interaction and gratitude
- Expressions of thanks or appreciation from users.
- User interactions that include expressions of gratitude or positive feedback.

34.
Concepts: acknowledge help, acknowledge response
- User expresses gratitude for help or support.
- A user acknowledges and shows appreciation for a response.

35.
Concepts: designer appreciation, recognition of effort, demonstrate appreciation, appreciate dedication
- Expressing appreciation for the designers' efforts.
- Instances where users acknowledge and appreciate the efforts of the designers.
- Users show appreciation for the designers' efforts.
- A user appreciates the dedication or effort of the designers.

36.
Concepts: appreciate support from users, community support
- Designers appreciate user support.
- Instances where users express support, encouragement, or appreciation for the designers' efforts.

37.
Concepts: community responses, gratitude to the community
- Responses from the community acknowledging or thanking others.
- Expressing gratitude to the community for their support.

38.
Concepts: greet community, greet the community
- A user or designer greets the community.
- A user greets the community or group.

39.
Concepts: user inquiry, request for information
- Questions or requests for information made by users regarding the use or functionalities of Physics Lab.
- Instances where users ask for specific information or help regarding the use or features of Physics Lab.

40.
Concepts: feature request, feature requests for physics experiments
- Instances where users request new features or improvements for the Physics Lab tool.
- Suggestions from users about desired features or improvements for the software.
- Requests for specific features related to physics experiments.

41.
Concepts: suggest new feature, propose another feature
- Suggesting new features or functionalities for the platform.
- Proposing additional features or functionalities for convenience.

42.
Concepts: suggestions, feature suggestion, user suggestion, suggest improvements
- Suggestions made by users or developers for the software.
- Users suggesting specific features or improvements.
- A user makes a suggestion for improving the software.
- A user suggests improvements or new features for the software.

43.
Concepts: design suggestion, design/feature suggestion
- A user makes a design suggestion or request for functionality.
- User suggests adding or modifying a feature to improve convenience.

44.
Concepts: reason for suggestion, explain reasons for the request
- A user suggests a feature and provides a reason for its necessity.
- Users explain the reasons behind their feature requests.

45.
Concepts: user requests, request specific features
- Instances where users request new features or improvements.
- Specific features or improvements requested by users.
- Users requesting specific features or improvements in the software.

46.
Concepts: usability needs, user needs
- Users highlight a need for improved usability features in the software.
- Users express specific needs or requirements related to the software or their educational context.

47.
Concepts: seeking feedback, user experience feedback
- Seeking user feedback on features or functionalities.
- Seeking feedback on user experience or problems encountered.

48.
Concepts: user feedback request, suggestion solicitation
- Requesting feedback or suggestions from users.
- Soliciting suggestions or feedback from users.

49.
Concepts: provide feedback, user feedback and suggestions, suggestion and feedback
- Users provide suggestions or opinions about the software.
- Instances where users provide feedback or suggestions about the software.
- Users providing feedback or suggestions on features and improvements for the software.
- Users providing feedback or suggestions to improve the software.
- Users providing suggestions or feedback on the software's features or development direction.

50.
Concepts: encourage participation, encouragement of user feedback
- A designer encourages users to participate by providing suggestions or feedback.
- Instances where designers encourage users to provide suggestions or feedback.

51.
Concepts: encouraging feedback, encouraging interaction, feedback encouragement
- Encouraging users to provide feedback or suggestions.
- Encouraging user interaction and feedback for future development.

52.
Concepts: user input, invite user participation
- Seeking input or opinions from users.
- Inviting users to participate or provide input.

53.
Concepts: suggestion acceptance, agree to implement suggestion
- Developers accept or agree to suggestions made by users.
- Agreeing to implement a user's suggestion in a future update.

54.
Concepts: accept suggestion, acceptance of request
- A designer accepts a suggestion and plans to implement it.
- A designer acknowledges and agrees to implement a user request in a future update.

55.
Concepts: seeking input, inquiring user input for future iterations, designer inquiry
- Designers seeking input or suggestions from users.
- Designers inquire about user input for future iterations.
- Instances where designers seek input or clarification from users to better understand their needs.

56.
Concepts: elicit feedback, prompting user feedback, feedback solicitation
- A designer elicits feedback or suggestions from the community.
- A designer prompts users to provide feedback or suggestions.
- A designer solicits feedback or suggestions from users.

57.
Concepts: gather feedback, gather user input
- A designer gathers feedback on user experiences or issues.
- A designer gathers input or feedback from users.

58.
Concepts: acknowledge feedback, appreciation of feedback, designer acknowledgment
- A designer acknowledges receiving feedback or suggestions.
- A designer appreciates and acknowledges user feedback.
- A designer acknowledges a user's suggestion or feedback.

59.
Concepts: designer response, respond to user feedback
- Instances where designers respond to user feedback or suggestions.
- Instances where designers respond to user feedback or queries.
- A designer responds directly to user feedback or suggestions.

60.
Concepts: feedback loop, community feedback loop
- Processes where user feedback is solicited and incorporated into design decisions.
- The process of collecting, considering, and implementing user feedback.
- Instances where users provide feedback on the software and designers respond to it.

61.
Concepts: offering co-designing, co-designing with users
- Designers offering users the opportunity to co-design or provide input during the design process.
- Involving users in the design process, allowing them to contribute ideas and make decisions.

62.
Concepts: involving users, user involvement
- Instances where designers actively involve users in the design process.
- Instances where users are involved in the design process, either through feedback or testing.

63.
Concepts: engage in dialogue, user feedback and communication
- Users and designers engaging in a back-and-forth dialogue.
- Users providing feedback and engaging in communication with designers.

64.
Concepts: gather context, seeking context
- Designer gathers context about the user's environment.
- Designers seeking context or background information from users.
===
---
Definitions for each code (64 in total):
1.
Concepts: plan for feedback, opinion gathering
Relationship: Both involve pre-development activities aimed at collecting user input.
Criteria: Designers plan to gather feedback and opinions before starting new development.
Phrase: Planning feedback collection

2.
Concepts: consulting community, community consultation
Relationship: Both involve seeking input from the community.
Criteria: Designers or developers consult the community for feedback or opinions.
Phrase: Consulting the community

3.
Concepts: future feedback consultation, promise future consultation
Relationship: Both involve commitments to seek user input in the future.
Criteria: Developers promise to gather community feedback before starting new projects.
Phrase: Promising future consultation

4.
Concepts: technical support, technical support and guidance
Relationship: Both involve providing technical assistance.
Criteria: Designers or users provide technical support and guidance to address issues.
Phrase: Providing technical support

5.
Concepts: offer help, user support
Relationship: Both involve offering assistance to users.
Criteria: Designers offer help and support to users to facilitate effective product use.
Phrase: Offering user support

6.
Concepts: usage instruction, usage instructions
Relationship: Both involve providing directions on how to use features.
Criteria: Designers provide specific instructions for using features.
Phrase: Providing usage instructions

7.
Concepts: user guidance, feature guidance
Relationship: Both involve giving directions on using features.
Criteria: Designers provide guidance on using specific features.
Phrase: Offering feature guidance

8.
Concepts: feature explanation, introduce feature functions
Relationship: Both involve explaining how features work.
Criteria: Designers explain or introduce the functions of features.
Phrase: Explaining feature functions

9.
Concepts: feature stability, long-term stability
Relationship: Both involve discussing the reliability of features.
Criteria: Designers discuss the stability and long-term reliability of features.
Phrase: Discussing feature stability

10.
Concepts: explain functionality, component functionality
Relationship: Both involve detailing the functionalities of components.
Criteria: Designers explain the specific functionalities of components.
Phrase: Explaining component functionality

11.
Concepts: suggest simplification, feature simplification
Relationship: Both involve recommending simplifications.
Criteria: Designers suggest simplifying designs or features.
Phrase: Suggesting simplifications

12.
Concepts: design principles, explain design philosophy
Relationship: Both involve explaining the foundational ideas behind designs.
Criteria: Designers explain the principles and philosophy guiding the design.
Phrase: Explaining design principles

13.
Concepts: design rationale, development rationale
Relationship: Both involve providing reasons for design or development choices.
Criteria: Designers explain the rationale behind their design or development decisions.
Phrase: Providing design rationale

14.
Concepts: feature improvement, product improvement
Relationship: Both involve discussing enhancements.
Criteria: Developers discuss ways to improve features or the product.
Phrase: Discussing feature improvements

15.
Concepts: input methods, discuss input methods
Relationship: Both involve talking about data entry methods.
Criteria: Designers discuss methods of input for the software.
Phrase: Discussing input methods

16.
Concepts: feature discussion, feature development
Relationship: Both involve talking about aspects of features.
Criteria: Designers discuss various aspects of feature development.
Phrase: Discussing feature development

17.
Concepts: usability, usability discussion, software usability
Relationship: All involve talking about user-friendliness.
Criteria: Designers and users discuss the usability of the software and its features.
Phrase: Discussing usability

18.
Concepts: user reviews, user experience
Relationship: Both involve users sharing their opinions.
Criteria: Users provide reviews or share their experiences with the software.
Phrase: Sharing user experiences

19.
Concepts: context of use, usability and context of use
Relationship: Both involve discussing the usage environment.
Criteria: Users describe the contexts in which they use the software and its usability.
Phrase: Discussing context of use

20.
Concepts: highlight practicality, usability and practicality
Relationship: Both involve expressing the software's usefulness.
Criteria: Users comment on the practicality and ease of use of the software.
Phrase: Highlighting practicality

21.
Concepts: comparison to similar apps, comparison with other applications
Relationship: Both involve comparing the software to others.
Criteria: Users compare the software favorably to similar applications.
Phrase: Comparing to similar apps

22.
Concepts: comparative feedback, software comparison
Relationship: Both involve comparing the software.
Criteria: Users compare the software with others, highlighting its advantages or disadvantages.
Phrase: Providing comparative feedback

23.
Concepts: feature appreciation, appreciation of features, feature compliment
Relationship: All involve expressing positive opinions about features.
Criteria: Users express appreciation for specific features of the software.
Phrase: Appreciating features

24.
Concepts: positive, praise software, share positive feedback, positive feedback
Relationship: All involve expressing positive opinions about the software.
Criteria: Users provide positive feedback or praise the software.
Phrase: Praising the software

25.
Concepts: resolution, resource acknowledgement
Relationship: Both involve acknowledging receipt of something.
Criteria: Users acknowledge receipt of information or resources.
Phrase: Acknowledging receipt

26.
Concepts: acknowledge receipt, user acknowledgment
Relationship: Both involve users confirming receipt of information.
Criteria: Users acknowledge receipt or understanding of information.
Phrase: Acknowledging information

27.
Concepts: designer confirmation, confirmation/agreement of collaboration
Relationship: Both involve confirming plans or statements.
Criteria: Designers confirm statements or agree on collaboration plans.
Phrase: Confirming collaboration

28.
Concepts: agreement, understanding confirmation
Relationship: Both involve confirming understanding or agreement.
Criteria: Users or developers confirm understanding or agreement.
Phrase: Confirming agreement

29.
Concepts: affirm user point, confirm argument
Relationship: Both involve agreeing with a statement.
Criteria: Developers or users affirm or agree with each other's points or arguments.
Phrase: Affirming points

30.
Concepts: update confirmation, confirm update completion
Relationship: Both involve confirming updates.
Criteria: Users confirm that an update has been applied or completed.
Phrase: Confirming updates

31.
Concepts: confirmation, user confirmation
Relationship: Both involve confirming previous statements or actions.
Criteria: Users acknowledge or confirm previous statements or actions.
Phrase: Confirming statements

32.
Concepts: gratitude, express gratitude, gratitude and acknowledgment
Relationship: All involve expressing thanks or appreciation.
Criteria: Users and designers express gratitude or acknowledge contributions.
Phrase: Expressing gratitude

33.
Concepts: user appreciation, user interaction and gratitude
Relationship: Both involve users expressing thanks.
Criteria: Users express appreciation and interact positively with designers.
Phrase: Showing user appreciation

34.
Concepts: acknowledge help, acknowledge response
Relationship: Both involve acknowledging assistance.
Criteria: Users express gratitude for help or responses received.
Phrase: Acknowledging help

35.
Concepts: designer appreciation, recognition of effort, demonstrate appreciation, appreciate dedication
Relationship: All involve recognizing the efforts of designers.
Criteria: Users show appreciation for the dedication and efforts of designers.
Phrase: Appreciating designer efforts

36.
Concepts: appreciate support from users, community support
Relationship: Both involve valuing user support.
Criteria: Designers appreciate and acknowledge user support.
Phrase: Valuing user support

37.
Concepts: community responses, gratitude to the community
Relationship: Both involve community interactions.
Criteria: Community members respond with gratitude or acknowledgment.
Phrase: Responding with gratitude

38.
Concepts: greet community, greet the community
Relationship: Both involve welcoming the community.
Criteria: Users or designers greet the community.
Phrase: Greeting the community

39.
Concepts: user inquiry, request for information
Relationship: Both involve asking for information.
Criteria: Users inquire or request information about the software.
Phrase: Making inquiries

40.
Concepts: feature request, feature requests for physics experiments
Relationship: Both involve asking for new features.
Criteria: Users request new features or improvements related to physics experiments.
Phrase: Requesting features

41.
Concepts: suggest new feature, propose another feature
Relationship: Both involve proposing new functionalities.
Criteria: Users suggest or propose new features for the platform.
Phrase: Proposing new features

42.
Concepts: suggestions, feature suggestion, user suggestion, suggest improvements
Relationship: All involve making recommendations.
Criteria: Users or developers suggest specific features or improvements.
Phrase: Making suggestions

43.
Concepts: design suggestion, design/feature suggestion
Relationship: Both involve suggesting design changes.
Criteria: Users suggest design modifications or new functionalities.
Phrase: Suggesting design changes

44.
Concepts: reason for suggestion, explain reasons for the request
Relationship: Both involve providing reasons for suggestions.
Criteria: Users explain their reasons for suggesting features.
Phrase: Explaining suggestions

45.
Concepts: user requests, request specific features
Relationship: Both involve asking for specific features.
Criteria: Users request specific features or improvements.
Phrase: Making requests

46.
Concepts: usability needs, user needs
Relationship: Both involve expressing user requirements.
Criteria: Users highlight their needs for improved usability or specific features.
Phrase: Expressing needs

47.
Concepts: seeking feedback, user experience feedback
Relationship: Both involve looking for user opinions.
Criteria: Designers seek feedback on user experiences or issues.
Phrase: Seeking feedback

48.
Concepts: user feedback request, suggestion solicitation
Relationship: Both involve asking for user input.
Criteria: Designers request feedback or suggestions from users.
Phrase: Soliciting feedback

49.
Concepts: provide feedback, user feedback and suggestions, suggestion and feedback
Relationship: All involve giving opinions about the software.
Criteria: Users provide feedback or suggestions on features and improvements.
Phrase: Providing feedback

50.
Concepts: encourage participation, encouragement of user feedback
Relationship: Both involve motivating users to give input.
Criteria: Designers encourage users to participate by providing suggestions or feedback.
Phrase: Encouraging participation

51.
Concepts: encouraging feedback, encouraging interaction, feedback encouragement
Relationship: All involve prompting users to give feedback.
Criteria: Designers encourage users to provide feedback and interact.
Phrase: Encouraging feedback

52.
Concepts: user input, invite user participation
Relationship: Both involve seeking user contributions.
Criteria: Designers invite users to participate or provide input.
Phrase: Inviting participation

53.
Concepts: suggestion acceptance, agree to implement suggestion
Relationship: Both involve agreeing to user suggestions.
Criteria: Developers accept and agree to implement user suggestions.
Phrase: Accepting suggestions

54.
Concepts: accept suggestion, acceptance of request
Relationship: Both involve agreeing to user requests.
Criteria: Designers accept and plan to implement user requests.
Phrase: Accepting requests

55.
Concepts: seeking input, inquiring user input for future iterations, designer inquiry
Relationship: All involve seeking user opinions.
Criteria: Designers seek input or clarification from users for future iterations.
Phrase: Seeking input

56.
Concepts: elicit feedback, prompting user feedback, feedback solicitation
Relationship: All involve asking for user feedback.
Criteria: Designers elicit or prompt users to provide feedback.
Phrase: Soliciting feedback

57.
Concepts: gather feedback, gather user input
Relationship: Both involve collecting user opinions.
Criteria: Designers gather feedback or input from users.
Phrase: Gathering feedback

58.
Concepts: acknowledge feedback, appreciation of feedback, designer acknowledgment
Relationship: All involve recognizing user input.
Criteria: Designers acknowledge and appreciate user feedback.
Phrase: Acknowledging feedback

59.
Concepts: designer response, respond to user feedback
Relationship: Both involve replying to user input.
Criteria: Designers respond to user feedback or suggestions.
Phrase: Responding to feedback

60.
Concepts: feedback loop, community feedback loop
Relationship: Both involve iterative feedback processes.
Criteria: Designers collect, consider, and implement user feedback in a continuous loop.
Phrase: Creating feedback loops

61.
Concepts: offering co-designing, co-designing with users
Relationship: Both involve collaborative design efforts.
Criteria: Designers offer users the opportunity to co-design and contribute ideas.
Phrase: Offering co-design opportunities

62.
Concepts: involving users, user involvement
Relationship: Both involve user participation in the design process.
Criteria: Designers actively involve users in the design process through feedback or testing.
Phrase: Involving users

63.
Concepts: engage in dialogue, user feedback and communication
Relationship: Both involve interactive communication.
Criteria: Users and designers engage in back-and-forth dialogue and feedback.
Phrase: Engaging in dialogue

64.
Concepts: gather context, seeking context
Relationship: Both involve understanding user environments.
Criteria: Designers gather context or background information from users.
Phrase: Seeking context
---