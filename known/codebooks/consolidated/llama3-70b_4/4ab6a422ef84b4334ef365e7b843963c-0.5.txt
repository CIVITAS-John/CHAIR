You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: acknowledge limitations, talk about why limitation is addressable
- The designer acknowledges limitations or difficulties in Physics Lab development or functionality.
- A user or designer recognizes the limitations or flaws in their previous statement.
- The designer explains why limitations or difficulties in Physics Lab development are addressable.

2.
Concepts: system limitations, stating system limitations
- Stating why a solution cannot be implemented due to system constraints.
- Designer states a limitation or incompatibility of the software with a specific system or platform.

3.
Concepts: limitations, software limitations
- Highlighting limitations or constraints of the software or environment
- Statements that explain or acknowledge limitations or constraints of the software.
- A designer explains the current limitations or constraints of the software.

4.
Concepts: clarifying design constraints, providing context for design constraints, explaining design limitations, explaining design constraints
- Designer explains or clarifies constraints or limitations.
- Providing context or explanation for design constraints or limitations.
- Explaining limitations or constraints of a feature or design.
- Explaining reasons or constraints behind a specific design choice or limitation.

5.
Concepts: technical limitations, technical constraint discussion
- User or designer mentions technical limitations or constraints.
- Discussions about potential technical limitations or workarounds.
- A user or designer discusses technical limitations or constraints.

6.
Concepts: describing constraints, highlight technical constraints
- Users or designers describe limitations or constraints that affect the use of the software or computers.
- A user or designer highlights technical constraints or limitations that affect the use of the software.

7.
Concepts: limitation explanation, explaining feature purpose or limitations, clarifying software limitations
- A developer explains limitations or constraints of a feature or functionality.
- A designer explains the purpose or limitations of a specific feature or version.
- Designer clarifies software limitations, explaining the current state of a feature.

8.
Concepts: explaining limitations, explaining system limitations, describing limitations
- Designer explains the limitations or constraints of the platform.
- Explaining limitations or constraints in a particular area
- The designer explains limitations or constraints of the system or technology.
- A designer describes limitations or constraints of a feature or functionality.

9.
Concepts: solution limitations, highlighting software constraints, addressing limitations
- A designer mentions limitations or constraints of the software or solution.
- The designer highlights or explains limitations or constraints of the software.
- The designer addresses or acknowledges limitations or constraints of the software.

10.
Concepts: explaining common school policy, explaining institutional policies
- Users explain common school policies or restrictions that affect Physics Lab usage.
- Explaining or discussing institutional policies, rules, or restrictions that affect the use of Physics Lab.

11.
Concepts: school policy sharing, explaining school policy
- Sharing information about school policies or restrictions.
- User explains school policies or restrictions.

12.
Concepts: sharing institutional constraints, describing institutional limitations
- User shares constraints or limitations imposed by their institution.
- A user expresses limitations or constraints imposed by their institution or school.

13.
Concepts: classroom limitations, elaborating on classroom technology limitations
- A user explains limitations in the classroom.
- A user explains limitations or constraints in classroom technology.

14.
Concepts: sharing school context, describing school context
- User shares information about their school's computer system.
- User provides information about school resources or infrastructure.
- User describes their school's computer system.

15.
Concepts: technical frustration, expressing frustration with platform limitations
- Designer expresses frustration with current limitations or technical issues.
- Designer expresses frustration or limitations due to platform restrictions or constraints.

16.
Concepts: expressing hesitation, tacit disagreement
- A designer expresses hesitation or uncertainty about a feature or decision.
- A designer is expressing tacit disagreement or hesitation about a particular idea or feature.

17.
Concepts: explaining complexity, mentioning complexity, explaining development complexity
- The designer explains the complexity of a specific task or feature.
- A designer mentions the complexity of an upcoming release or feature.
- Designer explains the complexity or difficulty of a development task.

18.
Concepts: highlighting challenges, highlighting ui challenges
- User or designer mentions challenges or obstacles.
- The designer highlights or discusses challenges or difficulties in the user interface.

19.
Concepts: identifying potential issues, identifying areas for improvement
- Designer identifies potential issues or problems with the design.
- The designer identifies areas or features that need improvement or development.

20.
Concepts: discussing development needs, identifying development needs
- A designer discusses the need for a specific feature or support.
- A designer suggests or identifies the need for a specific feature or support.

21.
Concepts: identifying gaps, identifying product gaps
- A user identifies a gap or limitation in existing tools or resources.
- A user identifies a gap or limitation in the current software or product.

22.
Concepts: describing workarounds, illustrating technical workaround, explaining technical workarounds
- A designer describes workarounds or alternative solutions to a problem.
- The designer shares a technical workaround or trick to overcome a specific issue.
- A designer provides a technical workaround or solution to a problem or limitation.

23.
Concepts: share workaround, sharing workaround, sharing workarounds
- A user shares a workaround or a tip to overcome a technical issue.
- The designer shares a workaround or solution to a technical issue.
- A designer shares a workaround for accessing a feature or functionality.

24.
Concepts: offering temporary solutions, providing temporary solution
- Providing a temporary solution or workaround to a problem.
- A designer provides a temporary solution or workaround for a user's issue.

25.
Concepts: offering workarounds, offering alternative solutions
- Offering alternative solutions or workarounds for issues.
- Offering alternative solutions or workarounds.

26.
Concepts: exploring workarounds, seeking alternative solutions
- Exploring or discussing workarounds or alternative solutions.
- Exploring alternative solutions or workarounds.

27.
Concepts: self-answer, self-resolving issues
- A user answers their own question or provides a solution to their own problem.
- A user resolves their own issue or question without needing further assistance.

28.
Concepts: demonstrating self-reliance, self-reliance and problem-solving
- User demonstrates self-reliance by taking initiative or finding solutions independently.
- A user demonstrates self-reliance and problem-solving skills in their response or approach.

29.
Concepts: alternative solutions, alternative suggestion, offering alternative, suggesting alternatives
- User suggests an alternative solution or approach.
- A user provides an alternative suggestion or solution.
- A designer or user offers an alternative solution or approach.
- User suggests alternative solutions or approaches.

30.
Concepts: suggesting alternative approaches, suggesting alternative design approaches, alternative design suggestions
- Suggesting alternative approaches or solutions.
- Suggesting alternative design approaches or methods.
- Suggesting alternative designs or approaches for specific scenarios.

31.
Concepts: exploring solutions, exploring alternatives
- Designer explores possible solutions or alternatives.
- Designer proposes considering multiple solutions to a problem.

32.
Concepts: suggesting solutions, proposing potential solutions
- Suggesting or proposing a potential solution or idea.
- Suggesting a potential solution or approach to a problem or feature.
===
Here are the definitions for each code:

---
1.
Concepts: acknowledge limitations, talk about why limitation is addressable
Relationship: The concepts are related in that they both involve acknowledging limitations, but the second concept provides a reason why the limitation can be addressed.
Criteria: Designers acknowledge limitations and provide explanations for why they can be addressed.
Phrase: Acknowledge and address limitations.

2.
Concepts: system limitations, stating system limitations
Relationship: The concepts are related in that they both involve stating limitations of a system.
Criteria: Designers state limitations of a system or platform.
Phrase: State system limitations.

3.
Concepts: limitations, software limitations
Relationship: The concepts are related in that they both involve highlighting limitations of software or an environment.
Criteria: Designers highlight limitations or constraints of software or an environment.
Phrase: Highlight software limitations.

4.
Concepts: clarifying design constraints, providing context for design constraints, explaining design limitations, explaining design constraints
Relationship: The concepts are related in that they all involve explaining or clarifying design constraints or limitations.
Criteria: Designers explain or clarify design constraints or limitations.
Phrase: Clarify design constraints.

5.
Concepts: technical limitations, technical constraint discussion
Relationship: The concepts are related in that they both involve discussing technical limitations or constraints.
Criteria: Users or designers discuss technical limitations or constraints.
Phrase: Discuss technical limitations.

6.
Concepts: describing constraints, highlight technical constraints
Relationship: The concepts are related in that they both involve describing or highlighting technical constraints.
Criteria: Users or designers describe or highlight technical constraints.
Phrase: Highlight technical constraints.

7.
Concepts: limitation explanation, explaining feature purpose or limitations, clarifying software limitations
Relationship: The concepts are related in that they all involve explaining limitations or constraints of a feature or software.
Criteria: Designers explain limitations or constraints of a feature or software.
Phrase: Explain software limitations.

8.
Concepts: explaining limitations, explaining system limitations, describing limitations
Relationship: The concepts are related in that they all involve explaining or describing limitations or constraints.
Criteria: Designers explain or describe limitations or constraints of a system or technology.
Phrase: Explain system limitations.

9.
Concepts: solution limitations, highlighting software constraints, addressing limitations
Relationship: The concepts are related in that they all involve addressing or highlighting limitations or constraints of a solution or software.
Criteria: Designers address or highlight limitations or constraints of a solution or software.
Phrase: Address solution limitations.

10.
Concepts: explaining common school policy, explaining institutional policies
Relationship: The concepts are related in that they both involve explaining policies or restrictions.
Criteria: Users explain common school policies or institutional policies that affect Physics Lab usage.
Phrase: Explain school policies.

11.
Concepts: school policy sharing, explaining school policy
Relationship: The concepts are related in that they both involve sharing or explaining school policies.
Criteria: Users share or explain school policies or restrictions.
Phrase: Share school policies.

12.
Concepts: sharing institutional constraints, describing institutional limitations
Relationship: The concepts are related in that they both involve sharing or describing institutional constraints or limitations.
Criteria: Users share or describe institutional constraints or limitations.
Phrase: Share institutional constraints.

13.
Concepts: classroom limitations, elaborating on classroom technology limitations
Relationship: The concepts are related in that they both involve explaining limitations in the classroom.
Criteria: Users explain limitations in the classroom or classroom technology.
Phrase: Explain classroom limitations.

14.
Concepts: sharing school context, describing school context
Relationship: The concepts are related in that they both involve sharing or describing school context or resources.
Criteria: Users share or describe school context or resources.
Phrase: Share school context.

15.
Concepts: technical frustration, expressing frustration with platform limitations
Relationship: The concepts are related in that they both involve expressing frustration with technical limitations.
Criteria: Designers express frustration with platform limitations or technical issues.
Phrase: Express technical frustration.

16.
Concepts: expressing hesitation, tacit disagreement
Relationship: The concepts are related in that they both involve expressing uncertainty or disagreement.
Criteria: Designers express hesitation or tacit disagreement about a feature or decision.
Phrase: Express hesitation.

17.
Concepts: explaining complexity, mentioning complexity, explaining development complexity
Relationship: The concepts are related in that they all involve explaining complexity or difficulty.
Criteria: Designers explain complexity or difficulty of a task or feature.
Phrase: Explain complexity.

18.
Concepts: highlighting challenges, highlighting ui challenges
Relationship: The concepts are related in that they both involve highlighting challenges or obstacles.
Criteria: Users or designers highlight challenges or difficulties in the user interface.
Phrase: Highlight challenges.

19.
Concepts: identifying potential issues, identifying areas for improvement
Relationship: The concepts are related in that they both involve identifying areas that need improvement.
Criteria: Designers identify potential issues or areas that need improvement.
Phrase: Identify areas for improvement.

20.
Concepts: discussing development needs, identifying development needs
Relationship: The concepts are related in that they both involve discussing or identifying needs for development.
Criteria: Designers discuss or identify needs for development or support.
Phrase: Identify development needs.

21.
Concepts: identifying gaps, identifying product gaps
Relationship: The concepts are related in that they both involve identifying gaps or limitations.
Criteria: Users identify gaps or limitations in existing tools or resources.
Phrase: Identify gaps.

22.
Concepts: describing workarounds, illustrating technical workaround, explaining technical workarounds
Relationship: The concepts are related in that they all involve describing or explaining workarounds.
Criteria: Designers describe or explain workarounds or alternative solutions.
Phrase: Describe workarounds.

23.
Concepts: share workaround, sharing workaround, sharing workarounds
Relationship: The concepts are related in that they all involve sharing workarounds or solutions.
Criteria: Users or designers share workarounds or solutions to technical issues.
Phrase: Share workarounds.

24.
Concepts: offering temporary solutions, providing temporary solution
Relationship: The concepts are related in that they both involve providing temporary solutions.
Criteria: Designers provide temporary solutions or workarounds to problems.
Phrase: Offer temporary solutions.

25.
Concepts: offering workarounds, offering alternative solutions
Relationship: The concepts are related in that they both involve offering alternative solutions or workarounds.
Criteria: Designers offer alternative solutions or workarounds to issues.
Phrase: Offer workarounds.

26.
Concepts: exploring workarounds, seeking alternative solutions
Relationship: The concepts are related in that they both involve exploring or seeking alternative solutions.
Criteria: Designers explore or seek alternative solutions or workarounds.
Phrase: Explore workarounds.

27.
Concepts: self-answer, self-resolving issues
Relationship: The concepts are related in that they both involve users resolving their own issues.
Criteria: Users answer their own questions or resolve their own issues.
Phrase: Resolve own issues.

28.
Concepts: demonstrating self-reliance, self-reliance and problem-solving
Relationship: The concepts are related in that they both involve demonstrating self-reliance and problem-solving skills.
Criteria: Users demonstrate self-reliance and problem-solving skills in their responses or approaches.
Phrase: Demonstrate self-reliance.

29.
Concepts: alternative solutions, alternative suggestion, offering alternative, suggesting alternatives
Relationship: The concepts are related in that they all involve suggesting or offering alternative solutions.
Criteria: Users suggest or offer alternative solutions or approaches.
Phrase: Suggest alternatives.

30.
Concepts: suggesting alternative approaches, suggesting alternative design approaches, alternative design suggestions
Relationship: The concepts are related in that they all involve suggesting alternative approaches or designs.
Criteria: Designers suggest alternative approaches or design methods.
Phrase: Suggest alternative approaches.

31.
Concepts: exploring solutions, exploring alternatives
Relationship: The concepts are related in that they both involve exploring alternative solutions or approaches.
Criteria: Designers explore alternative solutions or approaches.
Phrase: Explore solutions.

32.
Concepts: suggesting solutions, proposing potential solutions
Relationship: The concepts are related in that they both involve suggesting or proposing solutions.
Criteria: Designers suggest or propose potential solutions or ideas.
Phrase: Suggest solutions.