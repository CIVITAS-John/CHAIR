You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: explained testing phase, inform about testing phase
- A person explains or describes a testing phase or process.
- A designer provides information about a testing phase and offers guidance on manual adjustments.

2.
Concepts: providing technical information, providing context for software use
- Designer provides technical information about the software.
- The designer provides context or background information about the software or its development.

3.
Concepts: process explanation, clarifying procedures
- Explaining a process or procedure.
- Explaining or clarifying processes or procedures.

4.
Concepts: system explanation, providing explanations
- Designer explains system capabilities.
- Designer explains simulations or provides explanations.

5.
Concepts: explaining the review process, explains development process
- Designers explain or clarify the review process.
- The designer explains or shares development process insights.

6.
Concepts: facilitating learning, ensuring user understanding
- Facilitating learning or understanding through a tool or feature
- Ensuring or facilitating the user's understanding of a concept or feature.

7.
Concepts: demonstrated understanding, demonstrate physics understanding
- A person explains or clarifies a concept or mechanism.
- Users demonstrate physics knowledge or understanding.

8.
Concepts: clarifying device functionality, clarifying platform requirements
- Clarifying functionality or features of a specific device or platform
- Clarifying the technical requirements or limitations of a platform.

9.
Concepts: clarifying feature functionality, explains feature purpose
- Designer clarifies the existence or functionality of a feature.
- Designers explain the purpose or limitations of a specific feature or version, explaining feature functionality.

10.
Concepts: theorizing about compatibility, theoretical software compatibility requirements
- Designer theorizes about compatibility and explains theoretical aspects.
- The designer mentions the theoretical compatibility requirements for the software.

11.
Concepts: confirming compatibility, addressing compatibility issues, informing about compatibility
- Designer confirms compatibility or functionality of a feature.
- Designer addresses compatibility issues with the software.
- Designer informs about system compatibility or provides information.

12.
Concepts: consider future compatibility, discussing system compatibility
- Designer considers compatibility with future systems or platforms.
- Designer discusses and considers compatibility with older systems or devices.

13.
Concepts: adapts to user constraints, considering user context and limitations
- Designer adapts to user constraints or limitations.
- Designer considers the user's context and limitations.

14.
Concepts: consider implementation context, considers development constraints, considering practical constraints
- Designer considers the context of implementation.
- Designer considers limitations or constraints in the software development process.
- Designer considers practical constraints and implementation feasibility.

15.
Concepts: clarifying system requirements, providing technical limitations
- Designer clarifies system requirements or limitations (XP system).
- Designer provides technical limitations or constraints (XP system).

16.
Concepts: setting technical expectations, discussing technical requirements, considering technical requirements
- Designer sets technical expectations and provides guidance on compatibility.
- Designer discusses technical requirements and explains constraints.
- The designer considers the technical requirements for the software.

17.
Concepts: design principles, design philosophy
- Discussing design principles or philosophies.
- The designer explains their design philosophy or approach.

18.
Concepts: explaining intention, explaining app design intention
- Designer explains the intention or purpose behind a follow-up question or action.
- Designer explains the intention or design philosophy behind the app.

19.
Concepts: reflecting on past experiences, demonstrating reflective thinking
- Designer references or reflects on past experiences.
- The designer reflects on their own thought process or decision-making.

20.
Concepts: concern about memory, acknowledging memory limitations
- Designers express concern about memory or remembering specific details.
- The designer acknowledges limitations or constraints in their memory or ability to recall information.

21.
Concepts: recognizing offline needs, considering offline functionality
- Recognizing the need for offline functionality or accessibility.
- Designer considers potential offline functionality.

22.
Concepts: explaining the need, provide rationale
- The designer explains the necessity or justification for a particular action or decision.
- Users or designers explain the rationale behind a decision or action, justifying design decisions or rationales.

23.
Concepts: acknowledging need, discussing features
- Designer acknowledges need for specific features or functionality.
- A designer discusses the need for a specific feature or functionality.

24.
Concepts: justifying feature development, justification for foundational features
- The designer justifies the development of a particular feature.
- Designer justifies the focus on foundational features or core functionality.

25.
Concepts: considering multiple scenarios, considering diverse hardware environments
- Considering multiple use cases, environments, or hardware configurations.
- Users consider or discuss diverse hardware environments or requirements.

26.
Concepts: acknowledging user diversity, acknowledging diverse user needs, considering diverse user environments
- Recognizing or considering the diverse environments or setups of users.
- Designer mentions considering diverse user needs in the future.
- The designer considers the possibility of different user environments and their potential impact on the software.

27.
Concepts: technical confirmation, suggesting system compatibility
- A user mentions that a specific system or configuration should work fine.
- User suggests that a particular system (e.g. Win7) should be fine.

28.
Concepts: mentioning hardware needs, outlining hardware requirements
- User references specific hardware requirements
- Designer specifies hardware requirements

29.
Concepts: clarifying technical details, informing about touch screens
- Designer clarifies technical details about touch screen functionality.
- Designer informs users about the tool's compatibility or functionality on touch screens.

30.
Concepts: touch screen capabilities, touch screen feature, highlight touch screen usage
- Designer references the capabilities of touch screens.
- A designer mentions a specific feature or characteristic of touch screens in the Physics Lab's online community.
- A user highlights the importance of touch screen functionality or compatibility.

31.
Concepts: suggest expansion, exploring software functionality
- A user suggests or demonstrates potential expansion or exploration of the software's capabilities.
- User explores or inquires about software functionality.

32.
Concepts: exploring usability, exploring alternative interfaces
- Designers explore usability, considering user experience and interface.
- A user or designer explores alternative interfaces or modes of interaction.
===
Here are the definitions for each code:

---
1.
Concepts: explained testing phase, inform about testing phase
Relationship: The concepts are related as they both involve providing information about a testing phase.
Criteria: A person explains or describes a testing phase or process, providing information and guidance on manual adjustments.
Phrase: Explaining testing phases.

2.
Concepts: providing technical information, providing context for software use
Relationship: The concepts are related as they both involve providing information about the software.
Criteria: A designer provides technical information about the software, offering context or background information about its development.
Phrase: Providing software context.

3.
Concepts: process explanation, clarifying procedures
Relationship: The concepts are related as they both involve explaining or clarifying processes or procedures.
Criteria: A person explains a process or procedure, clarifying steps or methods.
Phrase: Explaining procedures.

4.
Concepts: system explanation, providing explanations
Relationship: The concepts are related as they both involve explaining system capabilities or simulations.
Criteria: A designer explains system capabilities, providing explanations or clarifications.
Phrase: Explaining system capabilities.

5.
Concepts: explaining the review process, explains development process
Relationship: The concepts are related as they both involve explaining processes related to software development.
Criteria: Designers explain or clarify the review process, sharing development process insights.
Phrase: Explaining development processes.

6.
Concepts: facilitating learning, ensuring user understanding
Relationship: The concepts are related as they both involve facilitating or ensuring user understanding.
Criteria: A person facilitates learning or understanding through a tool or feature, ensuring the user's comprehension.
Phrase: Facilitating user understanding.

7.
Concepts: demonstrated understanding, demonstrate physics understanding
Relationship: The concepts are related as they both involve demonstrating knowledge or understanding.
Criteria: A person explains or clarifies a concept or mechanism, demonstrating physics knowledge or understanding.
Phrase: Demonstrating physics understanding.

8.
Concepts: clarifying device functionality, clarifying platform requirements
Relationship: The concepts are related as they both involve clarifying technical aspects of devices or platforms.
Criteria: A person clarifies functionality or features of a specific device or platform, explaining technical requirements or limitations.
Phrase: Clarifying technical requirements.

9.
Concepts: clarifying feature functionality, explains feature purpose
Relationship: The concepts are related as they both involve explaining features or their purposes.
Criteria: A designer clarifies the existence or functionality of a feature, explaining its purpose or limitations.
Phrase: Explaining feature functionality.

10.
Concepts: theorizing about compatibility, theoretical software compatibility requirements
Relationship: The concepts are related as they both involve discussing theoretical aspects of compatibility.
Criteria: A designer theorizes about compatibility, explaining theoretical aspects or requirements for the software.
Phrase: Theorizing about compatibility.

11.
Concepts: confirming compatibility, addressing compatibility issues, informing about compatibility
Relationship: The concepts are related as they all involve dealing with compatibility issues.
Criteria: A designer confirms compatibility or functionality of a feature, addressing issues or informing about system compatibility.
Phrase: Addressing compatibility issues.

12.
Concepts: consider future compatibility, discussing system compatibility
Relationship: The concepts are related as they both involve considering compatibility with different systems or platforms.
Criteria: A designer considers compatibility with future systems or platforms, discussing and considering compatibility with older systems or devices.
Phrase: Considering system compatibility.

13.
Concepts: adapts to user constraints, considering user context and limitations
Relationship: The concepts are related as they both involve adapting to or considering user limitations.
Criteria: A designer adapts to user constraints or limitations, considering the user's context and limitations.
Phrase: Adapting to user constraints.

14.
Concepts: consider implementation context, considers development constraints, considering practical constraints
Relationship: The concepts are related as they all involve considering constraints or limitations in development.
Criteria: A designer considers the context of implementation, considering limitations or constraints in the software development process, and practical constraints and implementation feasibility.
Phrase: Considering implementation constraints.

15.
Concepts: clarifying system requirements, providing technical limitations
Relationship: The concepts are related as they both involve providing information about system requirements or limitations.
Criteria: A designer clarifies system requirements or limitations, providing technical limitations or constraints.
Phrase: Clarifying system requirements.

16.
Concepts: setting technical expectations, discussing technical requirements, considering technical requirements
Relationship: The concepts are related as they all involve discussing or considering technical requirements.
Criteria: A designer sets technical expectations, discussing technical requirements and explaining constraints, and considers the technical requirements for the software.
Phrase: Discussing technical requirements.

17.
Concepts: design principles, design philosophy
Relationship: The concepts are related as they both involve discussing design approaches or philosophies.
Criteria: A designer discusses design principles or philosophies, explaining their design approach or philosophy.
Phrase: Discussing design principles.

18.
Concepts: explaining intention, explaining app design intention
Relationship: The concepts are related as they both involve explaining intentions or purposes behind design decisions.
Criteria: A designer explains the intention or purpose behind a follow-up question or action, explaining the intention or design philosophy behind the app.
Phrase: Explaining design intentions.

19.
Concepts: reflecting on past experiences, demonstrating reflective thinking
Relationship: The concepts are related as they both involve reflecting on past experiences or thinking processes.
Criteria: A designer references or reflects on past experiences, reflecting on their own thought process or decision-making.
Phrase: Reflecting on experiences.

20.
Concepts: concern about memory, acknowledging memory limitations
Relationship: The concepts are related as they both involve acknowledging or expressing concerns about memory limitations.
Criteria: A designer expresses concern about memory or remembering specific details, acknowledging limitations or constraints in their memory or ability to recall information.
Phrase: Acknowledging memory limitations.

21.
Concepts: recognizing offline needs, considering offline functionality
Relationship: The concepts are related as they both involve recognizing or considering the need for offline functionality.
Criteria: A person recognizes the need for offline functionality or accessibility, considering potential offline functionality.
Phrase: Recognizing offline needs.

22.
Concepts: explaining the need, provide rationale
Relationship: The concepts are related as they both involve explaining or justifying decisions or actions.
Criteria: A designer explains the necessity or justification for a particular action or decision, providing a rationale or justification.
Phrase: Explaining rationales.

23.
Concepts: acknowledging need, discussing features
Relationship: The concepts are related as they both involve acknowledging or discussing needs for specific features or functionality.
Criteria: A designer acknowledges need for specific features or functionality, discussing the need for a specific feature or functionality.
Phrase: Acknowledging feature needs.

24.
Concepts: justifying feature development, justification for foundational features
Relationship: The concepts are related as they both involve justifying the development of features.
Criteria: A designer justifies the development of a particular feature, justifying the focus on foundational features or core functionality.
Phrase: Justifying feature development.

25.
Concepts: considering multiple scenarios, considering diverse hardware environments
Relationship: The concepts are related as they both involve considering different scenarios or environments.
Criteria: A person considers multiple use cases, environments, or hardware configurations, discussing the need for diverse hardware environments or requirements.
Phrase: Considering diverse scenarios.

26.
Concepts: acknowledging user diversity, acknowledging diverse user needs, considering diverse user environments
Relationship: The concepts are related as they all involve acknowledging or considering user diversity.
Criteria: A designer recognizes or considers the diverse environments or setups of users, mentioning considering diverse user needs in the future, and considering the possibility of different user environments and their potential impact on the software.
Phrase: Acknowledging user diversity.

27.
Concepts: technical confirmation, suggesting system compatibility
Relationship: The concepts are related as they both involve confirming or suggesting technical aspects of compatibility.
Criteria: A user mentions that a specific system or configuration should work fine, suggesting that a particular system should be compatible.
Phrase: Confirming technical compatibility.

28.
Concepts: mentioning hardware needs, outlining hardware requirements
Relationship: The concepts are related as they both involve discussing hardware requirements.
Criteria: A user references specific hardware requirements, specifying hardware needs or outlining requirements.
Phrase: Outlining hardware requirements.

29.
Concepts: clarifying technical details, informing about touch screens
Relationship: The concepts are related as they both involve providing information about technical aspects of touch screens.
Criteria: A designer clarifies technical details about touch screen functionality, informing users about the tool's compatibility or functionality on touch screens.
Phrase: Clarifying touch screen details.

30.
Concepts: touch screen capabilities, touch screen feature, highlight touch screen usage
Relationship: The concepts are related as they all involve discussing touch screen capabilities or features.
Criteria: A designer references the capabilities of touch screens, mentioning a specific feature or characteristic of touch screens, and highlighting the importance of touch screen functionality or compatibility.
Phrase: Discussing touch screen capabilities.

31.
Concepts: suggest expansion, exploring software functionality
Relationship: The concepts are related as they both involve exploring or suggesting new possibilities for software functionality.
Criteria: A user suggests or demonstrates potential expansion or exploration of the software's capabilities, exploring or inquiring about software functionality.
Phrase: Exploring software functionality.

32.
Concepts: exploring usability, exploring alternative interfaces
Relationship: The concepts are related as they both involve exploring or considering different aspects of user experience.
Criteria: Designers explore usability, considering user experience and interface, and explore alternative interfaces or modes of interaction.
Phrase: Exploring usability.

Let me know if you need any further assistance!