You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (31 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
31. 
Concepts: {Repeat the input 31}
Relationship: {What is logical relationship between concepts in code 31, or N/A if not applicable}
Criteria: {Who did what, and how for code 31}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: notes ai's input limitations, limitations (large dataset)
- Participants note the limitations of AI in handling large code pieces.
- The participant encounters limitations with AI, such as handling large datasets or code pieces.

2.
Concepts: rely on ai code due to time constraints, human-ai: completely rely on ai due to situations
- Participants use AI-generated code when facing time constraints.
- Relies completely on AI-generated code due to time constraints

3.
Concepts: face version issues with netlogo, encounters outdated functionalities
- Participants face version issues with NetLogo.
- The participant encounters outdated functionalities or versions of NetLogo.

4.
Concepts: augments human capabilities, aims to augment human capabilities
- Envisions AI-driven interfaces augmenting human capabilities and judgment.
- Aims to augment human capabilities and judgment rather than replace them.

5.
Concepts: values human judgment, emphasizes human judgment, emphasizes human-ai augmentation
- Emphasizes the importance of human judgment and ability in conjunction with AI.
- Emphasizes the importance of augmenting human judgment with AI.
- Emphasizes the importance of augmenting human capabilities and judgment with AI.

6.
Concepts: saves time, describes ai efficiency
- Perceives LLM-driven interfaces as time-saving tools.
- Highlights the ability of AI to save time and increase productivity.
- The user describes the efficiency or time-saving benefits of using LLM-driven interfaces.

7.
Concepts: envisions ai roles, advocates for peer programming
- Envisions AI playing a role in peer programming and collaborative work.
- Advocates for peer programming and suggests that AI could play a role in it.

8.
Concepts: ai as a peer, views ai as a collaborative partner
- The expert views AI as a peer or partner in the coding process.
- The user views AI as a collaborative partner in the coding and learning process.

9.
Concepts: ai utility, finds ai helpful
- The participant perceives the utility or usefulness of AI in supporting their work.
- Participants find AI helpful in supporting their work.

10.
Concepts: finds explanations clear, appreciates clear ai responses
- Participants find AI-generated explanations clear and easy to understand.
- Participants appreciate clear and comprehensible AI responses.

11.
Concepts: describes as easy, finds interface straightforward
- Participants describe the ease of use and understanding of LLM-driven interfaces.
- Participants find the interface straightforward and intuitive to use.

12.
Concepts: appreciates timely feedback, values immediate feedback
- Participants appreciate the timely feedback provided by the AI.
- Participants value the immediate feedback provided by the LLM-driven interface.

13.
Concepts: equation development, use ai for equation development
- The participant uses the LLM-driven interface to develop equations for agent-based models.
- Participants use AI for equation development in agent-based models.

14.
Concepts: uses ai for netlogo, translates models
- Uses AI for NetLogo-related tasks, such as translating models.
- Finds AI helpful for translating models from other languages into NetLogo.

15.
Concepts: ai experimentation, experiments with ai queries
- Experiments with AI to see its capabilities and limitations.
- Experiments with different search phrases to test AI's capabilities.

16.
Concepts: task refinement, refines prompts
- Refines task descriptions to get more accurate AI responses.
- Refines task details in response to AI's questions or prompts.

17.
Concepts: emphasizes iterative questioning, emphasizes asking the right questions
- Participants emphasize the importance of asking iterative questions to get desired AI outputs.
- Participants emphasize the importance of asking the right questions to get desired AI outputs.

18.
Concepts: ai effectiveness, suggests effective ai use
- The participant discusses the effectiveness of AI, such as the importance of asking iterative questions to maximize its capability.
- Participants believe that knowing how to ask iterative questions leads to effective AI use.

19.
Concepts: use ai-generated code as reference, refer to the generated code or get a reference
- Participants use AI-generated code as a reference.
- The participant refers to generated code or uses it as a reference.

20.
Concepts: ai-generated code, customize ai-generated code
- Participant interacts with AI-generated code.
- Participants customize AI-generated code.

21.
Concepts: use ai for code optimization, highlight ai's optimization ability
- Participants see AI as a tool for code optimization.
- Participants highlight AI's ability to optimize code.

22.
Concepts: evaluates ai comparison, compare ai-generated code with own code
- Compares AI-generated code with human-written code
- Participants compare AI-generated code with their own code.

23.
Concepts: reads in detail, interprets ai code
- Reads and evaluates AI-generated code in detail
- Reads and evaluates AI-generated code.

24.
Concepts: appreciation for annotated code, appreciate ai code commenting
- Appreciates AI-generated code with annotations.
- Participants appreciate AI-generated code commenting and documentation.

25.
Concepts: documentation search, appreciates in-task documentation search
- The participant values the capability to search for documentation and read it within the workspace.
- The user appreciates the capability of AI to search for documentation and read it inside the workspace.

26.
Concepts: share debugging experiences, experience debugging challenges
- Participants share debugging experiences.
- Participants experience debugging challenges.

27.
Concepts: values ai's debugging ability, values learning from ai
- The user values AI's ability to detect errors.
- The user values learning from AI and recognizes the benefits of iterative debugging.

28.
Concepts: acknowledges ai's errors, describes iterative debugging benefits
- Acknowledges that AI may make errors, but users can still benefit from the iterative debugging process.
- The user benefits from the iterative debugging process with the AI, even when the AI provides incorrect answers.

29.
Concepts: fixes errors manually, manually fixes ai code errors
- The user fixes errors or issues in AI-generated code manually.
- The participant manually fixes errors in AI-generated code rather than asking for explanations.

30.
Concepts: collaborates with ai
- Sees AI as a potential assistant for coding tasks and debugging.
- Imagines AI as a collaborative partner for coding tasks.
- Envisions a human-AI collaborative system that preserves, processes, and retrieves fragmented knowledge.

31.
Concepts: supports learning
- Sees the potential for AI to save time and support learning new extensions of NetLogo.
- Expresses the need for AI to help find a good starting point for learning.
===
Here are the definitions for each code:

---
1.
Concepts: notes ai's input limitations, limitations (large dataset)
Relationship: The concepts are related in that they both describe the limitations of AI in handling large datasets or code pieces.
Criteria: Participants identify the limitations of AI in handling large datasets or code pieces.
Phrase: Notes AI's input limitations.

2.
Concepts: rely on ai code due to time constraints, human-ai: completely rely on ai due to situations
Relationship: The concepts are related in that they both describe the reliance on AI-generated code due to time constraints.
Criteria: Participants rely on AI-generated code due to time constraints.
Phrase: Relies on AI code due to time constraints.

3.
Concepts: face version issues with netlogo, encounters outdated functionalities
Relationship: The concepts are related in that they both describe the issues with NetLogo versions or functionalities.
Criteria: Participants encounter version issues or outdated functionalities with NetLogo.
Phrase: Faces version issues with NetLogo.

4.
Concepts: augments human capabilities, aims to augment human capabilities
Relationship: The concepts are related in that they both describe the goal of AI-driven interfaces to augment human capabilities.
Criteria: Participants aim to augment human capabilities with AI-driven interfaces.
Phrase: Aims to augment human capabilities.

5.
Concepts: values human judgment, emphasizes human judgment, emphasizes human-ai augmentation
Relationship: The concepts are related in that they all emphasize the importance of human judgment and augmentation with AI.
Criteria: Participants emphasize the importance of human judgment and augmentation with AI.
Phrase: Emphasizes human judgment and augmentation.

6.
Concepts: saves time, describes ai efficiency
Relationship: The concepts are related in that they both describe the time-saving benefits of AI-driven interfaces.
Criteria: Participants perceive AI-driven interfaces as time-saving tools.
Phrase: Describes AI efficiency.

7.
Concepts: envisions ai roles, advocates for peer programming
Relationship: The concepts are related in that they both describe the potential roles of AI in collaborative work.
Criteria: Participants envision AI playing a role in peer programming and collaborative work.
Phrase: Envisions AI roles in peer programming.

8.
Concepts: ai as a peer, views ai as a collaborative partner
Relationship: The concepts are related in that they both describe AI as a collaborative partner in the coding process.
Criteria: Participants view AI as a collaborative partner in the coding process.
Phrase: Views AI as a collaborative partner.

9.
Concepts: ai utility, finds ai helpful
Relationship: The concepts are related in that they both describe the usefulness of AI in supporting work.
Criteria: Participants find AI helpful in supporting their work.
Phrase: Finds AI helpful.

10.
Concepts: finds explanations clear, appreciates clear ai responses
Relationship: The concepts are related in that they both describe the clarity of AI-generated explanations.
Criteria: Participants find AI-generated explanations clear and easy to understand.
Phrase: Finds explanations clear.

11.
Concepts: describes as easy, finds interface straightforward
Relationship: The concepts are related in that they both describe the ease of use of LLM-driven interfaces.
Criteria: Participants find the interface straightforward and intuitive to use.
Phrase: Describes interface as easy.

12.
Concepts: appreciates timely feedback, values immediate feedback
Relationship: The concepts are related in that they both describe the appreciation for timely feedback from AI.
Criteria: Participants appreciate the timely feedback provided by the AI.
Phrase: Appreciates timely feedback.

13.
Concepts: equation development, use ai for equation development
Relationship: The concepts are related in that they both describe the use of AI for equation development in agent-based models.
Criteria: Participants use AI for equation development in agent-based models.
Phrase: Uses AI for equation development.

14.
Concepts: uses ai for netlogo, translates models
Relationship: The concepts are related in that they both describe the use of AI for NetLogo-related tasks.
Criteria: Participants use AI for NetLogo-related tasks, such as translating models.
Phrase: Uses AI for NetLogo tasks.

15.
Concepts: ai experimentation, experiments with ai queries
Relationship: The concepts are related in that they both describe the experimentation with AI to test its capabilities.
Criteria: Participants experiment with AI to test its capabilities.
Phrase: Experiments with AI queries.

16.
Concepts: task refinement, refines prompts
Relationship: The concepts are related in that they both describe the refinement of task descriptions to get more accurate AI responses.
Criteria: Participants refine task descriptions to get more accurate AI responses.
Phrase: Refines task prompts.

17.
Concepts: emphasizes iterative questioning, emphasizes asking the right questions
Relationship: The concepts are related in that they both describe the importance of asking iterative questions to get desired AI outputs.
Criteria: Participants emphasize the importance of asking iterative questions to get desired AI outputs.
Phrase: Emphasizes iterative questioning.

18.
Concepts: ai effectiveness, suggests effective ai use
Relationship: The concepts are related in that they both describe the effectiveness of AI use.
Criteria: Participants discuss the effectiveness of AI use.
Phrase: Discusses AI effectiveness.

19.
Concepts: use ai-generated code as reference, refer to the generated code or get a reference
Relationship: The concepts are related in that they both describe the use of AI-generated code as a reference.
Criteria: Participants use AI-generated code as a reference.
Phrase: Uses AI-generated code as reference.

20.
Concepts: ai-generated code, customize ai-generated code
Relationship: The concepts are related in that they both describe the interaction with AI-generated code.
Criteria: Participants interact with AI-generated code.
Phrase: Customizes AI-generated code.

21.
Concepts: use ai for code optimization, highlight ai's optimization ability
Relationship: The concepts are related in that they both describe the use of AI for code optimization.
Criteria: Participants use AI for code optimization.
Phrase: Uses AI for code optimization.

22.
Concepts: evaluates ai comparison, compare ai-generated code with own code
Relationship: The concepts are related in that they both describe the comparison of AI-generated code with human-written code.
Criteria: Participants compare AI-generated code with their own code.
Phrase: Compares AI-generated code.

23.
Concepts: reads in detail, interprets ai code
Relationship: The concepts are related in that they both describe the evaluation of AI-generated code in detail.
Criteria: Participants read and evaluate AI-generated code in detail.
Phrase: Reads AI-generated code in detail.

24.
Concepts: appreciation for annotated code, appreciate ai code commenting
Relationship: The concepts are related in that they both describe the appreciation for AI-generated code with annotations.
Criteria: Participants appreciate AI-generated code with annotations.
Phrase: Appreciates annotated code.

25.
Concepts: documentation search, appreciates in-task documentation search
Relationship: The concepts are related in that they both describe the appreciation for in-task documentation search.
Criteria: Participants appreciate the capability to search for documentation and read it within the workspace.
Phrase: Appreciates in-task documentation search.

26.
Concepts: share debugging experiences, experience debugging challenges
Relationship: The concepts are related in that they both describe the sharing of debugging experiences and challenges.
Criteria: Participants share debugging experiences and challenges.
Phrase: Shares debugging experiences.

27.
Concepts: values ai's debugging ability, values learning from ai
Relationship: The concepts are related in that they both describe the value of AI's debugging ability and learning from AI.
Criteria: Participants value AI's debugging ability and learning from AI.
Phrase: Values AI's debugging ability.

28.
Concepts: acknowledges ai's errors, describes iterative debugging benefits
Relationship: The concepts are related in that they both describe the acknowledgment of AI's errors and the benefits of iterative debugging.
Criteria: Participants acknowledge AI's errors and benefit from iterative debugging.
Phrase: Acknowledges AI's errors.

29.
Concepts: fixes errors manually, manually fixes ai code errors
Relationship: The concepts are related in that they both describe the manual fixing of errors in AI-generated code.
Criteria: Participants manually fix errors in AI-generated code.
Phrase: Fixes errors manually.

30.
Concepts: collaborates with ai
Relationship: The concepts are related in that they all describe the collaboration with AI in coding tasks and debugging.
Criteria: Participants see AI as a collaborative partner for coding tasks and debugging.
Phrase: Collaborates with AI.

31.
Concepts: supports learning
Relationship: N/A
Criteria: Participants see the potential for AI to support learning new extensions of NetLogo.
Phrase: Supports learning.