You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: limited time for expertise, time constraints for learning each language
- The participant acknowledges the challenge of not having much time to spend on any single programming language as an expert.
- The code highlights the time constraints of learning each language, especially for experts who work with multiple languages.

2.
Concepts: effort constraints, fragmented learning experience
- The participant faces effort constraints, having limited time to devote to each language or project.
- Reflects on the challenges of learning multiple languages with limited time.

3.
Concepts: challenges of language specialization, recognizing challenges of multi-language proficiency
- Acknowledges the challenge of deep specialization in diverse language environments.
- Interviewee recognizes the challenges of working with multiple languages.

4.
Concepts: human-effort limitations, human-effort limitations (negative)
- Noting human effort limitations due to time constraints
- Reports limitations of human effort, such as limited memory.

5.
Concepts: expressing time constraints for learning, time constraints for learning extensions
- Expressing time constraints for learning NetLogo.
- Identifies time constraints as a barrier to learning extensions in NetLogo.

6.
Concepts: needing fine-tuning for experts, need for fine-tuning design for experts
- Interviewee suggests that AI needs fine-tuning for expert users.
- Recognizes the need for fine-tuning the design for expert users.

7.
Concepts: need for expert-oriented design, expert-friendly interface features
- Desiring a more expert-oriented design for AI interfaces.
- Recognizes the need for expert-friendly features in the interface.

8.
Concepts: notes design tension, designing for diverse user expertise
- An expert notes the tension between novice-oriented and expert-oriented design in AI-driven interfaces.
- Expresses tension between designing for novice and expert users

9.
Concepts: identifies steep learning curve, design limitations for expert users
- An expert identifies a steep learning curve due to design limitations.
- Suggesting that the current design may not be optimized for expert users.

10.
Concepts: interface design limitations, finding the current design challenging
- Attributes difficulties to interface design limitations.
- The participant finds the current design challenging to use.

11.
Concepts: lack of background information, lack of context in code sharing
- Novice users post large chunks of code without context, making it difficult for others to help.
- The participant experiences challenges when seeking help from others due to the lack of context in code sharing.

12.
Concepts: challenges for novices seeking help, notes challenges in seeking help, notes the challenge of assisting novice programmers based on incomplete information
- Highlights the challenges faced by novices seeking help with code.
- An expert notes the challenges of novices seeking help, particularly when they may not provide sufficient context.
- The interviewee notes the challenges of assisting novice programmers, including incomplete information or lack of context.

13.
Concepts: writing large code chunks, notes inefficiencies
- Writing large chunks of code and encountering errors
- The participant identifies inefficiencies in the coding process, particularly among beginners who write large chunks of code and then struggle to fix errors.

14.
Concepts: debugging skills gap, debug => novice's "bad or unskilled" programming habit
- Notes the lack of debugging skills in novice users.
- Debugging habits of novices may prevent them from identifying errors in time.

15.
Concepts: novice coding habits, beginner coding habits
- Observes novice coding habits.
- Identifies common coding habits of beginners, such as writing large chunks of code.

16.
Concepts: ai support for complex concepts, seeing ai's potential in supporting concept learning
- Expecting AI to support learning of complex concepts (e.g., "scope")
- Participants see AI's potential in supporting concept learning, such as "scope" in NetLogo.

17.
Concepts: learning curve effort, takes time to use and adapt
- Effort required to learn and use AI-driven interfaces
- Recognizes the need for time to adapt to and effectively use AI-driven interfaces.

18.
Concepts: frustration with the learning curve, expresses learning curve struggles
- The interviewee expresses frustration with the learning curve.
- An expert expresses struggles with the learning curve of AI-driven interfaces, leading to frustration points.

19.
Concepts: struggles with unfamiliar design, learning curve in understanding the interface
- An expert struggles with unfamiliar interface design and learning curves.
- The participant experiences a learning curve when understanding the interface.

20.
Concepts: empathizes with novice users, empathizing with newbie struggles
- An expert empathizes with beginner frustrations in AI-assisted tasks.
- Acknowledging the struggles of new learners with syntax errors

21.
Concepts: novice (negative), reflecting on novice difficulties
- The participant reflects on the limitations of novice users, highlighting the need for better instruction and guidance.
- An expert highlights and reflects on the difficulties faced by novices when using AI.

22.
Concepts: experiences debugging frustration, e04 expresses frustration with limited troubleshooting options
- E04 experiences frustration with debugging.
- Expresses frustration with limited troubleshooting options

23.
Concepts: suggests summarizing tool, user-friendly error reporting
- Suggesting a summarizing tool for user error reports.
- Suggesting user-friendly error presentation.

24.
Concepts: requesting improved error messaging, suggesting need for improved error reporting, suggesting improved error reporting
- Calling for better error messaging
- Need for improved error reporting in NetLogo.
- Participants suggest improvements to error feedback for better troubleshooting.

25.
Concepts: reading error messages, evaluates choices based on error messages, analyzing error messages
- E01 evaluates error messages.
- The participant evaluates choices based on error messages
- Participants read and consider error messages before making coding decisions.

26.
Concepts: critiquing unhelpful error messages, encountering unclear error messages
- Participants critique NetLogo's error messages as unhelpful for beginners.
- Participants encounter unclear error messages and express frustration with them.

27.
Concepts: need for advanced error detection, calls for conceptual error detection
- The participant expresses the need for advanced error detection capabilities.
- The interviewee calls for conceptual error detection in AI-driven interfaces

28.
Concepts: desiring linting features, identifying the need for linting features
- Participants desire linting features that identify conceptual mistakes, not just syntax errors.
- Participants identify the need for NetLogo linting features to support conceptual mistake identification.

29.
Concepts: error clarification for novices, values error clarification
- Highlighting the importance of error clarification for novice users.
- The code highlights the importance of clarifying error codes, especially for new users who struggle with syntax and errors.

30.
Concepts: clearness, clarification
- The AI interface provides clear explanations and clarifies error codes.
- Values the clarification of error codes and parameters provided by the interface.

31.
Concepts: highlighting error clarification, highlighting the importance of error clarification
- The interviewee highlights the error clarification ability of the AI-driven interface.
- Highlighting the importance of error clarification in AI-driven interfaces.

32.
Concepts: asking for clarification, asking for clarification and debugging
- The participant asks for clarification on specific coding concepts or structures.
- Asking for clarification and debugging
===
Here are the definitions for each code:

---
1.
Concepts: limited time for expertise, time constraints for learning each language
Relationship: The concepts are related as they both describe the challenges of learning multiple languages with limited time.
Criteria: Experts acknowledge the limited time they have to spend on each programming language, leading to time constraints for learning each language.
Phrase: Acknowledge time constraints for learning multiple languages.

2.
Concepts: effort constraints, fragmented learning experience
Relationship: The concepts are related as they both describe the limitations of human effort in learning multiple languages.
Criteria: Participants face effort constraints, leading to a fragmented learning experience with limited time to devote to each language or project.
Phrase: Face effort constraints in learning multiple languages.

3.
Concepts: challenges of language specialization, recognizing challenges of multi-language proficiency
Relationship: The concepts are related as they both describe the difficulties of working with multiple languages.
Criteria: Experts acknowledge the challenges of deep specialization in diverse language environments and recognize the challenges of working with multiple languages.
Phrase: Recognize challenges of language specialization.

4.
Concepts: human-effort limitations, human-effort limitations (negative)
Relationship: The concepts are related as they both describe the limitations of human effort.
Criteria: Participants note human effort limitations due to time constraints and report limitations of human effort, such as limited memory.
Phrase: Note human effort limitations.

5.
Concepts: expressing time constraints for learning, time constraints for learning extensions
Relationship: The concepts are related as they both describe the time constraints for learning NetLogo.
Criteria: Participants express time constraints for learning NetLogo and identify time constraints as a barrier to learning extensions in NetLogo.
Phrase: Express time constraints for learning NetLogo.

6.
Concepts: needing fine-tuning for experts, need for fine-tuning design for experts
Relationship: The concepts are related as they both describe the need for fine-tuning the design for expert users.
Criteria: Experts suggest that AI needs fine-tuning for expert users and recognize the need for fine-tuning the design for expert users.
Phrase: Suggest fine-tuning for expert users.

7.
Concepts: need for expert-oriented design, expert-friendly interface features
Relationship: The concepts are related as they both describe the need for expert-friendly features in the interface.
Criteria: Participants desire a more expert-oriented design for AI interfaces and recognize the need for expert-friendly features in the interface.
Phrase: Desire expert-oriented design.

8.
Concepts: notes design tension, designing for diverse user expertise
Relationship: The concepts are related as they both describe the tension between designing for novice and expert users.
Criteria: Experts note the tension between novice-oriented and expert-oriented design in AI-driven interfaces and express tension between designing for novice and expert users.
Phrase: Note design tension for diverse users.

9.
Concepts: identifies steep learning curve, design limitations for expert users
Relationship: The concepts are related as they both describe the steep learning curve due to design limitations.
Criteria: Experts identify a steep learning curve due to design limitations and suggest that the current design may not be optimized for expert users.
Phrase: Identify steep learning curve.

10.
Concepts: interface design limitations, finding the current design challenging
Relationship: The concepts are related as they both describe the challenges of the current design.
Criteria: Participants attribute difficulties to interface design limitations and find the current design challenging to use.
Phrase: Attribute difficulties to design limitations.

11.
Concepts: lack of background information, lack of context in code sharing
Relationship: The concepts are related as they both describe the challenges of seeking help due to lack of context.
Criteria: Novice users post large chunks of code without context, making it difficult for others to help, and participants experience challenges when seeking help from others due to the lack of context in code sharing.
Phrase: Experience challenges in seeking help.

12.
Concepts: challenges for novices seeking help, notes challenges in seeking help, notes the challenge of assisting novice programmers based on incomplete information
Relationship: The concepts are related as they both describe the challenges of seeking help and assisting novice programmers.
Criteria: Participants highlight the challenges faced by novices seeking help with code, note the challenges of novices seeking help, and note the challenges of assisting novice programmers, including incomplete information or lack of context.
Phrase: Highlight challenges in seeking help.

13.
Concepts: writing large code chunks, notes inefficiencies
Relationship: The concepts are related as they both describe the inefficiencies in the coding process.
Criteria: Participants write large chunks of code and encounter errors, and identify inefficiencies in the coding process, particularly among beginners who write large chunks of code and then struggle to fix errors.
Phrase: Identify inefficiencies in coding.

14.
Concepts: debugging skills gap, debug => novice's "bad or unskilled" programming habit
Relationship: The concepts are related as they both describe the lack of debugging skills in novice users.
Criteria: Participants note the lack of debugging skills in novice users and note that debugging habits of novices may prevent them from identifying errors in time.
Phrase: Note debugging skills gap.

15.
Concepts: novice coding habits, beginner coding habits
Relationship: The concepts are related as they both describe the coding habits of novice users.
Criteria: Participants observe novice coding habits and identify common coding habits of beginners, such as writing large chunks of code.
Phrase: Observe novice coding habits.

16.
Concepts: ai support for complex concepts, seeing ai's potential in supporting concept learning
Relationship: The concepts are related as they both describe the potential of AI in supporting concept learning.
Criteria: Participants expect AI to support learning of complex concepts and see AI's potential in supporting concept learning, such as "scope" in NetLogo.
Phrase: Expect AI support for complex concepts.

17.
Concepts: learning curve effort, takes time to use and adapt
Relationship: The concepts are related as they both describe the effort required to learn and use AI-driven interfaces.
Criteria: Participants recognize the need for time to adapt to and effectively use AI-driven interfaces and acknowledge the effort required to learn and use AI-driven interfaces.
Phrase: Recognize learning curve effort.

18.
Concepts: frustration with the learning curve, expresses learning curve struggles
Relationship: The concepts are related as they both describe the frustration with the learning curve.
Criteria: Participants express frustration with the learning curve and express struggles with the learning curve of AI-driven interfaces, leading to frustration points.
Phrase: Express frustration with the learning curve.

19.
Concepts: struggles with unfamiliar design, learning curve in understanding the interface
Relationship: The concepts are related as they both describe the struggles with unfamiliar interface design and learning curves.
Criteria: Participants experience a learning curve when understanding the interface and struggle with unfamiliar interface design and learning curves.
Phrase: Experience struggles with unfamiliar design.

20.
Concepts: empathizes with novice users, empathizing with newbie struggles
Relationship: The concepts are related as they both describe the empathy with novice users.
Criteria: Participants empathize with beginner frustrations in AI-assisted tasks and acknowledge the struggles of new learners with syntax errors.
Phrase: Empathize with novice users.

21.
Concepts: novice (negative), reflecting on novice difficulties
Relationship: The concepts are related as they both describe the limitations of novice users.
Criteria: Participants reflect on the limitations of novice users, highlighting the need for better instruction and guidance, and highlight and reflect on the difficulties faced by novices when using AI.
Phrase: Reflect on novice difficulties.

22.
Concepts: experiences debugging frustration, e04 expresses frustration with limited troubleshooting options
Relationship: The concepts are related as they both describe the frustration with debugging.
Criteria: Participants experience frustration with debugging and express frustration with limited troubleshooting options.
Phrase: Experience debugging frustration.

23.
Concepts: suggests summarizing tool, user-friendly error reporting
Relationship: The concepts are related as they both describe the need for user-friendly error reporting.
Criteria: Participants suggest a summarizing tool for user error reports and suggest user-friendly error presentation.
Phrase: Suggest user-friendly error reporting.

24.
Concepts: requesting improved error messaging, suggesting need for improved error reporting, suggesting improved error reporting
Relationship: The concepts are related as they both describe the need for improved error reporting.
Criteria: Participants call for better error messaging, need for improved error reporting in NetLogo, and suggest improvements to error feedback for better troubleshooting.
Phrase: Request improved error messaging.

25.
Concepts: reading error messages, evaluates choices based on error messages, analyzing error messages
Relationship: The concepts are related as they both describe the analysis of error messages.
Criteria: Participants read and consider error messages before making coding decisions, evaluate choices based on error messages, and analyze error messages.
Phrase: Analyze error messages.

26.
Concepts: critiquing unhelpful error messages, encountering unclear error messages
Relationship: The concepts are related as they both describe the criticism of error messages.
Criteria: Participants critique NetLogo's error messages as unhelpful for beginners and encounter unclear error messages and express frustration with them.
Phrase: Critique error messages.

27.
Concepts: need for advanced error detection, calls for conceptual error detection
Relationship: The concepts are related as they both describe the need for advanced error detection.
Criteria: Participants express the need for advanced error detection capabilities and call for conceptual error detection in AI-driven interfaces.
Phrase: Call for advanced error detection.

28.
Concepts: desiring linting features, identifying the need for linting features
Relationship: The concepts are related as they both describe the need for linting features.
Criteria: Participants desire linting features that identify conceptual mistakes, not just syntax errors, and identify the need for NetLogo linting features to support conceptual mistake identification.
Phrase: Desire linting features.

29.
Concepts: error clarification for novices, values error clarification
Relationship: The concepts are related as they both describe the importance of error clarification.
Criteria: Participants highlight the importance of error clarification for novice users and value the clarification of error codes, especially for new users who struggle with syntax and errors.
Phrase: Value error clarification.

30.
Concepts: clearness, clarification
Relationship: The concepts are related as they both describe the clarity of error codes.
Criteria: The AI interface provides clear explanations and clarifies error codes, and values the clarification of error codes and parameters provided by the interface.
Phrase: Value clearness.

31.
Concepts: highlighting error clarification, highlighting the importance of error clarification
Relationship: The concepts are related as they both describe the importance of error clarification.
Criteria: Participants highlight the error clarification ability of the AI-driven interface and highlight the importance of error clarification in AI-driven interfaces.
Phrase: Highlight error clarification.

32.
Concepts: asking for clarification, asking for clarification and debugging
Relationship: The concepts are related as they both describe the need for clarification and debugging.
Criteria: Participants ask for clarification on specific coding concepts or structures and ask for clarification and debugging.
Phrase: Ask for clarification.