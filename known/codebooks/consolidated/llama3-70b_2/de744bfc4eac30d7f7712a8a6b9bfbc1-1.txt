You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: seeking teachers' input, consult on educational standards
- A designer asks for input or opinions from teachers or users.
- A designer consults with teachers or experts on educational standards.

2.
Concepts: integrating user feedback, establishing a feedback loop
- User feedback is acknowledged and incorporated into the design process.
- Processes where user feedback is solicited and incorporated into design decisions.

3.
Concepts: indirect answer, respond to initial question
- A designer responds indirectly or asks a question in response to a user's question.
- The designer responds directly to an initial question or inquiry.

4.
Concepts: query and response, encourage interaction
- Instances where users ask questions and receive answers from designers or other community members.
- Designers encourage users to interact with the community by asking questions or providing feedback.

5.
Concepts: exchange suggestions, propose design ideas
- Designers accept user suggestions and provide their own.
- Designers propose or share potential solutions or ideas.

6.
Concepts: inquire about user needs, gather detailed requirements
- Designers inquire about or try to understand users' needs.
- When designers ask users to provide detailed requirements or needs.

7.
Concepts: user interface, focusing on usability
- A designer or user refers to the user interface or visual aspects.
- A designer considers usability or user experience in software design.

8.
Concepts: component functionality, address functionality
- A designer refers to a specific component's functionality.
- A designer addresses a specific functionality or feature-related question.

9.
Concepts: design refinement, design adaptation
- Refining or improving design elements
- Adapting or modifying design elements

10.
Concepts: seek efficiency, simplification and refinement in design, suggest design simplifications
- The designer seeks to simplify or improve the efficiency of a process.
- A designer or user emphasizes the importance of simplification and refinement in the design process.
- Designers suggest design simplifications.

11.
Concepts: explain design goals and principles, explain intention of app design
- Designers explain design goals and principles.
- A designer explains the intention or philosophy behind the app's design.

12.
Concepts: user support, provide design support
- Assistance and support provided by designers to help users effectively use the product.
- Designers or users provide answers or support to users' questions or inquiries.

13.
Concepts: manual adjustment, suggest manual adjustments
- A developer discusses manual adjustments or customizations available in the software.
- Recommendations or advice provided by the developer for manual adjustments or workarounds.

14.
Concepts: detailing updates, explaining new features
- Detailing specific updates or features.
- Explaining new features or updates in the application

15.
Concepts: technical details, providing specifics, feature clarification
- Technical details or information about a feature, functionality, or update.
- Providing specific details or specifications about a feature or functionality.
- Clarifying the existence or functionality of a feature.

16.
Concepts: feature introduction, explain feature functionality, provide feature examples
- Introducing or explaining the functions or capabilities of a feature.
- The designer provides an explanation for a feature or functionality.
- Examples or illustrations provided by the developer to explain or demonstrate a feature or concept.

17.
Concepts: explaining the need, functionality rationale
- Explaining the need or purpose behind a feature or development.
- Explaining the benefits or convenience of a feature.

18.
Concepts: simulation accuracy, explain simulation detail
- Designer discusses simulation accuracy or realism.
- A designer explains the details of a simulation.

19.
Concepts: technical explanation, explain development process
- Explaining technical details or artifacts.
- Explaining the development process or technical details

20.
Concepts: input methods, input method discussion
- A developer discusses input methods or user interface elements.
- Discussion or suggestions about input methods or interfaces.

21.
Concepts: compare software, comparison to similar apps, comparative feedback
- Comparing software or systems.
- A user compares the system to similar applications.
- A user provides feedback that compares the software to others, highlighting its strengths and weaknesses.

22.
Concepts: confirm system compatibility, suggesting checking compatibility
- Designers confirm system compatibility.
- A designer suggests checking the system's compatibility with a particular operating system.

23.
Concepts: platform clarification, version type clarification, version clarification
- Clarifying platform or version availability
- Clarifying the type or version of a product.
- Clarification or questioning about versions of the application

24.
Concepts: version reference, provide version information
- Mentioning a specific version of a product or software.
- Designer provides additional information about a specific version.

25.
Concepts: platform-specific update, platform-specific communication
- Providing updates or information about a specific platform.
- Discussion about specific features or design related to a particular platform

26.
Concepts: asking a question, inquiring about information
- A user or designer asks a question or seeks information.
- A user asks a question to seek information or clarification.

27.
Concepts: asking about usage, ask a question about the app
- A user asks about how to use the software or a specific feature.
- Asking questions about the application's features or functionality

28.
Concepts: platform inquiry, technical inquiry
- Users ask questions about the platform or its features.
- Instances where users ask technical questions about the platform, indicating areas of user interest or potential issues.

29.
Concepts: technical question, provide technical clarification
- Asking technical or specific questions about the application
- Providing clarification about technical aspects of the platform.

30.
Concepts: access information, questioning access
- Answering questions about access or availability.
- A user inquires about accessing a feature or resource.

31.
Concepts: resource request, request user manuals and information
- A user requests access to a resource, such as a user manual.
- Users request user manuals and information.

32.
Concepts: request support, requesting resources
- Users request help and support.
- A user requests resources or support from the community.
===
Here are the definitions for each code:

---
1.
Concepts: seeking teachers' input, consult on educational standards
Relationship: The designer seeks input from teachers to ensure the educational standards are met.
Criteria: Designers consult with teachers or experts to ensure alignment with educational standards.
Phrase: Seeking input on educational standards.

2.
Concepts: integrating user feedback, establishing a feedback loop
Relationship: User feedback is incorporated into the design process to create a feedback loop.
Criteria: Designers acknowledge and integrate user feedback to improve the design.
Phrase: Integrating user feedback into the design process.

3.
Concepts: indirect answer, respond to initial question
Relationship: The designer responds indirectly or asks a question in response to a user's question.
Criteria: Designers respond to user inquiries, either directly or indirectly.
Phrase: Responding to user questions.

4.
Concepts: query and response, encourage interaction
Relationship: The designer encourages users to interact by asking questions and providing feedback.
Criteria: Designers promote user interaction through queries and responses.
Phrase: Encouraging user interaction.

5.
Concepts: exchange suggestions, propose design ideas
Relationship: Designers exchange suggestions with users and propose design ideas.
Criteria: Designers engage with users to propose and exchange design ideas.
Phrase: Exchanging design ideas.

6.
Concepts: inquire about user needs, gather detailed requirements
Relationship: Designers inquire about user needs to gather detailed requirements.
Criteria: Designers gather requirements by inquiring about user needs.
Phrase: Gathering user requirements.

7.
Concepts: user interface, focusing on usability
Relationship: The designer considers usability in the user interface design.
Criteria: Designers focus on usability in the user interface design.
Phrase: Focusing on user interface usability.

8.
Concepts: component functionality, address functionality
Relationship: The designer addresses specific component functionality.
Criteria: Designers address specific component functionality.
Phrase: Addressing component functionality.

9.
Concepts: design refinement, design adaptation
Relationship: Design refinement leads to design adaptation.
Criteria: Designers refine and adapt design elements.
Phrase: Refining and adapting design elements.

10.
Concepts: seek efficiency, simplification and refinement in design, suggest design simplifications
Relationship: The designer seeks efficiency and suggests simplifications.
Criteria: Designers seek to simplify and refine design elements.
Phrase: Simplifying and refining design elements.

11.
Concepts: explain design goals and principles, explain intention of app design
Relationship: The designer explains design goals and principles to clarify intentions.
Criteria: Designers explain design goals and principles.
Phrase: Explaining design intentions.

12.
Concepts: user support, provide design support
Relationship: Designers provide support to users.
Criteria: Designers offer support to users.
Phrase: Providing user support.

13.
Concepts: manual adjustment, suggest manual adjustments
Relationship: The developer provides guidance on manual adjustments.
Criteria: Developers suggest manual adjustments or customizations.
Phrase: Suggesting manual adjustments.

14.
Concepts: detailing updates, explaining new features
Relationship: The designer explains new features and updates.
Criteria: Designers detail updates and explain new features.
Phrase: Explaining new features and updates.

15.
Concepts: technical details, providing specifics, feature clarification
Relationship: The designer provides technical details and clarifies features.
Criteria: Designers provide technical details and clarify features.
Phrase: Providing technical details.

16.
Concepts: feature introduction, explain feature functionality, provide feature examples
Relationship: The designer introduces features and explains functionality.
Criteria: Designers introduce and explain features with examples.
Phrase: Introducing and explaining features.

17.
Concepts: explaining the need, functionality rationale
Relationship: The designer explains the need and rationale behind a feature.
Criteria: Designers explain the need and benefits of a feature.
Phrase: Explaining feature rationale.

18.
Concepts: simulation accuracy, explain simulation detail
Relationship: The designer discusses simulation accuracy and details.
Criteria: Designers explain simulation accuracy and details.
Phrase: Explaining simulation details.

19.
Concepts: technical explanation, explain development process
Relationship: The designer provides technical explanations of the development process.
Criteria: Designers provide technical explanations of the development process.
Phrase: Explaining technical details.

20.
Concepts: input methods, input method discussion
Relationship: The developer discusses input methods.
Criteria: Developers discuss input methods and interfaces.
Phrase: Discussing input methods.

21.
Concepts: compare software, comparison to similar apps, comparative feedback
Relationship: The user compares the software to similar applications.
Criteria: Users compare the software to others, highlighting strengths and weaknesses.
Phrase: Comparing to similar software.

22.
Concepts: confirm system compatibility, suggesting checking compatibility
Relationship: The designer confirms system compatibility and suggests checking.
Criteria: Designers confirm compatibility and suggest checking.
Phrase: Confirming system compatibility.

23.
Concepts: platform clarification, version type clarification, version clarification
Relationship: The designer clarifies platform or version availability.
Criteria: Designers clarify platform or version availability.
Phrase: Clarifying platform or version availability.

24.
Concepts: version reference, provide version information
Relationship: The designer provides version information.
Criteria: Designers provide version information.
Phrase: Providing version information.

25.
Concepts: platform-specific update, platform-specific communication
Relationship: The designer provides updates or information about a specific platform.
Criteria: Designers provide platform-specific updates or information.
Phrase: Providing platform-specific updates.

26.
Concepts: asking a question, inquiring about information
Relationship: The user or designer asks a question to seek information.
Criteria: Users or designers ask questions to seek information.
Phrase: Asking questions.

27.
Concepts: asking about usage, ask a question about the app
Relationship: The user asks about how to use the software or a specific feature.
Criteria: Users ask about usage or feature functionality.
Phrase: Asking about usage.

28.
Concepts: platform inquiry, technical inquiry
Relationship: The user asks technical questions about the platform.
Criteria: Users ask technical questions about the platform.
Phrase: Asking technical questions.

29.
Concepts: technical question, provide technical clarification
Relationship: The user asks technical questions and receives clarification.
Criteria: Users ask technical questions and receive clarification.
Phrase: Providing technical clarification.

30.
Concepts: access information, questioning access
Relationship: The user inquires about accessing a feature or resource.
Criteria: Users inquire about accessing features or resources.
Phrase: Inquiring about access.

31.
Concepts: resource request, request user manuals and information
Relationship: The user requests access to resources, such as user manuals.
Criteria: Users request resources, such as user manuals and information.
Phrase: Requesting resources.

32.
Concepts: request support, requesting resources
Relationship: The user requests help and support.
Criteria: Users request help, support, and resources from the community.
Phrase: Requesting support and resources.