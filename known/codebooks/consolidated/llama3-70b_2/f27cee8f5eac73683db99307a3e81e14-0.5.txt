You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (19 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
19. 
Concepts: {Repeat the input 19}
Relationship: {What is logical relationship between concepts in code 19, or N/A if not applicable}
Criteria: {Who did what, and how for code 19}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: responding to queries, answering for design support
- A user asks a question and receives a response from designers or other community members.
- A user provides support or answers a design-related question.

2.
Concepts: identify roles, inquiring about user roles
- Instances where users or designers identify their roles, which can help understand the community structure and the roles within it.
- A user inquires about their own or someone else's role or identity in the community.

3.
Concepts: confirming agreements explicitly, confirming understanding through acknowledgment
- Users express agreement or confirmation with designers' statements or ideas.
- Designers or users confirm understanding of a concept or issue.

4.
Concepts: address community members, expressing community needs
- Users address or respond to specific community members.
- Users express or acknowledge the needs or concerns of the community.

5.
Concepts: share experiences, personal connection
- Users share personal experiences or stories.
- Users or designers share personal experiences or connections.

6.
Concepts: shared experiences and support, sharing user experiences and impact
- Users and designers sharing experiences and supporting each other in using and improving the software.
- Users share their experiences and the impact of the software on their teaching or learning.

7.
Concepts: seek visual improvement, usability improvement
- Requesting improvement or enhancement of visual representation in the software.
- Instances where suggestions or changes are made to improve the usability of the software.

8.
Concepts: seek user input, gather user input
- Designers seek feedback or opinions from users or the community.
- Designers gather user input and draw conclusions based on it.

9.
Concepts: integrating user feedback, focus on user experience
- Designers acknowledge and incorporate user feedback into the design process.
- Designers consider user feedback or suggestions for improving the user experience

10.
Concepts: assure compatibility, consider future compatibility
- Designers assure or inform about compatibility.
- A designer considers the compatibility or potential issues with different systems or environments.

11.
Concepts: providing update previews, providing release timelines and update frequencies
- Designers provide previews of upcoming updates or features.
- Designers provide release timelines or highlight update frequencies.

12.
Concepts: identify user needs, identify potential need
- Designers identify or acknowledge user needs or requirements.
- A designer identifies potential needs or areas for improvement.

13.
Concepts: propose compromise, proposing design ideas, suggest alternatives
- Designer proposes a compromise or alternative solution.
- Designers propose, offer, or share potential solutions or ideas for problems or features.
- Designers are open to alternative solutions or approaches.

14.
Concepts: facilitate access, foster open dialogue
- Designers facilitate access and promote open communication.
- Designers encourage open communication and transparency.

15.
Concepts: provide explanations, explaining design decisions
- Designers provide explanations or encourage elaboration.
- Designers make or explain design decisions or choices.

16.
Concepts: prioritize development, set development goal
- Designers outline or prioritize feature development.
- Designers set goals or targets for software development or feature implementation.

17.
Concepts: outline future plans, share development plans
- Designers share their plans or ideas for future development.
- Designers share information about future development plans or visual representations.

18.
Concepts: design refinement, refine and improve product
- Refining or improving the design of the software.
- The process of repeatedly refining and improving a product based on feedback and testing.

19.
Concepts: adjust features, optimize features
- Designers adjust or refine features or components.
- Designers optimize or refine features or design elements.
===
Here are the definitions for each code:

---
1.
Concepts: responding to queries, answering for design support
Relationship: Responding to queries is a way of answering for design support.
Criteria: A user receives a response from designers or other community members when asking a question or seeking design-related support.
Phrase: Providing design support through query responses.

2.
Concepts: identify roles, inquiring about user roles
Relationship: Identifying roles is a response to inquiring about user roles.
Criteria: Users or designers identify their roles or inquire about others' roles to understand the community structure.
Phrase: Identifying and inquiring about user roles.

3.
Concepts: confirming agreements explicitly, confirming understanding through acknowledgment
Relationship: Confirming agreements is a way of confirming understanding.
Criteria: Users or designers express agreement or confirmation with statements or ideas and acknowledge understanding of concepts or issues.
Phrase: Confirming agreements and understanding.

4.
Concepts: address community members, expressing community needs
Relationship: Addressing community members is a way of expressing community needs.
Criteria: Users address or respond to specific community members and express or acknowledge the needs or concerns of the community.
Phrase: Addressing and expressing community needs.

5.
Concepts: share experiences, personal connection
Relationship: Sharing experiences is a way of making personal connections.
Criteria: Users or designers share personal experiences or stories to establish personal connections.
Phrase: Sharing experiences for personal connection.

6.
Concepts: shared experiences and support, sharing user experiences and impact
Relationship: Shared experiences lead to support and understanding of user experiences and impact.
Criteria: Users and designers share experiences, support each other, and share the impact of the software on their teaching or learning.
Phrase: Sharing experiences and support for mutual understanding.

7.
Concepts: seek visual improvement, usability improvement
Relationship: Seeking visual improvement is a way of improving usability.
Criteria: Users or designers request or suggest improvements to visual representation or usability of the software.
Phrase: Seeking visual and usability improvements.

8.
Concepts: seek user input, gather user input
Relationship: Seeking user input is a way of gathering user input.
Criteria: Designers seek feedback or opinions from users or the community and gather user input to inform design decisions.
Phrase: Seeking and gathering user input.

9.
Concepts: integrating user feedback, focus on user experience
Relationship: Integrating user feedback is a way of focusing on user experience.
Criteria: Designers acknowledge and incorporate user feedback into the design process to improve the user experience.
Phrase: Integrating user feedback for user experience.

10.
Concepts: assure compatibility, consider future compatibility
Relationship: Assuring compatibility is a way of considering future compatibility.
Criteria: Designers assure or inform about compatibility and consider potential issues with different systems or environments.
Phrase: Assuring and considering compatibility.

11.
Concepts: providing update previews, providing release timelines and update frequencies
Relationship: Providing update previews is a way of providing release timelines and update frequencies.
Criteria: Designers provide previews of upcoming updates or features and share release timelines or update frequencies.
Phrase: Providing update previews and timelines.

12.
Concepts: identify user needs, identify potential need
Relationship: Identifying user needs is a way of identifying potential needs.
Criteria: Designers identify or acknowledge user needs or requirements and identify potential areas for improvement.
Phrase: Identifying user needs and potential areas for improvement.

13.
Concepts: propose compromise, proposing design ideas, suggest alternatives
Relationship: Proposing compromise is a way of proposing design ideas and suggesting alternatives.
Criteria: Designers propose compromises or alternative solutions, offer potential solutions or ideas, and are open to alternative approaches.
Phrase: Proposing compromises and design ideas.

14.
Concepts: facilitate access, foster open dialogue
Relationship: Facilitating access is a way of fostering open dialogue.
Criteria: Designers facilitate access and promote open communication, encouraging transparency and open dialogue.
Phrase: Facilitating access for open dialogue.

15.
Concepts: provide explanations, explaining design decisions
Relationship: Providing explanations is a way of explaining design decisions.
Criteria: Designers provide explanations or encourage elaboration, making or explaining design decisions or choices.
Phrase: Providing explanations for design decisions.

16.
Concepts: prioritize development, set development goal
Relationship: Prioritizing development is a way of setting development goals.
Criteria: Designers outline or prioritize feature development and set goals or targets for software development or feature implementation.
Phrase: Prioritizing and setting development goals.

17.
Concepts: outline future plans, share development plans
Relationship: Outlining future plans is a way of sharing development plans.
Criteria: Designers share their plans or ideas for future development and share information about future development plans or visual representations.
Phrase: Outlining and sharing future development plans.

18.
Concepts: design refinement, refine and improve product
Relationship: Design refinement is a way of refining and improving the product.
Criteria: Designers refine or improve the design of the software through repeated refinement and improvement based on feedback and testing.
Phrase: Refining and improving the product.

19.
Concepts: adjust features, optimize features
Relationship: Adjusting features is a way of optimizing features.
Criteria: Designers adjust or refine features or components to optimize their performance or functionality.
Phrase: Adjusting and optimizing features.