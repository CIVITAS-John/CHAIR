You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another and please do not merge them.
Determine the logical relationship between concepts within each code, such as inclusion, parallel, or intersection.
Write clear and generalizable criteria for each code and do not introduce unnecessary details. Then, write an accurate verb phrase as label for the combined concept.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (15 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Label: {A consolidated verb phrase of code 1}
...
15. 
Concepts: {Repeat the input 15}
Relationship: {What is logical relationship between concepts in code 15, or N/A if not applicable}
Criteria: {Who did what, and how for code 15}
Label: {A consolidated verb phrase of code 15}
---
~~~
1.
Concepts: feature explanation, explains feature functionality
- Explanations or descriptions of how a feature works or its purpose.
- Designer discusses or explains features in detail.

2.
Concepts: improve avatar quality, avatar customization
- User or designer requests improvement in avatar quality.
- User or designer discusses or requests customization options for avatars.

3.
Concepts: craftsmanship, using metaphors of craftsmanship, acknowledge craftsmanship
- Emphasizing the importance of craftsmanship or attention to detail.
- Use of metaphors or analogies to describe development or design.
- The user acknowledges or appreciates the craftsmanship or effort put into the project.

4.
Concepts: user adjustment, manual adjustment
- User mentions adjusting or adapting to a specific situation or environment.
- Discussions or instructions about manual adjustments or settings.

5.
Concepts: simulated experiment, experimental simulations in electricity
- Designer discusses simulated experiments or assessments.
- A designer or developer discusses or explains experimental simulations in electricity.

6.
Concepts: providing visual aids, image-based demonstration
- Visual aids, such as images, are used to support communication or understanding.
- Designer uses an image to help demonstrate or explain a concept.

7.
Concepts: explain complexity, feature complexity
- Explaining complex concepts or technical details.
- The designer mentions the complexity of a feature, implying that it may take more time to develop.

8.
Concepts: internet restriction, explain limited internet access
- Discussing restrictions or limitations imposed by schools or institutions on internet access
- User explains lack of internet access in a specific context.

9.
Concepts: outdated technology, describing outdated systems
- References to outdated or old technology.
- Describing outdated or limited systems or infrastructure.

10.
Concepts: touch screen functionality, considering touch screen use
- Discussing touch screen functionality or limitations.
- Users or designers consider the implications of using touch screens.

11.
Concepts: access, access information
- User or designer provides information about accessing a resource or feature.
- Information is provided about accessing or downloading software, files, or resources.

12.
Concepts: ease of use, usability and practicality
- Discussions related to the ease of use and user-friendliness of the software.
- User comments on the ease of use and practicality of the software.

13.
Concepts: assuring compatibility, answering compatibility questions
- Designer assures users of software compatibility with specific systems or devices.
- Responding to questions about compatibility or system requirements.

14.
Concepts: platform specific update, platform-specific information
- Providing updates or information specific to a particular platform (e.g., PC, iOS, Android)
- Information specific to a particular platform, such as version numbers or release timelines.

15.
Concepts: clarify version type, providing version information
- The designer clarifies or confirms the version of a product or feature, explaining the type or version.
- Designer provides additional information about a specific version of the software or an update.
===
Here are the definitions for each code:

---
1.
Concepts: feature explanation, explains feature functionality
Relationship: Inclusion (feature explanation includes explains feature functionality)
Criteria: Designer provides detailed information about a feature's purpose or operation.
Label: Explains feature functionality

2.
Concepts: improve avatar quality, avatar customization
Relationship: Parallel (two related but distinct concepts)
Criteria: User or designer requests or discusses improvements to avatar quality or customization options.
Label: Requests avatar enhancements

3.
Concepts: craftsmanship, using metaphors of craftsmanship, acknowledge craftsmanship
Relationship: Intersection (craftsmanship is a broader concept that encompasses the other two)
Criteria: Emphasis is placed on the importance of attention to detail or skill in development or design.
Label: Values craftsmanship

4.
Concepts: user adjustment, manual adjustment
Relationship: Inclusion (user adjustment includes manual adjustment)
Criteria: User or designer mentions adapting to a situation or environment, or discusses manual settings.
Label: Discusses adjustments

5.
Concepts: simulated experiment, experimental simulations in electricity
Relationship: Inclusion (simulated experiment includes experimental simulations in electricity)
Criteria: Designer discusses or explains simulated experiments or assessments, specifically in electricity.
Label: Explains simulated experiments

6.
Concepts: providing visual aids, image-based demonstration
Relationship: Inclusion (providing visual aids includes image-based demonstration)
Criteria: Visual aids, such as images, are used to support communication or understanding.
Label: Uses visual aids

7.
Concepts: explain complexity, feature complexity
Relationship: Inclusion (explain complexity includes feature complexity)
Criteria: Complex concepts or technical details are explained, or the complexity of a feature is mentioned.
Label: Explains complexity

8.
Concepts: internet restriction, explain limited internet access
Relationship: Inclusion (internet restriction includes explain limited internet access)
Criteria: Restrictions or limitations on internet access are discussed or explained.
Label: Discusses internet restrictions

9.
Concepts: outdated technology, describing outdated systems
Relationship: Inclusion (outdated technology includes describing outdated systems)
Criteria: References are made to old or outdated technology, systems, or infrastructure.
Label: References outdated technology

10.
Concepts: touch screen functionality, considering touch screen use
Relationship: Parallel (two related but distinct concepts)
Criteria: Touch screen functionality or limitations are discussed, or users/designers consider implications of using touch screens.
Label: Discusses touch screen use

11.
Concepts: access, access information
Relationship: Inclusion (access includes access information)
Criteria: Information is provided about accessing a resource, feature, or software.
Label: Provides access information

12.
Concepts: ease of use, usability and practicality
Relationship: Inclusion (ease of use includes usability and practicality)
Criteria: Discussions relate to the user-friendliness and practicality of the software.
Label: Discusses usability

13.
Concepts: assuring compatibility, answering compatibility questions
Relationship: Inclusion (assuring compatibility includes answering compatibility questions)
Criteria: Designer assures users of software compatibility or responds to compatibility questions.
Label: Assures compatibility

14.
Concepts: platform specific update, platform-specific information
Relationship: Inclusion (platform specific update includes platform-specific information)
Criteria: Updates or information specific to a particular platform are provided.
Label: Provides platform-specific information

15.
Concepts: clarify version type, providing version information
Relationship: Inclusion (clarify version type includes providing version information)
Criteria: Designer clarifies or confirms the version of a product or feature, providing additional information.
Label: Clarifies version information