You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (10 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
10. {Repeat the input 10}
Relationship: {The logical relationship between concepts in input 10}
Criteria: {A sentence of consolidated criteria for code 10}
Label: {A consolidated label of code 10}
Category: {2-4 words for code 10}
---
~~~
1. technical constraints, pedagogical constraints.
- Discussions related to technical limitations or constraints.
- Quotes that identify potential constraints or limitations of the software in supporting learning.

2. version updates, platform updates.
- Updates on software versions or component changes.
- Announcements or updates on platform changes or lab components.

3. software download, download instructions.
- Statements about downloading the Physics Lab software.
- Inquiries about downloading the software.

4. compatibility issues, system compatibility.
- Users raising concerns about software compatibility with different systems/versions.
- Instances where participants discuss or provide information about system compatibility or technical requirements.

5. collaborative decision-making, collaborative problem solving.
- Moments where decisions are made collectively with input from multiple community members.
- Interactions where community members collectively work through issues or propose solutions.

6. community influence, community-driven development.
- Community's influence on software evolution and design.
- Community involvement in shaping software development and collaboration dynamics.

7. group sharing, resource sharing.
- Sharing information or resources within the group.
- Sharing resources or information with others.

8. encouragement, appreciation.
- Expressions of appreciation or gratitude.
- Expressions of gratitude or appreciation towards others.

9. user support, technical assistance.
- Designers providing support and guidance to users.
- Instances where users or designers offer or receive technical help.

10. user influence, user response and planning.
- Examples showing the influence of user feedback on the design process or decisions.
- Designer's response to user requests and planning.
===
Here is the output format with the merged codes:

---
Categories: 
* Technical Aspects
* Community Dynamics
* Collaborative Processes
* Social Interactions

Definitions for each code:

1. Technical constraints, pedagogical constraints, compatibility issues, system compatibility
Relationship: Concepts are related to technical limitations or constraints.
Criteria: Discussions or quotes identifying technical limitations or constraints that affect learning.
Label: Technical Limitations
Category: Technical Aspects

2. Version updates, platform updates
Relationship: Concepts are related to updates or changes to the software or platform.
Criteria: Announcements or updates on software or platform changes.
Label: Platform Updates
Category: Technical Aspects

3. Software download, download instructions
Relationship: Concepts are related to accessing or downloading the software.
Criteria: Statements or inquiries about downloading the Physics Lab software.
Label: Software Access
Category: Technical Aspects

4. Collaborative decision-making, collaborative problem solving, community influence, community-driven development
Relationship: Concepts are related to collective decision-making and problem-solving.
Criteria: Moments of collective decision-making, problem-solving, or community influence on software development.
Label: Collaborative Development
Category: Collaborative Processes

5. Group sharing, resource sharing
Relationship: Concepts are related to sharing information or resources within the community.
Criteria: Sharing information or resources within the group.
Label: Resource Sharing
Category: Social Interactions

6. Encouragement, appreciation
Relationship: Concepts are related to expressions of gratitude or appreciation.
Criteria: Expressions of appreciation or gratitude towards others.
Label: Social Support
Category: Social Interactions

7. User support, technical assistance
Relationship: Concepts are related to providing or receiving technical help.
Criteria: Instances of designers or users offering or receiving technical assistance.
Label: Technical Support
Category: Social Interactions

8. User influence, user response and planning
Relationship: Concepts are related to user feedback influencing design decisions.
Criteria: Examples of user feedback influencing design process or decisions.
Label: User-Centered Design
Category: Collaborative Processes