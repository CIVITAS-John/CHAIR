You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (60 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
60. 
Concepts: {Repeat the input 60}
Relationship: {What is logical relationship between concepts in code 60, or N/A if not applicable}
Criteria: {Who did what, and how for code 60}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: frustration, express frustration with limitations
- The designer and user express difficulties related to using the system.
- Designers or users express frustration with current system limitations.

2.
Concepts: explain system limitations, explain software limitations
- Designers explain why a feature cannot be supported due to system limitations.
- Designers explain limitations or constraints within the current software version.

3.
Concepts: feature improvement discussion, discuss feature adjustments
- A designer and user discuss ways to improve a feature.
- Designers discuss or mention adjustments made to components or features for better functionality.

4.
Concepts: discuss interface design, discuss software usability
- Users or designers discuss the layout and design elements of the software interface.
- Designers discuss the usability features and interface design of the software.

5.
Concepts: feature details, illustrate feature functions
- A designer provides detailed information about a feature's functionality.
- Designers provide examples and illustrations to explain the functionality of a feature.

6.
Concepts: explain design rationale, explain intention of app design
- Designers explain the rationale behind design or development decisions.
- Designers explain the rationale or intention behind the software's design.

7.
Concepts: reflect on experiences, reflect on past experience
- Designers reflect on their previous experiences with the software or community.
- The designer reflects on a past experience to provide insight or a workaround.

8.
Concepts: offer solutions, offer problem-solving help
- Designers offer solutions or provide assistance in response to users' problems or questions.
- Designers offer assistance to users with any problems they may encounter.

9.
Concepts: announce new version release, announce version availability
- Announcing the release of a new software version.
- Designers announce new software version availability and inform users about its release.

10.
Concepts: announce future updates, announce planned updates
- Designers plan and announce upcoming software updates or features.
- Designers provide information about upcoming updates and new features.

11.
Concepts: announce new features, make developer announcements, announce software updates
- Designers announce new features, updates, and bug fixes in upcoming software versions.
- Designers make announcements about development plans, new features, updates, or bug fixes.
- Designers announce new software versions and their updates, providing details about new features and status.

12.
Concepts: share visual updates, provide update previews
- Designers provide or share visual previews related to upcoming changes.
- Designers preview new features or updates in upcoming software versions.

13.
Concepts: communicate progress, communicate release plans
- Designers communicate the progress of software updates or releases and future plans.
- Designers communicate plans and schedules for future software releases.

14.
Concepts: update on review status, provide development updates
- Designers provide updates on the status of software reviews and releases.
- Designers share information about the current status, updates, and future plans for the software.

15.
Concepts: announce component updates, inform about software updates
- Designers provide information about updates to specific components within the software.
- Designers inform users about newly released updates, changes, and where to download them.

16.
Concepts: user communication, communication of updates
- Designers provide updates or communicate about the status of the software to users.
- Instances where designers communicate updates, release schedules, or new features to users.

17.
Concepts: describe update scope, share the magnitude of update
- Designers describe the nature and extent of upcoming updates.
- Designers comment on the magnitude or scope of an update.

18.
Concepts: technical detail, list update details
- Designers provide detailed information about technical updates, bug fixes, and new components.
- Designers list new features, components, adjustments, and bug fixes in software updates.

19.
Concepts: detail version features, provide version update notes
- Designers detail the features and improvements of specific software versions.
- Designers provide detailed notes on version updates, including new features and changes.

20.
Concepts: update clarification, clarifying software version types
- Designer clarifies which version of software is being updated.
- Designers clarify the type or version of the software being discussed.

21.
Concepts: discuss future plans, discuss future development
- Designers discuss potential future developments and directions for the product.
- Designers share plans for future development and ongoing development efforts.

22.
Concepts: design discussion, discuss feature development
- Designers discuss the scope and details of current and future design features.
- Designers discuss the development or planned creation of new features.

23.
Concepts: manage release timeline, set timeline expectations
- Designers provide specific timelines and manage plans for software version releases.
- Designers set expectations for the timeline of new software versions or feature releases.

24.
Concepts: list future features, explain upcoming features
- Designers list features that will be added in future updates and plan their development.
- Designers discuss and explain features planned for future updates.

25.
Concepts: prioritize feature development, development prioritization
- Designers prioritize and schedule the development of specific features.
- Instances where designers discuss the prioritization of different features or sections to be developed.

26.
Concepts: seek user context, inquire about user background
- Designers ask questions to gather more context about the user's situation.
- Designers inquire about the user's background or professional context to gain a better understanding.

27.
Concepts: seek user input, clarify user requests
- Designers seek input or suggestions from users, often with a specific question in mind.
- Designers seek input or clarification from users to better understand their needs by asking specific questions.

28.
Concepts: ask follow-up questions, follow up on user requests
- Designers ask follow-up questions to better understand user needs.
- Designers ask follow-up questions to gather more information or clarify user requests.

29.
Concepts: solicit user feedback, user feedback and communication, encourage user feedback
- Designers solicit feedback or suggestions from users.
- Designers encourage users to give feedback and communicate issues.
- Designers encourage users to provide feedback or suggestions.

30.
Concepts: encourage user participation, encourage participatory design
- Designers encourage users to provide feedback and participate actively.
- Designers encourage users to contribute ideas, feedback, and suggestions, ensuring the product meets their needs.

31.
Concepts: acknowledge user feedback, integrate user feedback
- Designers acknowledge user inputs or comments.
- Designers acknowledge and incorporate user feedback into the design process.

32.
Concepts: inquire about user problems, seek user experience feedback
- Designers ask users about any problems they encountered.
- Designers ask for feedback on user experiences and encountered problems.

33.
Concepts: accept user suggestion, acknowledge user request, implement user suggestion
- Designers acknowledge or agree to a suggestion or request from users.
- Designers acknowledge a user's request and plan to incorporate it in future updates.
- Designers accept a suggestion and promise to implement it in future updates.

34.
Concepts: plan opinion gathering, plan feedback gathering
- Designers plan to gather opinions before starting new features and promise future consultations.
- Designers plan to gather user feedback to incorporate it into future development iterations.

35.
Concepts: apologize for inconvenience, inconvenience acknowledgment
- Designers apologize for any inconvenience caused to users.
- A designer acknowledges the potential inconvenience caused by their actions.

36.
Concepts: appreciating user support, expressing gratitude and acknowledgment
- Designers express gratitude for the support and contributions of users.
- Users or designers express gratitude or acknowledge contributions from others.

37.
Concepts: express appreciation, appreciating designers' dedication, recognition of effort
- Users express appreciation for the designer's efforts.
- Users express appreciation for the dedication and craftsmanship of the designers.
- Instances where users acknowledge and appreciate the efforts of the designers.

38.
Concepts: welcome, reciprocating user greetings
- Designers greet users in a friendly manner.
- Designers reciprocate a greeting from a user.

39.
Concepts: share resources, share development plans
- Designers or users share resources, such as files, links, or development plans, with the community.
- Designers share development plans and relevant resources with the community.

40.
Concepts: seeking community input, seek community consultation
- The designer seeks feedback or opinions from the community before making decisions.
- Designers seek feedback or consultation from the community on specific topics.

41.
Concepts: foster community interaction, promote community engagement
- Designers and users interact to foster a sense of community through discussions or casual conversation.
- Designers or users engage in discussions and actions that foster active participation and interaction within the community.

42.
Concepts: expressing agreement, confirming agreement
- Users express agreement with statements or opinions.
- Users confirm agreement with a previous statement or response.

43.
Concepts: justifying feature requests, user input with justifications
- Users provide reasons for suggesting specific feature additions.
- Giving feedback or suggestions with justifications.

44.
Concepts: seeking clarification, seek design clarification
- Users or designers request clarification on a matter.
- Designers seek clarification or confirmation about particular design details.

45.
Concepts: user background, sharing professional background
- Information provided by users about their professional or personal background, which helps in understanding the community's composition.
- Users share background information about their professional experience.

46.
Concepts: using emojis in communication, expressing emotions with emojis
- Users use emojis to convey emotions or reactions.
- Users or designers express emotions using language or emojis.

47.
Concepts: sharing teaching experience, sharing classroom experiences
- Users share their teaching experience in the community.
- Users share their experiences and the impact of the software on teaching or learning.

48.
Concepts: cross-platform inquiry, inquiring about platform compatibility
- Inquiring about the availability or usage of different software platforms.
- Users inquire about the platform compatibility of the software.

49.
Concepts: inquiring about software usage, inquiring about software versions
- Users ask how to use specific versions of the software.
- Users ask questions about the software version or platform.

50.
Concepts: seeking help for software access, inquiring about download information
- Users ask for instructions on how to access or download the software.
- Users ask for information on how to download the software.

51.
Concepts: seeking usage guidance, requesting usage support
- Users request guidance on how to use the software.
- Users express need for help with software usage.

52.
Concepts: sharing positive feedback, praising software features, appreciating software features
- Users express positive feedback and appreciation for the software.
- Users compliment the software and its features, expressing satisfaction.
- Users express appreciation for specific features of the software.

53.
Concepts: giving comparative feedback, comparing to similar applications
- Users provide feedback comparing the software to other applications.
- Users compare the application favorably to other similar software.

54.
Concepts: sharing user experiences, commenting on software usability
- Users provide reviews or opinions about the software.
- Users comment on the practical usability or effectiveness of the software.

55.
Concepts: provide feedback, suggesting software improvements, providing feedback and suggestions
- User provides feedback and opinions to improve the software.
- Users provide suggestions for improving the software.
- Users offer feedback or suggestions on the software's features or development direction.

56.
Concepts: make user requests, requesting specific features
- Users request new features or improvements for the software.
- Users specify features they want added to the software.

57.
Concepts: proposing new features, making feature suggestions
- Users suggest the addition of new features to enhance the platform.
- Users or designers suggest specific design features or improvements.

58.
Concepts: checking for updates, inquire about update timeline
- Users inquire about the schedule for upcoming updates.
- Users ask about the expected timeline for software updates.

59.
Concepts: express personal interest
- Designers share their personal interests related to the software's subject matter.
- Designers show personal interest or engagement in a related topic.

60.
Concepts: explain feature functionality
- Designers explain how a feature works, specifically the bidirectional conversion of diagrams.
- Designers explain how a feature or function works.
===
---
Definitions for each code (60 in total):
1.
Concepts: frustration, express frustration with limitations
Relationship: Expression of frustration related to system limitations.
Criteria: Designers or users express difficulties and frustrations with the current system's limitations.
Phrase: Express frustration with limitations

2.
Concepts: explain system limitations, explain software limitations
Relationship: Explanation of limitations in the system or software.
Criteria: Designers explain why certain features cannot be supported due to system or software limitations.
Phrase: Explain system limitations

3.
Concepts: feature improvement discussion, discuss feature adjustments
Relationship: Discussion about improving or adjusting features.
Criteria: Designers and users discuss ways to improve or adjust features for better functionality.
Phrase: Discuss feature improvements

4.
Concepts: discuss interface design, discuss software usability
Relationship: Discussion about interface design and usability.
Criteria: Users or designers discuss the layout, design elements, and usability features of the software interface.
Phrase: Discuss interface design and usability

5.
Concepts: feature details, illustrate feature functions
Relationship: Explanation and illustration of feature details.
Criteria: Designers provide detailed information and illustrations to explain a feature's functionality.
Phrase: Explain feature details

6.
Concepts: explain design rationale, explain intention of app design
Relationship: Explanation of the rationale or intention behind the design.
Criteria: Designers explain the rationale or intention behind the software's design or development decisions.
Phrase: Explain design rationale

7.
Concepts: reflect on experiences, reflect on past experience
Relationship: Reflection on past experiences.
Criteria: Designers reflect on their previous experiences with the software or community to provide insights or workarounds.
Phrase: Reflect on past experiences

8.
Concepts: offer solutions, offer problem-solving help
Relationship: Offering solutions or help for problem-solving.
Criteria: Designers offer solutions or assistance in response to users' problems or questions.
Phrase: Offer solutions

9.
Concepts: announce new version release, announce version availability
Relationship: Announcement of new software versions.
Criteria: Designers announce the release and availability of new software versions.
Phrase: Announce new version release

10.
Concepts: announce future updates, announce planned updates
Relationship: Announcement of upcoming updates.
Criteria: Designers plan and announce upcoming software updates or features.
Phrase: Announce future updates

11.
Concepts: announce new features, make developer announcements, announce software updates
Relationship: Announcements related to new features, updates, and development plans.
Criteria: Designers announce new features, updates, and development plans for upcoming software versions.
Phrase: Announce new features and updates

12.
Concepts: share visual updates, provide update previews
Relationship: Sharing visual previews of updates.
Criteria: Designers provide or share visual previews related to upcoming changes and updates.
Phrase: Share visual updates

13.
Concepts: communicate progress, communicate release plans
Relationship: Communication of progress and plans for releases.
Criteria: Designers communicate the progress of updates and plans for future software releases.
Phrase: Communicate release progress

14.
Concepts: update on review status, provide development updates
Relationship: Providing updates on review status and development.
Criteria: Designers provide updates on the status of software reviews and development plans.
Phrase: Provide development updates

15.
Concepts: announce component updates, inform about software updates
Relationship: Information about component-specific updates.
Criteria: Designers provide information about updates to specific software components.
Phrase: Announce component updates

16.
Concepts: user communication, communication of updates
Relationship: Communication of updates to users.
Criteria: Designers provide updates or communicate about the status of the software to users.
Phrase: Communicate updates to users

17.
Concepts: describe update scope, share the magnitude of update
Relationship: Description of the scope and magnitude of updates.
Criteria: Designers describe the nature and extent of upcoming updates.
Phrase: Describe update scope

18.
Concepts: technical detail, list update details
Relationship: Listing technical details of updates.
Criteria: Designers provide detailed information about technical updates, bug fixes, and new components.
Phrase: Provide technical update details

19.
Concepts: detail version features, provide version update notes
Relationship: Detailing features and improvements in specific versions.
Criteria: Designers detail the features and improvements of specific software versions.
Phrase: Detail version features

20.
Concepts: update clarification, clarifying software version types
Relationship: Clarification of software version types.
Criteria: Designers clarify which version of the software is being updated.
Phrase: Clarify software version types

21.
Concepts: discuss future plans, discuss future development
Relationship: Discussion about future plans and development.
Criteria: Designers discuss potential future developments and directions for the product.
Phrase: Discuss future development plans

22.
Concepts: design discussion, discuss feature development
Relationship: Discussion about design and feature development.
Criteria: Designers discuss the scope and details of current and future design features.
Phrase: Discuss design and feature development

23.
Concepts: manage release timeline, set timeline expectations
Relationship: Management and setting of release timelines.
Criteria: Designers provide specific timelines and manage plans for software version releases.
Phrase: Manage release timeline

24.
Concepts: list future features, explain upcoming features
Relationship: Listing and explaining upcoming features.
Criteria: Designers list and discuss features planned for future updates.
Phrase: List future features

25.
Concepts: prioritize feature development, development prioritization
Relationship: Prioritization of feature development.
Criteria: Designers prioritize and schedule the development of specific features.
Phrase: Prioritize feature development

26.
Concepts: seek user context, inquire about user background
Relationship: Seeking information about user context.
Criteria: Designers ask questions to gather more context about the user's situation or background.
Phrase: Seek user context

27.
Concepts: seek user input, clarify user requests
Relationship: Seeking and clarifying user input.
Criteria: Designers seek input or clarification from users to better understand their needs.
Phrase: Seek user input

28.
Concepts: ask follow-up questions, follow up on user requests
Relationship: Asking follow-up questions to gather more information.
Criteria: Designers ask follow-up questions to better understand user needs or requests.
Phrase: Ask follow-up questions

29.
Concepts: solicit user feedback, user feedback and communication, encourage user feedback
Relationship: Encouraging and soliciting user feedback.
Criteria: Designers solicit and encourage users to give feedback and communicate issues.
Phrase: Solicit user feedback

30.
Concepts: encourage user participation, encourage participatory design
Relationship: Encouragement of user participation and feedback.
Criteria: Designers encourage users to provide feedback and participate actively in the design process.
Phrase: Encourage user participation

31.
Concepts: acknowledge user feedback, integrate user feedback
Relationship: Acknowledgment and integration of user feedback.
Criteria: Designers acknowledge and incorporate user feedback into the design process.
Phrase: Acknowledge user feedback

32.
Concepts: inquire about user problems, seek user experience feedback
Relationship: Inquiry about user problems and experiences.
Criteria: Designers ask users about problems they encountered and seek feedback on their experiences.
Phrase: Inquire about user problems

33.
Concepts: accept user suggestion, acknowledge user request, implement user suggestion
Relationship: Acceptance and implementation of user suggestions or requests.
Criteria: Designers acknowledge and agree to user suggestions or requests, planning to incorporate them in future updates.
Phrase: Accept and implement user suggestions

34.
Concepts: plan opinion gathering, plan feedback gathering
Relationship: Planning to gather opinions and feedback.
Criteria: Designers plan to gather user opinions and feedback before starting new features or development iterations.
Phrase: Plan feedback gathering

35.
Concepts: apologize for inconvenience, inconvenience acknowledgment
Relationship: Apology and acknowledgment of inconvenience.
Criteria: Designers apologize for and acknowledge any inconvenience caused to users.
Phrase: Apologize for inconvenience

36.
Concepts: appreciating user support, expressing gratitude and acknowledgment
Relationship: Expression of gratitude and acknowledgment of support.
Criteria: Designers express gratitude for the support and contributions of users.
Phrase: Express gratitude for user support

37.
Concepts: express appreciation, appreciating designers' dedication, recognition of effort
Relationship: Expression of appreciation for designers' efforts.
Criteria: Users express appreciation for the dedication and craftsmanship of the designers.
Phrase: Express appreciation for designers' efforts

38.
Concepts: welcome, reciprocating user greetings
Relationship: Reciprocal greeting and welcome.
Criteria: Designers greet users in a friendly manner and reciprocate greetings.
Phrase: Welcome users

39.
Concepts: share resources, share development plans
Relationship: Sharing resources and development plans.
Criteria: Designers or users share resources, links, or development plans with the community.
Phrase: Share resources and plans

40.
Concepts: seeking community input, seek community consultation
Relationship: Seeking input and consultation from the community.
Criteria: Designers seek feedback or opinions from the community before making decisions.
Phrase: Seek community input

41.
Concepts: foster community interaction, promote community engagement
Relationship: Promotion of community interaction and engagement.
Criteria: Designers and users engage in discussions and actions that foster active participation and interaction within the community.
Phrase: Promote community engagement

42.
Concepts: expressing agreement, confirming agreement
Relationship: Expression and confirmation of agreement.
Criteria: Users express and confirm agreement with statements or opinions.
Phrase: Express agreement

43.
Concepts: justifying feature requests, user input with justifications
Relationship: Providing justifications for feature requests.
Criteria: Users provide reasons and justifications for suggesting specific feature additions.
Phrase: Justify feature requests

44.
Concepts: seeking clarification, seek design clarification
Relationship: Seeking clarification on design matters.
Criteria: Users or designers request clarification on specific design details.
Phrase: Seek design clarification

45.
Concepts: user background, sharing professional background
Relationship: Sharing of user background information.
Criteria: Users share information about their professional or personal background to help understand the community's composition.
Phrase: Share user background

46.
Concepts: using emojis in communication, expressing emotions with emojis
Relationship: Use of emojis to express emotions.
Criteria: Users or designers use emojis to convey emotions or reactions.
Phrase: Use emojis for communication

47.
Concepts: sharing teaching experience, sharing classroom experiences
Relationship: Sharing of teaching and classroom experiences.
Criteria: Users share their teaching experiences and the impact of the software on teaching or learning.
Phrase: Share teaching experiences

48.
Concepts: cross-platform inquiry, inquiring about platform compatibility
Relationship: Inquiry about software platform compatibility.
Criteria: Users inquire about the availability or usage of different software platforms.
Phrase: Inquire about platform compatibility

49.
Concepts: inquiring about software usage, inquiring about software versions
Relationship: Inquiry about software usage and versions.
Criteria: Users ask questions about how to use specific versions of the software.
Phrase: Inquire about software usage

50.
Concepts: seeking help for software access, inquiring about download information
Relationship: Inquiry about accessing and downloading software.
Criteria: Users ask for instructions on how to access or download the software.
Phrase: Seek help for software access

51.
Concepts: seeking usage guidance, requesting usage support
Relationship: Requesting guidance and support for software usage.
Criteria: Users request guidance on how to use the software and express the need for usage help.
Phrase: Request usage guidance

52.
Concepts: sharing positive feedback, praising software features, appreciating software features
Relationship: Expression of positive feedback and appreciation for software features.
Criteria: Users express positive feedback and appreciation for the software and its features.
Phrase: Praise software features

53.
Concepts: giving comparative feedback, comparing to similar applications
Relationship: Providing feedback by comparing to similar applications.
Criteria: Users provide feedback comparing the software to other applications.
Phrase: Give comparative feedback

54.
Concepts: sharing user experiences, commenting on software usability
Relationship: Sharing experiences and commenting on usability.
Criteria: Users provide reviews or opinions about the software's usability and effectiveness.
Phrase: Share user experiences

55.
Concepts: provide feedback, suggesting software improvements, providing feedback and suggestions
Relationship: Providing feedback and suggestions for improvement.
Criteria: Users offer feedback and suggestions on the software's features or development direction.
Phrase: Provide feedback and suggestions

56.
Concepts: make user requests, requesting specific features
Relationship: Requesting new features or improvements.
Criteria: Users request new features or improvements for the software.
Phrase: Make user requests

57.
Concepts: proposing new features, making feature suggestions
Relationship: Suggesting new features and improvements.
Criteria: Users or designers suggest the addition of new features to enhance the platform.
Phrase: Propose new features

58.
Concepts: checking for updates, inquire about update timeline
Relationship: Inquiry about the timeline for updates.
Criteria: Users inquire about the schedule for upcoming software updates.
Phrase: Inquire about update timeline

59.
Concepts: express personal interest
Relationship: Expression of personal interest related to the software.
Criteria: Designers share their personal interests related to the software's subject matter.
Phrase: Express personal interest

60.
Concepts: explain feature functionality
Relationship: Explanation of how a feature works.
Criteria: Designers explain the functionality of a specific feature or its operation.
Phrase: Explain feature functionality
---