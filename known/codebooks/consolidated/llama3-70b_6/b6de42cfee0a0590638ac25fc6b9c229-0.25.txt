You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: questioning access, requesting software access
- User inquires about accessing a specific feature or resource.
- Requesting or seeking access to software, features, or resources.

2.
Concepts: justifying request, ask for resources, user manual request
- A user justifies a request for a manual or documentation.
- A user asks for resources, such as a user manual or download link.
- A user requests a user manual or documentation for the platform.

3.
Concepts: asking about usage, information seeking
- Users ask questions about the software or its features.
- Users asking questions to gain knowledge or resources related to the software.

4.
Concepts: seek usage instructions, request guidance
- Seeking instructions or guidance on usage
- A user requests guidance or instructions on how to use a feature or functionality.

5.
Concepts: seeking help, seeking technical assistance
- A user seeks help or guidance from the designer or others.
- Users request technical assistance or guidance on how to use the software.

6.
Concepts: catering to user needs, balancing user needs, aligning with user needs
- Catering to or accommodating the needs and preferences of users.
- Balancing or weighing the needs and preferences of different users or groups.
- Aligning the application's features with the needs and requirements of users.

7.
Concepts: asking about user needs, understanding user needs, trying to understand needs
- Designer asks users about their needs or requirements.
- Expressing comprehension or understanding of a user's needs or requests.
- The developer seeks to understand the needs or concerns of users.

8.
Concepts: resource request, community resource
- Requesting resources or support materials
- User requests or mentions a community resource or material.

9.
Concepts: express needs, community need
- Users express their needs or requirements within the online community.
- A user expresses a need or desire for a feature or improvement that benefits the community.

10.
Concepts: user input, user input/feedback/suggestion with justifications
- Input, opinions, or feedback provided by users.
- Providing input, feedback, or suggestions with accompanying justifications or explanations.

11.
Concepts: plan for iterative feedback, inquiring user input for future iterations, iterative development based on user feedback
- A designer plans for iterative feedback or gathering opinions.
- Inquiring about user input or feedback for future development
- The speaker develops or refines a product or feature based on user feedback and input.

12.
Concepts: encourage feedback, respond to user queries
- Designer initiates or responds to user feedback, encouraging open communication.
- Designers respond to user queries or engage with user comments, indicating active communication.

13.
Concepts: offer solutions, provide practical advice
- A designer offers a solution or workaround to a user's problem or question.
- A designer provides practical advice or a workaround for a specific issue.

14.
Concepts: share workaround, usability workaround, provide temporary solution
- A designer shares a workaround or a temporary solution.
- The developer provides a usability workaround or tip for a problem or issue.
- The developer provides a temporary solution or workaround for a problem or issue.

15.
Concepts: offer alternative solutions, offering/seeking alternative
- Designers are open to alternative solutions and offer them.
- A user or designer offers or seeks an alternative solution.

16.
Concepts: propose design ideas, propose potential solution, share potential solutions
- A designer proposes a design idea or solution to the community.
- Proposing a potential solution or idea
- A designer shares potential solutions or ideas.

17.
Concepts: consideration, consider comprehensive solution
- A designer considers a specific issue or problem.
- A designer considers a comprehensive solution to a problem.

18.
Concepts: confirm the diagnose, offers a diagnose for the problem
- User confirms or agrees with designer's diagnosis of an issue.
- Designer offers a diagnosis or solution to a problem.

19.
Concepts: technical issue, technical inquiry, technical question
- A user reports a technical issue or problem.
- Instances where users ask technical questions about the platform, indicating areas of user interest or potential issues.
- User asks a technical question about the app's functionality or usage.

20.
Concepts: troubleshooting, engage in troubleshooting
- A designer troubleshoots an issue or asks for help.
- A user engages in troubleshooting or helps resolve an issue.

21.
Concepts: problem solving, analyzing the problem
- Problem solving involves discussing or addressing problems or challenges.
- Analyzing or troubleshooting a problem or issue to identify the cause or solution.

22.
Concepts: announcement, announcements
- Making announcements about updates, releases, or events
- General announcement involves making a public declaration or statement to a group or community.

23.
Concepts: inform about updates, communicating updates
- The developer informs users about updates or new releases.
- Designer communicates with users about updates, releases, or other information.

24.
Concepts: app updates, informing about changes
- Share info on app release involves sharing updates or information about an app's release or development.
- Informing the community about upcoming changes or updates to the application.

25.
Concepts: communicate ongoing work, share info about development update, sharing information about current feature development
- The developer communicates about ongoing work or development.
- Sharing information about development updates or changes
- Sharing information about current or ongoing feature development.

26.
Concepts: describing update scope, providing update details
- Designer or developer describes the scope or details of an update.
- Designers provide detailed information about updates, including technical details and overviews of changes.

27.
Concepts: explain development process, discussing the release process
- Designer explains the process of developing or updating the app.
- A designer discusses the process of releasing a new version or update.

28.
Concepts: update in progress, providing a progress update
- The designer assures the community that an update is in progress.
- A designer shares an update about their progress or work.

29.
Concepts: clarify version type, version clarification
- Clarifications about the type or nature of a version or release.
- User or designer clarifies the version of the app being referred to.

30.
Concepts: checking for updates, inquire about updates and features
- Checking or inquiring about updates, releases, or changes to software or features.
- Users ask about future updates or new features.

31.
Concepts: engage with development process, interest in platform development
- A user shows interest or inquires about the development process.
- A user expresses interest in platform development or updates.

32.
Concepts: time sensitivity, apologizing for inconvenience
- A designer apologizes or references a time-sensitive issue.
- A designer shows consideration or apologizes for an inconvenience.
===
Here are the definitions for each code:

---
1.
Concepts: questioning access, requesting software access
Relationship: Access and request are closely related, as users ask about accessing specific features or resources.
Criteria: Users inquire about accessing specific features or resources.
Phrase: Requesting access to software features or resources.

2.
Concepts: justifying request, ask for resources, user manual request
Relationship: Justification and request are linked, as users provide reasons for requesting resources or manuals.
Criteria: Users justify requests for resources, manuals, or documentation.
Phrase: Requesting resources with justification.

3.
Concepts: asking about usage, information seeking
Relationship: Asking and seeking are related, as users ask questions to gain knowledge or resources.
Criteria: Users ask questions to gain knowledge or resources related to software.
Phrase: Seeking information about software usage.

4.
Concepts: seek usage instructions, request guidance
Relationship: Seeking and requesting are closely related, as users ask for instructions or guidance.
Criteria: Users request guidance or instructions on software usage.
Phrase: Requesting usage instructions or guidance.

5.
Concepts: seeking help, seeking technical assistance
Relationship: Seeking and requesting are related, as users ask for help or technical assistance.
Criteria: Users request technical assistance or guidance.
Phrase: Seeking technical assistance or help.

6.
Concepts: catering to user needs, balancing user needs, aligning with user needs
Relationship: Catering, balancing, and aligning are related, as designers accommodate user needs and preferences.
Criteria: Designers cater to, balance, or align with user needs and preferences.
Phrase: Catering to user needs and preferences.

7.
Concepts: asking about user needs, understanding user needs, trying to understand needs
Relationship: Asking, understanding, and trying to understand are related, as designers seek to comprehend user needs.
Criteria: Designers ask about, understand, or try to understand user needs.
Phrase: Understanding user needs and requirements.

8.
Concepts: resource request, community resource
Relationship: Request and resource are related, as users request resources or support materials.
Criteria: Users request resources or support materials.
Phrase: Requesting community resources.

9.
Concepts: express needs, community need
Relationship: Expressing and community need are related, as users express needs that benefit the community.
Criteria: Users express needs or desires that benefit the community.
Phrase: Expressing community needs or desires.

10.
Concepts: user input, user input/feedback/suggestion with justifications
Relationship: Input, feedback, and suggestion are related, as users provide opinions with justifications.
Criteria: Users provide input, feedback, or suggestions with justifications.
Phrase: Providing user input with justifications.

11.
Concepts: plan for iterative feedback, inquiring user input for future iterations, iterative development based on user feedback
Relationship: Planning, inquiring, and iterative development are related, as designers gather feedback for future development.
Criteria: Designers plan for, inquire about, or develop based on user feedback.
Phrase: Planning for iterative feedback and development.

12.
Concepts: encourage feedback, respond to user queries
Relationship: Encouraging and responding are related, as designers initiate or respond to user feedback.
Criteria: Designers encourage or respond to user feedback.
Phrase: Encouraging and responding to user feedback.

13.
Concepts: offer solutions, provide practical advice
Relationship: Offering and providing are related, as designers provide solutions or practical advice.
Criteria: Designers offer solutions or provide practical advice.
Phrase: Offering solutions or practical advice.

14.
Concepts: share workaround, usability workaround, provide temporary solution
Relationship: Sharing, providing, and temporary solution are related, as designers share workarounds or temporary solutions.
Criteria: Designers share workarounds or provide temporary solutions.
Phrase: Sharing workarounds or temporary solutions.

15.
Concepts: offer alternative solutions, offering/seeking alternative
Relationship: Offering and seeking are related, as designers offer or seek alternative solutions.
Criteria: Designers offer or seek alternative solutions.
Phrase: Offering or seeking alternative solutions.

16.
Concepts: propose design ideas, propose potential solution, share potential solutions
Relationship: Proposing, proposing, and sharing are related, as designers propose or share potential solutions.
Criteria: Designers propose or share potential solutions.
Phrase: Proposing or sharing potential solutions.

17.
Concepts: consideration, consider comprehensive solution
Relationship: Consideration and comprehensive solution are related, as designers consider solutions.
Criteria: Designers consider comprehensive solutions.
Phrase: Considering comprehensive solutions.

18.
Concepts: confirm the diagnose, offers a diagnose for the problem
Relationship: Confirming and offering are related, as users confirm or designers offer diagnoses.
Criteria: Users confirm or designers offer diagnoses.
Phrase: Confirming or offering diagnoses.

19.
Concepts: technical issue, technical inquiry, technical question
Relationship: Technical issue, inquiry, and question are related, as users report or ask about technical issues.
Criteria: Users report or ask about technical issues.
Phrase: Reporting or asking about technical issues.

20.
Concepts: troubleshooting, engage in troubleshooting
Relationship: Troubleshooting and engaging are related, as designers troubleshoot or engage in troubleshooting.
Criteria: Designers troubleshoot or engage in troubleshooting.
Phrase: Troubleshooting or engaging in troubleshooting.

21.
Concepts: problem solving, analyzing the problem
Relationship: Problem solving and analyzing are related, as designers discuss or address problems.
Criteria: Designers discuss or address problems.
Phrase: Solving or analyzing problems.

22.
Concepts: announcement, announcements
Relationship: Announcement is a standalone concept, as designers make public declarations.
Criteria: Designers make announcements.
Phrase: Making announcements.

23.
Concepts: inform about updates, communicating updates
Relationship: Informing and communicating are related, as designers inform users about updates.
Criteria: Designers inform users about updates.
Phrase: Informing about updates.

24.
Concepts: app updates, informing about changes
Relationship: App updates and informing are related, as designers inform users about updates or changes.
Criteria: Designers inform users about updates or changes.
Phrase: Informing about app updates or changes.

25.
Concepts: communicate ongoing work, share info about development update, sharing information about current feature development
Relationship: Communicating, sharing, and informing are related, as designers share information about development.
Criteria: Designers communicate or share information about development.
Phrase: Communicating or sharing development updates.

26.
Concepts: describing update scope, providing update details
Relationship: Describing and providing are related, as designers describe or provide details about updates.
Criteria: Designers describe or provide details about updates.
Phrase: Describing or providing update details.

27.
Concepts: explain development process, discussing the release process
Relationship: Explaining and discussing are related, as designers explain or discuss development processes.
Criteria: Designers explain or discuss development processes.
Phrase: Explaining or discussing development processes.

28.
Concepts: update in progress, providing a progress update
Relationship: Update and providing are related, as designers assure or provide progress updates.
Criteria: Designers assure or provide progress updates.
Phrase: Providing progress updates.

29.
Concepts: clarify version type, version clarification
Relationship: Clarifying and version are related, as designers clarify version types or releases.
Criteria: Designers clarify version types or releases.
Phrase: Clarifying version types or releases.

30.
Concepts: checking for updates, inquire about updates and features
Relationship: Checking and inquiring are related, as users check or inquire about updates or features.
Criteria: Users check or inquire about updates or features.
Phrase: Checking or inquiring about updates or features.

31.
Concepts: engage with development process, interest in platform development
Relationship: Engaging and interest are related, as users show interest in development processes.
Criteria: Users show interest in development processes.
Phrase: Engaging with development processes.

32.
Concepts: time sensitivity, apologizing for inconvenience
Relationship: Time sensitivity and apologizing are related, as designers apologize for time-sensitive issues.
Criteria: Designers apologize for time-sensitive issues.
Phrase: Apologizing for time-sensitive issues.