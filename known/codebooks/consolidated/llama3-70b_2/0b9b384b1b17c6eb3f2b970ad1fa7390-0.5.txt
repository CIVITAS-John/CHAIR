You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: promotes community involvement, fosters community participation
- The designer promotes or ensures community involvement in development.
- The designer encourages or fosters participation within the community.

2.
Concepts: expresses community appreciation, expresses gratitude to community
- The designer expresses gratitude or appreciation towards the community.
- The designer expresses gratitude towards the community for their input or support.

3.
Concepts: promote transparency, maintain transparency
- Designer promotes transparency or openness in communication.
- The designer provides transparent information about the development process or timelines.

4.
Concepts: foster open dialogue, encourage open communication
- Designer fosters open dialogue and feedback.
- Designer encourages open communication for problem-solving and suggestions.

5.
Concepts: encourages discussion, encouraging in-group discussion
- The designer encourages discussion or participation within the community.
- Designer encourages in-group discussion or sharing of concerns.

6.
Concepts: sharing visual aids, sharing visual content
- A designer shares an image or visual aid to facilitate communication.
- A user or designer shares an image or visual content to convey information.

7.
Concepts: confirms update schedule, provides update schedule
- The designer confirms the schedule or timeline for updates to the online community.
- The designer provides a specific timeline for updates or developments to the online community.

8.
Concepts: announcement of plans, announces future consultation plans
- Designer announces plans or updates for the online community.
- The designer announces plans for future consultation or feedback to the online community.

9.
Concepts: confirms future features, discusses future updates
- The designer confirms future features or developments to the online community.
- The designer discusses or mentions future updates or developments to the online community.

10.
Concepts: notifying the community, updating the community
- A designer informs community members about updates or releases to keep them informed.
- A designer provides an update on the community or software development to keep users informed.

11.
Concepts: seeking clarification, seeking information
- A user or designer seeks clarification on a topic.
- A user or designer asks for information or clarification on a specific topic.
- A user or designer seeks information or clarification on a specific topic.

12.
Concepts: inquire about user context, seeking context for feature use
- Designer inquires about the context or environment of use, seeking additional information.
- A designer seeks context or information about feature use or implementation.

13.
Concepts: responding to user inquiries, engaging with a user query
- The designer responds to a user's query or concern.
- A user or designer engages with a query or responds to a question to provide assistance or clarification.

14.
Concepts: asking follow-up questions, asking clarifying questions, seeking clarification on user needs
- A designer asks a follow-up question to clarify a user's issue or concern.
- A user or designer asks follow-up or clarifying questions to gain a better understanding of a topic or issue.
- A user or designer clarifies or seeks clarification on user needs through follow-up questions or requests for more information.

15.
Concepts: inquires about user issues, inquiring about issues
- Designer inquires about problems or issues encountered by users.
- The designer or user inquires about issues or problems encountered by others in the online community.

16.
Concepts: providing technical explanations, discussing technical specifications
- Explaining technical requirements or specifications for the software.
- Designer provides technical explanations or information.
- The designer provides technical details about the software.

17.
Concepts: providing specific feedback on software or features, providing strategic feedback for software development
- The user provides specific feedback on the software or a feature.
- The user provides strategic feedback for software development.

18.
Concepts: comparing to others, comparing to other applications
- User compares the software to other similar products.
- A user compares the Physics Lab to other similar applications or software.

19.
Concepts: highlighting ui challenges, highlight design challenges
- Designer highlights challenges or difficulties with the user interface.
- Designer highlights specific challenges or issues in the design process.

20.
Concepts: acknowledge complexity, communicate update complexity
- Designer mentions the complexity of an upcoming release or feature and acknowledges its complexity.
- Designer explains the complexity of an update and communicates the complexity and expected release timeline.

21.
Concepts: explain version limitations, explain design limitations, clarify software limitations
- Designer explains the limitations of the current version to provide context or justification.
- Designer explains limitations or constraints of a system or tool to provide context or justification.
- Designer clarifies limitations or constraints of the software or a specific feature to provide context or justification.

22.
Concepts: apologizing for delays, apologizing for timing
- A designer apologizes for delays or issues with the software.
- A user or designer apologizes for the timing of a message or communication to show consideration.

23.
Concepts: apologizing for inconvenience, apologizing for disturbance
- The designer apologizes for any inconvenience or issue.
- A user or designer apologizes for any inconvenience or disturbance caused.

24.
Concepts: expressing confusion, express uncertainty
- Expressing confusion or uncertainty about a topic or process.
- User expresses uncertainty or hesitation about a topic or feature.

25.
Concepts: emphasizing impact, emphasizing importance
- A designer emphasizes the impact or significance of an update or feature.
- The designer emphasizes the importance of improving a specific feature or aspect.

26.
Concepts: explaining feature importance, explaining feature significance
- A designer explains the importance or significance of a particular feature.
- The designer explains the significance of a feature for long-term stability.

27.
Concepts: explaining feature benefits, explaining component improvements
- A designer explains a feature or update and its benefits for problem-solving.
- The designer explains improvements made to components or features.

28.
Concepts: explaining software concepts, explaining software features
- The designer explains a concept or feature of the software.
- Designer explains features or characteristics of the software.

29.
Concepts: explaining features, providing explanations
- Explaining or describing a specific feature or functionality.
- Providing an explanation or description of a concept or feature

30.
Concepts: clarifying software version, informing about software version
- A designer clarifies the version of the software.
- A designer informs about the software version.

31.
Concepts: clarify technical issues, clarify system requirements
- Designer clarifies system compatibility or technical issues to provide context or justification.
- Designer clarifies system requirements or compatibility to provide context or justification.

32.
Concepts: providing rationales, providing design rationale
- A user or designer provides a rationale or explanation for a decision.
- Designer explains the reasoning behind a development decision.
===
Here are the definitions for each code:

---
1.
Concepts: promotes community involvement, fosters community participation
Relationship: The designer's actions lead to increased community involvement and participation.
Criteria: The designer takes actions to encourage community involvement and participation.
Phrase: Fosters community involvement and participation.

2.
Concepts: expresses community appreciation, expresses gratitude to community
Relationship: The designer's expression of gratitude acknowledges the community's contributions.
Criteria: The designer expresses gratitude towards the community for their input or support.
Phrase: Expresses community appreciation.

3.
Concepts: promote transparency, maintain transparency
Relationship: The designer's actions ensure openness and clarity in communication.
Criteria: The designer promotes transparency in communication and development.
Phrase: Promotes transparency.

4.
Concepts: foster open dialogue, encourage open communication
Relationship: The designer's encouragement leads to open and honest communication.
Criteria: The designer fosters open dialogue and encourages open communication.
Phrase: Fosters open dialogue.

5.
Concepts: encourages discussion, encouraging in-group discussion
Relationship: The designer's encouragement leads to discussion and sharing within the community.
Criteria: The designer encourages discussion and in-group sharing.
Phrase: Encourages discussion.

6.
Concepts: sharing visual aids, sharing visual content
Relationship: The shared visual aids facilitate communication and understanding.
Criteria: The designer shares visual aids to convey information.
Phrase: Shares visual aids.

7.
Concepts: confirms update schedule, provides update schedule
Relationship: The designer's confirmation provides a clear timeline for updates.
Criteria: The designer confirms the update schedule.
Phrase: Confirms update schedule.

8.
Concepts: announcement of plans, announces future consultation plans
Relationship: The designer's announcement informs the community of future plans.
Criteria: The designer announces plans for future consultation or feedback.
Phrase: Announces future plans.

9.
Concepts: confirms future features, discusses future updates
Relationship: The designer's confirmation and discussion provide insight into future developments.
Criteria: The designer confirms and discusses future features and updates.
Phrase: Confirms future features.

10.
Concepts: notifying the community, updating the community
Relationship: The designer's notification keeps the community informed.
Criteria: The designer notifies the community of updates or releases.
Phrase: Notifies the community.

11.
Concepts: seeking clarification, seeking information
Relationship: The user or designer seeks clarification to understand a topic better.
Criteria: A user or designer seeks clarification on a specific topic.
Phrase: Seeks clarification.

12.
Concepts: inquire about user context, seeking context for feature use
Relationship: The designer's inquiry seeks to understand the user's context.
Criteria: The designer inquires about the user's context or environment.
Phrase: Inquires about user context.

13.
Concepts: responding to user inquiries, engaging with a user query
Relationship: The designer's response addresses the user's query or concern.
Criteria: The designer responds to a user's query or concern.
Phrase: Responds to user inquiries.

14.
Concepts: asking follow-up questions, asking clarifying questions, seeking clarification on user needs
Relationship: The designer's follow-up questions seek to clarify user needs.
Criteria: A user or designer asks follow-up questions to clarify user needs.
Phrase: Asks follow-up questions.

15.
Concepts: inquires about user issues, inquiring about issues
Relationship: The designer's inquiry seeks to understand user issues.
Criteria: The designer inquires about user issues or problems.
Phrase: Inquires about user issues.

16.
Concepts: providing technical explanations, discussing technical specifications
Relationship: The designer's explanation provides technical context.
Criteria: The designer provides technical explanations or information.
Phrase: Provides technical explanations.

17.
Concepts: providing specific feedback on software or features, providing strategic feedback for software development
Relationship: The user's feedback provides insight for software development.
Criteria: The user provides specific feedback on software or features.
Phrase: Provides specific feedback.

18.
Concepts: comparing to others, comparing to other applications
Relationship: The user's comparison provides context for the software.
Criteria: A user compares the software to other similar applications.
Phrase: Compares to others.

19.
Concepts: highlighting ui challenges, highlight design challenges
Relationship: The designer's highlighting of challenges provides context for design decisions.
Criteria: The designer highlights UI or design challenges.
Phrase: Highlights design challenges.

20.
Concepts: acknowledge complexity, communicate update complexity
Relationship: The designer's acknowledgment provides context for the complexity of updates.
Criteria: The designer acknowledges and communicates update complexity.
Phrase: Acknowledges complexity.

21.
Concepts: explain version limitations, explain design limitations, clarify software limitations
Relationship: The designer's explanation provides context for software limitations.
Criteria: The designer explains software limitations or constraints.
Phrase: Explains software limitations.

22.
Concepts: apologizing for delays, apologizing for timing
Relationship: The designer's apology shows consideration for the community.
Criteria: A user or designer apologizes for delays or timing.
Phrase: Apologizes for delays.

23.
Concepts: apologizing for inconvenience, apologizing for disturbance
Relationship: The designer's apology shows consideration for the community's experience.
Criteria: A user or designer apologizes for inconvenience or disturbance.
Phrase: Apologizes for inconvenience.

24.
Concepts: expressing confusion, express uncertainty
Relationship: The user's expression of confusion or uncertainty seeks clarification.
Criteria: A user expresses uncertainty or confusion about a topic.
Phrase: Expresses confusion.

25.
Concepts: emphasizing impact, emphasizing importance
Relationship: The designer's emphasis highlights the significance of an update or feature.
Criteria: The designer emphasizes the impact or importance of an update or feature.
Phrase: Emphasizes importance.

26.
Concepts: explaining feature importance, explaining feature significance
Relationship: The designer's explanation provides context for the feature's significance.
Criteria: The designer explains the importance or significance of a feature.
Phrase: Explains feature importance.

27.
Concepts: explaining feature benefits, explaining component improvements
Relationship: The designer's explanation highlights the benefits of a feature or update.
Criteria: The designer explains the benefits of a feature or update.
Phrase: Explains feature benefits.

28.
Concepts: explaining software concepts, explaining software features
Relationship: The designer's explanation provides context for software features or concepts.
Criteria: The designer explains software features or concepts.
Phrase: Explains software concepts.

29.
Concepts: explaining features, providing explanations
Relationship: The designer's explanation provides context for a feature or functionality.
Criteria: The designer explains a feature or functionality.
Phrase: Explains features.

30.
Concepts: clarifying software version, informing about software version
Relationship: The designer's clarification provides context for the software version.
Criteria: The designer clarifies the software version.
Phrase: Clarifies software version.

31.
Concepts: clarify technical issues, clarify system requirements
Relationship: The designer's clarification provides context for technical issues or system requirements.
Criteria: The designer clarifies technical issues or system requirements.
Phrase: Clarifies technical issues.

32.
Concepts: providing rationales, providing design rationale
Relationship: The designer's rationale provides context for design decisions.
Criteria: The designer provides a rationale or explanation for a decision.
Phrase: Provides design rationales.