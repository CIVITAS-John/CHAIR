You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (18 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
18. 
Concepts: {Repeat the input 18}
Relationship: {What is logical relationship between concepts in code 18, or N/A if not applicable}
Criteria: {Who did what, and how for code 18}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: appreciate community support, express appreciation for contributions
- Users express support for designers, and designers acknowledge community contributions.
- Users express gratitude and appreciation for the contributions of designers and community members.

2.
Concepts: seek usage instructions, request user documentation
- Users ask for instructions on how to effectively use specific features of the software.
- Users request guidance on specific features or inquire about the availability of user documentation.

3.
Concepts: technical question, ask a question
- Users ask various questions related to software usage and functionality.
- Users ask questions to seek information or clarification regarding software functionalities.

4.
Concepts: suggest software improvements, suggest usability improvements
- Users suggest improvements to enhance software usability in educational settings.
- Users suggest new features or improvements to enhance the software's usability and functionality.

5.
Concepts: share user experiences, share successful classroom experiences
- Users discuss their experiences and the impact of the software on their educational practices.
- Users share feedback and successful classroom experiences related to the software's features.

6.
Concepts: express feature appreciation, provide positive reviews
- Users express positive feedback regarding specific features of the software.
- Users positively evaluate the software's usability and express satisfaction with its effectiveness.

7.
Concepts: seek user input, solicit user feedback
- Designers invite community members to share ideas and suggestions for future improvements.
- Designers invite and encourage users to provide feedback or suggestions regarding their experiences.

8.
Concepts: validate user request, accept user requests
- Designers validate user requests, confirming they will be addressed.
- Designers acknowledge and commit to implementing user suggestions and requests.

9.
Concepts: seek teacher consultation, consult on educational standards
- Designers consult teachers for insights regarding their educational needs and content.
- A designer consults with educators to ensure alignment with current educational standards.

10.
Concepts: ask follow-up questions, ask followup question on usage scenario
- Designers ask clarifying or follow-up questions to better understand user needs.
- Designers ask about the technological context to understand user needs better.

11.
Concepts: provide product updates, share development updates
- Designers share information about the current status and future plans for the software.
- Designers provide detailed information on new features and updates in the software.

12.
Concepts: announce software updates, software updates and downloads
- Designers announce software updates and the release of new versions.
- Designers inform users about software updates, downloads, and new versions available in the community.

13.
Concepts: list new features, introduce new components
- Designers announce new features and details included in software version updates.
- Designers announce new components and features added to the software.

14.
Concepts: feature preview, preview upcoming updates
- Designers share images or information about upcoming updates or features that are in preparation.
- Designers describe features planned for future implementation and list upcoming updates.

15.
Concepts: confirm upcoming update, announce component updates
- Designers confirm upcoming updates and their expected release dates.
- Designers announce upcoming changes to components in future updates.

16.
Concepts: provide future plans, promise future features
- Designers outline future plans for features and their intended functionalities.
- Designers assure users that certain features will be implemented in the future.

17.
Concepts: explain contextual challenges, highlight technological limitations
- Users describe the outdated technology in their schools to contextualize their questions.
- Users highlight the technical constraints and limitations of outdated technology in their schools.

18.
Concepts: confirm compatibility, suggest checking compatibility of the system
- Designers confirm that the software is compatible with specific hardware or versions.
- Designers suggest checking system compatibility or requirements for the software.
===
---
Definitions for each code (18 in total):
1. 
Concepts: appreciate community support, express appreciation for contributions  
Relationship: Users and designers engage in a reciprocal acknowledgment of support and contributions.  
Criteria: Users express gratitude for community contributions, and designers acknowledge this support.  
Phrase: Acknowledge community contributions.  

2. 
Concepts: seek usage instructions, request user documentation  
Relationship: Users actively seek information to enhance their understanding of the software.  
Criteria: Users request guidance on using software features effectively.  
Phrase: Request usage guidance.  

3. 
Concepts: technical question, ask a question  
Relationship: Users seek clarification or information regarding software functionalities.  
Criteria: Users ask questions to gain insights into software usage.  
Phrase: Inquire about software functionalities.  

4. 
Concepts: suggest software improvements, suggest usability improvements  
Relationship: Users contribute ideas aimed at enhancing the software's effectiveness.  
Criteria: Users propose enhancements to improve software usability and functionality.  
Phrase: Propose software enhancements.  

5. 
Concepts: share user experiences, share successful classroom experiences  
Relationship: Users reflect on their practical experiences with the software.  
Criteria: Users discuss their successful educational practices using the software.  
Phrase: Share educational experiences.  

6. 
Concepts: express feature appreciation, provide positive reviews  
Relationship: Users evaluate and provide feedback on specific software features.  
Criteria: Users express satisfaction and positive evaluations of the software's effectiveness.  
Phrase: Provide positive feedback.  

7. 
Concepts: seek user input, solicit user feedback  
Relationship: Designers actively engage with users to gather insights.  
Criteria: Designers encourage users to share suggestions for future improvements.  
Phrase: Solicit user suggestions.  

8. 
Concepts: validate user request, accept user requests  
Relationship: Designers acknowledge and commit to addressing user needs.  
Criteria: Designers confirm they will consider and implement user suggestions.  
Phrase: Acknowledge user requests.  

9. 
Concepts: seek teacher consultation, consult on educational standards  
Relationship: Designers engage with educators to align software with educational needs.  
Criteria: Designers consult teachers to ensure relevance to educational standards.  
Phrase: Consult educators for insights.  

10. 
Concepts: ask follow-up questions, ask followup question on usage scenario  
Relationship: Designers seek to clarify user needs through additional inquiries.  
Criteria: Designers ask clarifying questions to better understand user contexts.  
Phrase: Clarify user needs.  

11. 
Concepts: provide product updates, share development updates  
Relationship: Designers communicate the status and progress of software development.  
Criteria: Designers share information about current and future software developments.  
Phrase: Share product updates.  

12. 
Concepts: announce software updates, software updates and downloads  
Relationship: Designers inform users about new software versions and updates.  
Criteria: Designers announce the availability of software updates and downloads.  
Phrase: Announce software releases.  

13. 
Concepts: list new features, introduce new components  
Relationship: Designers provide details on enhancements included in updates.  
Criteria: Designers announce new features and components added to the software.  
Phrase: Introduce new features.  

14. 
Concepts: feature preview, preview upcoming updates  
Relationship: Designers generate anticipation for future software enhancements.  
Criteria: Designers share information about upcoming features and updates.  
Phrase: Preview upcoming features.  

15. 
Concepts: confirm upcoming update, announce component updates  
Relationship: Designers communicate expected changes and their timelines.  
Criteria: Designers confirm and announce upcoming software updates.  
Phrase: Confirm upcoming changes.  

16. 
Concepts: provide future plans, promise future features  
Relationship: Designers outline their vision for software development.  
Criteria: Designers assure users of planned future features and functionalities.  
Phrase: Outline future plans.  

17. 
Concepts: explain contextual challenges, highlight technological limitations  
Relationship: Users contextualize their inquiries by describing existing challenges.  
Criteria: Users articulate the limitations posed by outdated technology in their environments.  
Phrase: Describe technological challenges.  

18. 
Concepts: confirm compatibility, suggest checking compatibility of the system  
Relationship: Designers provide assurance regarding software and hardware compatibility.  
Criteria: Designers confirm and suggest checking system requirements for the software.  
Phrase: Confirm system compatibility.  
---