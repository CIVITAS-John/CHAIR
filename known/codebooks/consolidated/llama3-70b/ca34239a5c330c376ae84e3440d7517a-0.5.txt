You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (15 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
15. {Repeat the input 15}
Relationship: {The logical relationship between concepts in input 15}
Criteria: {A sentence of consolidated criteria for code 15}
Label: {A consolidated label of code 15}
Category: {2-4 words for code 15}
---
~~~
1. demonstration requests, physics simulation requests.
- Refers to specific requests for demonstrations or simulations.
- Requests or suggestions for physics simulations or experiments.

2. internet restrictions, educational constraints.
- The restrictions or blocks on internet access in a school or educational setting.
- Refers to restrictions or limitations imposed by a school and identifying challenges or difficulties in educational settings.

3. internet access, technology discussion.
- Discussions about internet connectivity in educational settings.
- Discussing or inquiring about technology-related topics or using technology in a learning context.

4. expert input, teacher response.
- Soliciting input or feedback from experts or teachers.
- Response from a teacher to a question or inquiry, and seeking guidance or assistance from teachers.

5. learning support, learning software design.
- Software's ability to support learning and educational activities.
- Designing software that supports learning or educational goals.

6. user expectations, expectation management.
- Users' expectations or assumptions about updates or features.
- Managing user expectations about software development, and estimating or predicting timelines for future developments or updates.

7. optimization, design refinement.
- Refining or optimizing software to improve performance or functionality.
- Improving or refining the design process or refining existing features or functionality.

8. interface challenges, browser interface problem.
- User queries or discussions indicating difficulties with using the software interface.
- Refers to problems or difficulties with the browser interface.

9. system limitations, system capabilities.
- Discussion of limitations or constraints of a system or platform.
- Referring to the capabilities of a network or operating system or discussing technical capabilities or limitations.

10. file sharing, content sharing.
- Attaching or sharing images or files.
- Sharing or posting images or visual content or technical aspects of uploading and sharing content.

11. feature list, platform features.
- Lists or catalogs of features or functionalities available on the platform.
- References to specific features or capabilities of the platform being used or discussing accessing the platform.

12. software access, software accessibility.
- Availability or access to the Physics Lab platform or its resources.
- Discussions or inquiries about accessing or using the Physics Lab software.

13. input methods, user interaction.
- Methods or mechanisms for user input or data entry.
- Interacting with software or systems through user input or interfaces.

14. user feedback.
- Direct user comments on the software's usability, functionality, or satisfaction.
- Providing user reviews, and expressing satisfaction or pleasure with a particular feature or functionality.

15. feedback requests.
- Asking for or encouraging users to provide feedback or opinions.
- Encouraging user interaction or participation, and encouraging discussion or questions, or inviting others to share their thoughts.
===
---
Categories: 
* Community Engagement
* Technical Development
* Educational Context
* User Experience
* Software Functionality

Definitions for each code:

1. demonstration requests, physics simulation requests.
Relationship: Inclusion (requests for demonstrations or simulations are a type of request)
Criteria: Requests for specific demonstrations or simulations in physics.
Label: Simulation Requests
Category: Community Engagement

2. internet restrictions, educational constraints.
Relationship: Inclusion (internet restrictions are a type of educational constraint)
Criteria: Restrictions or limitations imposed by educational settings on internet access.
Label: Educational Constraints
Category: Educational Context

3. internet access, technology discussion.
Relationship: Parallel (both concepts are related to technology in educational settings)
Criteria: Discussions about internet connectivity or technology in educational settings.
Label: Technology Discussion
Category: Educational Context

4. expert input, teacher response.
Relationship: Inclusion (teacher response is a type of expert input)
Criteria: Soliciting input or feedback from experts or teachers.
Label: Expert Input
Category: Community Engagement

5. learning support, learning software design.
Relationship: Inclusion (learning software design is a type of learning support)
Criteria: Designing software that supports learning or educational goals.
Label: Learning Support
Category: Software Functionality

6. user expectations, expectation management.
Relationship: Inclusion (expectation management is a type of managing user expectations)
Criteria: Managing user expectations about software development or updates.
Label: User Expectations
Category: User Experience

7. optimization, design refinement.
Relationship: Inclusion (design refinement is a type of optimization)
Criteria: Refining or optimizing software to improve performance or functionality.
Label: Design Optimization
Category: Technical Development

8. interface challenges, browser interface problem.
Relationship: Inclusion (browser interface problem is a type of interface challenge)
Criteria: User queries or discussions indicating difficulties with using the software interface.
Label: Interface Challenges
Category: User Experience

9. system limitations, system capabilities.
Relationship: Parallel (both concepts are related to system capabilities)
Criteria: Discussion of limitations or constraints of a system or platform.
Label: System Capabilities
Category: Technical Development

10. file sharing, content sharing.
Relationship: Inclusion (content sharing is a type of file sharing)
Criteria: Sharing or posting images or visual content.
Label: Content Sharing
Category: Community Engagement

11. feature list, platform features.
Relationship: Inclusion (platform features are a type of feature list)
Criteria: References to specific features or capabilities of the platform.
Label: Platform Features
Category: Software Functionality

12. software access, software accessibility.
Relationship: Inclusion (software accessibility is a type of software access)
Criteria: Discussions or inquiries about accessing or using the Physics Lab software.
Label: Software Accessibility
Category: Software Functionality

13. input methods, user interaction.
Relationship: Inclusion (user interaction is a type of input method)
Criteria: Methods or mechanisms for user input or data entry.
Label: User Interaction
Category: User Experience

14. user feedback.
Relationship: Standalone (direct user comments on the software's usability, functionality, or satisfaction)
Criteria: Providing user reviews, and expressing satisfaction or pleasure with a particular feature or functionality.
Label: User Feedback
Category: User Experience

15. feedback requests.
Relationship: Standalone (asking for or encouraging users to provide feedback or opinions)
Criteria: Asking for or encouraging users to provide feedback or opinions.
Label: Feedback Requests
Category: Community Engagement