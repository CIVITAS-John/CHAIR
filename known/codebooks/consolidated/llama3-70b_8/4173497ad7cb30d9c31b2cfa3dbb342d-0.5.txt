You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: encourage open feedback, encouraging user sharing
- A designer encourages open and honest feedback from users.
- A designer encourages users to share their thoughts or opinions and engage with the community.

2.
Concepts: promise involvement, committing to user input, inviting user participation
- Designer promises to involve users in the development process.
- Designers show commitment to incorporating user input and user-driven design.
- Designers invite user participation or involvement in the decision-making process.

3.
Concepts: foster collaboration, providing constructive feedback
- Designers encourage users to provide feedback, suggestions, or opinions on the development process.
- Designers or users provide constructive or strategic feedback.

4.
Concepts: acknowledges social norms, aware of community etiquette
- User acknowledges or recognizes social norms or etiquette.
- A user or designer is aware of or acknowledges community etiquette or norms.

5.
Concepts: showing respect, exhibits politeness and maintains a respectful tone
- A user shows respect for the designer's time or effort.
- User or designer demonstrates politeness and maintains a respectful tone.

6.
Concepts: pay homage to experts, acknowledging experts
- Users pay homage and respect to experts in the field.
- User acknowledges the expertise or contributions of others in the community.

7.
Concepts: acknowledging expertise, acknowledging community expertise
- A user acknowledges the expertise or authority of a designer.
- A designer acknowledges or recognizes the expertise of a community member.

8.
Concepts: ensure community involvement, aligning with community interests
- Designers involve and ensure community participation in the development process.
- Designer aligns the development of the platform with community interests.

9.
Concepts: cultivate community, fostering a close community
- Designer cultivates a sense of community or encourages user engagement.
- A designer maintains a close relationship with the community through frequent updates or interactions.

10.
Concepts: providing community support, supporting community rapport
- Designer provides support or resources to the community.
- User or designer supports community rapport or relationships.

11.
Concepts: acknowledge needs, showing consideration for others
- A designer expresses concern or consideration for community members.
- Designer or user shows consideration for other community members.

12.
Concepts: reassuring users, managing anxieties
- Designers reassure users or alleviate concerns about ease of communication or feedback.
- A designer manages anxieties or expectations by providing reassurance or updates.

13.
Concepts: build trust, reassuring the community
- A designer's action or statement helps build trust within the community.
- A designer reassures the community about a particular issue or feature.

14.
Concepts: identifying pain points, probing for user difficulties, inquiring about user issues
- Designer identifies or asks about pain points or issues
- Designer probes for user difficulties or challenges.
- Designers ask users about their experiences or problems with specific features.

15.
Concepts: highlighting challenges, highlighting user interface challenges
- A user highlights a challenge or difficulty in using the software.
- Designer highlights challenges or difficulties in designing the user interface.

16.
Concepts: report usability issues, identifying gaps in existing software
- A user identifies an issue or suggests an improvement for the software.
- A user identifies a gap or limitation in the current software or tools.

17.
Concepts: confirming user issues, confirming usability issues
- Confirming a user's diagnosis or issue
- Designer confirms a user's report of a usability issue.

18.
Concepts: issue acknowledgment, acknowledging resolutions
- Acknowledging an issue or problem with the product
- A user or designer acknowledges a resolution or solution to an issue.

19.
Concepts: addressing bug fixes, reporting bug fixes and updates
- Designers addressing bug fixes or resolving issues.
- A designer reports on bug fixes or updates to the software.

20.
Concepts: raising concerns, acknowledging potential issues, noting potential bugs
- A designer raises a concern or potential issue with a new feature or design element.
- Designer acknowledges a potential issue.
- A designer notes potential bugs or limitations in the current version.

21.
Concepts: considering comprehensive solutions, consider comprehensive approach
- Designer considers a comprehensive solution to a problem.
- The speaker considers or discusses a comprehensive approach to development or design.

22.
Concepts: offers a solution, proposes a compromise or alternative solution
- Designer offers and suggests a solution.
- Designer proposes a compromise or alternative solution.

23.
Concepts: convenience in problem-solving, describing problem-solving functionality, highlighting problem-solving capabilities
- Designer emphasizes the convenience of features in problem-solving.
- Designer describes the problem-solving functionality of the system.
- Designers promote problem-solving capabilities within the application.

24.
Concepts: troubleshooting, attempts problem-solving
- Engaging in troubleshooting or resolving technical issues.
- User or designer attempts to solve a technical problem or issue.

25.
Concepts: analyzing the problem, offering a diagnosis
- A designer analyzes or investigates a problem or issue.
- A designer offers a diagnosis or explanation for a problem or issue.

26.
Concepts: adapting to user needs, adapting to user constraints
- Designer adapts to user needs by making changes to the software.
- The designer adapts to or addresses user constraints or limitations.

27.
Concepts: temporary solution, acknowledging workaround
- Provision of temporary solutions or workarounds to address specific issues or limitations.
- Acknowledging a workaround or temporary solution to a problem.

28.
Concepts: offering a workaround, suggesting manual adjustments
- Designers offer or share workarounds or solutions to problems.
- Designers suggest or recommend manual adjustments or workarounds.

29.
Concepts: incremental development approach, advising incremental development
- Suggesting incremental categorization and refinement
- User advises incremental development, focusing on one aspect at a time.

30.
Concepts: prioritizing long-term stability, demonstrating long-term thinking
- Designer mentions long-term stability as a goal.
- Designer thinks about long-term implications or stability of features.

31.
Concepts: considering local export, identify need for local export support
- Designers consider supporting local export functionality.
- A need for local export support is identified by the designer.

32.
Concepts: optimizing auto-generated layout, highlights importance of auto-generated layout, emphasize quality of auto generated layout
- Designer suggests improvement to auto-generated layout
- The designer highlights the importance of auto-generated layouts.
- Emphasizing the importance of high-quality auto-generated layouts.
===
Here are the definitions for each code:

---
1.
Concepts: encourage open feedback, encouraging user sharing
Relationship: The concepts are related as they both involve designers encouraging users to participate in the development process.
Criteria: Designers encourage users to share their thoughts and provide open and honest feedback.
Phrase: Encouraging user feedback and sharing.

2.
Concepts: promise involvement, committing to user input, inviting user participation
Relationship: The concepts are related as they all involve designers committing to user involvement in the development process.
Criteria: Designers promise to involve users in the development process and commit to incorporating user input.
Phrase: Committing to user involvement.

3.
Concepts: foster collaboration, providing constructive feedback
Relationship: The concepts are related as they both involve designers and users working together to improve the development process.
Criteria: Designers and users provide constructive feedback to foster collaboration.
Phrase: Fostering collaborative feedback.

4.
Concepts: acknowledges social norms, aware of community etiquette
Relationship: The concepts are related as they both involve users and designers being aware of and acknowledging social norms and community etiquette.
Criteria: Users and designers acknowledge and are aware of social norms and community etiquette.
Phrase: Acknowledging social norms.

5.
Concepts: showing respect, exhibits politeness and maintains a respectful tone
Relationship: The concepts are related as they all involve users and designers showing respect and maintaining a respectful tone.
Criteria: Users and designers show respect and maintain a respectful tone.
Phrase: Showing respect and politeness.

6.
Concepts: pay homage to experts, acknowledging experts
Relationship: The concepts are related as they both involve users and designers acknowledging and showing respect to experts in the field.
Criteria: Users and designers pay homage to and acknowledge experts in the field.
Phrase: Acknowledging expertise.

7.
Concepts: acknowledging expertise, acknowledging community expertise
Relationship: The concepts are related as they both involve users and designers acknowledging expertise within the community.
Criteria: Users and designers acknowledge expertise within the community.
Phrase: Acknowledging community expertise.

8.
Concepts: ensure community involvement, aligning with community interests
Relationship: The concepts are related as they both involve designers ensuring community involvement and aligning with community interests.
Criteria: Designers ensure community involvement and align with community interests.
Phrase: Ensuring community involvement.

9.
Concepts: cultivate community, fostering a close community
Relationship: The concepts are related as they both involve designers cultivating a sense of community and fostering close relationships.
Criteria: Designers cultivate a sense of community and foster close relationships.
Phrase: Cultivating community.

10.
Concepts: providing community support, supporting community rapport
Relationship: The concepts are related as they both involve designers providing support and resources to the community.
Criteria: Designers provide support and resources to the community.
Phrase: Providing community support.

11.
Concepts: acknowledge needs, showing consideration for others
Relationship: The concepts are related as they both involve designers showing consideration for community members' needs.
Criteria: Designers acknowledge needs and show consideration for others.
Phrase: Acknowledging needs.

12.
Concepts: reassuring users, managing anxieties
Relationship: The concepts are related as they both involve designers reassuring users and managing anxieties.
Criteria: Designers reassure users and manage anxieties.
Phrase: Reassuring users.

13.
Concepts: build trust, reassuring the community
Relationship: The concepts are related as they both involve designers building trust and reassuring the community.
Criteria: Designers build trust and reassure the community.
Phrase: Building trust.

14.
Concepts: identifying pain points, probing for user difficulties, inquiring about user issues
Relationship: The concepts are related as they all involve designers identifying and understanding user difficulties and issues.
Criteria: Designers identify pain points, probe for user difficulties, and inquire about user issues.
Phrase: Identifying user difficulties.

15.
Concepts: highlighting challenges, highlighting user interface challenges
Relationship: The concepts are related as they both involve designers and users highlighting challenges and difficulties in using the software.
Criteria: Designers and users highlight challenges and difficulties in using the software.
Phrase: Highlighting challenges.

16.
Concepts: report usability issues, identifying gaps in existing software
Relationship: The concepts are related as they both involve users identifying issues and gaps in the current software.
Criteria: Users report usability issues and identify gaps in existing software.
Phrase: Reporting usability issues.

17.
Concepts: confirming user issues, confirming usability issues
Relationship: The concepts are related as they both involve designers confirming user reports of issues and usability problems.
Criteria: Designers confirm user reports of issues and usability problems.
Phrase: Confirming user issues.

18.
Concepts: issue acknowledgment, acknowledging resolutions
Relationship: The concepts are related as they both involve designers acknowledging issues and resolutions.
Criteria: Designers acknowledge issues and resolutions.
Phrase: Acknowledging issues.

19.
Concepts: addressing bug fixes, reporting bug fixes and updates
Relationship: The concepts are related as they both involve designers addressing and reporting bug fixes and updates.
Criteria: Designers address and report bug fixes and updates.
Phrase: Addressing bug fixes.

20.
Concepts: raising concerns, acknowledging potential issues, noting potential bugs
Relationship: The concepts are related as they all involve designers raising concerns and acknowledging potential issues and bugs.
Criteria: Designers raise concerns, acknowledge potential issues, and note potential bugs.
Phrase: Raising concerns.

21.
Concepts: considering comprehensive solutions, consider comprehensive approach
Relationship: The concepts are related as they both involve designers considering comprehensive solutions and approaches.
Criteria: Designers consider comprehensive solutions and approaches.
Phrase: Considering comprehensive solutions.

22.
Concepts: offers a solution, proposes a compromise or alternative solution
Relationship: The concepts are related as they both involve designers offering solutions and compromises.
Criteria: Designers offer solutions and propose compromises.
Phrase: Offering solutions.

23.
Concepts: convenience in problem-solving, describing problem-solving functionality, highlighting problem-solving capabilities
Relationship: The concepts are related as they all involve designers highlighting the convenience and capabilities of problem-solving features.
Criteria: Designers highlight the convenience and capabilities of problem-solving features.
Phrase: Highlighting problem-solving capabilities.

24.
Concepts: troubleshooting, attempts problem-solving
Relationship: The concepts are related as they both involve designers and users troubleshooting and attempting to solve problems.
Criteria: Designers and users troubleshoot and attempt to solve problems.
Phrase: Troubleshooting.

25.
Concepts: analyzing the problem, offering a diagnosis
Relationship: The concepts are related as they both involve designers analyzing problems and offering diagnoses.
Criteria: Designers analyze problems and offer diagnoses.
Phrase: Analyzing problems.

26.
Concepts: adapting to user needs, adapting to user constraints
Relationship: The concepts are related as they both involve designers adapting to user needs and constraints.
Criteria: Designers adapt to user needs and constraints.
Phrase: Adapting to user needs.

27.
Concepts: temporary solution, acknowledging workaround
Relationship: The concepts are related as they both involve designers providing temporary solutions and acknowledging workarounds.
Criteria: Designers provide temporary solutions and acknowledge workarounds.
Phrase: Providing temporary solutions.

28.
Concepts: offering a workaround, suggesting manual adjustments
Relationship: The concepts are related as they both involve designers offering workarounds and suggesting manual adjustments.
Criteria: Designers offer workarounds and suggest manual adjustments.
Phrase: Offering workarounds.

29.
Concepts: incremental development approach, advising incremental development
Relationship: The concepts are related as they both involve designers suggesting and advising incremental development approaches.
Criteria: Designers suggest and advise incremental development approaches.
Phrase: Advising incremental development.

30.
Concepts: prioritizing long-term stability, demonstrating long-term thinking
Relationship: The concepts are related as they both involve designers prioritizing long-term stability and demonstrating long-term thinking.
Criteria: Designers prioritize long-term stability and demonstrate long-term thinking.
Phrase: Prioritizing long-term stability.

31.
Concepts: considering local export, identify need for local export support
Relationship: The concepts are related as they both involve designers considering and identifying the need for local export support.
Criteria: Designers consider and identify the need for local export support.
Phrase: Considering local export.

32.
Concepts: optimizing auto-generated layout, highlights importance of auto-generated layout, emphasize quality of auto generated layout
Relationship: The concepts are related as they all involve designers optimizing, highlighting, and emphasizing the importance of auto-generated layouts.
Criteria: Designers optimize, highlight, and emphasize the importance of auto-generated layouts.
Phrase: Optimizing auto-generated layouts.