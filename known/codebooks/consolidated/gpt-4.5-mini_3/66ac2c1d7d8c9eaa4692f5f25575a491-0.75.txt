You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (9 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
9. 
Concepts: {Repeat the input 9}
Relationship: {What is logical relationship between concepts in code 9, or N/A if not applicable}
Criteria: {Who did what, and how for code 9}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: discuss feature modifications, discuss and outline feature development
- Designers discuss and list adjustments made to features and component properties within the application.
- Designers and users discuss feature progress and outline development priorities.

2.
Concepts: discussing design challenges, understanding designers' situation
- Users discuss limitations while designers acknowledge challenges to overcome in development.
- Users reflect on the designers' circumstances or constraints impacting the development process.

3.
Concepts: offer support, engaging in troubleshooting support
- Designers ask users about their problems to provide ongoing support and assistance.
- Designers engage in troubleshooting and provide support to address technical issues raised by users.

4.
Concepts: explain development process, confirming software compatibility
- A designer explains the theoretical compatibility of the application with different systems or devices.
- Designers confirm compatibility and discuss technical requirements to ensure proper software functionality.

5.
Concepts: user experience in educational contexts, technical and infrastructural challenges in educational settings
- User experiences and challenges in using the software within educational settings.
- Users and designers discussed technical hurdles faced in educational institutions.

6.
Concepts: engage in dialogue, engage in clarifying dialogue
- Participants request clarification from others in discussions to ensure understanding.
- Designers ask follow-up questions to clarify user inquiries and communicate effectively.

7.
Concepts: ensure development transparency, transparent developer discussion
- Designers maintain development transparency through communication.
- Designers engage in transparent discussions about technical aspects and user experiences related to the application.

8.
Concepts: integrate user feedback, encourage user input
- Designers gather and integrate user feedback into the software's development.
- Designers indicate a willingness to seek input and invite user feedback for future software features.

9.
Concepts: request usage guidance, ask technical questions
- Users request usage instructions or user manuals to assist with software usage.
- Users pose questions about software features to seek guidance and understanding.
===
---
Definitions for each code (9 in total):

1.
Concepts: discuss feature modifications, discuss and outline feature development
Relationship: The concepts are interrelated as they both involve communication between designers regarding the changes and progress of features.
Criteria: Designers communicate about adjustments and priorities in feature development.
Phrase: Discuss feature modifications and development.

2.
Concepts: discussing design challenges, understanding designers' situation
Relationship: The concepts are connected as they involve users reflecting on and acknowledging the challenges faced by designers during development.
Criteria: Users and designers engage in discussions about limitations and constraints encountered in the design process.
Phrase: Discuss design challenges and constraints.

3.
Concepts: offer support, engaging in troubleshooting support
Relationship: These concepts are linked as they both pertain to designers providing assistance in response to user issues.
Criteria: Designers ask users about their problems and engage in troubleshooting efforts to resolve technical difficulties.
Phrase: Provide troubleshooting support.

4.
Concepts: explain development process, confirming software compatibility
Relationship: The concepts relate as they both involve designers communicating technical information regarding the software's functionality.
Criteria: Designers explain compatibility theories and confirm technical requirements for software operation.
Phrase: Explain compatibility and requirements.

5.
Concepts: user experience in educational contexts, technical and infrastructural challenges in educational settings
Relationship: The concepts are related as they both address the context and challenges of using the software in educational environments.
Criteria: Users and designers discuss experiences and technical hurdles encountered in educational settings.
Phrase: Discuss user experiences and challenges.

6.
Concepts: engage in dialogue, engage in clarifying dialogue
Relationship: The concepts are interconnected as they both emphasize the importance of communication and clarification in discussions.
Criteria: Participants request clarification and designers ask follow-up questions to enhance understanding.
Phrase: Engage in clarifying dialogue.

7.
Concepts: ensure development transparency, transparent developer discussion
Relationship: These concepts are related as they both emphasize the need for open communication regarding development processes and outcomes.
Criteria: Designers maintain transparency through communication and engage in open discussions about technical aspects.
Phrase: Maintain development transparency.

8.
Concepts: integrate user feedback, encourage user input
Relationship: The concepts are linked as they both involve the designers' approach to utilizing user insights for software improvement.
Criteria: Designers gather, integrate, and invite user feedback for future software features.
Phrase: Integrate and encourage user feedback.

9.
Concepts: request usage guidance, ask technical questions
Relationship: The concepts are connected as they both involve users seeking assistance and clarification regarding software usage.
Criteria: Users request guidance and pose questions to understand software features better.
Phrase: Request usage guidance and clarification.
---