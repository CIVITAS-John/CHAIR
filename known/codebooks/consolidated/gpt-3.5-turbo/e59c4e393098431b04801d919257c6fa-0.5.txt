You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. If a sub-code includes another, use the broader one. If sub-codes are parallel, write one that covers both.
Write clear and generalizable labels and criteria for each code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization (e.g. "social interaction" instead of "interaction", "communication approach" instead of "communication").
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (31 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {Consolidated criteria of code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
31.
Relationship: {The logical relationship between sub-codes in code 31}
Criteria: {Consolidated criteria of code 31}
Label: {A consolidated label of code 31}
Category: {2-4 words for code 31}
---
~~~
1. update confirmation, update schedule communication.
- Confirmation or acknowledgment of an update being completed.
- Indication of when updates are expected to occur.

2. software update preparation, future updates preview.
- Preparations for upcoming software updates
- Involves expressing excitement for upcoming updates and previewing features.

3. update dissemination, update announcements, software updates & features.
- Information shared about new versions or changes in the system.
- Involves announcements regarding product updates or new software releases.
- Involves sharing information on software updates and upcoming features.

4. development direction, development timeline.
- Involves discussions or indications of the intended direction and alignment of software development.
- Involves discussions, inquiries, or indications related to the development timelines of products and software.

5. expansion to other subjects, future development considerations.
- Discussion about expanding the software to cover other subjects
- Involves considerations for future software development aligned with educational or other subject areas.

6. project planning, task prioritization.
- Planning the project's progression.
- Prioritizing tasks within the project.

7. project progress update, development progress update.
- Involves sharing progress updates and informing the group about project status.
- Involves discussions or updates on the progress of software program development.

8. user troubleshooting inquiry, user inquiry & clarification.
- Inquiries about troubleshooting software issues
- Involves queries and requests for user information or needs clarification.

9. technical specifications, software requirement specification.
- Specifying technical requirements or specifications.
- Specifying the system requirements needed to run the software.

10. software versions, software compatibility.
- Discussions or questions about different versions of the software.
- Involves discussions on software compatibility with various systems.

11. functionality, software usage & functionality.
- Focusing on specific functionalities and providing explanations on software capabilities.
- Involves inquiries or discussions related to software usage and functionality.

12. practicality, usability evaluation.
- Assessing software practicality and mentioning real-world uses.
- Evaluating the ease of use and functionality of software.

13. user feedback organization, user feedback & interface.
- Organizing and categorizing user input and feedback.
- Involves user comments, suggestions, and feedback integration.

14. accessibility, user interface.
- Addressing accessibility issues for different user interfaces.
- Elements related to the visual layout and design, as well as considerations for user interactions.

15. user-centered design, user involvement in design.
- Emphasis on designing based on user needs and feedback
- Involving users in product design and seeking feedback on design elements.

16. design decision making, design element preference.
- Prompting decision-making and seeking consensus on design decisions.
- Expressing preferences for design elements and considering different options.

17. design updates, design adjustments.
- Updates related to the design of components.
- Manual adjustments for design elements and technical adjustments for compatibility.

18. feature expansion, product enhancement through updates.
- Expanding product features in upcoming releases.
- Enhancing software features and functionalities through updates.

19. technology features, feature request and refinement.
- Improving automated features and discussing technology features.
- Requests for new features or refinement of existing features.

20. educator engagement, teacher identification.
- Engagement or interaction specifically involving educators.
- Identification of individuals as educators within the community.

21. educator transition, educational roles & environment.
- Transition in roles from one educational level to another
- Involves roles related to education and describing educational contexts.

22. interactive learning, educational tools & demonstrations.
- Interactive educational activities.
- Involves tools used for education and educational demonstrations.

23. instructional design, educational content development.
- Designing educational materials for effective learning outcomes.
- Involves developing educational content and ensuring its alignment with user needs.

24. curriculum alignment, educational focus emphasis.
- Alignment of the software with educational curricula
- Emphasis on the educational focus and aspects of the software.

25. inclusive decision making, group communication & consultation.
- Involves inclusive decision-making and collaborative processes.
- Involves communication and involving the group in decision-making.

26. user collaboration, community engagement & collaboration.
- Involves user contributions to the community or software, as well as seeking input from all members.
- Involves engaging members in group activities, suggestions, and collaborative efforts.

27. community support, community agreement.
- Support expressed within the community.
- Consensus and affirmation within the community

28. emoji usage, informal communication.
- Use of emojis to express reactions or emotions.
- Involves informal communication and non-verbal cues like emojis.

29. user appreciation, user acknowledgment.
- Involves expressing thanks and acknowledgment towards others.
- Involves acknowledging user feedback or shared resources.

30. positive feedback provision, software design compliment.
- Providing positive comments or feedback to users.
- Positive feedback related to the design of the software

31. teaching experience, user experience sharing.
- Sharing of teaching experiences
- Sharing personal experiences and feedback on user interactions.
===
---
Categories: 
* Learning Sciences
* Human-Computer Interaction
* Participatory Design

Definitions for each code (31 in total):
1.
Relationship: Confirmation and communication of software updates.
Criteria: Acknowledgment of update completion and communication of update schedules.
Label: Update Communication
Category: Human-Computer Interaction

2.
Relationship: Preparation and preview of upcoming software updates.
Criteria: Preparing for future updates and previewing upcoming features.
Label: Update Preparation
Category: Human-Computer Interaction

3.
Relationship: Information dissemination about software updates and features.
Criteria: Announcing new versions, changes, and features in the system.
Label: Update Information
Category: Human-Computer Interaction

4.
Relationship: Discussions on software development direction and timeline.
Criteria: Indications of development direction and timelines.
Label: Development Planning
Category: Participatory Design

5.
Relationship: Discussions on expanding software to cover other subjects.
Criteria: Considering future development aligned with educational or other subject areas.
Label: Future Expansion
Category: Participatory Design

6.
Relationship: Planning project progression and task prioritization.
Criteria: Project planning and task prioritization discussions.
Label: Project Management
Category: Participatory Design

7.
Relationship: Sharing project and development progress updates.
Criteria: Updates on project and software development progress.
Label: Progress Updates
Category: Participatory Design

8.
Relationship: Inquiries and clarifications on user troubleshooting.
Criteria: User inquiries regarding software issues and clarifications.
Label: User Support
Category: Human-Computer Interaction

9.
Relationship: Specifying technical requirements and system specifications.
Criteria: Defining technical specifications and software requirements.
Label: Technical Specifications
Category: Human-Computer Interaction

10.
Relationship: Discussions on software versions and compatibility.
Criteria: Conversations about software versions and compatibility with systems.
Label: Software Compatibility
Category: Human-Computer Interaction

11.
Relationship: Focus on software functionalities and usage.
Criteria: Explaining software capabilities and discussing functionalities.
Label: Software Functionality
Category: Human-Computer Interaction

12.
Relationship: Evaluation of software practicality and usability.
Criteria: Assessing real-world uses and ease of software functionality.
Label: Usability Evaluation
Category: Human-Computer Interaction

13.
Relationship: Organizing user feedback and integrating it into the interface.
Criteria: Categorizing and incorporating user comments and suggestions.
Label: User Feedback Organization
Category: Human-Computer Interaction

14.
Relationship: Addressing accessibility issues in user interfaces.
Criteria: Considering accessibility for different user interfaces.
Label: Accessibility Design
Category: Human-Computer Interaction

15.
Relationship: Designing based on user needs and involving users in the process.
Criteria: Emphasis on user feedback and involvement in design.
Label: User-Centered Design
Category: Participatory Design

16.
Relationship: Decision-making and consensus-seeking on design elements.
Criteria: Seeking agreement on design decisions and preferences.
Label: Design Decision Making
Category: Participatory Design

17.
Relationship: Updates and adjustments to design components.
Criteria: Manual and technical adjustments for design compatibility.
Label: Design Updates
Category: Participatory Design

18.
Relationship: Expanding product features through updates.
Criteria: Enhancing software features in upcoming releases.
Label: Feature Expansion
Category: Participatory Design

19.
Relationship: Improving automated features and discussing technology features.
Criteria: Requests for feature refinement and enhancement.
Label: Feature Refinement
Category: Participatory Design

20.
Relationship: Engagement and interaction with educators.
Criteria: Specific engagement with educators and identifying their roles.
Label: Educator Engagement
Category: Participatory Design

21.
Relationship: Transition in educational roles and environments.
Criteria: Describing educational roles and contexts.
Label: Educational Transition
Category: Participatory Design

22.
Relationship: Interactive educational tools and demonstrations.
Criteria: Using tools for education and demonstrating educational activities.
Label: Interactive Learning
Category: Learning Sciences

23.
Relationship: Designing educational materials for effective learning.
Criteria: Developing educational content aligned with user needs.
Label: Instructional Design
Category: Learning Sciences

24.
Relationship: Aligning software with educational curricula and focus.
Criteria: Emphasizing educational focus and alignment with curricula.
Label: Curriculum Alignment
Category: Learning Sciences

25.
Relationship: Inclusive decision-making and group consultation.
Criteria: Collaborative decision-making processes and communication.
Label: Inclusive Decision Making
Category: Participatory Design

26.
Relationship: User contributions and community engagement.
Criteria: Involving users in group activities and collaborative efforts.
Label: User Collaboration
Category: Participatory Design

27.
Relationship: Expressing support and consensus within the community.
Criteria: Affirmation and support within the community.
Label: Community Support
Category: Participatory Design

28.
Relationship: Use of emojis for informal communication.
Criteria: Expressing emotions and reactions through emojis.
Label: Emoji Usage
Category: Human-Computer Interaction

29.
Relationship: Expressing appreciation and acknowledgment towards users.
Criteria: Acknowledging user feedback and shared resources.
Label: User Appreciation
Category: Participatory Design

30.
Relationship: Providing positive feedback on software design.
Criteria: Complimenting software design and functionality.
Label: Positive Feedback Provision
Category: Human-Computer Interaction

31.
Relationship: Sharing teaching experiences and user interactions.
Criteria: Sharing personal experiences and feedback on user interactions.
Label: Teaching Experience
Category: Learning Sciences
---