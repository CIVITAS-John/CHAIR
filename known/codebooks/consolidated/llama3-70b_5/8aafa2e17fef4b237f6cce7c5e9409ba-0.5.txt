You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (21 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
21. 
Concepts: {Repeat the input 21}
Relationship: {What is logical relationship between concepts in code 21, or N/A if not applicable}
Criteria: {Who did what, and how for code 21}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: emphasizing collaboration, promoting collaborative coding
- Participants emphasize collaboration and critique the obsession with independence in coding tasks.
- Participants promote collaborative coding and prioritize code efficiency through collaboration.

2.
Concepts: valuing code documentation, valuing iterative learning and debugging
- Participants value code documentation and responsible coding practices during coding.
- Participants value iterative learning and debugging and emphasize the need for iterative coding and debugging.

3.
Concepts: engages critically with ai-generated content, evaluating and analyzing ai-generated code
- Participant engages thoughtfully with AI-generated code, using it as a reference.
- The participant evaluates and analyzes AI-generated code, summarizes and interprets AI-generated code, and reads and comments on code generated by LLM-driven interfaces.

4.
Concepts: notes efficiency benefits, noting ai's efficiency
- Participants note the efficiency benefits of using AI or peer programming.
- Participants note AI's efficiency and recognize AI's analytical capabilities during coding.

5.
Concepts: adapting to ai responses, emphasizing ai's flexibility
- Participants adapt to AI responses and demonstrate adaptability during coding.
- Participants emphasize AI's flexibility and highlight adaptability during coding.

6.
Concepts: customizing ai-generated code, seeking tailored ai experiences
- Participants customize AI-generated code and execute AI-generated code during coding.
- Participants seek tailored AI experiences and collaborative coding with tailored solutions during coding.

7.
Concepts: envisioning ai-driven code optimization, envisioning collaborative coding
- Participants envision AI-driven code optimization.
- Participants envision collaborative coding with AI and seamless human-AI collaboration during coding.

8.
Concepts: highlights ai's potential, recognize ai's rapid advancements
- Participants highlight AI's potential and abilities, recognizing its value.
- Participants recognize the rapid advancements in AI capabilities.

9.
Concepts: values ai's suggestions, appreciates ai as a help tool
- Participants value AI's suggestions for improvement, appreciating its thoughtful behavior and recognizing AI-generated solutions.
- Participants appreciate AI as a help tool, valuing summarized assistance and recognizing AI's support in defining goals.

10.
Concepts: valuing ai feedback, valuing collaborative feedback
- Participants value AI feedback for quick code analysis and seek iterative feedback on their coding practices.
- Participants value collaborative feedback and problem-solving with AI.

11.
Concepts: seeking ai verification, seeking human-ai clarification
- The participant requests AI verification to confirm their understanding.
- The participant seeks clarification from both AI and human sources.

12.
Concepts: seek ai assistance, human-ai: seek help
- Participants seek help or assistance from AI to complete a task or solve a problem.
- The participant seeks help from the AI, asking for verification or assistance with code.

13.
Concepts: advocating for ai adoption, advocating for user-centered design
- Participants advocate for AI adoption and efficiency, and user-centric AI design and user-driven solutions.
- Participants emphasize user support, reflect on the importance of user-centered design, and advocate for user-centered design.

14.
Concepts: highlight time constraints, reflect on productivity
- Participants highlight time constraints, acknowledging time constraints and the potential of AI to save time.
- Participants reflect on the potential of AI to save time and increase productivity, emphasizing AI's potential to enhance productivity.

15.
Concepts: reflecting on learning opportunities, mention fragmented time blocks
- Participants reflect on learning opportunities and describe fragmented learning experiences.
- Participants mention the challenges of learning in fragmented time blocks, highlighting the need for system support, and reflect on the challenges of knowledge transfer and learning in fragmented time blocks.

16.
Concepts: questioning ai's reliability, critiquing ai's lack of predictability and output limitations
- Participants question AI's reliability and determinism.
- Participants critique AI's lack of predictability and note the lack of determinism and unpredictability in AI outputs.

17.
Concepts: suggesting cautious trust in ai, exercising caution with ai outputs and responses
- Participants suggest cautious trust in AI and integrate AI suggestions cautiously.
- Participants imply caution and exercise caution with AI-driven responses.

18.
Concepts: emphasizing community support, emphasizing support in learning
- Participants emphasize community help, reflect on resources, and express gratitude for community support.
- Participants reflect on the importance of support in learning and emphasize community support in AI learning.

19.
Concepts: specifying coding tasks, specifying a neural network creation task
- Participants specify coding tasks and communicate model requirements during coding.
- Participants specify a neural network creation task and express an intent to create a neural network during coding.

20.
Concepts: setting up ai tasks, prepares code skeletons
- Participants set up AI tasks and adjust the setup process during coding.
- Participants prepare code skeletons and establish a coding process before AI interaction.

21.
Concepts: advocates for linting features, calling for linting features and ai support for error detection
- Advocates for linting features, which can help identify conceptual mistakes and improve code quality.
- Participants express the need for linting features and call for conceptual error identification.
===
Here are the definitions for each code:

---
1.
Concepts: emphasizing collaboration, promoting collaborative coding
Relationship: Collaboration and coding are interdependent concepts, where collaboration enables efficient coding practices.
Criteria: Participants emphasize collaboration to facilitate efficient coding practices.
Phrase: Collaborate on coding tasks.

2.
Concepts: valuing code documentation, valuing iterative learning and debugging
Relationship: Code documentation and iterative learning/debugging are complementary concepts, where documentation supports iterative learning and debugging.
Criteria: Participants value code documentation to facilitate iterative learning and debugging.
Phrase: Document code for iterative learning.

3.
Concepts: engages critically with ai-generated content, evaluating and analyzing ai-generated code
Relationship: Critical engagement and evaluation/analysis are sequential concepts, where critical engagement precedes evaluation and analysis.
Criteria: Participants engage critically with AI-generated code to evaluate and analyze its quality.
Phrase: Critically evaluate AI-generated code.

4.
Concepts: notes efficiency benefits, noting ai's efficiency
Relationship: Efficiency benefits and AI's efficiency are causally related concepts, where AI's efficiency leads to efficiency benefits.
Criteria: Participants recognize AI's efficiency to achieve efficiency benefits.
Phrase: Recognize AI's efficiency benefits.

5.
Concepts: adapting to ai responses, emphasizing ai's flexibility
Relationship: Adapting to AI responses and emphasizing AI's flexibility are interdependent concepts, where adapting to AI responses requires flexibility.
Criteria: Participants adapt to AI responses by emphasizing AI's flexibility.
Phrase: Adapt to AI responses flexibly.

6.
Concepts: customizing ai-generated code, seeking tailored ai experiences
Relationship: Customizing AI-generated code and seeking tailored AI experiences are complementary concepts, where customization leads to tailored experiences.
Criteria: Participants customize AI-generated code to seek tailored AI experiences.
Phrase: Customize AI-generated code for tailored experiences.

7.
Concepts: envisioning ai-driven code optimization, envisioning collaborative coding
Relationship: AI-driven code optimization and collaborative coding are interdependent concepts, where AI-driven optimization enables collaborative coding.
Criteria: Participants envision AI-driven code optimization to facilitate collaborative coding.
Phrase: Envision AI-driven collaborative coding.

8.
Concepts: highlights ai's potential, recognize ai's rapid advancements
Relationship: Highlighting AI's potential and recognizing its rapid advancements are causally related concepts, where rapid advancements lead to increased potential.
Criteria: Participants recognize AI's rapid advancements to highlight its potential.
Phrase: Recognize AI's potential advancements.

9.
Concepts: values ai's suggestions, appreciates ai as a help tool
Relationship: Valuing AI's suggestions and appreciating AI as a help tool are interdependent concepts, where valuing suggestions leads to appreciation.
Criteria: Participants value AI's suggestions to appreciate its help.
Phrase: Appreciate AI's helpful suggestions.

10.
Concepts: valuing ai feedback, valuing collaborative feedback
Relationship: Valuing AI feedback and valuing collaborative feedback are complementary concepts, where AI feedback supports collaborative feedback.
Criteria: Participants value AI feedback to facilitate collaborative feedback.
Phrase: Value AI feedback for collaboration.

11.
Concepts: seeking ai verification, seeking human-ai clarification
Relationship: Seeking AI verification and seeking human-AI clarification are sequential concepts, where AI verification precedes human-AI clarification.
Criteria: Participants seek AI verification to clarify human-AI interactions.
Phrase: Seek AI verification for clarification.

12.
Concepts: seek ai assistance, human-ai: seek help
Relationship: Seeking AI assistance and seeking human-AI help are interdependent concepts, where AI assistance enables human-AI help.
Criteria: Participants seek AI assistance to receive human-AI help.
Phrase: Seek AI assistance for help.

13.
Concepts: advocating for ai adoption, advocating for user-centered design
Relationship: Advocating for AI adoption and advocating for user-centered design are causally related concepts, where user-centered design enables AI adoption.
Criteria: Participants advocate for user-centered design to facilitate AI adoption.
Phrase: Advocate for user-centered AI adoption.

14.
Concepts: highlight time constraints, reflect on productivity
Relationship: Highlighting time constraints and reflecting on productivity are causally related concepts, where time constraints impact productivity.
Criteria: Participants highlight time constraints to reflect on productivity.
Phrase: Reflect on productivity constraints.

15.
Concepts: reflecting on learning opportunities, mention fragmented time blocks
Relationship: Reflecting on learning opportunities and mentioning fragmented time blocks are interdependent concepts, where fragmented time blocks impact learning opportunities.
Criteria: Participants reflect on learning opportunities in fragmented time blocks.
Phrase: Reflect on fragmented learning opportunities.

16.
Concepts: questioning ai's reliability, critiquing ai's lack of predictability and output limitations
Relationship: Questioning AI's reliability and critiquing its limitations are causally related concepts, where limitations impact reliability.
Criteria: Participants question AI's reliability due to its limitations.
Phrase: Question AI's reliability limitations.

17.
Concepts: suggesting cautious trust in ai, exercising caution with ai outputs and responses
Relationship: Suggesting cautious trust and exercising caution are interdependent concepts, where cautious trust leads to caution.
Criteria: Participants suggest cautious trust in AI to exercise caution.
Phrase: Exercise cautious trust in AI.

18.
Concepts: emphasizing community support, emphasizing support in learning
Relationship: Emphasizing community support and emphasizing support in learning are interdependent concepts, where community support enables learning support.
Criteria: Participants emphasize community support to facilitate learning support.
Phrase: Emphasize community support for learning.

19.
Concepts: specifying coding tasks, specifying a neural network creation task
Relationship: Specifying coding tasks and specifying a neural network creation task are complementary concepts, where task specification enables neural network creation.
Criteria: Participants specify coding tasks to create neural networks.
Phrase: Specify coding tasks for neural networks.

20.
Concepts: setting up ai tasks, prepares code skeletons
Relationship: Setting up AI tasks and preparing code skeletons are sequential concepts, where setting up AI tasks precedes code skeleton preparation.
Criteria: Participants set up AI tasks to prepare code skeletons.
Phrase: Prepare code skeletons for AI tasks.

21.
Concepts: advocates for linting features, calling for linting features and ai support for error detection
Relationship: Advocating for linting features and calling for AI support are interdependent concepts, where AI support enables linting features.
Criteria: Participants advocate for linting features with AI support.
Phrase: Advocate for AI-supported linting features.