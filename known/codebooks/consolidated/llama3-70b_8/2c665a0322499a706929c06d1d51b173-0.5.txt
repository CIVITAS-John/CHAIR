You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: design intentions, explaining question intent
- Designer explains the intention or design behind the software.
- A designer explains the intention behind a question.

2.
Concepts: justifying design decisions, provides development rationale
- A designer justifies decisions and explains design rationale.
- The designer provides a reason for a development decision or action.

3.
Concepts: confirming reason, acknowledging clarification
- The designer confirms or acknowledges a reason or explanation.
- A designer acknowledges clarification or confirmation.

4.
Concepts: confirmed design element, confirmation of design alignment
- User confirms or identifies a specific design element or feature.
- A user confirms that a design aligns with current practices.

5.
Concepts: validating ideas, validating designer's example
- Users express agreement or validation with designer's idea.
- A user validates the designer's example.

6.
Concepts: supporting design decisions, designer 2 supports user solution
- A user supports or agrees with design decisions.
- Designer 2 supports or agrees with a user's solution or suggestion.

7.
Concepts: confirms user's point, providing concise support
- A designer confirms or affirms a user's point or statement.
- The designer provides concise support or confirmation to users.

8.
Concepts: provides feature feedback, providing input on design elements, confirms specific circuit diagram intersection
- A user provides feedback on a specific feature or circuit diagram design.
- The user provides input on the preferred placement of a circuit diagram.
- The designer confirms a specific type of circuit diagram intersection based on user feedback.

9.
Concepts: presenting circuit diagrams, clarifying circuit diagram style
- A designer presents a circuit diagram and asks for confirmation.
- The speaker clarifies or seeks clarification on the style or format of a circuit diagram.

10.
Concepts: set hardware expectations, setting expectations for mechanics
- The designer sets or manages expectations about the app's hardware requirements.
- A designer sets expectations for the mechanics or functionality of the product.

11.
Concepts: specifying hardware requirements, emphasizing hardware requirements
- A designer specifies or discusses hardware requirements for a system or tool.
- A designer or user highlights the importance of modern hardware for the software to work properly.

12.
Concepts: assessing technical feasibility, technical requirement considerations
- The designer assesses the technical feasibility of a feature or request.
- Inquiries or discussions about the technical requirements or feasibility of a particular feature or system.

13.
Concepts: specifying technical requirements, explain technical requirements
- Developer specifies technical requirements or compatibility for the software.
- Designer explains technical requirements or constraints that affect the app's development or functionality.

14.
Concepts: sets scope, setting project boundaries, defining application scope
- A designer sets the scope or focus of the product or project.
- Designer sets boundaries or limitations for the project's scope or features.
- A designer defines the scope, focus, or boundaries of the Physics Lab application.

15.
Concepts: update scope sharing, describes update size
- Designers share the magnitude or scope of updates.
- A designer describes the size or scope of an update.

16.
Concepts: managing project scope, making decisions and prioritizing tasks
- The designer manages the project scope by gathering opinions or prioritizing tasks.
- A designer makes decisions and prioritizes tasks.

17.
Concepts: sequencing design phases, content development planning
- A designer or developer outlines the sequence or priority of design phases or tasks.
- A designer plans or prioritizes the development of content or features.

18.
Concepts: communicates priorities, explaining project focus and priorities
- A designer communicates priorities or development strategy.
- A designer explains the project's focus areas and priorities.

19.
Concepts: explaining plans, explaining assessment plans
- Designer explains or communicates plans or strategies.
- A designer details assessment plans and explains experiment assessment.

20.
Concepts: proposing design ideas, proposes design changes
- Designer proposes a design idea or feature concept.
- A designer proposes changes or improvements to the project's design.

21.
Concepts: considers user context, gathering user context
- A designer considers or acknowledges user context.
- A designer gathers more information about a user's situation.

22.
Concepts: describe user behavior, user interaction insight
- The designer describes or shares information about user behavior or actions.
- Designer provides insight into how users interact with the platform.

23.
Concepts: anticipating user needs, anticipating user experience issues
- A designer or developer anticipates user needs or suggests potential solutions.
- The designer anticipates or discusses potential user experience issues.

24.
Concepts: recognizing offline needs, considers offline functionality
- Recognizing the need for offline functionality or support.
- A designer considers offline functionality.

25.
Concepts: addresses user needs, addresses specific needs
- A designer addresses user needs or concerns.
- Designer addresses specific needs or requirements.

26.
Concepts: acknowledging user needs, catering to user needs
- Designers acknowledge user needs, supporting or responding to user requests.
- Designers align with user needs, catering to user needs or preferences when developing features.

27.
Concepts: responsive design, considers diverse user environments
- A designer demonstrates responsiveness to diverse user needs and environments.
- A designer considers the diversity of user environments or devices.

28.
Concepts: recognizing user diversity, acknowledging diverse user needs
- Demonstrating awareness of diverse user environments or needs.
- The designer acknowledges the need to consider diverse user needs in the development process.

29.
Concepts: touch screen feature, referenced touch screen capabilities, explaining touch screen capabilities
- A designer mentions a specific feature or characteristic of touch screens in the Physics Lab's online community.
- Designer references or mentions the capabilities of touch screens.
- A designer explains touch screen functionality and informs about limitations.

30.
Concepts: discussing design implications, design implication considerations
- A designer discusses the design implications or potential consequences of a feature or change.
- Discussions or considerations about the implications of a particular design choice or feature, such as touch interface.

31.
Concepts: memory concern, acknowledged memory limitations
- Designer expresses concern about memory or remembering information.
- A designer acknowledges limitations in their memory or ability to remember user feedback.

32.
Concepts: reflection on experiences, reflecting on past experience
- A designer reflects on past experiences related to the design process.
- Developer reflects on past experiences or lessons learned.
===
Here are the definitions for each code:

---
1.
Concepts: design intentions, explaining question intent
Relationship: The designer's intentions are explained to clarify the question's purpose.
Criteria: A designer explains the design intention behind a question or software.
Phrase: Explaining design intentions.

2.
Concepts: justifying design decisions, provides development rationale
Relationship: The designer provides a reason for a design decision or development action.
Criteria: A designer justifies a design decision and provides a development rationale.
Phrase: Justifying design decisions.

3.
Concepts: confirming reason, acknowledging clarification
Relationship: The designer confirms or acknowledges a reason or explanation.
Criteria: A designer confirms or acknowledges a reason or clarification.
Phrase: Confirming reasons.

4.
Concepts: confirmed design element, confirmation of design alignment
Relationship: A user confirms a specific design element or feature aligns with current practices.
Criteria: A user confirms a design element or feature aligns with current practices.
Phrase: Confirming design elements.

5.
Concepts: validating ideas, validating designer's example
Relationship: Users express agreement or validation with a designer's idea or example.
Criteria: A user validates a designer's idea or example.
Phrase: Validating ideas.

6.
Concepts: supporting design decisions, designer 2 supports user solution
Relationship: A user or designer supports or agrees with design decisions or solutions.
Criteria: A user or designer supports design decisions or solutions.
Phrase: Supporting design decisions.

7.
Concepts: confirms user's point, providing concise support
Relationship: A designer confirms or affirms a user's point or statement and provides concise support.
Criteria: A designer confirms a user's point and provides concise support.
Phrase: Confirming user points.

8.
Concepts: provides feature feedback, providing input on design elements, confirms specific circuit diagram intersection
Relationship: A user provides feedback on a feature or design element, and the designer confirms a specific design element.
Criteria: A user provides feedback on a feature or design element, and the designer confirms a specific design element.
Phrase: Providing feature feedback.

9.
Concepts: presenting circuit diagrams, clarifying circuit diagram style
Relationship: A designer presents a circuit diagram and seeks clarification on the style or format.
Criteria: A designer presents a circuit diagram and seeks clarification on the style or format.
Phrase: Presenting circuit diagrams.

10.
Concepts: set hardware expectations, setting expectations for mechanics
Relationship: A designer sets or manages expectations about the app's hardware requirements and mechanics.
Criteria: A designer sets expectations for hardware requirements and mechanics.
Phrase: Setting hardware expectations.

11.
Concepts: specifying hardware requirements, emphasizing hardware requirements
Relationship: A designer specifies or emphasizes hardware requirements for a system or tool.
Criteria: A designer specifies or emphasizes hardware requirements.
Phrase: Specifying hardware requirements.

12.
Concepts: assessing technical feasibility, technical requirement considerations
Relationship: A designer assesses the technical feasibility of a feature or request and considers technical requirements.
Criteria: A designer assesses technical feasibility and considers technical requirements.
Phrase: Assessing technical feasibility.

13.
Concepts: specifying technical requirements, explain technical requirements
Relationship: A developer specifies technical requirements or compatibility for the software, and explains technical requirements.
Criteria: A developer specifies and explains technical requirements.
Phrase: Specifying technical requirements.

14.
Concepts: sets scope, setting project boundaries, defining application scope
Relationship: A designer sets the scope or focus of the product or project, and defines application scope.
Criteria: A designer sets the scope or focus of the product or project.
Phrase: Setting project scope.

15.
Concepts: update scope sharing, describes update size
Relationship: A designer shares the magnitude or scope of updates and describes the update size.
Criteria: A designer shares the scope of updates and describes the update size.
Phrase: Sharing update scope.

16.
Concepts: managing project scope, making decisions and prioritizing tasks
Relationship: A designer manages the project scope by gathering opinions, making decisions, and prioritizing tasks.
Criteria: A designer manages project scope by making decisions and prioritizing tasks.
Phrase: Managing project scope.

17.
Concepts: sequencing design phases, content development planning
Relationship: A designer outlines the sequence or priority of design phases or tasks, and plans content development.
Criteria: A designer outlines design phases and plans content development.
Phrase: Sequencing design phases.

18.
Concepts: communicates priorities, explaining project focus and priorities
Relationship: A designer communicates priorities or development strategy, and explains the project's focus areas and priorities.
Criteria: A designer communicates and explains project priorities.
Phrase: Communicating priorities.

19.
Concepts: explaining plans, explaining assessment plans
Relationship: A designer explains or communicates plans or strategies, and details assessment plans.
Criteria: A designer explains plans and assessment plans.
Phrase: Explaining plans.

20.
Concepts: proposing design ideas, proposes design changes
Relationship: A designer proposes a design idea or feature concept, and proposes changes or improvements.
Criteria: A designer proposes design ideas and changes.
Phrase: Proposing design ideas.

21.
Concepts: considers user context, gathering user context
Relationship: A designer considers or acknowledges user context, and gathers more information about a user's situation.
Criteria: A designer considers and gathers user context.
Phrase: Considering user context.

22.
Concepts: describe user behavior, user interaction insight
Relationship: A designer describes or shares information about user behavior or actions, and provides insight into user interaction.
Criteria: A designer describes user behavior and provides interaction insight.
Phrase: Describing user behavior.

23.
Concepts: anticipating user needs, anticipating user experience issues
Relationship: A designer or developer anticipates user needs or suggests potential solutions, and anticipates potential user experience issues.
Criteria: A designer anticipates user needs and potential user experience issues.
Phrase: Anticipating user needs.

24.
Concepts: recognizing offline needs, considers offline functionality
Relationship: A designer recognizes the need for offline functionality or support, and considers offline functionality.
Criteria: A designer recognizes and considers offline needs.
Phrase: Recognizing offline needs.

25.
Concepts: addresses user needs, addresses specific needs
Relationship: A designer addresses user needs or concerns, and addresses specific needs or requirements.
Criteria: A designer addresses user needs and specific requirements.
Phrase: Addressing user needs.

26.
Concepts: acknowledging user needs, catering to user needs
Relationship: A designer acknowledges user needs, supports or responds to user requests, and aligns with user needs.
Criteria: A designer acknowledges and caters to user needs.
Phrase: Acknowledging user needs.

27.
Concepts: responsive design, considers diverse user environments
Relationship: A designer demonstrates responsiveness to diverse user needs and environments, and considers the diversity of user environments or devices.
Criteria: A designer demonstrates responsiveness to diverse user environments.
Phrase: Designing responsively.

28.
Concepts: recognizing user diversity, acknowledging diverse user needs
Relationship: A designer demonstrates awareness of diverse user environments or needs, and acknowledges the need to consider diverse user needs.
Criteria: A designer recognizes and acknowledges user diversity.
Phrase: Recognizing user diversity.

29.
Concepts: touch screen feature, referenced touch screen capabilities, explaining touch screen capabilities
Relationship: A designer mentions a specific feature or characteristic of touch screens, references touch screen capabilities, and explains touch screen functionality.
Criteria: A designer discusses touch screen features and capabilities.
Phrase: Discussing touch screens.

30.
Concepts: discussing design implications, design implication considerations
Relationship: A designer discusses the design implications or potential consequences of a feature or change, and considers design implications.
Criteria: A designer discusses and considers design implications.
Phrase: Discussing design implications.

31.
Concepts: memory concern, acknowledged memory limitations
Relationship: A designer expresses concern about memory or remembering information, and acknowledges limitations in their memory.
Criteria: A designer expresses memory concerns and acknowledges limitations.
Phrase: Expressing memory concerns.

32.
Concepts: reflection on experiences, reflecting on past experience
Relationship: A designer reflects on past experiences related to the design process, and reflects on past experiences or lessons learned.
Criteria: A designer reflects on past experiences and lessons learned.
Phrase: Reflecting on experiences.