You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: code quality and maintainability, code readability and maintainability
- Discussing code quality and maintainability
- Discusses code readability and maintainability

2.
Concepts: quality, easy to maintain code
- Discusses the importance of code quality, emphasizing the need for simplicity and maintainability.
- Emphasizing the importance of easy-to-maintain code

3.
Concepts: importance of code validation, the importance of code quality
- The interviewee recognizes the importance of code validation and debugging.
- The interviewee highlights the importance of code quality and readability.

4.
Concepts: debugging and unit testing, importance of incremental testing and debugging
- Highlights the importance of debugging and unit testing in coding.
- The participant highlights the importance of incremental testing and debugging in coding.

5.
Concepts: inefficiencies in coding, indicating inefficient workflow
- The participant notes inefficiencies in coding practices.
- Indicates inefficient workflow and error-prone coding practices

6.
Concepts: preferring readable code, making the generated code easy to read, notes ai's ability to produce understandable code
- The participant prefers readable code and appreciates AI-generated code that is easy to understand.
- The interviewee appreciates the AI's ability to generate readable code.
- The participant notes that the AI tends to produce understandable code, with comments and documentation that make it easy to read.

7.
Concepts: valuing clear code, values clearness
- Participant values AI's ability to write clear and accessible code.
- The participant values clearness and clarity in AI-generated code and explanations.

8.
Concepts: importance of readable ai-generated code, value of readable code
- Values easy-to-read code generated by AI
- Interviewee values readability and clarity in AI-generated code, highlighting the importance of transparent and understandable code.

9.
Concepts: valuing code simplicity, simplicity of code, values clarity in coding
- The participant values code simplicity and readability.
- The participant values simplicity in code, emphasizing the importance of writing accessible code for maintenance purposes.
- The interviewee values clarity and simplicity in coding, preferring code that is easy to understand and maintain.

10.
Concepts: code readability importance, importance of code readability
- Prioritizes code readability and simplicity.
- Emphasizes importance of code readability and simplicity.

11.
Concepts: advocating for clear code writing, advocates for readability in coding practices
- Advocates for clear, straightforward, and maintainable code writing practices.
- Advocates for readability in coding practices

12.
Concepts: expressing netlogo competence, acknowledges personal competence
- The interviewee expresses competence in NetLogo.
- The interviewee acknowledges their personal competence or expertise in NetLogo or related areas.

13.
Concepts: confident in netlogo skills, confidence in netlogo skills
- Is confident in NetLogo skills
- Confident in own NetLogo skills.

14.
Concepts: competence in netlogo, expresses confidence in netlogo expertise, feels competent with netlogo
- Feels competent in NetLogo and aims to help others learn.
- Expresses confidence in their own NetLogo expertise, preferring to help others.
- Expresses confidence in their NetLogo skills and prefers to help others learn.

15.
Concepts: altruistic approach to ai usage, preferring to help others learn netlogo
- Prioritizes helping others learn NetLogo over personal competence.
- Prioritizes helping others learn NetLogo over relying on AI
- Prefers to help others learn NetLogo.

16.
Concepts: prefers assisting others, prefers helping others learn netlogo, enjoys mentoring others in netlogo
- The participant prefers assisting others in learning NetLogo, demonstrating a willingness to help.
- The participant prefers helping others learn NetLogo, implying a desire to share their knowledge and expertise with others.
- Enjoys mentoring others in NetLogo and prefers helping others learn.

17.
Concepts: diverse programming language experience, demonstrating diverse language knowledge
- Highlights diverse language knowledge
- Demonstrates diverse language knowledge and prior programming experience.

18.
Concepts: multilingual expertise, familiarity with multiple languages
- Interviewee's background and experience with multiple programming languages.
- Has experience with multiple software languages.

19.
Concepts: establishing credibility, establishing credibility in programming
- The participant establishes their credibility or expertise in programming or coding.
- The participant establishes credibility in programming by sharing their extensive experience in the field.

20.
Concepts: reflecting on extensive programming experience, sharing programming experience
- Shares extensive experience in programming
- The participant shares their extensive programming experience, providing context for their interactions with the LLM-driven interface.

21.
Concepts: values self-reliance, prioritizing self-reliance
- Values self-reliance in debugging and coding
- Prioritizes self-reliance in debugging and fixing code errors.

22.
Concepts: independent code debugging, attempts to resolve issues independently
- The participant independently reads through the code and attempts to debug.
- The participant attempts to resolve issues independently, reading through code and trying to debug on their own before seeking help.

23.
Concepts: independent problem solving, showing independence in coding process
- Demonstrates independence in problem-solving by trying to debug code without AI assistance.
- Displays independence in the coding process, trying to debug code themselves.

24.
Concepts: independent debugging, self-reliant debugging
- Fixes common NetLogo mistakes independently.
- E04 debugs code independently without AI assistance.
- Fixes common NetLogo mistakes independently, without relying on AI.

25.
Concepts: human error resolution, fixing common netlogo mistakes
- Human ability to identify and fix common NetLogo mistakes independently.
- Participant fixes common NetLogo mistakes independently.

26.
Concepts: immediate fix option, wanting immediate "fix" option, desires immediate fixing options
- Wants the "fix" option to be available immediately after errors are identified.
- Expressing the desire for an immediate "fix" option after error identification.
- Participant desires immediate fixing options post-error detection.

27.
Concepts: chooses problem solving, fixing problems over explanations, prioritizes problem-solving over explanations, fixing over explaining
- Chooses to fix problems rather than explaining them
- Chooses to fix problems rather than simply understanding the explanation.
- Chooses to fix problems rather than showing explanations
- Chooses to fix the problem rather than showing the explanation.

28.
Concepts: prioritizes problem-solving, prioritizing problem resolution
- The interviewee prioritizes problem-solving over explanations or other options.
- The interviewee chooses problem resolution over explanation.

29.
Concepts: reflection on individualism, reflecting on individualistic culture
- The interviewee reflects on the cultural aspect of individualism in the US.
- The interviewee reflects on the individualistic culture in the US and its impact on learning.

30.
Concepts: reflecting on the u.s. culture of individualism, continuing critique of individualism in america
- Reflecting on cultural attitudes towards seeking help
- Participant reflects on the cult of individualism in America and its implications for seeking help.

31.
Concepts: continuing reflection on individualistic work culture, critiquing individualistic work culture's impact on seeking help
- Continuing reflection on the individualistic work culture's impact on seeking help.
- Critiquing the individualistic work culture's impact on seeking help.

32.
Concepts: critiques individual work, critiques obsession with solo work
- Participant critiques the obsession with individual work, advocating for collaboration.
- The participant critiques the culture of solo work.
===
Here are the definitions for each code:

---
1.
Concepts: code quality and maintainability, code readability and maintainability
Relationship: These concepts are related as they both refer to the importance of writing high-quality code that is easy to maintain and read.
Criteria: The interviewee discusses the importance of code quality and maintainability in their work.
Phrase: Discussing code quality and maintainability.

2.
Concepts: quality, easy to maintain code
Relationship: These concepts are related as they both refer to the importance of writing high-quality code that is easy to maintain.
Criteria: The interviewee emphasizes the importance of writing high-quality, easy-to-maintain code.
Phrase: Emphasizing code quality and maintainability.

3.
Concepts: importance of code validation, the importance of code quality
Relationship: These concepts are related as they both refer to the importance of ensuring code quality through validation and debugging.
Criteria: The interviewee highlights the importance of code validation and quality in their work.
Phrase: Highlighting code validation and quality.

4.
Concepts: debugging and unit testing, importance of incremental testing and debugging
Relationship: These concepts are related as they both refer to the importance of testing and debugging code incrementally.
Criteria: The interviewee emphasizes the importance of incremental testing and debugging in their work.
Phrase: Emphasizing incremental testing and debugging.

5.
Concepts: inefficiencies in coding, indicating inefficient workflow
Relationship: These concepts are related as they both refer to the presence of inefficiencies in coding practices.
Criteria: The interviewee notes inefficiencies in their coding practices and workflow.
Phrase: Noting coding inefficiencies.

6.
Concepts: preferring readable code, making the generated code easy to read, notes ai's ability to produce understandable code
Relationship: These concepts are related as they all refer to the importance of code readability and understandability.
Criteria: The interviewee prefers readable code and appreciates AI-generated code that is easy to understand.
Phrase: Preferring readable code.

7.
Concepts: valuing clear code, values clearness
Relationship: These concepts are related as they both refer to the importance of code clarity and understandability.
Criteria: The interviewee values clear and understandable code in their work.
Phrase: Valuing clear code.

8.
Concepts: importance of readable ai-generated code, value of readable code
Relationship: These concepts are related as they both refer to the importance of readability in AI-generated code.
Criteria: The interviewee values readability and clarity in AI-generated code.
Phrase: Valuing readable AI-generated code.

9.
Concepts: valuing code simplicity, simplicity of code, values clarity in coding
Relationship: These concepts are related as they all refer to the importance of code simplicity and clarity.
Criteria: The interviewee values simplicity and clarity in code, emphasizing the importance of accessible code.
Phrase: Valuing code simplicity.

10.
Concepts: code readability importance, importance of code readability
Relationship: These concepts are related as they both refer to the importance of code readability.
Criteria: The interviewee prioritizes code readability and simplicity in their work.
Phrase: Prioritizing code readability.

11.
Concepts: advocating for clear code writing, advocates for readability in coding practices
Relationship: These concepts are related as they both refer to the importance of advocating for clear and readable code writing practices.
Criteria: The interviewee advocates for clear and readable code writing practices.
Phrase: Advocating for clear code writing.

12.
Concepts: expressing netlogo competence, acknowledges personal competence
Relationship: These concepts are related as they both refer to the interviewee's confidence in their NetLogo skills.
Criteria: The interviewee expresses confidence in their NetLogo skills and competence.
Phrase: Expressing NetLogo competence.

13.
Concepts: confident in netlogo skills, confidence in netlogo skills
Relationship: These concepts are related as they both refer to the interviewee's confidence in their NetLogo skills.
Criteria: The interviewee is confident in their NetLogo skills and competence.
Phrase: Confident in NetLogo skills.

14.
Concepts: competence in netlogo, expresses confidence in netlogo expertise, feels competent with netlogo
Relationship: These concepts are related as they all refer to the interviewee's confidence and competence in NetLogo.
Criteria: The interviewee feels competent and confident in their NetLogo skills and expertise.
Phrase: Feeling competent in NetLogo.

15.
Concepts: altruistic approach to ai usage, preferring to help others learn netlogo
Relationship: These concepts are related as they both refer to the interviewee's willingness to help others learn NetLogo.
Criteria: The interviewee prioritizes helping others learn NetLogo over personal competence.
Phrase: Preferring to help others learn NetLogo.

16.
Concepts: prefers assisting others, prefers helping others learn netlogo, enjoys mentoring others in netlogo
Relationship: These concepts are related as they all refer to the interviewee's willingness to help and mentor others in NetLogo.
Criteria: The interviewee prefers assisting and mentoring others in learning NetLogo.
Phrase: Preferring to assist others.

17.
Concepts: diverse programming language experience, demonstrating diverse language knowledge
Relationship: These concepts are related as they both refer to the interviewee's experience and knowledge of multiple programming languages.
Criteria: The interviewee demonstrates diverse language knowledge and prior programming experience.
Phrase: Demonstrating diverse language knowledge.

18.
Concepts: multilingual expertise, familiarity with multiple languages
Relationship: These concepts are related as they both refer to the interviewee's experience and knowledge of multiple programming languages.
Criteria: The interviewee has experience with multiple software languages.
Phrase: Having multilingual expertise.

19.
Concepts: establishing credibility, establishing credibility in programming
Relationship: These concepts are related as they both refer to the interviewee's establishment of credibility in programming and coding.
Criteria: The interviewee establishes credibility in programming by sharing their extensive experience.
Phrase: Establishing credibility in programming.

20.
Concepts: reflecting on extensive programming experience, sharing programming experience
Relationship: These concepts are related as they both refer to the interviewee's sharing of their extensive programming experience.
Criteria: The interviewee shares their extensive programming experience, providing context for their interactions with the LLM-driven interface.
Phrase: Sharing programming experience.

21.
Concepts: values self-reliance, prioritizing self-reliance
Relationship: These concepts are related as they both refer to the interviewee's value on self-reliance in debugging and coding.
Criteria: The interviewee values self-reliance in debugging and fixing code errors.
Phrase: Valuing self-reliance.

22.
Concepts: independent code debugging, attempts to resolve issues independently
Relationship: These concepts are related as they both refer to the interviewee's independence in debugging and resolving code issues.
Criteria: The interviewee attempts to resolve issues independently, reading through code and trying to debug on their own.
Phrase: Attempting independent debugging.

23.
Concepts: independent problem solving, showing independence in coding process
Relationship: These concepts are related as they both refer to the interviewee's independence in problem-solving and coding.
Criteria: The interviewee demonstrates independence in problem-solving by trying to debug code without AI assistance.
Phrase: Demonstrating independence in coding.

24.
Concepts: independent debugging, self-reliant debugging
Relationship: These concepts are related as they both refer to the interviewee's independence in debugging and resolving code issues.
Criteria: The interviewee fixes common NetLogo mistakes independently without relying on AI.
Phrase: Engaging in independent debugging.

25.
Concepts: human error resolution, fixing common netlogo mistakes
Relationship: These concepts are related as they both refer to the interviewee's ability to identify and fix common NetLogo mistakes independently.
Criteria: The interviewee fixes common NetLogo mistakes independently without relying on AI.
Phrase: Fixing common NetLogo mistakes.

26.
Concepts: immediate fix option, wanting immediate "fix" option, desires immediate fixing options
Relationship: These concepts are related as they all refer to the interviewee's desire for an immediate "fix" option after error identification.
Criteria: The interviewee desires immediate fixing options post-error detection.
Phrase: Desiring immediate fixing options.

27.
Concepts: chooses problem solving, fixing problems over explanations, prioritizes problem-solving over explanations, fixing over explaining
Relationship: These concepts are related as they all refer to the interviewee's preference for fixing problems over understanding explanations.
Criteria: The interviewee chooses to fix problems rather than explaining them or showing explanations.
Phrase: Choosing problem-solving over explanations.

28.
Concepts: prioritizes problem-solving, prioritizing problem resolution
Relationship: These concepts are related as they both refer to the interviewee's prioritization of problem-solving over other options.
Criteria: The interviewee prioritizes problem-solving over explanations or other options.
Phrase: Prioritizing problem-solving.

29.
Concepts: reflection on individualism, reflecting on individualistic culture
Relationship: These concepts are related as they both refer to the interviewee's reflection on the cultural aspect of individualism in the US.
Criteria: The interviewee reflects on the cultural aspect of individualism in the US and its impact on learning.
Phrase: Reflecting on individualistic culture.

30.
Concepts: reflecting on the u.s. culture of individualism, continuing critique of individualism in america
Relationship: These concepts are related as they both refer to the interviewee's reflection on the cultural aspect of individualism in the US.
Criteria: The interviewee reflects on the cult of individualism in America and its implications for seeking help.
Phrase: Reflecting on individualistic culture in America.

31.
Concepts: continuing reflection on individualistic work culture, critiquing individualistic work culture's impact on seeking help
Relationship: These concepts are related as they both refer to the interviewee's reflection on the individualistic work culture's impact on seeking help.
Criteria: The interviewee critiques the individualistic work culture's impact on seeking help.
Phrase: Critiquing individualistic work culture.

32.
Concepts: critiques individual work, critiques obsession with solo work
Relationship: These concepts are related as they both refer to the interviewee's critique of the culture of solo work and individualism.
Criteria: The interviewee critiques the obsession with individual work, advocating for collaboration.
Phrase: Critiquing individual work.