You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (11 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
11. 
Concepts: {Repeat the input 11}
Relationship: {What is logical relationship between concepts in code 11, or N/A if not applicable}
Criteria: {Who did what, and how for code 11}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: seeking context, seeking clarification
- Questions aimed at gathering context or further details about usage scenarios.
- Participants ask follow-up questions and encourage further discussion or seeking additional information.

2.
Concepts: user experience in educational contexts, technical and infrastructural challenges in educational settings
- User experiences and challenges in using the software within educational settings.
- User or designer discusses challenges related to technology and infrastructure in educational settings.

3.
Concepts: planning future development, setting development priorities
- Designers outline planned progression, goals, and future steps of development projects.
- Designers outline and prioritize development tasks and decision-making processes.

4.
Concepts: providing feature previews, explaining feature functionality
- Designers share visual or textual previews and introductory content related to updates.
- Designers explain and introduce specific software functionalities and upcoming features.

5.
Concepts: announcing updates, announcing version releases
- Developers announce new features, adjustments, and bug fixes to the community.
- Announcements are made about the schedule and details of new software releases.

6.
Concepts: design suggestion, accepting user suggestions
- Users offering suggestions specifically related to the ease of use and functionality of design tools.
- Designers confirm they will accept, plan, and implement future updates based on user suggestions.

7.
Concepts: educational tools, emphasize convenience
- A user discusses desired educational tools, features, and functionalities for the software to support teaching.
- A user discusses features that would enhance the convenience of using the software in an educational setting.

8.
Concepts: discussing technical details, discussing platform-specific features
- Participants provide and discuss specific technical information concerning software requirements or compatibility.
- Participants discuss and confirm software compatibility and features specific to certain platforms.

9.
Concepts: feature guidance, providing user guidance
- Designers providing instructions or advice on how to use features or tools.
- Someone provides clear instructions or guidance on how to use specific software features or components.

10.
Concepts: justify request for manual, justifying feature requests
- A user justifies a request by explaining the context or need behind it.
- Users justify feature requests with practical explanations or use cases.

11.
Concepts: seeking technical support, seeking technical information
- Users request and receive help or support with specific software issues or functionalities.
- Users ask technical questions to gain information related to the software.
===
---
Definitions for each code (11 in total):

1.
Concepts: seeking context, seeking clarification 
Relationship: Both concepts involve gathering additional information.
Criteria: Participants asked questions to gather context or further details about scenarios and actively encouraged more discussion.
Phrase: seeking further information

2.
Concepts: user experience in educational contexts, technical and infrastructural challenges in educational settings 
Relationship: Both concepts relate to experiences and challenges within educational use of the software.
Criteria: Users or designers shared experiences and discussed technical and infrastructural challenges faced in educational settings.
Phrase: discussing educational challenges

3.
Concepts: planning future development, setting development priorities 
Relationship: Both concepts relate to future planning and prioritization in development projects.
Criteria: Designers outlined planned steps, goals, and prioritized tasks for future development projects.
Phrase: outlining future plans

4.
Concepts: providing feature previews, explaining feature functionality 
Relationship: Both concepts involve sharing and explaining new software features and updates.
Criteria: Designers shared previews and explanations of new or upcoming software functionalities.
Phrase: presenting new features

5.
Concepts: announcing updates, announcing version releases 
Relationship: Both concepts involve making official announcements about software changes.
Criteria: Developers made announcements about new features, adjustments, and the release schedule of new software versions.
Phrase: making official announcements

6.
Concepts: design suggestion, accepting user suggestions 
Relationship: Both concepts involve user engagement and feedback incorporation in design.
Criteria: Users offered design suggestions, and designers confirmed acceptance and plans for future updates based on these suggestions.
Phrase: incorporating user feedback

7.
Concepts: educational tools, emphasize convenience 
Relationship: Both concepts focus on features that improve educational use and convenience.
Criteria: Users discussed desired educational tools and features that enhance the convenience of using the software in teaching.
Phrase: enhancing educational tools

8.
Concepts: discussing technical details, discussing platform-specific features 
Relationship: Both concepts involve detailed discussions about technical aspects.
Criteria: Participants provided and discussed technical information about software compatibility and platform-specific features.
Phrase: discussing technical specifics

9.
Concepts: feature guidance, providing user guidance 
Relationship: Both concepts involve giving directions on software use.
Criteria: Designers provided instructions or advice on how to use specific software features.
Phrase: providing usage instructions

10.
Concepts: justify request for manual, justifying feature requests 
Relationship: Both concepts involve explaining the rationale behind requests.
Criteria: Users justified their requests by explaining the context and practical reasons behind them.
Phrase: justifying user requests

11.
Concepts: seeking technical support, seeking technical information 
Relationship: Both concepts involve users asking for and receiving technical help.
Criteria: Users requested and received help or information related to specific technical issues or software functionalities.
Phrase: requesting technical help
---