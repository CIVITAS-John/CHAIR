You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: update scope, update scope description
- A designer describes the scope of an update or change.
- A designer describes the scope or details of an update.

2.
Concepts: expressing update size, describing update magnitude
- A designer expresses the size or scope of an upcoming update.
- The designer shares the magnitude or significance of an update.

3.
Concepts: listing updates, listing updates and changes, listing new features
- The designer lists or summarizes updates, changes, or new features.
- A designer lists new features, adjustments, and bug fixes in the platform.
- A designer or developer lists new features, updates, or changes to the online community or software.

4.
Concepts: bug fix report, listing bug fixes, listing updates and fixes
- Designer reports bug fixes or updates to the software.
- A designer lists or outlines bug fixes or updates in the software.
- The designer lists new features, bug fixes, or updates in the software.

5.
Concepts: detail new components, explains component improvements
- Details or lists new features, components, or updates.
- Explaining improvements or changes to software components or features.

6.
Concepts: update details, providing detailed information about updates, providing detailed updates, detailing component updates
- A designer details bug fixes, new features, or component updates.
- Specific details are provided about updates or features.
- Outline or summary of updates or changes in the software.
- The designer provides detailed information about new features, updates, or component adjustments.
- A designer provides a detailed overview of updates, changes, or features.
- The designer provides detailed information about component adjustments, updates, or changes.

7.
Concepts: component changes, explain component changes
- Designer discusses or mentions changes to components.
- Designer explains changes to software components or features.

8.
Concepts: version clarification, specifying version details, clarifying version information
- A designer clarifies details about a software version or feature.
- A designer specifies version details or differences between versions.
- Designer clarifies version information or differences.

9.
Concepts: clarifies version type, platform difference clarification
- Designer clarifies the version type or platform.
- A designer clarifies differences between platform versions or types.

10.
Concepts: version explanation, revealing version details, explaining current version, informing about software version
- A designer explains the type or version of a software or feature.
- Designer reveals details about a specific version of the software.
- A designer explains the current version or functionality of the software.
- A designer informs about the current software version.

11.
Concepts: version update notes, sharing version information, sharing version updates
- Designer provides notes or updates on version changes.
- Designer shares information about a specific version.
- Designer shares information about version changes or updates.

12.
Concepts: announcing release, software update announcement, announcing new version release, announcing software update, new version release, announcing new version
- Designer announces the release of a new version or update.
- Designer announces a software update or new version.
- The designer announces a new version release with updates.
- Designer announces a new software update or release.
- Designer announces the release of a new version of the software.
- The designer announces a new software version or release.

13.
Concepts: version announcement, availability announcement, component update announcement
- Designer announces the upcoming release of a new version or feature.
- Designer announces the availability of a new version or feature.
- Designer announces an update to a component or feature.

14.
Concepts: new version information, informing about new release, announcing version details
- Designer shares information about a new version or update.
- The designer informs about a new release or update.
- The designer announces version details, including new features and updates.

15.
Concepts: feature update, updating software features, announcing updates, announcing design changes, details new features
- Designer announces updates or changes to the software or features.
- Designer announces or discusses updates or changes to the software's features.
- Designer announces updates, new features, or changes to the software.
- Informing users about upcoming changes, updates, or new features.
- Informing users about upcoming changes or updates.
- A designer mentions an upcoming update or release of a software version.
- Announcement of upcoming changes or updates
- A designer lists or announces updates, new features, or bug fixes.
- The designer informs the community about an upcoming software update.
- Designer announces changes to the software's design or features.
- Designer announces or describes new features, updates, or changes to the software.

16.
Concepts: informing about updates, informing about update status
- A designer informs about an upcoming software version or update.
- Designer informs users about upcoming updates or changes.
- A designer informs users about updates, releases, or changes to the Physics Lab.
- A designer informs about the status of an upcoming software update.

17.
Concepts: informing about new versions, providing software version updates
- Designer informs about new versions or updates of the software.
- The designer provides an update on the software version.

18.
Concepts: providing updates, informing users of new updates, informing about update
- Designer keeps users informed about updates or changes.
- A designer provides updates or progress reports on the software development.
- Designer shares information about upcoming updates or releases.
- Designer informs users that new updates or versions have been shared.
- Designer informs the community about an update, change, or new feature in the software.

19.
Concepts: prioritizing tasks, prioritizing development areas, development prioritization, prioritizing development tasks ( duplicate)
- Designer prioritizes tasks or features to be developed.
- A designer prioritizes development areas or tasks.
- Designer prioritizes development tasks or features.
- A designer or developer prioritizes tasks or features in the development process ( duplicate of code 2).

20.
Concepts: prioritizing feedback, feature prioritization
- Prioritizing user feedback or suggestions in the development process.
- Prioritizing features, development, or implementation based on user needs or feedback.

21.
Concepts: suggesting prioritization, prioritization suggestion
- User suggests prioritizing tasks or features.
- Suggesting prioritization or categorization of features or tasks

22.
Concepts: prioritizing releases, prioritizing software versions
- Designer prioritizes or focuses on specific platform releases.
- Designer prioritizes the release of a specific version (e.g., PC version).
- A designer prioritizes the development or release of a specific software version.

23.
Concepts: version prioritization, prioritizing release
- Prioritizing the upload of a specific version of the software.
- Prioritizing the release or development of a specific version or feature.

24.
Concepts: outlining the software's focus, software focus explanation
- Designer outlines the focus or scope of the platform.
- Designer explains the focus or scope of the software and its potential for future expansion.

25.
Concepts: explain delay, explaining delay
- Designer explains or justifies delays or setbacks in the development process.
- Designer explains or justifies a delay or setback in the development process.

26.
Concepts: development sequence, sequencing developmental tasks, sequencing design phases
- Designer outlines the sequence of development or implementation.
- Designer outlines a sequence of tasks or priorities for development.
- Outlining the order or sequence of tasks or phases in a design or development process.

27.
Concepts: priority setting, setting timeline for mechanics, setting timeline
- A designer sets a timeline or priority for a specific task or feature.
- Designer sets a timeline or priority for developing a specific feature or component.
- Designer sets a timeline or priority for specific experiments or features.

28.
Concepts: setting deadlines, setting timeline goals, setting development timeline
- Designer sets or discusses a target deadline for a task or project.
- Designer sets a timeline goal or deadline for a specific task or feature.
- Designer sets a timeline or goal for a specific development task or milestone.

29.
Concepts: timeline expectation, setting release expectations, setting expectations for release
- Designer sets a timeline expectation for a feature or update.
- The designer sets expectations about when a feature will be released.
- Designer sets expectations or timelines for the release of a feature or update.

30.
Concepts: setting expectations, designer sets expectations
- Designer sets expectations or provides updates about a specific feature or milestone.
- Designer sets expectations or provides guidance about the software.
- Setting expectations for the software's development, features, or updates.

31.
Concepts: manage expectations, manages expectations
- A designer sets expectations or provides information about upcoming features or timelines.
- Managing expectations for complex features or functionalities.
- Designer sets or manages user expectations about upcoming updates, releases, or timelines.

32.
Concepts: expectation setting, setting realistic expectations
- Setting or managing expectations for product development or feature implementation.
- Setting realistic expectations or managing community expectations about software features or functionality.
===
Here are the definitions for each code:

---
1.
Concepts: update scope, update scope description
Relationship: The concepts are related as they both describe the scope of an update.
Criteria: A designer describes the scope or details of an update.
Phrase: Describing update scope.

2.
Concepts: expressing update size, describing update magnitude
Relationship: The concepts are related as they both convey the magnitude of an update.
Criteria: A designer expresses the size or scope of an upcoming update.
Phrase: Expressing update magnitude.

3.
Concepts: listing updates, listing updates and changes, listing new features
Relationship: The concepts are related as they all involve listing or summarizing updates or changes.
Criteria: A designer lists or summarizes updates, changes, or new features.
Phrase: Listing updates and changes.

4.
Concepts: bug fix report, listing bug fixes, listing updates and fixes
Relationship: The concepts are related as they all involve reporting or listing bug fixes or updates.
Criteria: A designer reports bug fixes or updates to the software.
Phrase: Reporting bug fixes and updates.

5.
Concepts: detail new components, explains component improvements
Relationship: The concepts are related as they both involve explaining or detailing improvements or changes.
Criteria: A designer details or lists new features, components, or updates.
Phrase: Detailing component improvements.

6.
Concepts: update details, providing detailed information about updates, providing detailed updates, detailing component updates
Relationship: The concepts are related as they all involve providing detailed information about updates or changes.
Criteria: A designer provides detailed information about new features, updates, or component adjustments.
Phrase: Providing detailed update information.

7.
Concepts: component changes, explain component changes
Relationship: The concepts are related as they both involve explaining changes to components.
Criteria: A designer explains changes to software components or features.
Phrase: Explaining component changes.

8.
Concepts: version clarification, specifying version details, clarifying version information
Relationship: The concepts are related as they all involve clarifying or specifying version details.
Criteria: A designer clarifies details about a software version or feature.
Phrase: Clarifying version information.

9.
Concepts: clarifies version type, platform difference clarification
Relationship: The concepts are related as they both involve clarifying version types or platform differences.
Criteria: A designer clarifies the version type or platform.
Phrase: Clarifying version type.

10.
Concepts: version explanation, revealing version details, explaining current version, informing about software version
Relationship: The concepts are related as they all involve explaining or revealing version details.
Criteria: A designer explains the type or version of a software or feature.
Phrase: Explaining software version.

11.
Concepts: version update notes, sharing version information, sharing version updates
Relationship: The concepts are related as they all involve sharing information about version updates.
Criteria: A designer shares information about a specific version.
Phrase: Sharing version updates.

12.
Concepts: announcing release, software update announcement, announcing new version release, announcing software update, new version release, announcing new version
Relationship: The concepts are related as they all involve announcing a new version or update.
Criteria: A designer announces the release of a new version or update.
Phrase: Announcing software updates.

13.
Concepts: version announcement, availability announcement, component update announcement
Relationship: The concepts are related as they all involve announcing upcoming releases or updates.
Criteria: A designer announces the upcoming release of a new version or feature.
Phrase: Announcing upcoming releases.

14.
Concepts: new version information, informing about new release, announcing version details
Relationship: The concepts are related as they all involve sharing information about new versions or releases.
Criteria: A designer shares information about a new version or update.
Phrase: Informing about new releases.

15.
Concepts: feature update, updating software features, announcing updates, announcing design changes, details new features
Relationship: The concepts are related as they all involve announcing or discussing updates or changes.
Criteria: A designer announces updates or changes to the software or features.
Phrase: Announcing feature updates.

16.
Concepts: informing about updates, informing about update status
Relationship: The concepts are related as they both involve informing users about updates.
Criteria: A designer informs about an upcoming software version or update.
Phrase: Informing about updates.

17.
Concepts: informing about new versions, providing software version updates
Relationship: The concepts are related as they both involve informing users about new versions or updates.
Criteria: A designer informs about new versions or updates of the software.
Phrase: Informing about new versions.

18.
Concepts: providing updates, informing users of new updates, informing about update
Relationship: The concepts are related as they all involve providing updates or information about updates.
Criteria: A designer keeps users informed about updates or changes.
Phrase: Providing updates.

19.
Concepts: prioritizing tasks, prioritizing development areas, development prioritization, prioritizing development tasks
Relationship: The concepts are related as they all involve prioritizing tasks or development areas.
Criteria: A designer prioritizes tasks or features to be developed.
Phrase: Prioritizing development tasks.

20.
Concepts: prioritizing feedback, feature prioritization
Relationship: The concepts are related as they both involve prioritizing based on user feedback or needs.
Criteria: A designer prioritizes features, development, or implementation based on user needs or feedback.
Phrase: Prioritizing feedback.

21.
Concepts: suggesting prioritization, prioritization suggestion
Relationship: The concepts are related as they both involve suggesting prioritization.
Criteria: User suggests prioritizing tasks or features.
Phrase: Suggesting prioritization.

22.
Concepts: prioritizing releases, prioritizing software versions
Relationship: The concepts are related as they both involve prioritizing releases or software versions.
Criteria: A designer prioritizes or focuses on specific platform releases.
Phrase: Prioritizing releases.

23.
Concepts: version prioritization, prioritizing release
Relationship: The concepts are related as they both involve prioritizing versions or releases.
Criteria: A designer prioritizes the upload of a specific version of the software.
Phrase: Prioritizing version releases.

24.
Concepts: outlining the software's focus, software focus explanation
Relationship: The concepts are related as they both involve explaining the focus or scope of the software.
Criteria: A designer outlines the focus or scope of the platform.
Phrase: Outlining software focus.

25.
Concepts: explain delay, explaining delay
Relationship: The concepts are related as they both involve explaining delays or setbacks.
Criteria: A designer explains or justifies delays or setbacks in the development process.
Phrase: Explaining delays.

26.
Concepts: development sequence, sequencing developmental tasks, sequencing design phases
Relationship: The concepts are related as they all involve outlining the sequence of development or implementation.
Criteria: A designer outlines the sequence of development or implementation.
Phrase: Outlining development sequence.

27.
Concepts: priority setting, setting timeline for mechanics, setting timeline
Relationship: The concepts are related as they all involve setting priorities or timelines.
Criteria: A designer sets a timeline or priority for a specific task or feature.
Phrase: Setting priorities.

28.
Concepts: setting deadlines, setting timeline goals, setting development timeline
Relationship: The concepts are related as they all involve setting deadlines or timelines.
Criteria: A designer sets a timeline or deadline for a specific task or feature.
Phrase: Setting deadlines.

29.
Concepts: timeline expectation, setting release expectations, setting expectations for release
Relationship: The concepts are related as they all involve setting expectations for releases or timelines.
Criteria: A designer sets a timeline expectation for a feature or update.
Phrase: Setting release expectations.

30.
Concepts: setting expectations, designer sets expectations
Relationship: The concepts are related as they both involve setting expectations.
Criteria: A designer sets expectations or provides updates about a specific feature or milestone.
Phrase: Setting expectations.

31.
Concepts: manage expectations, manages expectations
Relationship: The concepts are related as they both involve managing expectations.
Criteria: A designer sets or manages user expectations about upcoming updates, releases, or timelines.
Phrase: Managing expectations.

32.
Concepts: expectation setting, setting realistic expectations
Relationship: The concepts are related as they both involve setting or managing expectations.
Criteria: A designer sets or manages expectations for product development or feature implementation.
Phrase: Setting realistic expectations.