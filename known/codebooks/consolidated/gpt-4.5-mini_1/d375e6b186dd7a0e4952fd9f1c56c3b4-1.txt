You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (25 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
25. 
Concepts: {Repeat the input 25}
Relationship: {What is logical relationship between concepts in code 25, or N/A if not applicable}
Criteria: {Who did what, and how for code 25}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: provide android update timeline, manage software release schedule
- Designers give a timeline for expected updates on specific platforms.
- Designers outline and communicate timelines for future software updates to inform users effectively.

2.
Concepts: share development goals and plans, outline future development plans
- Developers discuss intended goals for projects and indicate future development plans and focus areas.
- Designers discuss organizational plans while mentioning potential future projects and development efforts.

3.
Concepts: explaining design goals, explain instructional design rationale
- Designers explain the design objectives that prioritize usability and user-friendly experiences.
- Designers explain the intentions and rationale behind feature designs aimed at user-friendliness.

4.
Concepts: specifics, confirm system requirements
- User provides specific information about system requirements or compatibility.
- Designers respond to user inquiries about technical information and system requirements for compatibility clarification.

5.
Concepts: give usage instructions, offer feature guidance
- A designer provides guidance on how to properly use features of the software.
- Designers offer instructions and advice based on experience to help users maximize software effectiveness.

6.
Concepts: user guidance, instruction and updates
- The designer provides comprehensive usage instructions and updates for new software features to guide users.
- Designers providing updates and instructions to help users understand and use the software effectively.

7.
Concepts: justify feature requests, gather and request software enhancements
- Users articulate reasons for proposed features to enhance software convenience and educational effectiveness.
- Users request new features and additional experiments relevant to the software's utility.

8.
Concepts: collect user feedback, provide community feedback
- Users provide input or feedback on the software and suggest improvements.
- Users provide feedback and suggestions aimed at improving the software product.

9.
Concepts: further suggestion, elaborate on suggestions
- User provides additional advice or recommendations building on a previous suggestion.
- Designers elaborate on responses and previously made suggestions, providing relevant experiences.

10.
Concepts: provide answers and invite questions, ask follow-up questions for clarity
- Designers answer user questions and foster further dialogue for shared understanding.
- Designers engage with users to clarify their needs and address specific software-related inquiries.

11.
Concepts: explain and clarify features, clarify functionality of features
- Designers share insights on new features and clarify their functionalities for users.
- Designers clarify the functionality of existing features to enhance users' effective use of the software.

12.
Concepts: highlight technology issues, share past challenges in educational contexts
- Users articulate challenges posed by technology limitations impacting educational software usability.
- Users share incidents that illustrate educational challenges faced while using the software within schools.

13.
Concepts: shared experiences and support, share experiences and outcomes
- Users and designers sharing experiences and supporting each other in using and improving the software.
- Designers and users reflect and share their experiences with the software, highlighting positive outcomes in education.

14.
Concepts: use emojis for expression, enhance communication with non-verbal cues
- Users effectively use emojis to express emotions and enhance interaction within community discussions.
- Users employ visual cues, such as emojis, to enhance their expressions and communication effectiveness.

15.
Concepts: express acknowledgment and support, engage positively and express appreciation
- Users express gratitude and encouragement, fostering a supportive atmosphere within the community.
- Users positively interact with each other and express appreciation within the community.

16.
Concepts: acknowledge assistance received, acknowledge and express gratitude
- Users express gratitude and recognize those who have assisted them with resources.
- Community members acknowledge and express gratitude towards each other for their supportive contributions.

17.
Concepts: share and encourage resource sharing, foster collaborative learning in the community
- Designers share valuable resources and promote the practice of collective sharing among community members.
- Designers encourage collaboration among users for knowledge sharing and problem-solving.

18.
Concepts: provide contextual insights, share user backgrounds to establish credibility
- Users provide context for their comments to enhance community understanding and reactions.
- Users share their relevant backgrounds, establishing context and credibility in community discussions.

19.
Concepts: inquire about software versions, inquire about platform compatibility
- Users request information on accessing different software versions and platforms for clarity.
- Users ask questions regarding proper usage and platform compatibility for effective software implementation.

20.
Concepts: confirm collaborative development, promise to invite feedback from everyone in the group
- Designers confirm plans to involve community feedback and announce development intentions for collective engagement.
- Developer promises to seek feedback from the community before proceeding with development.

21.
Concepts: acknowledge and implement feedback, encourage and acknowledge community feedback
- Designers acknowledge user feedback and plans to implement suggested features, ensuring community voices are considered.
- Designers encourage community suggestions and acknowledge user feedback, promoting dialogue.

22.
Concepts: gather opinions and use memory aids, engage community for co-designing input
- Designers gather additional information from the community and indicate plans to collect user opinions for development features.
- Designers seek community input for co-designing software features and gathering suggestions before implementation.

23.
Concepts: encouraging interaction, encourage in-group discussion
- The designer encourages users to engage by sharing suggestions and questions in the group.
- The designer encourages users to discuss issues openly within the community platform without politeness barriers.

24.
Concepts: facilitate open dialogue, foster community engagement
- Designers promote open discussions and encourage active participation in community development discussions.
- Designers encourage active participation and facilitate discussions to enhance community engagement.

25.
Concepts: reassure and address user concerns, react to feedback and explain delays
- Designers reassure users about their concerns and provide explanations to alleviate doubts.
- Designers reassure users about future improvements, explaining any delays in response to user inquiries.
===
---
Definitions for each code (25 in total):
1.
Concepts: provide android update timeline, manage software release schedule
Relationship: Designers create a structured approach to inform users about upcoming updates.
Criteria: Designers give a timeline for expected updates and communicate future software release schedules to inform users effectively.
Phrase: Communicate software update timelines.

2.
Concepts: share development goals and plans, outline future development plans
Relationship: Developers and designers coordinate their future objectives and directions.
Criteria: Developers discuss intended project goals while designers outline potential future development efforts.
Phrase: Discuss future development goals.

3.
Concepts: explaining design goals, explain instructional design rationale
Relationship: Designers articulate the intentions behind the development choices focused on usability.
Criteria: Designers explain design objectives that prioritize usability and the rationale behind user-friendly feature designs.
Phrase: Articulate design intentions.

4.
Concepts: specifics, confirm system requirements
Relationship: Users provide detailed information that influences design responses regarding compatibility.
Criteria: Users give specifics about system requirements while designers clarify technical points and compatibility.
Phrase: Clarify system requirements.

5.
Concepts: give usage instructions, offer feature guidance
Relationship: Designers provide the necessary guidance to enhance user experience with the software.
Criteria: Designers provide instructions on software feature usage to help users maximize effectiveness.
Phrase: Offer usage instructions.

6.
Concepts: user guidance, instruction and updates
Relationship: Designers facilitate user understanding through comprehensive instruction related to updates.
Criteria: Designers provide updates and detailed usage instructions to help users effectively operate the software.
Phrase: Provide user guidance.

7.
Concepts: justify feature requests, gather and request software enhancements
Relationship: Users express needs that inform designers about potential software improvements.
Criteria: Users articulate reasons for proposed features and request enhancements to improve software utility.
Phrase: Request software enhancements.

8.
Concepts: collect user feedback, provide community feedback
Relationship: Users actively contribute input that informs software development.
Criteria: Users provide feedback and suggest improvements to enhance the software product.
Phrase: Gather user feedback.

9.
Concepts: further suggestion, elaborate on suggestions
Relationship: Users build on previous ideas, enhancing the dialogue around improvements.
Criteria: Users provide additional recommendations, and designers elaborate on previous suggestions with relevant experiences.
Phrase: Elaborate on user suggestions.

10.
Concepts: provide answers and invite questions, ask follow-up questions for clarity
Relationship: Designers engage users in a two-way communication process to enhance understanding.
Criteria: Designers answer user questions while fostering dialogue for clarity on software-related inquiries.
Phrase: Engage in dialogue with users.

11.
Concepts: explain and clarify features, clarify functionality of features
Relationship: Designers communicate details about features to support user engagement.
Criteria: Designers share insights on new features and clarify their functionalities for effective user utilization.
Phrase: Clarify software features.

12.
Concepts: highlight technology issues, share past challenges in educational contexts
Relationship: Users articulate barriers affecting software use in educational settings.
Criteria: Users share challenges and concerns regarding technology limitations affecting educational software usability.
Phrase: Discuss technology challenges.

13.
Concepts: shared experiences and support, share experiences and outcomes
Relationship: Users and designers create a supportive environment based on shared experiences.
Criteria: Users and designers share experiences that highlight positive outcomes in using the software within educational contexts.
Phrase: Share experiences within the community.

14.
Concepts: use emojis for expression, enhance communication with non-verbal cues
Relationship: Users utilize non-verbal elements to improve interactions within discussions.
Criteria: Users effectively use emojis and visual cues to enhance their expressions and communication in the community.
Phrase: Enhance communication through emojis.

15.
Concepts: express acknowledgment and support, engage positively and express appreciation
Relationship: Users foster a community atmosphere through positive interactions.
Criteria: Users express gratitude and encouragement to support a positive environment.
Phrase: Foster positive community interactions.

16.
Concepts: acknowledge assistance received, acknowledge and express gratitude
Relationship: Users recognize and appreciate helpful contributions from others.
Criteria: Users express gratitude and acknowledge others’ supportive contributions within the community.
Phrase: Express gratitude for assistance.

17.
Concepts: share and encourage resource sharing, foster collaborative learning in the community
Relationship: Designers promote knowledge sharing to enhance community learning.
Criteria: Designers share valuable resources and encourage collaborative knowledge sharing among community members.
Phrase: Promote resource sharing.

18.
Concepts: provide contextual insights, share user backgrounds to establish credibility
Relationship: Users enhance their contributions with personal context to support dialogue.
Criteria: Users provide context for their comments to enhance understanding and establish credibility within discussions.
Phrase: Provide contextual insights.

19.
Concepts: inquire about software versions, inquire about platform compatibility
Relationship: Users seek critical information regarding software use across different platforms.
Criteria: Users request clarity on different software versions and platform compatibility for effective usage.
Phrase: Inquire about software compatibility.

20.
Concepts: confirm collaborative development, promise to invite feedback from everyone in the group
Relationship: Designers ensure community involvement in development processes.
Criteria: Designers confirm plans to involve community feedback and promise engagement in development efforts.
Phrase: Confirm community involvement.

21.
Concepts: acknowledge and implement feedback, encourage and acknowledge community feedback
Relationship: Designers respond to community input, fostering a culture of feedback.
Criteria: Designers acknowledge user feedback and commit to implementing suggested features, ensuring community voices are heard.
Phrase: Implement community feedback.

22.
Concepts: gather opinions and use memory aids, engage community for co-designing input
Relationship: Designers actively involve users in the development process, enhancing feature relevance.
Criteria: Designers seek community input and gather opinions for co-designing software features before implementation.
Phrase: Engage community for input.

23.
Concepts: encouraging interaction, encourage in-group discussion
Relationship: Designers motivate users to share thoughts and questions within the community context.
Criteria: Designers encourage users to engage in open discussions and share suggestions without hesitation.
Phrase: Encourage group interaction.

24.
Concepts: facilitate open dialogue, foster community engagement
Relationship: Designers promote active participation and communication among community members.
Criteria: Designers facilitate discussions and encourage participation to enhance community engagement.
Phrase: Foster open dialogue.

25.
Concepts: reassure and address user concerns, react to feedback and explain delays
Relationship: Designers provide support by addressing user concerns and maintaining transparency.
Criteria: Designers reassure users about their concerns and explain any delays related to their inquiries.
Phrase: Address user concerns.