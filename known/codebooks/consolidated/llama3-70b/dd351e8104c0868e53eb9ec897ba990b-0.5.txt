You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: guiding software use, guiding access to features, guiding users
- Designer guides users on how to use the software or platform.
- A designer guides users on how to access specific features or functionalities of the platform.
- The designer provides step-by-step instructions or guidance on how to use a feature or component.

2.
Concepts: explaining usage, providing usage instructions
- Providing explanations or instructions on how to use the software.
- Providing instructions or guidelines for using a feature.

3.
Concepts: offering guidance, providing prompts
- Offering guidance or instructions on how to use the software
- Providing guidance or instructions on how to use the software

4.
Concepts: personalized assistance, providing individualized attention, providing individualized support
- Designer offers personalized assistance or support to users.
- A designer provides individualized attention or support.
- Designer offers individualized support or assistance.

5.
Concepts: offering assistance, offering technical support
- Offering assistance or support to users
- Providing technical assistance or guidance to users.

6.
Concepts: emphasizing categorization, emphasizing categorization and prioritization
- Emphasizing the importance of categorization or organization
- User emphasizes the importance of categorization and prioritization.

7.
Concepts: providing educational insight, providing insight into common practices
- Providing insight into educational norms or standards
- Providing insight into common practices, methods, or approaches in education or teaching.

8.
Concepts: describing outdated systems, highlighting outdated technology
- User describes an environment or system that is old or outdated.
- A user highlights outdated technology or infrastructure in their setting.

9.
Concepts: confirming common style, confirming common practices
- A user confirms or agrees with a common style or practice.
- A user confirms a common practice or understanding.
- A user confirms the commonality of a particular style or practice.
- A user confirms or agrees with a common practice or standard.

10.
Concepts: contextualizing response, providing context for inquiry, contextualizing question
- A response that provides context or background information to a question or topic.
- Providing context or background information for a question or inquiry.
- Providing context or background information to clarify or justify a question or request.

11.
Concepts: providing information, providing explanations
- Providing information or explanations about a topic or feature.
- Providing explanations or clarifications about a specific topic or feature.
- Providing explanations or clarifications about the software's features.

12.
Concepts: enhancing understanding, building understanding
- Enhancing understanding or clarifying information.
- Building understanding, explaining, or clarifying concepts, features, or functionalities.

13.
Concepts: promoting understanding, facilitating user understanding
- Designer explains or clarifies information to promote understanding of a concept or feature.
- Designer provides instructions or explanations to help users understand the platform.

14.
Concepts: version information, specifying software version
- Designer shares information about a specific version of the software.
- Providing additional information about a specific version or release
- A designer specifies or clarifies the version of the software being referred to.

15.
Concepts: version clarification, clarify version type
- Clarifying the version or type of a product or feature
- Clarifying details about a specific version or platform
- Clarifying or providing information about software versions.

16.
Concepts: clarifying version differences, clarifying platform differences
- Clarifying differences between versions or releases
- Clarifying or providing additional information about differences between platforms or versions.
- Designer clarifies differences between platform-specific releases.

17.
Concepts: highlighting technical challenges, highlighting technical constraints
- User highlights technical challenges or difficulties.
- A user or designer highlights technical constraints or limitations that affect the platform's usage.

18.
Concepts: identifying gaps, identifying product gaps
- A user identifies a gap or limitation in existing tools or software.
- User identifies a gap or limitation in the current product.

19.
Concepts: expressing confusion, expressing confusion about software
- User expresses confusion or uncertainty about a process or feature.
- Users express confusion or uncertainty about the software or its features.

20.
Concepts: frustration, expressing frustration with limitations
- User or designer expresses frustration or annoyance.
- Expressing frustration or dissatisfaction with current limitations or features.
- A designer expresses dissatisfaction or frustration with the current state of something.
- User or designer expresses frustration with limitations or restrictions.

21.
Concepts: describing software limitations, explaining software limitations
- Describing limitations or constraints of the software or its features.
- Users explain reasons behind certain limitations or restrictions in the software.
- Designer explains current limitations or constraints of software.

22.
Concepts: explaining limitations, highlighting technical limitations
- Explaining or describing limitations, constraints, or technical issues.
- Explaining or justifying limitations or constraints in the software or experiment.
- Discussions or mentions of technical limitations or constraints.

23.
Concepts: considering limitations, considering implementation constraints
- Considering or discussing limitations or potential issues with a feature or development.
- Considerations of constraints or limitations in implementing features.

24.
Concepts: managing limitations, addressing limitations, highlighting constraints
- A designer manages limitations or compatibility issues with the software.
- A designer addresses limitations or potential issues in the software.
- A designer highlights limitations or constraints in the software.

25.
Concepts: informing limitations, explaining system limitations, clarifying software limitations, discussing limitations
- A designer informs users about the software's limitations or incompatibilities.
- The designer explains limitations or constraints of a system or feature.
- Designer explains why something cannot be solved due to system limitations.
- Designer clarifies software limitations or constraints.
- A designer discusses limitations or constraints of the software or a specific feature.

26.
Concepts: design constraints, justifying limitations, explaining design limitations
- Clarifying the limitations or constraints of a design or feature
- Justifying limitations or constraints in a design or feature.
- Explaining the limitations or constraints of a particular feature or design

27.
Concepts: technical limitations, considering technical limitations
- User or designer mentions technical limitations or constraints.
- Technical issues or limitations are discussed or acknowledged.
- Designer considers or mentions technical limitations or constraints.

28.
Concepts: exploring technical constraints, adapting to technical constraints
- Designer explores or inquires about technical constraints or limitations.
- A designer adapts to or discusses technical constraints or limitations.

29.
Concepts: expressing caution, warning about potential issues
- Expressing caution or warning about potential pitfalls or limitations
- Warnings or cautions about potential issues or limitations.

30.
Concepts: limitation acknowledgment, acknowledging limitations
- Acknowledging limitations or potential issues
- Acknowledging limitations or constraints of a feature or system.
- A designer acknowledges limitations or potential issues with their previous statement.
- Designer acknowledges the need for manual editing and provides a timeline for implementation.

31.
Concepts: balancing complexity with usability, balancing complexity and ease of use
- Balancing complexity and usability in design decisions.
- A designer acknowledges the tension between creating a comprehensive tool and maintaining ease of use.

32.
Concepts: explaining complexity, explaining development complexity, explaining development challenges
- Designers explain the complexity of a feature or development process.
- The designer explains the complexity or challenges of developing a particular feature or functionality.
- A designer explains the challenges or complexities of developing a feature.
===
Here are the definitions for each code:

---
1.
Concepts: guiding software use, guiding access to features, guiding users
Relationship: The concepts are related in that they all involve the designer providing direction or instruction to users.
Criteria: The designer provides guidance on software use, access to features, or step-by-step instructions.
Phrase: Guiding users on software use.

2.
Concepts: explaining usage, providing usage instructions
Relationship: The concepts are related in that they both involve providing information on how to use the software.
Criteria: The designer provides explanations or instructions on software usage.
Phrase: Explaining software usage.

3.
Concepts: offering guidance, providing prompts
Relationship: The concepts are related in that they both involve the designer providing direction or instruction to users.
Criteria: The designer offers guidance or provides prompts on software use.
Phrase: Offering guidance on software use.

4.
Concepts: personalized assistance, providing individualized attention, providing individualized support
Relationship: The concepts are related in that they all involve the designer providing tailored support to users.
Criteria: The designer provides personalized assistance, individualized attention, or support to users.
Phrase: Providing personalized assistance.

5.
Concepts: offering assistance, offering technical support
Relationship: The concepts are related in that they both involve the designer providing help to users.
Criteria: The designer offers assistance or technical support to users.
Phrase: Offering technical support.

6.
Concepts: emphasizing categorization, emphasizing categorization and prioritization
Relationship: The concepts are related in that they both involve highlighting the importance of organization.
Criteria: The user emphasizes the importance of categorization or prioritization.
Phrase: Emphasizing categorization.

7.
Concepts: providing educational insight, providing insight into common practices
Relationship: The concepts are related in that they both involve providing information on educational norms.
Criteria: The designer provides insight into educational norms or common practices.
Phrase: Providing educational insight.

8.
Concepts: describing outdated systems, highlighting outdated technology
Relationship: The concepts are related in that they both involve discussing old or outdated systems.
Criteria: The user describes or highlights outdated systems or technology.
Phrase: Describing outdated systems.

9.
Concepts: confirming common style, confirming common practices
Relationship: The concepts are related in that they both involve agreeing with common practices.
Criteria: The user confirms or agrees with common styles or practices.
Phrase: Confirming common practices.

10.
Concepts: contextualizing response, providing context for inquiry, contextualizing question
Relationship: The concepts are related in that they all involve providing background information.
Criteria: The user provides context or background information for a question or topic.
Phrase: Providing context for inquiry.

11.
Concepts: providing information, providing explanations
Relationship: The concepts are related in that they both involve providing information or clarification.
Criteria: The designer provides information or explanations about a topic or feature.
Phrase: Providing information.

12.
Concepts: enhancing understanding, building understanding
Relationship: The concepts are related in that they both involve clarifying or explaining information.
Criteria: The designer enhances or builds understanding of a concept or feature.
Phrase: Enhancing understanding.

13.
Concepts: promoting understanding, facilitating user understanding
Relationship: The concepts are related in that they both involve helping users understand.
Criteria: The designer promotes or facilitates user understanding of a concept or feature.
Phrase: Facilitating user understanding.

14.
Concepts: version information, specifying software version
Relationship: The concepts are related in that they both involve providing information about software versions.
Criteria: The designer shares information about a specific software version.
Phrase: Providing version information.

15.
Concepts: version clarification, clarify version type
Relationship: The concepts are related in that they both involve clarifying software versions.
Criteria: The designer clarifies or provides information about software versions.
Phrase: Clarifying software versions.

16.
Concepts: clarifying version differences, clarifying platform differences
Relationship: The concepts are related in that they both involve explaining differences between versions or platforms.
Criteria: The designer clarifies differences between software versions or platforms.
Phrase: Clarifying version differences.

17.
Concepts: highlighting technical challenges, highlighting technical constraints
Relationship: The concepts are related in that they both involve discussing technical limitations.
Criteria: The user or designer highlights technical challenges or constraints.
Phrase: Highlighting technical challenges.

18.
Concepts: identifying gaps, identifying product gaps
Relationship: The concepts are related in that they both involve recognizing limitations or needs.
Criteria: The user identifies gaps or limitations in existing tools or software.
Phrase: Identifying product gaps.

19.
Concepts: expressing confusion, expressing confusion about software
Relationship: The concepts are related in that they both involve expressing uncertainty or uncertainty about software.
Criteria: The user expresses confusion or uncertainty about a process or feature.
Phrase: Expressing confusion.

20.
Concepts: frustration, expressing frustration with limitations
Relationship: The concepts are related in that they both involve expressing dissatisfaction or annoyance.
Criteria: The user or designer expresses frustration or dissatisfaction with limitations or features.
Phrase: Expressing frustration.

21.
Concepts: describing software limitations, explaining software limitations
Relationship: The concepts are related in that they both involve discussing software limitations.
Criteria: The user or designer describes or explains software limitations.
Phrase: Describing software limitations.

22.
Concepts: explaining limitations, highlighting technical limitations
Relationship: The concepts are related in that they both involve discussing limitations or constraints.
Criteria: The designer explains or highlights limitations or technical issues.
Phrase: Explaining limitations.

23.
Concepts: considering limitations, considering implementation constraints
Relationship: The concepts are related in that they both involve discussing potential issues or constraints.
Criteria: The designer considers or discusses limitations or potential issues with a feature.
Phrase: Considering limitations.

24.
Concepts: managing limitations, addressing limitations, highlighting constraints
Relationship: The concepts are related in that they all involve dealing with limitations or constraints.
Criteria: The designer manages, addresses, or highlights limitations or constraints.
Phrase: Managing limitations.

25.
Concepts: informing limitations, explaining system limitations, clarifying software limitations, discussing limitations
Relationship: The concepts are related in that they all involve discussing software limitations or constraints.
Criteria: The designer informs, explains, or clarifies software limitations or constraints.
Phrase: Informing limitations.

26.
Concepts: design constraints, justifying limitations, explaining design limitations
Relationship: The concepts are related in that they all involve discussing design limitations or constraints.
Criteria: The designer clarifies, justifies, or explains design limitations or constraints.
Phrase: Justifying design limitations.

27.
Concepts: technical limitations, considering technical limitations
Relationship: The concepts are related in that they both involve discussing technical limitations or constraints.
Criteria: The user or designer mentions or considers technical limitations or constraints.
Phrase: Discussing technical limitations.

28.
Concepts: exploring technical constraints, adapting to technical constraints
Relationship: The concepts are related in that they both involve dealing with technical limitations or constraints.
Criteria: The designer explores or adapts to technical constraints or limitations.
Phrase: Adapting to technical constraints.

29.
Concepts: expressing caution, warning about potential issues
Relationship: The concepts are related in that they both involve warning or cautioning about potential pitfalls.
Criteria: The user or designer expresses caution or warns about potential issues or limitations.
Phrase: Expressing caution.

30.
Concepts: limitation acknowledgment, acknowledging limitations
Relationship: The concepts are related in that they both involve recognizing or acknowledging limitations.
Criteria: The user or designer acknowledges limitations or potential issues.
Phrase: Acknowledging limitations.

31.
Concepts: balancing complexity with usability, balancing complexity and ease of use
Relationship: The concepts are related in that they both involve finding a balance between complexity and usability.
Criteria: The designer balances complexity and usability in design decisions.
Phrase: Balancing complexity and usability.

32.
Concepts: explaining complexity, explaining development complexity, explaining development challenges
Relationship: The concepts are related in that they all involve discussing the complexity of development.
Criteria: The designer explains the complexity or challenges of developing a feature or functionality.
Phrase: Explaining development complexity.