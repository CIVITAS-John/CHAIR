You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (8 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
8. 
Concepts: {Repeat the input 8}
Relationship: {What is logical relationship between concepts in code 8, or N/A if not applicable}
Criteria: {Who did what, and how for code 8}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: share design aspirations, explaining design goals
- Designers communicate their thoughts on software design priorities and express aspirations for future developments.
- Designers articulate the goals of the software to ensure it is user-friendly and effective, encouraging feedback from users.

2.
Concepts: elaborate on suggestions, propose feature enhancements
- Designers elaborate on user suggestions or software experiences for clarity.
- Designers share existing research efforts and propose ideas for software feature expansion.

3.
Concepts: instruction and updates, offer guidance on features
- Designers providing updates and instructions to help users understand and use the software effectively.
- Designers deliver clear instructions and guidelines to assist users in utilizing new software features effectively.

4.
Concepts: facilitate community feedback loops, consult the community for feedback
- Instances where user feedback and suggestions inform design discipline.
- Designers proactively seek community input on technical aspects and develop plans to incorporate this input into their processes.

5.
Concepts: incorporate user feedback, align design with feedback
- Designers adapt software design based on user feedback and demonstrate commitment to enhancements.
- Designers make decisions on software features in response to user feedback to inform future development.

6.
Concepts: propose feature requests, request additional experiments
- Users propose enhancements to the Physics Lab tool based on their experiences.
- Users request that specific types of experiments be included in future software updates.

7.
Concepts: gather educational insights, consult and ask teachers for needs
- Designers engage with users to gather information about their educational contexts and tailor interactions accordingly.
- Designers consult teachers, gather feedback, and integrate their specific educational needs into software development.

8.
Concepts: question, inquire about software
- Individuals pose various questions regarding software features and updates, creating dialogue.
- Users pose technical questions to clarify functionality and express interest in specific software features.
===
---
Definitions for each code (8 in total):
1.
Concepts: share design aspirations, explaining design goals
Relationship: Both concepts involve designers communicating their vision and objectives for the software, creating a basis for user engagement.
Criteria: Designers articulate their aspirations and goals for software design to ensure user-friendliness and encourage feedback.
Phrase: Communicate design aspirations and goals.

2.
Concepts: elaborate on suggestions, propose feature enhancements
Relationship: Both concepts involve designers responding to user input for improved software clarity and functionality.
Criteria: Designers clarify user suggestions and propose potential enhancements based on user experiences.
Phrase: Enhance software through user suggestions.

3.
Concepts: instruction and updates, offer guidance on features
Relationship: Both concepts deal with the provision of essential information to help users navigate and utilize the software effectively.
Criteria: Designers provide instructions and updates to assist users in understanding and using new software features.
Phrase: Provide instructions and guidance.

4.
Concepts: facilitate community feedback loops, consult the community for feedback
Relationship: Both concepts highlight how designers engage with the community to refine and improve the software based on user insights.
Criteria: Designers actively seek and incorporate community feedback into their design processes.
Phrase: Engage in community feedback loops.

5.
Concepts: incorporate user feedback, align design with feedback
Relationship: Both concepts focus on the adaptation of software design influenced by user opinions, demonstrating a responsive design approach.
Criteria: Designers modify software features based on user feedback to ensure alignment with community needs.
Phrase: Adapt design to user feedback.

6.
Concepts: propose feature requests, request additional experiments
Relationship: Both concepts reflect user initiatives to enhance the software's functionality based on personal use and experiences.
Criteria: Users suggest new features and request additional experiments for future software updates.
Phrase: Suggest feature enhancements.

7.
Concepts: gather educational insights, consult and ask teachers for needs
Relationship: Both concepts emphasize the importance of understanding the educational requirements of users to tailor the software accordingly.
Criteria: Designers engage teachers to collect insights about their educational contexts and incorporate those needs into software development.
Phrase: Gather educational insights from teachers.

8.
Concepts: question, inquire about software
Relationship: Both concepts involve users initiating dialogues to seek clarity about the software's features and functionalities.
Criteria: Users ask questions about software features and updates to gain a better understanding.
Phrase: Inquire about software features.
---