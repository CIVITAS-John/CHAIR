You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (15 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
15. 
Concepts: {Repeat the input 15}
Relationship: {What is logical relationship between concepts in code 15, or N/A if not applicable}
Criteria: {Who did what, and how for code 15}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: clarify priorities and outline plans, acknowledge and clarify future plans
- Designer clarifies priorities and outlines development plans.
- Designer acknowledges and clarifies future development plans or goals.

2.
Concepts: share progress updates, provide progress updates
- Designer shares progress updates with users.
- Designer updates the community on progress or status of a task or development.

3.
Concepts: engage in participatory design, user engages in participatory design
- Designer engages users in participatory design and fosters user involvement.
- User engagement in participatory design or feedback

4.
Concepts: clarifying options, provide clarification and clarify design aspects
- A designer clarifies or explains options or possibilities.
- Designer provides clarification and clarifies design aspects.

5.
Concepts: guiding users on technical constraints, explaining technical constraints and limitations
- Guiding users to understand technical constraints or limitations.
- Users explain and provide context for constraints or limitations on technology use.

6.
Concepts: seek user needs and context, facilitate understanding of user context
- Designer seeks user needs and context.
- Designer facilitates understanding of the user's context or situation.

7.
Concepts: seek alternative solutions, consider alternative design
- Designer seeks alternative solutions and offers alternatives.
- Considering or exploring alternative design options or approaches.

8.
Concepts: expressing gratitude and appreciation, appreciating user support and contributions
- Users and designers express gratitude and appreciation towards each other.
- Designers appreciate user support and acknowledge user feedback and contributions.

9.
Concepts: celebrate community development, celebrating progress and growth
- A user celebrates or acknowledges the progress or development of the community.
- Users celebrate and acknowledge progress and express enthusiasm and excitement.

10.
Concepts: aligning with others, expressing agreement with others
- Expressing agreement or alignment with someone's statement.
- Users express agreement with a statement or idea.

11.
Concepts: making detailed suggestions, suggesting improvements and new features
- Community members propose detailed or specific suggestions for the software.
- Community members suggest refining features or improvements and recommend additional functionality.

12.
Concepts: requesting features and functionalities, express desire for specific software features
- Users express a need or desire for a specific feature or functionality.
- Expressing desires or wishes for specific software features or functionalities.

13.
Concepts: providing user feedback, sharing positive feedback
- Users provide feedback about their experiences with the software.
- Users share positive feedback and experiences with the software.

14.
Concepts: acknowledging software quality, complimenting software design and features
- Users praise and acknowledge the craftsmanship and attention to detail in software.
- Users compliment and appreciate the design or functionality of the software.

15.
Concepts: responding to user feedback
- A user reacts or responds to user feedback or suggestions.
- Designers respond to users and acknowledge their feedback or concerns.
===
Here are the definitions for each code:

---
1.
Concepts: clarify priorities and outline plans, acknowledge and clarify future plans
Relationship: The concepts are related in that they both involve the designer providing clarity and direction for the development process.
Criteria: Designers clarify priorities and plans, and acknowledge future development goals.
Phrase: Clarify development plans.

2.
Concepts: share progress updates, provide progress updates
Relationship: The concepts are synonymous, both referring to the act of sharing information about the development process.
Criteria: Designers provide updates on progress or status of tasks or developments.
Phrase: Share progress updates.

3.
Concepts: engage in participatory design, user engages in participatory design
Relationship: The concepts are related in that they both involve user involvement in the design process.
Criteria: Designers and users engage in participatory design and provide feedback.
Phrase: Engage in participatory design.

4.
Concepts: clarifying options, provide clarification and clarify design aspects
Relationship: The concepts are related in that they both involve providing clarity and understanding of design aspects.
Criteria: Designers clarify options and design aspects, providing understanding and explanation.
Phrase: Clarify design aspects.

5.
Concepts: guiding users on technical constraints, explaining technical constraints and limitations
Relationship: The concepts are related in that they both involve explaining technical limitations to users.
Criteria: Designers guide users on technical constraints, explaining limitations and possibilities.
Phrase: Explain technical constraints.

6.
Concepts: seek user needs and context, facilitate understanding of user context
Relationship: The concepts are related in that they both involve understanding the user's perspective and situation.
Criteria: Designers seek user needs and context, facilitating understanding and empathy.
Phrase: Seek user needs and context.

7.
Concepts: seek alternative solutions, consider alternative design
Relationship: The concepts are related in that they both involve exploring alternative approaches to design.
Criteria: Designers seek alternative solutions, considering different design options.
Phrase: Seek alternative solutions.

8.
Concepts: expressing gratitude and appreciation, appreciating user support and contributions
Relationship: The concepts are related in that they both involve expressing thanks and recognition for user involvement.
Criteria: Designers and users express gratitude and appreciation for each other's contributions.
Phrase: Express gratitude and appreciation.

9.
Concepts: celebrate community development, celebrating progress and growth
Relationship: The concepts are related in that they both involve acknowledging and celebrating the community's progress.
Criteria: Users celebrate and acknowledge community progress and growth.
Phrase: Celebrate community development.

10.
Concepts: aligning with others, expressing agreement with others
Relationship: The concepts are related in that they both involve expressing agreement and unity with others.
Criteria: Users express agreement and alignment with others' statements or ideas.
Phrase: Express agreement.

11.
Concepts: making detailed suggestions, suggesting improvements and new features
Relationship: The concepts are related in that they both involve providing specific ideas for improvement.
Criteria: Community members suggest improvements, refinements, and new features.
Phrase: Suggest improvements and features.

12.
Concepts: requesting features and functionalities, express desire for specific software features
Relationship: The concepts are related in that they both involve expressing a need or desire for specific software features.
Criteria: Users express desires or needs for specific software features or functionalities.
Phrase: Request features and functionalities.

13.
Concepts: providing user feedback, sharing positive feedback
Relationship: The concepts are related in that they both involve sharing information about user experiences.
Criteria: Users provide feedback, sharing positive experiences and suggestions.
Phrase: Provide user feedback.

14.
Concepts: acknowledging software quality, complimenting software design and features
Relationship: The concepts are related in that they both involve expressing admiration and appreciation for the software.
Criteria: Users acknowledge and compliment the software's design, features, and quality.
Phrase: Acknowledge software quality.

15.
Concepts: responding to user feedback
Relationship: N/A
Criteria: Designers respond to user feedback, acknowledging concerns and suggestions.
Phrase: Respond to user feedback.