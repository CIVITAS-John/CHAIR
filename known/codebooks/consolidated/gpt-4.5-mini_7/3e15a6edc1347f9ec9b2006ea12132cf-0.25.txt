You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (53 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
53. 
Concepts: {Repeat the input 53}
Relationship: {What is logical relationship between concepts in code 53, or N/A if not applicable}
Criteria: {Who did what, and how for code 53}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: list new features, list upcoming features
- Designers list new components and features included in the software update.
- Designers list upcoming features that will be included in the software.

2.
Concepts: announce software release, announce software updates, notify about updates
- Designers announce the release of a new version of the software.
- Designers inform users about the availability of new software versions or updates.
- Designers inform the community about the release of a new software version and its updates.

3.
Concepts: describe product updates, announce component updates
- Designers communicate details about a significant update to the product.
- Designers inform users about changes to component functionality in upcoming updates.

4.
Concepts: announce new features, version update notes
- Designers announce new features and updates in a version release note.
- Designers provide detailed notes on version updates, including new features and improvements.

5.
Concepts: list bug fixes, detail specific updates
- Designers list new features and bug fixes in the software update.
- Designers provide a detailed overview of the new features and bug fixes in the software update.

6.
Concepts: give a timeline for future updates, outline version release management
- The designer provided a timeline for upcoming software updates.
- Designers outlined the schedule for upcoming software releases and updates.

7.
Concepts: update schedule, provide android update timeline
- A designer informs the community about the expected timing of an Android update.
- Designer provided a timeline for the release of an Android version update.

8.
Concepts: announce version update, confirm upcoming feature update
- Designer communicated details about a version update and its expected timeline.
- Designers confirmed the timeline for upcoming updates and releases.

9.
Concepts: development timeline, set timeline expectations
- A designer communicates timelines and expectations for software development and updates.
- Designers set expectations regarding timelines for software updates and features.

10.
Concepts: maintain transparency, ensure development transparency
- A designer emphasizes transparency regarding the development process and progress.
- Designers provide detailed information about development processes and progress.

11.
Concepts: answer about progress, communicate ongoing work
- The designer shares visual updates or progress regarding ongoing work.
- The designer communicated ongoing work or progress on a specific aspect of the project.

12.
Concepts: highlight progress, provide progress update
- The designer highlights the significant progress made in software updates.
- A designer updated the community on the progress of software releases and updates.

13.
Concepts: share visual updates, share information about development updates
- The designer shared visual updates related to the software's development.
- Designers shared detailed information about updates and new features in the software.

14.
Concepts: share update timeline with users, communicate release plans and progress
- Designers communicated updates and timelines regarding software releases to users.
- Designers provided updates on the status and expected timeline for software releases.

15.
Concepts: provide community updates, announce community updates
- Designers provide updates or announcements about the software.
- Designers announce future updates and solicit user input on desired features.

16.
Concepts: seek user feedback, invite user feedback, encourage user feedback, prompt user feedback
- Designers actively seek and request feedback from users to improve software.
- Designers invite users to provide feedback and suggest new features.
- The designer actively invites users to share suggestions for improvement.
- The designer prompts users to provide feedback on desired features and improvements.

17.
Concepts: involve users in design, integrate user feedback
- Designers actively involve users through feedback or testing in the design process.
- User feedback is actively sought, acknowledged, and integrated into the design process by designers.

18.
Concepts: respond to user feedback, acknowledge user feedback
- The designer acknowledges and aligns actions with user feedback.
- Designers respond to user feedback and suggestions, addressing queries and incorporating input into the design process.
- The designer acknowledges user feedback and validates their concerns.

19.
Concepts: plan for user input, gather user input
- The designer plans to gather user opinions before further development.
- The designer seeks user input for specific technical aspects and future iterations.

20.
Concepts: project planning, plan updates from feedback
- Designers plan future development steps based on user input and feedback.
- A designer outlines plans for updates based on user feedback.

21.
Concepts: promise future consultation, promise to invite feedback
- The designer commits to consulting the community before significant decisions.
- The designer promises to seek feedback from the community before proceeding with development.

22.
Concepts: affirm mutual points, confirm mutual understanding
- The designer and user acknowledge each other's points in discussions.
- Users and designers confirm understanding and agreement during discussions.

23.
Concepts: ask about user needs, inquire to understand user needs
- Designers inquired about specific user requirements or preferences for the software.
- Instances where designers seek input or clarification from users to better understand their needs.

24.
Concepts: clarification question, inquire about specific problems
- The designer asks users to clarify the problems they are experiencing with the application.
- A designer asked users about their experiences to identify issues with the software.

25.
Concepts: plan future design, discuss future planning
- Designers share plans for future design initiatives or features.
- Designers outline future plans or considerations for software development.

26.
Concepts: outline feature roadmap, outline development goals
- Designers outline the sequence of development priorities for different sections of the software.
- Designers outline specific objectives and future functionalities for the software development.

27.
Concepts: confirm feature implementation, confirm future implementation
- The designer confirms the implementation of features or updates.
- Designers confirm the likelihood of future software updates or features being implemented.

28.
Concepts: decision-making, prioritize development tasks
- A designer outlines the prioritization of different sections in the development process.
- Designers discuss the prioritization of different features or sections to be developed.

29.
Concepts: talk about limitation of the solution, explain current version's limitations
- Designer talks about limitations in the current solution.
- The designer explained limitations related to the software's functionality.

30.
Concepts: provide feature details, explain software functionality
- A designer elaborated on the functionality of the software with specific examples.
- The designer provided explanations about specific features of the software.

31.
Concepts: clarify version type, ask about version clarification
- Designer clarified which version of the software is being discussed.
- A user sought clarification regarding the specific version of the application being discussed.

32.
Concepts: appreciate designers' work, acknowledge and thank designers
- A user expresses appreciation for the designer's work and effort.
- A user acknowledges the designer's efforts and expresses gratitude.

33.
Concepts: express gratitude, appreciate community support
- Instances where users express thanks or appreciation for the work done by the designers or other community members.
- Instances where users express support, encouragement, or appreciation for the designers' efforts.

34.
Concepts: demonstrate user appreciation, appreciation of feedback
- Expressions of thanks or appreciation from users.
- Users express gratitude or appreciation for feedback received regarding design updates or features.

35.
Concepts: express gratitude for resources, acknowledge provided resources
- A user expresses gratitude for accessing shared resources in the group.
- A user acknowledges the resources provided by the designer or within the group.

36.
Concepts: expressive, express emotions with emojis
- User expresses emotions or reactions through emojis or informal language.
- A user uses an emoji to express emotion or reaction in their communication.

37.
Concepts: seek community input, invite community participation
- A designer encouraged community participation in the development process by seeking input.
- Designer invited community members to participate or contribute to the development process.

38.
Concepts: seek technical assistance, provide technical support
- Designer seeks assistance regarding technical issues with the software.
- Instances where designers or users provide technical assistance or address technical issues.

39.
Concepts: check for updates, inquire about update timeline
- A user inquires about the schedule for upcoming software updates.
- Users inquire about the timing of upcoming software updates.

40.
Concepts: platform clarification, inquire about software access
- Users ask for clarification on where to access or download the software.
- Users inquire about the download process and ask for information regarding where to download the software.

41.
Concepts: request user manual, reiterate request for manual
- Users request a user manual to assist with understanding and using the software.
- Users reiterate their request for a user manual to better understand the software.

42.
Concepts: inquire about usage, seek usage instructions, request technical support
- Users seek guidance on how to use specific versions of the software effectively.
- Users seek assistance or clarification on how to access or use the software.
- Users request guidance on how to use a specific version of the software.

43.
Concepts: provide user feedback, provide specific feedback
- Users provide feedback or suggestions about the software's features and improvements.
- Users provide specific feedback regarding an aspect of the software.

44.
Concepts: suggest new features, share suggestions for improvement
- Users suggest new features that could improve the software's functionality.
- Users suggest specific features or improvements for the software based on their experiences.

45.
Concepts: make feature requests, request product enhancements
- Users make detailed requests for specific features or functionalities in the software.
- Users articulate requests for new features or improvements to enhance the product.

46.
Concepts: software usability, provide comparative feedback, compare with similar applications
- Users evaluate the software's practicality and ease of use compared to other options.
- Users provide feedback comparing the software's practicality to other software.
- Users compare the software favorably to similar applications in terms of usability.

47.
Concepts: express user satisfaction, appreciate software features
- Users express satisfaction with the software's performance and features.
- Users express appreciation for the software's features and usability.

48.
Concepts: share past incidents, share user experiences
- Users share stories related to past experiences affecting software use.
- Instances where users share their experiences or opinions about using the software.

49.
Concepts: explain technology limitations, highlight technical constraints
- A user describes the limitations of their school's computer system.
- User highlights technical constraints affecting software usage in schools.

50.
Concepts: compliment on student engagement, describe students' positive responses in class
- Users share positive feedback about the software's impact on student engagement.
- A user describes positive reactions from students regarding the application’s effectiveness in class.

51.
Concepts: provide context
- A user shares contextual information relevant to the discussion about the application.
- Users provide context about their educational environment and technology limitations.

52.
Concepts: share classroom success stories
- Users describe successful experiences using the software in educational settings.
- Users express positive feedback about the software's functionality and effectiveness.

53.
Concepts: ask follow-up questions
- A designer followed up with users to clarify issues they encountered.
- Designers sought clarification on user preferences or requirements to ensure proper understanding.
===
---
Definitions for each code (53 in total):
1.
Concepts: list new features, list upcoming features
Relationship: Both concepts involve designers communicating information about current and future software capabilities.
Criteria: Designers list new components and features included in the software update and upcoming features that will be included in the software.
Phrase: List software features.

2.
Concepts: announce software release, announce software updates, notify about updates
Relationship: All concepts relate to designers communicating important information regarding software versions and updates to users.
Criteria: Designers announce the release of a new version of the software, inform users about the availability of new software versions or updates, and notify the community about the release of a new software version and its updates.
Phrase: Announce software updates.

3.
Concepts: describe product updates, announce component updates
Relationship: Both concepts involve designers communicating changes and details about the software product and its components.
Criteria: Designers communicate details about a significant update to the product and inform users about changes to component functionality in upcoming updates.
Phrase: Describe product updates.

4.
Concepts: announce new features, version update notes
Relationship: Both concepts involve designers providing information about new features and improvements in software version releases.
Criteria: Designers announce new features and updates in a version release note and provide detailed notes on version updates, including new features and improvements.
Phrase: Announce new features.

5.
Concepts: list bug fixes, detail specific updates
Relationship: Both concepts involve designers providing information about improvements and corrections made in the software.
Criteria: Designers list new features and bug fixes in the software update and provide a detailed overview of the new features and bug fixes in the software update.
Phrase: List bug fixes.

6.
Concepts: give a timeline for future updates, outline version release management
Relationship: Both concepts involve designers communicating schedules and management of future software updates.
Criteria: The designer provided a timeline for upcoming software updates and outlined the schedule for upcoming software releases and updates.
Phrase: Outline update timelines.

7.
Concepts: update schedule, provide android update timeline
Relationship: Both concepts involve designers informing the community about the timing of specific software updates.
Criteria: A designer informs the community about the expected timing of an Android update and provides a timeline for the release of an Android version update.
Phrase: Provide update timelines.

8.
Concepts: announce version update, confirm upcoming feature update
Relationship: Both concepts involve designers communicating details about software updates and their timelines.
Criteria: Designer communicated details about a version update and its expected timeline and confirmed the timeline for upcoming updates and releases.
Phrase: Confirm version updates.

9.
Concepts: development timeline, set timeline expectations
Relationship: Both concepts involve designers communicating timelines and expectations regarding software development.
Criteria: A designer communicates timelines and expectations for software development and updates and sets expectations regarding timelines for software updates and features.
Phrase: Set development timelines.

10.
Concepts: maintain transparency, ensure development transparency
Relationship: Both concepts involve designers providing clear and open communication about the development process.
Criteria: A designer emphasizes transparency regarding the development process and progress and provides detailed information about development processes and progress.
Phrase: Maintain development transparency.

11.
Concepts: answer about progress, communicate ongoing work
Relationship: Both concepts involve designers sharing information about the current state of work on the software.
Criteria: The designer shares visual updates or progress regarding ongoing work and communicates ongoing work or progress on a specific aspect of the project.
Phrase: Communicate ongoing progress.

12.
Concepts: highlight progress, provide progress update
Relationship: Both concepts involve designers sharing information about advancements made in software updates.
Criteria: The designer highlights the significant progress made in software updates and updates the community on the progress of software releases and updates.
Phrase: Highlight progress.

13.
Concepts: share visual updates, share information about development updates
Relationship: Both concepts involve designers providing visual and detailed information about the software's development.
Criteria: The designer shared visual updates related to the software's development and shared detailed information about updates and new features in the software.
Phrase: Share development updates.

14.
Concepts: share update timeline with users, communicate release plans and progress
Relationship: Both concepts involve designers informing users about timelines and plans for software releases.
Criteria: Designers communicated updates and timelines regarding software releases to users and provided updates on the status and expected timeline for software releases.
Phrase: Communicate release plans.

15.
Concepts: provide community updates, announce community updates
Relationship: Both concepts involve designers sharing information and announcements with the community regarding the software.
Criteria: Designers provide updates or announcements about the software and announce future updates and solicit user input on desired features.
Phrase: Provide community updates.

16.
Concepts: seek user feedback, invite user feedback, encourage user feedback, prompt user feedback
Relationship: All concepts relate to designers actively engaging users to gather their opinions and suggestions.
Criteria: Designers actively seek and request feedback from users to improve software, invite users to provide feedback, and prompt users to share suggestions for improvement.
Phrase: Seek user feedback.

17.
Concepts: involve users in design, integrate user feedback
Relationship: Both concepts emphasize the importance of user participation and feedback in the design process.
Criteria: Designers actively involve users through feedback or testing in the design process and integrate user feedback into the design process.
Phrase: Involve users in design.

18.
Concepts: respond to user feedback, acknowledge user feedback
Relationship: Both concepts involve designers recognizing and addressing user input and concerns.
Criteria: The designer acknowledges and aligns actions with user feedback and responds to user feedback and suggestions, addressing queries and incorporating input into the design process.
Phrase: Respond to user feedback.

19.
Concepts: plan for user input, gather user input
Relationship: Both concepts involve designers preparing to collect user opinions for future development.
Criteria: The designer plans to gather user opinions before further development and seeks user input for specific technical aspects and future iterations.
Phrase: Gather user input.

20.
Concepts: project planning, plan updates from feedback
Relationship: Both concepts involve designers organizing future development steps based on user feedback.
Criteria: Designers plan future development steps based on user input and outline plans for updates based on user feedback.
Phrase: Plan project updates.

21.
Concepts: promise future consultation, promise to invite feedback
Relationship: Both concepts involve designers committing to engage with the community for input before making decisions.
Criteria: The designer commits to consulting the community before significant decisions and promises to seek feedback from the community before proceeding with development.
Phrase: Promise community consultation.

22.
Concepts: affirm mutual points, confirm mutual understanding
Relationship: Both concepts involve designers and users acknowledging each other's perspectives during discussions.
Criteria: The designer and user acknowledge each other's points in discussions and confirm understanding and agreement during discussions.
Phrase: Confirm mutual understanding.

23.
Concepts: ask about user needs, inquire to understand user needs
Relationship: Both concepts involve designers seeking information to better understand user requirements.
Criteria: Designers inquire about specific user requirements or preferences for the software and seek input or clarification from users to better understand their needs.
Phrase: Inquire about user needs.

24.
Concepts: clarification question, inquire about specific problems
Relationship: Both concepts involve designers asking users for more information to clarify issues.
Criteria: The designer asks users to clarify the problems they are experiencing with the application and asked users about their experiences to identify issues with the software.
Phrase: Ask clarification questions.

25.
Concepts: plan future design, discuss future planning
Relationship: Both concepts involve designers sharing and outlining plans for future software features and initiatives.
Criteria: Designers share plans for future design initiatives or features and outline future plans or considerations for software development.
Phrase: Plan future design.

26.
Concepts: outline feature roadmap, outline development goals
Relationship: Both concepts involve designers specifying priorities and objectives for software development.
Criteria: Designers outline the sequence of development priorities for different sections of the software and outline specific objectives and future functionalities for the software development.
Phrase: Outline development goals.

27.
Concepts: confirm feature implementation, confirm future implementation
Relationship: Both concepts involve designers verifying the status of features and updates.
Criteria: The designer confirms the implementation of features or updates and confirms the likelihood of future software updates or features being implemented.
Phrase: Confirm feature implementation.

28.
Concepts: decision-making, prioritize development tasks
Relationship: Both concepts involve designers determining the order of tasks in the development process.
Criteria: A designer outlines the prioritization of different sections in the development process and discusses the prioritization of different features or sections to be developed.
Phrase: Prioritize development tasks.

29.
Concepts: talk about limitation of the solution, explain current version's limitations
Relationship: Both concepts involve designers discussing constraints and limitations of the software.
Criteria: Designer talks about limitations in the current solution and explains limitations related to the software's functionality.
Phrase: Discuss software limitations.

30.
Concepts: provide feature details, explain software functionality
Relationship: Both concepts involve designers elaborating on the software's features and how they work.
Criteria: A designer elaborated on the functionality of the software with specific examples and provided explanations about specific features of the software.
Phrase: Explain software functionality.

31.
Concepts: clarify version type, ask about version clarification
Relationship: Both concepts involve designers and users seeking to understand the specific version of the software being discussed.
Criteria: Designer clarified which version of the software is being discussed and a user sought clarification regarding the specific version of the application being discussed.
Phrase: Clarify version type.

32.
Concepts: appreciate designers' work, acknowledge and thank designers
Relationship: Both concepts involve users expressing gratitude for the designers' contributions.
Criteria: A user expresses appreciation for the designer's work and effort and acknowledges the designer's efforts and expresses gratitude.
Phrase: Appreciate designers' work.

33.
Concepts: express gratitude, appreciate community support
Relationship: Both concepts involve users showing appreciation for the contributions of designers and community members.
Criteria: Instances where users express thanks or appreciation for the work done by the designers or other community members and express support, encouragement, or appreciation for the designers' efforts.
Phrase: Express gratitude.

34.
Concepts: demonstrate user appreciation, appreciation of feedback
Relationship: Both concepts involve users expressing thanks for the feedback received from designers.
Criteria: Expressions of thanks or appreciation from users and users expressing gratitude or appreciation for feedback received regarding design updates or features.
Phrase: Demonstrate user appreciation.

35.
Concepts: express gratitude for resources, acknowledge provided resources
Relationship: Both concepts involve users showing appreciation for resources shared within the community.
Criteria: A user expresses gratitude for accessing shared resources in the group and acknowledges the resources provided by the designer or within the group.
Phrase: Acknowledge provided resources.

36.
Concepts: expressive, express emotions with emojis
Relationship: Both concepts involve users conveying their feelings through informal communication methods.
Criteria: User expresses emotions or reactions through emojis or informal language and uses an emoji to express emotion or reaction in their communication.
Phrase: Express emotions.

37.
Concepts: seek community input, invite community participation
Relationship: Both concepts involve designers encouraging community members to contribute to the development process.
Criteria: A designer encouraged community participation in the development process by seeking input and invited community members to participate or contribute to the development process.
Phrase: Invite community participation.

38.
Concepts: seek technical assistance, provide technical support
Relationship: Both concepts involve addressing technical issues related to the software.
Criteria: Designer seeks assistance regarding technical issues with the software and instances where designers or users provide technical assistance or address technical issues.
Phrase: Provide technical support.

39.
Concepts: check for updates, inquire about update timeline
Relationship: Both concepts involve users seeking information about upcoming software updates.
Criteria: A user inquires about the schedule for upcoming software updates and users inquire about the timing of upcoming software updates.
Phrase: Inquire about update timelines.

40.
Concepts: platform clarification, inquire about software access
Relationship: Both concepts involve users seeking information about how to access the software.
Criteria: Users ask for clarification on where to access or download the software and inquire about the download process and ask for information regarding where to download the software.
Phrase: Inquire about software access.

41.
Concepts: request user manual, reiterate request for manual
Relationship: Both concepts involve users seeking guidance on how to use the software.
Criteria: Users request a user manual to assist with understanding and using the software and reiterate their request for a user manual to better understand the software.
Phrase: Request user manual.

42.
Concepts: inquire about usage, seek usage instructions, request technical support
Relationship: All concepts involve users seeking guidance on how to effectively use the software.
Criteria: Users seek guidance on how to use specific versions of the software effectively, seek assistance or clarification on how to access or use the software, and request guidance on how to use a specific version of the software.
Phrase: Seek usage instructions.

43.
Concepts: provide user feedback, provide specific feedback
Relationship: Both concepts involve users sharing their opinions and suggestions regarding the software.
Criteria: Users provide feedback or suggestions about the software's features and improvements and provide specific feedback regarding an aspect of the software.
Phrase: Provide user feedback.

44.
Concepts: suggest new features, share suggestions for improvement
Relationship: Both concepts involve users proposing enhancements to the software.
Criteria: Users suggest new features that could improve the software's functionality and suggest specific features or improvements for the software based on their experiences.
Phrase: Suggest new features.

45.
Concepts: make feature requests, request product enhancements
Relationship: Both concepts involve users articulating their desires for specific software functionalities.
Criteria: Users make detailed requests for specific features or functionalities in the software and articulate requests for new features or improvements to enhance the product.
Phrase: Make feature requests.

46.
Concepts: software usability, provide comparative feedback, compare with similar applications
Relationship: All concepts involve users evaluating the software's effectiveness and usability relative to other options.
Criteria: Users evaluate the software's practicality and ease of use compared to other options, provide feedback comparing the software's practicality to other software, and compare the software favorably to similar applications in terms of usability.
Phrase: Evaluate software usability.

47.
Concepts: express user satisfaction, appreciate software features
Relationship: Both concepts involve users conveying their contentment with the software's performance and features.
Criteria: Users express satisfaction with the software's performance and features and express appreciation for the software's features and usability.
Phrase: Express user satisfaction.

48.
Concepts: share past incidents, share user experiences
Relationship: Both concepts involve users recounting their experiences related to the software.
Criteria: Users share stories related to past experiences affecting software use and instances where users share their experiences or opinions about using the software.
Phrase: Share user experiences.

49.
Concepts: explain technology limitations, highlight technical constraints
Relationship: Both concepts involve users discussing the limitations of the technology they are using.
Criteria: A user describes the limitations of their school's computer system and highlights technical constraints affecting software usage in schools.
Phrase: Explain technology limitations.

50.
Concepts: compliment on student engagement, describe students' positive responses in class
Relationship: Both concepts involve users sharing positive feedback regarding the software's impact on students.
Criteria: Users share positive feedback about the software's impact on student engagement and describe positive reactions from students regarding the application’s effectiveness in class.
Phrase: Compliment student engagement.

51.
Concepts: provide context
Relationship: N/A
Criteria: A user shares contextual information relevant to the discussion about the application and provides context about their educational environment and technology limitations.
Phrase: Provide context.

52.
Concepts: share classroom success stories
Relationship: Both concepts involve users recounting successful experiences using the software in educational settings.
Criteria: Users describe successful experiences using the software in educational settings and express positive feedback about the software's functionality and effectiveness.
Phrase: Share success stories.

53.
Concepts: ask follow-up questions
Relationship: Both concepts involve designers seeking additional information from users for clarity.
Criteria: A designer followed up with users to clarify issues they encountered and sought clarification on user preferences or requirements to ensure proper understanding.
Phrase: Ask follow-up questions.
---