You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: internal update, announcing component changes
- Announcing internal updates or changes to software.
- Announcing changes to ideal components or software features.

2.
Concepts: shares release notes, shares new features
- Sharing or posting release notes or update information.
- Sharing new features, updates, or releases with the community.

3.
Concepts: informs users, sharing update availability
- Informing users about updates, features, or functionalities.
- Informing users about the availability of software updates.

4.
Concepts: version details, version update notes
- Clarifying details or specifications about a particular version or release.
- Notes or summaries of updates, changes, or new features

5.
Concepts: announcing update timelines, provide android update timeline, providing the update timeline for various platform versions
- Announcing update timelines or schedules.
- Providing a timeline for an Android update.
- Providing a timeline or schedule for updates, releases, or changes across multiple platforms.

6.
Concepts: sharing timelines, sharing update schedule
- Sharing timelines or schedules for specific tasks or updates.
- Information about the update schedule is shared.

7.
Concepts: sharing release dates, providing tentative timeline, providing development timeline
- The speaker shares release dates or schedules for updates.
- The speaker provides a tentative timeline for the update's release.
- The speaker provides information about the development timeline or schedule.

8.
Concepts: mentioning ongoing work, acknowledging ongoing work
- A designer mentions ongoing work on a specific task or feature.
- The speaker acknowledges ongoing work on a specific part or feature.

9.
Concepts: signaling work in progress, indicating development stage
- Indicating that work is in progress on a specific feature or task.
- The designer indicates the current stage of development or progress.

10.
Concepts: indicating ongoing refinement, promise of ongoing updates
- Designer provides updates and seeks feedback or input
- A designer shares a visual representation indicating that updates are in progress.

11.
Concepts: development insight, development insights and progress
- Providing insight into the development process or progress.
- The designer shares insights, behind-the-scenes information, or development progress with the group.

12.
Concepts: researching new features, mentioning ongoing research, feature development update
- Designer researches or explores innovative features or ideas.
- Designers mention or describe ongoing research or development.
- A designer shares information about the current development or research of a feature.

13.
Concepts: waiting for review, awaiting review
- Designers indicate that the iOS version is waiting for review.
- Informing users about the status of a product or feature in a review process.

14.
Concepts: updating review status, review process update, updating on apple market status
- Designers update users on the review status of the application.
- A designer provides information about the review process for a specific platform (e.g., iOS).
- Designers update users on the status of an update in the Apple market.

15.
Concepts: previewing updates, providing visual updates
- Designers provide a preview of upcoming features or updates.
- Designers provide visual updates, share images or screenshots, or describe upcoming features.

16.
Concepts: update clarification, platform update information
- A designer clarifies the availability or status of an update.
- A designer shares information about a specific update or release of the platform.

17.
Concepts: system requirements, considering hardware limitations
- A community member mentions a limitation or constraint related to system requirements.
- A user considers or mentions hardware limitations or constraints.

18.
Concepts: explaining system limitations, informing software limitations
- Explaining limitations or constraints of a system or feature.
- Informing users about the limitations or incompatibilities of the software

19.
Concepts: explaining complexity, mentions complexity of upcoming release
- Designers explain the complexity or challenges involved in developing a particular feature or functionality.
- Designers mention or highlight the complexity of upcoming releases or features.

20.
Concepts: explain limitations, stating system limitations
- Designers explain the limitations or constraints of the Physics Lab or its features.
- Designers state limitations or incompatibilities of the Physics Lab software with specific systems or platforms.

21.
Concepts: adapting to constraints, negotiating platform constraints
- A designer adapts to user constraints or limitations.
- Designer negotiates platform constraints or limitations.

22.
Concepts: exploring technical constraints, exploring direction limitations
- Designer explores technical constraints or limitations.
- The designer discusses or explains the limitations or constraints of exploring certain directions or topics.

23.
Concepts: considering limitations, considering implementation constraints
- Considering limitations or potential issues with a product or feature.
- Considering constraints or limitations of implementation.

24.
Concepts: providing context for design constraints, considering user context and limitations
- Providing context for design constraints or limitations.
- Considering the limitations or constraints of users when designing or making decisions

25.
Concepts: explaining version type, specifying software version, clarifying platform version
- A designer explains the type of version to facilitate user understanding.
- A designer specifies or clarifies the type of software version.
- A designer clarifies the version or type of platform available in a specific context.

26.
Concepts: system compatibility, clarifying system requirements, confirming system compatibility
- Designer specifies the minimum system requirements for the software.
- Designer clarifies the system requirements or technical specifications of the software.
- Designers confirm or provide system compatibility information.

27.
Concepts: suggesting compatibility testing, theorizing system compatibility
- A designer suggests checking or testing the compatibility of the system.
- Designers speculate about system compatibility to anticipate potential issues.

28.
Concepts: addressing compatibility issues, considering system compatibility
- Designer addresses compatibility issues with different systems
- Designers consider system compatibility for older systems to ensure broad compatibility.

29.
Concepts: answering compatibility questions, platform compatibility inquiries
- Designer answers questions about compatibility.
- The designer inquires about or discusses platform compatibility or support for different devices or systems.

30.
Concepts: theoretical compatibility, mentions theoretical compatibility requirements
- Discussing theoretical compatibility or feasibility.
- Designer mentions theoretical compatibility requirements.

31.
Concepts: comparing to other tools, unlike comprehensive but inconvenient software
- Comparisons are made between Physics Lab and other tools or software.
- A user compares the Physics Lab to other software, highlighting its advantages.

32.
Concepts: accessibility exploration, exploring compatibility options
- User explores options for accessibility or alternative versions.
- User explores options for system compatibility.
===
Here are the definitions for each code:

---
1.
Concepts: internal update, announcing component changes
Relationship: The concepts are related as they both involve sharing information about changes to the software.
Criteria: Designers announce internal updates or changes to software components.
Phrase: Announcing internal updates.

2.
Concepts: shares release notes, shares new features
Relationship: The concepts are related as they both involve sharing information about updates.
Criteria: Designers share release notes or new features with the community.
Phrase: Sharing release notes.

3.
Concepts: informs users, sharing update availability
Relationship: The concepts are related as they both involve informing users about updates.
Criteria: Designers inform users about the availability of software updates.
Phrase: Informing users about updates.

4.
Concepts: version details, version update notes
Relationship: The concepts are related as they both involve providing information about specific versions.
Criteria: Designers provide details or notes about specific versions or releases.
Phrase: Providing version details.

5.
Concepts: announcing update timelines, provide android update timeline, providing the update timeline for various platform versions
Relationship: The concepts are related as they all involve announcing timelines for updates.
Criteria: Designers announce timelines for updates across multiple platforms.
Phrase: Announcing update timelines.

6.
Concepts: sharing timelines, sharing update schedule
Relationship: The concepts are related as they both involve sharing information about schedules.
Criteria: Designers share timelines or schedules for specific tasks or updates.
Phrase: Sharing update schedules.

7.
Concepts: sharing release dates, providing tentative timeline, providing development timeline
Relationship: The concepts are related as they all involve sharing information about timelines.
Criteria: Designers share release dates or provide timelines for development.
Phrase: Sharing release dates.

8.
Concepts: mentioning ongoing work, acknowledging ongoing work
Relationship: The concepts are related as they both involve acknowledging ongoing work.
Criteria: Designers mention or acknowledge ongoing work on specific tasks or features.
Phrase: Acknowledging ongoing work.

9.
Concepts: signaling work in progress, indicating development stage
Relationship: The concepts are related as they both involve indicating progress.
Criteria: Designers indicate the current stage of development or progress.
Phrase: Indicating development stage.

10.
Concepts: indicating ongoing refinement, promise of ongoing updates
Relationship: The concepts are related as they both involve indicating ongoing work.
Criteria: Designers indicate ongoing refinement or promise ongoing updates.
Phrase: Indicating ongoing refinement.

11.
Concepts: development insight, development insights and progress
Relationship: The concepts are related as they both involve providing insight into development.
Criteria: Designers provide insights into the development process or progress.
Phrase: Providing development insights.

12.
Concepts: researching new features, mentioning ongoing research, feature development update
Relationship: The concepts are related as they all involve researching or developing new features.
Criteria: Designers research or develop new features and share updates.
Phrase: Researching new features.

13.
Concepts: waiting for review, awaiting review
Relationship: The concepts are related as they both involve waiting for review.
Criteria: Designers indicate that the software is waiting for review.
Phrase: Waiting for review.

14.
Concepts: updating review status, review process update, updating on apple market status
Relationship: The concepts are related as they all involve updating users about the review process.
Criteria: Designers update users on the review status of the application.
Phrase: Updating review status.

15.
Concepts: previewing updates, providing visual updates
Relationship: The concepts are related as they both involve providing a preview of updates.
Criteria: Designers provide a preview of upcoming features or updates.
Phrase: Previewing updates.

16.
Concepts: update clarification, platform update information
Relationship: The concepts are related as they both involve clarifying updates.
Criteria: Designers clarify the availability or status of updates.
Phrase: Clarifying updates.

17.
Concepts: system requirements, considering hardware limitations
Relationship: The concepts are related as they both involve considering limitations.
Criteria: Users consider or mention hardware limitations or constraints.
Phrase: Considering system requirements.

18.
Concepts: explaining system limitations, informing software limitations
Relationship: The concepts are related as they both involve explaining limitations.
Criteria: Designers explain the limitations or constraints of the system or software.
Phrase: Explaining system limitations.

19.
Concepts: explaining complexity, mentions complexity of upcoming release
Relationship: The concepts are related as they both involve explaining complexity.
Criteria: Designers explain the complexity involved in developing a feature or functionality.
Phrase: Explaining complexity.

20.
Concepts: explain limitations, stating system limitations
Relationship: The concepts are related as they both involve explaining limitations.
Criteria: Designers explain or state the limitations of the Physics Lab software.
Phrase: Explaining limitations.

21.
Concepts: adapting to constraints, negotiating platform constraints
Relationship: The concepts are related as they both involve adapting to limitations.
Criteria: Designers adapt to user constraints or limitations.
Phrase: Adapting to constraints.

22.
Concepts: exploring technical constraints, exploring direction limitations
Relationship: The concepts are related as they both involve exploring limitations.
Criteria: Designers explore technical constraints or limitations.
Phrase: Exploring technical constraints.

23.
Concepts: considering limitations, considering implementation constraints
Relationship: The concepts are related as they both involve considering limitations.
Criteria: Designers consider limitations or potential issues with a product or feature.
Phrase: Considering limitations.

24.
Concepts: providing context for design constraints, considering user context and limitations
Relationship: The concepts are related as they both involve considering context.
Criteria: Designers provide context for design constraints or limitations.
Phrase: Providing context for design constraints.

25.
Concepts: explaining version type, specifying software version, clarifying platform version
Relationship: The concepts are related as they all involve explaining or clarifying versions.
Criteria: Designers explain or clarify the type of software version.
Phrase: Explaining version type.

26.
Concepts: system compatibility, clarifying system requirements, confirming system compatibility
Relationship: The concepts are related as they all involve ensuring system compatibility.
Criteria: Designers specify or clarify system requirements or compatibility.
Phrase: Ensuring system compatibility.

27.
Concepts: suggesting compatibility testing, theorizing system compatibility
Relationship: The concepts are related as they both involve considering system compatibility.
Criteria: Designers suggest checking or testing system compatibility.
Phrase: Suggesting compatibility testing.

28.
Concepts: addressing compatibility issues, considering system compatibility
Relationship: The concepts are related as they both involve addressing compatibility issues.
Criteria: Designers address compatibility issues with different systems.
Phrase: Addressing compatibility issues.

29.
Concepts: answering compatibility questions, platform compatibility inquiries
Relationship: The concepts are related as they both involve answering questions about compatibility.
Criteria: Designers answer questions about compatibility or inquire about platform compatibility.
Phrase: Answering compatibility questions.

30.
Concepts: theoretical compatibility, mentions theoretical compatibility requirements
Relationship: The concepts are related as they both involve discussing theoretical compatibility.
Criteria: Designers discuss or mention theoretical compatibility requirements.
Phrase: Discussing theoretical compatibility.

31.
Concepts: comparing to other tools, unlike comprehensive but inconvenient software
Relationship: The concepts are related as they both involve comparing Physics Lab to other software.
Criteria: Users compare Physics Lab to other software, highlighting its advantages.
Phrase: Comparing to other tools.

32.
Concepts: accessibility exploration, exploring compatibility options
Relationship: The concepts are related as they both involve exploring options for accessibility or compatibility.
Criteria: Users explore options for accessibility or system compatibility.
Phrase: Exploring accessibility options.