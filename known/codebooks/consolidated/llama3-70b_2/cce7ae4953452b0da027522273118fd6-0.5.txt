You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: explore future possibilities, share info about future development plan
- Designer 1 explores future possibilities or ideas for the Physics Lab.
- A designer shares information about the future development plan or roadmap of the Physics Lab.

2.
Concepts: answer about progress, expressing hope for progress
- Designer answers questions about the progress of the Physics Lab.
- The designer expresses hope or optimism for the progress or development of the Physics Lab.

3.
Concepts: reflecting on experiences, referencing past experience
- A designer reflects on past experiences or lessons learned.
- A user references past experiences or lessons learned.

4.
Concepts: sharing experience, shared professional experience, sharing professional background
- A user shares their teaching experience or background.
- Sharing professional or personal experience related to the topic.
- A user shares their professional background or expertise.

5.
Concepts: personal experience, sharing personal experience, sharing personal experiences
- The designer shares a personal experience or anecdote related to the online community.
- Sharing personal experiences or anecdotes related to the product.
- The designer shares their personal interests or hobbies, and mentioning personal interests or areas of expertise.

6.
Concepts: introducing oneself, user builds rapport
- A user introduces themselves to the community.
- A user shares personal information to build rapport with the community.

7.
Concepts: inquire about classroom conditions, inquire about user's teaching background
- A designer inquires about the classroom conditions or environment.
- A designer inquires about a user's teaching background or experience.

8.
Concepts: question identity, showed interest in user identity, personalize interaction
- The designer questions a user's identity or role.
- Designer shows interest in the user's identity, role, or background.
- Designer personalizes interaction by asking about user's role.

9.
Concepts: institutional policy explanations, emphasized institutional policy
- Explanations of institutional policies or restrictions from users.
- User emphasizes or explains institutional policies or constraints that affect the use of the software.

10.
Concepts: share past incident, share broader context, detail reasons for network restrictions
- User shares past incident about school network restrictions.
- User shares broader context about school network restrictions.
- A user explains the reasons for network restrictions in schools.

11.
Concepts: described classroom experience, illustrate classroom success, describing a positive classroom experience
- User describes their experience using the software in a classroom setting.
- A user shares a successful experience or story about using Physics Lab in a classroom setting.
- A user describes a positive experience or response from students in a classroom setting.

12.
Concepts: highlight school context, mentioning school initiatives
- A user mentions their school or educational context.
- A user mentions a school initiative or project.

13.
Concepts: school context, school resource context
- Describing the school or educational context in which the tool is being used
- User provides context about school resources or limitations.

14.
Concepts: focusing on user experience, highlighted user feedback importance
- Highlighting the importance of user experience.
- Highlighting the importance of user feedback or opinions.

15.
Concepts: emphasis on importance, emphasize importance
- A user emphasizes the importance of something.
- Emphasis is placed on the importance of a feature or update.

16.
Concepts: linking to educational relevance, highlight educational value
- Users or designers link a feature or functionality to its educational utility or purpose.
- Designers highlight the educational value or potential of a feature or tool, highlighting its educational utility or benefits.

17.
Concepts: aligning with curriculum, align with educational standards
- A designer aligns the software with curriculum requirements or educational needs.
- Designer aligns with educational standards

18.
Concepts: answer about compatibility, inquiring about platform compatibility
- A designer or user answers a question about compatibility or system requirements.
- A user asks about the software's compatibility with different platforms.

19.
Concepts: confirming compatibility, specifying hardware requirements, clarify platform requirements
- Designers confirm compatibility with a specific system or platform.
- Designers specify hardware requirements or system compatibility.
- A designer clarifies the platform requirements or system compatibility of Physics Lab.

20.
Concepts: discussing technical constraints, considering technical requirements
- Users or designers consider or discuss technical constraints or limitations.
- A designer considers technical requirements or constraints in a specific context.

21.
Concepts: considered implementation context, consider practical constraints
- The designer considers the implementation context or constraints.
- Designer 1 considers practical constraints or limitations that may affect the development or use of Physics Lab.

22.
Concepts: explaining limitations, informing about system compatibility
- Designers explain or clarify software limitations or constraints.
- Designers inform about system compatibility or limitations.

23.
Concepts: acknowledge issues, acknowledging limitations
- Designers acknowledge a potential issue or limitation, acknowledging usability issues or challenges.
- Acknowledgment of current limitations or constraints of the software.

24.
Concepts: address concerns, concern expression
- Addressing concerns or worries raised by users.
- User expresses concern or worry about an issue.

25.
Concepts: raising concerns, raising related issues
- Raising a concern or issue related to a new feature or implementation.
- Designers raise related issues or concerns.

26.
Concepts: describing outdated technology, highlighted outdated systems
- A user mentions or describes outdated technology or equipment.
- User highlights outdated systems or infrastructure that affect the use of the software.

27.
Concepts: technical issue, asking technical questions, highlighted technical challenges
- User reports or discusses a technical issue or problem with the software.
- A user asks a question about technical aspects of the software.
- User highlights technical challenges or limitations of the software.

28.
Concepts: inquire about user issues, problem-solving discussions
- Inquiring about specific problems or issues encountered.
- Engaging in problem-solving discussions or troubleshooting issues with users.

29.
Concepts: make comparison, comparing software
- A user makes a comparison between two things.
- User compares the software to other similar tools.

30.
Concepts: suggest a use case, illustrating potential use cases
- User describes a potential use case or scenario.
- A designer illustrates potential use cases for the software.

31.
Concepts: identify usability issue, highlight usability need
- A user identifies an issue or problem with the software's usability.
- A user highlights a need or suggests an improvement for better usability.

32.
Concepts: product gap identification, identify gaps in current software
- Discussions about gaps or limitations in the current product or feature set.
- A user identifies gaps or limitations in the current software.
===
Here are the definitions for each code:

---
1.
Concepts: explore future possibilities, share info about future development plan
Relationship: The concepts are related as they both involve discussing future plans and ideas for the Physics Lab.
Criteria: Designers explore future possibilities and share information about the development plan.
Phrase: Explore and share future plans.

2.
Concepts: answer about progress, expressing hope for progress
Relationship: The concepts are related as they both involve discussing the progress of the Physics Lab.
Criteria: Designers answer questions about progress and express hope for future development.
Phrase: Answer and express hope for progress.

3.
Concepts: reflecting on experiences, referencing past experience
Relationship: The concepts are related as they both involve drawing on past experiences to inform current discussions.
Criteria: Designers and users reflect on past experiences and reference them in the conversation.
Phrase: Reflect on past experiences.

4.
Concepts: sharing experience, shared professional experience, sharing professional background
Relationship: The concepts are related as they all involve sharing personal or professional experiences.
Criteria: Users share their professional experience and background.
Phrase: Share professional experience.

5.
Concepts: personal experience, sharing personal experience, sharing personal experiences
Relationship: The concepts are related as they all involve sharing personal anecdotes or experiences.
Criteria: Designers share personal experiences and anecdotes.
Phrase: Share personal experiences.

6.
Concepts: introducing oneself, user builds rapport
Relationship: The concepts are related as they both involve establishing a connection with others in the community.
Criteria: Users introduce themselves to build rapport with the community.
Phrase: Introduce oneself and build rapport.

7.
Concepts: inquire about classroom conditions, inquire about user's teaching background
Relationship: The concepts are related as they both involve asking questions to understand the user's context.
Criteria: Designers inquire about classroom conditions and teaching background.
Phrase: Inquire about user context.

8.
Concepts: question identity, showed interest in user identity, personalize interaction
Relationship: The concepts are related as they all involve showing interest in the user's identity or role.
Criteria: Designers question and show interest in user identity to personalize interaction.
Phrase: Show interest in user identity.

9.
Concepts: institutional policy explanations, emphasized institutional policy
Relationship: The concepts are related as they both involve explaining or emphasizing institutional policies.
Criteria: Users explain and emphasize institutional policies.
Phrase: Explain institutional policies.

10.
Concepts: share past incident, share broader context, detail reasons for network restrictions
Relationship: The concepts are related as they all involve sharing context or explanations for network restrictions.
Criteria: Users share past incidents and broader context to explain network restrictions.
Phrase: Share context for network restrictions.

11.
Concepts: described classroom experience, illustrate classroom success, describing a positive classroom experience
Relationship: The concepts are related as they all involve sharing positive experiences or success stories in the classroom.
Criteria: Users describe and illustrate successful classroom experiences.
Phrase: Share classroom success stories.

12.
Concepts: highlight school context, mentioning school initiatives
Relationship: The concepts are related as they both involve mentioning or highlighting the school context.
Criteria: Users highlight their school context and mention initiatives.
Phrase: Highlight school context.

13.
Concepts: school context, school resource context
Relationship: The concepts are related as they both involve describing the school context.
Criteria: Users describe their school context and resources.
Phrase: Describe school context.

14.
Concepts: focusing on user experience, highlighted user feedback importance
Relationship: The concepts are related as they both involve emphasizing the importance of user experience and feedback.
Criteria: Designers focus on user experience and highlight the importance of user feedback.
Phrase: Focus on user experience.

15.
Concepts: emphasis on importance, emphasize importance
Relationship: The concepts are related as they both involve emphasizing the importance of something.
Criteria: Users and designers emphasize the importance of a feature or update.
Phrase: Emphasize importance.

16.
Concepts: linking to educational relevance, highlight educational value
Relationship: The concepts are related as they both involve highlighting the educational utility or purpose of a feature.
Criteria: Designers link features to educational relevance and highlight educational value.
Phrase: Highlight educational value.

17.
Concepts: aligning with curriculum, align with educational standards
Relationship: The concepts are related as they both involve aligning the software with educational needs or standards.
Criteria: Designers align the software with curriculum requirements and educational standards.
Phrase: Align with educational standards.

18.
Concepts: answer about compatibility, inquiring about platform compatibility
Relationship: The concepts are related as they both involve discussing compatibility or system requirements.
Criteria: Designers answer questions about compatibility and users inquire about platform compatibility.
Phrase: Discuss compatibility.

19.
Concepts: confirming compatibility, specifying hardware requirements, clarify platform requirements
Relationship: The concepts are related as they all involve clarifying or specifying compatibility or system requirements.
Criteria: Designers confirm and specify hardware requirements and clarify platform requirements.
Phrase: Clarify compatibility requirements.

20.
Concepts: discussing technical constraints, considering technical requirements
Relationship: The concepts are related as they both involve discussing or considering technical limitations or requirements.
Criteria: Users and designers discuss technical constraints and consider technical requirements.
Phrase: Discuss technical constraints.

21.
Concepts: considered implementation context, consider practical constraints
Relationship: The concepts are related as they both involve considering the implementation context or practical constraints.
Criteria: Designers consider the implementation context and practical constraints.
Phrase: Consider implementation context.

22.
Concepts: explaining limitations, informing about system compatibility
Relationship: The concepts are related as they both involve explaining or informing about limitations or compatibility.
Criteria: Designers explain limitations and inform about system compatibility.
Phrase: Explain limitations and compatibility.

23.
Concepts: acknowledge issues, acknowledging limitations
Relationship: The concepts are related as they both involve acknowledging potential issues or limitations.
Criteria: Designers acknowledge issues and limitations.
Phrase: Acknowledge issues.

24.
Concepts: address concerns, concern expression
Relationship: The concepts are related as they both involve addressing or expressing concerns.
Criteria: Designers address concerns and users express concerns.
Phrase: Address and express concerns.

25.
Concepts: raising concerns, raising related issues
Relationship: The concepts are related as they both involve raising concerns or issues related to a new feature or implementation.
Criteria: Users and designers raise concerns and related issues.
Phrase: Raise concerns and issues.

26.
Concepts: describing outdated technology, highlighted outdated systems
Relationship: The concepts are related as they both involve describing or highlighting outdated technology or systems.
Criteria: Users describe and highlight outdated technology and systems.
Phrase: Describe outdated technology.

27.
Concepts: technical issue, asking technical questions, highlighted technical challenges
Relationship: The concepts are related as they all involve discussing technical issues or challenges.
Criteria: Users report technical issues, ask technical questions, and highlight technical challenges.
Phrase: Discuss technical issues.

28.
Concepts: inquire about user issues, problem-solving discussions
Relationship: The concepts are related as they both involve inquiring about or discussing user issues.
Criteria: Designers inquire about user issues and engage in problem-solving discussions.
Phrase: Inquire and discuss user issues.

29.
Concepts: make comparison, comparing software
Relationship: The concepts are related as they both involve making comparisons between things.
Criteria: Users make comparisons between software.
Phrase: Make comparisons.

30.
Concepts: suggest a use case, illustrating potential use cases
Relationship: The concepts are related as they both involve suggesting or illustrating potential use cases.
Criteria: Users suggest and illustrate potential use cases.
Phrase: Suggest use cases.

31.
Concepts: identify usability issue, highlight usability need
Relationship: The concepts are related as they both involve identifying or highlighting usability issues or needs.
Criteria: Users identify usability issues and highlight usability needs.
Phrase: Identify usability issues.

32.
Concepts: product gap identification, identify gaps in current software
Relationship: The concepts are related as they both involve identifying gaps or limitations in the current product or feature set.
Criteria: Users identify gaps in the current software.
Phrase: Identify product gaps.