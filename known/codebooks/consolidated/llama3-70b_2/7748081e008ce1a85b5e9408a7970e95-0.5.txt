You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: informing about features, explaining upcoming features
- Designer informs users about existing features or functionalities.
- Designer 1 explains or describes upcoming features or functionalities.

2.
Concepts: detailing new features, describe new component features
- Designer 1 details or lists new features, components, or functionalities.
- Designer describes or highlights new features or components.

3.
Concepts: designer 1 details updates, designer 1 describes new components
- Designer provides specific details about updates or new features.
- Designer 1 describes new features, components, or adjustments to the software.

4.
Concepts: touch screen features, describing touch screen limitations
- A designer informs users about the features or limitations of touch screens.
- Designer 1 explains or describes the limitations of the touch screen functionality.

5.
Concepts: clarifying touch screen functionality, touch screen functionality
- Designer clarifies functionality or usage of touch screens.
- A designer explains or clarifies the functionality of touch screens or on-screen keyboards in the Physics Lab's online community.

6.
Concepts: promoting features, highlighting component features
- Highlighting or showcasing the features or benefits of a product or system.
- Highlighting specific features or benefits of a component.

7.
Concepts: feature clarification, clarifying feature functionality
- Clarifying the purpose or functionality of a specific feature or tool.
- A designer clarifies a feature or functionality.
- Clarifying the functionality of a specific feature

8.
Concepts: comparing to other tools, comparing to other software, comparison to similar apps
- User compares the application to other tools or software.
- A user compares the software to other similar tools or software.
- User compares the software favorably to other, more comprehensive but less practical alternatives.
- User makes a comparison between the software and similar applications.

9.
Concepts: describing use case, suggesting practical use cases
- A user describes a scenario or situation where the software could be useful.
- User suggests a practical use case or feature for the software.

10.
Concepts: design principles, design philosophy explanation
- The designer explains the principles or philosophy behind the software's design.
- Designer explains the design philosophy behind the software.

11.
Concepts: design explanations, educating users about design choices, explains design choice, explaining design choices
- Designers explaining the reasoning behind design decisions
- The designer explains the reasoning or thought process behind a particular design choice.
- A designer explains the reasoning behind a design choice.
- Explaining the reason for specific design choices

12.
Concepts: justifying decisions, providing development rationale
- Designer explains or justifies a development decision or choice.
- The designer provides a rationale or explanation for a development decision.

13.
Concepts: design rationale, provides rationale for action, explaining rationale
- Explaining the reasoning or thought process behind a design decision.
- A designer provides a reason or justification for their actions.
- User or designer explains the rationale behind a decision or action.

14.
Concepts: reiterating features, reiterating feature explanations
- A designer reiterates or emphasizes a key feature or benefit of the software.
- Designer reiterates an explanation or demonstration of a feature.

15.
Concepts: feature demonstration, demonstrated functionality
- Designer illustrates software capabilities with concrete examples.
- Designer demonstrates the functionality or features of the application.

16.
Concepts: introducing feature functions, giving an example of the feature's functions, illustrating feature functionality
- Designer introduces feature functions or explains how something works.
- The designer provides an example of how a feature works or what it can do.
- Designer illustrates the functionality of a feature.

17.
Concepts: feature details, detailed feature information
- The designer provides details about a specific feature or functionality.
- Designer provides detailed information about software features or components.

18.
Concepts: clarifying functionality, functionality explanation, clarifies software feature, provide explanation
- Designer clarifies the functionality of a feature.
- Designer explains or clarifies a specific issue or functionality.
- A designer clarifies or explains an existing feature or aspect of the software.
- Designer provides an explanation or clarification about a feature or concept.

19.
Concepts: explaining features, explaining capabilities, explains component functionality, explaining design functionality, explains feature specifics
- Designer explains a feature, functionality, or concept.
- A designer explains or highlights a feature's capabilities.
- A designer addresses or explains the functionality of a specific component or feature.
- Designer explains the functionality or design of a feature.
- Designer explains or provides details about a specific feature, functionality, or aspect of the software.

20.
Concepts: explains concept, explaining simulation detail
- A designer explains a concept or feature of the software.
- The designer explains a simulation detail or how a feature works.

21.
Concepts: acknowledging feature needs, recognizing feature needs, acknowledges need for feature
- Designer acknowledges the need for a specific feature.
- Designers acknowledge the need for a specific feature or functionality.
- Designer recognizes the need for a specific feature or functionality.
- A designer acknowledges or recognizes the need for a feature or improvement.

22.
Concepts: feature importance, explaining feature importance, highlighting importance
- A designer explains the importance or significance of a feature.
- Designer explains the importance of a feature.
- Designer highlights the importance of a specific feature or functionality.

23.
Concepts: justifying effort, justifying efforts
- A designer justifies the effort or time invested in a particular task or feature.
- Designer justifies or explains the effort put into a specific aspect of development.

24.
Concepts: technical explanation, explaining technical artifacts, providing technical explanation
- A designer explains or outlines technical capabilities or features.
- A designer provides technical details or explanations.
- Designer explains technical artifacts.
- A designer provides a technical explanation or justification for a feature or design choice.

25.
Concepts: technical clarification, clarifying technical detail
- Clarifying or explaining technical details or functionality
- The designer clarifies a technical detail or provides additional information.

26.
Concepts: technical insight, provide technical information, provides technical information
- The designer provides technical insight or explanation related to the software or its functionality.
- Designer provides technical insight or explanation about the online community's features or functionality.
- The designer provides technical information or explanations about the software.
- A designer provides technical information about the software.

27.
Concepts: setting technical expectations, provides technical specifications
- A designer sets or explains technical expectations for the software.
- Designer provides technical specifications, details, or information about the software's components or functionality.

28.
Concepts: clarifying testing status, clarifying testing phase, clarified testing phase
- Designer clarifies the testing status or purpose of a feature.
- The designer clarifies or explains the testing phase or process for a specific feature.
- A designer clarifies the purpose or limitations of a specific phase or feature.

29.
Concepts: testing phase context, testing phase information
- Designer provides context or explanations for testing phases.
- A designer provides information about the testing phase of a feature and offers advice on manual adjustments.

30.
Concepts: promoting understanding, facilitated user understanding, ensuring user understanding
- Designer explains or clarifies a concept or feature to promote understanding.
- Designer helps users understand a concept or feature.
- Designer explains or clarifies how a feature or functionality works to ensure user understanding.

31.
Concepts: explain intention, clarifies intention
- A designer explains the intention or purpose behind a follow-up question or action.
- User or designer clarifies the intention or purpose behind a question or statement.

32.
Concepts: clarifying purpose, explains feature purpose
- A designer clarifies the purpose or intention behind a specific feature or design.
- Designer explains the purpose, limitations, or context of a specific feature, version, or functionality.
===
Here are the definitions for each code:

---
1.
Concepts: informing about features, explaining upcoming features
Relationship: The designer provides information about existing and upcoming features.
Criteria: Designer informs users about existing features and explains upcoming features.
Phrase: Informing about features and explaining upcoming features.

2.
Concepts: detailing new features, describe new component features
Relationship: The designer provides detailed information about new features and components.
Criteria: Designer details new features and describes new component features.
Phrase: Detailing new features and describing component features.

3.
Concepts: designer 1 details updates, designer 1 describes new components
Relationship: The designer provides specific details about updates and new components.
Criteria: Designer details updates and describes new components.
Phrase: Detailing updates and describing new components.

4.
Concepts: touch screen features, describing touch screen limitations
Relationship: The designer informs users about touch screen features and limitations.
Criteria: Designer informs users about touch screen features and limitations.
Phrase: Informing about touch screen features and limitations.

5.
Concepts: clarifying touch screen functionality, touch screen functionality
Relationship: The designer clarifies the functionality of touch screens.
Criteria: Designer clarifies touch screen functionality.
Phrase: Clarifying touch screen functionality.

6.
Concepts: promoting features, highlighting component features
Relationship: The designer promotes and highlights features and benefits.
Criteria: Designer promotes features and highlights component features.
Phrase: Promoting features and highlighting component features.

7.
Concepts: feature clarification, clarifying feature functionality
Relationship: The designer clarifies the purpose or functionality of features.
Criteria: Designer clarifies feature functionality.
Phrase: Clarifying feature functionality.

8.
Concepts: comparing to other tools, comparing to other software, comparison to similar apps
Relationship: Users compare the application to other tools or software.
Criteria: User compares the software to other tools or software.
Phrase: Comparing to other tools and software.

9.
Concepts: describing use case, suggesting practical use cases
Relationship: Users describe scenarios where the software could be useful.
Criteria: User describes use cases and suggests practical uses.
Phrase: Describing use cases and suggesting practical uses.

10.
Concepts: design principles, design philosophy explanation
Relationship: The designer explains the principles behind the software's design.
Criteria: Designer explains design principles and philosophy.
Phrase: Explaining design principles and philosophy.

11.
Concepts: design explanations, educating users about design choices, explains design choice, explaining design choices
Relationship: Designers explain the reasoning behind design decisions.
Criteria: Designer explains design choices and reasoning.
Phrase: Explaining design choices and reasoning.

12.
Concepts: justifying decisions, providing development rationale
Relationship: The designer justifies development decisions.
Criteria: Designer justifies decisions and provides development rationale.
Phrase: Justifying decisions and providing development rationale.

13.
Concepts: design rationale, provides rationale for action, explaining rationale
Relationship: Designers explain the reasoning behind design decisions.
Criteria: Designer explains design rationale and provides justification.
Phrase: Explaining design rationale and justification.

14.
Concepts: reiterating features, reiterating feature explanations
Relationship: The designer reiterates key features and explanations.
Criteria: Designer reiterates features and explanations.
Phrase: Reiterating features and explanations.

15.
Concepts: feature demonstration, demonstrated functionality
Relationship: The designer demonstrates software capabilities with examples.
Criteria: Designer demonstrates features and functionality.
Phrase: Demonstrating features and functionality.

16.
Concepts: introducing feature functions, giving an example of the feature's functions, illustrating feature functionality
Relationship: The designer introduces feature functions and provides examples.
Criteria: Designer introduces feature functions and provides examples.
Phrase: Introducing feature functions and providing examples.

17.
Concepts: feature details, detailed feature information
Relationship: The designer provides detailed information about features.
Criteria: Designer provides detailed feature information.
Phrase: Providing detailed feature information.

18.
Concepts: clarifying functionality, functionality explanation, clarifies software feature, provide explanation
Relationship: The designer clarifies feature functionality and provides explanations.
Criteria: Designer clarifies functionality and provides explanations.
Phrase: Clarifying functionality and providing explanations.

19.
Concepts: explaining features, explaining capabilities, explains component functionality, explaining design functionality, explains feature specifics
Relationship: The designer explains features, capabilities, and functionality.
Criteria: Designer explains features, capabilities, and functionality.
Phrase: Explaining features, capabilities, and functionality.

20.
Concepts: explains concept, explaining simulation detail
Relationship: The designer explains concepts and simulation details.
Criteria: Designer explains concepts and simulation details.
Phrase: Explaining concepts and simulation details.

21.
Concepts: acknowledging feature needs, recognizing feature needs, acknowledges need for feature
Relationship: The designer acknowledges the need for specific features.
Criteria: Designer acknowledges feature needs.
Phrase: Acknowledging feature needs.

22.
Concepts: feature importance, explaining feature importance, highlighting importance
Relationship: The designer explains the importance of features.
Criteria: Designer explains feature importance.
Phrase: Explaining feature importance.

23.
Concepts: justifying effort, justifying efforts
Relationship: The designer justifies the effort invested in tasks or features.
Criteria: Designer justifies effort and time invested.
Phrase: Justifying effort and time invested.

24.
Concepts: technical explanation, explaining technical artifacts, providing technical explanation
Relationship: The designer explains technical capabilities or features.
Criteria: Designer provides technical explanations.
Phrase: Providing technical explanations.

25.
Concepts: technical clarification, clarifying technical detail
Relationship: The designer clarifies technical details or functionality.
Criteria: Designer clarifies technical details.
Phrase: Clarifying technical details.

26.
Concepts: technical insight, provide technical information, provides technical information
Relationship: The designer provides technical insight or explanation.
Criteria: Designer provides technical insight and information.
Phrase: Providing technical insight and information.

27.
Concepts: setting technical expectations, provides technical specifications
Relationship: The designer sets or explains technical expectations.
Criteria: Designer sets technical expectations and provides specifications.
Phrase: Setting technical expectations and providing specifications.

28.
Concepts: clarifying testing status, clarifying testing phase, clarified testing phase
Relationship: The designer clarifies testing status or purpose.
Criteria: Designer clarifies testing status and purpose.
Phrase: Clarifying testing status and purpose.

29.
Concepts: testing phase context, testing phase information
Relationship: The designer provides context or explanations for testing phases.
Criteria: Designer provides testing phase context and information.
Phrase: Providing testing phase context and information.

30.
Concepts: promoting understanding, facilitated user understanding, ensuring user understanding
Relationship: The designer promotes understanding of concepts or features.
Criteria: Designer promotes understanding and ensures user understanding.
Phrase: Promoting understanding and ensuring user understanding.

31.
Concepts: explain intention, clarifies intention
Relationship: The designer explains the intention behind actions or questions.
Criteria: Designer explains intention and clarifies purpose.
Phrase: Explaining intention and clarifying purpose.

32.
Concepts: clarifying purpose, explains feature purpose
Relationship: The designer clarifies the purpose or intention behind features.
Criteria: Designer clarifies feature purpose and intention.
Phrase: Clarifying feature purpose and intention.