You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: apologizing for communication timing, apologizing for delays with explanations
- A designer acknowledges or apologizes for the timing of a message or update, especially if it was sent at an inconvenient time.
- A designer or developer apologizes for delays or issues in the development process and explains the reasons behind them.

2.
Concepts: explaining classroom limitations, explaining internet limitations and access issues
- The speaker explains or describes limitations or constraints in a classroom setting.
- A user explains limitations or restrictions due to internet connectivity or access issues in their classrooms.

3.
Concepts: describing institutional limitations, highlighting limitations and constraints
- A user describes institutional limitations or constraints that affect their use of the product.
- Users highlight limitations, constraints, or difficulties they face while using the software in educational settings.

4.
Concepts: explaining the need for documentation, requesting documentation with justification
- A user explains the necessity of a user manual and emphasizes the significance of documentation.
- A user requests documentation and provides reasons for needing a manual.

5.
Concepts: discussing usability and potential challenges, highlighting development and ui design challenges
- A designer discusses and highlights usability concerns and reveals potential usability challenges or difficulties.
- A designer highlights technical challenges or difficulties in developing a feature or component, including UI design challenges.

6.
Concepts: justifying limitations with explanations, explaining limitations and technical issues
- Designer justifies limitations or restrictions in the software or online community by explaining the reasons behind them.
- A designer explains and discusses limitations or technical issues that affect the software's functionality.

7.
Concepts: sharing technical context and design constraints, expressing team limitations and technical constraints
- Sharing technical context, constraints, or limitations that affect the design of the software.
- Designer expresses limitations or constraints within their team and directly communicates technical limitations or constraints.

8.
Concepts: managing user requests, prioritizing and aligning with user feedback
- Managing or prioritizing user requests or feedback.
- Designers prioritize user requests or feedback, or align with user feedback or suggestions.

9.
Concepts: considering user needs, anticipating user needs
- Considering or prioritizing user needs or requirements.
- Anticipating or predicting user needs or requirements.

10.
Concepts: fostering collaboration, sharing development information
- Designers or users share design information and engage in a design dialogue.
- Users and designers share information related to design or development.

11.
Concepts: considering development advice, discussing user-driven development
- Designers receive and consider guidance on development approaches from users.
- Designers discuss how user feedback influences development and the balance between designer-led and user-driven approaches.

12.
Concepts: refining design features through iteration, describing iterative development processes
- A designer refines or iterates on the design based on feedback or testing.
- Designers describe how they improve the project through iterative developments based on user feedback.

13.
Concepts: acknowledging user experience and feedback, providing and incorporating design feedback
- Designers acknowledge user experiences or concerns, or acknowledge the need to remember user feedback or opinions.
- Designers provide specific feedback on design elements, confirm or clarify a specific detail based on user feedback, or consider user feedback for onboarding, tutorials, or user experience improvements.

14.
Concepts: establishing personal connections, showing empathy and understanding
- The designer establishes a personal connection with users or understands their profession.
- A designer shows empathy or understanding towards the user's concerns or frustrations, and users understand the designer's situation.

15.
Concepts: addressing and mitigating concerns, responding to questions and concerns
- Designers address and raise concerns, or provide a response to mitigate user concerns or issues.
- Designers respond to a question or concern, providing reassurance or clarification, or respond to an initial question or inquiry.

16.
Concepts: seeking group input, promise to invite feedback from everyone in the group
- Designer seeks input or advice from the group.
- Designer promises to invite feedback from the community.

17.
Concepts: mentioning and reiterating system requirements, providing and expressing compatibility information, providing system compatibility information through platform details
- Designers mention system or hardware requirements for the platform, or reiterate system requirements or compatibility information.
- Designers provide information about compatibility or system requirements, or express compatibility requirements or limitations for a system or feature.
- Designers provide platform information to provide system compatibility information.

18.
Concepts: theorizing and speculating on system compatibility, exploring and discussing compatibility options
- Designers theorize about system compatibility, or speculate about the compatibility of the software with different devices or systems.
- Designers explore options for system compatibility or technical requirements, consider or discuss future compatibility or updates, or discuss compatibility issues or potential solutions.

19.
Concepts: addressing compatibility concerns, explaining technical requirements for theoretical compatibility
- Designers clarify and address compatibility issues to ensure seamless integration.
- Designers explain technical requirements to ensure theoretical compatibility.

20.
Concepts: considering hardware limitations and technical constraints, anticipating limitations and considering constraints
- User considers hardware limitations or constraints that affect the software's functionality.
- Designer anticipates potential limitations or challenges and considers constraints or limitations that affect the implementation of features.

21.
Concepts: exploring workarounds and compromises, exploring and offering technical solutions, offering alternative and flexible solutions
- Designers explore alternative solutions or workarounds, or explore possible compromises or workarounds to address user concerns.
- Designers explore or discuss technical solutions to a problem, or provide a technical solution or workaround to a problem.
- Designers seek and offer alternative solutions, or offer or discuss flexible solutions or workarounds to a problem.

22.
Concepts: adapting to constraints through design flexibility, overcoming and negotiating platform limitations
- Designers adapt to constraints to demonstrate design flexibility.
- Designers seek workarounds or solutions to platform limitations or constraints, or negotiate platform constraints by finding workarounds or alternatives.

23.
Concepts: inquiring about user issues, reporting technical issues and seeking support
- Inquiring about issues or problems faced by users.
- Reporting technical issues or difficulties and requesting help or technical support with the software.

24.
Concepts: explaining components and clarifying functionality, building understanding and promoting understanding
- Explaining the functionality of a component and clarifying or explaining the functionality or purpose of a feature or component.
- Explaining how a system or feature works, often with examples, and facilitating understanding of complex concepts or software features.

25.
Concepts: explaining design and differences, clarifying updates and version differences
- Designers explain the existing design and differences between versions or features.
- Designer provides clarification on software updates or versions and clarifies differences between versions or releases.

26.
Concepts: providing examples, explaining conceptual connections, communicating through images
- Designers provide examples and use visual aids to illustrate points or concepts.
- Designers explain the connections between concepts or diagrams.
- Designers communicate through images and facilitate user input through visual aids.

27.
Concepts: demonstrating feature functions, describing and demonstrating innovations, demonstrating connections through feature details
- Designers introduce new feature functions and demonstrate their purpose or functionality.
- Designers describe or demonstrate innovative or unique features or technologies.
- Designers detail experimental features to demonstrate connections between concepts.

28.
Concepts: explaining simulation details, explaining development processes
- Designers explain simulation details and provide technical explanations about the software's features.
- Designers share insights and explanations of the development process or technical details.

29.
Concepts: emphasizing simplicity, highlighting ease of use and simplicity
- Designers simplify design and intend to simplify, emphasizing the importance of simplicity.
- Designers highlight the ease of use or simplicity of a feature or functionality, or explain that adding certain features is simpler than expected.

30.
Concepts: suggesting simplification and streamlining, seeking efficiency and streamlining workflow
- Designers suggest simplifying a feature or functionality, or describe the process of simplifying or streamlining features or functionality.
- Designers seek to simplify or improve efficiency in the system, or suggest or implement features to simplify or streamline workflow.

31.
Concepts: emphasizing quality, prioritizing user experience
- Designers emphasize and prioritize quality, and users value design quality.
- Designers prioritize user experience and specify details to enhance it.

32.
Concepts: improving usability, emphasizing user-centric design, emphasizing usability
- Designers aim to improve the user interface and enhance accessibility.
- Designers design with user-friendliness in mind and emphasize user-centric design.
- Designers consider usability and emphasize ease of use in software design.
===
Here are the definitions for each code:

---
1.
Concepts: apologizing for communication timing, apologizing for delays with explanations
Relationship: The designer takes responsibility for inconvenient communication timing and explains reasons for delays.
Criteria: Designers acknowledge and apologize for inconvenient communication timing and explain reasons for delays.
Phrase: Apologizing for communication timing and delays.

2.
Concepts: explaining classroom limitations, explaining internet limitations and access issues
Relationship: The speaker highlights constraints in classroom and internet settings.
Criteria: Users explain limitations and constraints in classroom and internet settings.
Phrase: Explaining classroom and internet limitations.

3.
Concepts: describing institutional limitations, highlighting limitations and constraints
Relationship: Users describe institutional constraints and highlight difficulties in educational settings.
Criteria: Users describe institutional limitations and highlight constraints in educational settings.
Phrase: Describing institutional limitations and constraints.

4.
Concepts: explaining the need for documentation, requesting documentation with justification
Relationship: Users emphasize the necessity of documentation and provide reasons for needing it.
Criteria: Users explain the need for documentation and request it with justification.
Phrase: Requesting documentation with justification.

5.
Concepts: discussing usability and potential challenges, highlighting development and ui design challenges
Relationship: Designers discuss usability concerns and reveal technical challenges.
Criteria: Designers discuss usability concerns and highlight development and UI design challenges.
Phrase: Discussing usability and development challenges.

6.
Concepts: justifying limitations with explanations, explaining limitations and technical issues
Relationship: Designers justify limitations by explaining reasons behind them.
Criteria: Designers justify limitations by explaining reasons and technical issues.
Phrase: Justifying limitations with explanations.

7.
Concepts: sharing technical context and design constraints, expressing team limitations and technical constraints
Relationship: Designers share technical context and express team limitations.
Criteria: Designers share technical context and express team limitations and technical constraints.
Phrase: Sharing technical context and constraints.

8.
Concepts: managing user requests, prioritizing and aligning with user feedback
Relationship: Designers prioritize user requests and align with user feedback.
Criteria: Designers manage user requests and prioritize and align with user feedback.
Phrase: Managing user requests and feedback.

9.
Concepts: considering user needs, anticipating user needs
Relationship: Designers consider and anticipate user needs.
Criteria: Designers consider and anticipate user needs.
Phrase: Considering and anticipating user needs.

10.
Concepts: fostering collaboration, sharing development information
Relationship: Designers and users share information and engage in design dialogue.
Criteria: Designers and users share development information and foster collaboration.
Phrase: Fostering collaboration and sharing information.

11.
Concepts: considering development advice, discussing user-driven development
Relationship: Designers consider user guidance and discuss user-driven approaches.
Criteria: Designers consider development advice and discuss user-driven development.
Phrase: Considering development advice and user-driven approaches.

12.
Concepts: refining design features through iteration, describing iterative development processes
Relationship: Designers refine design through iteration and describe iterative development.
Criteria: Designers refine design features through iteration and describe iterative development processes.
Phrase: Refining design features through iteration.

13.
Concepts: acknowledging user experience and feedback, providing and incorporating design feedback
Relationship: Designers acknowledge user experience and provide and incorporate feedback.
Criteria: Designers acknowledge user experience and provide and incorporate design feedback.
Phrase: Acknowledging user experience and feedback.

14.
Concepts: establishing personal connections, showing empathy and understanding
Relationship: Designers establish personal connections and show empathy.
Criteria: Designers establish personal connections and show empathy and understanding.
Phrase: Establishing personal connections and empathy.

15.
Concepts: addressing and mitigating concerns, responding to questions and concerns
Relationship: Designers address concerns and respond to questions.
Criteria: Designers address and mitigate concerns and respond to questions and concerns.
Phrase: Addressing and mitigating concerns.

16.
Concepts: seeking group input, promise to invite feedback from everyone in the group
Relationship: Designers seek group input and promise to invite feedback.
Criteria: Designers seek group input and promise to invite feedback from everyone.
Phrase: Seeking group input and feedback.

17.
Concepts: mentioning and reiterating system requirements, providing and expressing compatibility information, providing system compatibility information through platform details
Relationship: Designers mention system requirements and provide compatibility information.
Criteria: Designers mention system requirements and provide compatibility information.
Phrase: Mentioning system requirements and compatibility information.

18.
Concepts: theorizing and speculating on system compatibility, exploring and discussing compatibility options
Relationship: Designers theorize and explore system compatibility options.
Criteria: Designers theorize and explore system compatibility options.
Phrase: Theorizing and exploring system compatibility.

19.
Concepts: addressing compatibility concerns, explaining technical requirements for theoretical compatibility
Relationship: Designers address compatibility concerns and explain technical requirements.
Criteria: Designers address compatibility concerns and explain technical requirements.
Phrase: Addressing compatibility concerns.

20.
Concepts: considering hardware limitations and technical constraints, anticipating limitations and considering constraints
Relationship: Users consider hardware limitations and designers anticipate constraints.
Criteria: Users consider hardware limitations and designers anticipate limitations and constraints.
Phrase: Considering hardware limitations and constraints.

21.
Concepts: exploring workarounds and compromises, exploring and offering technical solutions, offering alternative and flexible solutions
Relationship: Designers explore workarounds and offer technical solutions.
Criteria: Designers explore workarounds and offer technical solutions and alternative flexible solutions.
Phrase: Exploring workarounds and technical solutions.

22.
Concepts: adapting to constraints through design flexibility, overcoming and negotiating platform limitations
Relationship: Designers adapt to constraints and negotiate platform limitations.
Criteria: Designers adapt to constraints through design flexibility and negotiate platform limitations.
Phrase: Adapting to constraints through design flexibility.

23.
Concepts: inquiring about user issues, reporting technical issues and seeking support
Relationship: Designers inquire about user issues and report technical issues.
Criteria: Designers inquire about user issues and report technical issues and seek support.
Phrase: Inquiring about user issues and reporting technical issues.

24.
Concepts: explaining components and clarifying functionality, building understanding and promoting understanding
Relationship: Designers explain components and clarify functionality.
Criteria: Designers explain components and clarify functionality to build understanding.
Phrase: Explaining components and functionality.

25.
Concepts: explaining design and differences, clarifying updates and version differences
Relationship: Designers explain design and differences.
Criteria: Designers explain design and differences and clarify updates and version differences.
Phrase: Explaining design and differences.

26.
Concepts: providing examples, explaining conceptual connections, communicating through images
Relationship: Designers provide examples and explain conceptual connections.
Criteria: Designers provide examples and explain conceptual connections and communicate through images.
Phrase: Providing examples and explaining conceptual connections.

27.
Concepts: demonstrating feature functions, describing and demonstrating innovations, demonstrating connections through feature details
Relationship: Designers demonstrate feature functions and innovations.
Criteria: Designers demonstrate feature functions and describe and demonstrate innovations.
Phrase: Demonstrating feature functions and innovations.

28.
Concepts: explaining simulation details, explaining development processes
Relationship: Designers explain simulation details and development processes.
Criteria: Designers explain simulation details and development processes.
Phrase: Explaining simulation details and development processes.

29.
Concepts: emphasizing simplicity, highlighting ease of use and simplicity
Relationship: Designers emphasize simplicity and ease of use.
Criteria: Designers emphasize simplicity and highlight ease of use and simplicity.
Phrase: Emphasizing simplicity and ease of use.

30.
Concepts: suggesting simplification and streamlining, seeking efficiency and streamlining workflow
Relationship: Designers suggest simplification and seek efficiency.
Criteria: Designers suggest simplification and seek efficiency and streamline workflow.
Phrase: Suggesting simplification and seeking efficiency.

31.
Concepts: emphasizing quality, prioritizing user experience
Relationship: Designers emphasize quality and prioritize user experience.
Criteria: Designers emphasize quality and prioritize user experience.
Phrase: Emphasizing quality and prioritizing user experience.

32.
Concepts: improving usability, emphasizing user-centric design, emphasizing usability
Relationship: Designers improve usability and emphasize user-centric design.
Criteria: Designers improve usability and emphasize user-centric design and usability.
Phrase: Improving usability and emphasizing user-centric design.