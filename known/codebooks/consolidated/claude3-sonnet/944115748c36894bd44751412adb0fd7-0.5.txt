You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (11 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
11. {Repeat the input 11}
Relationship: {The logical relationship between concepts in input 11}
Criteria: {A sentence of consolidated criteria for code 11}
Label: {A consolidated label of code 11}
Category: {2-4 words for code 11}
---
~~~
1. software feature: version release, software feature: planned updates.
- Mentions of new versions or releases of Physics Lab.
- Mentions of planned updates, features, or components for Physics Lab.

2. conceptual understanding, visualization and simulation.
- Features or affordances of the software that aim to facilitate conceptual understanding of physics principles.
- Features or affordances of the software that support visualization or simulation of physics concepts.

3. designer responsiveness.
- The designer acknowledging, responding to and incorporating user feedback.
- Quotes that demonstrate Designer's responsiveness to user feedback and willingness to incorporate suggestions.

4. interface design.
- References to the design of the software's user interface or specific interface elements.
- Discussions and decisions related to the user interface design, including visual representations and interaction mechanisms.

5. feature request.
- A user's request for a specific feature or functionality to be added to the software.
- Suggestions or requests from users for specific features or functionalities in the Physics Lab software.

6. download inquiry.
- A user's inquiry about downloading or accessing a specific version of the software.
- Users asking about or seeking information on how to download or access the Physics Lab software.

7. active participation.
- Evidence of community members actively engaging in discussions, sharing resources, or providing feedback.
- Instances where participants actively contribute to the conversation by asking questions, sharing information, or responding to others.

8. knowledge sharing.
- Instances of community members sharing knowledge, expertise, or resources related to physics education.
- Users sharing knowledge or providing explanations to help others.
- Instances where community members share knowledge, information or expertise.

9. prioritization.
- Discussions or decisions related to prioritizing the development or implementation of certain features or sections.
- Statements or decisions regarding the order or priority of features or sections to be developed.

10. user feedback.
- Comments from users providing feedback, suggestions or describing their experience with the software.
- Community members providing feedback, suggestions or reporting issues to the designers.

11. user involvement.
- Quotes that illustrate user involvement in the design process through feedback and suggestions.
- Evidence of users being involved in the design process, providing feedback, or contributing ideas.
===
---
Categories:
* Community Dynamics
* Software Design
* User Experience
* Knowledge Sharing

Definitions for each code (11 in total):

1. software feature: version release, software feature: planned updates.
Relationship: Parallel concepts related to software features
Criteria: Mentions of new versions, releases, planned updates, or future components of the Physics Lab software.
Label: Software Versions and Updates
Category: Software Design

2. conceptual understanding, visualization and simulation.
Relationship: Parallel concepts related to learning affordances
Criteria: Features or affordances of the software aimed at facilitating conceptual understanding, visualization, or simulation of physics concepts.
Label: Learning Affordances
Category: User Experience

3. designer responsiveness.
Relationship: A single concept
Criteria: The designer acknowledging, responding to, and incorporating user feedback, demonstrating responsiveness to user suggestions.
Label: Designer Responsiveness
Category: Community Dynamics

4. interface design.
Relationship: A single concept
Criteria: References to the design of the software's user interface, including visual representations and interaction mechanisms.
Label: User Interface Design
Category: Software Design

5. feature request.
Relationship: A single concept
Criteria: A user's request or suggestion for a specific feature or functionality to be added to the software.
Label: User Feature Requests
Category: User Experience

6. download inquiry.
Relationship: A single concept
Criteria: A user's inquiry about downloading or accessing a specific version of the Physics Lab software.
Label: Software Access Inquiries
Category: User Experience

7. active participation.
Relationship: A single concept
Criteria: Evidence of community members actively engaging in discussions, sharing resources, or providing feedback.
Label: Active Community Participation
Category: Community Dynamics

8. knowledge sharing.
Relationship: A single concept
Criteria: Instances of community members sharing knowledge, expertise, or resources related to physics education.
Label: Knowledge Sharing
Category: Knowledge Sharing

9. prioritization.
Relationship: A single concept
Criteria: Discussions or decisions related to prioritizing the development or implementation of certain features or sections.
Label: Feature Prioritization
Category: Software Design

10. user feedback.
Relationship: A single concept
Criteria: Comments from users providing feedback, suggestions, or describing their experience with the software.
Label: User Feedback
Category: User Experience

11. user involvement.
Relationship: A single concept
Criteria: Evidence of users being involved in the design process through feedback and suggestions.
Label: User Involvement in Design
Category: Community Dynamics
---