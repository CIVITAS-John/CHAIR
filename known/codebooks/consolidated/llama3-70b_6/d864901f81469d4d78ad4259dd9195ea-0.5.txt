You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: clarifying software capabilities, guide users in software choices
- A designer clarifies options or software capabilities.
- The designer provides guidance on software choices or compatibility.

2.
Concepts: providing accurate information, functionality information provision
- Designer provides accurate information about the software or its features.
- A designer informs users about software functionality and potential issues.

3.
Concepts: ensuring information accuracy, ensuring precise communication
- A designer ensures the accuracy of information provided.
- A designer ensures precise communication and clarifies unclear points.

4.
Concepts: addressing ambiguity, clarity enhancement
- A designer addresses ambiguity or unclear points.
- A designer aims to clarify or improve the understanding of a concept.

5.
Concepts: refine design process, explain optimization process
- A designer describes a process or approach to improve the design or development of a product.
- Designer explains the process of optimizing or refining Physics Lab.

6.
Concepts: explaining development process, promoting understanding of design processes
- A designer explains or discusses a process or approach.
- Explaining design processes or decisions

7.
Concepts: submission process, explaining the review process
- A designer explains or clarifies the submission process for an app or feature.
- Designers explain the review process for a new version.

8.
Concepts: acknowledging complexity, acknowledging usability issues and complexity
- Acknowledging the complexity of a task or issue.
- The designer acknowledges usability issues or challenges, acknowledging complexities or challenges in the user interface.

9.
Concepts: explaining complexity, explaining operational challenges
- Designers explain the complexity of a feature or task, explaining the complexity of updates or features.
- Designer explains challenges or difficulties in development.

10.
Concepts: past experience reference, reflecting on experiences
- Designer references past experience to inform design decisions.
- A designer reflects on past experiences or shares anecdotes, illustrating lessons learned.

11.
Concepts: propose adaptive guidance, using feedback-based prompts
- A designer proposes adaptive guidance or feedback-based design.
- A designer uses or mentions feedback-based prompts.

12.
Concepts: raising potential issues, raise concerns about new features, noting potential bugs or issues
- A designer raises or highlights a potential issue or problem.
- A designer raises concerns about a new feature or development.
- Designer notes potential issues or bugs in the current design.

13.
Concepts: user experience consideration, indicate thoughtful design considerations
- Designer highlights a user experience consideration.
- Designers indicating thoughtful design considerations or trade-offs.

14.
Concepts: compatibility answer, theoretical compatibility
- The designer answers a question about the software's compatibility with different systems.
- The designer clarifies or explains the theoretical compatibility of the Physics Lab software with older systems or hardware.

15.
Concepts: highlight compatibility, ensure compatibility through clarification
- The designer highlights the compatibility of a feature or system.
- A designer ensures compatibility with different systems or devices by clarifying compatibility.

16.
Concepts: clarifies compatibility, clarifying platform compatibility
- A community member clarifies or addresses compatibility issues or limitations.
- A user inquires about or clarifies platform compatibility.

17.
Concepts: suggest compatibility assurance, operating system compatibility suggestion
- User suggests or assures compatibility.
- User suggests potential compatibility of a specific operating system.

18.
Concepts: willingness to adapt, adapting to constraints
- Designer indicates willingness to adapt to user needs.
- Designer adapts to a user's constraints or limitations

19.
Concepts: providing flexibility, providing control options
- A designer provides flexibility or options for users.
- Designer provides users with control options or customization.

20.
Concepts: development flexibility, suggesting project flexibility
- The designer expresses flexibility in development plans.
- Suggestion of flexibility in project scope or development.

21.
Concepts: promoting user agency, encourage user autonomy, suggesting user autonomy
- A designer encourages or promotes user agency or autonomy.
- The designer encourages users to take initiative or be self-sufficient in using the Physics Lab.
- Designer suggests or implies user autonomy in using the software.

22.
Concepts: encouraging adaptation, encourage exploration through updates
- A designer encourages users to adapt or explore experimental setups.
- A designer encourages users to explore or experiment with new features or updates.

23.
Concepts: offering simulations, encourage simulation techniques
- A designer provides options for simulation or experimentation.
- A designer encourages adaptation of simulation techniques or features.

24.
Concepts: revise previous statement, self-rebut the previous response
- The designer corrects or revises their previous statement.
- The designer corrects or refutes their previous statement.

25.
Concepts: enhancing personal avatars, seeking avatar customization assistance
- Designers or users aim to enhance their personal avatars or profiles.
- Users or designers seek assistance with customizing their avatars.

26.
Concepts: confirm preference, clarify preference
- Confirming a preference or choice
- User clarifies their preference or opinion on a specific topic.

27.
Concepts: preference specification, provide design input and preferences
- Specifying preferences, opinions, or requirements for a feature or functionality.
- Users provide input on design preferences.

28.
Concepts: suggesting collaboration, suggesting a community feature
- A user suggests collaboration or proposes an idea for the community.
- A community feature is suggested for sharing resources or information.

29.
Concepts: collaborative resource enhancement, contributing to content development
- A user engages in collaborative enhancement of resources or features.
- Users contribute to content development or suggest new features or resources.

30.
Concepts: requesting new experiments, requesting new content or features
- Users request additional experiments or features.
- Users request new or specific content, features, or functionality from designers.

31.
Concepts: suggesting scope expansion, software utility expansion
- Users suggest expanding the scope or features of the software.
- A user suggests expanding the utility or functionality of the Physics Lab software.

32.
Concepts: expressing user needs, highlighting user needs, contextualizing user needs
- Expressing user needs or requirements or expressions of user needs or requirements.
- A user highlights their needs or requirements for a feature or software, identifying practical needs or suggesting solutions.
- Users share their needs, requirements, or expectations from the platform or its components.
===
Here are the definitions for each code:

---
1.
Concepts: clarifying software capabilities, guide users in software choices
Relationship: Clarifying software capabilities is a means to guide users in software choices.
Criteria: Designers clarify software capabilities to guide users in making informed choices.
Phrase: Clarify software capabilities to guide users.

2.
Concepts: providing accurate information, functionality information provision
Relationship: Providing accurate information is a type of functionality information provision.
Criteria: Designers provide accurate information about software functionality to inform users.
Phrase: Provide accurate information about functionality.

3.
Concepts: ensuring information accuracy, ensuring precise communication
Relationship: Ensuring information accuracy is a means to ensure precise communication.
Criteria: Designers ensure the accuracy of information to communicate precisely with users.
Phrase: Ensure accurate information for precise communication.

4.
Concepts: addressing ambiguity, clarity enhancement
Relationship: Addressing ambiguity is a means to enhance clarity.
Criteria: Designers address ambiguity to clarify concepts for users.
Phrase: Address ambiguity to enhance clarity.

5.
Concepts: refine design process, explain optimization process
Relationship: Refining the design process involves explaining the optimization process.
Criteria: Designers describe the process of optimizing or refining the design to improve the product.
Phrase: Refine design process through optimization explanation.

6.
Concepts: explaining development process, promoting understanding of design processes
Relationship: Explaining the development process promotes understanding of design processes.
Criteria: Designers explain the development process to promote understanding of design decisions.
Phrase: Explain development process to promote understanding.

7.
Concepts: submission process, explaining the review process
Relationship: Explaining the submission process involves explaining the review process.
Criteria: Designers explain the submission and review processes for app or feature development.
Phrase: Explain submission and review processes.

8.
Concepts: acknowledging complexity, acknowledging usability issues and complexity
Relationship: Acknowledging complexity involves acknowledging usability issues and complexity.
Criteria: Designers acknowledge complexity and usability issues to address challenges.
Phrase: Acknowledge complexity and usability issues.

9.
Concepts: explaining complexity, explaining operational challenges
Relationship: Explaining complexity involves explaining operational challenges.
Criteria: Designers explain complexity and operational challenges to inform users.
Phrase: Explain complexity and operational challenges.

10.
Concepts: past experience reference, reflecting on experiences
Relationship: Referencing past experience involves reflecting on experiences.
Criteria: Designers reference past experiences to inform design decisions and share lessons learned.
Phrase: Reference past experiences to inform design.

11.
Concepts: propose adaptive guidance, using feedback-based prompts
Relationship: Proposing adaptive guidance involves using feedback-based prompts.
Criteria: Designers propose adaptive guidance using feedback-based prompts to support users.
Phrase: Propose adaptive guidance through feedback-based prompts.

12.
Concepts: raising potential issues, raise concerns about new features, noting potential bugs or issues
Relationship: Raising potential issues involves raising concerns and noting potential bugs or issues.
Criteria: Designers raise potential issues and concerns about new features to identify potential problems.
Phrase: Raise potential issues and concerns.

13.
Concepts: user experience consideration, indicate thoughtful design considerations
Relationship: User experience consideration involves indicating thoughtful design considerations.
Criteria: Designers highlight user experience considerations to demonstrate thoughtful design decisions.
Phrase: Highlight user experience considerations.

14.
Concepts: compatibility answer, theoretical compatibility
Relationship: Providing a compatibility answer involves explaining theoretical compatibility.
Criteria: Designers answer compatibility questions by explaining theoretical compatibility.
Phrase: Answer compatibility questions through theoretical explanations.

15.
Concepts: highlight compatibility, ensure compatibility through clarification
Relationship: Highlighting compatibility involves ensuring compatibility through clarification.
Criteria: Designers highlight compatibility by clarifying compatibility with different systems or devices.
Phrase: Highlight compatibility through clarification.

16.
Concepts: clarifies compatibility, clarifying platform compatibility
Relationship: Clarifying compatibility involves clarifying platform compatibility.
Criteria: Community members clarify compatibility issues or limitations to ensure understanding.
Phrase: Clarify compatibility issues or limitations.

17.
Concepts: suggest compatibility assurance, operating system compatibility suggestion
Relationship: Suggesting compatibility assurance involves suggesting operating system compatibility.
Criteria: Users suggest or assure compatibility with specific operating systems.
Phrase: Suggest compatibility with operating systems.

18.
Concepts: willingness to adapt, adapting to constraints
Relationship: Expressing willingness to adapt involves adapting to constraints.
Criteria: Designers indicate willingness to adapt to user needs and constraints.
Phrase: Express willingness to adapt to user needs.

19.
Concepts: providing flexibility, providing control options
Relationship: Providing flexibility involves providing control options.
Criteria: Designers provide flexibility and control options to users.
Phrase: Provide flexibility and control options.

20.
Concepts: development flexibility, suggesting project flexibility
Relationship: Expressing development flexibility involves suggesting project flexibility.
Criteria: Designers express flexibility in development plans to accommodate user needs.
Phrase: Express flexibility in development plans.

21.
Concepts: promoting user agency, encourage user autonomy, suggesting user autonomy
Relationship: Promoting user agency involves encouraging user autonomy.
Criteria: Designers promote user agency by encouraging autonomy and self-sufficiency.
Phrase: Promote user agency through autonomy encouragement.

22.
Concepts: encouraging adaptation, encourage exploration through updates
Relationship: Encouraging adaptation involves encouraging exploration through updates.
Criteria: Designers encourage users to adapt and explore new features or updates.
Phrase: Encourage adaptation and exploration.

23.
Concepts: offering simulations, encourage simulation techniques
Relationship: Offering simulations involves encouraging simulation techniques.
Criteria: Designers provide simulation options and encourage adaptation of simulation techniques.
Phrase: Offer simulation options and encourage adaptation.

24.
Concepts: revise previous statement, self-rebut the previous response
Relationship: Revising a previous statement involves self-rebutting the previous response.
Criteria: Designers correct or revise their previous statements to provide accurate information.
Phrase: Revise previous statements to correct inaccuracies.

25.
Concepts: enhancing personal avatars, seeking avatar customization assistance
Relationship: Enhancing personal avatars involves seeking avatar customization assistance.
Criteria: Designers and users aim to enhance their personal avatars and seek customization assistance.
Phrase: Enhance personal avatars through customization assistance.

26.
Concepts: confirm preference, clarify preference
Relationship: Confirming a preference involves clarifying the preference.
Criteria: Users confirm and clarify their preferences or opinions on specific topics.
Phrase: Confirm and clarify preferences.

27.
Concepts: preference specification, provide design input and preferences
Relationship: Specifying preferences involves providing design input and preferences.
Criteria: Users specify their preferences and provide input on design decisions.
Phrase: Specify preferences and provide design input.

28.
Concepts: suggesting collaboration, suggesting a community feature
Relationship: Suggesting collaboration involves suggesting a community feature.
Criteria: Users suggest collaboration or propose community features for sharing resources or information.
Phrase: Suggest collaboration and community features.

29.
Concepts: collaborative resource enhancement, contributing to content development
Relationship: Collaborative resource enhancement involves contributing to content development.
Criteria: Users engage in collaborative resource enhancement and contribute to content development.
Phrase: Engage in collaborative resource enhancement.

30.
Concepts: requesting new experiments, requesting new content or features
Relationship: Requesting new experiments involves requesting new content or features.
Criteria: Users request additional experiments, features, or content from designers.
Phrase: Request new experiments, features, or content.

31.
Concepts: suggesting scope expansion, software utility expansion
Relationship: Suggesting scope expansion involves suggesting software utility expansion.
Criteria: Users suggest expanding the scope or features of the software to improve its utility.
Phrase: Suggest expanding software utility.

32.
Concepts: expressing user needs, highlighting user needs, contextualizing user needs
Relationship: Expressing user needs involves highlighting and contextualizing user needs.
Criteria: Users express, highlight, and contextualize their needs or requirements for the software or features.
Phrase: Express and highlight user needs.