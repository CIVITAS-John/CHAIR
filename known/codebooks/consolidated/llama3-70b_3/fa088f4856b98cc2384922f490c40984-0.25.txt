You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (14 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
14. 
Concepts: {Repeat the input 14}
Relationship: {What is logical relationship between concepts in code 14, or N/A if not applicable}
Criteria: {Who did what, and how for code 14}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: praise software, compliment software
- Users praise or express admiration for the software or its features.
- Users compliment or praise the Physics Lab software.

2.
Concepts: express gratitude, user interaction and gratitude
- User or designer expresses appreciation or thanks.
- User interacts with designers and expresses gratitude.

3.
Concepts: gratitude, user appreciation
- Expressing gratitude or appreciation for the software, its features, or the community.
- Expressions of thanks or appreciation from users.

4.
Concepts: use emojis, use emoji to convey sentiment
- Users use emojis to convey emotions or tone.
- The speaker uses an emoji to convey a sentiment or emotion.

5.
Concepts: seek clarification, identify user needs
- Designers seek clarification or ask questions to understand user needs.
- Designers identify or inquire about a user's needs or requirements.

6.
Concepts: respond to feedback, acknowledge feedback
- Designers respond to user feedback or suggestions.
- Designers acknowledge user feedback or suggestions.

7.
Concepts: solicit feedback, request suggestions
- Designers encourage users to provide suggestions, ideas, or feedback.
- Designer asks for suggestions or feedback from the community.

8.
Concepts: engage in feedback loop, iterative development based on user feedback
- Designers collect, consider, and implement user feedback.
- The designer solicits or responds to user feedback, and iterative development is mentioned.

9.
Concepts: share planned updates, sharing update schedules
- Designers share information about planned updates and features.
- A designer or developer shares information about the schedule or timeline of an update.

10.
Concepts: share software updates, announce updates
- Designers share updates about the software.
- Designers announce or share updates about new software versions or releases.

11.
Concepts: announce new features, announce feature updates
- Announcing updates or releases of new versions.
- New features, updates, or bug fixes are announced to the community.

12.
Concepts: communicate progress, providing development updates
- Updates or notifications about the progress of software development, testing, or release.
- Providing updates or information about the development process.

13.
Concepts: discuss future plans, plan for future updates
- Designers discuss and plan future developments.
- Designers discuss or plan for future updates or features.

14.
Concepts: discuss feature development, discuss feature implementation
- Designer discusses the development or planning of a new feature or functionality.
- Designers discuss or debate the implementation of a feature or functionality.
===
Here are the definitions for each code:

---
1.
Concepts: praise software, compliment software
Relationship: The two concepts are synonymous, both expressing positive sentiments towards the software.
Criteria: Users express admiration or appreciation for the software or its features.
Phrase: Express admiration for the software.

2.
Concepts: express gratitude, user interaction and gratitude
Relationship: The two concepts are related, with user interaction being the context in which gratitude is expressed.
Criteria: Users or designers express appreciation or thanks in the context of user interaction.
Phrase: Express gratitude in interaction.

3.
Concepts: gratitude, user appreciation
Relationship: The two concepts are synonymous, both expressing appreciation or thanks.
Criteria: Users express gratitude or appreciation for the software, its features, or the community.
Phrase: Express appreciation.

4.
Concepts: use emojis, use emoji to convey sentiment
Relationship: The two concepts are synonymous, both referring to the use of emojis to convey emotions or tone.
Criteria: Users use emojis to convey emotions or tone in their messages.
Phrase: Convey sentiment with emojis.

5.
Concepts: seek clarification, identify user needs
Relationship: The two concepts are related, with seeking clarification being a means to identify user needs.
Criteria: Designers ask questions to understand user needs or requirements.
Phrase: Seek user needs clarification.

6.
Concepts: respond to feedback, acknowledge feedback
Relationship: The two concepts are related, with responding to feedback implying acknowledgement.
Criteria: Designers respond to user feedback or suggestions.
Phrase: Respond to feedback.

7.
Concepts: solicit feedback, request suggestions
Relationship: The two concepts are synonymous, both referring to designers asking for user input.
Criteria: Designers ask users for suggestions, ideas, or feedback.
Phrase: Solicit user feedback.

8.
Concepts: engage in feedback loop, iterative development based on user feedback
Relationship: The two concepts are related, with engaging in a feedback loop implying iterative development.
Criteria: Designers collect, consider, and implement user feedback in an iterative development process.
Phrase: Engage in feedback loop.

9.
Concepts: share planned updates, sharing update schedules
Relationship: The two concepts are synonymous, both referring to designers sharing information about upcoming updates.
Criteria: Designers share information about planned updates and features.
Phrase: Share update plans.

10.
Concepts: share software updates, announce updates
Relationship: The two concepts are synonymous, both referring to designers sharing information about new software versions.
Criteria: Designers share updates about the software.
Phrase: Share software updates.

11.
Concepts: announce new features, announce feature updates
Relationship: The two concepts are synonymous, both referring to announcing new or updated features.
Criteria: Designers announce updates or releases of new features or updates.
Phrase: Announce new features.

12.
Concepts: communicate progress, providing development updates
Relationship: The two concepts are synonymous, both referring to designers sharing information about development progress.
Criteria: Designers provide updates or notifications about the progress of software development, testing, or release.
Phrase: Communicate development progress.

13.
Concepts: discuss future plans, plan for future updates
Relationship: The two concepts are related, with discussing future plans implying planning for future updates.
Criteria: Designers discuss and plan future developments or updates.
Phrase: Discuss future plans.

14.
Concepts: discuss feature development, discuss feature implementation
Relationship: The two concepts are related, with discussing feature development implying discussing implementation details.
Criteria: Designers discuss the development or planning of a new feature or functionality.
Phrase: Discuss feature development.