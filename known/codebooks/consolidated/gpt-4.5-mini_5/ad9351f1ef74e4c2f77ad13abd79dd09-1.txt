You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: announce software releases, announce product iterations
- Designers announce important updates regarding software releases and components.
- Designers communicate details regarding newer software versions presented to users.

2.
Concepts: provide community updates, provide development updates
- Designers deliver updates regarding software status and community changes.
- Designers update the community on software features and developments.

3.
Concepts: plan future updates, potential update
- Designers outline plans for future software updates considering community feedback.
- Designers mention potential future considerations for software compatibility, indicating ongoing development plans.

4.
Concepts: promise future enhancements, reassure users about enhancements
- Designers promise to implement certain features in upcoming updates.
- Designers provide reassurance about upcoming features and improvements.

5.
Concepts: discuss input methods, discuss usability aspects
- Designers discuss necessary input methods and associated interface elements for the software.
- Designers discuss visual design and usability features related to the software.

6.
Concepts: include users in design, co-design with users
- Designers involve users in the design process through feedback and testing.
- Users are involved in the design process through collaborative interactions with designers.

7.
Concepts: react to user feedback, align with user feedback
- Designers actively respond to and consider user feedback for future updates.
- Designers align future development plans with user feedback, indicating responsiveness to suggestions.

8.
Concepts: convey emotional expression, use non-verbal communication
- Users convey feelings using expressive language or emojis in conversation.
- Users incorporate emojis or other non-verbal communication in their interactions.

9.
Concepts: ask for resources, request software access information
- A user requests information on obtaining software versions or manuals.
- Users seek instructions for software access and downloading specific versions.

10.
Concepts: usage inquiry, request software usage assistance
- Users ask for guidance on utilizing specific versions of the software.
- Users seek help regarding software functionalities and usage instructions.

11.
Concepts: express gratitude for community support
- Community members acknowledge and express gratitude for received support.
- Users thank and show appreciation for support and feedback received.

12.
Concepts: troubleshoot user challenges
- Designers identify user difficulties by gathering feedback on their experiences.
- Designers seek user feedback to improve software functionalities.
===
---
Definitions for each code (12 in total):
1. 
Concepts: announce software releases, announce product iterations
Relationship: Both concepts involve designers informing the community about new updates and iterations of the software. 
Criteria: Designers announce important updates regarding software releases and communicate details regarding newer software versions presented to users.
Phrase: Announce software updates.

2. 
Concepts: provide community updates, provide development updates
Relationship: Both concepts underline the importance of keeping the community informed about both software and community developments.
Criteria: Designers deliver updates regarding software status and update the community on software features and developments.
Phrase: Provide community and development updates.

3. 
Concepts: plan future updates, potential update
Relationship: Both concepts focus on the anticipation of future software improvements based on user feedback.
Criteria: Designers outline plans for future software updates and mention potential future considerations for software compatibility.
Phrase: Plan future software updates.

4. 
Concepts: promise future enhancements, reassure users about enhancements
Relationship: Both concepts involve designers communicating commitments to users about future software features.
Criteria: Designers promise to implement certain features in upcoming updates and provide reassurance about upcoming features and improvements.
Phrase: Promise future enhancements.

5. 
Concepts: discuss input methods, discuss usability aspects
Relationship: Both concepts pertain to the conversation around user interface and how users will interact with the software.
Criteria: Designers discuss necessary input methods and usability features related to the software.
Phrase: Discuss usability and input methods.

6. 
Concepts: include users in design, co-design with users
Relationship: Both concepts emphasize the collaborative aspect of the design process involving user input.
Criteria: Designers involve users in the design process through feedback and collaborative interactions.
Phrase: Include users in the design process.

7. 
Concepts: react to user feedback, align with user feedback
Relationship: Both concepts highlight how designers adjust their plans based on user suggestions.
Criteria: Designers actively respond to user feedback for future updates and align future development plans accordingly.
Phrase: React and align with user feedback.

8. 
Concepts: convey emotional expression, use non-verbal communication
Relationship: Both concepts focus on how users express feelings through language and visuals in community interactions.
Criteria: Users convey feelings using expressive language or emojis and incorporate non-verbal communication in their interactions.
Phrase: Convey emotional expressions.

9. 
Concepts: ask for resources, request software access information
Relationship: Both concepts show users actively seeking information related to software availability.
Criteria: Users request information on obtaining software versions or manuals and seek instructions for software access.
Phrase: Request software access information.

10. 
Concepts: usage inquiry, request software usage assistance
Relationship: Both concepts demonstrate users seeking help with understanding or using the software.
Criteria: Users ask for guidance on utilizing specific software versions and seek help regarding functionalities.
Phrase: Request software usage assistance.

11. 
Concepts: express gratitude for community support
Relationship: Both concepts involve community members acknowledging the assistance they've received.
Criteria: Community members acknowledge and express gratitude for support, and users thank others for feedback received.
Phrase: Express gratitude for support.

12. 
Concepts: troubleshoot user challenges
Relationship: Both concepts focus on designers identifying and addressing the difficulties faced by users.
Criteria: Designers identify user difficulties by gathering feedback and seek user feedback to improve functionalities.
Phrase: Troubleshoot user challenges.
---