You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: offering co-designing, inviting participation
- Designer or moderator invites users to participate in co-designing.
- Designers invite users to participate and contribute to the community.

2.
Concepts: informal interaction, maintain community interaction
- A designer or user engages in informal, casual, or lighthearted conversation, often using emojis or colloquial language.
- A designer initiates or maintains a conversation, often using casual or friendly language.

3.
Concepts: private messaging, request private message
- Designer requests private messaging to discuss an issue or request.
- Requesting private or direct communication outside of the public online community.

4.
Concepts: create feedback loop, integrating user feedback
- Processes involve user feedback solicitation and incorporation into design decisions.
- User feedback is acknowledged and incorporated into the design process.

5.
Concepts: validate user request, align with user feedback
- Designer validates or acknowledges a user's request or suggestion.
- A designer adapts or aligns their response with user feedback, suggestions, or requests.

6.
Concepts: plan for iterative feedback, iterative development based on user feedback, inquiring user input for future iterations
- The designer plans to gather feedback from the community before proceeding with development.
- Designer discusses iterative development based on user feedback.
- Inquiring about user input for future development

7.
Concepts: consulting community, involve community in development
- A designer seeks input or feedback from the community, often asking for opinions or suggestions.
- A designer involves the online community in the development process, seeking input or feedback.

8.
Concepts: accept suggestion, acknowledge need for feature, acknowledgment and implementation
- Designers agree to implement a suggested feature or idea.
- Designer acknowledges the need for a particular feature or update.
- Designers acknowledging user feedback and discussing plans to implement suggested features.

9.
Concepts: confirm collaboration, acknowledge understanding, concurring on design ideas
- Designers confirm or agree to collaborate with users or experts.
- Designers acknowledge understanding or agreement.
- Agreement or concurrence on design ideas

10.
Concepts: reassure users, address user concerns
- Designers reassure users about the implementation of features or functionality.
- Designers address or resolve user concerns or usability issues.

11.
Concepts: designer engagement, discussion of further interests
- Engaging in conversation or showing interest in a topic beyond the immediate discussion.
- Designer discusses or explores further interests or possibilities.

12.
Concepts: show interest, show interest in technical details
- User shows interest in the software or its features.
- A user shows interest in technical details or asks about specific technical aspects of the software.

13.
Concepts: inviting more questions, encourage future discussion or questions
- The designer invites users to ask questions or provide feedback.
- Encouraging users to ask questions, provide feedback, or engage in discussion

14.
Concepts: encouraging discussion, encourage in-group discussion
- Designer encourages users to discuss or share their thoughts freely.
- Encouraging users to participate in discussions or share their thoughts within a group.

15.
Concepts: feedback solicitation, provide specific feedback
- A request for feedback, suggestions, or input from others.
- Providing specific and detailed feedback or suggestions

16.
Concepts: propose improvements, suggest educational enhancements
- Users propose ideas for improvement, suggesting new features or changes to the Physics Lab online community.
- User suggests or proposes educational enhancements or additions to the online community.

17.
Concepts: requesting features, feature request responses
- Users suggest new features or functionalities.
- Responding to user requests or feature suggestions

18.
Concepts: resource access, provide download information
- Providing access to resources or information (e.g., download address, group announcement).
- Sharing information about where to download or access resources.

19.
Concepts: image management, avatar customization
- Designer or user discusses or manages images or avatars.
- Discussion about customizing or uploading avatars.

20.
Concepts: attached image, using images to help demonstration
- Sharing an image or visual aid to illustrate a point.
- Using images or visual aids to assist in explanations or demonstrations.

21.
Concepts: image sharing, share visual update
- A user or designer shares an image.
- A user shares visual updates, screenshots, or images.

22.
Concepts: share past incidents, sharing user experiences
- Users share past experiences or incidents related to the software or community.
- Users share their experiences and the impact of the software.

23.
Concepts: group sharing, suggesting group sharing
- Discussion about sharing resources or files within a group.
- Designer or moderator suggests sharing resources within the group.

24.
Concepts: share knowledge, collaborative learning
- A designer shares their knowledge or expertise about a particular topic or feature of the software.
- A designer promotes or discusses collaborative learning or sharing features within the software.

25.
Concepts: share visual reference, sharing information for design
- Designer shares a visual reference or example to aid understanding.
- Sharing information or experiences relevant to design

26.
Concepts: discussing usability, designing the user interface, interact with users
- Designer or moderator discusses usability or user experience.
- A designer discusses or designs the user interface.
- Designers engage in conversation with users, exploring specific topics.

27.
Concepts: design discussion, discuss input methods
- Designer discusses or explores design ideas or possibilities for the online community.
- User or designer discusses or suggests input methods for the online community.

28.
Concepts: instructional design, visual and functional design
- Discussing the instructional design or user experience of the software
- Discussions about the visual and functional aspects of the software.

29.
Concepts: feature discussion, discussing feature flexibility
- Designer discusses or debates the implementation of a feature.
- Designer or moderator discusses the flexibility of a feature or functionality.

30.
Concepts: maintain transparency, provide development transparency
- The designer provides transparency into the development process, such as what they are currently working on.
- Designers provide detailed information about the development process, challenges, and progress to the community.

31.
Concepts: explaining design goals, expressing design thoughts, explain design decisions
- A designer explains the design goals or philosophy behind a feature.
- A designer expresses a design philosophy or principle.
- Designers explain the reasoning behind design decisions or choices.

32.
Concepts: explain features, explain feature complexity
- Designers explain or clarify features, their functionality, or provide examples.
- A designer explains the complexity of a feature or task.
===
Here are the definitions for each code:

---
1.
Concepts: offering co-designing, inviting participation
Relationship: Co-designing and participation are closely related as one involves the other.
Criteria: Designers invite users to participate in co-designing.
Phrase: Inviting users to co-design.

2.
Concepts: informal interaction, maintain community interaction
Relationship: Informal interactions help maintain community interaction.
Criteria: Designers engage in informal conversations to maintain community interaction.
Phrase: Engaging in informal conversations.

3.
Concepts: private messaging, request private message
Relationship: Private messaging is a way to request private conversation.
Criteria: Designers request private messaging to discuss issues or requests.
Phrase: Requesting private messaging.

4.
Concepts: create feedback loop, integrating user feedback
Relationship: Feedback loops involve integrating user feedback.
Criteria: Processes involve user feedback solicitation and incorporation into design decisions.
Phrase: Creating a feedback loop.

5.
Concepts: validate user request, align with user feedback
Relationship: Validating user requests involves aligning with user feedback.
Criteria: Designers validate or acknowledge user requests or suggestions.
Phrase: Validating user requests.

6.
Concepts: plan for iterative feedback, iterative development based on user feedback, inquiring user input for future iterations
Relationship: Iterative feedback involves incorporating user feedback into development.
Criteria: Designers plan to gather feedback from the community before proceeding with development.
Phrase: Planning for iterative feedback.

7.
Concepts: consulting community, involve community in development
Relationship: Consulting the community involves involving them in development.
Criteria: Designers seek input or feedback from the community.
Phrase: Consulting the community.

8.
Concepts: accept suggestion, acknowledge need for feature, acknowledgment and implementation
Relationship: Accepting suggestions involves acknowledging the need for features and implementing them.
Criteria: Designers agree to implement suggested features or ideas.
Phrase: Accepting user suggestions.

9.
Concepts: confirm collaboration, acknowledge understanding, concurring on design ideas
Relationship: Confirming collaboration involves acknowledging understanding and concurring on design ideas.
Criteria: Designers confirm or agree to collaborate with users or experts.
Phrase: Confirming collaboration.

10.
Concepts: reassure users, address user concerns
Relationship: Reassuring users involves addressing their concerns.
Criteria: Designers reassure users about the implementation of features or functionality.
Phrase: Reassuring users.

11.
Concepts: designer engagement, discussion of further interests
Relationship: Designer engagement involves discussing further interests.
Criteria: Designers engage in conversation or show interest in a topic beyond the immediate discussion.
Phrase: Engaging in discussion.

12.
Concepts: show interest, show interest in technical details
Relationship: Showing interest involves showing interest in technical details.
Criteria: Users show interest in the software or its features.
Phrase: Showing interest.

13.
Concepts: inviting more questions, encourage future discussion or questions
Relationship: Inviting questions involves encouraging future discussion or questions.
Criteria: Designers invite users to ask questions or provide feedback.
Phrase: Inviting further questions.

14.
Concepts: encouraging discussion, encourage in-group discussion
Relationship: Encouraging discussion involves encouraging in-group discussion.
Criteria: Designers encourage users to discuss or share their thoughts freely.
Phrase: Encouraging discussion.

15.
Concepts: feedback solicitation, provide specific feedback
Relationship: Feedback solicitation involves providing specific feedback.
Criteria: A request for feedback, suggestions, or input from others.
Phrase: Soliciting feedback.

16.
Concepts: propose improvements, suggest educational enhancements
Relationship: Proposing improvements involves suggesting educational enhancements.
Criteria: Users propose ideas for improvement, suggesting new features or changes.
Phrase: Proposing improvements.

17.
Concepts: requesting features, feature request responses
Relationship: Requesting features involves responding to feature requests.
Criteria: Users suggest new features or functionalities.
Phrase: Requesting features.

18.
Concepts: resource access, provide download information
Relationship: Resource access involves providing download information.
Criteria: Providing access to resources or information.
Phrase: Providing resource access.

19.
Concepts: image management, avatar customization
Relationship: Image management involves avatar customization.
Criteria: Designer or user discusses or manages images or avatars.
Phrase: Managing images.

20.
Concepts: attached image, using images to help demonstration
Relationship: Attached images help with demonstrations.
Criteria: Sharing an image or visual aid to illustrate a point.
Phrase: Sharing images.

21.
Concepts: image sharing, share visual update
Relationship: Image sharing involves sharing visual updates.
Criteria: A user or designer shares an image.
Phrase: Sharing images.

22.
Concepts: share past incidents, sharing user experiences
Relationship: Sharing past incidents involves sharing user experiences.
Criteria: Users share past experiences or incidents related to the software or community.
Phrase: Sharing experiences.

23.
Concepts: group sharing, suggesting group sharing
Relationship: Group sharing involves suggesting group sharing.
Criteria: Discussion about sharing resources or files within a group.
Phrase: Suggesting group sharing.

24.
Concepts: share knowledge, collaborative learning
Relationship: Sharing knowledge involves collaborative learning.
Criteria: A designer shares their knowledge or expertise about a particular topic or feature.
Phrase: Sharing knowledge.

25.
Concepts: share visual reference, sharing information for design
Relationship: Sharing visual references involves sharing information for design.
Criteria: Designer shares a visual reference or example to aid understanding.
Phrase: Sharing visual references.

26.
Concepts: discussing usability, designing the user interface, interact with users
Relationship: Discussing usability involves designing the user interface and interacting with users.
Criteria: Designer or moderator discusses usability or user experience.
Phrase: Discussing usability.

27.
Concepts: design discussion, discuss input methods
Relationship: Design discussion involves discussing input methods.
Criteria: Designer discusses or explores design ideas or possibilities for the online community.
Phrase: Discussing design.

28.
Concepts: instructional design, visual and functional design
Relationship: Instructional design involves visual and functional design.
Criteria: Discussing the instructional design or user experience of the software.
Phrase: Discussing instructional design.

29.
Concepts: feature discussion, discussing feature flexibility
Relationship: Feature discussion involves discussing feature flexibility.
Criteria: Designer discusses or debates the implementation of a feature.
Phrase: Discussing features.

30.
Concepts: maintain transparency, provide development transparency
Relationship: Maintaining transparency involves providing development transparency.
Criteria: The designer provides transparency into the development process.
Phrase: Maintaining transparency.

31.
Concepts: explaining design goals, expressing design thoughts, explain design decisions
Relationship: Explaining design goals involves expressing design thoughts and explaining design decisions.
Criteria: A designer explains the design goals or philosophy behind a feature.
Phrase: Explaining design goals.

32.
Concepts: explain features, explain feature complexity
Relationship: Explaining features involves explaining feature complexity.
Criteria: Designers explain or clarify features, their functionality, or provide examples.
Phrase: Explaining features.