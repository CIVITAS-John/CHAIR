You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between sub-codes. If a sub-code includes another, use the broader one. If sub-codes are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (18 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {A sentence of consolidated criteria 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
18.
Relationship: {The logical relationship between sub-codes in code 18}
Criteria: {A sentence of consolidated criteria 18}
Label: {A consolidated label of code 18}
Category: {2-4 words for code 18}
---
~~~
1. network restrictions, network policies and restrictions.
- Restrictions or limitations imposed by networks or institutions on online activities.
- Policies or restrictions governing network access or usage.

2. platform functionality, platform usage and features.
- Descriptions of functionalities specific to a platform.
- Statements inquiring about using the platform and describing its features or functionalities.

3. input methods, input modalities.
- Discussing methods for inputting data, such as using a soft keyboard.
- Methods or modalities for users to input data or interact with the software.

4. cross platform support, cross platform development.
- Support for multiple platforms or operating systems.
- Developing or supporting multiple platforms or operating systems.

5. simulation accuracy, simulation fidelity.
- Ensuring accuracy in simulations and calculations.
- Refers to the realism, accuracy or fidelity of simulations, models or visual representations within the software.

6. assessment simulation, simulated experiment assessment.
- Simulating assessment scenarios within the software.
- Describing plans for incorporating simulated experiment assessment within the software.
- Mention of simulated experiment assessment as a software feature.

7. power supply, power supply components.
- Power supply or electrical components
- Statements describing the features or capabilities of the platform's power supply.
- References to DC and AC in power supply components.

8. physics education, physics education focus.
- Education or learning related to physics
- Discussions or plans related to the educational focus of physics within the software.

9. technical advice, technical guidance.
- Provision of technical advice or guidance on system requirements and usage.
- Providing technical guidance or instructions for using the software.

10. user guidance, user instructions.
- Providing guidance to users on software usage and interface design.
- Guidance provided to users on how to effectively use the platform.
- Instructions and guidelines provided to users for using the application.

11. memory aid, memory aid techniques.
- Strategies or tools mentioned to help remember or manage information.
- Techniques used for aiding memory in gathering feedback from users.

12. workaround, workaround sharing.
- Temporary or alternative solutions to address limitations or issues.
- Discussions about potential or actual workarounds to overcome software limitations.

13. manual editing, manual editing support.
- Information about manual editing capabilities.
- Discussions or descriptions of manual editing features or tools, including adjustments.
- Supporting manual editing capabilities in addition to automation.

14. user suggestion, user input and suggestions.
- Suggestions made by users for software improvements.
- User suggestions and inputs for software improvement and development.

15. self resolution, self-help and resolution.
- Users resolving issues on their own.
- Suggests that the user has resolved their own query or accessed necessary information independently.

16. accessibility, accessibility concerns.
- Ensuring accessibility or usability for users with different needs or device configurations.
- Discussion about accessibility features or issues.
- Accessibility or usability of the platform
- Concerns related to the accessibility features of the software, especially for users with specific hardware configurations.

17. craftsmanship, appreciating craftsmanship.
- Emphasizing a dedication to high-quality work and perfection.
- A mindset or attitude that values quality, precision, and attention to detail.
- Appreciating or valuing attention to detail and craftsmanship.
- Appreciation expressed for meticulous work or attention to detail.

18. perfectionism, pursuit of perfection.
- Striving for flawlessness or perfection in a process or outcome.
- Striving for excellence and perfection in software development.
===
Here is the output in the required format:

---
Categories: 
* Online Community Development
* Platform Design and Functionality
* Learning and Education
* User Experience and Support
* Software Development and Quality

Definitions for each code:

1.
Relationship: Parallel sub-codes describing restrictions and policies
Criteria: Restrictions or limitations imposed by networks or institutions on online activities
Label: Network Restrictions
Category: Online Community Development

2.
Relationship: Parallel sub-codes describing platform features and usage
Criteria: Descriptions of functionalities specific to a platform
Label: Platform Functionality
Category: Platform Design and Functionality

3.
Relationship: Parallel sub-codes describing input methods
Criteria: Discussing methods for inputting data, such as using a soft keyboard
Label: Input Modalities
Category: Platform Design and Functionality

4.
Relationship: Parallel sub-codes describing cross-platform support
Criteria: Support for multiple platforms or operating systems
Label: Cross-Platform Support
Category: Platform Design and Functionality

5.
Relationship: Parallel sub-codes describing simulation accuracy
Criteria: Ensuring accuracy in simulations and calculations
Label: Simulation Fidelity
Category: Learning and Education

6.
Relationship: Parallel sub-codes describing simulated experiment assessment
Criteria: Simulating assessment scenarios within the software
Label: Simulated Experiment Assessment
Category: Learning and Education

7.
Relationship: Parallel sub-codes describing power supply components
Criteria: Power supply or electrical components
Label: Power Supply Components
Category: Platform Design and Functionality

8.
Relationship: Parallel sub-codes describing physics education focus
Criteria: Education or learning related to physics
Label: Physics Education
Category: Learning and Education

9.
Relationship: Parallel sub-codes describing technical advice
Criteria: Provision of technical advice or guidance on system requirements and usage
Label: Technical Guidance
Category: User Experience and Support

10.
Relationship: Parallel sub-codes describing user guidance
Criteria: Providing guidance to users on software usage and interface design
Label: User Guidance
Category: User Experience and Support

11.
Relationship: Parallel sub-codes describing memory aid techniques
Criteria: Strategies or tools mentioned to help remember or manage information
Label: Memory Aids
Category: User Experience and Support

12.
Relationship: Parallel sub-codes describing workarounds
Criteria: Temporary or alternative solutions to address limitations or issues
Label: Workarounds
Category: User Experience and Support

13.
Relationship: Parallel sub-codes describing manual editing support
Criteria: Information about manual editing capabilities
Label: Manual Editing Support
Category: Platform Design and Functionality

14.
Relationship: Parallel sub-codes describing user suggestions
Criteria: Suggestions made by users for software improvements
Label: User Suggestions
Category: User Experience and Support

15.
Relationship: Parallel sub-codes describing self-resolution
Criteria: Users resolving issues on their own
Label: Self-Resolution
Category: User Experience and Support

16.
Relationship: Parallel sub-codes describing accessibility concerns
Criteria: Ensuring accessibility or usability for users with different needs or device configurations
Label: Accessibility Concerns
Category: User Experience and Support

17.
Relationship: Parallel sub-codes describing craftsmanship
Criteria: Emphasizing a dedication to high-quality work and perfection
Label: Craftsmanship
Category: Software Development and Quality

18.
Relationship: Parallel sub-codes describing perfectionism
Criteria: Striving for flawlessness or perfection in a process or outcome
Label: Perfectionism
Category: Software Development and Quality