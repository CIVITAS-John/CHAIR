You are an expert in thematic analysis clarifying the criteria of qualitative codes. Do not attempt to merge codes now.
Consider provided quotes, and note that each quote is independent of others.
Write clear and generalizable criteria for each code and do not introduce unnecessary details.
If necessary, refine labels to be more accurate, but do not repeat yourself.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1. 
Criteria: {Who did what, and how for code 1}
Label: {A descriptive label of code 1}
...
32.
Criteria: {Who did what, and how for code 32}
Label: {A descriptive label of code 32}
---
~~~
1.
Label: this software is great! it's quite practical
Quotes:
- User: This software is great! It's quite practical, unlike some software that tries to be comprehensive but ends up being inconvenient to use.

2.
Label: unlike some software that tries to be comprehensive but ends up being inconvenient to use
Quotes:
- User: This software is great! It's quite practical, unlike some software that tries to be comprehensive but ends up being inconvenient to use.

3.
Label: evaluating software usability
Quotes:
- User: This software is great! It's quite practical, unlike some software that tries to be comprehensive but ends up being inconvenient to use.

4.
Label: xp compatibility might need to be looked into later... probably need to install a virtual machine
Quotes:
- Designer: XP compatibility might need to be looked into later... probably need to install a virtual machine.

5.
Label: identifying potential technical issues
Quotes:
- Designer: XP compatibility might need to be looked into later... probably need to install a virtual machine.

6.
Label: theoretically
Quotes:
- Designer: Theoretically, it should be compatible (but the machine itself shouldn't be too old, probably from 2008 onwards).

7.
Label: it should be compatible
Quotes:
- Designer: Theoretically, it should be compatible (but the machine itself shouldn't be too old, probably from 2008 onwards).

8.
Label: setting boundaries
Quotes:
- Designer: Physics mainly focuses on electricity and mechanics; other directions don't have much room for free experiments before high school. In the future, we might do some demonstration experiments based on everyone's needs, but it won't be as open as electricity
- Designer: Theoretically, it should be compatible (but the machine itself shouldn't be too old, probably from 2008 onwards).

9.
Label: hello everyone~ version 1.01 has been released in the group files
Quotes:
- Designer: Hello everyone~ Version 1.01 has been released in the group files, the updates are as follows:

10.
Label: the updates are as follows:
Quotes:
- Designer: Hello everyone~ Version 1.01 has been released in the group files, the updates are as follows:

11.
Label: expressing satisfaction
Quotes:
- User: This software is great! It's quite practical, unlike some software that tries to be comprehensive but ends up being inconvenient to use.
- User: Oh, this is nice

12.
Label: clarifying expectations
Quotes:
- Designer: Theoretically, it should be compatible (but the machine itself shouldn't be too old, probably from 2008 onwards).

13.
Label: highlighting improvements
Quotes:
- Designer: New Features
Electronic components will be damaged after a short process, rather than immediately.
Clearing the desktop will now display a confirmation interface.
Supports undoing the creation and deletion of wires and components.
Appliances now display the effective value of alternating current.
(PC) You can now exit the application using the Esc key.

New Components
Added a sensitive ammeter.
Added a student power supply (ideal AC/DC power supply).

Adjustments to Component Properties
Batteries now have adjustable internal resistance and are no longer ideal power sources.
Incandescent bulbs now have volt-ampere characteristic parameters and are no longer ideal resistors.
The resistance law experimenter now uses real formulas for calculations, with adjustable parameters.
Hidden terminal blocks 3 and 4.

Bug Fixes
Fixed an issue with unit conversion in Editor properties.
Terminal arrows no longer show jumping animations.
There may have been calculation errors with certain circuit connections.

14.
Label: showcasing development progress
Quotes:
- Designer: New Features
Electronic components will be damaged after a short process, rather than immediately.
Clearing the desktop will now display a confirmation interface.
Supports undoing the creation and deletion of wires and components.
Appliances now display the effective value of alternating current.
(PC) You can now exit the application using the Esc key.

New Components
Added a sensitive ammeter.
Added a student power supply (ideal AC/DC power supply).

Adjustments to Component Properties
Batteries now have adjustable internal resistance and are no longer ideal power sources.
Incandescent bulbs now have volt-ampere characteristic parameters and are no longer ideal resistors.
The resistance law experimenter now uses real formulas for calculations, with adjustable parameters.
Hidden terminal blocks 3 and 4.

Bug Fixes
Fixed an issue with unit conversion in Editor properties.
Terminal arrows no longer show jumping animations.
There may have been calculation errors with certain circuit connections.

15.
Label: highlighting regional differences
Quotes:
- User: It is recommended to add an exit button function to the PC version. Many regions now use all-in-one touch screen machines without physical keyboards.

16.
Label: promising future updates
Quotes:
- Designer: Hmm... I'll add it in the next update. PC updates are usually the fastest, so there will probably be another round this weekend.

17.
Label: committing to iterative development
Quotes:
- Designer: Hmm... I'll add it in the next update. PC updates are usually the fastest, so there will probably be another round this weekend.

18.
Label: considering user interface design
Quotes:
- Designer: Speaking of which, doesn't that mean every place where numbers are input should have a soft keyboard?

19.
Label: thinking aloud
Quotes:
- Designer: Speaking of which, doesn't that mean every place where numbers are input should have a soft keyboard?

20.
Label: clarifying design decisions
Quotes:
- Designer: Touch screens have their own on-screen keyboards.

21.
Label: educating users
Quotes:
- Designer: The student power supply supports both DC and AC and is an ideal component.
- Designer: Touch screens have their own on-screen keyboards.

22.
Label: recognizing user needs
Quotes:
- Designer: But you can't bring it up without touching the input, that's probably the case.

23.
Label: illustrating technical workarounds
Quotes:
- Designer: Last time I tried it in middle school, there's a trick where you click the link button in the top right, and when the browser pops up, it's no longer full screen... = =

24.
Label: showing humility
Quotes:
- Designer: Last time I tried it in middle school, there's a trick where you click the link button in the top right, and when the browser pops up, it's no longer full screen... = =

25.
Label: building rapport
Quotes:
- Designer: Haha. Are you a middle school or high school teacher?
- User: @John Chen (3) Yes, yes.
- Designer: Hello :)

26.
Label: highlighting teacher needs
Quotes:
- User: If there could be an export function, or the ability to save or import experiments, it would be convenient. We could set up the parameters in the office and directly import them in class.

27.
Label: promising future development
Quotes:
- Designer: Of course, manual editing will also be allowed, but it might be a bit later
- Designer: We'll see if there's a suitable opportunity to do one later
- Designer: There will be.

28.
Label: building trust
Quotes:
- Designer: There will be.

29.
Label: inquiring about technical infrastructure
Quotes:
- Designer: Does the class have internet?

30.
Label: understanding user context
Quotes:
- Designer: Does the class have internet?

31.
Label: sharing institutional constraints
Quotes:
- User: Generally not. Ever since an adult image popped up during a major city-level open class, the school has disabled the network on classroom computers [Emoji].

32.
Label: highlighting challenges in educational settings
Quotes:
- User: Generally not. Ever since an adult image popped up during a major city-level open class, the school has disabled the network on classroom computers [Emoji].
===
Here are the definitions for each code with clear and generalizable criteria:

---
Definitions for each code:

1.
Criteria: Expressing positive sentiment about software usability.
Label: Praising software usability.

2.
Criteria: Comparing software usability to other software.
Label: Comparing software usability.

3.
Criteria: Assessing software usability features.
Label: Evaluating software usability.

4.
Criteria: Identifying potential technical issues with software compatibility.
Label: Identifying technical issues.

5.
Criteria: Recognizing potential technical problems that need to be addressed.
Label: Identifying potential technical issues.

6.
Criteria: Hypothetically considering software compatibility.
Label: Theoretical consideration.

7.
Criteria: Expressing confidence in software compatibility.
Label: Confident in compatibility.

8.
Criteria: Establishing boundaries or limitations for software development.
Label: Setting boundaries.

9.
Criteria: Announcing software updates or releases.
Label: Announcing updates.

10.
Criteria: Outlining changes or updates made to software.
Label: Outlining updates.

11.
Criteria: Expressing satisfaction or pleasure with software.
Label: Expressing satisfaction.

12.
Criteria: Clarifying expectations or assumptions about software functionality.
Label: Clarifying expectations.

13.
Criteria: Highlighting improvements or new features in software.
Label: Highlighting improvements.

14.
Criteria: Showcasing progress or development of software features.
Label: Showcasing development progress.

15.
Criteria: Recognizing regional or cultural differences in software use.
Label: Recognizing regional differences.

16.
Criteria: Committing to future updates or development of software.
Label: Promising future updates.

17.
Criteria: Expressing commitment to iterative development or improvement.
Label: Committing to iterative development.

18.
Criteria: Considering user interface design or user experience.
Label: Considering user interface design.

19.
Criteria: Thinking aloud or exploring ideas about software development.
Label: Thinking aloud.

20.
Criteria: Explaining or justifying design decisions or choices.
Label: Clarifying design decisions.

21.
Criteria: Educating or informing users about software features or functionality.
Label: Educating users.

22.
Criteria: Recognizing or acknowledging user needs or requirements.
Label: Recognizing user needs.

23.
Criteria: Describing technical workarounds or solutions to problems.
Label: Illustrating technical workarounds.

24.
Criteria: Expressing humility or modesty about one's abilities or knowledge.
Label: Showing humility.

25.
Criteria: Building rapport or establishing a connection with users.
Label: Building rapport.

26.
Criteria: Highlighting or recognizing the needs of teachers or educators.
Label: Highlighting teacher needs.

27.
Criteria: Expressing a desire or intention to develop or implement new features.
Label: Promising future development.

28.
Criteria: Establishing trust or credibility with users.
Label: Building trust.

29.
Criteria: Inquiring about technical infrastructure or resources.
Label: Inquiring about technical infrastructure.

30.
Criteria: Understanding or acknowledging the context or environment of users.
Label: Understanding user context.

31.
Criteria: Sharing constraints or limitations imposed by institutions or organizations.
Label: Sharing institutional constraints.

32.
Criteria: Highlighting challenges or difficulties faced in educational settings.
Label: Highlighting challenges in educational settings.