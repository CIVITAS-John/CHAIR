You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (6 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
6. 
Concepts: {Repeat the input 6}
Relationship: {What is logical relationship between concepts in code 6, or N/A if not applicable}
Criteria: {Who did what, and how for code 6}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: outline software updates, clarify update explanations
- Designers outline new features and bug fixes included in software updates.
- Designers explain the reasons for update delays and elaborate on the software update process.

2.
Concepts: educational tools, suggest educational enhancements
- User suggests specific educational tools and functionalities that would enhance teaching practices.
- A user suggested enhancements to educational features for demonstrating physical science concepts.

3.
Concepts: make software inquiries, encourage further questions
- Designers and users pose inquiries to clarify specific functionalities and seek technical assistance.
- Designers invite users to ask further questions or voice concerns about the software.

4.
Concepts: consider future compatibility, confirm system compatibility
- Designers consider and recommend checking system compatibility for future updates.
- Designers confirm theoretical compatibility and specify system requirements necessary for proper software operation.

5.
Concepts: sharing workarounds, collaborating to solve problems
- Designers share workarounds to help users navigate software problems.
- Designers encourage users to share problems and collaborate to address issues together.

6.
Concepts: validate user input, encouraging elaboration of user input
- Designers seek clarification on user input preferences and ask detailed questions to validate needs accurately.
- Designers encourage users to elaborate on their needs and provide detailed responses to suggestions.
===
---
Definitions for each code (6 in total):
1.
Concepts: outline software updates, clarify update explanations  
Relationship: Designers provide detailed information about software changes and address user concerns regarding those changes.  
Criteria: Designers outline new features and bug fixes in updates while explaining delays and the update process.  
Phrase: Clarify software updates.

2.
Concepts: educational tools, suggest educational enhancements  
Relationship: Users identify and propose specific tools and enhancements aimed at improving educational experiences.  
Criteria: Users suggest tools and enhancements to better facilitate the teaching of physical science concepts.  
Phrase: Propose educational enhancements.

3.
Concepts: make software inquiries, encourage further questions  
Relationship: Designers and users engage in a dialogue to clarify functionalities and foster ongoing communication.  
Criteria: Designers and users ask inquiries and encourage further questions to address software functionalities.  
Phrase: Foster software inquiries.

4.
Concepts: consider future compatibility, confirm system compatibility  
Relationship: Designers evaluate system requirements and compatibility to ensure future updates can be effectively integrated.  
Criteria: Designers consider and confirm system compatibility for future software updates.  
Phrase: Assess system compatibility.

5.
Concepts: sharing workarounds, collaborating to solve problems  
Relationship: Designers and users work together to identify solutions to software issues and share effective strategies.  
Criteria: Designers share workarounds and encourage users to collaborate on problem-solving.  
Phrase: Collaborate on problem-solving.

6.
Concepts: validate user input, encouraging elaboration of user input  
Relationship: Designers actively seek to understand user needs more deeply by validating and encouraging detailed feedback.  
Criteria: Designers validate and encourage users to elaborate on their input and needs.  
Phrase: Encourage user elaboration.
---