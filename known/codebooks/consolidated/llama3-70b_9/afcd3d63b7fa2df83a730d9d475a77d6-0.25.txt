You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (16 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
16. 
Concepts: {Repeat the input 16}
Relationship: {What is logical relationship between concepts in code 16, or N/A if not applicable}
Criteria: {Who did what, and how for code 16}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: critiques improper help requests, discussing proper help-seeking practices
- The participant critiques improper help requests, emphasizing the need for users to do their own work and clearly describe their needs.
- Participants reflect on the importance of proper practices when seeking online help, including doing one's own work and clearly describing what they need.

2.
Concepts: community support, values community support
- The participant values community support and online resources for seeking help.
- The expert values community support and online resources for learning and troubleshooting.

3.
Concepts: code posting, describes unstructured code posts
- The participant shares their experience with posting code online or seeking help from online communities.
- The expert describes the challenges of seeking help, such as unstructured code posts.

4.
Concepts: system support, suggests system support
- Describes the need for system support in learning and professional development.
- Suggesting the need for system support to facilitate learning and remembering.

5.
Concepts: fragmented learning, fragmented learning sessions
- Reflects on the fragmented nature of learning and the need for system support.
- Describes fragmented learning sessions and the need for system support to remind learners where they were.

6.
Concepts: suggests cultural shift, collaborative learning culture
- Suggests that a cultural shift is needed to encourage collaboration and seeking help.
- The need for a culture that encourages seeking help and collaboration.

7.
Concepts: cultural critique, critiques obsession with solo work
- Critiques the cultural emphasis on individualism and the need for help-seeking.
- Critiques the cultural obsession with solo work and individualism.

8.
Concepts: prioritizes fixing, prefers immediate fixes
- Prioritizes fixing errors over explaining them.
- Prefers immediate fixes to errors rather than explanations.

9.
Concepts: limited time for each language, acknowledges limited time
- The expert mentions limited time for each language.
- The expert acknowledges limited time for learning new extensions or concepts.

10.
Concepts: error management, suggests one error at a time
- The participant suggests improvements to error management, such as showing one error at a time.
- The participant suggests or requests a specific feature or functionality from the AI system.

11.
Concepts: model creation, appreciation for thoughtful model creation
- Engages in model creation, following best practices and considering simplicity.
- Appreciates thoughtful model creation that follows best practices.

12.
Concepts: readability, values clarity in coding
- Values code readability and simplicity.
- The expert values clarity and simplicity in coding, prioritizing maintainability.

13.
Concepts: maintenance, discusses code complexity and quality
- The participant discusses the importance of code maintenance and writing code in a standard, accessible way.
- Participants discuss code complexity and quality, emphasizing the importance of plain code.

14.
Concepts: historical context, shares programming experience
- The participant shares their historical context or prior experiences with computer programming or related fields.
- Participants share their prior experiences and expertise in computer programming.

15.
Concepts: highlights need for foundational learning, emphasizes prerequisite knowledge and expertise, addresses novice challenges through debugging skills
- Participants suggest the need for foundational learning and debugging skills for users.
- Participants emphasize the need for prerequisite knowledge and expertise to understand errors and debug them.
- Participants reflect on the importance of debugging skills, which are often lacking in novices.

16.
Concepts: beginner practices, suggests incremental coding
- The participant reflects on common practices or mistakes made by beginners, such as writing large chunks of code before testing.
- The participant suggests that beginners should write code incrementally, checking for errors at each step, rather than writing a large block of code at once.
===
Here are the definitions for each code:

---
1.
Concepts: critiques improper help requests, discussing proper help-seeking practices
Relationship: The concepts are related in that they both address the importance of proper help-seeking practices, with the critique of improper requests serving as a contrast to highlight the value of proper practices.
Criteria: Participants discuss and critique improper help requests, emphasizing the need for users to do their own work and clearly describe their needs.
Phrase: Critiques improper help requests.

2.
Concepts: community support, values community support
Relationship: The concepts are related in that they both emphasize the importance of community support for learning and troubleshooting.
Criteria: Participants value community support and online resources for seeking help and learning.
Phrase: Values community support.

3.
Concepts: code posting, describes unstructured code posts
Relationship: The concepts are related in that they both address the challenges of seeking help online, with code posting being a specific example of unstructured help requests.
Criteria: Participants describe their experiences with posting code online or seeking help from online communities, highlighting the challenges of unstructured code posts.
Phrase: Describes unstructured code posts.

4.
Concepts: system support, suggests system support
Relationship: The concepts are related in that they both emphasize the need for system support to facilitate learning and remembering.
Criteria: Participants suggest the need for system support to facilitate learning and remembering.
Phrase: Suggests system support.

5.
Concepts: fragmented learning, fragmented learning sessions
Relationship: The concepts are related in that they both address the challenges of learning in fragmented sessions, with system support being a potential solution.
Criteria: Participants reflect on the fragmented nature of learning and the need for system support to remind learners where they were.
Phrase: Describes fragmented learning sessions.

6.
Concepts: suggests cultural shift, collaborative learning culture
Relationship: The concepts are related in that they both emphasize the need for a cultural shift towards collaboration and seeking help.
Criteria: Participants suggest the need for a cultural shift to encourage collaboration and seeking help.
Phrase: Suggests cultural shift.

7.
Concepts: cultural critique, critiques obsession with solo work
Relationship: The concepts are related in that they both critique the cultural emphasis on individualism and the need for help-seeking.
Criteria: Participants critique the cultural obsession with solo work and individualism.
Phrase: Critiques cultural obsession.

8.
Concepts: prioritizes fixing, prefers immediate fixes
Relationship: The concepts are related in that they both prioritize fixing errors over explaining them.
Criteria: Participants prioritize fixing errors over explaining them, preferring immediate fixes.
Phrase: Prioritizes fixing.

9.
Concepts: limited time for each language, acknowledges limited time
Relationship: The concepts are related in that they both acknowledge the limited time available for learning new languages or concepts.
Criteria: Participants acknowledge limited time for learning new extensions or concepts.
Phrase: Acknowledges limited time.

10.
Concepts: error management, suggests one error at a time
Relationship: The concepts are related in that they both address the need for improved error management, with one error at a time being a specific suggestion.
Criteria: Participants suggest improvements to error management, such as showing one error at a time.
Phrase: Suggests one error at a time.

11.
Concepts: model creation, appreciation for thoughtful model creation
Relationship: The concepts are related in that they both value thoughtful model creation that follows best practices.
Criteria: Participants engage in model creation, following best practices and considering simplicity, and appreciate thoughtful model creation.
Phrase: Appreciates thoughtful model creation.

12.
Concepts: readability, values clarity in coding
Relationship: The concepts are related in that they both value code readability and simplicity.
Criteria: Participants value code readability and simplicity, prioritizing maintainability.
Phrase: Values clarity in coding.

13.
Concepts: maintenance, discusses code complexity and quality
Relationship: The concepts are related in that they both address the importance of code maintenance and writing code in a standard, accessible way.
Criteria: Participants discuss code complexity and quality, emphasizing the importance of plain code.
Phrase: Discusses code complexity.

14.
Concepts: historical context, shares programming experience
Relationship: The concepts are related in that they both provide context for the participant's experiences and expertise.
Criteria: Participants share their historical context or prior experiences with computer programming or related fields.
Phrase: Shares programming experience.

15.
Concepts: highlights need for foundational learning, emphasizes prerequisite knowledge and expertise, addresses novice challenges through debugging skills
Relationship: The concepts are related in that they all address the need for foundational learning and debugging skills for users.
Criteria: Participants suggest the need for foundational learning and debugging skills for users, emphasizing the importance of prerequisite knowledge and expertise.
Phrase: Highlights need for foundational learning.

16.
Concepts: beginner practices, suggests incremental coding
Relationship: The concepts are related in that they both address common practices or mistakes made by beginners, with incremental coding being a suggested solution.
Criteria: Participants reflect on common practices or mistakes made by beginners, suggesting that they should write code incrementally, checking for errors at each step.
Phrase: Suggests incremental coding.