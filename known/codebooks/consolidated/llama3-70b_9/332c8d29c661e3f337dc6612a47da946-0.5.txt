You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (3 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
3. 
Concepts: {Repeat the input 3}
Relationship: {What is logical relationship between concepts in code 3, or N/A if not applicable}
Criteria: {Who did what, and how for code 3}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: providing software context, provide context for understanding
- Providing context or background information about software use or implementation.
- Designers or users provide background information or context about a specific topic or project.

2.
Concepts: explain updates and design, clarifying software versions
- Designers explain updates and existing design to clarify software functionality.
- Designers clarify software versions, workflows, and software behavior, facilitating understanding.

3.
Concepts: managing release expectations, managing user expectations
- Designers manage user expectations for release.
- Designers manage user anticipation and expectations for the software or its features.
===
---
Definitions for each code:

1.
Concepts: providing software context, provide context for understanding
Relationship: The two concepts are closely related as providing software context is a means to provide context for understanding.
Criteria: Designers or users provide background information about software use or implementation to facilitate understanding.
Phrase: Providing contextual background

2.
Concepts: explain updates and design, clarifying software versions
Relationship: The two concepts are complementary as explaining updates and design is a way to clarify software versions.
Criteria: Designers explain and clarify software functionality, versions, and behavior to facilitate understanding.
Phrase: Clarifying software functionality

3.
Concepts: managing release expectations, managing user expectations
Relationship: The two concepts are synonymous as managing release expectations is a specific instance of managing user expectations.
Criteria: Designers manage user anticipation and expectations for software releases or features.
Phrase: Managing user anticipation