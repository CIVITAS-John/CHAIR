You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (19 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
19. 
Concepts: {Repeat the input 19}
Relationship: {What is logical relationship between concepts in code 19, or N/A if not applicable}
Criteria: {Who did what, and how for code 19}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: praise software, express positive sentiments about the software
- Users praise the software for its practicality and effectiveness.
- Users appreciate features, provide positive feedback, compliment the software, and express satisfaction.

2.
Concepts: expressing appreciation, express gratitude and appreciation
- Users express appreciation or thanks.
- Users express gratitude and show appreciation for contributions.

3.
Concepts: share positive classroom experiences, describe students' positive responses in class
- Users describe student engagement and share positive classroom experiences.
- A user describes positive student responses in class.

4.
Concepts: inquire about updates, inquire about update status
- Users ask about recent updates.
- Users inquire about the timing or details of software updates.

5.
Concepts: inquire about technical aspects, inquire about software usage
- Users ask technical questions about the software.
- Users inquire about the usage of specific software features or versions.

6.
Concepts: expressing community needs, express need for features
- A user expresses a need for specific features in the community.
- Users express interest or need for specific features or functionality.

7.
Concepts: acknowledge and respond to feedback, respond to user feedback and queries
- Designers acknowledge and respond to user feedback.
- Designers respond to user feedback and queries.

8.
Concepts: show interest in user context, seek user context and experience
- Designers show interest in the user's background or context.
- Designers seek context or information about users' experiences.

9.
Concepts: engage in problem solving, offer solutions to issues
- A designer engages in problem-solving with users.
- Designers offer solutions to user issues or questions.

10.
Concepts: list updates and bug fixes, announce feature updates
- Designers list new features, updates, and bug fixes.
- Designers announce new features, updates, or bug fixes based on user input.

11.
Concepts: introduce new features, describe planned features
- Designers detail and introduce new features.
- Designers give examples and describe planned features in detail.

12.
Concepts: feature preview, preview upcoming updates
- A designer previews upcoming features with visual content.
- Designers provide previews of upcoming updates or features.

13.
Concepts: share development updates, communicate progress updates
- Designers share updates on the development of features.
- Designers share and communicate progress on software development.

14.
Concepts: discuss feature development, prioritize feature development
- Designers discuss ongoing or planned feature development and its implementation.
- Designers discuss prioritizing different features or sections to be developed.

15.
Concepts: acknowledge limitations, address technical limitations
- Designers acknowledge limitations or potential issues of the software.
- Designers address and discuss technical limitations of the software.

16.
Concepts: provide technical updates, explain technical details
- Designers provide detailed technical and product updates.
- Designers provide and explain technical details about components.

17.
Concepts: clarify software version, technical clarification
- Designers clarify and explain details about software versions.
- Designers provide technical clarifications or explanations about the software.

18.
Concepts: discuss usability features, provide feature information
- Designers discuss and describe usability features of the software.
- Designers provide information and explain the features or functionalities of the software.

19.
Concepts: explaining design goals, explain design rationale
- A designer explains the goals or intentions behind a design decision.
- Designers explain the rationale behind specific development decisions.
===
---
Definitions for each code (19 in total):
1.
Concepts: praise software, express positive sentiments about the software
Relationship: Users' positive feedback about the software
Criteria: Users express positive sentiments and praise the software for its features and effectiveness.
Phrase: Expressing software praise

2.
Concepts: expressing appreciation, express gratitude and appreciation
Relationship: Users' gratitude towards contributions
Criteria: Users express gratitude and appreciation for contributions or assistance.
Phrase: Expressing gratitude

3.
Concepts: share positive classroom experiences, describe students' positive responses in class
Relationship: Users' sharing of positive classroom interactions
Criteria: Users share and describe positive classroom experiences and student engagement.
Phrase: Sharing positive classroom experiences

4.
Concepts: inquire about updates, inquire about update status
Relationship: Users' curiosity about software updates
Criteria: Users inquire about the status or details of recent software updates.
Phrase: Inquiring about updates

5.
Concepts: inquire about technical aspects, inquire about software usage
Relationship: Users' technical questions about the software
Criteria: Users ask technical questions regarding the usage of specific software features or versions.
Phrase: Inquiring about technical aspects

6.
Concepts: expressing community needs, express need for features
Relationship: Users' expression of needs for specific features
Criteria: Users express the need or interest in specific features or functionalities within the community.
Phrase: Expressing community needs

7.
Concepts: acknowledge and respond to feedback, respond to user feedback and queries
Relationship: Designers' response to user feedback
Criteria: Designers acknowledge and respond to user feedback and queries.
Phrase: Responding to feedback

8.
Concepts: show interest in user context, seek user context and experience
Relationship: Designers' interest in users' backgrounds
Criteria: Designers seek and show interest in the users' context and experiences.
Phrase: Seeking user context

9.
Concepts: engage in problem solving, offer solutions to issues
Relationship: Designers' problem-solving interactions with users
Criteria: Designers engage in problem-solving and offer solutions to user issues or questions.
Phrase: Engaging in problem solving

10.
Concepts: list updates and bug fixes, announce feature updates
Relationship: Designers' communication of software changes
Criteria: Designers list and announce new features, updates, and bug fixes.
Phrase: Announcing updates

11.
Concepts: introduce new features, describe planned features
Relationship: Designers' introduction of new features
Criteria: Designers detail and introduce new or planned features.
Phrase: Introducing new features

12.
Concepts: feature preview, preview upcoming updates
Relationship: Designers' previews of future updates
Criteria: Designers provide previews of upcoming updates or features.
Phrase: Previewing upcoming updates

13.
Concepts: share development updates, communicate progress updates
Relationship: Designers' communication of development progress
Criteria: Designers share and communicate updates on the development progress.
Phrase: Sharing development updates

14.
Concepts: discuss feature development, prioritize feature development
Relationship: Designers' discussions on feature priorities
Criteria: Designers discuss and prioritize ongoing or planned feature development.
Phrase: Discussing feature development

15.
Concepts: acknowledge limitations, address technical limitations
Relationship: Designers' acknowledgment of software limitations
Criteria: Designers acknowledge and address the limitations or potential issues of the software.
Phrase: Addressing limitations

16.
Concepts: provide technical updates, explain technical details
Relationship: Designers' provision of technical information
Criteria: Designers provide and explain detailed technical updates about the software.
Phrase: Providing technical updates

17.
Concepts: clarify software version, technical clarification
Relationship: Designers' clarification of software versions
Criteria: Designers clarify and provide technical explanations about software versions.
Phrase: Clarifying software versions

18.
Concepts: discuss usability features, provide feature information
Relationship: Designers' discussion of usability features
Criteria: Designers discuss and provide information about the usability features of the software.
Phrase: Discussing usability features

19.
Concepts: explaining design goals, explain design rationale
Relationship: Designers' explanation of design decisions
Criteria: Designers explain the goals and rationale behind specific design decisions.
Phrase: Explaining design rationale
---