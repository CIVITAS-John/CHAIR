You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another and please do not merge them.
Determine the logical relationship between concepts within each code, such as inclusion, parallel, or intersection.
Write clear and generalizable criteria for each code and do not introduce unnecessary details. Then, write an accurate label for the combined concept.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (11 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Label: {A consolidated label of code 1}
...
11. 
Concepts: {Repeat the input 11}
Relationship: {What is logical relationship between concepts in code 11, or N/A if not applicable}
Criteria: {Who did what, and how for code 11}
Label: {A consolidated label of code 11}
---
~~~
1.
Concepts: seeks to improve tool based on user input, ui improvement suggestions
- Seeking to improve the tool based on user input.
- The code suggests further user interface improvements or refinements, and users suggest incremental improvements or refinements, or suggest a focused or incremental approach to development.

2.
Concepts: craftsmanship commitment, attention to detail in development
- Users use metaphors to describe the development process, and express commitment to quality or perfection in design or features.
- Designers demonstrate attention to detail in product development, recognizing the value of perfectionism or attention to detail in development.

3.
Concepts: long-term stability focus, feature rationale and stability
- Designers emphasize long-term stability or describe features that contribute to it.
- Rationalizing a feature as critical for long-term stability or success, discussing the importance of a feature for stability.

4.
Concepts: multi-platform development, showing interest in multiple platforms
- Discussing the simultaneous release of multiple platforms, and mentioning development progress on multiple platforms.
- Expressing interest in multiple platforms or versions of the software.

5.
Concepts: clarifying shared version, platform clarification
- Clarifying that a shared version is for PC.
- Clarifying the target platform for a shared version or release, and ensuring clear communication about different platforms or versions.

6.
Concepts: expansion openness, flexible design approach
- Designers open up the possibility for future expansion or development, and mention adapting plans based on future opportunities.
- Designer shows flexibility in their design approach, and expresses openness to alternative solutions or ideas, remaining open to opportunities or suggestions.

7.
Concepts: considering connectivity needs, technical infrastructure inquiry
- The designer considers the need for internet connectivity in the application.
- A designer inquires about internet access or availability for potential solutions or implementations, and a designer inquires about technical infrastructure or resources available to users.

8.
Concepts: legacy support consideration, considering expanding software compatibility
- A designer considers supporting older systems or technology, and sets expectations for the software's compatibility with older hardware.
- The designer considers expanding software compatibility in the future.

9.
Concepts: non-verbal communication
- Users use non-verbal cues or visual expressions to interact
- A designer uses visual aids to clarify or explain concepts or shares an image to confirm understanding or get feedback in the Physics Lab's online community.

10.
Concepts: feature explanation
- Designers explain feature functionality or purpose, providing examples or elaborating on features or functionality.
- The designer explains an existing feature or functionality, or explains how different features or components interact.

11.
Concepts: setting user expectations
- Designers set user expectations about upcoming features or timelines.
- A designer sets or clarifies expectations about the testing phase or functionality of a software or tool.
===
Here are the definitions for each code:

---
1.
Concepts: seeks to improve tool based on user input, ui improvement suggestions
Relationship: Inclusion
Criteria: Designers or users suggest improvements or refinements to the tool based on user input.
Label: User-Driven Development

2.
Concepts: craftsmanship commitment, attention to detail in development
Relationship: Parallel
Criteria: Designers demonstrate a commitment to quality and attention to detail in product development.
Label: Quality-Centric Development

3.
Concepts: long-term stability focus, feature rationale and stability
Relationship: Intersection
Criteria: Designers prioritize long-term stability and rationalize features that contribute to it.
Label: Stability-Oriented Design

4.
Concepts: multi-platform development, showing interest in multiple platforms
Relationship: Inclusion
Criteria: Designers discuss or express interest in developing the tool across multiple platforms.
Label: Cross-Platform Development

5.
Concepts: clarifying shared version, platform clarification
Relationship: Inclusion
Criteria: Designers clarify the target platform for a shared version or release.
Label: Platform Clarification

6.
Concepts: expansion openness, flexible design approach
Relationship: Parallel
Criteria: Designers remain open to future expansion or alternative solutions.
Label: Adaptable Design

7.
Concepts: considering connectivity needs, technical infrastructure inquiry
Relationship: Inclusion
Criteria: Designers consider internet connectivity needs or technical infrastructure requirements.
Label: Technical Infrastructure Planning

8.
Concepts: legacy support consideration, considering expanding software compatibility
Relationship: Inclusion
Criteria: Designers consider supporting older systems or expanding software compatibility.
Label: Backward Compatibility

9.
Concepts: non-verbal communication
Relationship: N/A
Criteria: Users or designers use non-verbal cues or visual aids to interact or communicate.
Label: Non-Verbal Communication

10.
Concepts: feature explanation
Relationship: N/A
Criteria: Designers explain feature functionality or purpose.
Label: Feature Clarification

11.
Concepts: setting user expectations
Relationship: N/A
Criteria: Designers set or clarify expectations about upcoming features, timelines, or functionality.
Label: Expectation Management