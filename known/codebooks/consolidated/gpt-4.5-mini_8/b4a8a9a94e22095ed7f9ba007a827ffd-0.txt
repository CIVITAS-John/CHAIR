You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: communicate updates, provide progress updates
- Designer communicates updates and timelines regarding software releases to users.
- A designer updates the community on the progress of software releases.

2.
Concepts: notify updates, announce releases
- The designer informs the community about the release of a new version and its updates.
- Designers announce the release of new software versions and inform users about updates.

3.
Concepts: share future plans, share future development plans
- The designer outlines plans for future updates to the application.
- Designer shares future plans for design and development.

4.
Concepts: discuss design efforts, communication about progress and plans
- The designer discusses current research efforts and future enhancements for the software.
- The designer discusses ongoing research and timelines for future features.

5.
Concepts: user guidance, provide guidance
- A designer provides detailed guidance on new features and functionalities of the software.
- Designers provide instructions or guidance on how to use specific features of the software.

6.
Concepts: provide technical information, provide compatibility information
- Designer provides technical information regarding system compatibility.
- Designer provides specific information about software compatibility with operating systems.

7.
Concepts: request guidance, request documentation
- Users request instructions or support on utilizing specific features of the software.
- Users request a user manual to assist with software usage and improve their understanding.

8.
Concepts: make requests, explain reasons for the request
- Users make detailed requests for specific features in the software to clarify their needs.
- Users articulate the reasons behind their requests for specific software features or improvements.

9.
Concepts: inquire about updates, engage with development process
- Users inquire about the timeline for upcoming software updates to stay informed.
- User inquires about the timing of an update.

10.
Concepts: express appreciation, appreciate community support
- Users express appreciation for the designer's efforts to strengthen community ties.
- Instances where users express support, encouragement, or appreciation for the designers' efforts to foster community spirit.

11.
Concepts: inquiring about design, asking follow-up questions
- Designers pose questions regarding design elements or requirements to gather user input.
- The designer asks follow-up questions to clarify user issues or requests.

12.
Concepts: accept suggestions, respond to feedback
- The designer acknowledges user suggestions and commits to making future improvements.
- The designer indicates a willingness to incorporate user feedback in future development.
===
---
Definitions for each code (12 in total):
1. 
Concepts: communicate updates, provide progress updates
Relationship: Both concepts involve the designer's role in keeping users informed about software developments.
Criteria: The designer communicates and provides progress updates regarding software releases to users.
Phrase: Communicate software updates.

2. 
Concepts: notify updates, announce releases
Relationship: Both concepts focus on the designer's responsibility to inform the community about new software versions and their features.
Criteria: The designer notifies and announces the release of new software versions and updates to the community.
Phrase: Announce software releases.

3. 
Concepts: share future plans, share future development plans
Relationship: Both concepts relate to the designer's role in outlining and sharing upcoming development strategies with the community.
Criteria: The designer shares and outlines future plans for updates and development of the application.
Phrase: Share future development plans.

4. 
Concepts: discuss design efforts, communication about progress and plans
Relationship: Both concepts emphasize the designer's engagement in discussing ongoing and future design efforts with the community.
Criteria: The designer discusses current research efforts and future enhancements for the software with the community.
Phrase: Discuss design efforts.

5. 
Concepts: user guidance, provide guidance
Relationship: Both concepts focus on the designer's responsibility to assist users in understanding and utilizing software features.
Criteria: The designer provides detailed guidance and instructions on new features and functionalities of the software.
Phrase: Provide user guidance.

6. 
Concepts: provide technical information, provide compatibility information
Relationship: Both concepts involve the designer's role in delivering essential technical details regarding software compatibility.
Criteria: The designer provides technical and compatibility information regarding the software and operating systems.
Phrase: Provide technical information.

7. 
Concepts: request guidance, request documentation
Relationship: Both concepts highlight users' need for assistance and documentation to better understand software features.
Criteria: Users request guidance and documentation to assist with utilizing specific features of the software.
Phrase: Request user guidance.

8. 
Concepts: make requests, explain reasons for the request
Relationship: Both concepts involve users articulating their needs and the rationale behind their requests for software features.
Criteria: Users make requests for specific features and explain the reasons behind these requests.
Phrase: Make feature requests.

9. 
Concepts: inquire about updates, engage with development process
Relationship: Both concepts reflect users' proactive engagement in seeking information about software updates and the development timeline.
Criteria: Users inquire about updates and engage with the development process to stay informed.
Phrase: Inquire about updates.

10. 
Concepts: express appreciation, appreciate community support
Relationship: Both concepts involve users showing gratitude towards the designer's efforts and the community's support.
Criteria: Users express appreciation for the designer's efforts and the community's support in fostering ties.
Phrase: Express appreciation.

11. 
Concepts: inquiring about design, asking follow-up questions
Relationship: Both concepts emphasize the designer's role in seeking user input and clarifying issues related to design.
Criteria: Designers inquire about design elements and ask follow-up questions to clarify user issues or requests.
Phrase: Inquire about design.

12. 
Concepts: accept suggestions, respond to feedback
Relationship: Both concepts highlight the designer's openness to user suggestions and feedback for future improvements.
Criteria: The designer accepts suggestions and responds to user feedback to inform future development.
Phrase: Respond to feedback.
---