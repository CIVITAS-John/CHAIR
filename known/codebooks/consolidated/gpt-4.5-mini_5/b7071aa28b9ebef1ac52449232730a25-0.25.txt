You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (23 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
23. 
Concepts: {Repeat the input 23}
Relationship: {What is logical relationship between concepts in code 23, or N/A if not applicable}
Criteria: {Who did what, and how for code 23}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: gather user feedback, designers gather user input
- Designers invite, gather, and take user feedback to inform future software features.
- Designers gather input from users regarding their needs and preferences.

2.
Concepts: accept user suggestions, acknowledge feature requests
- Users propose specific design features, and designers accept these suggestions for future implementation.
- Designers confirm the implementation of features based on user requests and feedback.

3.
Concepts: collaborate on problem solving, shares potential solutions
- Moments where designers and users work together to address issues.
- Designers share design intentions based on feedback and users share related experiences.

4.
Concepts: identify potential issues, list updates and bug fixes
- Designers note potential bugs and describe upcoming software updates.
- Designers provide a comprehensive list of feature updates and bug fixes.

5.
Concepts: provide product updates, communicate update timelines, communicate software progress
- Designers provide updates on changes to features and the status of the software.
- Designers provide timelines and platform-specific updates regarding the software.
- Designers highlight and communicate the progress made in software updates or developments across different platforms.

6.
Concepts: collaborative planning, outlining and discussing future development priorities
- Designers and users collaboratively discussing and planning the development of the software.
- Designers engage in discussions to outline and prioritize future plans for software development and features.

7.
Concepts: commit to improvements, promise that the update is ongoing
- Designers express commitment to improvements and reassure users about progress.
- Designers assure users that updates or improvements are actively being worked on.

8.
Concepts: announce future plans, designers share development plans
- Designers announce and outline plans for future updates and ongoing development efforts.
- Designers share information about ongoing feature development efforts.
- Designers share the development plan and provide access information in announcements.

9.
Concepts: address usability needs, align features with user needs
- A designer emphasizes usability in the software design process and aims to meet user needs.
- Designers align the application features with educational needs and practices.

10.
Concepts: explain software features, clarify feature functionality
- Designers explain how specific and new features work and describe the functionality of specific components.
- Designers address the functionality of specific features and clarify how existing features function.

11.
Concepts: discuss technical constraints, discuss technology limitations
- Instances where technical limitations or requirements are discussed.
- Users highlight technical constraints and comment on limitations of their school's technology.

12.
Concepts: limitation of the team, address software limitations
- Designers acknowledge the limitations of their team regarding feature development.
- Designers discuss and acknowledge potential limitations of the software.

13.
Concepts: clarify development challenges, ensure development transparency
- Designers explain delays and complexities in feature development.
- Instances where designers provide detailed information about development processes and challenges.

14.
Concepts: express contemplation, reflect on past experiences
- Designers express thoughtful consideration or reflection on a topic or issue.
- Designers reflect on past experiences to clarify and enhance current discussions.

15.
Concepts: recognize community support, expresses support and gratitude
- Users acknowledge resolutions, shared information, and express gratitude for help received.
- Instances of support and acknowledgment are expressed within the community.

16.
Concepts: express anticipation for updates, express excitement for developments
- Users express anticipation for upcoming updates of the application.
- Users express enthusiasm for community developments and appreciate shared information about future features.

17.
Concepts: expert recognition, acknowledgment
- A user acknowledges the expertise of others while making a feature request.
- Users acknowledge the contributions of experts and make specific requests for software features.

18.
Concepts: show engagement, encourage user involvement
- Designers demonstrate engagement through active participation in discussions.
- Designers involve users in design discussions and facilitate further engagement.

19.
Concepts: encourages ongoing discussion, foster detailed discussions
- Designers encourage users to voice issues and continue discussions.
- Designers encourage users to elaborate on suggestions while users provide additional ideas.

20.
Concepts: build community trust, contribute teaching insights
- Users share their teaching experiences and professional backgrounds to establish credibility.
- Users share their teaching experiences and recount past incidents to enhance community understanding.

21.
Concepts: emphasize convenience, propose usability enhancements
- A user suggests features that would enhance convenience in using the software, indicating a desire for improved functionality.
- Users suggest improvements for usability and enhancements for educational purposes.

22.
Concepts: request access guidance, seek usage support
- Users inquire about software access and request assistance with downloading.
- Users ask for instructions on utilizing specific features and request documentation or resources for assistance.

23.
Concepts: engage in user inquiries, inquire about software details
- Users ask questions about software usage to seek assistance and information.
- Users ask questions regarding software updates and technical functionalities.
===
---
Definitions for each code (23 in total):
1.
Concepts: gather user feedback, designers gather user input  
Relationship: Designers actively seek and collect feedback from users to inform their design decisions.  
Criteria: Designers invite and collect user feedback to inform future software features and understand user needs.  
Phrase: Gather user feedback.  

2.
Concepts: accept user suggestions, acknowledge feature requests  
Relationship: Designers respond positively to user input by recognizing and planning for suggested features.  
Criteria: Users propose design features, and designers acknowledge and accept these suggestions for future implementation.  
Phrase: Accept user suggestions.  

3.
Concepts: collaborate on problem solving, shares potential solutions  
Relationship: Designers and users work together to identify and address issues, sharing insights and solutions.  
Criteria: Designers and users collaborate to solve problems by sharing design intentions and related experiences.  
Phrase: Collaborate on problem solving.  

4.
Concepts: identify potential issues, list updates and bug fixes  
Relationship: Designers systematically note issues and provide updates to improve the software.  
Criteria: Designers identify bugs and provide a list of upcoming software updates and fixes.  
Phrase: Identify potential issues.  

5.
Concepts: provide product updates, communicate update timelines, communicate software progress  
Relationship: Designers keep users informed about the status and timelines of software changes.  
Criteria: Designers provide updates on software changes, timelines, and overall progress across platforms.  
Phrase: Provide product updates.  

6.
Concepts: collaborative planning, outlining and discussing future development priorities  
Relationship: Designers and users engage in joint discussions to set priorities for future software development.  
Criteria: Designers and users collaboratively plan and outline future software development priorities.  
Phrase: Collaborate on planning.  

7.
Concepts: commit to improvements, promise that the update is ongoing  
Relationship: Designers assure users of their dedication to continuous improvement and ongoing updates.  
Criteria: Designers express commitment to improvements and reassure users about the ongoing nature of updates.  
Phrase: Commit to improvements.  

8.
Concepts: announce future plans, designers share development plans  
Relationship: Designers communicate their intentions regarding future software updates and developments.  
Criteria: Designers announce and share plans for future updates and ongoing development efforts.  
Phrase: Announce future plans.  

9.
Concepts: address usability needs, align features with user needs  
Relationship: Designers focus on user needs to enhance the usability of the software.  
Criteria: Designers emphasize usability and align application features with user educational needs.  
Phrase: Address usability needs.  

10.
Concepts: explain software features, clarify feature functionality  
Relationship: Designers provide clear explanations of how software features work to enhance user understanding.  
Criteria: Designers explain and clarify the functionality of specific software features.  
Phrase: Explain software features.  

11.
Concepts: discuss technical constraints, discuss technology limitations  
Relationship: Designers and users engage in discussions about the limitations imposed by technology.  
Criteria: Instances where technical constraints and limitations are discussed by users and designers.  
Phrase: Discuss technical constraints.  

12.
Concepts: limitation of the team, address software limitations  
Relationship: Designers acknowledge both team and software limitations in development processes.  
Criteria: Designers recognize and discuss the limitations of their team and the software.  
Phrase: Address software limitations.  

13.
Concepts: clarify development challenges, ensure development transparency  
Relationship: Designers provide insights into the complexities and challenges faced during development.  
Criteria: Designers explain delays and complexities while ensuring transparency in the development process.  
Phrase: Clarify development challenges.  

14.
Concepts: express contemplation, reflect on past experiences  
Relationship: Designers engage in thoughtful reflection to enhance current discussions.  
Criteria: Designers express contemplation and reflect on past experiences to inform current discussions.  
Phrase: Reflect on past experiences.  

15.
Concepts: recognize community support, expresses support and gratitude  
Relationship: Users acknowledge and express appreciation for the support received within the community.  
Criteria: Users express gratitude for help received and recognize community support.  
Phrase: Recognize community support.  

16.
Concepts: express anticipation for updates, express excitement for developments  
Relationship: Users show enthusiasm and eagerness for upcoming software updates and community developments.  
Criteria: Users express anticipation and excitement for future updates and developments.  
Phrase: Express anticipation for updates.  

17.
Concepts: expert recognition, acknowledgment  
Relationship: Users recognize and appreciate the expertise of others in the community.  
Criteria: Users acknowledge the contributions and expertise of others while making feature requests.  
Phrase: Acknowledge expert contributions.  

18.
Concepts: show engagement, encourage user involvement  
Relationship: Designers actively participate in discussions to foster user involvement.  
Criteria: Designers demonstrate engagement and encourage users to participate in design discussions.  
Phrase: Show engagement.  

19.
Concepts: encourages ongoing discussion, foster detailed discussions  
Relationship: Designers promote continuous dialogue and elaboration on user suggestions.  
Criteria: Designers encourage users to voice issues and elaborate on suggestions for further discussion.  
Phrase: Encourage ongoing discussion.  

20.
Concepts: build community trust, contribute teaching insights  
Relationship: Users share their experiences to enhance community credibility and understanding.  
Criteria: Users share teaching experiences to build trust and enhance community understanding.  
Phrase: Build community trust.  

21.
Concepts: emphasize convenience, propose usability enhancements  
Relationship: Users suggest features aimed at improving the software's convenience and usability.  
Criteria: Users propose enhancements to improve convenience and usability of the software.  
Phrase: Propose usability enhancements.  

22.
Concepts: request access guidance, seek usage support  
Relationship: Users seek assistance and guidance on software access and usage.  
Criteria: Users inquire about software access and request support for utilizing specific features.  
Phrase: Request access guidance.  

23.
Concepts: engage in user inquiries, inquire about software details  
Relationship: Users actively seek information and assistance regarding software functionalities.  
Criteria: Users ask questions about software usage and updates to gain clarity and support.  
Phrase: Engage in user inquiries.  
---