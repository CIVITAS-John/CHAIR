You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: overrides previous work, overwriting existing work with ai code, overwriting with ai output
- Overriding previous work with AI-generated code due to time constraints
- Overwrites existing work with AI-generated code, often due to time constraints.
- Overwriting existing code with AI output, using AI-generated code completely due to time constraints.

2.
Concepts: uses ai code due to time constraints, relying on ai output under time pressure
- The participant uses AI-generated code due to time constraints.
- Interviewee relies on AI-generated code when facing time constraints.

3.
Concepts: working under constraints, utilizing ai-generated code fully, using ai code under time constraints
- Working under constraints and using AI-generated code completely
- Utilizing AI-generated code fully when realizing time constraints.
- Uses AI-generated code fully under time constraints

4.
Concepts: selective code adoption, discerning ai code adoption, demonstrating discernment in code adoption
- The participant selectively copies AI-generated code.
- Selectively chooses specific AI-generated code snippets.
- Discerns AI code adoption by selectively copying code.
- The participant selectively adopts code generated by the AI, demonstrating discernment in code adoption.

5.
Concepts: selectively copies code, selectively copies ai-generated code, selective code copying
- Selectively copies code from AI-generated output
- Selectively copies AI-generated code to the model
- The quote shows selectively copying code from AI output.

6.
Concepts: copying ai code, copying ai output, decides to use ai-generated code, choosing to execute ai-generated code
- Deciding to copy and paste AI-generated code
- The participant chooses to copy and paste AI-generated code for implementation.
- Decides to use AI-generated code, such as copying and pasting it.
- Chooses to execute AI-generated code, deciding to copy and paste it.

7.
Concepts: uses ai code as reference, chatgpt usage: reference
- Uses AI-generated code as a reference or guide
- Uses ChatGPT-generated code only as a reference for writing own code.

8.
Concepts: manual coding with ai reference, manual coding with ai guidance, writes code manually with ai guidance, manually writing code with chatgpt guidance
- Writes code manually with AI-generated code as reference
- Using AI-generated code as a reference while writing code manually.
- Writes code manually using AI-provided steps as reference.
- Manually writing code with steps provided by ChatGPT.

9.
Concepts: prefers manual coding, selectively uses ai-generated code
- Prefers to write code manually, using AI-generated code as a reference.
- Prefers manual coding over copying AI-generated code.
- Selectively uses AI-generated code, writing code manually with AI guidance.

10.
Concepts: adjusts model setup, adjusts model setup based on ai output
- Adjusts model setup based on AI-generated code.
- The participant adjusts their model setup based on AI output or suggestions.

11.
Concepts: adapts based on ai-generated code, adapting to practical needs
- Adapts based on AI-generated code
- Adapts to practical needs, using AI-generated code when necessary.

12.
Concepts: cautious ai integration, integrating ai suggestions
- Integrates AI suggestions cautiously, selectively copying code to the model.
- Integrates AI suggestions into their work, selectively copying code.

13.
Concepts: integrating ai-generated code, integrates ai code into model
- Integrates AI-generated code into a model
- Integrates AI-generated code into a model or existing code structure.

14.
Concepts: integrates ai code, manual ai code integration
- Integrates AI code into their work.
- Manually integrates AI-generated code into their work.
- Chooses to manually integrate AI-generated code into their own work

15.
Concepts: identifies gaps in ai outputs, recognizes missing ai-generated structures, identifies missing structures, identifying limitations in ai-generated code
- Identifies gaps in AI-generated code, such as missing structures.
- Identifies gaps or limitations in the AI-generated code structures.
- Identifies limitations in AI-generated code, specifically missing code structures.

16.
Concepts: noting incomplete ai code, incomplete ai code generation
- Notes incomplete AI code and missing structures.
- Notes instances of incomplete or missing code generated by AI.

17.
Concepts: finds ai code lacking, ai output sometimes lacks necessary code structures
- Finds AI-generated code lacking in completeness.
- Notes that AI-generated code sometimes lacks necessary structures or components.

18.
Concepts: clarification seeking, requesting clarification and debugging
- Asks for clarification on specific syntax structures in AI-generated code.
- Asks for clarification and debugging of AI-generated code.

19.
Concepts: querying ai for code structures, requesting ai assistance with code structures
- Querying AI for missing code structures or syntax.
- Asks AI for missing structures or syntax in code.

20.
Concepts: searching for specific syntax, demonstrates targeted use of ai
- Searches for specific syntax or structures in AI-generated code
- Demonstrates targeted use of AI, seeking specific syntax structures or code snippets.

21.
Concepts: seeks ai-generated code, seeking specific syntax structures from ai-generated code, seeks ai assistance for code specifics
- Interviewee seeks AI-generated code for a specific task.
- The interviewee seeks specific syntax structures from AI-generated code.
- The interviewee seeks the AI's assistance for specific code details or syntax.

22.
Concepts: searches for specific syntax via ai, seeking specific syntax information, asks ai for specific syntax structures
- The participant searches for specific syntax via AI.
- The participant seeks specific syntax information from the AI-driven system.
- The participant asks the AI-driven interface for specific syntax structures or code examples.

23.
Concepts: desiring autocomplete features, desires features for improved coding efficiency
- The participant desires autocomplete features in the AI to facilitate coding.
- Interviewee desires features like autocomplete for improved coding efficiency.

24.
Concepts: ai-assisted syntax recall, using ai for syntax recall
- Using AI to recall syntax and programming concepts.
- The quote uses AI to recall syntax or programming details.

25.
Concepts: utilizing ai for syntax reminders, finds ai helpful for syntax reminders
- Utilizes AI for syntax reminders and code completion.
- Finds AI helpful for reminding them of syntax and providing easy-to-read code.

26.
Concepts: ai syntax support, notes ai's helpfulness for syntax issues
- Finds AI helpful for syntax and coding errors.
- Relies on AI for syntax support and code completion.
- Notes the helpfulness of AI in clarifying syntax issues.

27.
Concepts: proposes code modifications, seeks specific code changes
- The interviewee proposes specific modifications to the AI-generated code.
- The interviewee seeks specific code changes or modifications from the AI.

28.
Concepts: requesting ai fixes, asks ai to modify code, proactively suggesting a modification to the ai's code and asking for help
- Requests AI to fix or modify code based on own idea
- Requesting AI modifications to code.
- Proactively suggests modifications or improvements to AI-generated code or solutions.

29.
Concepts: suggesting future improvements for ai-generated code, suggesting improvements for ai code generation
- The interviewee suggests future improvements for AI-generated code.
- The participant suggests improvements or future developments for AI-driven code generation, such as incorporating user feedback or compiler information.

30.
Concepts: iterative code improvement, ai-inspired code improvements
- The interviewee values iterative improvement in code writing with the help of AI.
- The interviewee describes how AI-generated code inspires improvements to their own code.

31.
Concepts: ai-assisted code review, appreciates ai's suggestions
- Values the AI's suggestions and feedback on code optimization.
- Appreciates AI's suggestions for code optimization.

32.
Concepts: valuing ai code improvement, valuing code improvement suggestions
- Values AI's potential for code improvement
- Valuing ChatGPT's suggestions for code improvement.
===
Here are the definitions for each code:

---
1.
Concepts: overrides previous work, overwriting existing work with ai code, overwriting with ai output
Relationship: The concepts are related to the idea of replacing existing work with AI-generated code due to time constraints.
Criteria: Participants override previous work with AI-generated code due to time constraints.
Phrase: Overriding previous work with AI code.

2.
Concepts: uses ai code due to time constraints, relying on ai output under time pressure
Relationship: The concepts are related to the idea of relying on AI-generated code when facing time constraints.
Criteria: Participants use AI-generated code due to time constraints.
Phrase: Relying on AI code under time pressure.

3.
Concepts: working under constraints, utilizing ai-generated code fully, using ai code under time constraints
Relationship: The concepts are related to the idea of using AI-generated code fully when facing time constraints.
Criteria: Participants utilize AI-generated code fully under time constraints.
Phrase: Utilizing AI code fully under time pressure.

4.
Concepts: selective code adoption, discerning ai code adoption, demonstrating discernment in code adoption
Relationship: The concepts are related to the idea of selectively adopting AI-generated code, demonstrating discernment.
Criteria: Participants selectively adopt AI-generated code, demonstrating discernment.
Phrase: Selectively adopting AI code.

5.
Concepts: selectively copies code, selectively copies ai-generated code, selective code copying
Relationship: The concepts are related to the idea of selectively copying AI-generated code.
Criteria: Participants selectively copy AI-generated code.
Phrase: Selectively copying AI code.

6.
Concepts: copying ai code, copying ai output, decides to use ai-generated code, choosing to execute ai-generated code
Relationship: The concepts are related to the idea of deciding to use AI-generated code.
Criteria: Participants decide to use AI-generated code.
Phrase: Deciding to use AI code.

7.
Concepts: uses ai code as reference, chatgpt usage: reference
Relationship: The concepts are related to the idea of using AI-generated code as a reference.
Criteria: Participants use AI-generated code as a reference.
Phrase: Using AI code as a reference.

8.
Concepts: manual coding with ai reference, manual coding with ai guidance, writes code manually with ai guidance, manually writing code with chatgpt guidance
Relationship: The concepts are related to the idea of writing code manually with AI-generated code as a reference.
Criteria: Participants write code manually with AI-generated code as a reference.
Phrase: Writing code manually with AI guidance.

9.
Concepts: prefers manual coding, selectively uses ai-generated code
Relationship: The concepts are related to the idea of preferring manual coding and selectively using AI-generated code.
Criteria: Participants prefer manual coding and selectively use AI-generated code.
Phrase: Preferring manual coding with AI support.

10.
Concepts: adjusts model setup, adjusts model setup based on ai output
Relationship: The concepts are related to the idea of adjusting the model setup based on AI-generated code.
Criteria: Participants adjust their model setup based on AI-generated code.
Phrase: Adjusting model setup with AI output.

11.
Concepts: adapts based on ai-generated code, adapting to practical needs
Relationship: The concepts are related to the idea of adapting to practical needs based on AI-generated code.
Criteria: Participants adapt to practical needs based on AI-generated code.
Phrase: Adapting to practical needs with AI code.

12.
Concepts: cautious ai integration, integrating ai suggestions
Relationship: The concepts are related to the idea of integrating AI suggestions cautiously.
Criteria: Participants integrate AI suggestions cautiously.
Phrase: Integrating AI suggestions cautiously.

13.
Concepts: integrates ai-generated code, integrates ai code into model
Relationship: The concepts are related to the idea of integrating AI-generated code into a model.
Criteria: Participants integrate AI-generated code into a model.
Phrase: Integrating AI code into a model.

14.
Concepts: integrates ai code, manual ai code integration
Relationship: The concepts are related to the idea of manually integrating AI-generated code.
Criteria: Participants manually integrate AI-generated code.
Phrase: Manually integrating AI code.

15.
Concepts: identifies gaps in ai outputs, recognizes missing ai-generated structures, identifies missing structures, identifying limitations in ai-generated code
Relationship: The concepts are related to the idea of identifying gaps or limitations in AI-generated code.
Criteria: Participants identify gaps or limitations in AI-generated code.
Phrase: Identifying gaps in AI code.

16.
Concepts: noting incomplete ai code, incomplete ai code generation
Relationship: The concepts are related to the idea of noting incomplete AI-generated code.
Criteria: Participants note incomplete AI-generated code.
Phrase: Noting incomplete AI code.

17.
Concepts: finds ai code lacking, ai output sometimes lacks necessary code structures
Relationship: The concepts are related to the idea of finding AI-generated code lacking in completeness.
Criteria: Participants find AI-generated code lacking in completeness.
Phrase: Finding AI code lacking.

18.
Concepts: clarification seeking, requesting clarification and debugging
Relationship: The concepts are related to the idea of seeking clarification and debugging of AI-generated code.
Criteria: Participants seek clarification and debugging of AI-generated code.
Phrase: Seeking clarification and debugging.

19.
Concepts: querying ai for code structures, requesting ai assistance with code structures
Relationship: The concepts are related to the idea of querying AI for missing code structures or syntax.
Criteria: Participants query AI for missing code structures or syntax.
Phrase: Querying AI for code structures.

20.
Concepts: searching for specific syntax, demonstrates targeted use of ai
Relationship: The concepts are related to the idea of searching for specific syntax or structures in AI-generated code.
Criteria: Participants search for specific syntax or structures in AI-generated code.
Phrase: Searching for specific syntax in AI code.

21.
Concepts: seeks ai-generated code, seeking specific syntax structures from ai-generated code, seeks ai assistance for code specifics
Relationship: The concepts are related to the idea of seeking AI-generated code for specific tasks or syntax structures.
Criteria: Participants seek AI-generated code for specific tasks or syntax structures.
Phrase: Seeking AI code for specific tasks.

22.
Concepts: searches for specific syntax via ai, seeking specific syntax information, asks ai for specific syntax structures
Relationship: The concepts are related to the idea of searching for specific syntax via AI.
Criteria: Participants search for specific syntax via AI.
Phrase: Searching for specific syntax via AI.

23.
Concepts: desiring autocomplete features, desires features for improved coding efficiency
Relationship: The concepts are related to the idea of desiring features like autocomplete for improved coding efficiency.
Criteria: Participants desire features like autocomplete for improved coding efficiency.
Phrase: Desiring autocomplete features.

24.
Concepts: ai-assisted syntax recall, using ai for syntax recall
Relationship: The concepts are related to the idea of using AI to recall syntax and programming concepts.
Criteria: Participants use AI to recall syntax and programming concepts.
Phrase: Using AI for syntax recall.

25.
Concepts: utilizing ai for syntax reminders, finds ai helpful for syntax reminders
Relationship: The concepts are related to the idea of utilizing AI for syntax reminders and code completion.
Criteria: Participants utilize AI for syntax reminders and code completion.
Phrase: Utilizing AI for syntax reminders.

26.
Concepts: ai syntax support, notes ai's helpfulness for syntax issues
Relationship: The concepts are related to the idea of finding AI helpful for syntax and coding errors.
Criteria: Participants find AI helpful for syntax and coding errors.
Phrase: Finding AI helpful for syntax issues.

27.
Concepts: proposes code modifications, seeks specific code changes
Relationship: The concepts are related to the idea of proposing specific modifications to AI-generated code.
Criteria: Participants propose specific modifications to AI-generated code.
Phrase: Proposing code modifications.

28.
Concepts: requesting ai fixes, asks ai to modify code, proactively suggesting a modification to the ai's code and asking for help
Relationship: The concepts are related to the idea of requesting AI to fix or modify code based on own ideas.
Criteria: Participants request AI to fix or modify code based on own ideas.
Phrase: Requesting AI fixes.

29.
Concepts: suggesting future improvements for ai-generated code, suggesting improvements for ai code generation
Relationship: The concepts are related to the idea of suggesting future improvements for AI-generated code.
Criteria: Participants suggest future improvements for AI-generated code.
Phrase: Suggesting future improvements for AI code.

30.
Concepts: iterative code improvement, ai-inspired code improvements
Relationship: The concepts are related to the idea of valuing iterative improvement in code writing with the help of AI.
Criteria: Participants value iterative improvement in code writing with the help of AI.
Phrase: Valuing iterative code improvement.

31.
Concepts: ai-assisted code review, appreciates ai's suggestions
Relationship: The concepts are related to the idea of valuing AI's suggestions and feedback on code optimization.
Criteria: Participants value AI's suggestions and feedback on code optimization.
Phrase: Valuing AI's code review.

32.
Concepts: valuing ai code improvement, valuing code improvement suggestions
Relationship: The concepts are related to the idea of valuing AI's potential for code improvement.
Criteria: Participants value AI's potential for code improvement.
Phrase: Valuing AI code improvement.