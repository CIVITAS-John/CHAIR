You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (64 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
64. 
Concepts: {Repeat the input 64}
Relationship: {What is logical relationship between concepts in code 64, or N/A if not applicable}
Criteria: {Who did what, and how for code 64}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: visual update, share visual update
- A designer shares a visual update or preview.
- A designer shares visual updates or previews with the community.

2.
Concepts: update preview, feature preview
- Previewing upcoming features and updates.
- A designer provides a preview of upcoming features or updates.

3.
Concepts: update description, describe update scope
- A designer describes the extent or content of an update.
- A designer describes the scope or extent of an update.

4.
Concepts: list new features, listing feature updates and bug fixes
- A designer lists new features, components, adjustments, and bug fixes in the software.
- A designer lists updates, new features, and bug fixes in the software.

5.
Concepts: detail specific updates, version update notes
- Designers detail specific updates and new features.
- A designer provides detailed notes on version updates and new features.

6.
Concepts: internal update, announce component update
- A designer informs about changes in component properties in the next update.
- A designer announces updates to component properties.

7.
Concepts: product update, technical updates
- Instances where designers provide information about updates or changes to the Physics Lab software.
- Instances where designers provide updates or technical changes to the Physics Lab tool.

8.
Concepts: updates, feature update
- Information about changes or new features in upcoming updates.
- Information about new features and updates being added to the product.
- Instances where designers announce new features, updates, or bug fixes based on user input.

9.
Concepts: update notification, inform about new version availability
- A designer notifies the group about a new version update.
- A designer informs the community about the availability of a new version.

10.
Concepts: software update, product iteration, version update announcement
- A designer announces a software update.
- A designer announces the release of a new version and its updates.
- A designer announces a new version update.

11.
Concepts: feature release, new feature announcement, software release
- A designer announces the release of a new feature or version.
- A designer announces new features and updates in a specific software version.
- Designers announce the release of a new software version.

12.
Concepts: inform about changes, communication of updates
- Designers inform users about upcoming changes or updates.
- Instances where designers communicate updates, release schedules, or new features to users.

13.
Concepts: provide update, software update announcement
- Designers provide updates on the status or release of new versions of the software.
- Designers provide updates about the software versions and new features.

14.
Concepts: user communication, community communication
- Designers communicate updates or changes to the community.
- A designer communicates with the community about new releases and updates.

15.
Concepts: community update, community announcement
- Instances where designers provide updates or announcements about the software.
- Announcements about updates and new features to the community.

16.
Concepts: announcement, announcement of plans
- A designer makes an announcement about development plans or updates.
- A designer announces plans for future updates or features.

17.
Concepts: announce upcoming updates, update announcement
- A designer announces upcoming updates or features.
- Instances where designers provide information about upcoming updates and new features.

18.
Concepts: share development plans, share info about development update
- A designer shares development plans or updates with the community.
- Designers share detailed information about development updates.

19.
Concepts: progress updates, progress update
- Updates on the current progress of development work.
- Updating the community on the progress of development or upcoming releases.

20.
Concepts: status update, status information
- Providing an update on the status of a project or feature.
- Providing visual or textual updates about the current status of development.

21.
Concepts: release schedule, communicate release plans, version release management
- Designers provide a schedule for upcoming software releases.
- Designers communicate plans for future software releases.
- Designers inform users about the schedule and process for releasing new versions.

22.
Concepts: update schedule, share update timeline
- A designer provides a schedule for upcoming updates.
- A designer shares the timeline for an upcoming update.

23.
Concepts: give a timeline for release, give a timeline of feature development
- Designers provide a timeline for when a feature or update will be released.
- Designers provide a timeline for the development of specific features.

24.
Concepts: feature list, upcoming features list
- A team member lists upcoming features.
- A designer lists features that will be included in future updates.

25.
Concepts: plan feature development, feature implementation, explanation of upcoming features
- A designer mentions the future availability of a feature.
- A designer discusses the implementation of a feature in future updates.
- A designer explains features that will be included in future updates.

26.
Concepts: promise future feature, promising it will realize, promise a future perfection of a feature
- Promises made by the designer to implement features at a later time.
- A designer assures users that a feature will be implemented.
- A designer assures users that a feature will be perfected in the future.

27.
Concepts: testing phase, clarify testing status
- A designer indicates that a feature is in the testing phase.
- A designer clarifies that a version or feature is currently in the testing phase.

28.
Concepts: designer confirmation, confirm upcoming update, confirm future implementation, confirm feature update
- A designer confirms a feature or update.
- A designer confirms an upcoming update.
- A designer confirms the future implementation of a feature or update.
- A designer confirms the timeline for a feature update.

29.
Concepts: feature simplification, suggest simplification
- A designer suggests simplifying or refining a feature.
- Designers suggest simplifying the software design or features.

30.
Concepts: design thoughts, simplification and refinement in design
- A designer shares thoughts on simplifying the design.
- A designer discusses the importance of simplification and refinement in design.

31.
Concepts: reflection on experiences, reflect on previous experience, reflect on past experience
- Designers reflect on their experiences or past attempts.
- A designer reflects on a previous experience or workaround.
- A designer reflects on past experiences to provide context or solutions.

32.
Concepts: design principles, explain design philosophy
- A designer explains the principles or philosophy guiding the software's design.
- The underlying principles and approaches guiding the design and development of the product.

33.
Concepts: explanation, feature explanation, introduce feature functions
- A designer provides an explanation or clarification about a feature or function.
- A designer explains the functionality of a feature with examples.
- A designer explains the functionality of a feature.

34.
Concepts: example of function, explain functionality
- Giving examples to illustrate the functions of a feature.
- Explaining the functionality of a feature or component.

35.
Concepts: explain delay, give reason for delay
- Designers explain delays or reasons for not meeting expectations.
- A designer gives a reason for why a feature is not yet completed.

36.
Concepts: transparency, development transparency
- Designers provide transparent updates on progress and challenges.
- Instances where designers provide detailed information about development processes, challenges, and progress.
- Keeping the community informed about the development process and upcoming changes.

37.
Concepts: feature stability, long-term stability
- Designers discuss the stability of features once implemented.
- Designers discuss features that ensure long-term stability once implemented.

38.
Concepts: design refinement, design adaptation
- Designers discuss refining the software design.
- Designers discuss the need for adapting the software design.

39.
Concepts: product improvement, plan future update
- Designers discuss improvements or changes to the software.
- Designers discuss plans for future updates or improvements to the software.

40.
Concepts: user interface, interface layout decisions
- Designers discuss aspects of the user interface.
- Users and designers discuss decisions about the software's interface layout.

41.
Concepts: feature development, share information about current feature development
- Designers discuss ongoing feature development efforts.
- Designers share information about current feature development.

42.
Concepts: design discussion, feature discussion
- Discussions about design choices and feature considerations.
- Designers discuss various features and their implications.

43.
Concepts: prioritization decision, development prioritization
- A designer outlines the prioritization of different sections or features.
- Instances where designers discuss the prioritization of different features or sections to be developed.

44.
Concepts: promise to invite feedback, promise future consultation
- Promises to invite feedback from the group before starting new features.
- Promises to gather opinions from the group before starting new features.

45.
Concepts: project planning, opinion gathering
- A designer discusses gathering opinions before starting a new project phase.
- A designer mentions plans to gather opinions before starting a new feature.

46.
Concepts: announce future consultation, community needs acknowledgment
- A designer announces plans for future consultation with the community.
- A designer acknowledges the community's needs and discusses future plans to address them.

47.
Concepts: consultation, consulting community
- Designers consult the community for input on specific design or feature decisions.
- Designers consult the community for opinions or feedback on specific issues.

48.
Concepts: seeking input, seeking community input
- A designer seeks input or suggestions from the community.
- A designer seeks opinions or feedback from the community before proceeding with a task.

49.
Concepts: future planning, future planning and development
- Designers discuss future plans or potential developments.
- Designers discuss future plans and development efforts.

50.
Concepts: future design plan, future design plans/considerations
- A designer outlines plans for future design or feature development.
- A designer shares future design plans or considerations.

51.
Concepts: confirm professional role, teacher role confirmation
- A user confirms their professional role.
- A user confirms their role as a teacher.

52.
Concepts: question about identity, ask about user's professional background
- A designer inquires about the professional background of a user.
- A designer asks about a user's professional background to provide appropriate support.

53.
Concepts: craftsmanship, acknowledge craftsmanship
- A user appreciates the craftsmanship and attention to detail in the platform.
- A user acknowledges the craftsmanship or quality of the software.

54.
Concepts: appreciation, user appreciation
- A user expresses appreciation or thanks.
- Expressions of thanks or appreciation from users.

55.
Concepts: feature appreciation, appreciation of features
- Users express appreciation for specific features or ideas.
- A user appreciates specific features of the platform.

56.
Concepts: usability and practicality, highlight practicality
- User comments on the ease of use and practicality of the software.
- Users express appreciation for the software's practical usability compared to other software.

57.
Concepts: praise software, software effectiveness, user satisfaction
- A user praises the software for its practicality or effectiveness.
- A user comments on the effectiveness of the software in practical use.
- A user expresses satisfaction with the software's practicality and features.

58.
Concepts: compliment on 3d effect, compliment software's 3d effect
- Compliments from users about the 3D effects of the software.
- A user compliments the software's 3D effects.

59.
Concepts: positive feedback, software compliments, share positive feedback
- Users provide positive feedback about the software.
- Users expressing positive feedback about the software.
- A user shares positive feedback about the software.

60.
Concepts: software comparison, comparison to similar apps
- A user compares the software favorably to other applications.
- A user compares the software favorably to other similar applications.

61.
Concepts: compare with other software, comparative feedback
- Users compare the software to other similar software, highlighting differences.
- Users provide feedback by comparing the software to other similar tools, highlighting its strengths and weaknesses.

62.
Concepts: illustrate classroom success, describe students' positive responses in class
- Users describe successful experiences using the software in a classroom setting.
- Users describe positive responses from students when using the software in class.

63.
Concepts: user reviews, user experience
- Users provide reviews or opinions about the software.
- Instances where users share their experiences or opinions about using the software.

64.
Concepts: context of use, usability and context of use
- Instances where users describe the specific contexts in which they use the software.
- Discussions about how the software is used in different contexts and its usability.
===
---
Definitions for each code (64 in total):
1.
Concepts: visual update, share visual update
Relationship: Sharing visual updates with the community.
Criteria: A designer shares visual updates or previews with the community.
Phrase: Share visual updates

2.
Concepts: update preview, feature preview
Relationship: Previewing upcoming features and updates.
Criteria: A designer provides a preview of upcoming features or updates.
Phrase: Preview upcoming features

3.
Concepts: update description, describe update scope
Relationship: Describing the extent or content of an update.
Criteria: A designer describes the scope or extent of an update.
Phrase: Describe update scope

4.
Concepts: list new features, listing feature updates and bug fixes
Relationship: Listing new features, adjustments, and bug fixes.
Criteria: A designer lists updates, new features, and bug fixes in the software.
Phrase: List new features and fixes

5.
Concepts: detail specific updates, version update notes
Relationship: Providing detailed notes on updates and new features.
Criteria: A designer provides detailed notes on version updates and new features.
Phrase: Detail version updates

6.
Concepts: internal update, announce component update
Relationship: Announcing changes in component properties.
Criteria: A designer announces updates to component properties.
Phrase: Announce component updates

7.
Concepts: product update, technical updates
Relationship: Providing information about software updates or changes.
Criteria: Designers provide updates or technical changes to the Physics Lab tool.
Phrase: Provide technical updates

8.
Concepts: updates, feature update
Relationship: Announcing new features, updates, or bug fixes.
Criteria: Designers announce new features, updates, or bug fixes based on user input.
Phrase: Announce feature updates

9.
Concepts: update notification, inform about new version availability
Relationship: Informing the community about new version availability.
Criteria: A designer informs the community about the availability of a new version.
Phrase: Notify new version availability

10.
Concepts: software update, product iteration, version update announcement
Relationship: Announcing software updates and new versions.
Criteria: A designer announces the release of a new version and its updates.
Phrase: Announce software updates

11.
Concepts: feature release, new feature announcement, software release
Relationship: Announcing the release of new features or software versions.
Criteria: Designers announce the release of a new software version and its features.
Phrase: Announce new features

12.
Concepts: inform about changes, communication of updates
Relationship: Communicating updates and changes to users.
Criteria: Designers inform users about upcoming changes or updates.
Phrase: Communicate updates

13.
Concepts: provide update, software update announcement
Relationship: Providing updates about software versions and features.
Criteria: Designers provide updates on the status or release of new versions of the software.
Phrase: Provide software updates

14.
Concepts: user communication, community communication
Relationship: Communicating updates to the community.
Criteria: A designer communicates with the community about new releases and updates.
Phrase: Communicate with community

15.
Concepts: community update, community announcement
Relationship: Providing updates or announcements to the community.
Criteria: Designers provide updates or announcements about the software to the community.
Phrase: Announce community updates

16.
Concepts: announcement, announcement of plans
Relationship: Announcing development plans or updates.
Criteria: A designer announces plans for future updates or features.
Phrase: Announce development plans

17.
Concepts: announce upcoming updates, update announcement
Relationship: Announcing upcoming updates or features.
Criteria: Designers provide information about upcoming updates and new features.
Phrase: Announce upcoming updates

18.
Concepts: share development plans, share info about development update
Relationship: Sharing development plans or updates with the community.
Criteria: Designers share detailed information about development updates.
Phrase: Share development plans

19.
Concepts: progress updates, progress update
Relationship: Updating the community on development progress.
Criteria: Designers update the community on the progress of development or upcoming releases.
Phrase: Provide progress updates

20.
Concepts: status update, status information
Relationship: Providing updates on project or feature status.
Criteria: Designers provide visual or textual updates about the current status of development.
Phrase: Provide status updates

21.
Concepts: release schedule, communicate release plans, version release management
Relationship: Communicating plans for future software releases.
Criteria: Designers inform users about the schedule and process for releasing new versions.
Phrase: Communicate release plans

22.
Concepts: update schedule, share update timeline
Relationship: Providing a schedule for upcoming updates.
Criteria: A designer shares the timeline for an upcoming update.
Phrase: Share update timeline

23.
Concepts: give a timeline for release, give a timeline of feature development
Relationship: Providing a timeline for feature or update release.
Criteria: Designers provide a timeline for the development and release of specific features.
Phrase: Provide release timeline

24.
Concepts: feature list, upcoming features list
Relationship: Listing features to be included in future updates.
Criteria: A designer lists features that will be included in future updates.
Phrase: List upcoming features

25.
Concepts: plan feature development, feature implementation, explanation of upcoming features
Relationship: Discussing future feature implementation and availability.
Criteria: A designer discusses and explains the implementation of features in future updates.
Phrase: Discuss feature implementation

26.
Concepts: promise future feature, promising it will realize, promise a future perfection of a feature
Relationship: Promising future feature implementation or perfection.
Criteria: A designer assures users that a feature will be implemented or perfected in the future.
Phrase: Promise future features

27.
Concepts: testing phase, clarify testing status
Relationship: Indicating the testing phase of a feature or version.
Criteria: A designer clarifies that a version or feature is currently in the testing phase.
Phrase: Clarify testing status

28.
Concepts: designer confirmation, confirm upcoming update, confirm future implementation, confirm feature update
Relationship: Confirming a feature or update.
Criteria: A designer confirms the future implementation or timeline of a feature or update.
Phrase: Confirm feature update

29.
Concepts: feature simplification, suggest simplification
Relationship: Suggesting simplification of a feature.
Criteria: Designers suggest simplifying the software design or features.
Phrase: Suggest feature simplification

30.
Concepts: design thoughts, simplification and refinement in design
Relationship: Discussing thoughts on design simplification and refinement.
Criteria: A designer shares thoughts on simplifying and refining the design.
Phrase: Discuss design simplification

31.
Concepts: reflection on experiences, reflect on previous experience, reflect on past experience
Relationship: Reflecting on past experiences.
Criteria: Designers reflect on their experiences or past attempts to provide context or solutions.
Phrase: Reflect on past experiences

32.
Concepts: design principles, explain design philosophy
Relationship: Explaining the principles guiding the software's design.
Criteria: A designer explains the principles or philosophy guiding the software's design.
Phrase: Explain design principles

33.
Concepts: explanation, feature explanation, introduce feature functions
Relationship: Explaining feature functionality.
Criteria: A designer explains the functionality of a feature with examples.
Phrase: Explain feature functionality

34.
Concepts: example of function, explain functionality
Relationship: Illustrating feature functions with examples.
Criteria: Giving examples to illustrate the functions of a feature.
Phrase: Illustrate feature functions

35.
Concepts: explain delay, give reason for delay
Relationship: Explaining reasons for delays.
Criteria: Designers explain delays or reasons for not meeting expectations.
Phrase: Explain delays

36.
Concepts: transparency, development transparency
Relationship: Providing transparent updates on development.
Criteria: Designers provide detailed information about development processes, challenges, and progress.
Phrase: Ensure development transparency

37.
Concepts: feature stability, long-term stability
Relationship: Discussing the stability of features.
Criteria: Designers discuss features that ensure long-term stability once implemented.
Phrase: Discuss feature stability

38.
Concepts: design refinement, design adaptation
Relationship: Discussing refining and adapting the software design.
Criteria: Designers discuss refining and adapting the software design.
Phrase: Discuss design refinement

39.
Concepts: product improvement, plan future update
Relationship: Discussing improvements or changes to the software.
Criteria: Designers discuss plans for future updates or improvements to the software.
Phrase: Plan product improvements

40.
Concepts: user interface, interface layout decisions
Relationship: Discussing user interface aspects and layout decisions.
Criteria: Users and designers discuss decisions about the software's interface layout.
Phrase: Discuss interface layout

41.
Concepts: feature development, share information about current feature development
Relationship: Sharing information about ongoing feature development.
Criteria: Designers share information about current feature development efforts.
Phrase: Share feature development

42.
Concepts: design discussion, feature discussion
Relationship: Discussing design choices and feature considerations.
Criteria: Designers discuss various features and their implications.
Phrase: Discuss design choices

43.
Concepts: prioritization decision, development prioritization
Relationship: Outlining the prioritization of features.
Criteria: Designers discuss the prioritization of different features or sections to be developed.
Phrase: Prioritize feature development

44.
Concepts: promise to invite feedback, promise future consultation
Relationship: Promising to gather feedback before starting new features.
Criteria: Designers promise to invite feedback from the group before starting new features.
Phrase: Promise to gather feedback

45.
Concepts: project planning, opinion gathering
Relationship: Discussing gathering opinions before starting a new project phase.
Criteria: A designer mentions plans to gather opinions before starting a new feature.
Phrase: Plan to gather opinions

46.
Concepts: announce future consultation, community needs acknowledgment
Relationship: Announcing plans for future consultation with the community.
Criteria: A designer acknowledges the community's needs and discusses future plans to address them.
Phrase: Announce future consultation

47.
Concepts: consultation, consulting community
Relationship: Consulting the community for input.
Criteria: Designers consult the community for opinions or feedback on specific issues.
Phrase: Consult community

48.
Concepts: seeking input, seeking community input
Relationship: Seeking input or suggestions from the community.
Criteria: A designer seeks opinions or feedback from the community before proceeding with a task.
Phrase: Seek community input

49.
Concepts: future planning, future planning and development
Relationship: Discussing future plans or potential developments.
Criteria: Designers discuss future plans and development efforts.
Phrase: Discuss future plans

50.
Concepts: future design plan, future design plans/considerations
Relationship: Outlining plans for future design or feature development.
Criteria: A designer shares future design plans or considerations.
Phrase: Share future design plans

51.
Concepts: confirm professional role, teacher role confirmation
Relationship: Confirming a user's professional role.
Criteria: A user confirms their professional role as a teacher.
Phrase: Confirm professional role

52.
Concepts: question about identity, ask about user's professional background
Relationship: Inquiring about a user's professional background.
Criteria: A designer asks about a user's professional background to provide appropriate support.
Phrase: Inquire about professional background

53.
Concepts: craftsmanship, acknowledge craftsmanship
Relationship: Acknowledging the quality of the software.
Criteria: A user appreciates the craftsmanship and attention to detail in the platform.
Phrase: Acknowledge craftsmanship

54.
Concepts: appreciation, user appreciation
Relationship: Expressing appreciation or thanks.
Criteria: A user expresses appreciation or thanks.
Phrase: Express appreciation

55.
Concepts: feature appreciation, appreciation of features
Relationship: Appreciating specific features of the platform.
Criteria: A user appreciates specific features of the platform.
Phrase: Appreciate features

56.
Concepts: usability and practicality, highlight practicality
Relationship: Commenting on the ease of use and practicality.
Criteria: Users express appreciation for the software's practical usability compared to other software.
Phrase: Highlight usability

57.
Concepts: praise software, software effectiveness, user satisfaction
Relationship: Praising the software for its effectiveness and practicality.
Criteria: A user praises the software for its practicality or effectiveness.
Phrase: Praise software effectiveness

58.
Concepts: compliment on 3d effect, compliment software's 3d effect
Relationship: Complimenting the software's 3D effects.
Criteria: A user compliments the software's 3D effects.
Phrase: Compliment 3D effects

59.
Concepts: positive feedback, software compliments, share positive feedback
Relationship: Providing positive feedback about the software.
Criteria: Users provide positive feedback about the software.
Phrase: Share positive feedback

60.
Concepts: software comparison, comparison to similar apps
Relationship: Comparing the software to other applications.
Criteria: A user compares the software favorably to other similar applications.
Phrase: Compare to similar apps

61.
Concepts: compare with other software, comparative feedback
Relationship: Providing feedback by comparing the software to other tools.
Criteria: Users compare the software to other similar software, highlighting differences.
Phrase: Provide comparative feedback

62.
Concepts: illustrate classroom success, describe students' positive responses in class
Relationship: Describing successful classroom experiences using the software.
Criteria: Users describe positive responses from students when using the software in class.
Phrase: Describe classroom success

63.
Concepts: user reviews, user experience
Relationship: Sharing user reviews or opinions about the software.
Criteria: Users provide reviews or opinions about the software.
Phrase: Share user reviews

64.
Concepts: context of use, usability and context of use
Relationship: Describing the specific contexts and usability of the software.
Criteria: Users describe how the software is used in different contexts and its usability.
Phrase: Describe context of use
---