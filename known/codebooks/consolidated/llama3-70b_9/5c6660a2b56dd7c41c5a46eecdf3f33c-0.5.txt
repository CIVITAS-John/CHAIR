You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (26 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
26. 
Concepts: {Repeat the input 26}
Relationship: {What is logical relationship between concepts in code 26, or N/A if not applicable}
Criteria: {Who did what, and how for code 26}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: expressing concern, expressing frustration
- A user expresses worry or anxiety about a specific issue.
- A user expresses frustration or difficulty with a particular issue or feature.

2.
Concepts: touch screen usage, touch screen feature, informing about touch screens
- A user highlights the importance of touch screen functionality.
- A designer mentions a feature or characteristic specific to touch screens.
- A designer mentions the capabilities or limitations of touch screens in the online community.

3.
Concepts: highlighting technical challenges, highlighting accessibility concerns
- A user highlights technical challenges or limitations.
- User highlights a concern or issue related to accessibility.

4.
Concepts: reporting barriers, identifying usability issue, identifying software gaps
- A user reports a barrier or obstacle they are facing while using the software.
- A user identifies a usability issue or problem with the software.
- A user identifies gaps or limitations in the current software.

5.
Concepts: compatibility discussion, system compatibility concern, suggesting system compatibility
- Speculating or discussing compatibility with different systems or devices.
- A person expresses concern about the compatibility of a system or tool with specific hardware or software.
- User suggests that a particular system should be compatible.

6.
Concepts: compatibility answer, operating system compatibility
- Answering questions about compatibility or technical issues
- User mentions compatibility with a specific operating system.

7.
Concepts: clarifying system requirements, setting technical expectations
- A designer clarifies the system requirements for the software.
- A designer sets or clarifies technical expectations for the software or its compatibility.

8.
Concepts: clarifying technical issues, clarifying platform differences
- A designer clarifies technical issues or limitations of the platform.
- Designer clarifies differences between platforms or versions.

9.
Concepts: theoretical system compatibility, theoretical compatibility requirements
- Designer theorizes about system compatibility.
- A designer or user mentions software compatibility requirements or technical specifications.

10.
Concepts: discussing compatibility, discuss system compatibility
- A designer discusses compatibility issues and future potential issues.
- Designers discuss compatibility with older systems or consider system compatibility for older systems.

11.
Concepts: setting hardware expectations, specifying hardware requirements
- Setting expectations or requirements for hardware compatibility or specifications.
- Designer specifies hardware requirements, such as compatibility with certain machines.

12.
Concepts: multiple platform availability, offering support for different platforms
- A designer mentions the availability of multiple platforms or resources.
- The designer offers support or availability of the software on different platforms.

13.
Concepts: multi-platform support request, expressing interest in cross-platform access
- User requests support for multiple platforms.
- Users express interest in cross-platform functionality or accessing the software on multiple platforms.

14.
Concepts: specifying pc version, clarifying version type
- The designer specifies the PC version in the group.
- A designer clarifies the type of version being referred to (e.g., PC version).

15.
Concepts: demonstrating platform specific interest, expressing interest in specific features
- User shows interest in a specific platform or version.
- Users express interest in specific features or versions, such as the PC version.

16.
Concepts: inquiring about pc version, revealing potential usability challenges
- A user inquires about the availability of a PC version of the platform.
- A user inquires about the PC version, revealing potential usability challenges.

17.
Concepts: providing feature details, component explanation, explaining technical requirements
- A designer provides details about a feature or functionality of Physics Lab.
- Designer 1 provides information or explanations about specific components or tools within the Physics Lab.
- A designer explains technical requirements or specifications for the Physics Lab.

18.
Concepts: physics lab focus, outlining focus areas
- A statement is made about the focus or priority of the Physics Lab.
- Designer outlines focus areas or priorities for the Physics Lab.

19.
Concepts: explain design goals, explain focus on domains
- Designers explain the design goals or philosophy behind the Physics Lab, focusing on education.
- Designers explain the focus of Physics Lab on specific domains, such as electricity and mechanics.

20.
Concepts: addressing constraints, providing context for design constraints
- A designer responds to a user's constraint or limitation, adapting to user constraints or limitations.
- Users provide context for design constraints due to external factors.

21.
Concepts: interaction limitation, communicating technical limitations
- Designer acknowledges limitations or constraints of the system.
- The designer communicates technical limitations directly to the user.

22.
Concepts: explaining dependencies, justifying limitations, explaining system limitations
- Designer explains dependencies or limitations that affect the development process.
- A designer explains or justifies the limitations or constraints of a feature or experiment.
- A designer explains limitations or issues with existing systems or infrastructure.

23.
Concepts: discussing limitations, explaining feature limitations
- The speaker discusses the limitations of the solution or software.
- The quote explains limitations or restrictions of a feature or component.

24.
Concepts: acknowledges limitations, sharing technical constraints, highlight technical limitations
- A designer acknowledges current limitations or issues with the Physics Lab.
- A user shares technical constraints or limitations that affect their experience with the Physics Lab.
- Designers highlight technical limitations or constraints of the Physics Lab software or its features.

25.
Concepts: consider practical constraints, discuss technical considerations, considers development limitations
- Designers consider practical constraints or limitations that affect the platform's development.
- Designers discuss technical considerations or limitations, considering technical requirements.
- Designers discuss or consider limitations, such as internet access or security measures, when developing the software.

26.
Concepts: shares development insights, expressing development difficulties and challenges
- A designer provides insight into the development process or challenges.
- A designer expresses difficulty or challenges in development.
===
Here are the definitions for each code:

---
1.
Concepts: expressing concern, expressing frustration
Relationship: The two concepts are related as they both describe negative emotions expressed by users.
Criteria: A user expresses worry, anxiety, frustration, or difficulty about a specific issue.
Phrase: Expressing negative emotions.

2.
Concepts: touch screen usage, touch screen feature, informing about touch screens
Relationship: The concepts are related as they all describe aspects of touch screen functionality.
Criteria: A user or designer discusses or highlights the importance of touch screen functionality or its features.
Phrase: Discussing touch screen functionality.

3.
Concepts: highlighting technical challenges, highlighting accessibility concerns
Relationship: The concepts are related as they both describe challenges or limitations.
Criteria: A user highlights technical challenges, limitations, or accessibility concerns.
Phrase: Highlighting challenges.

4.
Concepts: reporting barriers, identifying usability issue, identifying software gaps
Relationship: The concepts are related as they all describe issues or problems with the software.
Criteria: A user reports barriers, identifies usability issues, or gaps in the software.
Phrase: Reporting software issues.

5.
Concepts: compatibility discussion, system compatibility concern, suggesting system compatibility
Relationship: The concepts are related as they all describe aspects of system compatibility.
Criteria: Users or designers discuss, express concern about, or suggest system compatibility.
Phrase: Discussing system compatibility.

6.
Concepts: compatibility answer, operating system compatibility
Relationship: The concepts are related as they both describe answers or information about compatibility.
Criteria: A user or designer answers questions about compatibility or mentions operating system compatibility.
Phrase: Providing compatibility information.

7.
Concepts: clarifying system requirements, setting technical expectations
Relationship: The concepts are related as they both describe setting or clarifying technical aspects.
Criteria: A designer clarifies system requirements or sets technical expectations for the software.
Phrase: Clarifying technical aspects.

8.
Concepts: clarifying technical issues, clarifying platform differences
Relationship: The concepts are related as they both describe clarification of technical aspects.
Criteria: A designer clarifies technical issues or platform differences.
Phrase: Clarifying technical issues.

9.
Concepts: theoretical system compatibility, theoretical compatibility requirements
Relationship: The concepts are related as they both describe theoretical aspects of compatibility.
Criteria: A designer or user theorizes about system compatibility or mentions technical specifications.
Phrase: Theorizing about compatibility.

10.
Concepts: discussing compatibility, discuss system compatibility
Relationship: The concepts are related as they both describe discussions about compatibility.
Criteria: Designers discuss compatibility issues or future potential issues.
Phrase: Discussing compatibility.

11.
Concepts: setting hardware expectations, specifying hardware requirements
Relationship: The concepts are related as they both describe setting or specifying technical aspects.
Criteria: A designer sets expectations or specifies hardware requirements for compatibility.
Phrase: Specifying hardware requirements.

12.
Concepts: multiple platform availability, offering support for different platforms
Relationship: The concepts are related as they both describe availability or support for multiple platforms.
Criteria: A designer mentions or offers support for multiple platforms or resources.
Phrase: Offering multi-platform support.

13.
Concepts: multi-platform support request, expressing interest in cross-platform access
Relationship: The concepts are related as they both describe requests or interest in multi-platform functionality.
Criteria: Users request support for multiple platforms or express interest in cross-platform access.
Phrase: Requesting multi-platform support.

14.
Concepts: specifying pc version, clarifying version type
Relationship: The concepts are related as they both describe specifying or clarifying version information.
Criteria: A designer specifies the PC version or clarifies the type of version being referred to.
Phrase: Specifying version information.

15.
Concepts: demonstrating platform specific interest, expressing interest in specific features
Relationship: The concepts are related as they both describe interest in specific aspects of the platform.
Criteria: Users show interest in a specific platform or version or express interest in specific features.
Phrase: Expressing platform-specific interest.

16.
Concepts: inquiring about pc version, revealing potential usability challenges
Relationship: The concepts are related as they both describe inquiring about the PC version.
Criteria: A user inquires about the availability of a PC version, revealing potential usability challenges.
Phrase: Inquiring about PC version.

17.
Concepts: providing feature details, component explanation, explaining technical requirements
Relationship: The concepts are related as they all describe providing information about the platform.
Criteria: A designer provides details about a feature, explains components, or explains technical requirements.
Phrase: Providing feature information.

18.
Concepts: physics lab focus, outlining focus areas
Relationship: The concepts are related as they both describe the focus or priority of the Physics Lab.
Criteria: A statement is made about the focus or priority of the Physics Lab, outlining focus areas.
Phrase: Outlining Physics Lab focus.

19.
Concepts: explain design goals, explain focus on domains
Relationship: The concepts are related as they both describe explaining the design goals or philosophy.
Criteria: Designers explain the design goals or philosophy, focusing on education, or explain the focus on specific domains.
Phrase: Explaining design goals.

20.
Concepts: addressing constraints, providing context for design constraints
Relationship: The concepts are related as they both describe addressing or providing context for constraints.
Criteria: A designer responds to user constraints or users provide context for design constraints.
Phrase: Addressing design constraints.

21.
Concepts: interaction limitation, communicating technical limitations
Relationship: The concepts are related as they both describe limitations or constraints.
Criteria: A designer acknowledges limitations or communicates technical limitations.
Phrase: Communicating technical limitations.

22.
Concepts: explaining dependencies, justifying limitations, explaining system limitations
Relationship: The concepts are related as they all describe explaining or justifying limitations.
Criteria: A designer explains dependencies, justifies limitations, or explains system limitations.
Phrase: Explaining limitations.

23.
Concepts: discussing limitations, explaining feature limitations
Relationship: The concepts are related as they both describe discussing or explaining limitations.
Criteria: The speaker discusses the limitations of the solution or software or explains limitations of a feature.
Phrase: Discussing limitations.

24.
Concepts: acknowledges limitations, sharing technical constraints, highlight technical limitations
Relationship: The concepts are related as they all describe acknowledging or sharing limitations.
Criteria: A designer acknowledges limitations, users share technical constraints, or designers highlight technical limitations.
Phrase: Acknowledging limitations.

25.
Concepts: consider practical constraints, discuss technical considerations, considers development limitations
Relationship: The concepts are related as they all describe considering or discussing limitations.
Criteria: Designers consider practical constraints, discuss technical considerations, or consider development limitations.
Phrase: Considering development limitations.

26.
Concepts: shares development insights, expressing development difficulties and challenges
Relationship: The concepts are related as they both describe sharing insights or expressing difficulties.
Criteria: A designer provides insight into the development process or expresses difficulty or challenges in development.
Phrase: Sharing development insights.