You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (43 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
43. 
Concepts: {Repeat the input 43}
Relationship: {What is logical relationship between concepts in code 43, or N/A if not applicable}
Criteria: {Who did what, and how for code 43}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: seeking clarification, asking clarification questions
- Participants express uncertainty and seek clarification.
- Users ask questions to seek information or clarification.

2.
Concepts: explaining question intentions, asking follow-up questions and providing information
- Participants explain the intention behind follow-up questions.
- Participants ask follow-up questions and provide further information.

3.
Concepts: communication tone, using humor in communication
- Instances where the tone of communication is noted, often informal or humorous.
- Users use humor or textual laughs in their interactions.

4.
Concepts: inquiring about platform availability, expressing interest in software versions
- Users inquire about platform versions and availability of the software.
- Users express interest in specific versions or in using the software.

5.
Concepts: download inquiry, seeking download help
- Instances where inquiries about downloading the software are made.
- Users ask for help and instructions on how to download the software.

6.
Concepts: seeking usage guidance, user assistance request
- Users seek guidance and information on how to use the software.
- A user requests assistance or information about how to perform a task.

7.
Concepts: confirming teacher identity, identifying teacher roles
- Confirming and identifying users as teachers.
- Identifying users as high school or middle school teachers.

8.
Concepts: user role inquiry, inquiring about user roles
- Instances where inquiries about the user's role are made.
- Inquiring about the user's role, background, and identity to understand their context.

9.
Concepts: offering solutions, respond to initial question
- Providing direct answers and solutions to questions or problems.
- Instances where initial questions are responded to with potential solutions.

10.
Concepts: provide visual aid, demonstrating with examples
- Providing visual aids or examples.
- Designers provide examples and use images to help demonstrate or clarify a point.

11.
Concepts: usage instruction, explaining feature usage
- Instances where usage instructions are provided.
- Providing guidance, explanations, and examples on how to use a feature.

12.
Concepts: sharing group resources, promoting group communication
- Participants share resources, such as files or information, with the group.
- Participants share information and promote group communication.

13.
Concepts: welcome, exchange greetings
- Designers welcome users.
- Users and designers greet each other in the community.

14.
Concepts: open communication, encouraging open dialogue
- Instances where open communication is encouraged.
- Inviting users to ask questions, report problems, and fostering open dialogue.

15.
Concepts: encouraging open discussion, encouraging community involvement
- Participants encourage future discussions and problem-solving within the community.
- Participants involve the community in decision-making and encourage participation.

16.
Concepts: engaging positively and expressing gratitude, providing and appreciating positive feedback
- Users engage in positive interactions and express gratitude.
- Users provide positive feedback, which is appreciated and encouraged.

17.
Concepts: praise simulation effect, complimenting software usability
- Users provide positive feedback about the software's simulation effects and ideas.
- Users compliment the software and express satisfaction with its usability.

18.
Concepts: appreciating visual design, acknowledging design effort
- Complimenting and expressing appreciation for the visual design of the software.
- Appreciating and acknowledging the craftsmanship and effort put into the software.

19.
Concepts: apologizing for inconvenience, acknowledging time sensitivity and apologizing
- Designers apologize for any inconvenience caused to users.
- Designers acknowledge time sensitivity and apologize for late messages.

20.
Concepts: promise future perfection, promising future features
- A designer assures that a feature will be perfected in the future.
- Promising the realization or future implementation of a feature or update.

21.
Concepts: inquiring about updates, interest in development progress
- Users inquire about the status or timing of recent or upcoming updates.
- A user shows interest in the development progress and asks about updates.

22.
Concepts: notifying about updates, communicating version updates
- Notifying users about updates and providing version update notes.
- Communicating updates and providing information about the uploaded software version.

23.
Concepts: providing product updates, announcing software updates
- Designers provide information about the current status, updates, and future plans for the software.
- Designers make detailed announcements about new features, updates, and bug fixes in new software versions.

24.
Concepts: preparing for updates, providing release schedules
- Designers prepare users for significant updates by outlining the process and timeline for software updates.
- Designers provide specific dates and timelines for upcoming releases or updates.

25.
Concepts: highlighting student engagement, sharing user and classroom experiences
- Users comment on student engagement with the software.
- Users share their experiences with the software, including its use in classroom settings.

26.
Concepts: discussing educational context, discussing classroom application, discussing school implementation
- Participants discuss the educational context and their experiences using the software.
- Participants discuss the practical application of the software in educational settings.
- Users discuss the implementation of the software and explain school practices.

27.
Concepts: reiterate lack of internet, explaining lack of internet access
- Users reiterate the lack of internet access in schools.
- Users offer reasons and explain the lack of internet access in schools.

28.
Concepts: discussing system limitations, discussing platform constraints
- Discussing and explaining system limitations and why certain issues cannot be solved.
- Explaining focus areas and discussing platform limitations and technical constraints.

29.
Concepts: informing about system requirements, suggesting compatibility checks
- Designers discuss system requirements and inform users about system compatibility issues.
- Designers suggest checking system compatibility and mention potential updates to address compatibility issues.

30.
Concepts: inquiring about user needs, inquiring about user problems
- Expressing and inquiring about user needs or preferences.
- Designers try to understand user needs or problems.

31.
Concepts: proposing design ideas, sharing design information
- Proposing new design ideas and elaborating on suggestions for the software.
- Sharing and following up on information relevant to the design or functionality of the software.

32.
Concepts: making suggestions, justified suggestions
- Making suggestions for using features or methods and inviting user suggestions.
- User input or feedback with justifications for suggested features.

33.
Concepts: addressing user concerns, offering usability solutions
- Addressing user concerns and providing responses to mitigate usability issues.
- Offering solutions or workarounds for compatibility and usability issues.

34.
Concepts: user experience focus, prioritizing user experience
- Users focus on improving user experience.
- Considering and prioritizing user experience in the development process.

35.
Concepts: identifying user needs, potential need identification
- Identifying and confirming that the software aligns with user needs.
- Identifying a potential need or improvement in the software.

36.
Concepts: open to alternatives, offering and seeking alternatives
- Designers express openness to providing alternatives based on user feedback.
- Users offer or seek alternative suggestions or solutions.

37.
Concepts: explaining new features, describing feature usage
- A designer explains new features or functionalities and the capabilities of new components.
- A designer describes usage scenarios, introduces feature functions, and explains usability features.

38.
Concepts: clarifying technical details, detailing technical updates
- Designers explain and provide specific technical details about the software.
- Designers provide detailed notes on new features, components, adjustments, and bug fixes included in an update.

39.
Concepts: discussing input methods, on-screen keyboard functionality
- Designers discuss the need for different input methods, such as soft keyboards.
- Designers discuss the functionality and necessity of on-screen keyboards.

40.
Concepts: avatar customization, improving visual representations
- Designers discuss customization options for user avatars.
- Participants discuss improving avatar quality and managing images.

41.
Concepts: planning future tasks, discussing future planning
- Designers mention tasks or issues to be addressed and outline future design plans.
- Designers discuss future plans, compatibility issues, and the implementation of new features.

42.
Concepts: discussing design focus, collaborative planning
- Designers discuss design ideas and the focus areas of the software.
- Designers and users collaboratively discussing and planning the development of the software.

43.
Concepts: long-term stability, discussing feature stability
- Instances where long-term stability of a feature is discussed.
- Discussing the stability of a feature and the importance of long-term planning.
===
---
Definitions for each code (43 in total):
1.
Concepts: seeking clarification, asking clarification questions
Relationship: Both concepts involve users expressing uncertainty and seeking additional information.
Criteria: Participants express uncertainty and ask questions to seek clarification.
Phrase: Seeking clarification

2.
Concepts: explaining question intentions, asking follow-up questions and providing information
Relationship: Both concepts involve participants explaining their intentions and asking additional questions to gather more information.
Criteria: Participants explain the intention behind their questions and ask follow-up questions while providing further information.
Phrase: Explaining and inquiring further

3.
Concepts: communication tone, using humor in communication
Relationship: Both concepts relate to the tone of communication, often characterized by humor.
Criteria: Users employ an informal or humorous tone in their interactions.
Phrase: Using humor in communication

4.
Concepts: inquiring about platform availability, expressing interest in software versions
Relationship: Both concepts involve users expressing interest and inquiring about the availability of software versions.
Criteria: Users inquire about platform versions and express interest in specific software versions.
Phrase: Inquiring about software versions

5.
Concepts: download inquiry, seeking download help
Relationship: Both concepts involve users seeking assistance with downloading the software.
Criteria: Users ask for help and instructions on how to download the software.
Phrase: Seeking download assistance

6.
Concepts: seeking usage guidance, user assistance request
Relationship: Both concepts involve users seeking guidance and assistance on how to use the software.
Criteria: Users request information and guidance on how to perform tasks using the software.
Phrase: Requesting usage guidance

7.
Concepts: confirming teacher identity, identifying teacher roles
Relationship: Both concepts involve confirming and identifying users as teachers.
Criteria: Users confirm and identify themselves or others as teachers, specifying their roles.
Phrase: Identifying teacher roles

8.
Concepts: user role inquiry, inquiring about user roles
Relationship: Both concepts involve inquiries about the roles and backgrounds of users.
Criteria: Users inquire about the roles, backgrounds, and identities of other users to understand their context.
Phrase: Inquiring about user roles

9.
Concepts: offering solutions, respond to initial question
Relationship: Both concepts involve providing answers and solutions to initial questions or problems.
Criteria: Participants provide direct answers and solutions to questions or problems.
Phrase: Offering solutions

10.
Concepts: provide visual aid, demonstrating with examples
Relationship: Both concepts involve using visual aids and examples to clarify points.
Criteria: Participants provide visual aids and examples to help demonstrate or clarify a point.
Phrase: Demonstrating with visual aids

11.
Concepts: usage instruction, explaining feature usage
Relationship: Both concepts involve providing instructions and explanations on how to use features.
Criteria: Participants provide guidance and explanations on how to use specific features.
Phrase: Explaining feature usage

12.
Concepts: sharing group resources, promoting group communication
Relationship: Both concepts involve sharing resources and promoting communication within the group.
Criteria: Participants share resources and promote communication within the group.
Phrase: Sharing resources and promoting communication

13.
Concepts: welcome, exchange greetings
Relationship: Both concepts involve welcoming and greeting each other in the community.
Criteria: Participants welcome and greet each other in the community.
Phrase: Exchanging greetings

14.
Concepts: open communication, encouraging open dialogue
Relationship: Both concepts involve encouraging open communication and dialogue.
Criteria: Participants invite open communication and encourage users to ask questions and report problems.
Phrase: Encouraging open dialogue

15.
Concepts: encouraging open discussion, encouraging community involvement
Relationship: Both concepts involve encouraging discussions and community involvement.
Criteria: Participants encourage discussions and involve the community in decision-making and participation.
Phrase: Encouraging community involvement

16.
Concepts: engaging positively and expressing gratitude, providing and appreciating positive feedback
Relationship: Both concepts involve positive interactions and expressions of gratitude.
Criteria: Participants engage positively, express gratitude, and provide and appreciate positive feedback.
Phrase: Expressing gratitude and positive feedback

17.
Concepts: praise simulation effect, complimenting software usability
Relationship: Both concepts involve providing positive feedback about the software's simulation effects and usability.
Criteria: Users provide positive feedback about the software's simulation effects and usability.
Phrase: Complimenting software usability

18.
Concepts: appreciating visual design, acknowledging design effort
Relationship: Both concepts involve expressing appreciation for the visual design and effort put into the software.
Criteria: Participants appreciate and acknowledge the visual design and effort put into the software.
Phrase: Appreciating visual design

19.
Concepts: apologizing for inconvenience, acknowledging time sensitivity and apologizing
Relationship: Both concepts involve apologizing for inconvenience and acknowledging time sensitivity.
Criteria: Designers apologize for any inconvenience and acknowledge time sensitivity.
Phrase: Apologizing for inconvenience

20.
Concepts: promise future perfection, promising future features
Relationship: Both concepts involve promising future improvements or features.
Criteria: Designers assure users that features will be perfected or implemented in the future.
Phrase: Promising future improvements

21.
Concepts: inquiring about updates, interest in development progress
Relationship: Both concepts involve users inquiring about updates and showing interest in development progress.
Criteria: Users inquire about updates and express interest in the development progress.
Phrase: Inquiring about updates

22.
Concepts: notifying about updates, communicating version updates
Relationship: Both concepts involve notifying users about updates and providing version update notes.
Criteria: Participants notify users about updates and provide information about the software version.
Phrase: Communicating updates

23.
Concepts: providing product updates, announcing software updates
Relationship: Both concepts involve providing detailed announcements about software updates.
Criteria: Designers provide detailed announcements about new features, updates, and bug fixes.
Phrase: Announcing software updates

24.
Concepts: preparing for updates, providing release schedules
Relationship: Both concepts involve preparing users for updates and providing release schedules.
Criteria: Designers prepare users for updates by outlining the process and timeline.
Phrase: Providing release schedules

25.
Concepts: highlighting student engagement, sharing user and classroom experiences
Relationship: Both concepts involve commenting on student engagement and sharing classroom experiences.
Criteria: Users highlight student engagement and share their experiences with the software in classroom settings.
Phrase: Sharing classroom experiences

26.
Concepts: discussing educational context, discussing classroom application, discussing school implementation
Relationship: All concepts involve discussing the educational context and application of the software.
Criteria: Participants discuss the educational context, classroom application, and school implementation of the software.
Phrase: Discussing educational application

27.
Concepts: reiterate lack of internet, explaining lack of internet access
Relationship: Both concepts involve explaining and reiterating the lack of internet access in schools.
Criteria: Users explain and reiterate the lack of internet access in schools.
Phrase: Explaining lack of internet access

28.
Concepts: discussing system limitations, discussing platform constraints
Relationship: Both concepts involve discussing system limitations and platform constraints.
Criteria: Participants discuss system limitations and platform constraints.
Phrase: Discussing system limitations

29.
Concepts: informing about system requirements, suggesting compatibility checks
Relationship: Both concepts involve informing users about system requirements and suggesting compatibility checks.
Criteria: Designers inform users about system requirements and suggest compatibility checks.
Phrase: Informing about system requirements

30.
Concepts: inquiring about user needs, inquiring about user problems
Relationship: Both concepts involve inquiring about user needs and problems.
Criteria: Designers inquire about user needs and problems to understand their preferences.
Phrase: Inquiring about user needs

31.
Concepts: proposing design ideas, sharing design information
Relationship: Both concepts involve proposing and sharing design ideas and information.
Criteria: Participants propose design ideas and share relevant information about the software's design.
Phrase: Proposing design ideas

32.
Concepts: making suggestions, justified suggestions
Relationship: Both concepts involve making suggestions and providing justifications for them.
Criteria: Users make suggestions and provide justifications for suggested features.
Phrase: Making justified suggestions

33.
Concepts: addressing user concerns, offering usability solutions
Relationship: Both concepts involve addressing user concerns and offering solutions to usability issues.
Criteria: Participants address user concerns and offer solutions to usability issues.
Phrase: Offering usability solutions

34.
Concepts: user experience focus, prioritizing user experience
Relationship: Both concepts involve focusing on and prioritizing user experience.
Criteria: Participants focus on improving and prioritizing user experience.
Phrase: Prioritizing user experience

35.
Concepts: identifying user needs, potential need identification
Relationship: Both concepts involve identifying and confirming user needs.
Criteria: Participants identify and confirm that the software aligns with user needs.
Phrase: Identifying user needs

36.
Concepts: open to alternatives, offering and seeking alternatives
Relationship: Both concepts involve being open to and seeking alternative suggestions or solutions.
Criteria: Participants express openness to alternatives and offer or seek alternative suggestions.
Phrase: Offering and seeking alternatives

37.
Concepts: explaining new features, describing feature usage
Relationship: Both concepts involve explaining and describing new features and their usage.
Criteria: Designers explain new features and describe their usage scenarios and functionalities.
Phrase: Explaining new features

38.
Concepts: clarifying technical details, detailing technical updates
Relationship: Both concepts involve providing specific technical details and updates about the software.
Criteria: Designers clarify technical details and provide detailed notes on updates and new features.
Phrase: Detailing technical updates

39.
Concepts: discussing input methods, on-screen keyboard functionality
Relationship: Both concepts involve discussing input methods and the functionality of on-screen keyboards.
Criteria: Designers discuss the need for different input methods and the functionality of on-screen keyboards.
Phrase: Discussing input methods

40.
Concepts: avatar customization, improving visual representations
Relationship: Both concepts involve discussing customization options and improving visual representations.
Criteria: Participants discuss customization options for avatars and improving their visual quality.
Phrase: Improving avatar customization

41.
Concepts: planning future tasks, discussing future planning
Relationship: Both concepts involve discussing and planning future tasks and design plans.
Criteria: Designers discuss future tasks, compatibility issues, and the implementation of new features.
Phrase: Discussing future planning

42.
Concepts: discussing design focus, collaborative planning
Relationship: Both concepts involve discussing design ideas and collaboratively planning the software's development.
Criteria: Designers and users collaboratively discuss and plan the software's development.
Phrase: Collaborative design planning

43.
Concepts: long-term stability, discussing feature stability
Relationship: Both concepts involve discussing the long-term stability of features.
Criteria: Participants discuss the stability of features and the importance of long-term planning.
Phrase: Discussing feature stability
---