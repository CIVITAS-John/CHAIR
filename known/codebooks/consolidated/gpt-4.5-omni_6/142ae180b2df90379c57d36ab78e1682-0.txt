You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (19 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
19. 
Concepts: {Repeat the input 19}
Relationship: {What is logical relationship between concepts in code 19, or N/A if not applicable}
Criteria: {Who did what, and how for code 19}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: indicate ongoing updates, indicating future possibilities
- Designers indicate that updates or work on features are in progress.
- Designers hint at and promise future features or updates.

2.
Concepts: feature roadmap, previewing features
- Designers outlining the roadmap or priorities for future feature development.
- Designers list and preview features planned for future updates.

3.
Concepts: announce future consultation, consulting the community
- Designers announce plans for future consultations with the community.
- Designers consult the community and gather opinions or feedback before making design decisions.

4.
Concepts: announce development plans, share future development plans
- Participants announce development plans or share information about updates and upcoming features.
- Participants discuss and share information about future development goals and plans.

5.
Concepts: highlight practicality, highlighting applications
- A participant highlights the practical benefits of the software.
- Participants provide examples and highlight practical applications of features.

6.
Concepts: avatar customization, improve visual representation
- A designer discusses customization of avatars or user profiles.
- Users or designers discuss improving the quality and management of avatars and images.

7.
Concepts: encouraging user feedback, responding to user feedback
- Designers encourage users to provide feedback and suggestions.
- Designers respond to user queries, feedback, or suggestions.

8.
Concepts: discussing design, sharing design insights
- Users and designers discuss visual design and usability of the software.
- Users and designers share information and thoughts on design and solutions.

9.
Concepts: suggesting improvements, providing feedback and suggestions
- Users suggest improvements to design and usability of the software.
- Users provide feedback or suggestions on features and improvements for the software.

10.
Concepts: requesting new features, suggest expansion to mechanics
- Users request new features or improvements related to specific physics concepts or experiments.
- A user suggests expanding the application to include mechanics experiments.

11.
Concepts: explaining development, explaining capabilities
- Designers explain the development process and provide technical explanations.
- Designers explain and inform about component and simulation capabilities.

12.
Concepts: feature guidance, providing usage instructions
- Providing instructions or guidance on using a feature.
- A designer provides guidance or instructions for using features.

13.
Concepts: answer about access, providing download instructions
- A designer provides information about how to access and download resources.
- Users inquire about and designers provide download instructions.

14.
Concepts: discussing compatibility, theorize system compatibility
- Designers discuss, confirm, and consider future system compatibility.
- Designers theorize and discuss the theoretical compatibility of systems.

15.
Concepts: expressing needs, identify potential need
- Users express and discuss their needs for specific features.
- Identification of potential needs or requirements for software features.

16.
Concepts: asking questions, seeking clarification
- Users or designers ask questions to seek information or clarification.
- Participants ask questions to clarify a user's problem or issue.

17.
Concepts: greeting community, emoji greeting
- Users greet or welcome community members.
- A user uses an emoji to greet the community and asks a question.

18.
Concepts: expressive, use emojis to communicate
- Users and designers use expressive language and emojis in their interactions.
- Users engage in conversations using emojis to express emotions or convey sentiments about the application's progress.

19.
Concepts: acknowledgment, appreciation of feedback
- Users acknowledge suggestions and express gratitude for updates and hard work.
- Showing appreciation for user feedback and suggestions.
===
---
Definitions for each code (19 in total):
1.
Concepts: indicate ongoing updates, indicating future possibilities
Relationship: Both concepts involve communication about current and future developments.
Criteria: Designers indicate that updates or work on features are in progress and hint at or promise future features or updates.
Phrase: Indicating ongoing and future updates

2.
Concepts: feature roadmap, previewing features
Relationship: Both concepts involve outlining and previewing future developments.
Criteria: Designers outline the roadmap or priorities for future feature development and list and preview features planned for future updates.
Phrase: Outlining and previewing future features

3.
Concepts: announce future consultation, consulting the community
Relationship: Both concepts involve engaging the community for feedback and consultation.
Criteria: Designers announce plans for future consultations with the community and gather opinions or feedback before making design decisions.
Phrase: Announcing and consulting the community

4.
Concepts: announce development plans, share future development plans
Relationship: Both concepts involve sharing information about future developments.
Criteria: Participants announce development plans or share information about updates and upcoming features and discuss future development goals and plans.
Phrase: Announcing and sharing development plans

5.
Concepts: highlight practicality, highlighting applications
Relationship: Both concepts involve emphasizing the practical benefits and applications of the software.
Criteria: Participants highlight the practical benefits of the software and provide examples of practical applications of features.
Phrase: Highlighting practicality and applications

6.
Concepts: avatar customization, improve visual representation
Relationship: Both concepts involve discussions about improving visual elements.
Criteria: Designers discuss customization of avatars or user profiles and improving the quality and management of avatars and images.
Phrase: Discussing avatar customization and visual improvements

7.
Concepts: encouraging user feedback, responding to user feedback
Relationship: Both concepts involve interaction with user feedback.
Criteria: Designers encourage users to provide feedback and suggestions and respond to user queries, feedback, or suggestions.
Phrase: Encouraging and responding to user feedback

8.
Concepts: discussing design, sharing design insights
Relationship: Both concepts involve conversations about design aspects.
Criteria: Users and designers discuss visual design and usability of the software and share information and thoughts on design and solutions.
Phrase: Discussing and sharing design insights

9.
Concepts: suggesting improvements, providing feedback and suggestions
Relationship: Both concepts involve users providing input on improvements.
Criteria: Users suggest improvements to design and usability of the software and provide feedback or suggestions on features and improvements.
Phrase: Suggesting improvements and providing feedback

10.
Concepts: requesting new features, suggest expansion to mechanics
Relationship: Both concepts involve users requesting new functionalities.
Criteria: Users request new features or improvements related to specific physics concepts or experiments and suggest expanding the application to include mechanics experiments.
Phrase: Requesting new features and expansions

11.
Concepts: explaining development, explaining capabilities
Relationship: Both concepts involve providing explanations about the software.
Criteria: Designers explain the development process and provide technical explanations and inform about component and simulation capabilities.
Phrase: Explaining development and capabilities

12.
Concepts: feature guidance, providing usage instructions
Relationship: Both concepts involve providing instructions on using features.
Criteria: Designers provide guidance or instructions for using features.
Phrase: Providing feature guidance and instructions

13.
Concepts: answer about access, providing download instructions
Relationship: Both concepts involve providing information about accessing resources.
Criteria: Designers provide information about how to access and download resources and respond to user inquiries about download instructions.
Phrase: Providing access and download instructions

14.
Concepts: discussing compatibility, theorize system compatibility
Relationship: Both concepts involve discussions about system compatibility.
Criteria: Designers discuss, confirm, and consider future system compatibility and theorize about the theoretical compatibility of systems.
Phrase: Discussing and theorizing system compatibility

15.
Concepts: expressing needs, identify potential need
Relationship: Both concepts involve identifying and expressing needs for features.
Criteria: Users express and discuss their needs for specific features and identify potential needs or requirements for software features.
Phrase: Expressing and identifying needs

16.
Concepts: asking questions, seeking clarification
Relationship: Both concepts involve seeking information or clarification.
Criteria: Participants ask questions to seek information or clarification and to clarify a user's problem or issue.
Phrase: Asking questions and seeking clarification

17.
Concepts: greeting community, emoji greeting
Relationship: Both concepts involve greeting community members.
Criteria: Users greet or welcome community members and use emojis to greet the community and ask questions.
Phrase: Greeting the community

18.
Concepts: expressive, use emojis to communicate
Relationship: Both concepts involve using expressive language and emojis.
Criteria: Users and designers use expressive language and emojis in their interactions and engage in conversations using emojis to express emotions or convey sentiments.
Phrase: Using expressive language and emojis

19.
Concepts: acknowledgment, appreciation of feedback
Relationship: Both concepts involve showing appreciation for feedback.
Criteria: Users acknowledge suggestions and express gratitude for updates and hard work and show appreciation for user feedback and suggestions.
Phrase: Acknowledging and appreciating feedback
---