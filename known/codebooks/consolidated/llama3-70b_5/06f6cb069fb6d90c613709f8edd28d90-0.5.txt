You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (27 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
27. 
Concepts: {Repeat the input 27}
Relationship: {What is logical relationship between concepts in code 27, or N/A if not applicable}
Criteria: {Who did what, and how for code 27}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: clarifies features, explain existing features
- Clarifying the functionality of an existing feature.
- Explaining or describing an existing feature.

2.
Concepts: informed about simulation options, explanation of simulation details
- The designer informs users about simulation options or features.
- The designer provides details about simulation aspects of the software.

3.
Concepts: emphasizing convenience, emphasize convenience for educators
- A user emphasizes the importance of convenience or ease of use.
- A user emphasizes the importance of convenience or usability for educators or teachers.

4.
Concepts: emphasize user support, emphasizing user guidance
- Emphasizing the importance of user support or resources
- A user emphasizes the importance of user guidance or support.

5.
Concepts: emphasize quality over quantity, advocating for quality over quantity
- Emphasizing the importance of quality over quantity
- User advocates for prioritizing quality over quantity.

6.
Concepts: quality values, quality commitment
- Emphasizing the importance of quality or craftsmanship
- Emphasizing commitment to quality or excellence

7.
Concepts: concept reiteration, reiterate a feature, future feature reiteration
- Reiterating or emphasizing a concept, feature, or idea.
- The designer reiterates or emphasizes a specific feature or functionality.
- Reiterating or re-emphasizing a future feature or plan

8.
Concepts: highlight feature need, emphasize functional requirements
- Highlighting a specific feature or functionality as necessary or important.
- Emphasizing the importance of specific functional requirements.

9.
Concepts: emphasize continuous improvement, foster a shared understanding of improvement
- The designer or users emphasize the need for continuous improvement.
- User expresses a shared understanding of the importance of continuous improvement and refinement.

10.
Concepts: stability priority, emphasize long-term stability, promote long-term stability and usability
- Designer prioritizes stability in design.
- Mention the importance of long-term stability in design choices
- A designer promotes or emphasizes the importance of long-term stability and usability in development.

11.
Concepts: attention to detail, emphasize detailed development
- Designer emphasizes attention to detail or precision.
- Designers emphasize the importance of detailed development, expressing concern for thoroughness.

12.
Concepts: thorough planning, demonstrates thoroughness
- A designer or administrator ensures thoroughness in development or planning.
- Demonstrates thoroughness or attention to detail in development or decision-making.

13.
Concepts: quality advocacy, prioritizing quality
- Designer advocates for quality or excellence in the development process.
- Designers emphasize the importance of quality in the software or service.

14.
Concepts: acknowledge complexity, explaining project complexity
- Designer acknowledges the complexity of a task or issue.
- Designers explain the complexity of a task or project to users.

15.
Concepts: consider usability, considering design implications
- Designers consider or discuss usability implications.
- Designers consider or discuss the implications of a design decision, and consider complex design elements and their implications.

16.
Concepts: consider accessibility, explore accessibility
- The designer considers accessibility in software development.
- A designer explores accessibility considerations for diverse users.

17.
Concepts: software interface design, aim for intuitive design
- Designer considers software interface design.
- A designer aims to design the software to be intuitive or easy to use.

18.
Concepts: software relevance enhancement, enhance relevance of designs
- User or designer enhances the relevance of the software.
- Designer aims to enhance the relevance or applicability of their designs.

19.
Concepts: promote practical applications, promote practical problem solving
- Designers promote practical applications to users.
- Designer promotes practical problem-solving using the application.

20.
Concepts: justifying optimization, emphasizes optimization
- The designer justifies optimization efforts or improvements.
- Designer emphasizes the importance of optimization or refinement of a feature or process.

21.
Concepts: simplifying usage, clarity enhancement
- Designer aims to simplify usage or improve clarity.
- A designer aims to enhance the clarity of a feature or explanation.

22.
Concepts: touch screen importance, touch screen usability consideration
- Users highlight the importance of touch screen usage.
- User considers touch screen usability.

23.
Concepts: input methods emphasis, connection to input methods
- A designer emphasizes the importance of input methods or user interface design.
- A designer connects the usability of a feature with input methods.

24.
Concepts: user-centered design, encouraging user-centered design
- Designing with user needs and feedback in mind
- Designers promote user-centered design, and advocate for design choices that prioritize user-centered design.

25.
Concepts: considering diverse user needs, address diverse user needs in software design
- User suggests or requests features that cater to diverse user needs.
- Acknowledgments or considerations of diverse user needs or requirements.

26.
Concepts: aligning with user needs, connecting features to user needs
- Designers align the software's capabilities with user needs or requirements.
- Designer connects features to user needs.

27.
Concepts: express user needs, expressing comprehension of user needs
- Users express needs to designers.
- Designer communicates understanding of user needs.
===
Here are the definitions for each code:

---
1.
Concepts: clarifies features, explain existing features
Relationship: The concepts are related as they both involve providing information about existing features.
Criteria: Designers provide explanations or descriptions about existing features to clarify their functionality.
Phrase: Explaining existing features

2.
Concepts: informed about simulation options, explanation of simulation details
Relationship: The concepts are related as they both involve providing information about simulation aspects of the software.
Criteria: Designers inform users about simulation options or features and provide details about simulation aspects of the software.
Phrase: Informing about simulation options

3.
Concepts: emphasizing convenience, emphasize convenience for educators
Relationship: The concepts are related as they both involve emphasizing the importance of convenience or ease of use.
Criteria: Users emphasize the importance of convenience or usability, particularly for educators or teachers.
Phrase: Emphasizing convenience

4.
Concepts: emphasize user support, emphasizing user guidance
Relationship: The concepts are related as they both involve emphasizing the importance of user support or resources.
Criteria: Users emphasize the importance of user support or resources, including guidance or resources for users.
Phrase: Emphasizing user support

5.
Concepts: emphasize quality over quantity, advocating for quality over quantity
Relationship: The concepts are related as they both involve prioritizing quality over quantity.
Criteria: Users advocate for prioritizing quality over quantity in the development process.
Phrase: Advocating for quality over quantity

6.
Concepts: quality values, quality commitment
Relationship: The concepts are related as they both involve emphasizing the importance of quality or craftsmanship.
Criteria: Designers emphasize the importance of quality or craftsmanship, and commit to delivering high-quality products.
Phrase: Emphasizing quality commitment

7.
Concepts: concept reiteration, reiterate a feature, future feature reiteration
Relationship: The concepts are related as they all involve reiterating or emphasizing a concept, feature, or idea.
Criteria: Designers reiterate or emphasize a specific feature or functionality, including future plans or ideas.
Phrase: Reiterating concepts

8.
Concepts: highlight feature need, emphasize functional requirements
Relationship: The concepts are related as they both involve highlighting the importance of specific features or functionalities.
Criteria: Users highlight the importance of specific features or functionalities, emphasizing their functional requirements.
Phrase: Highlighting feature needs

9.
Concepts: emphasize continuous improvement, foster a shared understanding of improvement
Relationship: The concepts are related as they both involve emphasizing the importance of continuous improvement.
Criteria: Designers and users emphasize the need for continuous improvement, fostering a shared understanding of its importance.
Phrase: Emphasizing continuous improvement

10.
Concepts: stability priority, emphasize long-term stability, promote long-term stability and usability
Relationship: The concepts are related as they all involve prioritizing stability in design.
Criteria: Designers prioritize stability in design, emphasizing the importance of long-term stability and usability.
Phrase: Prioritizing stability

11.
Concepts: attention to detail, emphasize detailed development
Relationship: The concepts are related as they both involve emphasizing the importance of attention to detail or precision.
Criteria: Designers emphasize attention to detail or precision, ensuring thorough development.
Phrase: Emphasizing attention to detail

12.
Concepts: thorough planning, demonstrates thoroughness
Relationship: The concepts are related as they both involve ensuring thoroughness in development or planning.
Criteria: Designers demonstrate thoroughness in development or planning, ensuring that all aspects are considered.
Phrase: Demonstrating thoroughness

13.
Concepts: quality advocacy, prioritizing quality
Relationship: The concepts are related as they both involve advocating for quality or excellence in development.
Criteria: Designers advocate for quality or excellence in the development process, prioritizing it over other considerations.
Phrase: Advocating for quality

14.
Concepts: acknowledge complexity, explaining project complexity
Relationship: The concepts are related as they both involve acknowledging the complexity of a task or issue.
Criteria: Designers acknowledge the complexity of a task or issue, explaining it to users.
Phrase: Acknowledging complexity

15.
Concepts: consider usability, considering design implications
Relationship: The concepts are related as they both involve considering usability implications in design.
Criteria: Designers consider usability implications in design, discussing complex design elements and their implications.
Phrase: Considering usability

16.
Concepts: consider accessibility, explore accessibility
Relationship: The concepts are related as they both involve considering accessibility in software development.
Criteria: Designers consider accessibility in software development, exploring ways to make it more accessible to diverse users.
Phrase: Considering accessibility

17.
Concepts: software interface design, aim for intuitive design
Relationship: The concepts are related as they both involve designing software interfaces.
Criteria: Designers aim to design software interfaces that are intuitive or easy to use.
Phrase: Designing intuitive interfaces

18.
Concepts: software relevance enhancement, enhance relevance of designs
Relationship: The concepts are related as they both involve enhancing the relevance of software designs.
Criteria: Designers enhance the relevance or applicability of their designs, making them more useful to users.
Phrase: Enhancing software relevance

19.
Concepts: promote practical applications, promote practical problem solving
Relationship: The concepts are related as they both involve promoting practical uses of the software.
Criteria: Designers promote practical applications of the software, encouraging users to use it for problem-solving.
Phrase: Promoting practical applications

20.
Concepts: justifying optimization, emphasizes optimization
Relationship: The concepts are related as they both involve justifying or emphasizing the importance of optimization.
Criteria: Designers justify optimization efforts or improvements, emphasizing their importance.
Phrase: Justifying optimization

21.
Concepts: simplifying usage, clarity enhancement
Relationship: The concepts are related as they both involve simplifying or improving the clarity of software usage.
Criteria: Designers aim to simplify usage or improve clarity, making the software more user-friendly.
Phrase: Simplifying usage

22.
Concepts: touch screen importance, touch screen usability consideration
Relationship: The concepts are related as they both involve considering touch screen usability.
Criteria: Users highlight the importance of touch screen usability, and designers consider its implications.
Phrase: Considering touch screen usability

23.
Concepts: input methods emphasis, connection to input methods
Relationship: The concepts are related as they both involve emphasizing the importance of input methods.
Criteria: Designers emphasize the importance of input methods, connecting them to usability.
Phrase: Emphasizing input methods

24.
Concepts: user-centered design, encouraging user-centered design
Relationship: The concepts are related as they both involve designing with user needs in mind.
Criteria: Designers promote user-centered design, advocating for design choices that prioritize user needs.
Phrase: Encouraging user-centered design

25.
Concepts: considering diverse user needs, address diverse user needs in software design
Relationship: The concepts are related as they both involve considering diverse user needs in software design.
Criteria: Designers acknowledge and address diverse user needs or requirements in software design.
Phrase: Considering diverse user needs

26.
Concepts: aligning with user needs, connecting features to user needs
Relationship: The concepts are related as they both involve aligning software capabilities with user needs.
Criteria: Designers align software capabilities with user needs or requirements, connecting features to user needs.
Phrase: Aligning with user needs

27.
Concepts: express user needs, expressing comprehension of user needs
Relationship: The concepts are related as they both involve expressing or communicating user needs.
Criteria: Users express their needs to designers, and designers communicate their understanding of user needs.
Phrase: Expressing user needs