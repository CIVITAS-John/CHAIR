You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: clarifying existing feature, clarifying existing functionality
- A designer clarifies the functionality of an existing feature.
- The designer clarifies existing functionality or features.

2.
Concepts: feature clarification, functionality clarification, clarifying software features
- The designer clarifies or explains a feature or functionality.
- Clarifying the functionality of a feature.
- A designer explains how a feature or functionality works.
- Designer explains or clarifies a feature or functionality of the software.

3.
Concepts: clarifying usage scenarios, clarifying feature purposes
- Designer clarifies how a feature or component can be used in specific scenarios.
- Designer clarifies the purpose or functionality of a specific feature or tool.

4.
Concepts: explaining touch screen functionality, clarifying touch screen functionality
- A designer explains the functionality of touch screens.
- Designer clarifies the functionality of a specific feature, especially related to touch screens.

5.
Concepts: explain development process, providing software development information
- A designer explains the process or steps involved in developing a feature or design.
- A designer provides information about the software development process.

6.
Concepts: providing details, providing feature details
- Designer provides detailed information about features or components.
- Designer provides details about a specific feature.
- Designers provide explanations of feature details or functionalities

7.
Concepts: describing features, feature development description
- Designer describes a feature or component's functionality.
- Designer describes the development of a feature.

8.
Concepts: explaining feature use, describing feature use
- Designer explains how to use a feature.
- Designer explains how to use a feature or functionality.

9.
Concepts: informs about feature, informing about features
- Designer informs about a feature or functionality.
- Designer informs users about a specific feature or functionality.

10.
Concepts: provide technical information, providing technical details
- Designer provides technical information or explanations about the platform.
- A statement provides technical information or specifications.
- Designer provides technical details or explanations about the platform's features or components.

11.
Concepts: explaining technical requirements, providing technical specifications
- Designer explains technical requirements.
- Designer provides technical specifications or details about a feature.

12.
Concepts: functionality explanation, explaining software functionality
- Designer explains the functionality or features of the software.
- A designer explains the current version or functionality of the software.

13.
Concepts: explaining technical artifacts, sharing technical knowledge
- A designer explains or clarifies technical aspects or artifacts of the software.
- A designer or developer shares technical knowledge or explains a concept related to the software.

14.
Concepts: designer suggests solution, suggests technical solution, suggest potential workaround
- Designer suggests a solution or workaround for a user's problem or issue.
- A designer suggests a technical solution, workaround, or fix to a problem.
- Designer or user suggests a potential workaround or solution to a problem.

15.
Concepts: offer workaround, acknowledge workaround, offering workaround solutions
- A designer offers a temporary solution or workaround to a problem or limitation.
- A designer acknowledges a workaround or a temporary solution to a problem.
- Designer provides an alternative solution to a problem.

16.
Concepts: shares workaround, sharing workarounds, sharing a workaround, sharing workaround
- The designer shares a workaround or solution to a specific problem.
- Designer shares a workaround or trick for accessing a feature or overcoming an obstacle.
- A designer shares a workaround or solution to a technical issue.
- A statement shares a workaround or solution to a technical issue.

17.
Concepts: offers solution, offering solutions, provide solution
- The designer offers a solution to a user's problem or question.
- A designer offers a solution or alternative to a problem or issue.
- A designer provides a solution or answer to a user's problem or question.

18.
Concepts: problem analysis, problem diagnosis
- A designer analyzes or troubleshoots a problem or issue.
- A designer offers a diagnosis or explanation for a problem or issue.

19.
Concepts: problem-solving capabilities, describing problem-solving functionality
- Designer highlights problem-solving capabilities within the application.
- Designer describes problem-solving functionality or features.

20.
Concepts: enable problem solving, promoting problem-solving
- A designer enables or facilitates problem-solving or critical thinking.
- A designer promotes problem-solving or critical thinking in the context of the software or feature.
- The designer promotes problem-solving capabilities within the application.

21.
Concepts: proposing compromise, proposing a compromise
- Designer proposes a compromise in design choices.
- Designer proposes a compromise or alternative solution.

22.
Concepts: proposing dual solution, proposing dual approach
- A designer proposes a dual solution or compromise.
- Designer proposes a dual approach or solution to a problem.

23.
Concepts: proposed solution, solution suggestion
- Proposing potential solutions or workarounds for issues
- Suggesting or proposing a solution or compromise.

24.
Concepts: simplifying design, suggesting design simplification, considering simplification, simplification suggestion
- A designer suggests simplifying a design element or feature.
- Designer suggests simplifying the design or user interface.
- Designer considers simplifying a design aspect.
- Suggesting simplification of a design, feature, or process.

25.
Concepts: aims to simplify, simplification of complexity
- Designer aims to simplify a feature or process.
- Designer simplifies a complex feature or task.

26.
Concepts: intuitive design, aims for intuitive design, designing intuitive interface
- A designer aims to design a product that is intuitive to use without additional instructions.
- Designer aims to create an intuitive design that is easy to use.
- The designer aims to design an intuitive interface or user experience.

27.
Concepts: promoting ease of use, promoting ease of understanding
- A designer promotes ease of use or user experience.
- A designer promotes ease of understanding or simplicity in design.

28.
Concepts: improve usability, improving user experience
- A designer seeks to improve the usability, accessibility, or user experience of the software.
- Designer seeks to improve user experience or usability.

29.
Concepts: identifying user needs, identifying functional requirements
- A designer identifies or recognizes a need for a feature or functionality.
- A designer identifies functional requirements or needs.

30.
Concepts: aligning with user needs, catering to user needs
- Designer aligns design with user needs or requirements.
- A designer prioritizes or caters to the needs of users, especially in terms of functionality or usability.

31.
Concepts: showing interest in user context, expressing interest in user context
- Designer shows interest in the user's context or profession.
- Designer expresses interest in a user's teaching context.

32.
Concepts: acknowledging user context, understanding designer's situation
- Designer acknowledges user context or situation.
- A designer acknowledges or recognizes a user's context or situation.
- A user understands or acknowledges a designer's situation or constraints.
===
Here are the definitions for each code:

---
1.
Concepts: clarifying existing feature, clarifying existing functionality
Relationship: The concepts are related as the designer clarifies the functionality of an existing feature.
Criteria: A designer clarifies the functionality of an existing feature to provide understanding.
Phrase: Clarifying existing features.

2.
Concepts: feature clarification, functionality clarification, clarifying software features
Relationship: The concepts are related as the designer clarifies features or functionality to provide understanding.
Criteria: A designer clarifies features or functionality to provide understanding of software features.
Phrase: Clarifying software features.

3.
Concepts: clarifying usage scenarios, clarifying feature purposes
Relationship: The concepts are related as the designer clarifies how a feature can be used in specific scenarios.
Criteria: A designer clarifies how a feature can be used in specific scenarios to provide understanding.
Phrase: Clarifying feature purposes.

4.
Concepts: explaining touch screen functionality, clarifying touch screen functionality
Relationship: The concepts are related as the designer explains the functionality of touch screens.
Criteria: A designer explains the functionality of touch screens to provide understanding.
Phrase: Explaining touch screen functionality.

5.
Concepts: explain development process, providing software development information
Relationship: The concepts are related as the designer explains the development process to provide information.
Criteria: A designer explains the development process to provide information about software development.
Phrase: Explaining software development.

6.
Concepts: providing details, providing feature details
Relationship: The concepts are related as the designer provides detailed information about features.
Criteria: A designer provides detailed information about features to provide understanding.
Phrase: Providing feature details.

7.
Concepts: describing features, feature development description
Relationship: The concepts are related as the designer describes features or their development.
Criteria: A designer describes features or their development to provide understanding.
Phrase: Describing feature development.

8.
Concepts: explaining feature use, describing feature use
Relationship: The concepts are related as the designer explains how to use a feature.
Criteria: A designer explains how to use a feature to provide understanding.
Phrase: Explaining feature use.

9.
Concepts: informs about feature, informing about features
Relationship: The concepts are related as the designer informs about a feature or functionality.
Criteria: A designer informs about a feature or functionality to provide understanding.
Phrase: Informing about features.

10.
Concepts: provide technical information, providing technical details
Relationship: The concepts are related as the designer provides technical information or explanations.
Criteria: A designer provides technical information or explanations to provide understanding.
Phrase: Providing technical information.

11.
Concepts: explaining technical requirements, providing technical specifications
Relationship: The concepts are related as the designer explains technical requirements or provides specifications.
Criteria: A designer explains technical requirements or provides specifications to provide understanding.
Phrase: Explaining technical requirements.

12.
Concepts: functionality explanation, explaining software functionality
Relationship: The concepts are related as the designer explains software functionality.
Criteria: A designer explains software functionality to provide understanding.
Phrase: Explaining software functionality.

13.
Concepts: explaining technical artifacts, sharing technical knowledge
Relationship: The concepts are related as the designer explains technical aspects or shares knowledge.
Criteria: A designer explains technical aspects or shares knowledge to provide understanding.
Phrase: Explaining technical artifacts.

14.
Concepts: designer suggests solution, suggests technical solution, suggest potential workaround
Relationship: The concepts are related as the designer suggests a solution or workaround.
Criteria: A designer suggests a solution or workaround to address a problem or issue.
Phrase: Suggesting solutions.

15.
Concepts: offer workaround, acknowledge workaround, offering workaround solutions
Relationship: The concepts are related as the designer offers a temporary solution or workaround.
Criteria: A designer offers a temporary solution or workaround to address a problem or limitation.
Phrase: Offering workarounds.

16.
Concepts: shares workaround, sharing workarounds, sharing a workaround, sharing workaround
Relationship: The concepts are related as the designer shares a workaround or solution.
Criteria: A designer shares a workaround or solution to address a problem or issue.
Phrase: Sharing workarounds.

17.
Concepts: offers solution, offering solutions, provide solution
Relationship: The concepts are related as the designer offers a solution to a problem or question.
Criteria: A designer offers a solution to a problem or question to address user needs.
Phrase: Offering solutions.

18.
Concepts: problem analysis, problem diagnosis
Relationship: The concepts are related as the designer analyzes or troubleshoots a problem or issue.
Criteria: A designer analyzes or troubleshoots a problem or issue to identify the cause.
Phrase: Analyzing problems.

19.
Concepts: problem-solving capabilities, describing problem-solving functionality
Relationship: The concepts are related as the designer highlights problem-solving capabilities.
Criteria: A designer highlights problem-solving capabilities to provide understanding.
Phrase: Describing problem-solving capabilities.

20.
Concepts: enable problem solving, promoting problem-solving
Relationship: The concepts are related as the designer enables or facilitates problem-solving.
Criteria: A designer enables or facilitates problem-solving to promote critical thinking.
Phrase: Enabling problem-solving.

21.
Concepts: proposing compromise, proposing a compromise
Relationship: The concepts are related as the designer proposes a compromise in design choices.
Criteria: A designer proposes a compromise to address conflicting requirements or needs.
Phrase: Proposing compromises.

22.
Concepts: proposing dual solution, proposing dual approach
Relationship: The concepts are related as the designer proposes a dual solution or compromise.
Criteria: A designer proposes a dual solution or compromise to address multiple needs or requirements.
Phrase: Proposing dual solutions.

23.
Concepts: proposed solution, solution suggestion
Relationship: The concepts are related as the designer proposes potential solutions or workarounds.
Criteria: A designer proposes potential solutions or workarounds to address a problem or issue.
Phrase: Proposing solutions.

24.
Concepts: simplifying design, suggesting design simplification, considering simplification, simplification suggestion
Relationship: The concepts are related as the designer suggests simplifying a design element or feature.
Criteria: A designer suggests simplifying a design element or feature to improve usability.
Phrase: Simplifying design.

25.
Concepts: aims to simplify, simplification of complexity
Relationship: The concepts are related as the designer aims to simplify a feature or process.
Criteria: A designer aims to simplify a feature or process to improve usability.
Phrase: Simplifying complexity.

26.
Concepts: intuitive design, aims for intuitive design, designing intuitive interface
Relationship: The concepts are related as the designer aims to design an intuitive interface.
Criteria: A designer aims to design an intuitive interface to improve user experience.
Phrase: Designing intuitive interfaces.

27.
Concepts: promoting ease of use, promoting ease of understanding
Relationship: The concepts are related as the designer promotes ease of use or understanding.
Criteria: A designer promotes ease of use or understanding to improve user experience.
Phrase: Promoting ease of use.

28.
Concepts: improve usability, improving user experience
Relationship: The concepts are related as the designer seeks to improve usability or user experience.
Criteria: A designer seeks to improve usability or user experience to address user needs.
Phrase: Improving usability.

29.
Concepts: identifying user needs, identifying functional requirements
Relationship: The concepts are related as the designer identifies user needs or functional requirements.
Criteria: A designer identifies user needs or functional requirements to inform design decisions.
Phrase: Identifying user needs.

30.
Concepts: aligning with user needs, catering to user needs
Relationship: The concepts are related as the designer aligns design with user needs or requirements.
Criteria: A designer aligns design with user needs or requirements to address user needs.
Phrase: Aligning with user needs.

31.
Concepts: showing interest in user context, expressing interest in user context
Relationship: The concepts are related as the designer shows interest in the user's context or profession.
Criteria: A designer shows interest in the user's context or profession to understand user needs.
Phrase: Showing interest in user context.

32.
Concepts: acknowledging user context, understanding designer's situation
Relationship: The concepts are related as the designer acknowledges user context or situation.
Criteria: A designer acknowledges user context or situation to understand user needs.
Phrase: Acknowledging user context.