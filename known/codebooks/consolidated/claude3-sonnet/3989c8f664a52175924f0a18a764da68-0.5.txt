You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between sub-codes. If a sub-code includes another, use the broader one. If sub-codes are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (25 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {A sentence of consolidated criteria 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
25.
Relationship: {The logical relationship between sub-codes in code 25}
Criteria: {A sentence of consolidated criteria 25}
Label: {A consolidated label of code 25}
Category: {2-4 words for code 25}
---
~~~
1. release confirmation, release clarification.
- Confirming the successful release or update of a product version.
- Clarifying or specifying which version or release is being discussed.

2. user support, technical support.
- Offering assistance or support to users encountering issues or problems.
- Providing technical support or assistance for using the software.

3. network policies, network restrictions.
- Policies or rules governing network access or usage in a particular context.
- Restrictions or limitations on network access or connectivity in certain environments.

4. social norm, community norms.
- Adhering to social norms or etiquette in the group.
- Norms or expectations established within the community for communication and behavior.

5. compatibility planning, compatibility confirmation.
- Planning or considering strategies for ensuring compatibility with legacy systems.
- Confirming or verifying compatibility with specific operating systems or versions.

6. system compatibility, compatibility issues.
- Compatibility of the software with different operating systems or system versions.
- Issues or challenges related to compatibility with different systems or configurations.

7. requirements, system requirements.
- Identifying or specifying requirements or necessary features for the software.
- Hardware or system requirements necessary for running the software.

8. hardware limitations, technical limitation.
- Limitations imposed by the hardware capabilities or age of computing devices.
- Limitations or constraints imposed by the technical capabilities of the software.

9. simulation design, simulation requirements.
- Discussing or describing aspects of the simulation design.
- Outlines requirements or specifications for simulations or demonstrations.

10. clarifying scope, clarifying requirements.
- Clarifying the scope or focus areas for the software.
- Seeking clarification or additional details about requirements or specifications.

11. commitment to quality, commitment to improvement.
- Expressing commitment to maintaining high quality standards.
- Expressing commitment or determination to improve or enhance the product.

12. work in progress, communicating work in progress.
- Indicating that a feature is still a work in progress.
- Communicating ongoing work or progress.

13. exam utility, exam mode.
- Usefulness of the software for creating exam content.
- Providing a mode or functionality specific to assessment or exam scenarios.

14. prioritization, content prioritization, platform prioritization.
- Discussing priorities or the relative importance of features or tasks.
- Indicates the prioritization or ordering of content or features for development.
- Prioritizing or focusing on specific platforms or operating systems.

15. roadmap sharing, product roadmap planning.
- Sharing information about the product roadmap or future plans.
- Outlines planned future updates, features or product roadmap.

16. teaching experience, teacher perspective.
- Background and experience in teaching different grade levels.
- Provides the perspective or viewpoint of a teacher or educator.

17. pedagogical design, pedagogical considerations.
- Design choices related to enhancing the pedagogical value or learning experience.
- Considers pedagogical or educational aspects in the design or development of the software.

18. institutional need, institutional context.
- Need stemming from institutional or school initiatives.
- Context or constraints related to institutional settings or environments.

19. student engagement, student experience.
- Student reactions and engagement levels with the software.
- Describing or recounting experiences or scenarios from a student's perspective.

20. user inquiry, inquiring about user issues.
- User inquiring about the software or seeking information.
- Inquiring about issues or problems users faced.

21. user gratitude, user encouragement.
- Expresses gratitude or appreciation from users towards the developers.
- Provides encouragement or positive reinforcement to the developers or team.

22. user control, user empowerment.
- Providing users with control or customization options.
- Empowers or enables users to find solutions or information on their own.

23. appreciating support, gratitude and appreciation.
- Expressing appreciation or gratitude for support or contributions.
- Expressions of thankfulness, praise, or positive acknowledgment towards the software or community.

24. providing input, community input.
- Providing input, feedback, or suggestions.
- Soliciting or incorporating feedback and suggestions from the community.

25. social presence, social expression.
- Establishing a sense of social presence in the group.
- Using emojis or other expressions in communication.
===
---
Categories:
* Product Management
* User Experience
* Technical Aspects  
* Pedagogy and Learning
* Community Dynamics

Definitions for each code (25 in total):

1. 
Relationship: Parallel concepts
Criteria: Relates to confirming or clarifying software releases and versions.
Label: Release Communication
Category: Product Management

2.
Relationship: Sub-codes of user assistance
Criteria: Providing support or assistance to users facing issues or technical problems.
Label: User Support
Category: User Experience

3.  
Relationship: Parallel concepts  
Criteria: Policies or restrictions governing network access or usage.
Label: Network Policies and Restrictions
Category: Technical Aspects

4.
Relationship: Sub-codes of community norms
Criteria: Norms or expected behaviors within the online community.
Label: Community Norms
Category: Community Dynamics

5.
Relationship: Sub-codes of compatibility management  
Criteria: Planning or confirming compatibility with legacy systems or versions.
Label: Compatibility Management
Category: Technical Aspects

6.
Relationship: Parallel concepts
Criteria: Issues or challenges related to software compatibility across systems.
Label: Compatibility Issues
Category: Technical Aspects

7.
Relationship: Sub-codes of system requirements
Criteria: Identifying hardware, software or other requirements for the system.
Label: System Requirements
Category: Technical Aspects

8.
Relationship: Parallel concepts
Criteria: Limitations imposed by hardware capabilities or technical constraints.
Label: Hardware and Technical Limitations
Category: Technical Aspects

9.
Relationship: Sub-codes of simulation design
Criteria: Aspects related to designing simulations or meeting simulation requirements.
Label: Simulation Design and Requirements
Category: Pedagogy and Learning

10.
Relationship: Parallel concepts
Criteria: Clarifying the scope, focus areas, or specific requirements.
Label: Clarifying Scope and Requirements
Category: Product Management

11. 
Relationship: Parallel concepts
Criteria: Expressing commitment to quality standards or product improvement.
Label: Commitment to Quality and Improvement
Category: Product Management

12.
Relationship: Parallel concepts  
Criteria: Indicating ongoing work or communicating progress updates.
Label: Work in Progress Communication
Category: Product Management

13.
Relationship: Parallel concepts
Criteria: Usefulness of the software for assessment or exam scenarios.
Label: Exam Utility
Category: Pedagogy and Learning

14.
Relationship: Sub-codes of prioritization 
Criteria: Discussing priorities or relative importance of features, content, or platforms.
Label: Prioritization
Category: Product Management

15. 
Relationship: Sub-codes of product roadmap
Criteria: Sharing information about planned future updates or product roadmap.
Label: Product Roadmap
Category: Product Management  

16.
Relationship: Sub-codes of educator perspective
Criteria: Providing the viewpoint or experiences of teachers or educators.
Label: Educator Perspective
Category: Pedagogy and Learning

17. 
Relationship: Sub-codes of pedagogical design
Criteria: Design choices aimed at enhancing the pedagogical value or learning experience.
Label: Pedagogical Design
Category: Pedagogy and Learning

18.
Relationship: Sub-codes of institutional context
Criteria: Needs or constraints stemming from institutional or school environments.
Label: Institutional Context
Category: Pedagogy and Learning

19.
Relationship: Sub-codes of student experience
Criteria: Describing student engagement levels or experiences with the software.
Label: Student Experience
Category: User Experience

20.
Relationship: Parallel concepts
Criteria: Users inquiring about the software or reporting issues they faced.
Label: User Inquiries
Category: User Experience

21.
Relationship: Sub-codes of user appreciation
Criteria: Users expressing gratitude, appreciation or encouragement towards the team.
Label: User Appreciation
Category: Community Dynamics

22.
Relationship: Sub-codes of user empowerment
Criteria: Providing users with control, customization options or self-help resources.
Label: User Empowerment
Category: User Experience

23.
Relationship: Sub-codes of expressing appreciation
Criteria: Expressing gratitude, appreciation or positive acknowledgment.
Label: Expressing Appreciation
Category: Community Dynamics

24. 
Relationship: Sub-codes of community input
Criteria: Providing input, feedback or suggestions from the community.
Label: Community Input
Category: Community Dynamics

25.
Relationship: Sub-codes of social expression
Criteria: Establishing social presence or using expressive communication.
Label: Social Expression
Category: Community Dynamics

---