You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (48 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
48. 
Concepts: {Repeat the input 48}
Relationship: {What is logical relationship between concepts in code 48, or N/A if not applicable}
Criteria: {Who did what, and how for code 48}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: user background, professional background sharing
- Information provided by users about their professional or personal background, which helps in understanding the community's composition.
- Users share their professional background to establish credibility and context.

2.
Concepts: response to question, provide background information
- Users provide information about their teaching backgrounds and experiences in response to inquiries.
- A user shares their teaching background and experience.

3.
Concepts: user identity, community member identification
- User confirms their identity in response to an inquiry, indicating engagement in the conversation.
- A user confirms their participation in the community.

4.
Concepts: teacher role, confirm professional role, professional engagement
- A user confirms their role as a teacher.
- User confirms their professional role in response to an inquiry, contributing to the context of the discussion.
- Users affirm their professional identity or role within the educational context.

5.
Concepts: middle school, introduce teacher identity
- User identifies their teaching experience and current role.
- Users identify themselves as teachers and share relevant teaching experiences, including grade levels taught and duration.

6.
Concepts: gather user input, consult on educational standards
- A designer gathers input from users regarding circuit diagram standards.
- The designer seeks input from educators regarding current educational standards in circuit diagrams.

7.
Concepts: ask for teachers' help, engage in consultation, ask about user needs
- Developer seeks input from teachers regarding current educational resources.
- Designers seek input from teachers regarding specific educational content and engage with them to gather insights.
- Designers ask teachers for specific information about educational materials and inquire about their specific needs or preferences.

8.
Concepts: educational context, followup on gradelevel
- Designers and users discuss the educational context of the software.
- Designers engage users in a discussion about their teaching backgrounds to tailor the software to their needs.

9.
Concepts: teacher response, share teaching experiences
- Users share their insights or experiences regarding common practices in their educational context.
- Users share their teaching experiences, providing context for their interactions within the community.

10.
Concepts: personal anecdote, share user experiences
- A user shares a personal experience related to the software or classroom environment.
- Users share their experiences or opinions about using the software and its impact on their teaching or learning.

11.
Concepts: subject focus, explain focus areas
- A designer outlines the primary focus areas of the physics curriculum within the platform.
- Designers explain the focus areas of the physics curriculum and the limitations on experimentation at different educational levels.

12.
Concepts: highlight ideal use, detail educational benefits
- Designers describe components or features that are optimal for educational use, emphasizing their suitability.
- Designer outlines educational benefits of features, indicating their relevance to teaching practices.

13.
Concepts: humor, express amusement, responds to the funny comment with textual laughs
- Users and designers express or share light-hearted remarks or jokes, often using emojis to convey humor.
- Designer expresses humor or light-heartedness in communication.
- Designer responds to a humorous comment with a laugh emoji, contributing to a light-hearted atmosphere.

14.
Concepts: share resources, encourage group sharing
- Designers or users share resources, such as download links or announcements, with the community.
- Designer encourages sharing of resources and information within the community.

15.
Concepts: short response, provide context for interest
- A user provides a brief affirmative response.
- User provides a brief affirmative response, indicating interest or agreement.

16.
Concepts: agree with suggestion, second the previous response
- A user expresses agreement with another user's suggestion.
- Users agree with or support previous comments made by others in the discussion.

17.
Concepts: acknowledge resolution, confirm update completion
- User acknowledges that an issue has been resolved through an update.
- User confirms that an update has been successfully implemented.

18.
Concepts: confirm understanding, confirm finding information
- Users affirm or confirm previous statements, indicating agreement or understanding.
- User confirms they have accessed the information they were looking for.

19.
Concepts: affirm user's point, confirms that reason, confirmation the developer's whole argument, acknowledge designer's point
- Developer acknowledges and agrees with a user's statement or concern.
- Designer affirms a user's statement, indicating agreement or understanding.
- User affirms the designer's previous statements or arguments.
- User affirms or supports the designer's point of view or suggestion.

20.
Concepts: express agreement, confirm statements
- Users and designers express agreement or appreciation for ideas shared.
- Users and designers confirm each otherâ€™s statements or contributions.

21.
Concepts: acknowledge user feedback, acknowledge user experience
- The designer acknowledges feedback from users with simple affirmations.
- Designer acknowledges the user's experience or perspective in the discussion.

22.
Concepts: comparative feedback, compare with similar applications
- Users provide feedback comparing the current software favorably or unfavorably to other software.
- A user compares the software favorably to other similar applications.

23.
Concepts: share user reviews, share positive feedback, express approval and satisfaction
- A user shares a positive review of the software's practicality.
- Users share positive feedback about the software's effectiveness in educational contexts.
- Users express their approval or enthusiasm for the software and provide positive feedback about its features.

24.
Concepts: self-help, indicate self-sufficiency
- User expresses gratitude for accessing group files, reflecting self-help behavior.
- User acknowledges the availability of group files, indicating self-sufficiency.

25.
Concepts: community building, gratitude and encouragement
- User expresses gratitude, contributing to a sense of community.
- Expressions of appreciation and encouragement that help build a positive community atmosphere.

26.
Concepts: acknowledge help, user appreciation, acknowledge provided resources
- A user expresses gratitude for assistance received.
- Expressions of thanks or appreciation from users.
- A user acknowledges the designer's efforts with gratitude.

27.
Concepts: reason for suggestion, highlight usability need, suggest practical use case
- A user suggests adding a specific feature to accommodate modern technology usage.
- A user suggests a feature to improve usability based on device limitations.
- User suggests practical applications or features that would enhance usability.

28.
Concepts: consider usability, emphasize convenience
- A user suggests considerations for usability based on their experience with the application's interface.
- User suggests features that would enhance convenience in using the software, indicating user-centered feedback.

29.
Concepts: gives reason for it, suggest educational enhancements, request specific features
- A user suggests features that would improve the application's functionality and convenience in educational settings.
- User suggests enhancements to support educational needs.
- Users express the need for specific functionalities that would enhance their teaching experience and explain how these features would benefit them.

30.
Concepts: express school needs, emphasize importance for school
- Users express the needs of their school regarding technology and articulate their requirements related to the software.
- Users express the necessity of having resources, such as manuals, to facilitate software use in educational settings.

31.
Concepts: request new features, request additional experiments
- Users request new features or improvements for the Physics Lab tool, including specific physics experiments.
- Users request the inclusion of additional experiments or features in the software to broaden its scope.

32.
Concepts: platform specification, inquire about platform compatibility
- A user inquires about the specifications of a software version.
- Users inquire about the compatibility or functionality of the application across different platforms.

33.
Concepts: offering/seeking alternative, express hope for compatibility
- A user suggests that a specific operating system should work fine for the software.
- User expresses a desire for compatibility with a specific operating system.

34.
Concepts: inquire about update timelines, inquire about software updates
- Users inquire about the schedule for software updates and the timing of specific features.
- Users express concern about the status of updates and ask questions related to software changes.

35.
Concepts: new user interaction, ask technical questions
- Users engage with the community by asking questions about the software.
- Participants ask questions to clarify information regarding the software's features or usage.

36.
Concepts: inquiry, uncertainty
- Users ask questions to seek information or clarification.
- Users express uncertainty or seek clarification on a topic.

37.
Concepts: seek visual confirmation, share visual reference
- Designer seeks clarification or confirmation through visual aids.
- The designer shares visual material to clarify or support a discussion point.

38.
Concepts: ask for resources, information seeking
- Users inquire about resources and manuals related to the software.
- Users asking questions to gain knowledge or resources related to the software.

39.
Concepts: request user manual, request user assistance, express need for documentation
- Users ask for the availability of a user manual for the software to aid in understanding it.
- Users seek clarification or assistance regarding software access or functionalities.
- Users express the need for additional support materials and documentation related to the application.

40.
Concepts: show engagement, maintain engagement
- A designer expresses engagement through affirmations in the conversation.
- A designer responds positively to maintain engagement.

41.
Concepts: share personal interests, share potential future direction
- A designer expresses personal interest in a related field.
- A designer shares personal interests that may influence future project directions.

42.
Concepts: connecting to community, designer engagement
- A designer connects the app's focus to community interests and potential future features.
- The designer expresses personal interests that relate to the development of the application, showing engagement.

43.
Concepts: design discussion, transparent developer discussion
- Developer engages in discussions about design and feature development.
- The designer engages in transparent discussions about technical aspects and user experiences with the application.

44.
Concepts: request private messaging, gather detailed requirements
- Designer invites users to communicate privately for further discussion.
- Designer encourages users to share detailed needs or requirements privately.

45.
Concepts: open communication, encourage discussion
- A designer promotes open communication and encourages user input.
- A designer encourages open communication and discussion of problems within the community.

46.
Concepts: inquire about problems, encourage problem solving
- Designer asks users to specify the problems they faced, indicating a willingness to assist.
- A designer encourages users to report problems directly in the community group.

47.
Concepts: user feedback and communication, encourage feedback and community engagement
- Designers encourage open communication about issues users encounter while using the software.
- Designers encourage users to provide suggestions and promote community involvement in feedback processes.

48.
Concepts: align with user feedback, refine design based on feedback
- A designer aligns their actions with user feedback to improve the platform.
- Designers prioritize user feedback to refine the design of the software.
===
---
Definitions for each code (48 in total):
1.
Concepts: user background, professional background sharing
Relationship: Users provide personal and professional information to help others understand the community's composition and establish credibility.
Criteria: Users share their backgrounds to enhance community understanding and context.
Phrase: Share professional background.

2.
Concepts: response to question, provide background information
Relationship: Users respond to inquiries by sharing their teaching experiences to provide context.
Criteria: Users offer insights into their teaching backgrounds in response to questions.
Phrase: Provide teaching background.

3.
Concepts: user identity, community member identification
Relationship: Users confirm their identities to demonstrate engagement and belonging in the community.
Criteria: Users affirm their participation in the online community.
Phrase: Confirm community identity.

4.
Concepts: teacher role, confirm professional role, professional engagement
Relationship: Users verify their roles as teachers, contributing to the discussion's context.
Criteria: Users affirm their professional teaching roles in conversation.
Phrase: Confirm teaching role.

5.
Concepts: middle school, introduce teacher identity
Relationship: Users identify their teaching experiences to establish their roles and qualifications.
Criteria: Users share their teaching identities and relevant experiences.
Phrase: Introduce teacher identity.

6.
Concepts: gather user input, consult on educational standards
Relationship: Designers seek user input to ensure alignment with educational standards.
Criteria: Designers collect feedback from users regarding standards in circuit diagrams.
Phrase: Gather input on standards.

7.
Concepts: ask for teachers' help, engage in consultation, ask about user needs
Relationship: Designers actively seek teachers' insights on educational content and resources.
Criteria: Designers consult with teachers to understand their specific needs.
Phrase: Engage teachers for insights.

8.
Concepts: educational context, followup on grade level
Relationship: Designers and users discuss educational contexts to tailor software to user needs.
Criteria: Designers engage users to align software with their educational contexts.
Phrase: Discuss educational context.

9.
Concepts: teacher response, share teaching experiences
Relationship: Users share experiences to inform community members about common practices.
Criteria: Users provide insights from their teaching experiences.
Phrase: Share teaching experiences.

10.
Concepts: personal anecdote, share user experiences
Relationship: Users share personal experiences to relate to the software's impact.
Criteria: Users express their experiences related to the software.
Phrase: Share personal experiences.

11.
Concepts: subject focus, explain focus areas
Relationship: Designers clarify the primary focus areas of the curriculum to guide users.
Criteria: Designers outline the physics curriculum focus areas.
Phrase: Explain curriculum focus.

12.
Concepts: highlight ideal use, detail educational benefits
Relationship: Designers emphasize the educational benefits of features for effective teaching.
Criteria: Designers detail how components enhance educational practices.
Phrase: Highlight educational benefits.

13.
Concepts: humor, express amusement, responds to the funny comment with textual laughs
Relationship: Users and designers use humor to create a light-hearted atmosphere.
Criteria: Participants share light-hearted remarks in discussions.
Phrase: Share humor.

14.
Concepts: share resources, encourage group sharing
Relationship: Designers and users promote sharing resources within the community.
Criteria: Users and designers exchange valuable resources and information.
Phrase: Share community resources.

15.
Concepts: short response, provide context for interest
Relationship: Users give brief affirmations to indicate interest or agreement.
Criteria: Users express agreement with concise responses.
Phrase: Provide brief affirmation.

16.
Concepts: agree with suggestion, second the previous response
Relationship: Users express agreement to reinforce previous suggestions in discussions.
Criteria: Users support others' suggestions through agreement.
Phrase: Agree with suggestions.

17.
Concepts: acknowledge resolution, confirm update completion
Relationship: Users confirm the resolution of issues through updates.
Criteria: Users recognize that updates have solved prior problems.
Phrase: Confirm issue resolution.

18.
Concepts: confirm understanding, confirm finding information
Relationship: Users affirm their comprehension and successful information retrieval.
Criteria: Users acknowledge understanding of previous statements.
Phrase: Confirm understanding.

19.
Concepts: affirm user's point, confirms that reason, confirmation the developer's whole argument, acknowledge designer's point
Relationship: Developers and users validate each other's points to strengthen discussions.
Criteria: Participants confirm and support each other's arguments.
Phrase: Affirm points made.

20.
Concepts: express agreement, confirm statements
Relationship: Users and designers mutually affirm statements to foster collaboration.
Criteria: Participants confirm and appreciate each other's contributions.
Phrase: Express agreement.

21.
Concepts: acknowledge user feedback, acknowledge user experience
Relationship: Designers recognize user feedback and experiences to enhance engagement.
Criteria: Designers acknowledge and validate user perspectives.
Phrase: Acknowledge user feedback.

22.
Concepts: comparative feedback, compare with similar applications
Relationship: Users provide feedback that compares the software to others in the market.
Criteria: Users evaluate the software in relation to similar applications.
Phrase: Offer comparative feedback.

23.
Concepts: share user reviews, share positive feedback, express approval and satisfaction
Relationship: Users share positive experiences to endorse the software's effectiveness.
Criteria: Users provide affirmative reviews highlighting satisfaction.
Phrase: Share positive feedback.

24.
Concepts: self-help, indicate self-sufficiency
Relationship: Users express gratitude for resources that enable independent problem-solving.
Criteria: Users indicate their ability to help themselves through available resources.
Phrase: Indicate self-sufficiency.

25.
Concepts: community building, gratitude and encouragement
Relationship: Users express gratitude to foster a supportive community atmosphere.
Criteria: Users contribute to community building through appreciation.
Phrase: Build community through gratitude.

26.
Concepts: acknowledge help, user appreciation, acknowledge provided resources
Relationship: Users express gratitude for assistance and resources provided by others.
Criteria: Users recognize and appreciate support received.
Phrase: Acknowledge assistance.

27.
Concepts: reason for suggestion, highlight usability need, suggest practical use case
Relationship: Users articulate suggestions to enhance software usability based on experience.
Criteria: Users propose features that improve the application's practical use.
Phrase: Suggest usability enhancements.

28.
Concepts: consider usability, emphasize convenience
Relationship: Users provide feedback focused on enhancing the software's usability.
Criteria: Users recommend features to improve user convenience.
Phrase: Consider usability factors.

29.
Concepts: gives reason for it, suggest educational enhancements, request specific features
Relationship: Users articulate requests for features that enhance educational effectiveness.
Criteria: Users suggest improvements based on educational needs.
Phrase: Request feature enhancements.

30.
Concepts: express school needs, emphasize importance for school
Relationship: Users articulate their school's technology needs to highlight resource requirements.
Criteria: Users communicate essential needs for effective software use.
Phrase: Express school technology needs.

31.
Concepts: request new features, request additional experiments
Relationship: Users seek improvements to broaden the software's functionality.
Criteria: Users request features and experiments to enhance the application.
Phrase: Request new features.

32.
Concepts: platform specification, inquire about platform compatibility
Relationship: Users seek information about software specifications and compatibility.
Criteria: Users inquire about the software's operational requirements.
Phrase: Inquire about platform specifics.

33.
Concepts: offering/seeking alternative, express hope for compatibility
Relationship: Users suggest alternatives while expressing desires for compatibility.
Criteria: Users propose operating systems compatible with the software.
Phrase: Suggest compatibility alternatives.

34.
Concepts: inquire about update timelines, inquire about software updates
Relationship: Users seek clarity on software updates and their timelines.
Criteria: Users ask about the status and schedule of updates.
Phrase: Inquire about updates.

35.
Concepts: new user interaction, ask technical questions
Relationship: Users engage by asking technical questions about software features.
Criteria: Participants seek clarification regarding the software's functionalities.
Phrase: Ask technical questions.

36.
Concepts: inquiry, uncertainty
Relationship: Users express uncertainty and seek clarification on various topics.
Criteria: Users ask questions to gain understanding and information.
Phrase: Seek clarification.

37.
Concepts: seek visual confirmation, share visual reference
Relationship: Designers use visual aids to enhance clarity in discussions.
Criteria: Designers share visual material to support conversations.
Phrase: Share visual references.

38.
Concepts: ask for resources, information seeking
Relationship: Users inquire about resources to enhance their understanding of the software.
Criteria: Users seek knowledge and materials related to the software.
Phrase: Request resources.

39.
Concepts: request user manual, request user assistance, express need for documentation
Relationship: Users express their need for manuals and assistance with the software.
Criteria: Users seek documentation and help for better understanding.
Phrase: Request user assistance.

40.
Concepts: show engagement, maintain engagement
Relationship: Designers demonstrate engagement to foster ongoing interaction.
Criteria: Designers respond positively to encourage continued dialogue.
Phrase: Maintain engagement.

41.
Concepts: share personal interests, share potential future direction
Relationship: Designers express interests that may influence project development.
Criteria: Designers communicate personal interests shaping future directions.
Phrase: Share personal interests.

42.
Concepts: connecting to community, designer engagement
Relationship: Designers connect app development with community interests.
Criteria: Designers engage with community needs in app development.
Phrase: Connect with community.

43.
Concepts: design discussion, transparent developer discussion
Relationship: Developers engage in open discussions about design with users.
Criteria: Designers share insights regarding technical aspects and user experiences.
Phrase: Engage in design discussions.

44.
Concepts: request private messaging, gather detailed requirements
Relationship: Designers invite detailed discussions for comprehensive user input.
Criteria: Designers encourage private communication for feedback.
Phrase: Request private discussions.

45.
Concepts: open communication, encourage discussion
Relationship: Designers promote a culture of open dialogue within the community.
Criteria: Designers encourage input and discussion among users.
Phrase: Foster open communication.

46.
Concepts: inquire about problems, encourage problem solving
Relationship: Designers ask users to identify issues to facilitate resolutions.
Criteria: Designers encourage users to report and discuss problems.
Phrase: Encourage problem solving.

47.
Concepts: user feedback and communication, encourage feedback and community engagement
Relationship: Designers promote open communication to enhance community involvement.
Criteria: Designers encourage users to share feedback and engage.
Phrase: Encourage community feedback.

48.
Concepts: align with user feedback, refine design based on feedback
Relationship: Designers adjust their work according to user feedback for improvements.
Criteria: Designers prioritize user input to refine the software design.
Phrase: Refine design based on feedback.