You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (18 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
18. 
Concepts: {Repeat the input 18}
Relationship: {What is logical relationship between concepts in code 18, or N/A if not applicable}
Criteria: {Who did what, and how for code 18}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: assess feature stability, plan for long-term stability
- A designer discusses the integration of components as a means to ensure software stability.
- The designer discusses long-term planning for features that ensure stability.

2.
Concepts: elaboration, reflect on experiences
- Designers elaborate on previous experiences or insights related to the software.
- Designers reflect on past experiences to explain challenges or clarify previous statements.

3.
Concepts: address usability concerns, clarify user interface issues
- The designer discusses design aspects and usability considerations based on user needs.
- Designers inquire about technical aspects related to user interface issues and clarify compatibility.

4.
Concepts: detail version updates, provide platform-specific updates
- Detailed notes about updates and bug fixes in software versions are provided by the designer.
- The designer specifies the version of the software relevant to the discussion and communicates updates specific to different platforms.

5.
Concepts: listing and sharing upcoming features, offering tips and sharing technical details
- The designer lists upcoming features that will be included in the software and shares details about upcoming features and enhancements in the software, outlining what will be included in future updates.
- The designer shares details about new features or updates to the software and shares technical details about new features and adjustments in the software, detailing specific updates being added.

6.
Concepts: user experience in educational contexts, technical and infrastructural challenges in educational settings
- User experiences and challenges in using the software within educational settings.
- Users and designers discuss challenges related to technology in educational environments.

7.
Concepts: clarify platform access, inquire about platform compatibility
- Users ask about the availability or access to specific versions of the software.
- A user inquires about the compatibility of the application across different platforms.

8.
Concepts: visual design appreciation, appreciate software craftsmanship
- A user appreciates the visual design aspects of the software.
- Users express admiration for the commitment and quality of the design process.

9.
Concepts: evaluate software usability, complimenting software effectiveness and sharing experiences
- Users comment on the practicality and effectiveness of the software.
- Users praise the effectiveness or impact of the software in an educational setting and describe positive engagement and outcomes from using the software.

10.
Concepts: request software updates, express anticipation for updates
- Users ask for updates regarding recent changes and inquire about future software versions.
- User expresses anticipation for upcoming updates or features in the software.

11.
Concepts: request additional features, import/export functionality
- Users suggest expanding the software's features to include additional topics.
- Users suggest functionalities that would enhance the software's usability, such as import/export options.

12.
Concepts: seek consensus, gather user opinions
- The designer seeks agreement or consensus among users regarding a decision or feature.
- The designer justifies the need to gather opinions before starting new features.

13.
Concepts: confirm understanding, confirmation/agreement of collaboration
- Users and designers confirm agreement or understanding during discussions.
- Designers confirm plans for collaborative efforts or discussions with the community.

14.
Concepts: build community through gratitude, engage in positive interactions
- Users express gratitude and appreciation, fostering a sense of community.
- Users engage in friendly exchanges, showing appreciation or agreement with others in the community.

15.
Concepts: make technical inquiries, make inquiries for clarification
- Users ask technical questions about the platform, showing interest in details.
- Users ask questions to seek information or clarification due to uncertainty.

16.
Concepts: confirm user identity, community member identification
- A user confirms their identity or role in response to inquiries about their professional background.
- A user confirms their participation in the community.

17.
Concepts: share professional background, provide contextual information
- Users share their professional or personal backgrounds to provide context.
- Users provide background information related to issues or educational environments to contextualize their comments.

18.
Concepts: confirm teacher role, identify teaching background
- A user identifies and confirms their role as a teacher, discussing their educational needs.
- A user identifies their teaching background and shares their experience in education.
===
---
Definitions for each code (18 in total):
1.
Concepts: assess feature stability, plan for long-term stability
Relationship: The assessment of feature stability informs the planning for long-term stability.
Criteria: Designers assess the integration of components and plan for features that ensure software stability.
Phrase: Ensure software stability.

2.
Concepts: elaboration, reflect on experiences
Relationship: Elaboration on experiences provides deeper insights and reflections on past challenges.
Criteria: Designers elaborate on their experiences and reflect on past challenges to clarify statements.
Phrase: Reflect on past experiences.

3.
Concepts: address usability concerns, clarify user interface issues
Relationship: Addressing usability concerns leads to clarification of user interface issues.
Criteria: Designers address usability concerns and clarify technical aspects related to the user interface.
Phrase: Clarify usability issues.

4.
Concepts: detail version updates, provide platform-specific updates
Relationship: Detailing version updates allows for the provision of platform-specific information.
Criteria: Designers detail updates and specify version information relevant to different platforms.
Phrase: Communicate software updates.

5.
Concepts: listing and sharing upcoming features, offering tips and sharing technical details
Relationship: Listing upcoming features complements the sharing of technical details about those features.
Criteria: Designers list upcoming features and share technical details regarding enhancements in the software.
Phrase: Share upcoming features.

6.
Concepts: user experience in educational contexts, technical and infrastructural challenges in educational settings
Relationship: User experiences are influenced by technical and infrastructural challenges in educational contexts.
Criteria: Users discuss their experiences and challenges related to technology in educational environments.
Phrase: Discuss educational challenges.

7.
Concepts: clarify platform access, inquire about platform compatibility
Relationship: Clarifying platform access is related to inquiries about compatibility across platforms.
Criteria: Users ask about access to software versions and inquire about compatibility with different platforms.
Phrase: Inquire about platform access.

8.
Concepts: visual design appreciation, appreciate software craftsmanship
Relationship: Appreciation of visual design reflects admiration for the quality of craftsmanship in software.
Criteria: Users appreciate the visual design and express admiration for the design process.
Phrase: Appreciate software design.

9.
Concepts: evaluate software usability, complimenting software effectiveness and sharing experiences
Relationship: Evaluation of usability leads to compliments on effectiveness based on shared experiences.
Criteria: Users evaluate the software's usability and share positive experiences highlighting its effectiveness.
Phrase: Evaluate software effectiveness.

10.
Concepts: request software updates, express anticipation for updates
Relationship: Requests for updates indicate anticipation for future changes and improvements.
Criteria: Users ask for recent changes and express anticipation for upcoming software versions.
Phrase: Request software updates.

11.
Concepts: request additional features, import/export functionality
Relationship: Requests for additional features often include suggestions for specific functionalities like import/export.
Criteria: Users suggest expanding features and enhancing usability with import/export options.
Phrase: Suggest additional features.

12.
Concepts: seek consensus, gather user opinions
Relationship: Seeking consensus involves gathering user opinions to inform decisions.
Criteria: Designers seek agreement among users and gather opinions before implementing new features.
Phrase: Gather user opinions.

13.
Concepts: confirm understanding, confirmation/agreement of collaboration
Relationship: Confirming understanding facilitates collaboration and agreement among participants.
Criteria: Users and designers confirm understanding and collaborative plans during discussions.
Phrase: Confirm collaborative efforts.

14.
Concepts: build community through gratitude, engage in positive interactions
Relationship: Expressing gratitude fosters positive interactions that build community.
Criteria: Users express gratitude and engage in friendly exchanges within the community.
Phrase: Foster community through gratitude.

15.
Concepts: make technical inquiries, make inquiries for clarification
Relationship: Technical inquiries often lead to requests for clarification to resolve uncertainty.
Criteria: Users ask technical questions and seek clarification on details.
Phrase: Make technical inquiries.

16.
Concepts: confirm user identity, community member identification
Relationship: Confirming user identity helps identify community members and their roles.
Criteria: Users confirm their identity and participation in the community.
Phrase: Confirm community identity.

17.
Concepts: share professional background, provide contextual information
Relationship: Sharing professional background provides necessary context for discussions.
Criteria: Users share their backgrounds to contextualize their comments and issues.
Phrase: Share contextual background.

18.
Concepts: confirm teacher role, identify teaching background
Relationship: Confirming a teacher's role involves identifying their teaching background and experience.
Criteria: Users identify and confirm their roles as teachers while discussing educational needs.
Phrase: Confirm teaching role.
---