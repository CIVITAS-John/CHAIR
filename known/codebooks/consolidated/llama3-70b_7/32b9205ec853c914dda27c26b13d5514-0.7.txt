You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (24 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
24. 
Concepts: {Repeat the input 24}
Relationship: {What is logical relationship between concepts in code 24, or N/A if not applicable}
Criteria: {Who did what, and how for code 24}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: ask for teachers' help, teacher-admin interaction
- Designers ask for teachers' help or input on a specific topic.
- Designers interact with teachers or seek their input on a specific topic.

2.
Concepts: limitation explanation, talk about limitation of the solution
- Designer explains the limitations or constraints of the current version.
- Designers discuss the limitations or constraints of a solution or feature.

3.
Concepts: compatibility information, addressing compatibility issues
- Designer provides information about the compatibility of the software.
- Designers providing information about system requirements and addressing compatibility concerns.

4.
Concepts: comparison to similar apps, comparison to other products
- User compares the application to similar software or tools.
- A user compares the app or feature to another similar one.

5.
Concepts: explaining a new feature, introducing a new feature
- Explaining or describing a new feature or update
- Introducing or explaining a new feature or update

6.
Concepts: updates, feature expansion
- Information about changes or new features in upcoming updates.
- Information about new features and improvements in the upcoming update.

7.
Concepts: version updates, providing version information
- Information about new releases and updates to the software.
- A developer provides additional information about a specific version or update.

8.
Concepts: product updates, update communication, software update announcement, component updates, update announcement
- Designers informing users about changes or updates to the software.
- Instances where designers inform users about software updates, new features, or bug fixes.
- Communication from designers regarding updates and changes to the software.
- Communication regarding the upcoming update and its features.
- Designers provide updates about the software versions and new features.
- Designers informing users about changes to software components and functionalities.
- Designers informing users about new features or changes to the software.
- Instances where designers provide information about upcoming updates and new features.

9.
Concepts: planned updates, explanation of upcoming features
- Information shared by designers about upcoming features or updates.
- Designers explain or describe upcoming features or updates.

10.
Concepts: feature announcements, developer announcement, confirm feature update
- Designers announcing new features or changes to existing features.
- Designers sharing information about upcoming changes or updates to the simulation.
- Designer announces new features, updates, or changes to the application.
- Designer announces or confirms an update or release of a new feature.

11.
Concepts: transparency, transparency in development
- Designers sharing information about the development process and upcoming features.
- Instances where designers share information about the development process or upcoming features.
- Keeping the community informed about the development process and upcoming changes.
- The designer openly shares information about the development status, updates, and future plans.

12.
Concepts: update sharing, development update, sharing progress updates, share info about development update
- Instances where designers share updates about the development process.
- Designer shares information about the development progress or updates.
- Designer shares updates or progress on the development process.
- Designer shares information about development updates, new features, or changes.

13.
Concepts: providing a timeline, providing a release timeline
- A developer provides a timeline for a future update or release.
- Providing a timeline or estimate for the release of a new feature or update

14.
Concepts: future update, promising a future update
- The speaker mentions a future update, change, or development of the app or feature.
- Promising to implement a feature or update in the future

15.
Concepts: future design plan, future design considerations
- The speaker outlines future design plans, goals, or objectives for the app or feature.
- The speaker discusses future design plans, considerations, or possibilities for the app or feature.

16.
Concepts: design principles, explaining design goals
- Designers explain the underlying principles or philosophy behind the design.
- Designer explains the design goals, principles, or philosophy behind the product.

17.
Concepts: design rationale, explain the intention
- Instances where Designer-1 explains the reasoning behind design decisions or features.
- Explains the purpose or intention behind a design or feature
- Designers explain the intention behind a design decision or feature.

18.
Concepts: explaining rationale, give rationale to development decision, decision-making
- A developer explains the reasoning or logic behind a design decision.
- Designer provides a rationale or explanation for development decisions.
- Designer explains or justifies a decision related to the development or design of the product.

19.
Concepts: providing feature examples, give an example of the feature's functions
- Providing specific details or examples to illustrate a feature or functionality.
- Designer provides an example of how a feature works or its functionality.

20.
Concepts: teacher feedback
- The discussion around the teacher's experience and feedback on using the software in their classes.
- User-4232 sharing their teaching experience and feedback on using the software in class.

21.
Concepts: share information
- Instances where designers or users share information about the application, its features, or development plans.
- Users or designers sharing information or resources within the community.
- The exchange of knowledge, experiences, or resources within the community.
- Instances where participants share information or resources to solve a problem or answer a question.
- Instances of users and designers sharing information, resources, or expertise.

22.
Concepts: user feedback and iterative design
- The designers' incorporation of user feedback to improve the software and enhance the learning experience.
- The designers' engagement with user feedback to continuously enhance the software's features and usability.

23.
Concepts: learning support
- Codes related to the designers' attempts to support learning within the online community, such as providing resources or addressing user needs.
- The tool's potential to support learning in the context of physics education.

24.
Concepts: scaffolding
- Scaffolding is a teaching strategy that provides temporary support to help students learn new skills or concepts.
- The designers provide support and guidance to the users to help them learn and use the Physics Lab platform.
===
Here are the definitions for each code:

---
1.
Concepts: ask for teachers' help, teacher-admin interaction
Relationship: The two concepts are related as they both involve designers seeking input or interacting with teachers.
Criteria: Designers ask teachers for help or input on a specific topic and interact with them to receive feedback.
Phrase: Seek teacher input.

2.
Concepts: limitation explanation, talk about limitation of the solution
Relationship: The two concepts are related as they both involve explaining the limitations of a solution or feature.
Criteria: Designers explain the limitations or constraints of a solution or feature.
Phrase: Explain limitations.

3.
Concepts: compatibility information, addressing compatibility issues
Relationship: The two concepts are related as they both involve providing information about the compatibility of the software.
Criteria: Designers provide information about the compatibility of the software and address compatibility concerns.
Phrase: Provide compatibility information.

4.
Concepts: comparison to similar apps, comparison to other products
Relationship: The two concepts are related as they both involve comparing the application to other similar software or tools.
Criteria: Users compare the application to similar software or tools.
Phrase: Compare to similar apps.

5.
Concepts: explaining a new feature, introducing a new feature
Relationship: The two concepts are related as they both involve explaining or introducing new features or updates.
Criteria: Designers explain or introduce new features or updates.
Phrase: Introduce new features.

6.
Concepts: updates, feature expansion
Relationship: The two concepts are related as they both involve providing information about changes or new features in upcoming updates.
Criteria: Designers provide information about new features and improvements in upcoming updates.
Phrase: Discuss updates.

7.
Concepts: version updates, providing version information
Relationship: The two concepts are related as they both involve providing information about new releases and updates to the software.
Criteria: Designers provide additional information about a specific version or update.
Phrase: Provide version information.

8.
Concepts: product updates, update communication, software update announcement, component updates, update announcement
Relationship: The concepts are related as they all involve designers informing users about changes or updates to the software.
Criteria: Designers inform users about software updates, new features, or bug fixes.
Phrase: Announce updates.

9.
Concepts: planned updates, explanation of upcoming features
Relationship: The two concepts are related as they both involve designers sharing information about upcoming features or updates.
Criteria: Designers explain or describe upcoming features or updates.
Phrase: Share planned updates.

10.
Concepts: feature announcements, developer announcement, confirm feature update
Relationship: The concepts are related as they all involve designers announcing new features or changes to existing features.
Criteria: Designers announce new features, updates, or changes to the application.
Phrase: Announce new features.

11.
Concepts: transparency, transparency in development
Relationship: The two concepts are related as they both involve designers sharing information about the development process and upcoming features.
Criteria: Designers share information about the development process, upcoming changes, and future plans.
Phrase: Maintain transparency.

12.
Concepts: update sharing, development update, sharing progress updates, share info about development update
Relationship: The concepts are related as they all involve designers sharing updates about the development process.
Criteria: Designers share updates or progress on the development process.
Phrase: Share development updates.

13.
Concepts: providing a timeline, providing a release timeline
Relationship: The two concepts are related as they both involve providing a timeline for a future update or release.
Criteria: Designers provide a timeline or estimate for the release of a new feature or update.
Phrase: Provide a timeline.

14.
Concepts: future update, promising a future update
Relationship: The two concepts are related as they both involve promising to implement a feature or update in the future.
Criteria: Designers promise to implement a feature or update in the future.
Phrase: Promise future updates.

15.
Concepts: future design plan, future design considerations
Relationship: The two concepts are related as they both involve outlining future design plans, goals, or objectives for the app or feature.
Criteria: Designers outline future design plans, goals, or objectives for the app or feature.
Phrase: Outline future design plans.

16.
Concepts: design principles, explaining design goals
Relationship: The two concepts are related as they both involve explaining the underlying principles or philosophy behind the design.
Criteria: Designers explain the design goals, principles, or philosophy behind the product.
Phrase: Explain design principles.

17.
Concepts: design rationale, explain the intention
Relationship: The two concepts are related as they both involve explaining the reasoning or intention behind design decisions or features.
Criteria: Designers explain the intention behind a design decision or feature.
Phrase: Explain design rationale.

18.
Concepts: explaining rationale, give rationale to development decision, decision-making
Relationship: The concepts are related as they all involve designers explaining the reasoning or logic behind design decisions.
Criteria: Designers explain or justify development decisions.
Phrase: Explain development decisions.

19.
Concepts: providing feature examples, give an example of the feature's functions
Relationship: The two concepts are related as they both involve providing specific details or examples to illustrate a feature or functionality.
Criteria: Designers provide an example of how a feature works or its functionality.
Phrase: Provide feature examples.

20.
Concepts: teacher feedback
Relationship: N/A
Criteria: Teachers share their experience and feedback on using the software in their classes.
Phrase: Share teacher feedback.

21.
Concepts: share information
Relationship: N/A
Criteria: Designers or users share information about the application, its features, or development plans.
Phrase: Share information.

22.
Concepts: user feedback and iterative design
Relationship: The two concepts are related as they both involve designers incorporating user feedback to improve the software and enhance the learning experience.
Criteria: Designers incorporate user feedback to continuously enhance the software's features and usability.
Phrase: Incorporate user feedback.

23.
Concepts: learning support
Relationship: N/A
Criteria: Designers provide resources or address user needs to support learning within the online community.
Phrase: Provide learning support.

24.
Concepts: scaffolding
Relationship: N/A
Criteria: Designers provide temporary support to help users learn new skills or concepts.
Phrase: Provide scaffolding support.