You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: ai-assisted coding, writes code manually, manually codes with ai guidance, ai code as reference
- Manually writing code with AI guidance.
- Writes code manually with AI-generated code as reference
- The participant uses AI-generated code as a reference while writing their own code.
- Participant uses AI code as a reference, writing code manually.

2.
Concepts: follows ai steps, writes code manually with ai-provided steps, manually writing code with ai guidance
- Participant follows AI steps and writes code manually with AI guidance.
- The interviewee writes code manually with AI-provided steps, rather than copying and pasting code.
- The participant manually writes code with the steps provided by ChatGPT, rather than relying on copy-pasting.

3.
Concepts: avoiding direct code copying, avoids direct copying from ai
- Preferring not to copy-paste AI-generated code directly.
- The participant describes their approach to using AI-generated code, avoiding direct copying and pasting.

4.
Concepts: manual integration of ai output, manual ai code integration, chooses manual ai code integration
- Manually integrates AI output into the code.
- The participant manually integrates AI-generated code into their own work.
- The participant chooses to manually integrate AI-generated code.

5.
Concepts: integrating ai code, integrating ai-generated code
- Integrates AI code into model, selectively copying code to the model.
- Integrates AI-generated code into model

6.
Concepts: integrates ai code, integrates ai-generated code fully
- Integrates AI-generated code into their workflow, using it as a starting point or building block.
- The interviewee integrates AI-generated code fully, using it as a starting point for their work.

7.
Concepts: executing ai-generated code, chooses to execute ai suggestions
- Chooses to execute AI-generated code.
- Chooses to execute AI-generated code or suggestions.

8.
Concepts: overrides previous work, overwrites existing code with ai output
- Overrides previous work with AI-generated code.
- Overwrites existing code with AI-generated output, demonstrating a willingness to adapt.

9.
Concepts: adapting to ai-generated code, uses ai to adapt existing code
- Adapts based on AI-generated code and feedback.
- Uses AI to adapt existing code, exploring new possibilities.

10.
Concepts: learning from ai comparison, evaluating ai-generated code, compares with initial code
- Comparing own code with AI-generated code
- Comparing AI-generated code to initial requests and evaluating its performance.
- Compares the AI-generated code with the initial code or expectations.

11.
Concepts: code evaluation, reading and evaluating the chatgpt code, evaluates chatgpt code
- Evaluates ChatGPT-generated code
- Reads and evaluates the AI-generated code carefully.
- Evaluates and critiques the AI-generated code, checking for errors or inaccuracies.

12.
Concepts: ai output evaluation, ai code evaluation and debugging
- Assesses and evaluates AI-generated code.
- Evaluates and debugs AI-generated code.

13.
Concepts: summarizes ai-generated code, commenting on ai's interpretation, code summary and interpretation
- The participant summarizes or explains the code generated by AI.
- Interviewee comments on AI's interpretation of their requests and summarizes the generated code.
- Interviewee summarizes and interprets AI-generated code.

14.
Concepts: summarizes ai's code, analyzing ai-generated code
- Summarizes or interprets AI-generated code, understanding its functionality.
- Analyzes AI-generated code to understand its functionality.

15.
Concepts: evaluating ai code, requesting detailed code review
- Asks the interviewer to scroll slowly so he could read in detail, reading and evaluating the ChatGPT code.
- Requests slow scrolling to evaluate ChatGPT's code.
- The participant requests slow scrolling or detailed reading of AI-generated code.

16.
Concepts: reading the code and comments, reads and comments on code
- Reads and evaluates code and comments generated by the AI
- Reading and commenting on code, summarizing code and understanding AI's understanding

17.
Concepts: engages with ai output, reading and commenting on code
- The interviewee engages with AI output, reading and evaluating the code.
- The interviewee reads and comments on the code, summarizing its functionality and thinking about how the AI understood the request.

18.
Concepts: reads and debugs code, reads through ai-generated code
- Interviewee reads and debugs code generated by AI.
- The participant reads through AI-generated code.

19.
Concepts: reviewing ai-generated code, reviews ai-generated code
- Reading through AI-generated code and selectively copying relevant parts.
- The participant reviews and evaluates the code generated by the AI, often selectively copying or using parts of it.

20.
Concepts: evaluates ai-generated code, evaluates ai-generated code and requests a detailed review, summarizes and evaluates generated code
- Participant evaluates the AI-generated code and considers its accuracy.
- Reads and evaluates AI-generated code, demonstrating a critical thinking approach.
- The participant evaluates AI-generated code and requests a detailed review, reading and analyzing the code carefully.
- Participant summarizes and evaluates generated code, thinking about how the AI understood the request.

21.
Concepts: gaps in ai outputs, observing ai's limitations
- Identifying gaps in AI outputs, missing code structures at times.
- Observes AI's partial outputs, missing code structures at times.

22.
Concepts: ai limitations, ai-generated code limitations, errors in ai-generated code
- Recognizes limitations or missing structures in AI-generated code.
- Encounters AI limitations or stuck situations.
- AI output sometimes lacks necessary code structures.
- Participant notes that AI can limit options and sometimes point to wrong directions.
- The participant expresses a negative view of AI's ability, specifically regarding errors or inconsistencies.
- Identifies limitations in AI-generated code, such as missing code structures.
- Finds errors in AI-generated code, such as missing code structures.

23.
Concepts: incomplete ai code, notes incomplete ai code, identifies missing code elements
- Identifying missing code elements in AI responses.
- Notes incomplete or missing code structures in AI-generated code.
- The participant identifies instances where AI-generated code is incomplete or missing essential elements.

24.
Concepts: finding ai code lacking, incomplete ai code generation, critiques ai code generation
- The participant finds AI-generated code lacking in completeness.
- The participant notes that the AI-generated code may be incomplete or missing certain structures.
- The participant criticizes AI for generating incomplete or incorrect code.

25.
Concepts: proactive code modification, seeks specific code changes
- Interviewee proactively suggests modifications to AI's code and asks for help.
- The interviewee seeks specific code changes, such as asking AI to fix their own idea.

26.
Concepts: asks ai to modify code, requests ai to fix with own idea
- The participant asks the AI to modify code, such as fixing errors or rewriting code.
- Requests AI-driven interfaces to fix or modify code based on user suggestions.

27.
Concepts: ai-assisted idea refinement, proposing own fixes to ai-generated code
- The participant uses AI to fix or improve their own ideas or code.
- The participant proposes own fixes to AI-generated code.

28.
Concepts: fixing ai mistakes, describes process of identifying and correcting errors, correcting ai-generated errors
- Interpreting and fixing mistakes in AI-generated code.
- Describes the process of identifying and correcting errors in AI-generated code.
- Identifies errors in AI-generated code and takes steps to correct them.

29.
Concepts: identifies errors in ai code, error correction in ai-generated code, interprets incorrect ai code
- Participant identifies errors in AI-generated code and tries to fix them.
- The participant identifies and corrects errors in AI-generated NetLogo code.
- The participant interprets incorrect AI code and fixes common NetLogo mistakes by themselves.

30.
Concepts: analyzing code in seconds, reports using chatgpt for quick code analysis
- The participant analyzes code in seconds, using ChatGPT to quickly identify errors.
- Uses the AI tool for quick code analysis, leveraging its speed and efficiency.

31.
Concepts: code verification and debugging, asking chatgpt to verify code
- Asks ChatGPT to verify code and eliminate bugs.
- Asks the AI to verify code or provide feedback on its correctness.

32.
Concepts: ai verification, requests verification, code verification requests
- The participant requests AI verification or validation of code or solutions.
- Requests verification or validation of code or results from AI tools.
- Requesting AI to verify code, ensuring no more bugs.
===
Here are the definitions for each code:

---
1.
Concepts: ai-assisted coding, writes code manually, manually codes with ai guidance, ai code as reference
Relationship: The concepts are related to the process of coding with AI guidance, where the participant writes code manually with AI-generated code as a reference.
Criteria: Participants who write code manually with AI-generated code as a reference, using AI guidance while coding.
Phrase: Writes code manually with AI guidance.

2.
Concepts: follows ai steps, writes code manually with ai-provided steps, manually writing code with ai guidance
Relationship: The concepts are related to the process of following AI-provided steps while writing code manually.
Criteria: Participants who follow AI-provided steps and write code manually with AI guidance.
Phrase: Follows AI-provided steps while writing code manually.

3.
Concepts: avoiding direct code copying, avoids direct copying from ai
Relationship: The concepts are related to the approach of avoiding direct copying of AI-generated code.
Criteria: Participants who prefer not to copy-paste AI-generated code directly.
Phrase: Avoids direct copying from AI.

4.
Concepts: manual integration of ai output, manual ai code integration, chooses manual ai code integration
Relationship: The concepts are related to the process of manually integrating AI-generated code into one's own work.
Criteria: Participants who manually integrate AI-generated code into their own work.
Phrase: Manually integrates AI-generated code.

5.
Concepts: integrating ai code, integrating ai-generated code
Relationship: The concepts are related to the process of integrating AI-generated code into one's own work.
Criteria: Participants who integrate AI-generated code into their model, selectively copying code to the model.
Phrase: Integrates AI-generated code into model.

6.
Concepts: integrates ai code, integrates ai-generated code fully
Relationship: The concepts are related to the process of fully integrating AI-generated code into one's own work.
Criteria: Participants who integrate AI-generated code fully, using it as a starting point for their work.
Phrase: Integrates AI-generated code fully.

7.
Concepts: executing ai-generated code, chooses to execute ai suggestions
Relationship: The concepts are related to the process of executing AI-generated code or suggestions.
Criteria: Participants who choose to execute AI-generated code or suggestions.
Phrase: Chooses to execute AI-generated code.

8.
Concepts: overrides previous work, overwrites existing code with ai output
Relationship: The concepts are related to the process of overriding previous work with AI-generated code.
Criteria: Participants who override previous work with AI-generated code.
Phrase: Overrides previous work with AI-generated code.

9.
Concepts: adapting to ai-generated code, uses ai to adapt existing code
Relationship: The concepts are related to the process of adapting to AI-generated code and using it to adapt existing code.
Criteria: Participants who adapt to AI-generated code and use it to adapt existing code.
Phrase: Adapts to AI-generated code.

10.
Concepts: learning from ai comparison, evaluating ai-generated code, compares with initial code
Relationship: The concepts are related to the process of learning from AI-generated code by comparing it with initial code.
Criteria: Participants who compare AI-generated code with initial code or expectations.
Phrase: Compares AI-generated code with initial code.

11.
Concepts: code evaluation, reading and evaluating the chatgpt code, evaluates chatgpt code
Relationship: The concepts are related to the process of evaluating AI-generated code.
Criteria: Participants who evaluate AI-generated code carefully.
Phrase: Evaluates AI-generated code.

12.
Concepts: ai output evaluation, ai code evaluation and debugging
Relationship: The concepts are related to the process of evaluating and debugging AI-generated code.
Criteria: Participants who evaluate and debug AI-generated code.
Phrase: Evaluates and debugs AI-generated code.

13.
Concepts: summarizes ai-generated code, commenting on ai's interpretation, code summary and interpretation
Relationship: The concepts are related to the process of summarizing and interpreting AI-generated code.
Criteria: Participants who summarize and interpret AI-generated code.
Phrase: Summarizes AI-generated code.

14.
Concepts: summarizes ai's code, analyzing ai-generated code
Relationship: The concepts are related to the process of summarizing and analyzing AI-generated code.
Criteria: Participants who summarize and analyze AI-generated code.
Phrase: Summarizes AI-generated code.

15.
Concepts: evaluating ai code, requesting detailed code review
Relationship: The concepts are related to the process of evaluating AI-generated code and requesting a detailed review.
Criteria: Participants who request a detailed review of AI-generated code.
Phrase: Requests detailed code review.

16.
Concepts: reading the code and comments, reads and comments on code
Relationship: The concepts are related to the process of reading and commenting on AI-generated code.
Criteria: Participants who read and comment on AI-generated code.
Phrase: Reads and comments on code.

17.
Concepts: engages with ai output, reading and commenting on code
Relationship: The concepts are related to the process of engaging with AI-generated code by reading and commenting on it.
Criteria: Participants who engage with AI-generated code by reading and commenting on it.
Phrase: Engages with AI-generated code.

18.
Concepts: reads and debugs code, reads through ai-generated code
Relationship: The concepts are related to the process of reading and debugging AI-generated code.
Criteria: Participants who read and debug AI-generated code.
Phrase: Reads and debugs code.

19.
Concepts: reviewing ai-generated code, reviews ai-generated code
Relationship: The concepts are related to the process of reviewing AI-generated code.
Criteria: Participants who review AI-generated code.
Phrase: Reviews AI-generated code.

20.
Concepts: evaluates ai-generated code, evaluates ai-generated code and requests a detailed review, summarizes and evaluates generated code
Relationship: The concepts are related to the process of evaluating AI-generated code and requesting a detailed review.
Criteria: Participants who evaluate AI-generated code and request a detailed review.
Phrase: Evaluates AI-generated code.

21.
Concepts: gaps in ai outputs, observing ai's limitations
Relationship: The concepts are related to the process of identifying gaps in AI-generated code.
Criteria: Participants who identify gaps in AI-generated code.
Phrase: Identifies gaps in AI-generated code.

22.
Concepts: ai limitations, ai-generated code limitations, errors in ai-generated code
Relationship: The concepts are related to the process of recognizing limitations in AI-generated code.
Criteria: Participants who recognize limitations in AI-generated code.
Phrase: Recognizes AI-generated code limitations.

23.
Concepts: incomplete ai code, notes incomplete ai code, identifies missing code elements
Relationship: The concepts are related to the process of identifying incomplete AI-generated code.
Criteria: Participants who identify incomplete AI-generated code.
Phrase: Identifies incomplete AI-generated code.

24.
Concepts: finding ai code lacking, incomplete ai code generation, critiques ai code generation
Relationship: The concepts are related to the process of critiquing AI-generated code for being incomplete.
Criteria: Participants who critique AI-generated code for being incomplete.
Phrase: Critiques AI-generated code.

25.
Concepts: proactive code modification, seeks specific code changes
Relationship: The concepts are related to the process of proactively suggesting modifications to AI-generated code.
Criteria: Participants who proactively suggest modifications to AI-generated code.
Phrase: Proactively suggests code modifications.

26.
Concepts: asks ai to modify code, requests ai to fix with own idea
Relationship: The concepts are related to the process of asking AI to modify code based on user suggestions.
Criteria: Participants who ask AI to modify code based on user suggestions.
Phrase: Requests AI to modify code.

27.
Concepts: ai-assisted idea refinement, proposing own fixes to ai-generated code
Relationship: The concepts are related to the process of using AI to refine one's own ideas or code.
Criteria: Participants who use AI to refine their own ideas or code.
Phrase: Uses AI to refine ideas.

28.
Concepts: fixing ai mistakes, describes process of identifying and correcting errors, correcting ai-generated errors
Relationship: The concepts are related to the process of fixing mistakes in AI-generated code.
Criteria: Participants who fix mistakes in AI-generated code.
Phrase: Fixes AI-generated code errors.

29.
Concepts: identifies errors in ai code, error correction in ai-generated code, interprets incorrect ai code
Relationship: The concepts are related to the process of identifying and correcting errors in AI-generated code.
Criteria: Participants who identify and correct errors in AI-generated code.
Phrase: Identifies and corrects AI-generated code errors.

30.
Concepts: analyzing code in seconds, reports using chatgpt for quick code analysis
Relationship: The concepts are related to the process of using AI for quick code analysis.
Criteria: Participants who use AI for quick code analysis.
Phrase: Uses AI for quick code analysis.

31.
Concepts: code verification and debugging, asking chatgpt to verify code
Relationship: The concepts are related to the process of asking AI to verify code.
Criteria: Participants who ask AI to verify code.
Phrase: Asks AI to verify code.

32.
Concepts: ai verification, requests verification, code verification requests
Relationship: The concepts are related to the process of requesting AI verification of code or solutions.
Criteria: Participants who request AI verification of code or solutions.
Phrase: Requests AI verification.