You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (45 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
45. 
Concepts: {Repeat the input 45}
Relationship: {What is logical relationship between concepts in code 45, or N/A if not applicable}
Criteria: {Who did what, and how for code 45}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: context, discuss school needs, mention school initiatives
- User shares contextual information about their school environment and technology.
- Users discuss the needs of their school regarding technology and provide context about available resources.
- Users describe initiatives within their schools related to technology.

2.
Concepts: explain internet restrictions, describe classroom limitations
- Users explain restrictions imposed by schools on internet access in classrooms and the reasons behind them.
- Users describe limitations of their school's computer systems and network access impacting software use.

3.
Concepts: self-help, acknowledge resources
- A user expresses gratitude for accessing resources that contribute to their learning or project.
- A user expresses gratitude for and acknowledges resources made available by the community.

4.
Concepts: confirm finding information, confirm understanding
- User acknowledges the receipt of information from group files.
- Users acknowledge receipt of information and confirm understanding of communications shared.

5.
Concepts: clarify user needs, provide brief responses
- Users indicate agreement and confirm statements, providing context for their interests.
- Users provide brief affirmations or confirmations in response to specific inquiries.

6.
Concepts: express agreement, confirmation the developer's whole argument
- Users express agreement with suggestions made by others and support previous statements.
- User confirms agreement with another user's statement.

7.
Concepts: share user identity, share background information
- A user confirms their identity or position in response to a question and shares their professional background.
- Users share their professional or personal background to establish credibility and context within the community.
- Users share details about their teaching experience, including grade-level and duration.

8.
Concepts: express gratitude, acknowledge contributions
- Users and designers express gratitude and acknowledge each other's efforts and contributions.
- Participants express gratitude for contributions and assistance received, closing interactions on a positive note.
- The designer acknowledges a point made by a user, while users affirm the designer's suggestions.

9.
Concepts: express appreciation, acknowledge craftsmanship
- A user expresses appreciation for the designer's efforts and software quality.
- Users acknowledge and appreciate the dedication to quality in software development.

10.
Concepts: internal update, product improvement
- Designers provide updates on specific features or components of the software.
- Designers announce planned changes or improvements to software features.

11.
Concepts: share visual updates, share development updates
- The designer highlights progress and shares visual representations of development updates.
- Designers share information about the status of app releases and future updates.

12.
Concepts: explain delays in development, explain current focus
- Designers explain delays and provide reasons for incomplete updates or features.
- The designer outlines the current priorities in the development process, indicating a delay in addressing certain topics.

13.
Concepts: provide android update timeline, communicate development timelines
- Designers communicate timelines for updates specific to the Android version of the software.
- Designers communicate timelines for the development of specific features or experiments.

14.
Concepts: explain software limitations, highlight technical constraints
- Designers inform users about limitations and explain why certain issues cannot be resolved.
- Users comment on limitations and highlight technical constraints impacting software use.

15.
Concepts: explain compatibility issues, confirm software compatibility
- The designer discusses compatibility issues with operating systems and explains the development process to ensure functionality.
- The designer assures users of software compatibility while suggesting they check their system for compatibility issues.

16.
Concepts: address interface functionality, inform about touch screen functionality
- Designers address the functionality of touch screens and consider soft keyboard implications on user interface design.
- The designer discusses how touch screen functionality impacts user interaction.

17.
Concepts: user guidance, provide usage instructions
- Designer provides detailed guidance on new features and functionalities of the software.
- The designer teaches users how to utilize the software through detailed instructions.

18.
Concepts: suggest design simplification, simplification and refinement in design
- Designers suggest refining the software's design for better usability.
- Discussions about simplifying and refining design features or processes.

19.
Concepts: explaining technical artifacts, describe component functionality
- Designers provide explanations of the technical aspects of tools or resources available to users.
- Designers describe and explain the specific functions and capabilities of software components and features.

20.
Concepts: plan project requirements, share development objectives
- Designers outline plans to gather user input and detailed requirements for development.
- Designers outline specific development goals and share plans based on user needs.

21.
Concepts: outline project management, outline development priorities, outline design decisions
- Designers outline the order of development tasks and focus areas for the project.
- Designers outline intentions for future feature development and prioritize tasks.
- Designers outline decision-making processes regarding feature priorities and implementations.

22.
Concepts: suggest future possibilities, mention future possibilities
- Designer hints at potential future developments or features.
- Designers mention the potential for future chemistry experiments and app development.

23.
Concepts: explain feature complexity, compare feature complexities
- Designers mention the complexity of features and the time required for their development.
- Designers compare the complexities of different features and their implications for stability and usability.

24.
Concepts: explain feature importance, justify feature improvements
- Designers explain the need for ongoing work and the importance of specific software features.
- Designers justify the effort put into improving features and emphasize their importance.

25.
Concepts: explain design rationale, explain intention of the app design
- Designers provide reasoning and explanations behind their design choices and decisions.
- Designers explain the rationale behind the app's design choices and limitations.

26.
Concepts: adapt software features, adapt features to feedback
- Designers discuss necessary adjustments to existing features and acknowledge the need for design adaptations.
- Designers explain the adaptability of software features and align them with user needs and preferences.

27.
Concepts: confirm feature requests, validate requests visually
- Designers respond to feature requests and confirm the implementation of features.
- Designers validate user requests and seek visual confirmation about specific items or issues.

28.
Concepts: troubleshoot user issues, inquire about user interface issues
- Designers seek to understand and resolve problems reported by users.
- Designers inquire about user interface issues and prompt for clarifications from users.

29.
Concepts: commit to improvement, commit to future improvements
- The designer expresses gratitude for user support and commits to making improvements based on suggestions.
- Designers promise future features and reassure users about ongoing updates.

30.
Concepts: propose potential solution, share usability solutions
- Designer proposes potential solutions to identified issues with the software.
- Designers share information about potential solutions and workarounds for known issues.

31.
Concepts: consult with teachers, consult on educational standards
- Designers actively engage with teachers to gather relevant information and input.
- Designers consult with educators about educational standards relevant to the software.

32.
Concepts: gather user context, inquire about user needs, assess classroom technology
- Designers gather context by inquiring about users' teaching situations and backgrounds.
- Designers inquire about user preferences and challenges related to educational materials.
- Designers inquire about classroom setups and internet access to understand user needs.

33.
Concepts: informal interaction, use casual communication
- The designer and users engage in casual, informal interactions.
- The designer uses a casual tone in communication, encouraging open and informal interaction.

34.
Concepts: seek community input, engage personally with the community
- The designer actively seeks community input and cultivates involvement in the software development process.
- The designer shares personal interests related to the software development and engages with the community.

35.
Concepts: followup, seek clarification
- Participants discuss or clarify details about software compatibility or requirements.
- Participants clarify and seek clarification on specific software functionalities.

36.
Concepts: ensure accuracy, clarify through follow-ups
- The designer seeks clarification on a specific aspect of the discussion.
- Designers ask follow-up questions to clarify user experiences and explain their intentions.

37.
Concepts: encourage further inquiries, facilitate further engagement
- Designers encourage users to ask more questions and engage in discussions.
- A designer engages with users by asking a question to initiate interaction.

38.
Concepts: elaborate on questions, encourage elaboration
- Users elaborate on questions or statements, often providing additional context.
- Designers encourage users to elaborate on suggestions and provide detailed explanations.

39.
Concepts: address inquiries effectively, provide detailed and specific answers
- Designers provide relevant information in response to initial questions and clarifications.
- Designers provide detailed answers that include specific information and criteria.

40.
Concepts: clarify version details, inquire about platform details
- Users seek clarification about the specific version of the platform and where to access the software.
- Users inquire about the availability and specifics of the platform or software they are using.

41.
Concepts: seek information, ask technical questions for clarification
- Users ask questions to gain knowledge related to the software and initiate interactions with the community.
- Users ask various questions, including technical inquiries, to seek information or clarification regarding the software.

42.
Concepts: community resource, share images and resources
- Users request or share resources that aid in the use of the software.
- Designers and users share images and resources relevant to the community or software.

43.
Concepts: direct users to resources, provide access information
- Designers direct users to specific resources or locations to access software.
- Users seek information about accessing the software, while designers or users provide that information.

44.
Concepts: evaluate software usability
- The designer discusses the usability of the software during input processes and available input methods.
- Users comment on the usability and practicality of the software, comparing it favorably.

45.
Concepts: share user experiences
- Users provide reviews reflecting their experiences and share anecdotes impacting their software use.
- Users share their experiences and the impact of the software on their teaching or learning.
===
---
Definitions for each code (45 in total):
1.
Concepts: context, discuss school needs, mention school initiatives
Relationship: Users provide contextual information about their school environment while discussing its technology needs and ongoing initiatives.
Criteria: Users shared contextual information regarding their school's technology needs and initiatives.
Phrase: Share contextual school information.

2.
Concepts: explain internet restrictions, describe classroom limitations
Relationship: Users clarify the restrictions on internet access in classrooms and the limitations of their school's computer systems.
Criteria: Users explained the internet restrictions and described classroom limitations affecting technology use.
Phrase: Explain internet and classroom limitations.

3.
Concepts: self-help, acknowledge resources
Relationship: Users express gratitude for the resources available to them and acknowledge the contributions of the community.
Criteria: Users expressed gratitude for and acknowledged resources that aided their learning or projects.
Phrase: Acknowledge community resources.

4.
Concepts: confirm finding information, confirm understanding
Relationship: Users acknowledge the receipt of information and confirm their understanding of shared communications.
Criteria: Users confirmed the receipt of information and understanding of group communications.
Phrase: Confirm information and understanding.

5.
Concepts: clarify user needs, provide brief responses
Relationship: Users clarify their needs and provide brief affirmations in response to inquiries.
Criteria: Users clarified their needs and provided brief responses to specific inquiries.
Phrase: Clarify needs and respond briefly.

6.
Concepts: express agreement, confirmation the developer's whole argument
Relationship: Users express agreement with suggestions and confirm statements made by others.
Criteria: Users expressed agreement and confirmed previous statements made by others.
Phrase: Confirm and express agreement.

7.
Concepts: share user identity, share background information
Relationship: Users confirm their identity and share background information to establish credibility within the community.
Criteria: Users shared their identity and professional background to establish context.
Phrase: Share identity and background.

8.
Concepts: express gratitude, acknowledge contributions
Relationship: Users and designers express gratitude and acknowledge each other's contributions.
Criteria: Participants expressed gratitude and acknowledged contributions received.
Phrase: Acknowledge contributions and express gratitude.

9.
Concepts: express appreciation, acknowledge craftsmanship
Relationship: Users express appreciation for the quality of the software and the efforts of its designers.
Criteria: Users expressed appreciation for the designer's efforts and the software's quality.
Phrase: Appreciate craftsmanship and quality.

10.
Concepts: internal update, product improvement
Relationship: Designers provide updates on software features and announce planned improvements.
Criteria: Designers provided updates on features and announced product improvements.
Phrase: Update on product improvements.

11.
Concepts: share visual updates, share development updates
Relationship: Designers share visual representations of development updates and progress.
Criteria: Designers shared visual updates and information about app development status.
Phrase: Share development updates visually.

12.
Concepts: explain delays in development, explain current focus
Relationship: Designers clarify the reasons for delays and outline current development priorities.
Criteria: Designers explained delays and outlined their current focus in development.
Phrase: Explain delays and current focus.

13.
Concepts: provide android update timeline, communicate development timelines
Relationship: Designers communicate timelines for Android updates and feature developments.
Criteria: Designers communicated timelines for Android updates and specific feature developments.
Phrase: Communicate development timelines.

14.
Concepts: explain software limitations, highlight technical constraints
Relationship: Designers inform users about software limitations and technical constraints affecting use.
Criteria: Designers explained software limitations and highlighted technical constraints.
Phrase: Explain software limitations.

15.
Concepts: explain compatibility issues, confirm software compatibility
Relationship: Designers discuss compatibility issues and assure users of software compatibility.
Criteria: Designers explained compatibility issues and confirmed software compatibility.
Phrase: Confirm and explain compatibility.

16.
Concepts: address interface functionality, inform about touch screen functionality
Relationship: Designers discuss the functionality of touch screens and their impact on user interaction.
Criteria: Designers addressed interface functionality and informed users about touch screen implications.
Phrase: Inform about interface functionality.

17.
Concepts: user guidance, provide usage instructions
Relationship: Designers provide guidance and detailed instructions for using the software.
Criteria: Designers provided guidance and usage instructions for new features.
Phrase: Provide usage instructions.

18.
Concepts: suggest design simplification, simplification and refinement in design
Relationship: Designers suggest refinements for better usability and discuss design simplification.
Criteria: Designers suggested simplifications and refinements in software design.
Phrase: Suggest design simplification.

19.
Concepts: explaining technical artifacts, describe component functionality
Relationship: Designers explain technical aspects and functionalities of software components.
Criteria: Designers provided explanations of technical artifacts and described component functionalities.
Phrase: Explain technical functionalities.

20.
Concepts: plan project requirements, share development objectives
Relationship: Designers outline plans for gathering user input and development objectives.
Criteria: Designers outlined project requirements and shared development objectives.
Phrase: Plan project requirements.

21.
Concepts: outline project management, outline development priorities, outline design decisions
Relationship: Designers outline development tasks, priorities, and decision-making processes.
Criteria: Designers outlined project management strategies and development priorities.
Phrase: Outline project management.

22.
Concepts: suggest future possibilities, mention future possibilities
Relationship: Designers hint at potential future developments and features.
Criteria: Designers suggested future possibilities and mentioned potential developments.
Phrase: Suggest future possibilities.

23.
Concepts: explain feature complexity, compare feature complexities
Relationship: Designers discuss the complexities of features and compare their implications.
Criteria: Designers explained and compared the complexities of software features.
Phrase: Explain and compare feature complexities.

24.
Concepts: explain feature importance, justify feature improvements
Relationship: Designers explain the importance of features and justify improvements made.
Criteria: Designers explained the importance of features and justified improvements.
Phrase: Explain feature importance.

25.
Concepts: explain design rationale, explain intention of the app design
Relationship: Designers provide reasoning behind their design choices and intentions.
Criteria: Designers explained the rationale and intentions behind app design.
Phrase: Explain design rationale.

26.
Concepts: adapt software features, adapt features to feedback
Relationship: Designers discuss necessary adjustments to features based on user feedback.
Criteria: Designers adapted software features according to user feedback.
Phrase: Adapt features to feedback.

27.
Concepts: confirm feature requests, validate requests visually
Relationship: Designers respond to and validate user feature requests.
Criteria: Designers confirmed and validated user feature requests.
Phrase: Confirm feature requests.

28.
Concepts: troubleshoot user issues, inquire about user interface issues
Relationship: Designers seek to resolve user-reported issues and inquire for clarifications.
Criteria: Designers troubleshot user issues and inquired about interface problems.
Phrase: Troubleshoot user issues.

29.
Concepts: commit to improvement, commit to future improvements
Relationship: Designers commit to making improvements based on user suggestions and feedback.
Criteria: Designers committed to improvements and future updates.
Phrase: Commit to improvements.

30.
Concepts: propose potential solution, share usability solutions
Relationship: Designers propose solutions to identified software issues and share usability information.
Criteria: Designers proposed potential solutions and shared usability solutions.
Phrase: Propose usability solutions.

31.
Concepts: consult with teachers, consult on educational standards
Relationship: Designers engage with educators to gather information and input on standards.
Criteria: Designers consulted with teachers about educational standards.
Phrase: Consult with educators.

32.
Concepts: gather user context, inquire about user needs, assess classroom technology
Relationship: Designers gather context about users' teaching situations and classroom technology.
Criteria: Designers gathered user context and assessed classroom technology needs.
Phrase: Gather user context.

33.
Concepts: informal interaction, use casual communication
Relationship: Designers and users engage in informal, casual interactions.
Criteria: Designers used casual communication to encourage informal interactions.
Phrase: Engage in casual interaction.

34.
Concepts: seek community input, engage personally with the community
Relationship: Designers actively seek input from the community and engage personally.
Criteria: Designers sought community input and engaged personally with users.
Phrase: Seek community input.

35.
Concepts: followup, seek clarification
Relationship: Participants clarify details regarding software functionalities and compatibility.
Criteria: Participants followed up and sought clarification on software details.
Phrase: Seek clarification.

36.
Concepts: ensure accuracy, clarify through follow-ups
Relationship: Designers seek clarification and ask follow-up questions to ensure accuracy.
Criteria: Designers ensured accuracy and clarified through follow-ups.
Phrase: Ensure accuracy through clarification.

37.
Concepts: encourage further inquiries, facilitate further engagement
Relationship: Designers encourage users to ask questions and engage in discussions.
Criteria: Designers encouraged further inquiries and facilitated engagement.
Phrase: Encourage further inquiries.

38.
Concepts: elaborate on questions, encourage elaboration
Relationship: Users elaborate on questions while designers encourage detailed explanations.
Criteria: Users elaborated on questions and designers encouraged further elaboration.
Phrase: Encourage elaboration.

39.
Concepts: address inquiries effectively, provide detailed and specific answers
Relationship: Designers provide relevant and detailed information in response to inquiries.
Criteria: Designers addressed inquiries effectively with detailed answers.
Phrase: Provide detailed answers.

40.
Concepts: clarify version details, inquire about platform details
Relationship: Users seek clarification about platform versions and access details.
Criteria: Users clarified version details and inquired about platform specifics.
Phrase: Clarify platform details.

41.
Concepts: seek information, ask technical questions for clarification
Relationship: Users ask questions to gain knowledge and clarify technical aspects.
Criteria: Users sought information and asked technical questions.
Phrase: Seek information.

42.
Concepts: community resource, share images and resources
Relationship: Users share resources and images relevant to the software community.
Criteria: Users shared community resources and relevant images.
Phrase: Share community resources.

43.
Concepts: direct users to resources, provide access information
Relationship: Designers direct users to resources and provide necessary access information.
Criteria: Designers directed users to resources and provided access information.
Phrase: Direct users to resources.

44.
Concepts: evaluate software usability
Relationship: Designers and users assess the usability of the software.
Criteria: Designers and users evaluated the usability of the software.
Phrase: Evaluate software usability.

45.
Concepts: share user experiences
Relationship: Users share their experiences and anecdotes regarding software use.
Criteria: Users shared their experiences impacting their software use.
Phrase: Share user experiences.
---