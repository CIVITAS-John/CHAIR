You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (24 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
24. 
Concepts: {Repeat the input 24}
Relationship: {What is logical relationship between concepts in code 24, or N/A if not applicable}
Criteria: {Who did what, and how for code 24}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: user input, invite user participation
- Solicitations or requests for user input or feedback.
- Invitations or solicitations for user participation or feedback.

2.
Concepts: solicit suggestions, soliciting suggestions
- Requests for suggestions, ideas, or feedback from users or the community.
- A designer solicits suggestions or requirements from the community.

3.
Concepts: user satisfaction, user satisfaction with software features
- A user expresses satisfaction or praise for the software or its features.
- A user expresses satisfaction or praise for a software feature.

4.
Concepts: positive, complimenting software, positive feedback, compliments the software, praising software
- A user expresses a positive sentiment or opinion about the software or its features.
- User compliments or praises the software's features or design.
- A user provides positive feedback or praise about the software.
- User expresses praise or admiration for the software's features or performance.
- A user praises or expresses positive feedback about the software or platform.

5.
Concepts: comparative feedback, comparison to similar apps, compare with other software
- A user compares the software to others, highlighting its strengths and weaknesses.
- Users compare the software to other similar applications, highlighting its strengths and weaknesses.
- Comparisons or evaluations of the software with other similar products.

6.
Concepts: context of use, usability and context of use
- Instances where users describe the specific contexts in which they use the software.
- Discussions about how the software is used in different contexts and its usability.

7.
Concepts: user experience, user experience and impact
- Instances where users share their experiences or opinions about using the software.
- Users sharing their experiences and the impact of the software on their teaching or learning.

8.
Concepts: software usability, usability and practicality
- A user comments on the software's usability or practicality.
- User comments on the ease of use and practicality of the software.

9.
Concepts: user response
- Input and suggestions provided by users regarding the design and functionality of the product.
- Instances where users provide feedback or ask questions that influence the design process.
- Instances where users provide feedback or suggestions to improve the software.
- Instances where users provide suggestions or feedback on features and functionalities.
- Instances where users provide feedback or ask questions about the app's development and updates.

10.
Concepts: designer responsiveness
- Instances where designers respond to user queries or engage with user comments, indicating active communication between designers and users.
- Instances where designers respond to user inquiries, suggestions, or feedback.
- Instances where designers respond to user feedback or suggestions.
- Instances where designers acknowledge user feedback and discuss potential solutions or updates.
- Designers responding to user feedback and addressing their concerns or suggestions.
- Instances where designers respond to user queries or feedback, showing attentiveness to user needs.

11.
Concepts: system limitations
- User mentions limitations or constraints of their system or environment.
- Mentioning limitations or constraints due to the system or platform used.

12.
Concepts: development transparency
- Instances where designers provide detailed information about development processes, challenges, and progress.
- Keeping the community informed about the development process and upcoming changes.
- Designer maintains transparency about the development process.

13.
Concepts: user engagement
- Instances where users actively participate in the conversation, showing interest or involvement in the community.
- Instances where users engage with designers through questions, feedback, or expressions of anticipation.
- Instances where users actively participate in the conversation, showing interest and involvement.

14.
Concepts: resources sharing
- Instances where designers or users share resources, such as download links, development plans, or announcements.
- Information about where and how to access resources, files, or downloads related to Physics Lab.
- Instances where users or designers share files, images, or other resources with the community.
- A designer shares resources, links, or information about Physics Lab or its development.

15.
Concepts: self-correction
- A designer corrects or clarifies their previous statement.
- A designer responds to their own previous statement, often to correct or clarify.

16.
Concepts: future design plan
- Plans or proposals for future design or development.
- The designer discusses potential future design plans or considerations.

17.
Concepts: encourage participatory design
- Instances where the community contributes to the design and development of the Physics Lab by providing suggestions or feedback that influence the development process.
- Instances where designers seek or consider user input in the design and development process.
- Instances where users are invited to participate in the design process or provide input.
- Instances where users and designers collaboratively discuss features and usability, reflecting a user-centered design approach.
- The involvement of users in the design and development process, contributing their insights and needs.
- Encouragement by designers for users to contribute ideas, feedback, and suggestions for the development of Physics Lab.
- Active involvement of users in the design process to ensure the product meets their needs and preferences.
- The involvement of users in the design process to ensure the product meets their needs and preferences.
- Instances where users and designers collaboratively discuss or work on design improvements.

18.
Concepts: collaborative problem solving
- Moments where designers and users work together to address issues.
- Collaborative efforts between users and designers to solve issues and improve the product.
- Instances where users and designers work together to address issues or improve the software.

19.
Concepts: managing expectations
- Managing expectations or setting boundaries.
- A designer manages user expectations about a feature or update.

20.
Concepts: user feedback integration
- Instances where user feedback is acknowledged and incorporated into the design process.
- Instances where user feedback is actively sought and incorporated into the design process.

21.
Concepts: role identification
- Instances where users or designers identify their roles, which can help understand the community structure and the roles within it.
- Instances where participants identify their roles or expertise, contributing to the problem-solving process.
- Identifying roles within the community, such as designers, teachers, or other users.

22.
Concepts: informal communication
- Instances where the tone of the conversation is casual or informal, indicating the nature of the community's communication style.
- Casual and non-technical interactions among community members, including humor and personal remarks.

23.
Concepts: promote community engagement
- Instances where members of the community actively participate in discussions, ask questions, or provide feedback.
- Instances where users or designers engage in discussions that foster community interaction and participation.
- Active participation and interaction among community members, including both users and designers.
- Efforts made by designers to actively involve and communicate with the user community.

24.
Concepts: iterative development
- Instances where designers discuss updates, new features, or bug fixes.
- The process of repeatedly refining and improving a product based on feedback and testing.
- The process of continuously improving the product based on feedback and testing.
- Instances where the design process is described as iterative, with ongoing optimizations and updates.
===
Here are the definitions for each code:

---
1.
Concepts: user input, invite user participation
Relationship: The concepts are related as they both involve soliciting user involvement in the design process.
Criteria: Designers solicit user input or invite user participation in the design process.
Phrase: Soliciting user input and participation.

2.
Concepts: solicit suggestions, soliciting suggestions
Relationship: The concepts are identical and refer to the same idea of seeking user input.
Criteria: Designers request suggestions or ideas from users or the community.
Phrase: Soliciting user suggestions.

3.
Concepts: user satisfaction, user satisfaction with software features
Relationship: The concepts are related as they both refer to positive user experiences with the software.
Criteria: Users express satisfaction or praise for the software or its features.
Phrase: Expressing user satisfaction.

4.
Concepts: positive, complimenting software, positive feedback, compliments the software, praising software
Relationship: The concepts are related as they all refer to positive user sentiments towards the software.
Criteria: Users express positive sentiments or opinions about the software or its features.
Phrase: Providing positive feedback.

5.
Concepts: comparative feedback, comparison to similar apps, compare with other software
Relationship: The concepts are related as they all involve comparing the software to others.
Criteria: Users compare the software to others, highlighting its strengths and weaknesses.
Phrase: Providing comparative feedback.

6.
Concepts: context of use, usability and context of use
Relationship: The concepts are related as they both refer to how the software is used in different contexts.
Criteria: Users describe the specific contexts in which they use the software.
Phrase: Describing context of use.

7.
Concepts: user experience, user experience and impact
Relationship: The concepts are related as they both refer to users sharing their experiences with the software.
Criteria: Users share their experiences or opinions about using the software.
Phrase: Sharing user experiences.

8.
Concepts: software usability, usability and practicality
Relationship: The concepts are related as they both refer to the ease of use of the software.
Criteria: Users comment on the software's usability or practicality.
Phrase: Commenting on usability.

9.
Concepts: user response
Relationship: The concepts are related as they all refer to user input or feedback.
Criteria: Users provide feedback or suggestions to improve the software.
Phrase: Providing user feedback.

10.
Concepts: designer responsiveness
Relationship: The concepts are related as they all refer to designers engaging with user feedback.
Criteria: Designers respond to user queries or engage with user comments.
Phrase: Responding to user feedback.

11.
Concepts: system limitations
Relationship: N/A
Criteria: Users mention limitations or constraints of their system or environment.
Phrase: Mentioning system limitations.

12.
Concepts: development transparency
Relationship: N/A
Criteria: Designers provide detailed information about development processes, challenges, and progress.
Phrase: Providing development transparency.

13.
Concepts: user engagement
Relationship: N/A
Criteria: Users actively participate in the conversation, showing interest or involvement in the community.
Phrase: Engaging in community discussions.

14.
Concepts: resources sharing
Relationship: N/A
Criteria: Designers or users share resources, such as download links, development plans, or announcements.
Phrase: Sharing resources.

15.
Concepts: self-correction
Relationship: N/A
Criteria: A designer corrects or clarifies their previous statement.
Phrase: Correcting previous statements.

16.
Concepts: future design plan
Relationship: N/A
Criteria: Designers discuss potential future design plans or considerations.
Phrase: Discussing future design plans.

17.
Concepts: encourage participatory design
Relationship: N/A
Criteria: Designers seek or consider user input in the design and development process.
Phrase: Encouraging participatory design.

18.
Concepts: collaborative problem solving
Relationship: N/A
Criteria: Designers and users work together to address issues.
Phrase: Collaborating on problem-solving.

19.
Concepts: managing expectations
Relationship: N/A
Criteria: Designers manage user expectations about a feature or update.
Phrase: Managing user expectations.

20.
Concepts: user feedback integration
Relationship: N/A
Criteria: User feedback is acknowledged and incorporated into the design process.
Phrase: Integrating user feedback.

21.
Concepts: role identification
Relationship: N/A
Criteria: Users or designers identify their roles, which can help understand the community structure.
Phrase: Identifying roles.

22.
Concepts: informal communication
Relationship: N/A
Criteria: The tone of the conversation is casual or informal.
Phrase: Engaging in informal communication.

23.
Concepts: promote community engagement
Relationship: N/A
Criteria: Designers or users engage in discussions that foster community interaction and participation.
Phrase: Promoting community engagement.

24.
Concepts: iterative development
Relationship: N/A
Criteria: Designers discuss updates, new features, or bug fixes.
Phrase: Engaging in iterative development.