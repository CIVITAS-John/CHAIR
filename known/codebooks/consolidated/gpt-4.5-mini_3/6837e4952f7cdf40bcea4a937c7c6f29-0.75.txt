You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (15 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
15. 
Concepts: {Repeat the input 15}
Relationship: {What is logical relationship between concepts in code 15, or N/A if not applicable}
Criteria: {Who did what, and how for code 15}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: discuss ongoing research, communicate ongoing work
- Designers discuss current efforts and ongoing research.
- Designers communicate updates about ongoing work within a group setting.

2.
Concepts: share usability tips, enhance user interface
- Designers share tips and tricks for improving usability based on experience.
- Designers discuss interface design while emphasizing usability improvements.

3.
Concepts: share app release info, share timelines and inform about versions, facilitate user communication
- Designers communicate schedules and update statuses regarding software releases.
- Designers share projected timelines for updates and inform users about software versions.
- Designers provided updates and timelines regarding software releases to users.

4.
Concepts: highlight progress, provide internal updates
- Designers share important updates related to the software's progress and developments.
- Designers provide updates regarding internal changes and planned improvements for the software.

5.
Concepts: elaborate on suggestions, propose refinements and collaborate on improvements
- Designers reflect on experiences to clarify current software functionalities or recommendations.
- Designers propose enhancements and actively collaborate with users to refine software design based on feedback.

6.
Concepts: confirm compatibility, discuss technical requirements
- Designers confirm and answer inquiries regarding compatibility of features.
- Designers discuss system requirements to ensure software compatibility.

7.
Concepts: provide technical clarification, provide technical information
- Developers provide clarification on technical functionalities.
- Designers provide specifications and technical information to clarify software components.

8.
Concepts: engage in troubleshooting, addressing technical issues
- Designers inquire about problems and engage in troubleshooting.
- Users request technical assistance, and designers provide support to address and resolve technical problems.

9.
Concepts: provide problem solutions, offers a diagnose for the problem
- The designer analyzes compatibility issues raised by users and provides solutions.
- Designers diagnosed a specific technical limitation of the software based on user inquiries.

10.
Concepts: discuss limitations, talk about design challenges
- Users discuss system limitations while designers acknowledge current software constraints.
- Designers discuss challenges and how limitations can be overcome in development.

11.
Concepts: comparison, compare software applications
- A user draws a comparison, providing deeper insight into their perspective on quality or value.
- Users compare the software with similar applications to highlight practical utility.

12.
Concepts: express mutual gratitude, user interaction and gratitude
- Users and designers express gratitude and acknowledgment for contributions made.
- Users express gratitude and appreciation for the designer's efforts or features.

13.
Concepts: provide context, explains the answer
- A user shares contextual information to clarify their questions or discussions.
- A user provides an explanation or context regarding a previous question or issue related to the application.

14.
Concepts: share classroom experiences, share teaching experiences
- Users provide feedback on student engagement and classroom experiences.
- Users share their teaching experiences and qualifications to inform discussions.

15.
Concepts: request community resources, initiate community engagement
- Users request assistance in locating resources within the community for information.
- Users initiate interactions within the community to seek assistance or information.
===
---
Definitions for each code (15 in total):
1.
Concepts: discuss ongoing research, communicate ongoing work  
Relationship: Both concepts involve sharing information about current projects and efforts within a collaborative environment.  
Criteria: Designers discuss and communicate updates about their ongoing research and work to the group.  
Phrase: Engaging in collaborative discussions about ongoing research.

2.
Concepts: share usability tips, enhance user interface  
Relationship: Both concepts focus on improving user experience through shared knowledge and practices.  
Criteria: Designers share usability tips and discuss interface design to enhance user experience.  
Phrase: Sharing tips to enhance usability.

3.
Concepts: share app release info, share timelines and inform about versions, facilitate user communication  
Relationship: These concepts together emphasize the importance of timely communication concerning software updates to users.  
Criteria: Designers communicate schedules, projected timelines, and updates about software releases to facilitate user communication.  
Phrase: Communicating app release information.

4.
Concepts: highlight progress, provide internal updates  
Relationship: Both concepts are geared towards keeping stakeholders informed about development progress and internal changes.  
Criteria: Designers share important updates related to software progress and provide internal updates on planned improvements.  
Phrase: Providing updates on software progress.

5.
Concepts: elaborate on suggestions, propose refinements and collaborate on improvements  
Relationship: The concepts relate through a cycle of feedback that fosters collaboration for software enhancement.  
Criteria: Designers elaborate on user suggestions and propose refinements while collaborating on improvements.  
Phrase: Collaborating on software refinements.

6.
Concepts: confirm compatibility, discuss technical requirements  
Relationship: These concepts are interconnected as they both pertain to ensuring software functionality within specified parameters.  
Criteria: Designers confirm compatibility and discuss technical requirements to ensure proper software functionality.  
Phrase: Confirming software compatibility.

7.
Concepts: provide technical clarification, provide technical information  
Relationship: Both concepts deal with the dissemination of technical knowledge to clarify functionalities and specifications.  
Criteria: Developers and designers provide technical clarification and information regarding software components.  
Phrase: Clarifying technical functionalities.

8.
Concepts: engage in troubleshooting, addressing technical issues  
Relationship: These concepts relate to actions taken to resolve technical problems through user interaction.  
Criteria: Designers engage in troubleshooting and provide support to address technical issues raised by users.  
Phrase: Engaging in troubleshooting support.

9.
Concepts: provide problem solutions, offers a diagnose for the problem  
Relationship: The two concepts are related as they both focus on diagnosing issues and offering solutions based on user input.  
Criteria: Designers analyze issues raised by users and provide diagnoses and solutions for identified problems.  
Phrase: Diagnosing and solving problems.

10.
Concepts: discuss limitations, talk about design challenges  
Relationship: The concepts are linked through a discussion of challenges and constraints in software development and design.  
Criteria: Users discuss limitations while designers acknowledge challenges to overcome in development.  
Phrase: Discussing design challenges.

11.
Concepts: comparison, compare software applications  
Relationship: These concepts involve analyzing and evaluating software in relation to other applications to highlight qualities.  
Criteria: Users draw comparisons between the software and similar applications to provide insights into quality.  
Phrase: Comparing software applications.

12.
Concepts: express mutual gratitude, user interaction and gratitude  
Relationship: Both concepts focus on the reciprocal acknowledgment between users and designers, fostering a positive community environment.  
Criteria: Users and designers express mutual gratitude for contributions and efforts made in the community.  
Phrase: Expressing mutual gratitude.

13.
Concepts: provide context, explains the answer  
Relationship: These concepts revolve around the need for clarity and understanding in discussions, enhancing communication.  
Criteria: Users provide context and explanations to clarify previous questions or issues related to the application.  
Phrase: Providing contextual explanations.

14.
Concepts: share classroom experiences, share teaching experiences  
Relationship: The concepts are related through a shared focus on educational experiences that inform community discussions.  
Criteria: Users provide feedback on classroom and teaching experiences to inform and enhance discussions in the community.  
Phrase: Sharing educational experiences.

15.
Concepts: request community resources, initiate community engagement  
Relationship: These concepts connect through the proactive efforts of users to engage with and seek support from the community.  
Criteria: Users request assistance for community resources and initiate engagement to seek information.  
Phrase: Initiating community engagement.  
---