You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another and please do not merge them.
Determine the logical relationship between concepts within each code, such as inclusion, parallel, or intersection.
Write clear and generalizable criteria for each code and do not introduce unnecessary details. Then, write an accurate label for the combined concept.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (23 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Label: {A consolidated label of code 1}
...
23. 
Concepts: {Repeat the input 23}
Relationship: {What is logical relationship between concepts in code 23, or N/A if not applicable}
Criteria: {Who did what, and how for code 23}
Label: {A consolidated label of code 23}
---
~~~
1.
Concepts: software design principles, design principles
- Principles or philosophies guiding software design decisions.
- Explaining the reasoning or thought process behind design decisions, the underlying philosophy or principles guiding design decisions are discussed.

2.
Concepts: development approach, software development approach
- Discussing or outlining approaches to development
- Approaches or philosophies behind software development.

3.
Concepts: problem solving, problem inquiry
- Discussing or addressing problems or issues
- A problem or issue is inquired about or discussed.

4.
Concepts: technical solution, workaround sharing and solutions
- Designer proposes or discusses technical solutions to issues.
- Sharing of workarounds or solutions for technical issues, and a designer or administrator suggests or discusses a temporary solution or workaround for an issue

5.
Concepts: design challenge, development challenges
- A challenge or obstacle related to design or development.
- Discussion of difficulties or obstacles encountered during the development process.

6.
Concepts: browser issues, technical issue
- An issue or problem related to a web browser.
- A technical issue or problem encountered by a user.

7.
Concepts: transparency, development transparency
- Openness or transparency about design decisions or processes
- Provision of information or insight into the development process

8.
Concepts: refinement, categorization
- Suggestions for refinement or categorization in the online community
- Suggestions or discussions about organizing or categorizing content.

9.
Concepts: comparative feedback, feature critique and discussion
- User compares the product or feature to others, highlighting its strengths or weaknesses.
- Critiques or negative feedback on software features, and discussion or consideration of new features or functionalities, or existing features are discussed for improvement or refinement

10.
Concepts: testing phase, software evaluation and testing
- Discussion of testing or beta phases of the software.
- An evaluation or assessment of software, and discussion of software testing or quality assurance in the online community

11.
Concepts: user anticipation, community anticipation
- Expression of anticipation or eagerness for an update or release
- Expectations or anticipation of future updates or changes

12.
Concepts: update scope discussions, software feature scope and impact
- The scope or magnitude of an update or feature is discussed or described.
- Discussions about the scope or boundaries of software features, and discussion of software feature impact or significance in the online community

13.
Concepts: user control, user autonomy
- Users' control over software features or customization options.
- Providing users with choices or options, expression of user preferences or opinions in the online community.

14.
Concepts: manual editing, manual customization
- Mention of manual editing as an option or feature.
- Ability or option to customize or adjust a design or layout manually
- The designer discusses manual adjustments or customization options in Physics Lab, a designer or administrator allows or discusses manual adjustments to layout or design.

15.
Concepts: layout customization, design flexibility, software customization
- Customization or flexibility in layout or design
- Mentioning flexibility in design or editing capabilities, discussion of flexibility or customization options.
- Customization options or flexibility in software design.

16.
Concepts: feature stability, long-term stability
- Discussion of ensuring stability or reliability of features.
- The designer mentions the long-term stability of a feature.

17.
Concepts: feature overview and explanation, functionality description and component functionality
- The designer provides an overview of features or plans, and explaining or demonstrating features or functionality
- Describing the functionality or features of a product, and designer discusses or explains the functionality of a component

18.
Concepts: feature list, application features
- Lists or descriptions of software features
- Discussion of features or functionalities of the application.

19.
Concepts: community involvement in design
- Designer involves or engages the community in the development process.
- Engaging in conversation or discussion with others, new users interact with the community or ask questions.

20.
Concepts: product and component updates
- Discussion of updates or changes made to Physics Lab or components
- Description of new components, features, or functionalities, additions or updates to software components.

21.
Concepts: design refinement discussions
- The online community discusses refining or optimizing design elements or circuit diagrams.
- Improving or refining design elements for better performance, statement of a goal to simplify a design or process.

22.
Concepts: teaching context
- Discussion of teaching contexts or scenarios
- Reference to the context of a school or educational setting, discussion or consideration of classroom setup or environment.

23.
Concepts: community interaction
- Interacting with others in the community
- Negotiation or discussion among community members, discussion of community consultation or feedback.
===
Here are the definitions for each code:

---
1.
Concepts: software design principles, design principles
Relationship: Inclusion (software design principles are a type of design principles)
Criteria: Discussing or explaining the underlying philosophy or principles guiding design decisions
Label: Design Philosophy

2.
Concepts: development approach, software development approach
Relationship: Synonymy (development approach and software development approach are interchangeable terms)
Criteria: Outlining or discussing approaches to software development
Label: Development Approach

3.
Concepts: problem solving, problem inquiry
Relationship: Parallel (problem solving and problem inquiry are related but distinct concepts)
Criteria: Discussing or addressing problems or issues
Label: Problem Discussion

4.
Concepts: technical solution, workaround sharing and solutions
Relationship: Inclusion (workaround sharing and solutions are types of technical solutions)
Criteria: Proposing or discussing technical solutions to issues
Label: Technical Solutions

5.
Concepts: design challenge, development challenges
Relationship: Synonymy (design challenge and development challenges are interchangeable terms)
Criteria: Discussing difficulties or obstacles encountered during development
Label: Development Challenges

6.
Concepts: browser issues, technical issue
Relationship: Inclusion (browser issues are a type of technical issue)
Criteria: Discussing or addressing technical issues or problems
Label: Technical Issues

7.
Concepts: transparency, development transparency
Relationship: Synonymy (transparency and development transparency are interchangeable terms)
Criteria: Providing information or insight into the development process
Label: Development Transparency

8.
Concepts: refinement, categorization
Relationship: Parallel (refinement and categorization are related but distinct concepts)
Criteria: Suggesting refinement or categorization in the online community
Label: Content Organization

9.
Concepts: comparative feedback, feature critique and discussion
Relationship: Inclusion (feature critique and discussion are types of comparative feedback)
Criteria: Comparing the product or feature to others, highlighting strengths or weaknesses
Label: Feature Feedback

10.
Concepts: testing phase, software evaluation and testing
Relationship: Synonymy (testing phase and software evaluation and testing are interchangeable terms)
Criteria: Discussing testing or beta phases of the software
Label: Software Testing

11.
Concepts: user anticipation, community anticipation
Relationship: Synonymy (user anticipation and community anticipation are interchangeable terms)
Criteria: Expressing anticipation or eagerness for an update or release
Label: Update Anticipation

12.
Concepts: update scope discussions, software feature scope and impact
Relationship: Inclusion (software feature scope and impact are aspects of update scope discussions)
Criteria: Discussing the scope or magnitude of an update or feature
Label: Update Scope

13.
Concepts: user control, user autonomy
Relationship: Synonymy (user control and user autonomy are interchangeable terms)
Criteria: Providing users with choices or options
Label: User Autonomy

14.
Concepts: manual editing, manual customization
Relationship: Inclusion (manual customization is a type of manual editing)
Criteria: Mentioning manual editing as an option or feature
Label: Manual Customization

15.
Concepts: layout customization, design flexibility, software customization
Relationship: Inclusion (layout customization and design flexibility are types of software customization)
Criteria: Discussing customization or flexibility in layout or design
Label: Customization Options

16.
Concepts: feature stability, long-term stability
Relationship: Synonymy (feature stability and long-term stability are interchangeable terms)
Criteria: Ensuring stability or reliability of features
Label: Feature Stability

17.
Concepts: feature overview and explanation, functionality description and component functionality
Relationship: Inclusion (functionality description and component functionality are aspects of feature overview and explanation)
Criteria: Providing an overview of features or plans, explaining or demonstrating features or functionality
Label: Feature Explanation

18.
Concepts: feature list, application features
Relationship: Synonymy (feature list and application features are interchangeable terms)
Criteria: Listing or describing software features
Label: Feature List

19.
Concepts: community involvement in design
Relationship: N/A
Criteria: Involving the community in the development process
Label: Community Involvement

20.
Concepts: product and component updates
Relationship: Inclusion (component updates are a type of product update)
Criteria: Discussing updates or changes made to Physics Lab or components
Label: Product Updates

21.
Concepts: design refinement discussions
Relationship: N/A
Criteria: Discussing refining or optimizing design elements or circuit diagrams
Label: Design Refinement

22.
Concepts: teaching context
Relationship: N/A
Criteria: Discussing teaching contexts or scenarios
Label: Teaching Context

23.
Concepts: community interaction
Relationship: N/A
Criteria: Interacting with others in the community
Label: Community Interaction