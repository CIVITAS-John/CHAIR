You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (37 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
37. 
Concepts: {Repeat the input 37}
Relationship: {What is logical relationship between concepts in code 37, or N/A if not applicable}
Criteria: {Who did what, and how for code 37}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: checking for updates, inquire about update timeline
- Users asked about the timing of forthcoming software updates.
- Users inquire about the timeline for upcoming software updates.

2.
Concepts: update status inquiry, inquire about android update status
- User inquires about the current status of a version update for a specific platform.
- User inquires about the status of updates for the Android version of the software.

3.
Concepts: software access, question for access
- A user inquired about the process of obtaining the software.
- Users request information on how to access specific software versions.

4.
Concepts: download inquiry, ask for download information, inquire about download process
- A user asks for clarification on where to download specific versions of the software.
- A user requests information on where to locate download links for software.
- Users inquire about the process for downloading the software or updates.

5.
Concepts: platform specification, inquire about platform compatibility
- User inquires about specifications related to a particular software version.
- A user asks for clarity regarding the compatibility of a specific software version.

6.
Concepts: ask a question, ask a question about how to use
- Users pose questions regarding functionalities or usage of the software.
- Users inquire about the operational aspects of the software.

7.
Concepts: technical question, ask a question about the app
- Users ask for specific information about downloading or utilizing the app effectively.
- Users ask for clarification about the application’s compatibility or specific functionalities.

8.
Concepts: user reviews, software usability, highlight practicality, usability and practicality
- User shares positive feedback regarding the software's practicality.
- User provides a favorable evaluation of the software's practical effectiveness compared to alternatives.
- User expresses satisfaction with the software's practicality compared to others.
- User comments on the ease of use and practicality of the software.

9.
Concepts: compare with other software, comparison with other applications
- Users compare the application with other software, emphasizing the practical benefits of the discussed app.
- A user compared the software favorably against alternatives in terms of practicality.

10.
Concepts: comparative feedback, comparison to similar apps
- Users provide evaluations of the software compared to similar tools, highlighting advantages or drawbacks.
- Users compare the software to alternatives, expressing preferences based on usability.

11.
Concepts: compliments the software, share positive feedback
- A user praises the software for its impressive features during a teaching session.
- A user shares positive feedback regarding the software's effectiveness in educational settings.

12.
Concepts: student engagement, describe students' positive responses in class
- Users express positive feedback regarding educational engagement using the software.
- Users describe positive classroom experiences and student reactions utilizing the software.

13.
Concepts: illustrate classroom success, sharing classroom experiences
- Users share their successful experiences using the software in an educational setting.
- Users share their practical experiences using the software in educational settings.

14.
Concepts: user experience, user experience and impact
- Instances where users share their experiences or opinions about using the software.
- Users sharing their experiences and the impact of the software on their teaching or learning.

15.
Concepts: compliment software's 3d effect, compliment on the 3d effect
- A user compliments the software's 3D visual effects.
- User compliments the quality or effectiveness of a 3D visual aspect of the software.

16.
Concepts: positive, praise software, positive feedback, user satisfaction with software features
- Users articulated positive feedback regarding the effectiveness and usability of the software.
- Users express positive evaluations of the software’s effectiveness and practicality.
- Users express satisfaction and praise regarding the software's features and performance.
- Users express positive opinions about the software's utility.

17.
Concepts: feature appreciation, appreciation of features
- Users express their positive feelings regarding specific features or the overall concept of the software.
- Users express gratitude or appreciation for specific features that add value to their experience.

18.
Concepts: compliment, express approval
- Users express admiration or support for ideas and software features.
- Users express their enthusiasm or approval of the software or its features.

19.
Concepts: context, provide context about school resources
- Users provided context on limitations and current situation affecting their technology in schools.
- A user highlights constraints related to school resources affecting technology use.

20.
Concepts: system limitations, sharing info about old computer systems in school
- A user describes limitations of the computer systems available in their school.
- A user shares information about the limitations of their school's computer systems.

21.
Concepts: teacher-admin interaction, ask teachers' needs
- A designer seeks teachers' input on curricular elements relevant to the software.
- Designers actively seek input from teachers regarding their expectations or preferences for the software's functionalities.

22.
Concepts: consultation, consult on educational standards
- Designer engages with educators to gather information related to educational materials or practices.
- Designer seeks input from educators regarding educational standards in current materials.

23.
Concepts: school implementation, mention school initiative
- User references initiatives related to technology integration within their educational institution.
- Users mention initiatives undertaken by their educational institutions related to technology.

24.
Concepts: questioning identity, question about identity
- Designers try to identify users’ roles to tailor responses and suggestions accordingly.
- Designers inquire about the professional roles of participants to better tailor interactions or features.

25.
Concepts: identity inquiry, confirming teacher identity
- The designer seeks confirmation of the user's professional role.
- Designers inquire about the educational roles and backgrounds of users.

26.
Concepts: inquire about user's background, ask about user's professional background
- Designers inquire about the professional backgrounds of users to understand their perspectives better.
- Designers inquire about the professional background of community members.

27.
Concepts: teacher identity, user background inquiry
- A designer inquires about the user's teaching level for context.
- The designer asks a user to clarify their teaching level or background.

28.
Concepts: share teaching experience, teaching experience
- A user shares their background and experience in education.
- Users share their experiences related to their teaching backgrounds in different educational settings.

29.
Concepts: emoji, express emotion, user expression
- A user expresses emotions or reactions through the use of an emoji in communication.
- A user expresses feelings through emoji use.
- Users express their sentiments or emotions using symbols such as emojis.

30.
Concepts: emoji use, emoji communication
- Users engage with the conversation using emojis to express emotions or reactions.
- Users express thoughts or feelings through the use of emojis as part of the conversation.

31.
Concepts: provide context, provide context for need
- Users offer contextual information that relates to challenges or experiences affecting application use.
- Users explain the context behind their needs or requests for specific features.

32.
Concepts: reflection on experiences, reflect on past experience
- Designer shares a personal experience that reflects on prior software interaction.
- Designers reflect on their past experiences to improve current software use or features.

33.
Concepts: context of use, usability and context of use
- Instances where users describe the specific contexts in which they use the software.
- Discussions about how the software is used in different contexts and its usability.

34.
Concepts: user anticipation, express anticipation
- Users express eagerness or curiosity regarding updates to the software.
- Users express eagerness or anticipation for upcoming updates or releases related to the app.

35.
Concepts: show interest, new user interaction
- User expresses curiosity or eagerness about accessing the software.
- Users express curiosity or inquiries regarding usage of the software, often in an engaging manner.

36.
Concepts: paying respect, pay respect to experts
- Users express reverence for experts in the field before making requests for software additions.
- User shows respect to experts while requesting additional educational resources or features.

37.
Concepts: resources sharing
- Instances where designers or users share resources, such as download links, development plans, or announcements.
- Information about where and how to access resources, files, or downloads related to Physics Lab.
- Instances where users or designers share files, images, or other resources with the community.
===
---
Definitions for each code (37 in total):

1.
Concepts: checking for updates, inquire about update timeline  
Relationship: Users are actively seeking information related to timing and updates, linking their curiosity and need for timely information.  
Criteria: Users inquire about when software updates are forthcoming and any associated timelines.  
Phrase: Inquire about software update timelines.

2.
Concepts: update status inquiry, inquire about android update status  
Relationship: Relates to seeking specific information regarding the current software version update for a particular platform, highlighting an emphasis on current status.  
Criteria: Users ask for the status of updates, specifically for the Android version of the software.  
Phrase: Inquire about version update status.

3.
Concepts: software access, question for access  
Relationship: Reflects a user's need to obtain information about accessing the software, as their ability to use it hinges on this knowledge.  
Criteria: Users request information on how to obtain the software.  
Phrase: Request software access information.

4.
Concepts: download inquiry, ask for download information, inquire about download process  
Relationship: Highlights confusion or complexity around the downloadable aspect of the software, linking to how users look for specific downloadable resources.  
Criteria: Users inquire about where and how to download software versions.  
Phrase: Inquire about software download processes.

5.
Concepts: platform specification, inquire about platform compatibility  
Relationship: Users are seeking essential compatibility information that affects their ability to use the software on different platforms, bridging their needs with software capabilities.  
Criteria: Users ask for information regarding software specifications and compatibility with particular platforms.  
Phrase: Inquire about platform compatibility.

6.
Concepts: ask a question, ask a question about how to use  
Relationship: Encompasses users’ inquiries about software functionality, indicating a desire for greater understanding of how to utilize the software effectively.  
Criteria: Users pose questions about how to use various features of the software.  
Phrase: Ask about software functionalities.

7.
Concepts: technical question, ask a question about the app  
Relationship: Reflects inquiries directed towards the practical use and capabilities of the application, highlighting user's interaction focus.  
Criteria: Users inquire about specific functionalities or compatibility of the application.  
Phrase: Ask technical questions about the app.

8.
Concepts: user reviews, software usability, highlight practicality, usability and practicality  
Relationship: Focuses on user evaluations spot lighting the software's effectiveness, creating a connection between user opinions and software performance.  
Criteria: Users provide feedback regarding the software's practical effectiveness and usability.  
Phrase: Share user reviews on software usability.

9.
Concepts: compare with other software, comparison with other applications  
Relationship: Reflects a comparative evaluation against other software that showcases perceived advantages and usability dynamics, bound by user experiences.  
Criteria: Users compare the application to alternatives focusing on usability benefits.  
Phrase: Compare software with alternatives.

10.
Concepts: comparative feedback, comparison to similar apps  
Relationship: Connections made between the software’s features and other similar tools help users express preferences highlighting subjective usability experiences.  
Criteria: Users evaluate the software against similar applications, emphasizing strengths or weaknesses.  
Phrase: Provide comparative feedback on similar apps.

11.
Concepts: compliments the software, share positive feedback  
Relationship: Captures the essence of user satisfaction that can foster community sentiment towards software in an educational context.  
Criteria: Users praise the software for its effective features and functionality in teaching.  
Phrase: Share compliments about the software.

12.
Concepts: student engagement, describe students' positive responses in class  
Relationship: Links student responses to software engagement, underlining how user experiences can enrich educational outcomes.  
Criteria: Users report on positive experiences and student reactions resulting from using the software.  
Phrase: Describe students' engagement with the software.

13.
Concepts: illustrate classroom success, sharing classroom experiences  
Relationship: Users sharing successful outcomes provides evidence of practical impact in educational settings, linking software use with classroom result.  
Criteria: Users share successful and practical experiences utilizing the software.  
Phrase: Share classroom success stories.

14.
Concepts: user experience, user experience and impact  
Relationship: Establishes user reflections that underscore how experiences lead to broader implications regarding educational methods.  
Criteria: Users discuss their experiences and impacts of software on teaching or learning.  
Phrase: Reflect on user experiences.

15.
Concepts: compliment software's 3d effect, compliment on the 3d effect  
Relationship: Evaluates a specific feature of the software (3D effects), indicating user engagement with particular aesthetics in usability.  
Criteria: Users compliment and praise the quality of the software's 3D visual effects.  
Phrase: Compliment the software's 3D effects.

16.
Concepts: positive, praise software, positive feedback, user satisfaction with software features  
Relationship: Focuses on user sentiments towards effectiveness and features, interlinking satisfaction with overall software evaluation.  
Criteria: Users express positive feedback regarding effectiveness and unique features of the software.  
Phrase: Praise the software features.

17.
Concepts: feature appreciation, appreciation of features  
Relationship: Captures user gratitude related to unique functionalities, showcasing the importance of tool-specific features to satisfaction.  
Criteria: Users express appreciation for specific software features that enhance their usage experience.  
Phrase: Appreciate software features.

18.
Concepts: compliment, express approval  
Relationship: Highlights appreciation or approval as reflections of user engagement with software, fostering a supportive community atmosphere.  
Criteria: Users express enthusiasm for and approval of the software’s features.  
Phrase: Express approval of the software.

19.
Concepts: context, provide context about school resources  
Relationship: Users are providing context for their technology limitations which cues a wider educational concern linking to available resources.  
Criteria: Users discuss the limitations affecting their access to and effectiveness of educational technology in schools.  
Phrase: Provide context on school resources.

20.
Concepts: system limitations, sharing info about old computer systems in school  
Relationship: Reflects knowledge sharing regarding technological constraints in educational settings, informing software developers about limitations faced in schools.  
Criteria: Users provide information regarding functional limitations of educational computer systems.  
Phrase: Discuss system limitations in schools.

21.
Concepts: teacher-admin interaction, ask teachers' needs  
Relationship: Highlights a reciprocal dialogue needed to tune in software functionalities to align with educational needs as expressed by teacher input.  
Criteria: Designers inquire about teachers' preferences and expectations relevant to the software.  
Phrase: Seek input from teachers' needs.

22.
Concepts: consultation, consult on educational standards  
Relationship: Establishes a connection between designer-user dialogue to align software with educational needs accordingly tailored to called standards and practices.  
Criteria: Designers engage users to gather insights on educational standards relevant to their projects.  
Phrase: Consult on educational standards.

23.
Concepts: school implementation, mention school initiative  
Relationship: Focus on technological advancements within educational institutions highlighting initiatives that frame the software's relevance.  
Criteria: Users detail local initiatives concerning technology integration in education.  
Phrase: Mention school technology initiatives.

24.
Concepts: questioning identity, question about identity  
Relationship: Centers around establishing user context and needs by ascertaining roles within educational environments, establishing clarity in user interactions.  
Criteria: Designers ask users about their roles to tailor their guidance appropriately.  
Phrase: Inquire about user identity.

25.
Concepts: identity inquiry, confirming teacher identity  
Relationship: Captures a vital aspect of understanding user backgrounds crucial for better interaction and functional suitability.  
Criteria: Designers seek confirmation of users' professional roles in relation to software use.  
Phrase: Confirm user identity kind.

26.
Concepts: inquire about user's background, ask about user's professional background  
Relationship: Links the understanding of users' professions to extract functional relevance that guides feature improvement and software adaptability.  
Criteria: Designers inquire about professional backgrounds of community members to understand their circumstances better.  
Phrase: Inquire about users' backgrounds.

27.
Concepts: teacher identity, user background inquiry  
Relationship: Establishes the need to identify teaching levels for better support and functionality alignment, crucial for effective software use in educational contexts.  
Criteria: Designers inquire about the teaching background of users to inform software interactions.  
Phrase: Clarify teacher identity.

28.
Concepts: share teaching experience, teaching experience  
Relationship: User narratives enrich community knowledge about educational practices, facilitating a broader exchange of teaching methodologies.  
Criteria: Users share experiences regarding their teaching methods or backgrounds.  
Phrase: Share teaching experiences.

29.
Concepts: emoji, express emotion, user expression  
Relationship: Users utilize emojis to convey emotions effectively enriching the communication expressed in the community.  
Criteria: Users express feelings and emotions through emoji use.  
Phrase: Use emojis to express emotions.

30.
Concepts: emoji use, emoji communication  
Relationship: Emojis act as communicative tools reflecting emotional states, further illustrating how users engage in informal interaction within the community.  
Criteria: Users communicate using emojis to express sentiments in collaborative discussions.  
Phrase: Employ emojis in communication.

31.
Concepts: provide context, provide context for need  
Relationship: Contextualizing users’ needs emphasizes the limitations affecting their software engagement and suggests needed changes or improvements.  
Criteria: Users offer context related to challenges affecting their software use.  
Phrase: Provide context for user needs.

32.
Concepts: reflection on experiences, reflect on past experience  
Relationship: Allows reflection on prior interactions to enhance current user experiences, linking past usage with future capabilities.  
Criteria: Designers and users reflect on prior experiences to inform future software improvements.  
Phrase: Reflect on past software experiences.

33.
Concepts: context of use, usability and context of use  
Relationship: Aligns user experiences with specific contexts to shed light on how usability varies across different settings.  
Criteria: Users describe the contexts in which they use the software, influencing practical usability discussions.  
Phrase: Describe context of software use.

34.
Concepts: user anticipation, express anticipation  
Relationship: Captures eagerness towards forthcoming software updates, manifesting a connection between user expectations and community engagement.  
Criteria: Users express eagerness for upcoming software updates or features.  
Phrase: Express anticipation for updates.

35.
Concepts: show interest, new user interaction  
Relationship: Engaging new users enhances the community's growth and indicates curiosity about software’s functionalities.  
Criteria: Users show eagerness to explore software through inquiries.  
Phrase: Show interest in software use.

36.
Concepts: paying respect, pay respect to experts  
Relationship: Respect for experts cultivates an atmosphere of shared knowledge and prompts requests for improved features, bolstering community dynamics.  
Criteria: Users express respect for experts while seeking feedback or software improvements.  
Phrase: Pay respect to experts in requests.

37.
Concepts: resources sharing  
Relationship: Illuminates knowledge sharing within the community, creating an interconnected space where resources are regularly exchanged among users and designers.  
Criteria: Users and designers share essential resources like download links and educational materials within the community.  
Phrase: Share resources within the community.  
---