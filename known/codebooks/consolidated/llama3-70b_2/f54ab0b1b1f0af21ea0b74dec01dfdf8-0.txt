You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: discuss usability, consider usability
- Designer discusses the usability or user experience of the app.
- User or designer considers the usability or user experience of a feature or function.

2.
Concepts: identifying usability issues, address usability concern
- A user identifies a usability issue or suggests an improvement.
- The designer addresses a usability concern related to a specific feature or platform.

3.
Concepts: design thoughts, design question
- Thoughts or ideas are shared about the design of the software or a specific feature.
- A designer or developer asks a question about the design or functionality of the software.

4.
Concepts: providing download instructions, provide solution for download query
- Designers provide instructions on how to download the software.
- Designers provide a solution or answer to a user's query about downloading the software.

5.
Concepts: technical detail, explaining technical artifacts
- Providing technical details or specifications about a feature or system.
- Technical artifacts or features are explained or described.

6.
Concepts: component functionality, component explanation
- Discussing the functionality or capabilities of a component or feature.
- Explaining the capabilities or features of a new component or feature in the Physics Lab software.

7.
Concepts: visual aid provision, using images for demonstration
- A designer or developer provides a visual aid, such as an image, to facilitate understanding.
- Images are used to help demonstrate or explain a concept.

8.
Concepts: elicit feedback, opinion gathering, inquiring user input
- Designers ask for or prompt users to provide feedback.
- The designer seeks opinions or gathers feedback from users on specific topics or features.
- Designers ask for help or input from users for future development or planning, which is a form of inquiring user input.

9.
Concepts: integrating user feedback, creating a feedback loop
- User feedback is acknowledged and incorporated into the design process.
- Processes where user feedback is solicited and incorporated into design decisions, creating a feedback loop.

10.
Concepts: group communication, sharing with the group
- The designer communicates with the group, sharing updates, or seeking feedback.
- The designer shares information or resources with the group, which may involve suggesting group sharing.

11.
Concepts: respond to a question, answering for design support, query and response
- A user or designer responds directly to a question.
- A user provides design support or answers a design-related question.
- Instances where users ask questions and receive answers from designers or other community members.

12.
Concepts: inquire about user context, show interest in user context
- Designers inquire about a user's background or role to better understand their needs.
- Designers show interest in users' context, such as their profession or teaching level.

13.
Concepts: express comprehension, understanding designers' situation
- Designers express comprehension or understanding of users' needs or requests.
- User understands or acknowledges the designer's situation or constraints.

14.
Concepts: reassure user, reassurance
- A designer reassures or calms a user's concerns.
- Instances where designers reassure users about the progress and express gratitude or encouragement.

15.
Concepts: confirming user requests, confirm alignment with user needs
- The designer confirms or acknowledges user statements or requests, which is a form of designer confirmation.
- The designer confirms that a feature or update aligns with user needs.

16.
Concepts: acknowledge community expertise, acknowledging community needs
- Designer acknowledges or seeks input from the community or experts.
- A designer acknowledges or responds to the needs or concerns of the community.

17.
Concepts: greet community, engage community member
- User greets or addresses the community.
- Addressing or responding to a specific community member.

18.
Concepts: building community rapport, community connection
- An effort is made to build rapport with the community.
- Expressing a sense of community or connection with others, often through shared interests or goals.

19.
Concepts: community feedback, seeking feedback
- Users providing feedback and suggestions to improve the product.
- Feedback or input is sought from the community, which is a form of seeking user input.

20.
Concepts: plan to gather feedback, future consultation
- Planning or intending to gather feedback or opinions.
- Announcing plans for future consultations or discussions with the community, often to gather feedback or input.

21.
Concepts: accepting suggestion, accepting user suggestions
- Accepting or acknowledging suggestions or ideas from community members.
- A designer or developer accepts a suggestion or idea from a user, which is a form of suggestion acceptance.

22.
Concepts: taking feedback, acknowledge feedback
- Feedback is taken or acknowledged, often with a plan to implement changes.
- Acknowledgments or recognition of feedback, suggestions, or concerns from the community.

23.
Concepts: suggest new features, feature request invitation
- Users or designers suggest new features or improvements.
- Designers invite users to suggest new features or improvements.

24.
Concepts: encouraging feedback, encourage elaboration
- Encouragement is given to provide more feedback or suggestions.
- Encouragement is given to elaborate on a suggestion or idea.

25.
Concepts: encouraging interaction, encouraging discussion
- Encouraging interaction, feedback, or suggestions from users, often through open-ended questions or invitations.
- The designer encourages users to ask questions or discuss topics in the future, which is a form of encouraging discussion.

26.
Concepts: express praise, positive feedback, appreciating features, express approval
- Users express praise or positive feedback about the software.
- Expressing positive feedback or appreciation for the system or feature.
- Users express appreciation or admiration for a specific feature.
- A user expresses approval or appreciation for an idea or feature.

27.
Concepts: appreciating design effort, acknowledge craftsmanship
- Users express appreciation for design effort or craftsmanship.
- A user acknowledges or appreciates the craftsmanship or attention to detail in the Physics Lab.

28.
Concepts: gratitude, self sufficiency, resource utilization
- Expressing gratitude or appreciation for the software or community support.
- A user expresses gratitude or appreciation for a resource or assistance.
- A user expresses gratitude or appreciation for resources provided by the community or designer.

29.
Concepts: sharing user experience, sharing positive experiences
- Users share their experiences or opinions about using the software.
- Users share positive experiences or stories about using the software in the classroom.

30.
Concepts: inquire about usage, inquire about user needs
- Information is requested about how the software is used or experienced.
- Expressing user needs or requirements for the software.

31.
Concepts: ease of use, emphasize convenience
- Discussions related to the ease of use and user-friendliness of the software.
- Emphasizing the importance of convenience or ease of use in the software.

32.
Concepts: emphasize importance, focus on user experience
- A user emphasizes the importance of a feature or functionality.
- The user suggests or emphasizes the importance of user experience.
===
Here are the definitions for each code:

---
1.
Concepts: discuss usability, consider usability
Relationship: The concepts are related as they both involve thinking about the user's experience with the app.
Criteria: Designers discuss or consider the usability of the app or a feature.
Phrase: Discussing usability considerations.

2.
Concepts: identifying usability issues, address usability concern
Relationship: The concepts are related as they both involve addressing problems with the app's usability.
Criteria: Users identify usability issues, and designers address these concerns.
Phrase: Addressing usability issues.

3.
Concepts: design thoughts, design question
Relationship: The concepts are related as they both involve thinking about the design of the software.
Criteria: Designers share thoughts or ask questions about the design of the software or a feature.
Phrase: Sharing design thoughts.

4.
Concepts: providing download instructions, provide solution for download query
Relationship: The concepts are related as they both involve helping users with downloading the software.
Criteria: Designers provide instructions or solutions to help users download the software.
Phrase: Providing download support.

5.
Concepts: technical detail, explaining technical artifacts
Relationship: The concepts are related as they both involve providing information about the technical aspects of the software.
Criteria: Designers provide technical details or explanations about the software or a feature.
Phrase: Explaining technical details.

6.
Concepts: component functionality, component explanation
Relationship: The concepts are related as they both involve explaining the capabilities of a component or feature.
Criteria: Designers explain the functionality or capabilities of a component or feature.
Phrase: Explaining component functionality.

7.
Concepts: visual aid provision, using images for demonstration
Relationship: The concepts are related as they both involve using visual aids to facilitate understanding.
Criteria: Designers provide visual aids or use images to demonstrate a concept.
Phrase: Providing visual aids.

8.
Concepts: elicit feedback, opinion gathering, inquiring user input
Relationship: The concepts are related as they all involve seeking input from users.
Criteria: Designers ask for feedback, opinions, or input from users on specific topics or features.
Phrase: Eliciting user feedback.

9.
Concepts: integrating user feedback, creating a feedback loop
Relationship: The concepts are related as they both involve incorporating user feedback into the design process.
Criteria: Designers acknowledge and incorporate user feedback into the design process, creating a feedback loop.
Phrase: Integrating user feedback.

10.
Concepts: group communication, sharing with the group
Relationship: The concepts are related as they both involve sharing information with the group.
Criteria: Designers communicate with the group, sharing updates or seeking feedback.
Phrase: Sharing with the group.

11.
Concepts: respond to a question, answering for design support, query and response
Relationship: The concepts are related as they all involve responding to user queries.
Criteria: Designers respond to user questions, providing design support or answers.
Phrase: Responding to user queries.

12.
Concepts: inquire about user context, show interest in user context
Relationship: The concepts are related as they both involve showing interest in the user's background or needs.
Criteria: Designers inquire about or show interest in users' context, such as their profession or teaching level.
Phrase: Inquiring about user context.

13.
Concepts: express comprehension, understanding designers' situation
Relationship: The concepts are related as they both involve expressing understanding or comprehension.
Criteria: Designers express comprehension of users' needs or requests, or users understand the designer's situation.
Phrase: Expressing comprehension.

14.
Concepts: reassure user, reassurance
Relationship: The concepts are related as they both involve calming user concerns.
Criteria: Designers reassure or calm users' concerns, expressing gratitude or encouragement.
Phrase: Reassuring users.

15.
Concepts: confirming user requests, confirm alignment with user needs
Relationship: The concepts are related as they both involve confirming user requests or needs.
Criteria: Designers confirm user statements or requests, or confirm that a feature aligns with user needs.
Phrase: Confirming user requests.

16.
Concepts: acknowledge community expertise, acknowledging community needs
Relationship: The concepts are related as they both involve acknowledging the community's input or needs.
Criteria: Designers acknowledge or respond to community expertise or needs.
Phrase: Acknowledging community expertise.

17.
Concepts: greet community, engage community member
Relationship: The concepts are related as they both involve interacting with the community.
Criteria: Users greet or address the community, or address a specific community member.
Phrase: Greeting the community.

18.
Concepts: building community rapport, community connection
Relationship: The concepts are related as they both involve building relationships with the community.
Criteria: Efforts are made to build rapport with the community, expressing a sense of connection.
Phrase: Building community rapport.

19.
Concepts: community feedback, seeking feedback
Relationship: The concepts are related as they both involve seeking input from the community.
Criteria: Users provide feedback, and designers seek feedback from the community.
Phrase: Seeking community feedback.

20.
Concepts: plan to gather feedback, future consultation
Relationship: The concepts are related as they both involve planning to gather feedback or input.
Criteria: Designers plan to gather feedback or announce future consultations with the community.
Phrase: Planning to gather feedback.

21.
Concepts: accepting suggestion, accepting user suggestions
Relationship: The concepts are related as they both involve accepting input from users.
Criteria: Designers accept suggestions or ideas from users.
Phrase: Accepting user suggestions.

22.
Concepts: taking feedback, acknowledge feedback
Relationship: The concepts are related as they both involve acknowledging user feedback.
Criteria: Feedback is taken or acknowledged, often with a plan to implement changes.
Phrase: Acknowledging feedback.

23.
Concepts: suggest new features, feature request invitation
Relationship: The concepts are related as they both involve suggesting new features or improvements.
Criteria: Users or designers suggest new features, or designers invite users to suggest new features.
Phrase: Suggesting new features.

24.
Concepts: encouraging feedback, encourage elaboration
Relationship: The concepts are related as they both involve encouraging users to provide more input.
Criteria: Designers encourage users to provide more feedback or elaborate on a suggestion.
Phrase: Encouraging feedback.

25.
Concepts: encouraging interaction, encouraging discussion
Relationship: The concepts are related as they both involve encouraging users to interact or discuss topics.
Criteria: Designers encourage users to ask questions, discuss topics, or provide feedback.
Phrase: Encouraging interaction.

26.
Concepts: express praise, positive feedback, appreciating features, express approval
Relationship: The concepts are related as they all involve expressing positive sentiments.
Criteria: Users express praise, positive feedback, or appreciation for the software or a feature.
Phrase: Expressing praise.

27.
Concepts: appreciating design effort, acknowledge craftsmanship
Relationship: The concepts are related as they both involve appreciating the design effort or craftsmanship.
Criteria: Users express appreciation for design effort or acknowledge the craftsmanship in the Physics Lab.
Phrase: Appreciating design effort.

28.
Concepts: gratitude, self sufficiency, resource utilization
Relationship: The concepts are related as they all involve expressing gratitude or appreciation.
Criteria: Users express gratitude or appreciation for the software, community support, or resources.
Phrase: Expressing gratitude.

29.
Concepts: sharing user experience, sharing positive experiences
Relationship: The concepts are related as they both involve sharing experiences or opinions about using the software.
Criteria: Users share their experiences or opinions about using the software, often sharing positive stories.
Phrase: Sharing user experiences.

30.
Concepts: inquire about usage, inquire about user needs
Relationship: The concepts are related as they both involve inquiring about user needs or experiences.
Criteria: Designers inquire about how the software is used or experienced, or express user needs or requirements.
Phrase: Inquiring about usage.

31.
Concepts: ease of use, emphasize convenience
Relationship: The concepts are related as they both involve prioritizing user experience.
Criteria: Discussions involve the ease of use and user-friendliness of the software, emphasizing convenience.
Phrase: Emphasizing ease of use.

32.
Concepts: emphasize importance, focus on user experience
Relationship: The concepts are related as they both involve prioritizing user experience.
Criteria: Users emphasize the importance of a feature or functionality, or suggest prioritizing user experience.
Phrase: Emphasizing user experience.