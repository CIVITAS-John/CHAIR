You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: feature complexity, explain complexity
- Designer mentions the complexity of a feature.
- The designer explains the complexity of a feature or issue.

2.
Concepts: suggest prioritization, user feedback prioritization
- User suggests prioritizing certain features or tasks.
- Prioritizing or responding to user feedback or suggestions.

3.
Concepts: technical support, technical support and guidance
- Instances where designers or users provide technical assistance or address technical issues.
- Instances where designers provide technical support or information about the software.
- Instances where designers provide technical support or guidance to users.

4.
Concepts: offer help, personalized assistance
- The designer offers assistance or support to users.
- A designer offers personalized assistance or support to a user.

5.
Concepts: teaching, give usage instructions, provide practical advice
- Designer provides instructions, explanations, or guidance on using a feature or function.
- A designer provides instructions on how to use a feature or function.
- A designer provides practical advice on how to use a feature or function.

6.
Concepts: elaboration of suggestion, encouraging elaboration
- Designer elaborates on a suggestion or idea.
- A designer encourages a user to provide more information or elaborate on their idea.

7.
Concepts: simulation accuracy, explain simulation detail
- The designer discusses or explains the accuracy of simulations or models.
- A designer explains the details of a simulation.

8.
Concepts: user interface, input methods
- Designer discusses the user interface.
- A designer discusses input methods or user interface aspects of the software.

9.
Concepts: feature discussion, discuss usability
- Designer engages in a discussion about a feature.
- A designer discusses the usability of a feature or function.

10.
Concepts: feature introduction, feature clarification
- Participants introduce or explain the functions or features of a new tool or application.
- Participants clarify or explain the features or functions of an existing tool or application.

11.
Concepts: explanation, provide feature details, feature explanation, explain functionality
- The designer explains a concept, feature, or functionality in detail.
- A designer explains the details of a feature or function.
- The designer explains or describes a feature, its functionality, or its benefits.
- A designer explains how a feature or function works.

12.
Concepts: give examples of feature, give an example of the feature's functions
- The developer provides examples or illustrations of a feature or functionality.
- Designer provides an example to illustrate a feature's functionality.

13.
Concepts: design rationale, give rationale to development decision
- Designers explaining the rationale behind design decisions.
- Designers providing rationales for development decisions.

14.
Concepts: explain design goals, explain intention of app design
- The designer explains the design goals or philosophy behind the software.
- Designer explains the design intentions or goals behind the software.

15.
Concepts: design principles, explain design philosophy
- A statement that explains the underlying principles or philosophy of a design or feature.
- The underlying principles and approaches guiding the design and development of the product.

16.
Concepts: positive, user satisfaction with software features, express approval, praise for software, positive feedback, user satisfaction
- Expressing positive sentiments, praise, or appreciation for software or its features.
- User expresses satisfaction or praise for specific software features.
- A user expresses approval or enthusiasm for the software or its features.
- User praises or expresses positive sentiments towards the software.
- User expresses positive sentiment towards the software or its features.
- A user expresses satisfaction, praise, or positive feedback about the software or its features.

17.
Concepts: software usability, highlight practicality, usability and practicality
- User praises the software's usability or practicality.
- User expresses appreciation for the software's practicality.
- User comments on the ease of use and practicality of the software.

18.
Concepts: software comparison, comparison with other applications, comparison to similar apps
- Comparing the software to other similar tools
- Comparisons between the software and other applications.
- A user compares the software to similar applications or alternatives.

19.
Concepts: context of use, usability and context of use
- Instances where users describe the specific contexts in which they use the software.
- Discussions about how the software is used in different contexts and its usability.

20.
Concepts: personal anecdote, sharing past experiences
- User shares a personal anecdote or experience related to the software.
- User shares a past experience or incident related to the software or community.

21.
Concepts: user experience, user experience and impact
- Instances where users share their experiences or opinions about using the software.
- Users sharing their experiences and the impact of the software on their teaching or learning.

22.
Concepts: suggesting compatibility check, system compatibility confirmation
- Designer suggests checking the system's compatibility with certain software or hardware.
- A designer confirms the compatibility of the software with a specific system.

23.
Concepts: version details, provide version information
- Designer shares details about a specific software version.
- The designer provides additional information about a specific version or release.

24.
Concepts: pc version inquiry, pc version discussion
- Inquiring about the PC version of the software
- User discusses or inquires about the PC version of the software.

25.
Concepts: system limitations, platform limitation
- Discussing limitations or constraints of a system or platform.
- The designer explains why a feature or functionality cannot be implemented due to system limitations.
- Discussion of limitations or restrictions due to platform or system requirements.

26.
Concepts: outdated technology, highlight outdated technology
- Comments about outdated or old technology.
- A user highlights or mentions outdated technology or infrastructure.

27.
Concepts: frustration, express frustration with current limitations
- Expressions of frustration or annoyance due to technical issues or limitations.
- Expression of frustration or dissatisfaction with current limitations or features.

28.
Concepts: teacher, teacher role
- A user identifies themselves as a teacher or educator, or discusses their teaching experience.
- Users identifying themselves as teachers or responding to teacher-related questions.

29.
Concepts: teaching experience, sharing teaching experience
- Users share their teaching experience or background.
- A user shares their teaching experience or background.

30.
Concepts: establish credibility, professional background sharing
- User shares their professional experience to establish credibility.
- Users share their professional background to establish credibility and context.

31.
Concepts: identity inquiry, question about identity
- Asking about the role or identity of another user in the community.
- Questions or clarifications about a user's identity, role, or background.

32.
Concepts: teacher identity, confirming teacher identity
- User or designer identifies themselves as a teacher or asks about someone's teaching background.
- A question or inquiry about the user's professional background or identity as a teacher.
===
Here are the definitions for each code:

---
1.
Concepts: feature complexity, explain complexity
Relationship: The designer explains the complexity of a feature, implying a causal relationship between the two concepts.
Criteria: Designer explains the complexity of a feature.
Phrase: Explaining feature complexity.

2.
Concepts: suggest prioritization, user feedback prioritization
Relationship: The user suggests prioritization, and the designer responds to the user's feedback, implying a reciprocal relationship between the two concepts.
Criteria: User suggests prioritizing certain features or tasks, and designer responds to user feedback.
Phrase: Prioritizing user feedback.

3.
Concepts: technical support, technical support and guidance
Relationship: Technical support and guidance are two aspects of the same concept, implying a synonymous relationship between the two.
Criteria: Designer or user provides technical assistance or addresses technical issues.
Phrase: Providing technical support.

4.
Concepts: offer help, personalized assistance
Relationship: Offering help and personalized assistance are two aspects of the same concept, implying a synonymous relationship between the two.
Criteria: Designer offers assistance or support to users.
Phrase: Offering personalized assistance.

5.
Concepts: teaching, give usage instructions, provide practical advice
Relationship: Teaching, giving usage instructions, and providing practical advice are all aspects of guiding users, implying a synonymous relationship between the three concepts.
Criteria: Designer provides instructions, explanations, or guidance on using a feature or function.
Phrase: Providing usage instructions.

6.
Concepts: elaboration of suggestion, encouraging elaboration
Relationship: The designer encourages elaboration, and the user provides more information, implying a reciprocal relationship between the two concepts.
Criteria: Designer encourages a user to provide more information or elaborate on their idea.
Phrase: Encouraging elaboration.

7.
Concepts: simulation accuracy, explain simulation detail
Relationship: The designer explains the accuracy of simulations, implying a causal relationship between the two concepts.
Criteria: Designer discusses or explains the accuracy of simulations or models.
Phrase: Explaining simulation accuracy.

8.
Concepts: user interface, input methods
Relationship: The user interface and input methods are two aspects of the same concept, implying a synonymous relationship between the two.
Criteria: Designer discusses the user interface or input methods.
Phrase: Discussing user interface.

9.
Concepts: feature discussion, discuss usability
Relationship: The designer engages in a discussion about a feature, including its usability, implying a causal relationship between the two concepts.
Criteria: Designer engages in a discussion about a feature, including its usability.
Phrase: Discussing feature usability.

10.
Concepts: feature introduction, feature clarification
Relationship: Introducing and clarifying features are two aspects of the same concept, implying a synonymous relationship between the two.
Criteria: Participants introduce or explain the functions or features of a new tool or application.
Phrase: Introducing features.

11.
Concepts: explanation, provide feature details, feature explanation, explain functionality
Relationship: Explanation, providing feature details, and explaining functionality are all aspects of clarifying features, implying a synonymous relationship between the four concepts.
Criteria: Designer explains a concept, feature, or functionality in detail.
Phrase: Explaining features.

12.
Concepts: give examples of feature, give an example of the feature's functions
Relationship: Giving examples and illustrating feature functionality are two aspects of the same concept, implying a synonymous relationship between the two.
Criteria: Designer provides examples or illustrations of a feature or functionality.
Phrase: Providing feature examples.

13.
Concepts: design rationale, give rationale to development decision
Relationship: The designer explains the rationale behind design decisions, implying a causal relationship between the two concepts.
Criteria: Designers explaining the rationale behind design decisions.
Phrase: Explaining design rationale.

14.
Concepts: explain design goals, explain intention of app design
Relationship: Explaining design goals and intentions are two aspects of the same concept, implying a synonymous relationship between the two.
Criteria: Designer explains the design goals or philosophy behind the software.
Phrase: Explaining design goals.

15.
Concepts: design principles, explain design philosophy
Relationship: Design principles and philosophy are two aspects of the same concept, implying a synonymous relationship between the two.
Criteria: A statement that explains the underlying principles or philosophy of a design or feature.
Phrase: Explaining design principles.

16.
Concepts: positive, user satisfaction with software features, express approval, praise for software, positive feedback, user satisfaction
Relationship: Expressing positive sentiments, praise, or appreciation are all aspects of user satisfaction, implying a synonymous relationship between the six concepts.
Criteria: Expressing positive sentiments, praise, or appreciation for software or its features.
Phrase: Expressing user satisfaction.

17.
Concepts: software usability, highlight practicality, usability and practicality
Relationship: Usability and practicality are two aspects of the same concept, implying a synonymous relationship between the two.
Criteria: User praises the software's usability or practicality.
Phrase: Praising software usability.

18.
Concepts: software comparison, comparison with other applications, comparison to similar apps
Relationship: Comparing the software to other similar tools, applications, or alternatives are all aspects of the same concept, implying a synonymous relationship between the three.
Criteria: Comparing the software to other similar tools or applications.
Phrase: Comparing software.

19.
Concepts: context of use, usability and context of use
Relationship: Context of use and usability are two aspects of the same concept, implying a synonymous relationship between the two.
Criteria: Instances where users describe the specific contexts in which they use the software.
Phrase: Describing context of use.

20.
Concepts: personal anecdote, sharing past experiences
Relationship: Sharing personal anecdotes and past experiences are two aspects of the same concept, implying a synonymous relationship between the two.
Criteria: User shares a personal anecdote or experience related to the software.
Phrase: Sharing personal anecdotes.

21.
Concepts: user experience, user experience and impact
Relationship: User experience and impact are two aspects of the same concept, implying a synonymous relationship between the two.
Criteria: Instances where users share their experiences or opinions about using the software.
Phrase: Sharing user experiences.

22.
Concepts: suggesting compatibility check, system compatibility confirmation
Relationship: Suggesting a compatibility check and confirming system compatibility are two aspects of the same concept, implying a synonymous relationship between the two.
Criteria: Designer suggests checking the system's compatibility with certain software or hardware.
Phrase: Suggesting compatibility check.

23.
Concepts: version details, provide version information
Relationship: Version details and providing version information are two aspects of the same concept, implying a synonymous relationship between the two.
Criteria: Designer shares details about a specific software version.
Phrase: Providing version information.

24.
Concepts: pc version inquiry, pc version discussion
Relationship: Inquiring about the PC version and discussing the PC version are two aspects of the same concept, implying a synonymous relationship between the two.
Criteria: Inquiring about the PC version of the software.
Phrase: Inquiring about PC version.

25.
Concepts: system limitations, platform limitation
Relationship: System limitations and platform limitations are two aspects of the same concept, implying a synonymous relationship between the two.
Criteria: Discussing limitations or constraints of a system or platform.
Phrase: Discussing system limitations.

26.
Concepts: outdated technology, highlight outdated technology
Relationship: Outdated technology and highlighting outdated technology are two aspects of the same concept, implying a synonymous relationship between the two.
Criteria: Comments about outdated or old technology.
Phrase: Highlighting outdated technology.

27.
Concepts: frustration, express frustration with current limitations
Relationship: Expressing frustration and frustration with current limitations are two aspects of the same concept, implying a synonymous relationship between the two.
Criteria: Expressions of frustration or annoyance due to technical issues or limitations.
Phrase: Expressing frustration.

28.
Concepts: teacher, teacher role
Relationship: The user identifies themselves as a teacher, implying a categorical relationship between the two concepts.
Criteria: A user identifies themselves as a teacher or educator, or discusses their teaching experience.
Phrase: Identifying as a teacher.

29.
Concepts: teaching experience, sharing teaching experience
Relationship: Sharing teaching experience and teaching experience are two aspects of the same concept, implying a synonymous relationship between the two.
Criteria: Users share their teaching experience or background.
Phrase: Sharing teaching experience.

30.
Concepts: establish credibility, professional background sharing
Relationship: Establishing credibility and sharing professional background are two aspects of the same concept, implying a synonymous relationship between the two.
Criteria: User shares their professional experience to establish credibility.
Phrase: Establishing credibility.

31.
Concepts: identity inquiry, question about identity
Relationship: Inquiring about identity and questioning identity are two aspects of the same concept, implying a synonymous relationship between the two.
Criteria: Asking about the role or identity of another user in the community.
Phrase: Inquiring about identity.

32.
Concepts: teacher identity, confirming teacher identity
Relationship: Teacher identity and confirming teacher identity are two aspects of the same concept, implying a synonymous relationship between the two.
Criteria: User or designer identifies themselves as a teacher or asks about someone's teaching background.
Phrase: Confirming teacher identity.