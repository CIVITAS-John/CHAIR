You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: ai-generated code, evaluating ai-generated code
- Participant interacts with AI-generated code or discusses its potential.
- The participant evaluates and summarizes AI-generated code.

2.
Concepts: creates a code skeleton before asking ai, uses llm-driven interfaces for coding assistance
- The participant creates a code skeleton before asking AI for assistance.
- The participant uses LLM-driven interfaces for coding assistance and optimization.

3.
Concepts: seeks ai-generated code, asks questions and seeks human intervention
- Participants seek or ask for AI-generated code or specific syntax help.
- Participants ask questions and seek human intervention to clarify AI-generated code.

4.
Concepts: human-ai: seek help, requests verification
- The code seeks help from AI, such as asking AI to verify code.
- The participant requests verification or validation of AI-generated code or output.

5.
Concepts: notes inefficiencies, suggests incremental coding
- Participant notes inefficiencies in the coding process, such as writing large chunks of code before testing.
- The participant suggests incremental coding, writing chunks of code and checking for errors.

6.
Concepts: avoiding code copying, using ai-generated code as a reference, chatgpt usage: reference
- Avoids direct code copying and instead uses AI-generated code as reference.
- The participant uses AI-generated code as a reference.
- The code uses generated code only for reference when writing own code.

7.
Concepts: uses ai code due to time constraints, human-ai: completely rely on ai due to situations
- The participant uses AI-generated code due to time constraints, prioritizing efficiency over manual coding.
- Completely relies on AI-generated code due to time constraints.

8.
Concepts: ai code usage, decides to copy and paste
- Uses AI-generated code, often by copying and pasting it, or decides to run it directly.
- Decides to copy and paste AI-generated code despite having the option to run it.

9.
Concepts: user choice, adapting ai-generated code
- Exercises personal choice in using AI-generated code.
- The participant adapts AI-generated code to fit their specific needs or preferences.

10.
Concepts: optimizing, chatgpt ability (positive): optimization, assistance to optimize & debug
- Sees AI as a tool for optimizing code and improving coding efficiency.
- The participant expresses a positive view of the AI's ability to optimize code.
- Appreciates the AI's assistance in optimizing and debugging code.

11.
Concepts: comments, documentation and commenting
- Comments on the quality, readability, or usability of AI-generated code or documentation.
- The interviewee's perception of AI's role in generating well-documented and commented code.

12.
Concepts: values ai feedback, external validation
- Values AI's feedback, suggestions, or guidance in improving code quality or writing efficiency.
- The participant values external validation, such as compiler feedback, to improve the AI's generated code.

13.
Concepts: notes ai's efficiency, using chatgpt for code analysis
- Participant notes AI's efficiency in analyzing code and providing feedback.
- The expert uses the AI for code analysis and feedback.

14.
Concepts: appreciating ai-generated code usability, appreciating ai-generated code automation
- The participant appreciates ChatGPT's code commenting and documentation.
- The participant appreciates the ability to run executable code generated by the AI.

15.
Concepts: task satisfaction, successful code generation
- Expresses satisfaction with AI-generated code that meets their expectations.
- Shares a positive experience with AI-generated code.

16.
Concepts: values flexibility, allows ai's intuition
- Values flexibility in AI-generated code.
- Values AI's intuition and flexibility in generating code.

17.
Concepts: explores ai potential, questions ai capabilities
- Explores the potential capabilities of AI-generated code.
- Questions the capabilities of AI in generating code.

18.
Concepts: iteratively builds models, highlights iterative improvement
- Iteratively builds models and uses AI-generated code as a starting point.
- Envisions iterative improvement with AI-generated code.

19.
Concepts: integrates ai into established workflow, integration into existing workflow
- Integrates AI into established workflow and processes.
- How E04 plans to integrate AI into their established process of building models.

20.
Concepts: model integration, integrating generated code into models
- The user wants the capability to integrate generated code into the model automatically.
- Integrates generated code into models or existing work.

21.
Concepts: integration, practice
- The participant values the integration of AI-generated code into the model and the ability to run it.
- The participant values the iterative process of building models and appreciates the AI's ability to assist with code generation.

22.
Concepts: model library, expects ai to find specific models
- The participant expects the AI to have access to a model library or repository of existing models.
- Participant expects AI to find specific models or libraries in NetLogo.

23.
Concepts: ability (positive), translation and equation development
- The expert highlights the AI's ability to assist with specific tasks, such as equation development.
- The AI's capability to assist in translating models from other languages and developing equations.

24.
Concepts: ai analysis, evaluation to debug
- Analyzes code using the LLM-driven interface.
- Evaluates and debugs code generated by the LLM-driven interface.

25.
Concepts: error reporting, error detection
- Reports errors to the LLM-driven interface.
- Identifies the LLM-driven interface's ability to detect errors.

26.
Concepts: use cases, typical use case
- Specific ways in which the interviewee uses the LLM-driven interface to support their work.
- The participant describes a typical use case or scenario for using the AI-driven interface.

27.
Concepts: desires more flexibility, customization and flexibility
- Desires more flexibility and customization options in AI-generated code.
- The need for more options and flexibility in the AI's responses and functionalities.

28.
Concepts: seeks collaborative problem solving, seeking assistance with personal ideas
- The user seeks collaborative problem-solving with the AI, using their own ideas.
- The participant seeks assistance with personal ideas and uses the AI to explore and refine their own concepts.

29.
Concepts: task initiation, user instructions
- Participant initiates a task by asking AI to create a specific program or code.
- The participant provides instructions or prompts for the AI to generate code.

30.
Concepts: parameter fields, dictates parameters
- Participant fills in parameter fields for AI-generated code.
- The participant dictates parameters or inputs for the AI-driven interface.

31.
Concepts: experimenting with ai capabilities, experimentation with phrases and commands
- Participants experiment with AI by testing its capabilities using different phrases.
- E04's approach to experimenting with different phrases and commands to get the desired AI responses.

32.
Concepts: sets initial task for ai, sets new task for ai
- Sets initial tasks or prompts for the AI system.
- Assigns new tasks or prompts to AI, often to test its capabilities or explore its potential.
===
Here are the definitions for each code:

---
1.
Concepts: ai-generated code, evaluating ai-generated code
Relationship: The participant interacts with AI-generated code and evaluates its quality.
Criteria: Participants interact with AI-generated code and evaluate its quality.
Phrase: Interacts with and evaluates AI-generated code.

2.
Concepts: creates a code skeleton before asking ai, uses llm-driven interfaces for coding assistance
Relationship: The participant prepares a code skeleton before seeking AI assistance.
Criteria: Participants create a code skeleton before seeking AI assistance for coding.
Phrase: Prepares code skeleton before seeking AI assistance.

3.
Concepts: seeks ai-generated code, asks questions and seeks human intervention
Relationship: The participant seeks AI-generated code and clarifies it with human intervention.
Criteria: Participants seek AI-generated code and ask questions to clarify its output.
Phrase: Seeks AI-generated code and clarifies with human intervention.

4.
Concepts: human-ai: seek help, requests verification
Relationship: The participant seeks help from AI and requests verification of its output.
Criteria: Participants seek help from AI and request verification of its output.
Phrase: Seeks help from AI and requests verification.

5.
Concepts: notes inefficiencies, suggests incremental coding
Relationship: The participant identifies inefficiencies and suggests incremental coding as a solution.
Criteria: Participants identify inefficiencies in coding and suggest incremental coding.
Phrase: Identifies inefficiencies and suggests incremental coding.

6.
Concepts: avoiding code copying, using ai-generated code as a reference, chatgpt usage: reference
Relationship: The participant uses AI-generated code as a reference to avoid direct copying.
Criteria: Participants use AI-generated code as a reference to avoid direct copying.
Phrase: Uses AI-generated code as a reference.

7.
Concepts: uses ai code due to time constraints, human-ai: completely rely on ai due to situations
Relationship: The participant relies on AI-generated code due to time constraints.
Criteria: Participants use AI-generated code due to time constraints.
Phrase: Relies on AI-generated code due to time constraints.

8.
Concepts: ai code usage, decides to copy and paste
Relationship: The participant decides to copy and paste AI-generated code.
Criteria: Participants decide to copy and paste AI-generated code.
Phrase: Decides to copy and paste AI-generated code.

9.
Concepts: user choice, adapting ai-generated code
Relationship: The participant exercises personal choice in adapting AI-generated code.
Criteria: Participants exercise personal choice in adapting AI-generated code.
Phrase: Exercises personal choice in adapting AI-generated code.

10.
Concepts: optimizing, chatgpt ability (positive): optimization, assistance to optimize & debug
Relationship: The participant sees AI as a tool for optimizing code and improving coding efficiency.
Criteria: Participants see AI as a tool for optimizing code and improving coding efficiency.
Phrase: Sees AI as a tool for optimizing code.

11.
Concepts: comments, documentation and commenting
Relationship: The participant comments on the quality of AI-generated code and documentation.
Criteria: Participants comment on the quality of AI-generated code and documentation.
Phrase: Comments on AI-generated code and documentation.

12.
Concepts: values ai feedback, external validation
Relationship: The participant values AI's feedback and external validation.
Criteria: Participants value AI's feedback and external validation.
Phrase: Values AI's feedback and external validation.

13.
Concepts: notes ai's efficiency, using chatgpt for code analysis
Relationship: The participant notes AI's efficiency in analyzing code and providing feedback.
Criteria: Participants note AI's efficiency in analyzing code and providing feedback.
Phrase: Notes AI's efficiency in code analysis.

14.
Concepts: appreciating ai-generated code usability, appreciating ai-generated code automation
Relationship: The participant appreciates AI-generated code's usability and automation.
Criteria: Participants appreciate AI-generated code's usability and automation.
Phrase: Appreciates AI-generated code's usability and automation.

15.
Concepts: task satisfaction, successful code generation
Relationship: The participant expresses satisfaction with AI-generated code that meets their expectations.
Criteria: Participants express satisfaction with AI-generated code that meets their expectations.
Phrase: Expresses satisfaction with AI-generated code.

16.
Concepts: values flexibility, allows ai's intuition
Relationship: The participant values flexibility in AI-generated code and allows AI's intuition.
Criteria: Participants value flexibility in AI-generated code and allow AI's intuition.
Phrase: Values flexibility in AI-generated code.

17.
Concepts: explores ai potential, questions ai capabilities
Relationship: The participant explores AI's potential capabilities and questions its limitations.
Criteria: Participants explore AI's potential capabilities and question its limitations.
Phrase: Explores AI's potential capabilities.

18.
Concepts: iteratively builds models, highlights iterative improvement
Relationship: The participant iteratively builds models using AI-generated code and highlights its improvement.
Criteria: Participants iteratively build models using AI-generated code and highlight its improvement.
Phrase: Iteratively builds models using AI-generated code.

19.
Concepts: integrates ai into established workflow, integration into existing workflow
Relationship: The participant integrates AI into their established workflow and processes.
Criteria: Participants integrate AI into their established workflow and processes.
Phrase: Integrates AI into established workflow.

20.
Concepts: model integration, integrating generated code into models
Relationship: The participant integrates generated code into models and existing work.
Criteria: Participants integrate generated code into models and existing work.
Phrase: Integrates generated code into models.

21.
Concepts: integration, practice
Relationship: The participant values the integration of AI-generated code into the model and the iterative process.
Criteria: Participants value the integration of AI-generated code into the model and the iterative process.
Phrase: Values integration of AI-generated code into the model.

22.
Concepts: model library, expects ai to find specific models
Relationship: The participant expects the AI to have access to a model library and find specific models.
Criteria: Participants expect the AI to have access to a model library and find specific models.
Phrase: Expects AI to have access to a model library.

23.
Concepts: ability (positive), translation and equation development
Relationship: The participant highlights the AI's ability to assist with specific tasks, such as equation development.
Criteria: Participants highlight the AI's ability to assist with specific tasks.
Phrase: Highlights AI's ability to assist with specific tasks.

24.
Concepts: ai analysis, evaluation to debug
Relationship: The participant analyzes code using the LLM-driven interface and evaluates it to debug.
Criteria: Participants analyze code using the LLM-driven interface and evaluate it to debug.
Phrase: Analyzes code using the LLM-driven interface.

25.
Concepts: error reporting, error detection
Relationship: The participant reports errors to the LLM-driven interface and identifies its error detection capabilities.
Criteria: Participants report errors to the LLM-driven interface and identify its error detection capabilities.
Phrase: Reports errors to the LLM-driven interface.

26.
Concepts: use cases, typical use case
Relationship: The participant describes specific ways of using the LLM-driven interface to support their work.
Criteria: Participants describe specific ways of using the LLM-driven interface to support their work.
Phrase: Describes typical use cases for the LLM-driven interface.

27.
Concepts: desires more flexibility, customization and flexibility
Relationship: The participant desires more flexibility and customization options in AI-generated code.
Criteria: Participants desire more flexibility and customization options in AI-generated code.
Phrase: Desires more flexibility in AI-generated code.

28.
Concepts: seeks collaborative problem solving, seeking assistance with personal ideas
Relationship: The participant seeks collaborative problem-solving with the AI and uses it to explore personal ideas.
Criteria: Participants seek collaborative problem-solving with the AI and use it to explore personal ideas.
Phrase: Seeks collaborative problem-solving with the AI.

29.
Concepts: task initiation, user instructions
Relationship: The participant initiates a task by asking the AI to create a specific program or code.
Criteria: Participants initiate a task by asking the AI to create a specific program or code.
Phrase: Initiates a task by asking the AI.

30.
Concepts: parameter fields, dictates parameters
Relationship: The participant fills in parameter fields for AI-generated code and dictates parameters.
Criteria: Participants fill in parameter fields for AI-generated code and dictate parameters.
Phrase: Fills in parameter fields for AI-generated code.

31.
Concepts: experimenting with ai capabilities, experimentation with phrases and commands
Relationship: The participant experiments with AI by testing its capabilities using different phrases.
Criteria: Participants experiment with AI by testing its capabilities using different phrases.
Phrase: Experiments with AI capabilities.

32.
Concepts: sets initial task for ai, sets new task for ai
Relationship: The participant sets initial tasks or prompts for the AI system and assigns new tasks.
Criteria: Participants set initial tasks or prompts for the AI system and assign new tasks.
Phrase: Sets tasks or prompts for the AI system.