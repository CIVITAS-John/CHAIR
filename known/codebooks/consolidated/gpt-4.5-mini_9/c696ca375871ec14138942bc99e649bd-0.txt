You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (16 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
16. 
Concepts: {Repeat the input 16}
Relationship: {What is logical relationship between concepts in code 16, or N/A if not applicable}
Criteria: {Who did what, and how for code 16}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: notify users about updates, inform community about releases
- Designers inform the community about the availability of new software versions and updates.
- Designers communicate plans for software updates and inform the community about the status and expected timeline for updates.

2.
Concepts: communicate software updates, communicate software releases
- Designers detail specific updates, provide notes on updates, and announce version details and features.
- Designers make general announcements regarding updates or releases and announce new versions and their review status.

3.
Concepts: announce community updates, communicate development plans
- Designers communicate plans for future updates or features, inviting community feedback.
- Designers share plans for future development or updates and areas of focus with the community.

4.
Concepts: feature optimization, reassure users about features
- The designer reassures users about ongoing improvements to the software.
- Designers reassure users about the upcoming release of a feature and promise future improvements.

5.
Concepts: share development timelines, outline development timelines
- Designers share information about the timing and nature of upcoming features or updates and ongoing development efforts.
- Designers outline future plans for the software's development timeline and share timelines for specific feature development.

6.
Concepts: express user satisfaction, appreciate software features
- Users express satisfaction with the software's practicality and effectiveness.
- Users express their approval or satisfaction with the software or its features.

7.
Concepts: share user experiences, share success stories
- Users share their experiences and the impact of the software on their teaching or learning.
- Users share successful experiences of using the software in classrooms and describe positive student reactions.

8.
Concepts: checking for updates, seek information on updates
- User inquires about the schedule for upcoming updates.
- Users inquire about the status of updates and timelines for upcoming software features.

9.
Concepts: suggest new features, suggest usability enhancements
- Users suggest new features or improvements for the software and request specific enhancements.
- Users suggest specific features to enhance software usability and provide suggestions for design improvements.

10.
Concepts: appreciate designers' dedication, appreciate designer contributions
- Users express appreciation for the dedication shown by designers in their work.
- Users express gratitude and recognition for the contributions of designers.

11.
Concepts: gather user feedback, solicit user input
- Designers invite and request feedback from users to enhance the software.
- Designers actively seek and invite users to share their suggestions for future software iterations.

12.
Concepts: agree on design ideas, acknowledge mutual feedback
- Users and designers express agreement or appreciation for proposed design ideas.
- Users and designers acknowledge and agree with each other's points and input.

13.
Concepts: user role inquiry, inquire about user identity
- Designer inquires about the user's role to tailor responses.
- Designers inquire about the user's professional role and background to better understand their needs.

14.
Concepts: problem inquiry, seek clarification on issues
- The designer asks users to specify any problems they have encountered, indicating a focus on problem-solving.
- The designer asks users to clarify any issues they have encountered while using the application.

15.
Concepts: designer confirmation, verify upcoming updates
- Designer confirms the existence of a feature or update.
- Designers confirm the timing and nature of upcoming software updates and feature implementations.

16.
Concepts: seek clarification
- Participants seek clarification on specific points during discussions.
- Users ask questions to seek information or clarification on specific aspects.
===
---
Definitions for each code (16 in total):
1.
Concepts: notify users about updates, inform community about releases  
Relationship: Both concepts involve communication from designers to the community regarding software updates and releases.  
Criteria: Designers inform the community about the availability and status of new software versions and updates.  
Phrase: Notify users about updates.

2.
Concepts: communicate software updates, communicate software releases  
Relationship: Both concepts focus on the communication of details regarding software updates and releases from designers to the community.  
Criteria: Designers detail specific updates and announce new versions and their features to the community.  
Phrase: Communicate software updates.

3.
Concepts: announce community updates, communicate development plans  
Relationship: Both concepts involve sharing information about future updates and inviting community feedback.  
Criteria: Designers share plans for future development and invite community feedback on updates.  
Phrase: Announce community updates.

4.
Concepts: feature optimization, reassure users about features  
Relationship: Both concepts involve designers providing reassurance to users regarding the software's features and improvements.  
Criteria: Designers reassure users about ongoing improvements and upcoming features.  
Phrase: Reassure users about features.

5.
Concepts: share development timelines, outline development timelines  
Relationship: Both concepts involve sharing information about the timing and nature of software development efforts.  
Criteria: Designers share and outline timelines for upcoming features and updates.  
Phrase: Share development timelines.

6.
Concepts: express user satisfaction, appreciate software features  
Relationship: Both concepts involve users expressing positive feelings towards the software and its features.  
Criteria: Users express satisfaction and appreciation for the software's effectiveness and practicality.  
Phrase: Express user satisfaction.

7.
Concepts: share user experiences, share success stories  
Relationship: Both concepts involve users sharing their positive experiences and the impact of the software.  
Criteria: Users share their experiences and successful outcomes from using the software in educational settings.  
Phrase: Share user experiences.

8.
Concepts: checking for updates, seek information on updates  
Relationship: Both concepts involve users actively seeking information about software updates.  
Criteria: Users inquire about the schedule and status of upcoming updates.  
Phrase: Seek information on updates.

9.
Concepts: suggest new features, suggest usability enhancements  
Relationship: Both concepts involve users proposing improvements and new features for the software.  
Criteria: Users suggest specific enhancements and features to improve software usability.  
Phrase: Suggest new features.

10.
Concepts: appreciate designers' dedication, appreciate designer contributions  
Relationship: Both concepts involve users expressing gratitude and recognition for the efforts of designers.  
Criteria: Users express appreciation for the dedication and contributions of designers.  
Phrase: Appreciate designers' contributions.

11.
Concepts: gather user feedback, solicit user input  
Relationship: Both concepts involve designers actively seeking feedback and input from users to improve the software.  
Criteria: Designers invite and request user feedback for future software enhancements.  
Phrase: Gather user feedback.

12.
Concepts: agree on design ideas, acknowledge mutual feedback  
Relationship: Both concepts involve a collaborative acknowledgment of design ideas between users and designers.  
Criteria: Users and designers express agreement and appreciation for each other's design input.  
Phrase: Agree on design ideas.

13.
Concepts: user role inquiry, inquire about user identity  
Relationship: Both concepts involve designers seeking to understand the user's professional background to tailor responses.  
Criteria: Designers inquire about the user's role to better address their needs.  
Phrase: Inquire about user identity.

14.
Concepts: problem inquiry, seek clarification on issues  
Relationship: Both concepts involve designers asking users to clarify problems they have encountered.  
Criteria: Designers ask users to specify and clarify any issues they have faced with the application.  
Phrase: Seek clarification on issues.

15.
Concepts: designer confirmation, verify upcoming updates  
Relationship: Both concepts involve designers confirming details about features or updates to the community.  
Criteria: Designers confirm the existence and timing of upcoming software updates.  
Phrase: Verify upcoming updates.

16.
Concepts: seek clarification  
Relationship: N/A  
Criteria: Participants ask questions to clarify specific points during discussions.  
Phrase: Seek clarification.  
---