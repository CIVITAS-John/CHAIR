You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (63 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
63. 
Concepts: {Repeat the input 63}
Relationship: {What is logical relationship between concepts in code 63, or N/A if not applicable}
Criteria: {Who did what, and how for code 63}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: planned updates, explain future updates
- Information shared by designers about upcoming features or updates.
- Designers communicate current focuses and plans for future updates.

2.
Concepts: confirm upcoming updates, announce upcoming updates
- Designers confirm anticipated updates and timelines to keep users informed.
- Designers announcing specific updates and inviting user feedback on desired features.

3.
Concepts: feature preview, provide update previews
- Designers share visual content or previews related to upcoming features or updates.
- A designer provides an overview of features and updates to keep the community informed.

4.
Concepts: make community updates, make community announcements
- Designers provide updates or announcements about the software to the community.
- A designer announces updates and encourages community feedback on future features.

5.
Concepts: announce version details, version update announcement, inform about new version availability
- Designer provides detailed information about version updates and features.
- Designers announce the release of version updates and provide information about the review process.
- The designer informs the community about a new version release and its contents.

6.
Concepts: announce new features, announce feature releases
- Designer announces new features and updates for the software version.
- Designers officially announce the release of new software versions and their features.

7.
Concepts: announce software updates, announce component updates
- Designers inform about the latest software updates and their implications for users.
- A designer informs users about changes to component functionalities in the next software update.

8.
Concepts: share product updates, development update
- Designers provide information about updates or changes to the Physics Lab software.
- Information shared by designers about the current status, updates, and future plans for the Physics Lab software.

9.
Concepts: detailed overview of update, developer announcement
- The designer provides a detailed overview of the updates, outlining new features and fixes.
- The designer provides detailed information about new features and updates in the application, including specific changes and bug fixes.

10.
Concepts: detail specific updates, provide update descriptions
- Designers detail specific updates being made to the software, including new components.
- Designers communicate significant changes or enhancements made in the latest software version.

11.
Concepts: current efforts, discuss ongoing research
- Designers describe ongoing research or development work related to specific features.
- Designers mention ongoing research efforts aimed at enhancing software capabilities.

12.
Concepts: share future directions, share development updates
- Designers and users discuss potential future developments and directions for the software.
- Designers share updates regarding future plans and current feature developments for the software.

13.
Concepts: list upcoming features, describe potential updates
- The designer lists upcoming features planned for inclusion in the software, indicating future developments.
- Designers indicate potential areas for future development or enhancements in the software.

14.
Concepts: discuss future plans, future design plans/considerations, plan future development
- Designers discuss considerations and plans for future updates or features.
- Designers mention considerations or plans for future design developments or updates.
- Designers outline aspirations and plans for feature development in future iterations.

15.
Concepts: maintain transparency, ensure development transparency
- A designer emphasizes the importance of maintaining open communication about ongoing development efforts.
- Designers communicate transparently about complexities and timelines in the development process.

16.
Concepts: provide progress updates, communication about progress and plans
- A designer shares information about the status and progress of software updates and releases.
- The designer communicates progress on a complex feature and timelines for its release.

17.
Concepts: release schedule, communicate release plans
- Developers outline the timeline for upcoming software releases and updates.
- Developers communicate the status and plans related to software updates and releases.

18.
Concepts: set user expectations, set timeline expectations
- Designers set expectations regarding the timing or availability of software updates.
- The designer sets expectations regarding the timeline for upcoming features or updates.

19.
Concepts: clarify platform availability, inquire about platform compatibility
- Users asked for clarification on different software versions across platforms.
- Users inquired about the compatibility of the software on specific platforms.

20.
Concepts: explain design rationale, explaining design goals
- Designers explain the rationale behind their design decisions for the application.
- Designers explaining the rationale behind user-friendly design choices made in the software.

21.
Concepts: explain new features, give examples of feature
- A designer explains upcoming features being optimized or developed for the application.
- The designer provides specific examples of planned features or improvements.

22.
Concepts: clarification, provide technical clarification
- Developers clarify technical details or functionalities to ensure mutual understanding.
- Designers clarify technical features to enhance user understanding.

23.
Concepts: explain software features, address component functionality
- Designers elaborate on specific features, informing users about their capabilities through examples.
- Designers address and describe the functionalities of specific software features.

24.
Concepts: inquire about problems, engage in troubleshooting
- The designer asks community members about any issues they are experiencing with the software.
- A designer inquires about user difficulties to assist in troubleshooting software issues.

25.
Concepts: problem solving, collaborate on problem-solving
- Designers offered solutions or support to users encountering difficulties with the software.
- Designers and users collaborated to solve software issues.

26.
Concepts: physics concepts, request physics features
- Users request the creation of specific physics-related demonstrations or features within the software.
- Users requested additions of specific features for physics experiments.

27.
Concepts: invite feedback, encourage user feedback
- Designers encouraged user input and feedback on features and updates.
- The designer prompts users to share their feedback on the softwareâ€™s features.

28.
Concepts: invite feature requests, inquire user input for iterations, solicit user suggestions
- Designers invite users to suggest new features or improvements.
- Designers encourage users to provide suggestions for future iterations of the software.
- Designers solicit feedback or suggestions from users regarding features or improvements.

29.
Concepts: provide user feedback, offer specific feedback
- Users offered feedback or suggestions for software improvements.
- Users provided specific feedback about software features.

30.
Concepts: consider usability, highlight usability need, suggest usability improvements
- A user comments on usability, suggesting practical adjustments to enhance the user experience.
- Users identified a specific usability issue and suggested an improvement for the software.
- Users proposed modifications to improve usability.

31.
Concepts: make user requests, make detailed requests
- Users requested specific features or improvements.
- Users made detailed requests for specific software features.

32.
Concepts: propose additional features, propose software enhancements
- Users suggested modifications or enhancements to existing features.
- Users suggested improvements or new features for the software.

33.
Concepts: inquire about update status, inquire about android update status
- Users inquired about the update status of specific application versions.
- Users inquired about the status of updates for the Android version of the software.

34.
Concepts: request software updates, engage with development process
- Users asked about recent changes or upcoming feature updates.
- Users inquire about upcoming updates or changes related to the software.

35.
Concepts: technical issue, request technical assistance
- A user reports a technical issue related to the software, seeking assistance or resolution.
- Users requested assistance related to using specific software functionalities.

36.
Concepts: request usage guidance, seek usage instructions
- Users requested guidance on using specific versions of the application.
- Users inquired about instructions for using specific software features.

37.
Concepts: request information, information seeking
- Users asked for specific information or help with the software.
- Users asking questions to gain knowledge or resources related to the software.

38.
Concepts: express user satisfaction, appreciate software features
- Users expressed satisfaction with the software's practicality and features.
- Users expressed appreciation for software features enhancing usability.

39.
Concepts: share classroom experiences, share student engagement feedback
- Users shared successful classroom experiences using the software.
- Users described positive student responses related to software effectiveness.

40.
Concepts: personal anecdote, share user experiences
- Users shared personal experiences relevant to their use of the software.
- Users shared their experiences and opinions regarding the software.

41.
Concepts: suggest classroom features, request specific features
- Users suggested functionalities that improve classroom application.
- Users expressing desires for specific software functionalities that would enhance usability for educational purposes.

42.
Concepts: discuss system limitations, highlight outdated technology
- Users comment on outdated technology and its implications for software use.
- Users highlight issues related to outdated technology in their environments affecting software use.

43.
Concepts: use emojis, use non verbal communication
- Users communicate emotions using emojis during interactions.
- Use of emojis or other non-verbal forms of communication by users.

44.
Concepts: express emotions, user expression
- Users express emotions or reactions using informal language or emojis.
- Users express emotions or thoughts through emojis without additional textual context.

45.
Concepts: encouraging interaction, encourage community participation
- The designer encourages users to interact and share additional feature requests.
- Designer encourages users to provide input and participate in discussions.

46.
Concepts: seek community input, gather community opinions
- Designers encourage community members to share their suggestions and ideas for improvement.
- Designers actively solicit feedback or opinions from community members before proceeding with development.

47.
Concepts: invite user participation, announce future consultations
- Designers indicate plans to gather additional input from users before proceeding with development.
- Designers signal their intention to seek user opinions before starting new project phases.

48.
Concepts: integrate user feedback, align with user feedback
- User feedback was integrated into the design process.
- The designer incorporates user feedback into the software's design process.

49.
Concepts: ask clarification questions, respond to user inquiries
- A designer follows up with users to clarify issues encountered with the software.
- A designer provides a direct response to a user's question regarding software functionalities.

50.
Concepts: inquire about user background, ask about professional background
- Designers inquire about users' specific teaching backgrounds to enhance understanding.
- Designers inquire about users' professional backgrounds to understand their perspectives.

51.
Concepts: ask follow-up questions, explain the intention of follow-up question
- Designers ask questions to clarify user needs or preferences during discussions.
- Designers clarify the intentions behind follow-up questions or designs based on user feedback.

52.
Concepts: inquire about user needs, seek educational consultation
- Designers asked teachers about their needs to inform software development.
- Designers consulted teachers for input on technical aspects and educational standards for software features.

53.
Concepts: ask about classroom setup, inquire about internet availability
- Designers seek clarification about the availability of internet access in classrooms.
- Designers inquire about the availability of internet access in classroom settings.

54.
Concepts: demonstrate appreciation, express user appreciation
- Users express appreciation for the work done by designers and other community members.
- Users express appreciation or admiration for software or community contributions.

55.
Concepts: acknowledge designers' efforts, appreciate designers' efforts
- Users acknowledge and appreciate the efforts made by the designers.
- Users express appreciation for the dedication and commitment of the designers.

56.
Concepts: greeting, welcome community members, greet the community
- Users and designers greeted the community or each other as part of their interactions.
- Designers greet and reciprocate greetings from community members.
- Users or designers initiate greetings directed at the community.

57.
Concepts: community support, acknowledge community support
- Instances where users express support, encouragement, or appreciation for the designers' efforts.
- Designers express gratitude to the community for their support and contributions.

58.
Concepts: accept user suggestions, acknowledge user requests
- Designers acknowledge and agree to implement user suggestions for improvements.
- Designers acknowledge user requests and commit to addressing them in future updates.

59.
Concepts: plan future updates, incorporate user feedback
- Designers outline structured plans for future updates based on user feedback.
- Designer notes plans to incorporate user feedback in updates.

60.
Concepts: confirm future implementation, confirm feature implementation
- Designers confirmed future plans or implementations based on user feedback.
- Designers confirm plans for implementing discussed features in future updates.

61.
Concepts: resolve user concerns, reassure users about features
- Designers addressing user concerns and providing reassurance about software improvements.
- Designers reassure users about upcoming features and optimizations in development.

62.
Concepts: affirm mutual points, confirm mutual understanding
- Designers and users acknowledge each other's statements and perspectives.
- Users and designers confirm their understanding of each other's statements.

63.
Concepts: acknowledge user feedback
- The designer acknowledges a user's feedback regarding needed support features.
- Designers acknowledge and demonstrate understanding of user feedback during discussions.
- Designers responded to user feedback and suggestions.
===
---
Definitions for each code (63 in total):
1.
Concepts: planned updates, explain future updates
Relationship: Designers communicate their current focuses and share information about upcoming features or updates.
Criteria: Designers share planned updates and explain future updates to inform the community.
Phrase: Communicate upcoming features.

2.
Concepts: confirm upcoming updates, announce upcoming updates
Relationship: Designers keep users informed by confirming and announcing anticipated updates and timelines.
Criteria: Designers confirm and announce updates, inviting user feedback on desired features.
Phrase: Announce anticipated updates.

3.
Concepts: feature preview, provide update previews
Relationship: Designers share visual content and overviews related to upcoming features to keep the community informed.
Criteria: Designers provide previews of upcoming features and updates.
Phrase: Share feature previews.

4.
Concepts: make community updates, make community announcements
Relationship: Designers provide updates and announcements about the software to engage the community.
Criteria: Designers announce updates and encourage community feedback.
Phrase: Update the community.

5.
Concepts: announce version details, version update announcement, inform about new version availability
Relationship: Designers deliver detailed information about version updates, releases, and their contents.
Criteria: Designers announce version details and inform the community about new version availability.
Phrase: Announce version updates.

6.
Concepts: announce new features, announce feature releases
Relationship: Designers officially communicate new features and updates associated with software versions.
Criteria: Designers announce new features and their releases.
Phrase: Announce new features.

7.
Concepts: announce software updates, announce component updates
Relationship: Designers inform users about the latest software updates and changes to component functionalities.
Criteria: Designers announce software and component updates to keep users informed.
Phrase: Announce software updates.

8.
Concepts: share product updates, development update
Relationship: Designers provide ongoing information about the status and future plans related to the Physics Lab software.
Criteria: Designers share product and development updates with the community.
Phrase: Share product updates.

9.
Concepts: detailed overview of update, developer announcement
Relationship: Designers offer comprehensive overviews of updates, focusing on new features and fixes.
Criteria: Designers provide detailed announcements about software updates.
Phrase: Provide update overviews.

10.
Concepts: detail specific updates, provide update descriptions
Relationship: Designers communicate significant changes and enhancements made in the latest software version.
Criteria: Designers detail specific updates and provide descriptions of changes.
Phrase: Detail specific updates.

11.
Concepts: current efforts, discuss ongoing research
Relationship: Designers inform the community about their ongoing research efforts related to software features.
Criteria: Designers discuss current efforts and ongoing research.
Phrase: Discuss ongoing research.

12.
Concepts: share future directions, share development updates
Relationship: Designers and users engage in discussions about potential future developments and current updates.
Criteria: Designers share future directions and development updates.
Phrase: Share development updates.

13.
Concepts: list upcoming features, describe potential updates
Relationship: Designers indicate planned features and potential areas for future developments.
Criteria: Designers list upcoming features and describe potential updates.
Phrase: List upcoming features.

14.
Concepts: discuss future plans, future design plans/considerations, plan future development
Relationship: Designers share considerations and aspirations for future updates and features.
Criteria: Designers discuss and outline plans for future developments.
Phrase: Discuss future plans.

15.
Concepts: maintain transparency, ensure development transparency
Relationship: Designers emphasize the importance of open communication regarding development efforts.
Criteria: Designers maintain development transparency through communication.
Phrase: Ensure development transparency.

16.
Concepts: provide progress updates, communication about progress and plans
Relationship: Designers share status updates and progress on software releases.
Criteria: Designers provide updates about progress and future plans.
Phrase: Provide progress updates.

17.
Concepts: release schedule, communicate release plans
Relationship: Developers outline timelines and communicate plans regarding software releases.
Criteria: Developers communicate release schedules and plans.
Phrase: Communicate release plans.

18.
Concepts: set user expectations, set timeline expectations
Relationship: Designers set expectations regarding timing and availability of software updates.
Criteria: Designers establish user expectations for updates and timelines.
Phrase: Set user expectations.

19.
Concepts: clarify platform availability, inquire about platform compatibility
Relationship: Users seek information about software versions and their compatibility across platforms.
Criteria: Users inquire about platform availability and compatibility.
Phrase: Inquire about platform compatibility.

20.
Concepts: explain design rationale, explaining design goals
Relationship: Designers clarify the rationale and goals behind their design choices.
Criteria: Designers explain the reasons for their design decisions.
Phrase: Explain design rationale.

21.
Concepts: explain new features, give examples of feature
Relationship: Designers provide explanations and examples of new features being developed.
Criteria: Designers explain and exemplify new features.
Phrase: Explain new features.

22.
Concepts: clarification, provide technical clarification
Relationship: Developers clarify technical details to enhance user understanding.
Criteria: Developers provide clarification on technical functionalities.
Phrase: Provide technical clarification.

23.
Concepts: explain software features, address component functionality
Relationship: Designers elaborate on features and their capabilities to inform users.
Criteria: Designers explain and address specific software functionalities.
Phrase: Explain software features.

24.
Concepts: inquire about problems, engage in troubleshooting
Relationship: Designers ask community members about issues for troubleshooting purposes.
Criteria: Designers inquire about problems and engage in troubleshooting.
Phrase: Engage in troubleshooting.

25.
Concepts: problem solving, collaborate on problem-solving
Relationship: Designers and users work together to address software challenges.
Criteria: Designers and users collaborate on solving problems.
Phrase: Collaborate on problem-solving.

26.
Concepts: physics concepts, request physics features
Relationship: Users request specific physics-related features for the software.
Criteria: Users request features related to physics demonstrations.
Phrase: Request physics features.

27.
Concepts: invite feedback, encourage user feedback
Relationship: Designers prompt users to share their feedback on software features.
Criteria: Designers invite and encourage user feedback.
Phrase: Invite user feedback.

28.
Concepts: invite feature requests, inquire user input for iterations, solicit user suggestions
Relationship: Designers actively seek user suggestions for future iterations of the software.
Criteria: Designers invite and solicit user input for feature requests.
Phrase: Invite feature requests.

29.
Concepts: provide user feedback, offer specific feedback
Relationship: Users share suggestions and feedback about software improvements.
Criteria: Users provide feedback to enhance the software.
Phrase: Provide user feedback.

30.
Concepts: consider usability, highlight usability need, suggest usability improvements
Relationship: Users identify and suggest improvements related to usability.
Criteria: Users propose modifications for better usability.
Phrase: Suggest usability improvements.

31.
Concepts: make user requests, make detailed requests
Relationship: Users articulate specific features or improvements they desire.
Criteria: Users make detailed requests for software functionalities.
Phrase: Make user requests.

32.
Concepts: propose additional features, propose software enhancements
Relationship: Users suggest modifications and new features for the software.
Criteria: Users propose enhancements for existing features.
Phrase: Propose software enhancements.

33.
Concepts: inquire about update status, inquire about android update status
Relationship: Users seek information about the status of application updates.
Criteria: Users inquire about the status of specific updates.
Phrase: Inquire about update status.

34.
Concepts: request software updates, engage with development process
Relationship: Users ask about recent changes and upcoming updates in the software.
Criteria: Users request information about software updates.
Phrase: Request software updates.

35.
Concepts: technical issue, request technical assistance
Relationship: Users report technical issues and seek assistance.
Criteria: Users request assistance for technical problems.
Phrase: Request technical assistance.

36.
Concepts: request usage guidance, seek usage instructions
Relationship: Users seek guidance on how to use specific software features.
Criteria: Users request usage instructions for the software.
Phrase: Request usage guidance.

37.
Concepts: request information, information seeking
Relationship: Users ask questions to gain knowledge about the software.
Criteria: Users request specific information related to the software.
Phrase: Request information.

38.
Concepts: express user satisfaction, appreciate software features
Relationship: Users convey their satisfaction with the software's features and usability.
Criteria: Users express appreciation for the software's effectiveness.
Phrase: Express user satisfaction.

39.
Concepts: share classroom experiences, share student engagement feedback
Relationship: Users share positive experiences related to software use in classrooms.
Criteria: Users provide feedback on student engagement and classroom experiences.
Phrase: Share classroom experiences.

40.
Concepts: personal anecdote, share user experiences
Relationship: Users articulate personal experiences relevant to their software use.
Criteria: Users share their experiences and opinions on the software.
Phrase: Share user experiences.

41.
Concepts: suggest classroom features, request specific features
Relationship: Users propose functionalities that improve classroom application.
Criteria: Users suggest specific features for educational purposes.
Phrase: Suggest classroom features.

42.
Concepts: discuss system limitations, highlight outdated technology
Relationship: Users comment on the implications of outdated technology for software use.
Criteria: Users discuss limitations and outdated technology.
Phrase: Discuss system limitations.

43.
Concepts: use emojis, use non verbal communication
Relationship: Users employ emojis to communicate emotions during interactions.
Criteria: Users use non-verbal communication methods such as emojis.
Phrase: Use emojis.

44.
Concepts: express emotions, user expression
Relationship: Users express their emotions or reactions using informal language and emojis.
Criteria: Users convey their emotions through various forms of expression.
Phrase: Express emotions.

45.
Concepts: encouraging interaction, encourage community participation
Relationship: Designers promote user interaction and participation in discussions.
Criteria: Designers encourage community participation and interaction.
Phrase: Encourage community participation.

46.
Concepts: seek community input, gather community opinions
Relationship: Designers solicit community feedback and suggestions for improvement.
Criteria: Designers seek and gather community input.
Phrase: Gather community opinions.

47.
Concepts: invite user participation, announce future consultations
Relationship: Designers indicate plans to seek user opinions before new developments.
Criteria: Designers invite user participation and announce consultations.
Phrase: Invite user participation.

48.
Concepts: integrate user feedback, align with user feedback
Relationship: Designers incorporate user feedback into the design and development process.
Criteria: Designers integrate user feedback into the software's development.
Phrase: Integrate user feedback.

49.
Concepts: ask clarification questions, respond to user inquiries
Relationship: Designers seek to clarify issues and provide responses to inquiries.
Criteria: Designers ask questions and respond to user inquiries.
Phrase: Ask clarification questions.

50.
Concepts: inquire about user background, ask about professional background
Relationship: Designers seek information about users' teaching and professional backgrounds for better understanding.
Criteria: Designers inquire about users' backgrounds.
Phrase: Ask about user background.

51.
Concepts: ask follow-up questions, explain the intention of follow-up question
Relationship: Designers ask clarifying questions to understand user needs better.
Criteria: Designers ask follow-up questions and explain their intentions.
Phrase: Ask follow-up questions.

52.
Concepts: inquire about user needs, seek educational consultation
Relationship: Designers consult with users to understand their needs for software development.
Criteria: Designers inquire about user needs and seek consultation.
Phrase: Inquire about user needs.

53.
Concepts: ask about classroom setup, inquire about internet availability
Relationship: Designers seek information regarding classroom internet availability.
Criteria: Designers inquire about internet access in classrooms.
Phrase: Inquire about internet availability.

54.
Concepts: demonstrate appreciation, express user appreciation
Relationship: Users express appreciation for contributions from designers and the community.
Criteria: Users demonstrate appreciation for the efforts of others.
Phrase: Express user appreciation.

55.
Concepts: acknowledge designers' efforts, appreciate designers' efforts
Relationship: Users recognize and show appreciation for designersâ€™ contributions.
Criteria: Users acknowledge and appreciate designers' efforts.
Phrase: Acknowledge designers' efforts.

56.
Concepts: greeting, welcome community members, greet the community
Relationship: Users and designers actively engage in greeting each other within the community.
Criteria: Users and designers greet community members as part of interactions.
Phrase: Welcome community members.

57.
Concepts: community support, acknowledge community support
Relationship: Users express support for designers, and designers thank the community for contributions.
Criteria: Users and designers acknowledge and express gratitude for community support.
Phrase: Acknowledge community support.

58.
Concepts: accept user suggestions, acknowledge user requests
Relationship: Designers acknowledge user suggestions and commit to addressing them.
Criteria: Designers accept and acknowledge requests for improvements.
Phrase: Accept user suggestions.

59.
Concepts: plan future updates, incorporate user feedback
Relationship: Designers outline structured plans for future updates based on user feedback.
Criteria: Designers plan updates while integrating user feedback.
Phrase: Plan future updates.

60.
Concepts: confirm future implementation, confirm feature implementation
Relationship: Designers confirm plans for implementing features based on user suggestions.
Criteria: Designers confirm future implementations of features.
Phrase: Confirm feature implementation.

61.
Concepts: resolve user concerns, reassure users about features
Relationship: Designers address user concerns and provide reassurance about software features.
Criteria: Designers resolve concerns and reassure users regarding updates.
Phrase: Resolve user concerns.

62.
Concepts: affirm mutual points, confirm mutual understanding
Relationship: Designers and users acknowledge and confirm their understanding of each other's perspectives.
Criteria: Designers and users affirm mutual points of understanding.
Phrase: Confirm mutual understanding.

63.
Concepts: acknowledge user feedback
Relationship: Designers respond to and demonstrate understanding of user feedback during discussions.
Criteria: Designers acknowledge user feedback during interactions.
Phrase: Acknowledge user feedback.
---