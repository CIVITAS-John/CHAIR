You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: clarifying testing status, clarifying testing phase
- Providing clarification on the testing status of a feature or version
- The message clarifies or provides additional information about a testing phase or version.

2.
Concepts: explaining version type, clarifying version type
- Designer explains the type of version (e.g., PC version).
- The designer clarifies the type of version (e.g., PC version) being referred to.

3.
Concepts: clarifying differences, clarifying version differences, explaining differences
- Designer clarifies differences between features or versions.
- The designer clarifies differences between versions or platforms of the software.
- The designer explains differences between versions or features of the software.

4.
Concepts: specifying software version, sharing version information
- Designers clarify the version of the software being discussed.
- Designer shares information about a specific version of the software.
- Providing additional information about a specific version or release

5.
Concepts: giving reasons, explaining reasons
- Providing reasons, explanations, or justifications for a decision or action
- Reasons or explanations are provided for a specific phenomenon or issue.

6.
Concepts: clarifying design choices, justifying design decisions
- Designer explains or justifies design choices.
- Design decisions or choices are justified or explained.

7.
Concepts: providing rationale, design decision rationale, explaining design rationale
- Providing explanations or justifications for design choices or features.
- Explains the reasoning behind design decisions or features.
- Designer explains the rationale behind design decisions.

8.
Concepts: explaining app design intention, explaining design philosophy
- The designer explains the intention or design philosophy behind the app.
- The designer explains or justifies the design philosophy or approach behind the software.

9.
Concepts: explaining physics focus, focusing on electricity and mechanics
- Designer explains the focus of the physics lab on electricity and mechanics.
- Designer highlights the focus areas of the Physics Lab, specifically electricity and mechanics.

10.
Concepts: explaining focus, explaining project focus
- Designer explains the focus of the software or project.
- Designers explain the focus and limitations of the project.

11.
Concepts: development goal, illustrating development goals
- A designer sets a goal or target for a specific aspect of the software.
- Designer illustrates the software's development goals or vision.

12.
Concepts: explaining design goals, explaining research goals
- Designer explains the design goals or philosophy.
- Designer explains the research goals or objectives.

13.
Concepts: demonstrating capabilities, demonstrating application capabilities
- The designer demonstrates the problem-solving capabilities of the software.
- A designer demonstrates the capabilities or features of an application or tool.

14.
Concepts: feature examples, displaying examples
- A designer provides examples or illustrations of a feature or functionality.
- The designer shares examples or demonstrations of the software's capabilities or features.

15.
Concepts: describing innovative features, demonstrating innovative features
- A designer describes or explains innovative features or functionalities of the software.
- The designer showcases or highlights a unique or innovative feature of the software.

16.
Concepts: highlighting capabilities, emphasizing application capabilities
- Designer highlights the capabilities or features of the software.
- Designer emphasizes the capabilities or potential applications of the software.

17.
Concepts: highlighting functionality, highlighting component capabilities
- Designer highlights a specific functionality or feature.
- Designer highlights the capabilities or features of a component or system.

18.
Concepts: highlighting benefits, explaining feature benefits
- Highlights the benefits or advantages of a feature or functionality.
- Explaining the benefits or advantages of a feature or functionality.

19.
Concepts: feature description, providing feature details
- Providing detailed descriptions of software features.
- Details about a feature or functionality are provided.

20.
Concepts: promoting ideal components, highlighting ideal components
- A designer promotes or highlights ideal components or features of the software.
- Designers highlight ideal components or features in the software, explaining their benefits or advantages.

21.
Concepts: using visual aids, providing visual aids, providing visual examples
- The designer uses visual aids to facilitate explanation or demonstration.
- Designer uses visual aids to communicate with the community.
- A designer shares an image to aid in explanation or demonstration.
- A designer shares visual examples or resources to illustrate a point or concept.

22.
Concepts: explaining diagram connections, describing diagram connections
- Designer explains the connection or relationship between two diagrams.
- A designer describes the connection between physical and circuit diagrams.

23.
Concepts: explaining technicalities, illustrating technical points
- Designers explain technical details or concepts.
- A designer explains or illustrates technical points or design decisions.

24.
Concepts: explaining software concepts, providing theoretical explanations
- Designer explains a specific concept or feature of the software.
- Designer explains theoretical concepts underlying the software.

25.
Concepts: explaining technical aspects, highlighting technical nuances, explaining technical processes
- Designer explains technical aspects of the software.
- The designer highlights or explains technical nuances or details of the software.
- The designer explains technical processes or procedures related to the software.

26.
Concepts: explaining feature significance, explaining circuit diagram purpose
- The designer explains the significance or importance of a feature, such as the circuit diagram feature.
- Designer explains the purpose or functionality of a specific version of the circuit diagram.

27.
Concepts: explaining design, explaining design functionality
- Explaining existing design or functionality
- Explaining or describing the functionality, features, or capabilities of a product or system

28.
Concepts: explaining usage, teaching or explaining
- Designer explains how to use a feature or function in the software.
- A designer teaches or explains how to use a feature or functionality.

29.
Concepts: providing explanations, building understanding
- Designer provides explanations or clarifications about the system or its features.
- Providing explanations or clarifications about software features
- A designer helps users understand a concept or feature by providing explanations or examples.

30.
Concepts: explaining options, clarifying technical options
- Designer explains options or alternatives.
- Designers clarify technical details or options.

31.
Concepts: explaining technical improvements, explaining component improvements
- Designer explains technical improvements or updates.
- Designer explains improvements to components or features.

32.
Concepts: providing technical guidance, providing technical details, providing technical instructions
- Designer provides technical guidance or support.
- Designer provides step-by-step instructions for using specific equipment.
- Designer provides technical details or specifications.
- Designer provides specific technical instructions or directions.
===
Here are the definitions for each code:

---
1.
Concepts: clarifying testing status, clarifying testing phase
Relationship: The concepts are related as they both involve providing clarification on the testing process.
Criteria: Designers provide clarification on the testing status or phase of a feature or version.
Phrase: Clarifying testing information.

2.
Concepts: explaining version type, clarifying version type
Relationship: The concepts are related as they both involve explaining or clarifying the type of version.
Criteria: Designers explain or clarify the type of version being referred to.
Phrase: Explaining version type.

3.
Concepts: clarifying differences, clarifying version differences, explaining differences
Relationship: The concepts are related as they all involve explaining or clarifying differences between features or versions.
Criteria: Designers clarify or explain differences between features, versions, or platforms of the software.
Phrase: Clarifying differences.

4.
Concepts: specifying software version, sharing version information
Relationship: The concepts are related as they both involve providing information about a specific version of the software.
Criteria: Designers provide information about a specific version of the software.
Phrase: Sharing version information.

5.
Concepts: giving reasons, explaining reasons
Relationship: The concepts are related as they both involve providing explanations or justifications for a decision or action.
Criteria: Designers provide reasons or explanations for a specific phenomenon or issue.
Phrase: Providing reasons.

6.
Concepts: clarifying design choices, justifying design decisions
Relationship: The concepts are related as they both involve explaining or justifying design choices.
Criteria: Designers explain or justify design choices or decisions.
Phrase: Justifying design decisions.

7.
Concepts: providing rationale, design decision rationale, explaining design rationale
Relationship: The concepts are related as they all involve providing explanations or justifications for design choices or features.
Criteria: Designers provide explanations or justifications for design choices or features.
Phrase: Providing design rationale.

8.
Concepts: explaining app design intention, explaining design philosophy
Relationship: The concepts are related as they both involve explaining the underlying design philosophy or approach.
Criteria: Designers explain the design philosophy or approach behind the app or software.
Phrase: Explaining design philosophy.

9.
Concepts: explaining physics focus, focusing on electricity and mechanics
Relationship: The concepts are related as they both involve explaining the focus of the Physics Lab.
Criteria: Designers explain the focus of the Physics Lab on electricity and mechanics.
Phrase: Explaining physics focus.

10.
Concepts: explaining focus, explaining project focus
Relationship: The concepts are related as they both involve explaining the focus of the project.
Criteria: Designers explain the focus and limitations of the project.
Phrase: Explaining project focus.

11.
Concepts: development goal, illustrating development goals
Relationship: The concepts are related as they both involve setting or illustrating goals for the software.
Criteria: Designers set or illustrate development goals or vision for the software.
Phrase: Illustrating development goals.

12.
Concepts: explaining design goals, explaining research goals
Relationship: The concepts are related as they both involve explaining the goals or objectives of the design or research.
Criteria: Designers explain design or research goals or objectives.
Phrase: Explaining design goals.

13.
Concepts: demonstrating capabilities, demonstrating application capabilities
Relationship: The concepts are related as they both involve demonstrating the capabilities of the software.
Criteria: Designers demonstrate the problem-solving capabilities or features of the software.
Phrase: Demonstrating capabilities.

14.
Concepts: feature examples, displaying examples
Relationship: The concepts are related as they both involve providing examples or illustrations of features or functionalities.
Criteria: Designers provide examples or demonstrations of software features or functionalities.
Phrase: Providing feature examples.

15.
Concepts: describing innovative features, demonstrating innovative features
Relationship: The concepts are related as they both involve highlighting or demonstrating innovative features or functionalities.
Criteria: Designers describe or demonstrate innovative features or functionalities of the software.
Phrase: Demonstrating innovative features.

16.
Concepts: highlighting capabilities, emphasizing application capabilities
Relationship: The concepts are related as they both involve highlighting or emphasizing the capabilities of the software.
Criteria: Designers highlight or emphasize the capabilities or features of the software.
Phrase: Highlighting capabilities.

17.
Concepts: highlighting functionality, highlighting component capabilities
Relationship: The concepts are related as they both involve highlighting specific functionalities or features.
Criteria: Designers highlight specific functionalities or features of the software or components.
Phrase: Highlighting functionality.

18.
Concepts: highlighting benefits, explaining feature benefits
Relationship: The concepts are related as they both involve explaining or highlighting the benefits of features or functionalities.
Criteria: Designers explain or highlight the benefits or advantages of features or functionalities.
Phrase: Highlighting benefits.

19.
Concepts: feature description, providing feature details
Relationship: The concepts are related as they both involve providing detailed descriptions of software features.
Criteria: Designers provide detailed descriptions of software features.
Phrase: Providing feature descriptions.

20.
Concepts: promoting ideal components, highlighting ideal components
Relationship: The concepts are related as they both involve promoting or highlighting ideal components or features of the software.
Criteria: Designers promote or highlight ideal components or features of the software.
Phrase: Promoting ideal components.

21.
Concepts: using visual aids, providing visual aids, providing visual examples
Relationship: The concepts are related as they all involve using visual aids to facilitate explanation or demonstration.
Criteria: Designers use visual aids to communicate with the community or illustrate a point or concept.
Phrase: Using visual aids.

22.
Concepts: explaining diagram connections, describing diagram connections
Relationship: The concepts are related as they both involve explaining or describing the connections between diagrams.
Criteria: Designers explain or describe the connections between diagrams.
Phrase: Explaining diagram connections.

23.
Concepts: explaining technicalities, illustrating technical points
Relationship: The concepts are related as they both involve explaining or illustrating technical details or concepts.
Criteria: Designers explain or illustrate technical points or design decisions.
Phrase: Explaining technicalities.

24.
Concepts: explaining software concepts, providing theoretical explanations
Relationship: The concepts are related as they both involve explaining theoretical concepts or features of the software.
Criteria: Designers explain theoretical concepts or features of the software.
Phrase: Explaining software concepts.

25.
Concepts: explaining technical aspects, highlighting technical nuances, explaining technical processes
Relationship: The concepts are related as they all involve explaining or highlighting technical details or processes of the software.
Criteria: Designers explain or highlight technical aspects, nuances, or processes of the software.
Phrase: Explaining technical aspects.

26.
Concepts: explaining feature significance, explaining circuit diagram purpose
Relationship: The concepts are related as they both involve explaining the significance or purpose of a feature.
Criteria: Designers explain the significance or purpose of a feature, such as the circuit diagram feature.
Phrase: Explaining feature significance.

27.
Concepts: explaining design, explaining design functionality
Relationship: The concepts are related as they both involve explaining existing design or functionality.
Criteria: Designers explain existing design or functionality of a product or system.
Phrase: Explaining design.

28.
Concepts: explaining usage, teaching or explaining
Relationship: The concepts are related as they both involve explaining how to use a feature or function in the software.
Criteria: Designers explain how to use a feature or function in the software.
Phrase: Explaining usage.

29.
Concepts: providing explanations, building understanding
Relationship: The concepts are related as they both involve providing explanations or clarifications to help users understand.
Criteria: Designers provide explanations or clarifications to help users understand a concept or feature.
Phrase: Providing explanations.

30.
Concepts: explaining options, clarifying technical options
Relationship: The concepts are related as they both involve explaining or clarifying technical options or alternatives.
Criteria: Designers explain or clarify technical options or alternatives.
Phrase: Explaining options.

31.
Concepts: explaining technical improvements, explaining component improvements
Relationship: The concepts are related as they both involve explaining technical improvements or updates.
Criteria: Designers explain technical improvements or updates to components or features.
Phrase: Explaining technical improvements.

32.
Concepts: providing technical guidance, providing technical details, providing technical instructions
Relationship: The concepts are related as they all involve providing technical information or support.
Criteria: Designers provide technical guidance, details, or instructions to help users understand or use the software.
Phrase: Providing technical guidance.