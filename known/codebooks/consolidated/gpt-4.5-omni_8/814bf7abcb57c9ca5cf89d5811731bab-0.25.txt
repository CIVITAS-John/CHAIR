You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (56 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
56. 
Concepts: {Repeat the input 56}
Relationship: {What is logical relationship between concepts in code 56, or N/A if not applicable}
Criteria: {Who did what, and how for code 56}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: resource offer, offer to upload resource
- A designer offers to provide resources and asks about the user's profession.
- A designer offers to upload a resource and inquires about the user's role.

2.
Concepts: confirm teaching level, follow-up on grade level
- A designer confirms the teacher's specific teaching level.
- A designer inquires about the user's teaching level.

3.
Concepts: classroom setup inquiry, inquiring about internet availability
- A designer inquires about the classroom setup or environment.
- Designers inquire about the availability of internet access for classrooms.

4.
Concepts: design question, technical question
- A designer poses a question related to design or functionality.
- Users and designers ask and answer technical questions.

5.
Concepts: asking questions, inquiring about user needs
- Users or designers ask various questions.
- Designers ask questions to understand user needs or roles.

6.
Concepts: usage scenario inquiry, follow-up preference question, explain intention of follow-up question
- A designer asks a follow-up question about the usage scenario.
- A designer asks a follow-up question to clarify a user's preference.
- A designer explains the intention behind a follow-up question.

7.
Concepts: indirect answer, respond to question
- A designer provides an indirect answer to a user's question.
- A designer responds to a question about feature availability.

8.
Concepts: memory aid, plan to gather feedback
- A designer mentions the need to gather opinions to aid memory.
- A designer mentions plans to gather opinions or feedback.

9.
Concepts: context seeking, trying to understand the needs
- Designer seeks context for better understanding user needs.
- The designer tries to understand the user's needs.

10.
Concepts: sharing information for design, understanding designers' situation
- A user shares information relevant to the design.
- A user provides insight into the designers' approach to feature development.

11.
Concepts: express comprehension, gather additional information, encourage elaboration
- Designers express understanding and request more details from users.
- A designer asks for additional information to understand the context better.
- A designer encourages a user to provide detailed needs or requirements.

12.
Concepts: design discussion, considering interface usability
- Designers discuss design considerations and decisions.
- Designers and users discuss user interface usability and make layout decisions.

13.
Concepts: system compatibility information, confirming system compatibility, suggesting system compatibility checks
- Designer informs users about system compatibility issues.
- Designers confirm the compatibility of the application with specific systems.
- Designers mention the need to check system compatibility and suggest doing so for older operating systems.

14.
Concepts: compatibility assurance, discussing system compatibility, considering future compatibility
- The designer discusses the compatibility of the software with older machines.
- Designers and users discuss compatibility with different operating systems.
- Designers consider and discuss future compatibility issues and solutions.

15.
Concepts: share workaround, personal workaround
- Sharing a workaround or alternative method.
- A designer shares a personal experience or workaround related to software usage.

16.
Concepts: providing workarounds, address limitation workaround
- Designers provide workarounds for usability issues and software limitations.
- A designer explains how to address a limitation or workaround.

17.
Concepts: discuss limitation, explaining feature limitations, system limitation explanation
- A designer discusses a limitation or drawback of a solution.
- Designers explain the current limitations of features and software platforms.
- Designer explains why a problem cannot be solved due to system limitations.

18.
Concepts: problem solving engagement, inquiring about problems
- Designer engages users to identify and solve problems.
- Designers inquire about problems and issues users have encountered.

19.
Concepts: troubleshooting, problem solving
- Designer and user engage in troubleshooting issues.
- A designer offers assistance for any problems encountered.

20.
Concepts: explain development process, explaining development complexity
- A designer explains aspects of the development process or compatibility.
- Designers explain the complexity and time required for developing certain features.

21.
Concepts: technical consideration, discuss technical constraints, technical limitation address
- Designers consider technical aspects and requirements.
- Users or designers discuss technical limitations or requirements.
- Designer addresses technical limitations.

22.
Concepts: design refinement, adapting design plans
- A designer refines a design based on feedback.
- Designers adapt design plans based on new information or feedback.

23.
Concepts: feature simplification, suggest simplification
- Simplifying a feature or process.
- A designer suggests simplifying a process or feature.

24.
Concepts: design thoughts, design simplification
- The designer shares thoughts on simplifying the design.
- Discussions about simplifying and refining the design of the software.

25.
Concepts: explaining the need, acknowledge need for feature
- The designer explains the need for a particular feature or update.
- A developer acknowledges the need for a specific feature or support.

26.
Concepts: optimize feature, feature adjustment
- Designers mention optimizing or improving a feature.
- A designer mentions the need to support a specific feature adjustment.

27.
Concepts: open to alternatives, openness to future development
- A designer expresses openness to providing alternatives or additional instructions.
- A designer expresses openness to future opportunities for feature development.

28.
Concepts: personal connection, sharing personal interests
- Users and designers share personal backgrounds and experiences.
- Designers share or express personal interests.

29.
Concepts: educational context, show interest in user context
- The designer or user provides context about the educational environment.
- Designers show interest in users' teaching contexts.

30.
Concepts: catering to user needs, consider user experience, addressing usability concerns
- A designer emphasizes the importance of meeting user needs.
- A designer considers the user experience in their response.
- Designers address and respond to users' concerns about usability.

31.
Concepts: component functionality, explain new component capabilities
- A designer describes the functionality of a component.
- A developer explains the capabilities of a new component.

32.
Concepts: describe usage scenario, highlight practical application
- A developer describes a usage scenario for a feature.
- A developer highlights the practical application of a feature.

33.
Concepts: explaining design goals, explaining design rationale, explain app design intention
- A designer explains the goals behind the design.
- Designers explain the rationale behind design and development decisions.
- A developer explains the intention or focus of the app design.

34.
Concepts: explaining features, explaining technical artifacts, describe usability features
- Designers introduce and explain the functions of features.
- The designer explains technical artifacts in the software.
- A designer describes usability features of the software.

35.
Concepts: design principles, instructional design
- The designer discusses the principles guiding the design of the software.
- A designer discusses the instructional design approach of the software.

36.
Concepts: input method discussion, soft keyboard consideration
- A designer discusses the need for specific input methods in the software.
- A designer considers the need for a soft keyboard in the interface.

37.
Concepts: improve avatar quality, image and avatar management
- Discussing ways to improve the quality of avatars.
- Discussing the management or improvement of images and avatars.

38.
Concepts: provide timeline, share update timeline
- A developer provides a timeline or estimated time for updates.
- Sharing the timeline for upcoming updates.

39.
Concepts: update preparation, software update process
- Designer prepares users for upcoming significant updates or changes.
- A designer describes the process and timeline for software updates.

40.
Concepts: providing product updates, announcing software releases
- Designers provide information about updates and technical changes to the software.
- Designers announce new versions, updates, and provide download information.

41.
Concepts: platform-specific update, platform specific information
- A designer provides updates specific to different platforms.
- The designer provides platform-specific information about the software.

42.
Concepts: updates, update notification
- Information about changes or new features in upcoming updates.
- Notifying users about a new update.

43.
Concepts: version update notes, listing updates and fixes
- Instances where version update notes are provided.
- Designers provide detailed notes and technical information about updates and new features.

44.
Concepts: explain version type, clarify software version
- A designer explains the type of version available.
- Designers clarify the version of the software being discussed.

45.
Concepts: explain delay, vague feature response
- A designer explains why a feature is not yet completed.
- A designer gives a vague response to a feature request, indicating it will take more time.

46.
Concepts: promising it will realize, promise to make the feature later
- Promising to implement a feature or change.
- Promising to implement a feature at a later time.

47.
Concepts: promise future perfection, future perfection opinion
- A designer reassures users about the future perfection of a feature.
- A designer gives an opinion on striving for perfection in future features.

48.
Concepts: long-term stability, discussing feature stability
- Instances where long-term stability of a feature is discussed.
- Designers discuss the stability and importance of features for long-term use.

49.
Concepts: prioritization, development prioritization
- Statements indicating the order in which tasks or features will be developed.
- Instances where designers discuss the prioritization of different features or sections to be developed.

50.
Concepts: product improvement, simulation enhancement
- A designer discusses improvements to the product.
- A designer discusses enhancements to the simulation features.

51.
Concepts: future planning and development, discussion of further interests
- A designer discusses future planning and development.
- A designer discusses further interests or potential future projects.

52.
Concepts: committing to improvement, emphasizing continuous improvement
- Designers promise and commit to improving the product.
- Designers list new features, updates, and adjustments to components to show ongoing improvements.

53.
Concepts: suggesting future possibilities, future app development possibility
- Designers hint at and suggest potential future projects or developments.
- Designers mention the possibility of developing related applications in the future.

54.
Concepts: mention future update, announce future consultation
- A developer mentions future updates or features.
- A developer announces plans for future consultation with users.

55.
Concepts: feature roadmap, outline development priorities
- A designer outlines the planned sequence of feature development.
- A designer outlines development priorities.

56.
Concepts: give examples of feature, describing planned features
- The designer provides examples of planned features.
- Designers discuss and describe plans for simulated experiment assessments and features.
===
---
Definitions for each code (56 in total):
1.
Concepts: resource offer, offer to upload resource
Relationship: Both concepts involve a designer offering resources to users.
Criteria: A designer offers to provide or upload resources and inquires about the user's profession or role.
Phrase: Offering resources

2.
Concepts: confirm teaching level, follow-up on grade level
Relationship: Both concepts involve confirming or inquiring about the user's teaching level.
Criteria: A designer confirms or inquires about the user's specific teaching level.
Phrase: Confirming teaching level

3.
Concepts: classroom setup inquiry, inquiring about internet availability
Relationship: Both concepts involve inquiring about classroom conditions.
Criteria: A designer inquires about the classroom setup and the availability of internet access.
Phrase: Inquiring about classroom conditions

4.
Concepts: design question, technical question
Relationship: Both concepts involve posing questions related to design or technical aspects.
Criteria: Designers and users ask and answer questions related to design and technical functionality.
Phrase: Posing design and technical questions

5.
Concepts: asking questions, inquiring about user needs
Relationship: Both concepts involve asking questions to understand user needs.
Criteria: Users or designers ask questions to understand user needs or roles.
Phrase: Inquiring about user needs

6.
Concepts: usage scenario inquiry, follow-up preference question, explain intention of follow-up question
Relationship: All concepts involve follow-up questions to clarify user preferences or scenarios.
Criteria: A designer asks follow-up questions about usage scenarios or preferences and explains the intention behind these questions.
Phrase: Clarifying user preferences

7.
Concepts: indirect answer, respond to question
Relationship: Both concepts involve responding to user questions.
Criteria: A designer provides an indirect answer or responds to a user's question about feature availability.
Phrase: Responding to questions

8.
Concepts: memory aid, plan to gather feedback
Relationship: Both concepts involve gathering feedback to aid memory.
Criteria: A designer mentions the need to gather opinions or feedback to aid memory.
Phrase: Gathering feedback

9.
Concepts: context seeking, trying to understand the needs
Relationship: Both concepts involve seeking context to understand user needs.
Criteria: A designer seeks context to better understand user needs.
Phrase: Seeking user context

10.
Concepts: sharing information for design, understanding designers' situation
Relationship: Both concepts involve sharing information relevant to design.
Criteria: A user shares information relevant to the design and provides insight into the designers' approach.
Phrase: Sharing design-relevant information

11.
Concepts: express comprehension, gather additional information, encourage elaboration
Relationship: All concepts involve gathering more information to understand user needs.
Criteria: Designers express understanding, request more details, and encourage users to provide detailed needs or requirements.
Phrase: Gathering detailed user information

12.
Concepts: design discussion, considering interface usability
Relationship: Both concepts involve discussing design and usability.
Criteria: Designers and users discuss design considerations and user interface usability.
Phrase: Discussing design and usability

13.
Concepts: system compatibility information, confirming system compatibility, suggesting system compatibility checks
Relationship: All concepts involve addressing system compatibility.
Criteria: Designers inform, confirm, and suggest checks for system compatibility.
Phrase: Addressing system compatibility

14.
Concepts: compatibility assurance, discussing system compatibility, considering future compatibility
Relationship: All concepts involve discussing and ensuring system compatibility.
Criteria: Designers discuss and ensure compatibility with different systems and consider future compatibility issues.
Phrase: Ensuring system compatibility

15.
Concepts: share workaround, personal workaround
Relationship: Both concepts involve sharing workarounds.
Criteria: A designer shares a workaround or personal experience related to software usage.
Phrase: Sharing workarounds

16.
Concepts: providing workarounds, address limitation workaround
Relationship: Both concepts involve providing workarounds for limitations.
Criteria: Designers provide workarounds for usability issues and software limitations.
Phrase: Providing workarounds

17.
Concepts: discuss limitation, explaining feature limitations, system limitation explanation
Relationship: All concepts involve discussing limitations.
Criteria: Designers discuss and explain limitations of features and systems.
Phrase: Discussing limitations

18.
Concepts: problem solving engagement, inquiring about problems
Relationship: Both concepts involve engaging users to solve problems.
Criteria: Designers engage users to identify and solve problems by inquiring about issues encountered.
Phrase: Engaging in problem-solving

19.
Concepts: troubleshooting, problem solving
Relationship: Both concepts involve troubleshooting and solving problems.
Criteria: Designers and users engage in troubleshooting and solving issues.
Phrase: Troubleshooting issues

20.
Concepts: explain development process, explaining development complexity
Relationship: Both concepts involve explaining the development process and its complexity.
Criteria: Designers explain aspects of the development process and its complexity.
Phrase: Explaining development complexity

21.
Concepts: technical consideration, discuss technical constraints, technical limitation address
Relationship: All concepts involve addressing technical aspects and limitations.
Criteria: Designers consider, discuss, and address technical aspects and limitations.
Phrase: Addressing technical aspects

22.
Concepts: design refinement, adapting design plans
Relationship: Both concepts involve refining and adapting design plans.
Criteria: Designers refine and adapt design plans based on feedback or new information.
Phrase: Refining design plans

23.
Concepts: feature simplification, suggest simplification
Relationship: Both concepts involve simplifying features or processes.
Criteria: Designers simplify or suggest simplifying features or processes.
Phrase: Simplifying features

24.
Concepts: design thoughts, design simplification
Relationship: Both concepts involve discussing design simplification.
Criteria: Designers share thoughts and discuss simplifying the design.
Phrase: Discussing design simplification

25.
Concepts: explaining the need, acknowledge need for feature
Relationship: Both concepts involve explaining and acknowledging the need for features.
Criteria: Designers explain and acknowledge the need for specific features or updates.
Phrase: Acknowledging feature needs

26.
Concepts: optimize feature, feature adjustment
Relationship: Both concepts involve optimizing or adjusting features.
Criteria: Designers mention optimizing or adjusting features.
Phrase: Optimizing features

27.
Concepts: open to alternatives, openness to future development
Relationship: Both concepts involve expressing openness to alternatives or future development.
Criteria: Designers express openness to providing alternatives or future feature development.
Phrase: Expressing openness to alternatives

28.
Concepts: personal connection, sharing personal interests
Relationship: Both concepts involve sharing personal backgrounds or interests.
Criteria: Users and designers share personal backgrounds, experiences, or interests.
Phrase: Sharing personal interests

29.
Concepts: educational context, show interest in user context
Relationship: Both concepts involve providing or showing interest in educational context.
Criteria: Designers or users provide context about the educational environment and show interest in it.
Phrase: Showing interest in educational context

30.
Concepts: catering to user needs, consider user experience, addressing usability concerns
Relationship: All concepts involve addressing and considering user needs and experience.
Criteria: Designers emphasize meeting user needs, consider user experience, and address usability concerns.
Phrase: Addressing user needs and experience

31.
Concepts: component functionality, explain new component capabilities
Relationship: Both concepts involve explaining component functionality.
Criteria: Designers describe and explain the functionality and capabilities of components.
Phrase: Explaining component functionality

32.
Concepts: describe usage scenario, highlight practical application
Relationship: Both concepts involve describing usage scenarios and practical applications.
Criteria: Designers describe usage scenarios and highlight practical applications of features.
Phrase: Describing practical applications

33.
Concepts: explaining design goals, explaining design rationale, explain app design intention
Relationship: All concepts involve explaining the goals and rationale behind design decisions.
Criteria: Designers explain the goals, rationale, and intentions behind design decisions.
Phrase: Explaining design rationale

34.
Concepts: explaining features, explaining technical artifacts, describe usability features
Relationship: All concepts involve explaining features and technical aspects.
Criteria: Designers introduce and explain features, technical artifacts, and usability aspects.
Phrase: Explaining features and technical aspects

35.
Concepts: design principles, instructional design
Relationship: Both concepts involve discussing design principles and instructional design.
Criteria: Designers discuss the principles guiding the design and the instructional design approach.
Phrase: Discussing design principles

36.
Concepts: input method discussion, soft keyboard consideration
Relationship: Both concepts involve discussing input methods.
Criteria: Designers discuss the need for specific input methods, including soft keyboards.
Phrase: Discussing input methods

37.
Concepts: improve avatar quality, image and avatar management
Relationship: Both concepts involve discussing the quality and management of avatars and images.
Criteria: Designers discuss improving the quality and management of avatars and images.
Phrase: Improving avatar and image quality

38.
Concepts: provide timeline, share update timeline
Relationship: Both concepts involve providing timelines for updates.
Criteria: Designers provide and share timelines for updates.
Phrase: Providing update timelines

39.
Concepts: update preparation, software update process
Relationship: Both concepts involve preparing for and describing the update process.
Criteria: Designers prepare users for updates and describe the update process.
Phrase: Preparing for updates

40.
Concepts: providing product updates, announcing software releases
Relationship: Both concepts involve providing information about updates and releases.
Criteria: Designers provide information and announce new versions and updates.
Phrase: Announcing updates and releases

41.
Concepts: platform-specific update, platform specific information
Relationship: Both concepts involve providing platform-specific information.
Criteria: Designers provide updates and information specific to different platforms.
Phrase: Providing platform-specific updates

42.
Concepts: updates, update notification
Relationship: Both concepts involve notifying users about updates.
Criteria: Designers notify users about changes or new features in updates.
Phrase: Notifying about updates

43.
Concepts: version update notes, listing updates and fixes
Relationship: Both concepts involve providing detailed notes about updates.
Criteria: Designers provide detailed notes and information about updates and fixes.
Phrase: Providing update notes

44.
Concepts: explain version type, clarify software version
Relationship: Both concepts involve explaining and clarifying software versions.
Criteria: Designers explain and clarify the type and version of the software.
Phrase: Clarifying software versions

45.
Concepts: explain delay, vague feature response
Relationship: Both concepts involve explaining delays or giving vague responses about features.
Criteria: Designers explain delays or provide vague responses about feature completion.
Phrase: Explaining delays

46.
Concepts: promising it will realize, promise to make the feature later
Relationship: Both concepts involve promising future feature implementation.
Criteria: Designers promise to implement features or changes at a later time.
Phrase: Promising future features

47.
Concepts: promise future perfection, future perfection opinion
Relationship: Both concepts involve promising or giving opinions on future perfection.
Criteria: Designers reassure users about striving for perfection in future features.
Phrase: Promising future perfection

48.
Concepts: long-term stability, discussing feature stability
Relationship: Both concepts involve discussing the stability of features.
Criteria: Designers discuss the long-term stability and importance of features.
Phrase: Discussing feature stability

49.
Concepts: prioritization, development prioritization
Relationship: Both concepts involve discussing the prioritization of development tasks.
Criteria: Designers discuss the order and prioritization of tasks or features to be developed.
Phrase: Prioritizing development tasks

50.
Concepts: product improvement, simulation enhancement
Relationship: Both concepts involve discussing improvements to the product or simulation.
Criteria: Designers discuss improvements and enhancements to the product or simulation features.
Phrase: Discussing product improvements

51.
Concepts: future planning and development, discussion of further interests
Relationship: Both concepts involve discussing future planning and development.
Criteria: Designers discuss future planning, development, and further interests.
Phrase: Discussing future development

52.
Concepts: committing to improvement, emphasizing continuous improvement
Relationship: Both concepts involve committing to and emphasizing continuous improvement.
Criteria: Designers commit to and emphasize ongoing improvements to the product.
Phrase: Committing to continuous improvement

53.
Concepts: suggesting future possibilities, future app development possibility
Relationship: Both concepts involve suggesting potential future developments.
Criteria: Designers hint at and suggest potential future projects or developments.
Phrase: Suggesting future possibilities

54.
Concepts: mention future update, announce future consultation
Relationship: Both concepts involve mentioning future updates or consultations.
Criteria: Designers mention future updates and announce plans for future consultations with users.
Phrase: Announcing future updates

55.
Concepts: feature roadmap, outline development priorities
Relationship: Both concepts involve outlining the development priorities and roadmap.
Criteria: Designers outline the planned sequence and priorities of feature development.
Phrase: Outlining development roadmap

56.
Concepts: give examples of feature, describing planned features
Relationship: Both concepts involve providing examples and descriptions of planned features.
Criteria: Designers provide examples and describe plans for future features.
Phrase: Describing planned features
---