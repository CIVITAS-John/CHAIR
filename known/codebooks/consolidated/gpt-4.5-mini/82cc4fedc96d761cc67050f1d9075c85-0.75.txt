You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (16 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
16. 
Concepts: {Repeat the input 16}
Relationship: {What is logical relationship between concepts in code 16, or N/A if not applicable}
Criteria: {Who did what, and how for code 16}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: explain software features, explaining technical artifacts
- A designer provides explanations to clarify how certain features of the software function.
- Designers clarify technical aspects of the software to enhance user understanding.

2.
Concepts: announce version details, providing detailed update overviews
- A designer provides detailed notes regarding the current version and updates made to the software.
- A designer provides a comprehensive overview of updates, changes, and bug fixes in the software.

3.
Concepts: confirm upcoming update, share update schedules
- Designer confirms the schedule for upcoming software updates.
- A designer informs the community about the timing of upcoming software updates.

4.
Concepts: communicate updates, communicating release schedules
- Instances where designers communicate updates and release schedules to users.
- Designers communicate precise plans and schedules concerning upcoming software releases and updates.

5.
Concepts: confirm future features, promise a future perfection of a feature, promising it will realize
- Designers affirm their commitment to future developments or improvements.
- Designers reassure users about future enhancements or improvements to features.
- Designers express certainty about the future introduction of features.

6.
Concepts: outline future updates, share structured future development plans
- A designer outlines and lists planned features for future software updates.
- A designer indicates plans for future updates based on user feedback and outlines a structured plan for future software development considering user needs.

7.
Concepts: plan feature development, discuss feature development
- Designers indicate plans or intentions to develop new features or functionalities.
- Designers discuss ongoing feature development and upcoming functionalities.

8.
Concepts: ask about updates, request update status
- Users inquire about upcoming software updates or features.
- Users ask about the status of recent software updates.

9.
Concepts: share positive feedback, illustrate classroom success
- Users express satisfaction with the software's effectiveness in educational settings.
- Users share successful classroom experiences involving the software.

10.
Concepts: emoji, use emojis for expression
- A user expresses emotions or reactions through emojis, contributing to the community's informal communication style.
- Users utilize emojis to express feelings in conversations.

11.
Concepts: appreciate designers' efforts, express appreciation for community support
- Users express thanks and appreciation for the contributions made by designers.
- Users express gratitude towards designers for their contributions, fostering a supportive community environment.

12.
Concepts: integrate user feedback, involve users in design
- Instances where user feedback is sought and incorporated into the design.
- Instances where designers actively involve users in the design process through feedback.

13.
Concepts: acknowledge user feedback, align with user feedback
- Designers acknowledge and respond to user feedback appropriately.
- A designer acknowledges and aligns their actions with user feedback for improvements.

14.
Concepts: gather context, inquire about user background
- A designer gathering context by asking users about their teaching roles and internet access.
- Designers inquire about users’ teaching backgrounds to gain contextual insights.

15.
Concepts: inquire about user identity, ask about user's professional background
- A designer inquiring about the user's role to tailor responses appropriately.
- Designers ask users about their professional roles to better tailor the discussion or content.

16.
Concepts: engage in troubleshooting, provide technical support
- Users engage with designers to troubleshoot technical issues they encounter.
- Instances where designers or users provide technical assistance or address technical issues.
===
---
Definitions for each code (16 in total):
1.
Concepts: explain software features, explaining technical artifacts
Relationship: Both concepts involve providing clarity on software aspects to enhance understanding.
Criteria: A designer explains software features and technical artifacts to enhance user understanding.
Phrase: Clarify software functionality.

2.
Concepts: announce version details, providing detailed update overviews
Relationship: Both concepts focus on communicating software version information and update details.
Criteria: A designer announces version details and provides comprehensive update overviews.
Phrase: Detail software updates.

3.
Concepts: confirm upcoming update, share update schedules
Relationship: Both concepts relate to communicating the timing of future software updates.
Criteria: A designer confirms and shares the schedule for upcoming software updates.
Phrase: Confirm update schedules.

4.
Concepts: communicate updates, communicating release schedules
Relationship: Both concepts involve the dissemination of information regarding software release timelines.
Criteria: Designers communicate updates and release schedules to users.
Phrase: Inform about releases.

5.
Concepts: confirm future features, promise a future perfection of a feature, promising it will realize
Relationship: All concepts emphasize commitment and assurance regarding future software features.
Criteria: Designers confirm and promise future features and improvements to users.
Phrase: Assure future enhancements.

6.
Concepts: outline future updates, share structured future development plans
Relationship: Both concepts involve planning and outlining future developments based on user needs.
Criteria: A designer outlines future updates and shares structured development plans.
Phrase: Plan future updates.

7.
Concepts: plan feature development, discuss feature development
Relationship: Both concepts relate to the strategic development of new software features.
Criteria: Designers plan and discuss feature development intentions and progress.
Phrase: Strategize feature development.

8.
Concepts: ask about updates, request update status
Relationship: Both concepts involve users inquiring about the status of software updates.
Criteria: Users ask about and request the status of software updates.
Phrase: Inquire about updates.

9.
Concepts: share positive feedback, illustrate classroom success
Relationship: Both concepts involve the expression of satisfaction regarding software use in educational contexts.
Criteria: Users share positive feedback and illustrate successful classroom experiences.
Phrase: Provide positive testimonials.

10.
Concepts: emoji, use emojis for expression
Relationship: Both concepts pertain to the use of emojis as a means of expression in communication.
Criteria: Users use emojis to express emotions in community interactions.
Phrase: Express feelings with emojis.

11.
Concepts: appreciate designers' efforts, express appreciation for community support
Relationship: Both concepts revolve around expressing gratitude towards designers and community support.
Criteria: Users appreciate designers’ efforts and express gratitude for community contributions.
Phrase: Show appreciation.

12.
Concepts: integrate user feedback, involve users in design
Relationship: Both concepts focus on the inclusion of user feedback in the design process.
Criteria: Designers integrate user feedback and involve users in the design process.
Phrase: Incorporate user insights.

13.
Concepts: acknowledge user feedback, align with user feedback
Relationship: Both concepts relate to the recognition and responsiveness to user feedback.
Criteria: Designers acknowledge and align their actions with user feedback for improvements.
Phrase: Respond to feedback.

14.
Concepts: gather context, inquire about user background
Relationship: Both concepts involve understanding user backgrounds to inform design decisions.
Criteria: A designer gathers context and inquires about users’ teaching backgrounds.
Phrase: Collect user context.

15.
Concepts: inquire about user identity, ask about user's professional background
Relationship: Both concepts involve understanding the user’s identity to tailor interactions.
Criteria: Designers inquire about users’ professional roles to tailor discussions appropriately.
Phrase: Understand user identity.

16.
Concepts: engage in troubleshooting, provide technical support
Relationship: Both concepts focus on assisting users with technical issues encountered.
Criteria: Users engage with designers to troubleshoot and provide technical support.
Phrase: Troubleshoot technical issues.
---