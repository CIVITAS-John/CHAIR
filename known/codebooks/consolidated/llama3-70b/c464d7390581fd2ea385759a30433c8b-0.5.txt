You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another and please do not merge them.
Determine the logical relationship between concepts within each code, such as inclusion, parallel, or intersection.
Write clear and generalizable criteria for each code and do not introduce unnecessary details. Then, write an accurate verb phrase as label for the combined concept.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (17 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Label: {A consolidated verb phrase of code 1}
...
17. 
Concepts: {Repeat the input 17}
Relationship: {What is logical relationship between concepts in code 17, or N/A if not applicable}
Criteria: {Who did what, and how for code 17}
Label: {A consolidated verb phrase of code 17}
---
~~~
1.
Concepts: user needs inquiry, follow-up question on needs
- Asking about the needs or requirements of users, often seeking feedback or input.
- Asking follow-up questions to clarify user needs or requirements.

2.
Concepts: request user manual, reiterate manual necessity, justifying need for user manual
- Requesting access to a user manual or documentation
- Request or mention of the need for a user manual.
- User provides context or justification for the need for a user manual.

3.
Concepts: justifying a request, offer additional reason
- User provides a reason or justification for a suggestion or request.
- User provides an additional reason to support a point made by the developer.

4.
Concepts: describing use cases, providing context for feature requests
- A user describes a scenario or use case for a feature or tool or shares a practical scenario where a feature would be useful.
- User provides background information for a feature request or suggestion.

5.
Concepts: emphasize requirement, stress usability support, emphasizes importance
- A user emphasizes the importance of a particular feature or resource.
- User stresses the importance of usability support or resources.
- A user emphasizes the importance of something, often with a sense of urgency, or emphasizes the importance of the software for educational purposes.

6.
Concepts: consideration, show consideration for users
- Displaying thoughtfulness or careful consideration
- Showing consideration or empathy for users' needs or concerns.

7.
Concepts: suggest scope expansion, suggest expansion to mechanics
- Suggesting or discussing the expansion of the software's scope or features
- Suggesting or proposing the expansion of the application to include mechanics experiments.

8.
Concepts: advise targeted feature development, advises on development approach
- Advising or recommending a targeted approach to feature development.
- A user suggests a development approach or strategy, and advises on development strategy or approach.

9.
Concepts: suggest incremental approach, advocating for slow development
- Suggesting an incremental or iterative approach to development.
- Advising or suggesting a cautious or incremental approach to development.

10.
Concepts: proposing alternatives, share potential solutions
- Proposing alternative solutions or approaches.
- Suggesting or proposing solutions or ideas

11.
Concepts: explaining internet restrictions, explain lack of internet due to past issue with inappropriate content
- User explains internet restrictions in their school.
- The user explains the lack of internet access in schools due to past incidents or security concerns.

12.
Concepts: explaining limitations, discussing system limitations
- Mentioning or explaining the limitations or constraints of a solution or design.
- User or designer explains why a particular issue cannot be solved due to system limitations, or discusses hardware limitations or requirements.

13.
Concepts: highlighting constraints, highlighting practical limitations
- Highlighting constraints or limitations that affect the community or development.
- Highlighting limitations or constraints in a practical context.

14.
Concepts: self-correction, self-rebut previous response
- Self-correction or retraction of a previous statement.
- Designer corrects or rebuts their previous response.

15.
Concepts: frustration, expressing frustration with current tools
- The user or designer expresses frustration or annoyance.
- Expressing frustration or dissatisfaction with current tools or systems.

16.
Concepts: avatar quality concerns, content quality discussion
- The speaker expresses concerns or issues with avatar quality or customization.
- Addressing or discussing the quality of content, such as images or avatars.

17.
Concepts: platform differences, adapt to platform specific constraints
- Identifying or discussing potential differences between platforms or systems.
- Mentioning limitations or constraints imposed by a specific platform.
===
Here are the definitions for each code:

---
1.
Concepts: user needs inquiry, follow-up question on needs
Relationship: Inclusion
Criteria: Users ask about or seek clarification on other users' needs.
Label: Inquiring about user needs

2.
Concepts: request user manual, reiterate manual necessity, justifying need for user manual
Relationship: Inclusion
Criteria: Users request or justify the need for a user manual or documentation.
Label: Requesting user documentation

3.
Concepts: justifying a request, offer additional reason
Relationship: Parallel
Criteria: Users provide reasons or justifications for their requests or suggestions.
Label: Justifying requests

4.
Concepts: describing use cases, providing context for feature requests
Relationship: Inclusion
Criteria: Users describe scenarios or provide context for feature requests or suggestions.
Label: Providing use cases

5.
Concepts: emphasize requirement, stress usability support, emphasizes importance
Relationship: Inclusion
Criteria: Users emphasize the importance of features, resources, or usability support.
Label: Emphasizing importance

6.
Concepts: consideration, show consideration for users
Relationship: N/A
Criteria: Users or designers display thoughtfulness or empathy towards users' needs.
Label: Showing consideration

7.
Concepts: suggest scope expansion, suggest expansion to mechanics
Relationship: Inclusion
Criteria: Users suggest expanding the software's scope or features, including mechanics experiments.
Label: Suggesting scope expansion

8.
Concepts: advise targeted feature development, advises on development approach
Relationship: Parallel
Criteria: Users advise on targeted feature development or recommend development approaches.
Label: Advising on development

9.
Concepts: suggest incremental approach, advocating for slow development
Relationship: Inclusion
Criteria: Users suggest or advocate for incremental or cautious development approaches.
Label: Advocating for incremental development

10.
Concepts: proposing alternatives, share potential solutions
Relationship: Inclusion
Criteria: Users propose alternative solutions or approaches.
Label: Proposing alternatives

11.
Concepts: explaining internet restrictions, explain lack of internet due to past issue with inappropriate content
Relationship: Inclusion
Criteria: Users explain internet restrictions or lack of access due to past incidents or security concerns.
Label: Explaining internet restrictions

12.
Concepts: explaining limitations, discussing system limitations
Relationship: Inclusion
Criteria: Users or designers explain system limitations or constraints that affect solutions or designs.
Label: Explaining limitations

13.
Concepts: highlighting constraints, highlighting practical limitations
Relationship: Inclusion
Criteria: Users or designers highlight constraints or limitations that affect the community or development.
Label: Highlighting constraints

14.
Concepts: self-correction, self-rebut previous response
Relationship: N/A
Criteria: Users or designers correct or retract previous statements.
Label: Self-correcting

15.
Concepts: frustration, expressing frustration with current tools
Relationship: Inclusion
Criteria: Users or designers express frustration or dissatisfaction with current tools or systems.
Label: Expressing frustration

16.
Concepts: avatar quality concerns, content quality discussion
Relationship: Inclusion
Criteria: Users discuss or express concerns about avatar quality or content quality.
Label: Discussing content quality

17.
Concepts: platform differences, adapt to platform specific constraints
Relationship: Inclusion
Criteria: Users or designers identify or discuss platform-specific differences or limitations.
Label: Adapting to platform differences