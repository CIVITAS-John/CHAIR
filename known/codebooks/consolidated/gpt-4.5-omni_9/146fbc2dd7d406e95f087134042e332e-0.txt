You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (35 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
35. 
Concepts: {Repeat the input 35}
Relationship: {What is logical relationship between concepts in code 35, or N/A if not applicable}
Criteria: {Who did what, and how for code 35}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: confirm professional identity, confirm teacher identity
- A user confirms their identity or professional role.
- Designers inquire about the user's teaching level to confirm their professional identity.

2.
Concepts: provide reason, explaining the plans
- A team member provides or confirms a reason for a planned action or decision.
- A team member explains the plans or rationale behind a feature.

3.
Concepts: request private inquiry, request private message
- A designer asks users to provide detailed requirements privately.
- A team member requests a private message to discuss specific needs.

4.
Concepts: elaborate on question, provide detailed response
- A user provides additional context or details to clarify or expand on a conversation.
- Providing a detailed and specific answer to a query or clarification question.

5.
Concepts: context for need, provide issue context
- Users provide context for their needs or requests.
- A user provides context or background for an issue, response, interest, or question.

6.
Concepts: inquire about platform, inquire about updates
- Users ask questions or seek clarification about the platform and its updates.
- Users inquire about recent and upcoming updates or changes, including the status of software updates.

7.
Concepts: request usage support, seek technical information
- Users request guidance, technical support, or usage support for the software.
- Users ask questions to gain knowledge or resources related to the software.

8.
Concepts: share teaching experience, share high school teaching background, introduce teaching identity
- A user who is a teacher shares their teaching experience or requests educational features.
- Users share their high school teaching experience and background information.
- A user shares their teaching experience, including grade level and number of years, upon request.

9.
Concepts: appreciate user support, acknowledge community support
- Users and designers express enthusiasm for ideas and appreciate user support.
- Users express support for designers' efforts, and designers acknowledge it.

10.
Concepts: appreciate designers' efforts, express gratitude and acknowledgment
- Users acknowledge and appreciate the efforts and dedication of the designers.
- Users and designers express gratitude and acknowledge contributions.

11.
Concepts: acknowledge self-sufficiency, acknowledge self-solved problem
- A user acknowledges finding information or resources on their own.
- A user finds a solution to their own problem and acknowledges it.

12.
Concepts: announce feature updates, list feature updates and bug fixes
- Developers announce new features, components, adjustments, and bug fixes in the application.
- Designers list new features and bug fixes in updates.

13.
Concepts: share visual update, announce component updates, provide version update details
- A designer shares visual updates or images related to the software.
- A designer announces updates to specific components in the application.
- A designer provides detailed notes on the updates and new features in a software version.

14.
Concepts: describe update scope, mention feature expansion
- A designer describes the scope or extent of an update.
- A designer mentions the expansion of features in an update or the need for future updates.

15.
Concepts: provide timeline and update process, provide feature roadmap and timeline
- Team members provide a timeline and describe the process for software updates or releases.
- Team members outline the sequence of tasks or features to be developed and provide a timeline for their development.

16.
Concepts: plan future updates, list upcoming features
- Team members discuss and plan future updates or improvements.
- Team members list features that will be included in upcoming software updates.

17.
Concepts: share development updates, share feature development and release info
- Designers share detailed information about the current status, updates, and future plans for the software.
- Designers share information about current feature development and the release status of the application.

18.
Concepts: discuss future design plans, discuss future possibilities
- Designers discuss plans for future compatibility, features, and design considerations.
- Designers suggest and share their interests in potential future opportunities, developments, and projects.

19.
Concepts: reassure users, confirm feature updates
- Instances where designers reassure users about the progress and express gratitude or encouragement.
- Designers reassure and confirm to users that a feature or update is forthcoming.

20.
Concepts: promise that the update is ongoing, highlight and express hope for progress
- A designer promises that updates or improvements are ongoing.
- Designers highlight the progress of updates and express hope for progress on specific tasks or projects.

21.
Concepts: consult with teachers on standards, inquire and request teachers' help
- Designers interact with teachers to consult about specific details and educational standards.
- Designers ask teachers about their needs or preferences and seek help or input from them within the community.

22.
Concepts: system requirements, consider technical requirements
- Designers discuss the system requirements for running the software.
- Designers discuss and consider technical requirements and conditions for using the software.

23.
Concepts: confirm system compatibility, discuss platform compatibility
- Designers confirm and assure users about the software's compatibility with different systems.
- Users inquire about platform compatibility, and designers answer questions regarding system compatibility.

24.
Concepts: detailed feature request, request specific features, justify feature requests
- Making detailed requests for specific features.
- Users express their needs or request specific functionalities within the software.
- Users give reasons and justify their requests for specific features or functionalities.

25.
Concepts: address user concerns, address usability concerns
- Designers respond to and address user concerns.
- Users address usability concerns or highlight the need for specific usability features.

26.
Concepts: accept user suggestion, validate and respond to user request
- A designer accepts a user's request and agrees to implement it in a future update.
- A designer validates and responds to a user's feature request or suggestion.

27.
Concepts: direct communication, engage in real-time communication
- Direct interactions between designers and users to discuss features, updates, and feedback.
- Designers engage in real-time communication and respond directly to users' inquiries about system support.

28.
Concepts: seek context, inquire about user background
- A designer seeks context or background information from users.
- Designers inquire about the user's background or professional level.

29.
Concepts: encourage elaboration, facilitate further engagement
- Designers elaborate on a topic or response and encourage users to provide more details.
- A user inquires about expanding the subject matter, and a designer facilitates further engagement.

30.
Concepts: download instructions, direct to download resources, provide access information
- Designers provide instructions on how to download the software.
- A designer directs users to resources or provides information on where to download the software.
- A designer or user provides information on how to access or download the software.

31.
Concepts: introduce and explain component functionality, explain feature details and provide examples
- Designers introduce new components and explain their functionality within the software.
- Designers provide detailed information and explanations about features, including examples to illustrate their functionality.

32.
Concepts: explain design principles and philosophy, provide design and development rationale
- Designers explain the principles and philosophies guiding the software design.
- Designers explain the rationale behind design and development decisions, providing reasons for certain actions.

33.
Concepts: discuss and consider usability, discuss feature optimization and usability
- Designers discuss and consider the practical usability and user experience of the software.
- Designers discuss improving or optimizing features and the usability of the software.

34.
Concepts: design refinement, suggest feature simplification and refinement
- Designers discuss refining the design.
- Designers suggest simplifying features or processes and discuss the importance of simplification and refinement in the design process.

35.
Concepts: detail simulated experiment plans, discuss simulation details and accuracy
- Designers discuss plans for simulated experiments and provide detailed assessments of them.
- Designers explain details about simulation features and discuss their accuracy in the software.
===
---
Definitions for each code (35 in total):
1.
Concepts: confirm professional identity, confirm teacher identity
Relationship: Both concepts involve verifying the user's professional role.
Criteria: A user confirms their professional or teaching identity, often in response to inquiries about their teaching level.
Phrase: Confirm professional identity

2.
Concepts: provide reason, explaining the plans
Relationship: Both concepts involve giving a rationale for actions or decisions.
Criteria: A team member provides a reason and explains the plans or rationale behind a feature or decision.
Phrase: Explain rationale

3.
Concepts: request private inquiry, request private message
Relationship: Both concepts involve requesting private communication for detailed discussions.
Criteria: A designer or team member requests a private message to discuss specific needs or detailed requirements.
Phrase: Request private communication

4.
Concepts: elaborate on question, provide detailed response
Relationship: Both concepts involve providing additional information or context.
Criteria: A user provides additional context or details to clarify a question, and a detailed response is given.
Phrase: Provide detailed clarification

5.
Concepts: context for need, provide issue context
Relationship: Both concepts involve providing background information.
Criteria: Users provide context or background for their needs, requests, or issues.
Phrase: Provide contextual background

6.
Concepts: inquire about platform, inquire about updates
Relationship: Both concepts involve seeking information about the platform and its updates.
Criteria: Users ask questions about the platform and inquire about recent or upcoming updates.
Phrase: Inquire about platform updates

7.
Concepts: request usage support, seek technical information
Relationship: Both concepts involve seeking help or information related to software usage.
Criteria: Users request guidance or technical support and seek information related to the software.
Phrase: Seek technical support

8.
Concepts: share teaching experience, share high school teaching background, introduce teaching identity
Relationship: All concepts involve sharing teaching-related information.
Criteria: A user shares their teaching experience, background, and identity, often including specific details like grade level and years of experience.
Phrase: Share teaching background

9.
Concepts: appreciate user support, acknowledge community support
Relationship: Both concepts involve expressing gratitude for support.
Criteria: Users and designers express appreciation for ideas and support within the community.
Phrase: Express appreciation for support

10.
Concepts: appreciate designers' efforts, express gratitude and acknowledgment
Relationship: Both concepts involve expressing gratitude towards designers.
Criteria: Users acknowledge and appreciate the efforts of designers, expressing gratitude and acknowledgment.
Phrase: Express gratitude to designers

11.
Concepts: acknowledge self-sufficiency, acknowledge self-solved problem
Relationship: Both concepts involve recognizing one's own ability to solve problems.
Criteria: A user acknowledges finding information or solving a problem on their own.
Phrase: Acknowledge self-sufficiency

12.
Concepts: announce feature updates, list feature updates and bug fixes
Relationship: Both concepts involve communicating updates and fixes.
Criteria: Developers announce new features, adjustments, and bug fixes in the application.
Phrase: Announce feature updates

13.
Concepts: share visual update, announce component updates, provide version update details
Relationship: All concepts involve sharing detailed update information.
Criteria: A designer shares visual updates, announces component updates, and provides detailed notes on new features in a software version.
Phrase: Share detailed update information

14.
Concepts: describe update scope, mention feature expansion
Relationship: Both concepts involve discussing the extent of updates.
Criteria: A designer describes the scope of an update and mentions the expansion of features.
Phrase: Describe update scope

15.
Concepts: provide timeline and update process, provide feature roadmap and timeline
Relationship: Both concepts involve outlining timelines and processes.
Criteria: Team members provide a timeline and describe the process for software updates, including a feature roadmap.
Phrase: Outline update timeline

16.
Concepts: plan future updates, list upcoming features
Relationship: Both concepts involve planning and listing future updates.
Criteria: Team members discuss and plan future updates, listing features to be included.
Phrase: Plan future updates

17.
Concepts: share development updates, share feature development and release info
Relationship: Both concepts involve sharing information about development and releases.
Criteria: Designers share detailed information about current status, updates, and future plans for the software.
Phrase: Share development updates

18.
Concepts: discuss future design plans, discuss future possibilities
Relationship: Both concepts involve discussing future plans and possibilities.
Criteria: Designers discuss plans for future features, compatibility, and potential developments.
Phrase: Discuss future plans

19.
Concepts: reassure users, confirm feature updates
Relationship: Both concepts involve providing reassurance about updates.
Criteria: Designers reassure users about progress and confirm that a feature or update is forthcoming.
Phrase: Reassure about updates

20.
Concepts: promise that the update is ongoing, highlight and express hope for progress
Relationship: Both concepts involve communicating ongoing progress and hope.
Criteria: A designer promises that updates are ongoing and highlights progress, expressing hope for specific tasks.
Phrase: Highlight ongoing progress

21.
Concepts: consult with teachers on standards, inquire and request teachers' help
Relationship: Both concepts involve seeking input from teachers.
Criteria: Designers consult with teachers about educational standards and request their help or input.
Phrase: Consult with teachers

22.
Concepts: system requirements, consider technical requirements
Relationship: Both concepts involve discussing technical requirements.
Criteria: Designers discuss the system and technical requirements for running the software.
Phrase: Discuss technical requirements

23.
Concepts: confirm system compatibility, discuss platform compatibility
Relationship: Both concepts involve confirming and discussing compatibility.
Criteria: Designers confirm and discuss the software's compatibility with different systems.
Phrase: Confirm system compatibility

24.
Concepts: detailed feature request, request specific features, justify feature requests
Relationship: All concepts involve making and justifying feature requests.
Criteria: Users make detailed requests for specific features and justify their needs.
Phrase: Make detailed feature request

25.
Concepts: address user concerns, address usability concerns
Relationship: Both concepts involve addressing user concerns.
Criteria: Designers respond to and address user concerns, including usability issues.
Phrase: Address user concerns

26.
Concepts: accept user suggestion, validate and respond to user request
Relationship: Both concepts involve responding positively to user suggestions.
Criteria: A designer accepts a user's request and agrees to implement it, validating and responding to the suggestion.
Phrase: Accept user suggestion

27.
Concepts: direct communication, engage in real-time communication
Relationship: Both concepts involve direct and real-time interactions.
Criteria: Designers engage in direct, real-time communication with users to discuss features and feedback.
Phrase: Engage in direct communication

28.
Concepts: seek context, inquire about user background
Relationship: Both concepts involve seeking background information.
Criteria: A designer seeks context or background information from users, inquiring about their professional level.
Phrase: Seek user background

29.
Concepts: encourage elaboration, facilitate further engagement
Relationship: Both concepts involve encouraging more detailed interaction.
Criteria: Designers encourage users to elaborate on topics and facilitate further engagement.
Phrase: Encourage detailed interaction

30.
Concepts: download instructions, direct to download resources, provide access information
Relationship: All concepts involve providing information on accessing the software.
Criteria: Designers provide instructions and information on how to download and access the software.
Phrase: Provide download instructions

31.
Concepts: introduce and explain component functionality, explain feature details and provide examples
Relationship: Both concepts involve explaining software features.
Criteria: Designers introduce new components, explain their functionality, and provide detailed examples.
Phrase: Explain feature functionality

32.
Concepts: explain design principles and philosophy, provide design and development rationale
Relationship: Both concepts involve explaining the reasoning behind design choices.
Criteria: Designers explain the principles guiding the software design and provide the rationale for development decisions.
Phrase: Explain design rationale

33.
Concepts: discuss and consider usability, discuss feature optimization and usability
Relationship: Both concepts involve discussing usability and optimization.
Criteria: Designers discuss and consider the usability and optimization of software features.
Phrase: Discuss usability

34.
Concepts: design refinement, suggest feature simplification and refinement
Relationship: Both concepts involve refining and simplifying design features.
Criteria: Designers discuss refining the design and suggest simplifying features or processes.
Phrase: Discuss design refinement

35.
Concepts: detail simulated experiment plans, discuss simulation details and accuracy
Relationship: Both concepts involve discussing simulation plans and accuracy.
Criteria: Designers discuss plans for simulated experiments and provide detailed assessments of their accuracy.
Phrase: Discuss simulation plans
---