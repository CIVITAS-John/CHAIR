You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (10 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
10. 
Concepts: {Repeat the input 10}
Relationship: {What is logical relationship between concepts in code 10, or N/A if not applicable}
Criteria: {Who did what, and how for code 10}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: needs fine-tuning for experts, need for expert-oriented design, recognizing the need for fine-tuning ai design
- Experts require fine-tuning of AI systems to meet their needs.
- Desiring a fine-tuned, expert-oriented design for AI-driven interfaces.
- Recognizes the need for fine-tuning AI design for expert users, citing the learning curve.

2.
Concepts: recognizing the need for expertise, highlighting the importance of expertise
- The user believes that expertise is required to understand and fix errors generated by the LLM-driven interface.
- Users emphasize the need for expertise to understand AI-generated code and debug errors effectively.

3.
Concepts: need for human intervention, ai's limitations in resolving complex errors
- Participants recognize the need for human intervention in complex cases where AI tools struggle to resolve errors.
- Recognizes the limitations of AI in resolving complex errors and the importance of human expertise.

4.
Concepts: need for ai interaction skills, recognizing need for user education in ai use
- The participant emphasizes the need for users to develop skills in interacting with the AI, recognizing that it requires a specific set of skills and knowledge.
- The participant recognizes the need for user education and practice in using AI-assisted tools effectively.

5.
Concepts: recognizing personal skills, user skill in ai communication
- The participant recognizes the importance of personal skills in interacting with the AI tool, such as knowing how to ask questions.
- The interviewee emphasizes the importance of user skill in AI communication, highlighting the need for effective questioning.

6.
Concepts: knowledge-dependent ai usage, human-effort: pre-requisite knowledge
- Recognizes the importance of expertise in using AI-driven interfaces.
- Recognizes the importance of pre-requisite knowledge in using LLM-driven interfaces.

7.
Concepts: importance of context, recognizing context in code completion
- The participant emphasizes the importance of context in seeking help, such as providing background information when posting code.
- Recognizes the importance of context in code completion.

8.
Concepts: instruction writing skills, emphasizing instruction importance
- Discussing the importance of instruction writing skills
- Participants recognize the importance of writing clear instructions for AI assistance and identify foundational skills for effective AI use.

9.
Concepts: ai prioritizes best practices, emphasizes following best practices over ruthlessly creating a model
- Noting that the AI focuses on best practices rather than creating a model ruthlessly.
- The participant emphasizes the importance of following best practices over ruthlessly creating a model.

10.
Concepts: advocacy for peer programming, positive opinions on peer programming
- Advocates for peer programming and its benefits.
- Expresses positive opinions on peer programming
===
Here are the definitions for each code:

---
1.
Concepts: needs fine-tuning for experts, need for expert-oriented design, recognizing the need for fine-tuning ai design
Relationship: The concepts are interconnected, emphasizing the need for AI systems to be fine-tuned for expert users, requiring an expert-oriented design that recognizes the need for fine-tuning.
Criteria: Experts require fine-tuning of AI systems to meet their specific needs, leading to a call for expert-oriented design that acknowledges the need for fine-tuning.
Phrase: Fine-tune AI design for experts.

2.
Concepts: recognizing the need for expertise, highlighting the importance of expertise
Relationship: The concepts are complementary, stressing the necessity of expertise in understanding and resolving errors generated by LLM-driven interfaces.
Criteria: Users emphasize the need for expertise to understand AI-generated code and debug errors effectively.
Phrase: Emphasize expertise in AI use.

3.
Concepts: need for human intervention, ai's limitations in resolving complex errors
Relationship: The concepts are causally related, highlighting the limitations of AI in resolving complex errors, which necessitates human intervention.
Criteria: Participants recognize the need for human intervention in complex cases where AI tools struggle to resolve errors.
Phrase: Intervene in AI-driven error resolution.

4.
Concepts: need for ai interaction skills, recognizing need for user education in ai use
Relationship: The concepts are interdependent, emphasizing the need for users to develop skills in interacting with AI, which requires education and practice.
Criteria: Participants recognize the need for user education and practice in using AI-assisted tools effectively.
Phrase: Develop AI interaction skills.

5.
Concepts: recognizing personal skills, user skill in ai communication
Relationship: The concepts are synonymous, highlighting the importance of personal skills in interacting with AI tools, particularly in asking effective questions.
Criteria: The participant recognizes the importance of user skill in AI communication, highlighting the need for effective questioning.
Phrase: Possess AI communication skills.

6.
Concepts: knowledge-dependent ai usage, human-effort: pre-requisite knowledge
Relationship: The concepts are complementary, emphasizing the importance of pre-requisite knowledge in using AI-driven interfaces effectively.
Criteria: Recognizes the importance of pre-requisite knowledge in using LLM-driven interfaces.
Phrase: Possess pre-requisite knowledge for AI use.

7.
Concepts: importance of context, recognizing context in code completion
Relationship: The concepts are interconnected, highlighting the importance of context in seeking help and code completion.
Criteria: The participant emphasizes the importance of context in code completion.
Phrase: Consider context in code completion.

8.
Concepts: instruction writing skills, emphasizing instruction importance
Relationship: The concepts are complementary, stressing the importance of instruction writing skills for effective AI assistance.
Criteria: Participants recognize the importance of writing clear instructions for AI assistance and identify foundational skills for effective AI use.
Phrase: Write effective instructions for AI.

9.
Concepts: ai prioritizes best practices, emphasizes following best practices over ruthlessly creating a model
Relationship: The concepts are causally related, highlighting the AI's focus on best practices, which leads to a emphasis on following best practices over ruthlessly creating a model.
Criteria: The participant emphasizes the importance of following best practices over ruthlessly creating a model.
Phrase: Prioritize best practices in AI use.

10.
Concepts: advocacy for peer programming, positive opinions on peer programming
Relationship: The concepts are synonymous, expressing positive opinions on peer programming and advocating for its benefits.
Criteria: Advocates for peer programming and its benefits.
Phrase: Advocate for peer programming.