You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (25 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
25. 
Concepts: {Repeat the input 25}
Relationship: {What is logical relationship between concepts in code 25, or N/A if not applicable}
Criteria: {Who did what, and how for code 25}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: group communication, communicate release information
- A designer communicates updates or information about the app to the group.
- Designers discuss the app's release status and update the community on progress.

2.
Concepts: address bug fixes, provide examples and confirm features
- Designers outline new features and bug fixes in the software while noting potential bugs.
- Designers provide specific examples and confirm the inclusion of new and upcoming features in software updates.

3.
Concepts: set timeline expectations, provide release timelines
- The designer communicates timelines and sets expectations for software updates.
- Designers provide timelines for upcoming updates and specific feature developments.

4.
Concepts: outline development plans, listing what might need to be done
- Designers outline future software development plans and current priorities for updates.
- Designer lists potential tasks or considerations for future development.

5.
Concepts: promise ongoing improvements, highlight and express hope for progress
- Designers reassure users about progress and promise ongoing improvements.
- Designers highlight current progress and express hope for continued advancements in software development.

6.
Concepts: analyze system compatibility, diagnose compatibility issues, speculate on compatibility
- Designers analyze current compatibility issues and consider future implications.
- Designers diagnose software compatibility issues and confirm compatibility with operating systems.
- Designers speculate about software compatibility with different systems and explain the development process.

7.
Concepts: explain limitations, discuss testing phase limitations
- Designers explain limitations of functionality and potential issues.
- Designers provide disclaimers about the testing version and its limitations.

8.
Concepts: explain complexity, compare feature complexities
- Designers explain the complexity of certain features or updates, setting realistic expectations for users.
- Designers discuss and compare the complexity of various features.

9.
Concepts: community norms, acknowledging community needs
- Designers acknowledge community norms and expectations.
- A designer acknowledges the community's needs and future development directions.

10.
Concepts: explain design rationale, explain design principles
- Designers clarify the rationale behind design decisions and development efforts.
- Designers articulate principles guiding the design process and explain the underlying philosophy.

11.
Concepts: seek user context, gather user input and requirements
- Designers gather context by inquiring about users' experiences and needs.
- Designers gather input and detailed requirements from users regarding their needs.

12.
Concepts: share experiences and support, acknowledge user experiences
- Users and designers share experiences and support each other.
- Users empathize with designers' situations and designers acknowledge user needs.

13.
Concepts: seek consensus, propose design ideas
- The designer seeks agreement or consensus on a proposed idea or solution.
- Designers propose design ideas and share potential solutions based on feedback.

14.
Concepts: discuss feature development, engage in iterative development
- Designers discuss ongoing feature development and enhancements with users.
- Instances where designers discuss updates and the iterative process of development.

15.
Concepts: explain technical details, explain functionalities and usage
- Designers provide technical specifications and clarify software features.
- Designers provide explanations for features and detailed instructions on how to use them.

16.
Concepts: provide responses, respond to inquiries
- Designers respond to user inquiries or concerns with relevant information.
- Designers respond to community inquiries and provide answers.

17.
Concepts: build community through gratitude, foster positive interactions in the community
- Users acknowledge help and express gratitude to build community.
- Users respond positively to information and engage in supportive exchanges.

18.
Concepts: express gratitude, user interaction and gratitude
- Users and designers express gratitude for support and contributions from each other.
- Users express gratitude and positive feedback towards the designer's efforts.

19.
Concepts: establish credibility, confirm teacher identity
- Users share their teaching background to establish credibility.
- Users confirm their teacher identity and share relevant background information.

20.
Concepts: professional engagement, acknowledging community expertise
- Users affirm their professional roles or experiences, contributing to the community's educational context.
- Designers and users acknowledge expertise within the community regarding educational content.

21.
Concepts: elaborate on questions, provide context for understanding
- A user provides additional context or clarification to a previous question or statement.
- Users provide context to enhance understanding of their questions.

22.
Concepts: school needs, express user needs
- Users express the needs of their school regarding technology and resources.
- Users articulate specific needs and educational context for software functionalities.

23.
Concepts: establish feedback loop, incorporate user feedback
- Processes where user feedback is solicited and incorporated into design decisions.
- User feedback is acknowledged and incorporated into the design process for future updates.

24.
Concepts: respond to feedback, provide specific feedback
- Instances where designers respond to user feedback or suggestions.
- Users provide specific feedback or corrections to the designer.

25.
Concepts: highlight technical issues, discuss technical constraints
- Users highlight technical issues and discuss limitations of outdated technology.
- Users discuss technical constraints affecting the software's usability.
===
---
Definitions for each code (25 in total):
1.
Concepts: group communication, communicate release information
Relationship: The concepts are interrelated as effective group communication is essential for conveying release information.
Criteria: Designers communicate updates about the app's release status and progress to the group.
Phrase: Communicate release updates.

2.
Concepts: address bug fixes, provide examples and confirm features
Relationship: The concepts are connected as addressing bug fixes often requires providing examples and confirming features.
Criteria: Designers outline new features and bug fixes while providing specific examples and confirming their inclusion.
Phrase: Confirm features and bug fixes.

3.
Concepts: set timeline expectations, provide release timelines
Relationship: The concepts are logically related as setting timeline expectations involves providing specific release timelines.
Criteria: Designers communicate timelines and set expectations for upcoming software updates.
Phrase: Provide release timelines.

4.
Concepts: outline development plans, listing what might need to be done
Relationship: The concepts are related as outlining development plans includes listing potential tasks for future updates.
Criteria: Designers outline future software development plans and list potential tasks for consideration.
Phrase: Outline development priorities.

5.
Concepts: promise ongoing improvements, highlight and express hope for progress
Relationship: The concepts are interconnected as promising ongoing improvements involves highlighting current progress and expressing hope.
Criteria: Designers reassure users about progress and promise ongoing improvements in software development.
Phrase: Promise ongoing improvements.

6.
Concepts: analyze system compatibility, diagnose compatibility issues, speculate on compatibility
Relationship: The concepts are related as analyzing and diagnosing compatibility issues often leads to speculation about future compatibility.
Criteria: Designers analyze and diagnose compatibility issues while speculating on future implications.
Phrase: Diagnose compatibility issues.

7.
Concepts: explain limitations, discuss testing phase limitations
Relationship: The concepts are interrelated as explaining limitations includes discussing those specific to the testing phase.
Criteria: Designers explain functionality limitations and provide disclaimers about the testing version.
Phrase: Explain testing limitations.

8.
Concepts: explain complexity, compare feature complexities
Relationship: The concepts are connected as explaining complexity involves comparing the complexities of different features.
Criteria: Designers explain and compare the complexity of various features or updates.
Phrase: Compare feature complexities.

9.
Concepts: community norms, acknowledging community needs
Relationship: The concepts are related as acknowledging community needs is part of understanding community norms.
Criteria: Designers acknowledge community norms and the needs for future development.
Phrase: Acknowledge community needs.

10.
Concepts: explain design rationale, explain design principles
Relationship: The concepts are interrelated as explaining design rationale often involves discussing the guiding principles.
Criteria: Designers clarify the rationale behind design decisions and articulate the principles guiding the process.
Phrase: Explain design rationale.

11.
Concepts: seek user context, gather user input and requirements
Relationship: The concepts are connected as seeking user context involves gathering input and requirements from users.
Criteria: Designers gather context and input from users regarding their experiences and needs.
Phrase: Gather user input.

12.
Concepts: share experiences and support, acknowledge user experiences
Relationship: The concepts are related as sharing experiences often includes acknowledging the experiences of others.
Criteria: Users and designers share experiences and support each other while acknowledging user needs.
Phrase: Share experiences and support.

13.
Concepts: seek consensus, propose design ideas
Relationship: The concepts are interrelated as seeking consensus is often a part of proposing design ideas.
Criteria: Designers seek agreement on proposed ideas and share potential solutions based on feedback.
Phrase: Propose design ideas.

14.
Concepts: discuss feature development, engage in iterative development
Relationship: The concepts are connected as discussing feature development involves engaging in an iterative process.
Criteria: Designers discuss ongoing feature development and enhancements with users.
Phrase: Engage in feature development.

15.
Concepts: explain technical details, explain functionalities and usage
Relationship: The concepts are related as explaining technical details includes clarifying functionalities and usage.
Criteria: Designers provide technical specifications and instructions on how to use software features.
Phrase: Explain technical functionalities.

16.
Concepts: provide responses, respond to inquiries
Relationship: The concepts are interrelated as providing responses is a direct action of responding to inquiries.
Criteria: Designers respond to user inquiries and provide relevant information.
Phrase: Respond to inquiries.

17.
Concepts: build community through gratitude, foster positive interactions in the community
Relationship: The concepts are connected as building community through gratitude fosters positive interactions.
Criteria: Users express gratitude and engage in supportive exchanges to build community.
Phrase: Foster positive interactions.

18.
Concepts: express gratitude, user interaction and gratitude
Relationship: The concepts are related as expressing gratitude is a form of user interaction.
Criteria: Users and designers express gratitude for support and contributions to each other.
Phrase: Express gratitude.

19.
Concepts: establish credibility, confirm teacher identity
Relationship: The concepts are interrelated as establishing credibility often involves confirming one's teacher identity.
Criteria: Users share their teaching background to establish credibility within the community.
Phrase: Confirm teacher identity.

20.
Concepts: professional engagement, acknowledging community expertise
Relationship: The concepts are connected as professional engagement includes acknowledging the expertise of community members.
Criteria: Users affirm their professional roles while designers acknowledge expertise within the community.
Phrase: Acknowledge community expertise.

21.
Concepts: elaborate on questions, provide context for understanding
Relationship: The concepts are related as elaborating on questions often requires providing additional context.
Criteria: Users provide additional context to enhance understanding of their questions.
Phrase: Elaborate on questions.

22.
Concepts: school needs, express user needs
Relationship: The concepts are interrelated as expressing user needs often reflects the needs of their school.
Criteria: Users articulate specific needs regarding technology and resources for their school.
Phrase: Express school needs.

23.
Concepts: establish feedback loop, incorporate user feedback
Relationship: The concepts are connected as establishing a feedback loop involves incorporating user feedback into design decisions.
Criteria: User feedback is solicited and acknowledged in the design process for updates.
Phrase: Incorporate user feedback.

24.
Concepts: respond to feedback, provide specific feedback
Relationship: The concepts are interrelated as responding to feedback involves providing specific feedback or corrections.
Criteria: Designers respond to user feedback and users provide specific suggestions.
Phrase: Respond to feedback.

25.
Concepts: highlight technical issues, discuss technical constraints
Relationship: The concepts are connected as highlighting technical issues often leads to discussions about constraints.
Criteria: Users highlight technical issues and discuss limitations affecting software usability.
Phrase: Discuss technical constraints.
---