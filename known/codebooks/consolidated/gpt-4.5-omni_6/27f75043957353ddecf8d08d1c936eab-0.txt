You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (33 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
33. 
Concepts: {Repeat the input 33}
Relationship: {What is logical relationship between concepts in code 33, or N/A if not applicable}
Criteria: {Who did what, and how for code 33}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: user guidance, usage instruction
- A designer provides guidance or instructions for using features.
- A designer provides instructions on how to use specific features or functionalities.

2.
Concepts: design rationale, rationale explanation, give rationale to development decision
- Designers explain the rationale behind the design choices.
- Designers explaining the rationale behind decisions or features.
- Designers provide reasons or justifications for their development decisions.

3.
Concepts: explanation, explain bidirectional conversion feature
- A designer explains a feature that allows bidirectional conversion for problem-solving within the application.
- Designers explain features related to bidirectional conversion in the software.

4.
Concepts: share knowledge, provide information
- Designers share knowledge or information about the software.
- Designers provide information or facts about the software.

5.
Concepts: software usability, usability and practicality
- Evaluations of the software's practicality and ease of use.
- User comments on the ease of use and practicality of the software.

6.
Concepts: context of use, usability and context of use
- Instances where users describe the specific contexts in which they use the software.
- Discussions about how the software is used in different contexts and its usability.

7.
Concepts: user reviews, user experience
- Providing a review or feedback on the software.
- Instances where users share their experiences or opinions about using the software.

8.
Concepts: comparative feedback, comparison with other applications, comparison to similar apps, compare with other software
- A user provides comparative feedback, highlighting the software's practicality.
- A user compares the software favorably to other applications.
- A user compares the software favorably to other similar applications, highlighting its practicality.
- A user compares the software favorably to other software.

9.
Concepts: acknowledge feature, appreciation of features, feature appreciation
- A user acknowledges a feature positively.
- A participant expresses appreciation for specific features of the software.
- Users express appreciation for the application's features and progress.

10.
Concepts: user satisfaction, user satisfaction with software features, express satisfaction
- Expressing satisfaction with the software.
- A user expresses satisfaction with the software's features and usability.
- Users express satisfaction with the software or its features.

11.
Concepts: compliment, provide positive feedback, compliment software
- Users complimenting the software or the efforts of the designers.
- Users provide positive feedback or compliments about the software or ideas.
- Users provide positive feedback about the software in general.

12.
Concepts: praise software, compliments the software
- A user praises the software for its practicality and usability.
- Complimenting the software's features or performance.

13.
Concepts: security concern, highlight security concerns
- Users express concerns about security issues related to the software or its use.
- Users highlight concerns about security issues.

14.
Concepts: internet availability inquiry, inquire about classroom internet
- A designer inquires about the availability of internet in a classroom setting.
- A designer inquires about the availability of internet in the classroom.

15.
Concepts: teaching experience, share teaching experience
- Sharing personal teaching experience.
- Sharing teaching experience.

16.
Concepts: classroom experience sharing, share positive classroom experience
- A user shares their experience of using the software in a classroom setting.
- A user shares a positive classroom experience using the software.

17.
Concepts: resources sharing
- Instances where designers or users share resources, such as download links, development plans, or announcements.
- Information about where and how to access resources, files, or downloads related to Physics Lab.
- Instances where users or designers share files, images, or other resources with the community.

18.
Concepts: informal communication
- Instances where the tone of the conversation is casual or informal, indicating the nature of the community's communication style.
- Casual and non-technical interactions among community members, including humor and personal remarks.

19.
Concepts: gratitude and acknowledgment
- Instances where users or designers express gratitude or acknowledge contributions.
- Users expressing gratitude or acknowledgment for the designers' work.
- Expressions of gratitude and recognition of user contributions.

20.
Concepts: feature update
- Instances where designers announce new features, updates, or bug fixes based on user input.
- Information about new features and updates being added to the product.

21.
Concepts: technical constraints
- Instances where technical limitations or requirements are discussed.
- Instances where limitations or constraints of the software are mentioned.

22.
Concepts: feature suggestion
- A user suggests categorizing and refining features rather than aiming for completeness.
- Users suggesting new features or functionalities to be added to the platform.

23.
Concepts: user feedback integration
- Instances where user feedback is acknowledged and incorporated into the design process.
- Instances where user feedback is actively sought and incorporated into the design process.

24.
Concepts: accepting suggestion
- Designers accept and agree to implement suggestions made by users.
- Accepting a suggestion made by someone else.

25.
Concepts: engage with community
- Instances where members of the community actively participate in discussions, ask questions, or provide feedback.
- Instances where users or designers engage in discussions that foster community interaction and participation.
- Active participation and interaction among community members, including both users and designers.
- Efforts made by designers to actively involve and communicate with the user community.

26.
Concepts: touch screen consideration
- A user recommends adding features to accommodate touch screen devices.
- Designers considering the implications of touch screen use.

27.
Concepts: user response
- Input and suggestions provided by users regarding the design and functionality of the product.
- Instances where users provide feedback or ask questions that influence the design process.
- Instances where users provide feedback or suggestions to improve the software.
- Instances where users provide suggestions or feedback on features and functionalities.
- Instances where users provide feedback or ask questions about the app's development and updates.

28.
Concepts: promote participatory design
- Instances where the community contributes to the design and development of the Physics Lab by providing suggestions or feedback that influence the development process.
- Instances where designers seek or consider user input in the design and development process.
- Instances where users are invited to participate in the design process or provide input.
- Instances where users and designers collaboratively discuss features and usability, reflecting a user-centered design approach.
- The involvement of users in the design and development process, contributing their insights and needs.
- Encouragement by designers for users to contribute ideas, feedback, and suggestions for the development of Physics Lab.
- Active involvement of users in the design process to ensure the product meets their needs and preferences.
- The involvement of users in the design process to ensure the product meets their needs and preferences.
- Instances where users and designers collaboratively discuss or work on design improvements.

29.
Concepts: role identification
- Instances where users or designers identify their roles, which can help understand the community structure and the roles within it.
- Instances where participants identify their roles or expertise, contributing to the problem-solving process.
- Identifying roles within the community, such as designers, teachers, or other users.

30.
Concepts: designer responsiveness
- Instances where designers respond to user queries or engage with user comments, indicating active communication between designers and users.
- Instances where designers respond to user inquiries, suggestions, or feedback.
- Instances where designers respond to user feedback or suggestions.
- Instances where designers acknowledge user feedback and discuss potential solutions or updates.
- Designers responding to user feedback and addressing their concerns or suggestions.
- Instances where designers respond to user queries or feedback, showing attentiveness to user needs.

31.
Concepts: user engagement
- Instances where users actively participate in the conversation, showing interest or involvement in the community.
- Instances where users engage with designers through questions, feedback, or expressions of anticipation.
- Instances where users actively participate in the conversation, showing interest and involvement.

32.
Concepts: collaborative problem solving
- Moments where designers and users work together to address issues.
- Collaborative efforts between users and designers to solve issues and improve the product.
- Instances where users and designers work together to address issues or improve the software.

33.
Concepts: positive feedback
- Users provide positive feedback about the software's simulation effects and overall quality.
- Users express positive feedback about the software's practicality and features.
===
---
Definitions for each code (33 in total):
1.
Concepts: user guidance, usage instruction
Relationship: Both concepts involve providing directions on how to use the software.
Criteria: A designer provides guidance or instructions for using features.
Phrase: Providing usage instructions

2.
Concepts: design rationale, rationale explanation, give rationale to development decision
Relationship: All concepts involve explaining the reasons behind design choices.
Criteria: Designers explain the rationale behind their development decisions.
Phrase: Explaining design rationale

3.
Concepts: explanation, explain bidirectional conversion feature
Relationship: Both concepts involve explaining a specific feature of the software.
Criteria: Designers explain features related to bidirectional conversion in the software.
Phrase: Explaining bidirectional conversion feature

4.
Concepts: share knowledge, provide information
Relationship: Both concepts involve disseminating information about the software.
Criteria: Designers share knowledge or information about the software.
Phrase: Sharing software knowledge

5.
Concepts: software usability, usability and practicality
Relationship: Both concepts involve evaluating the ease of use and practicality of the software.
Criteria: Users comment on the software's usability and practicality.
Phrase: Evaluating software usability

6.
Concepts: context of use, usability and context of use
Relationship: Both concepts involve discussing how the software is used in different contexts.
Criteria: Users describe the specific contexts in which they use the software and its usability.
Phrase: Discussing context of use

7.
Concepts: user reviews, user experience
Relationship: Both concepts involve users sharing their opinions about the software.
Criteria: Users provide reviews or share their experiences with the software.
Phrase: Sharing user experience

8.
Concepts: comparative feedback, comparison with other applications, comparison to similar apps, compare with other software
Relationship: All concepts involve comparing the software to other similar applications.
Criteria: Users provide comparative feedback, highlighting the software's practicality.
Phrase: Providing comparative feedback

9.
Concepts: acknowledge feature, appreciation of features, feature appreciation
Relationship: All concepts involve users expressing positive recognition of the software's features.
Criteria: Users express appreciation for specific features of the software.
Phrase: Acknowledging features

10.
Concepts: user satisfaction, user satisfaction with software features, express satisfaction
Relationship: All concepts involve users expressing their satisfaction with the software.
Criteria: Users express satisfaction with the software or its features.
Phrase: Expressing user satisfaction

11.
Concepts: compliment, provide positive feedback, compliment software
Relationship: All concepts involve users giving positive feedback about the software.
Criteria: Users provide positive feedback or compliments about the software.
Phrase: Complimenting the software

12.
Concepts: praise software, compliments the software
Relationship: Both concepts involve users praising the software.
Criteria: Users praise the software for its practicality and usability.
Phrase: Praising the software

13.
Concepts: security concern, highlight security concerns
Relationship: Both concepts involve users expressing concerns about security issues.
Criteria: Users highlight concerns about security issues related to the software.
Phrase: Highlighting security concerns

14.
Concepts: internet availability inquiry, inquire about classroom internet
Relationship: Both concepts involve inquiring about internet availability in a classroom setting.
Criteria: Designers inquire about the availability of internet in the classroom.
Phrase: Inquiring about internet availability

15.
Concepts: teaching experience, share teaching experience
Relationship: Both concepts involve sharing personal teaching experiences.
Criteria: Users share their personal teaching experiences.
Phrase: Sharing teaching experience

16.
Concepts: classroom experience sharing, share positive classroom experience
Relationship: Both concepts involve sharing positive experiences of using the software in a classroom setting.
Criteria: Users share positive classroom experiences using the software.
Phrase: Sharing classroom experience

17.
Concepts: resources sharing
Relationship: N/A
Criteria: Users or designers share resources, such as files, links, or announcements.
Phrase: Sharing resources

18.
Concepts: informal communication
Relationship: N/A
Criteria: Community members engage in casual and non-technical interactions.
Phrase: Engaging in informal communication

19.
Concepts: gratitude and acknowledgment
Relationship: Both concepts involve expressing thanks or recognition.
Criteria: Users or designers express gratitude or acknowledge contributions.
Phrase: Expressing gratitude

20.
Concepts: feature update
Relationship: N/A
Criteria: Designers announce new features, updates, or bug fixes.
Phrase: Announcing feature updates

21.
Concepts: technical constraints
Relationship: N/A
Criteria: Users or designers discuss technical limitations or requirements.
Phrase: Discussing technical constraints

22.
Concepts: feature suggestion
Relationship: N/A
Criteria: Users suggest new features or functionalities to be added to the software.
Phrase: Suggesting features

23.
Concepts: user feedback integration
Relationship: Both concepts involve incorporating user feedback into the design process.
Criteria: Designers acknowledge and incorporate user feedback into the design process.
Phrase: Integrating user feedback

24.
Concepts: accepting suggestion
Relationship: N/A
Criteria: Designers accept and agree to implement user suggestions.
Phrase: Accepting suggestions

25.
Concepts: engage with community
Relationship: N/A
Criteria: Community members actively participate in discussions and provide feedback.
Phrase: Engaging with the community

26.
Concepts: touch screen consideration
Relationship: N/A
Criteria: Users recommend or designers consider features for touch screen devices.
Phrase: Considering touch screen features

27.
Concepts: user response
Relationship: N/A
Criteria: Users provide feedback or suggestions regarding the software's design and functionality.
Phrase: Providing user feedback

28.
Concepts: promote participatory design
Relationship: N/A
Criteria: Users and designers collaboratively discuss and contribute to the design process.
Phrase: Promoting participatory design

29.
Concepts: role identification
Relationship: N/A
Criteria: Users or designers identify their roles within the community.
Phrase: Identifying roles

30.
Concepts: designer responsiveness
Relationship: N/A
Criteria: Designers respond to user queries, feedback, or suggestions.
Phrase: Responding to user feedback

31.
Concepts: user engagement
Relationship: N/A
Criteria: Users actively participate in conversations and show interest in the community.
Phrase: Engaging users

32.
Concepts: collaborative problem solving
Relationship: N/A
Criteria: Users and designers work together to address issues and improve the software.
Phrase: Collaborating on problem solving

33.
Concepts: positive feedback
Relationship: N/A
Criteria: Users provide positive feedback about the software's features and quality.
Phrase: Providing positive feedback
---