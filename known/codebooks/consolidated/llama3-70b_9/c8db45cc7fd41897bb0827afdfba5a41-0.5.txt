You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (17 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
17. 
Concepts: {Repeat the input 17}
Relationship: {What is logical relationship between concepts in code 17, or N/A if not applicable}
Criteria: {Who did what, and how for code 17}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: considering limitations, acknowledging limitations
- Considering or acknowledging limitations or potential issues.
- The designer acknowledges a limitation or issue with the platform.

2.
Concepts: inquiring about usage, inquiring about app capabilities
- Asking about how someone uses a product or feature.
- Users ask about the app's features, functionality, and accessibility options.

3.
Concepts: requesting help, seek technical support
- Users request help and resources, seeking guidance and support.
- Users seek technical support or guidance from the community or designer.

4.
Concepts: establishing credibility, establishing teaching credentials
- Establishing credibility or expertise through personal experience, establishing authority.
- Users share their background and teaching experience to establish credibility.

5.
Concepts: promoting educational value, highlighting problem-solving capabilities
- Designers promote problem-solving and mention educational potential to inspire users.
- Designers highlight the problem-solving capabilities of an application or feature, demonstrating capabilities to facilitate learning.

6.
Concepts: feeling a sense of belonging, building a sense of community
- A user expresses gratitude or appreciation for the community or designer.
- Users express gratitude and appreciation, creating a welcoming atmosphere in the community.

7.
Concepts: praising design, appreciating aesthetics
- Users praise or appreciate software features or functionality, highlighting their usability or practicality.
- A user appreciates the aesthetic design or user experience of an application.

8.
Concepts: express anticipation, building excitement and anticipation
- Expressing eagerness or expectation for a future event or update.
- Excitement and anticipation are built for new features.

9.
Concepts: preview upcoming updates, outline and promise future features
- Designers provide details about upcoming features and updates.
- Designers outline and promise future features to inform users of upcoming changes.

10.
Concepts: visual update sharing, share visual progress updates
- Sharing visual updates, progress, or changes to a system or software.
- Designers share visual updates and progress to keep users informed.

11.
Concepts: share and describe timelines, providing timelines and release dates
- Designers share and describe timelines to inform users of the development schedule.
- Designers provide timelines and release dates, estimating completion dates.

12.
Concepts: soliciting input, eliciting feedback
- Designers seek or solicit input, feedback, or suggestions from users.
- Designers solicit feedback, opinions, or suggestions, fostering collaboration and discussion.

13.
Concepts: requesting attention, clarifying design and user requests
- A user requests attention or clarification from a designer.
- The designer clarifies design elements, clarifying user requests and asking follow-up questions.

14.
Concepts: weigh design options, explore options and implications
- Designers weigh different design options and consider multiple perspectives.
- Designers explore options and design implications to consider compatibility and future possibilities.

15.
Concepts: showing resourcefulness, exploring workarounds
- A designer shows resourcefulness or finds creative solutions to problems.
- Designers explore alternative solutions or workarounds, addressing technical constraints and offering workarounds.

16.
Concepts: propose design ideas and features, exploring new features and technical possibilities
- Designers propose design ideas and simulation features to innovate the software.
- The designer explores possibilities or ideas for the software, theorizing technical possibilities.

17.
Concepts: empowering users, allow and acknowledge manual editing
- Designers empower users by providing them with control or flexibility in the software.
- Designers allow and acknowledge manual editing capabilities to empower users.
===
Here are the definitions for each code:

---
1.
Concepts: considering limitations, acknowledging limitations
Relationship: The concepts are related as they both involve recognizing and accepting the boundaries or flaws of the platform.
Criteria: Designers acknowledge and consider limitations of the platform.
Phrase: Acknowledge limitations.

2.
Concepts: inquiring about usage, inquiring about app capabilities
Relationship: The concepts are related as they both involve seeking information about how to use the app or its features.
Criteria: Users inquire about app usage and capabilities.
Phrase: Inquire about usage.

3.
Concepts: requesting help, seek technical support
Relationship: The concepts are related as they both involve seeking assistance or guidance from the community or designer.
Criteria: Users request help and technical support.
Phrase: Request help.

4.
Concepts: establishing credibility, establishing teaching credentials
Relationship: The concepts are related as they both involve demonstrating expertise or authority in a particular area.
Criteria: Users establish credibility through teaching credentials.
Phrase: Establish credibility.

5.
Concepts: promoting educational value, highlighting problem-solving capabilities
Relationship: The concepts are related as they both involve showcasing the educational potential of the app or feature.
Criteria: Designers promote educational value by highlighting problem-solving capabilities.
Phrase: Promote educational value.

6.
Concepts: feeling a sense of belonging, building a sense of community
Relationship: The concepts are related as they both involve creating a welcoming atmosphere in the community.
Criteria: Users express gratitude, building a sense of community.
Phrase: Build community.

7.
Concepts: praising design, appreciating aesthetics
Relationship: The concepts are related as they both involve expressing admiration for the design or user experience.
Criteria: Users praise and appreciate design aesthetics.
Phrase: Praise design.

8.
Concepts: express anticipation, building excitement and anticipation
Relationship: The concepts are related as they both involve looking forward to future events or updates.
Criteria: Users express anticipation for upcoming updates.
Phrase: Express anticipation.

9.
Concepts: preview upcoming updates, outline and promise future features
Relationship: The concepts are related as they both involve providing information about upcoming changes or features.
Criteria: Designers preview and promise future updates.
Phrase: Preview updates.

10.
Concepts: visual update sharing, share visual progress updates
Relationship: The concepts are related as they both involve sharing visual information about changes or updates.
Criteria: Designers share visual progress updates.
Phrase: Share updates.

11.
Concepts: share and describe timelines, providing timelines and release dates
Relationship: The concepts are related as they both involve providing information about the development schedule.
Criteria: Designers share and describe timelines.
Phrase: Share timelines.

12.
Concepts: soliciting input, eliciting feedback
Relationship: The concepts are related as they both involve seeking opinions or suggestions from users.
Criteria: Designers solicit input and feedback.
Phrase: Solicit input.

13.
Concepts: requesting attention, clarifying design and user requests
Relationship: The concepts are related as they both involve seeking clarification or attention from the designer.
Criteria: Users request attention and clarification.
Phrase: Request attention.

14.
Concepts: weigh design options, explore options and implications
Relationship: The concepts are related as they both involve considering different design possibilities.
Criteria: Designers weigh and explore design options.
Phrase: Weigh design options.

15.
Concepts: showing resourcefulness, exploring workarounds
Relationship: The concepts are related as they both involve finding creative solutions to problems.
Criteria: Designers show resourcefulness and explore workarounds.
Phrase: Show resourcefulness.

16.
Concepts: propose design ideas and features, exploring new features and technical possibilities
Relationship: The concepts are related as they both involve generating new ideas or possibilities for the software.
Criteria: Designers propose and explore new design ideas.
Phrase: Propose design ideas.

17.
Concepts: empowering users, allow and acknowledge manual editing
Relationship: The concepts are related as they both involve giving users control or flexibility in the software.
Criteria: Designers empower users by allowing manual editing.
Phrase: Empower users.