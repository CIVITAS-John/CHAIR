You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (31 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
31. 
Concepts: {Repeat the input 31}
Relationship: {What is logical relationship between concepts in code 31, or N/A if not applicable}
Criteria: {Who did what, and how for code 31}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: directing to resources, directing to group files
- Directing users to resources or files, such as group files, and facilitating access to resources, such as downloads or group files.
- Designer directs users to a specific location for downloads or resources, and designer directs users to group files for resources or information.
- A designer directs users to a resource or material, or a user requests a resource.

2.
Concepts: update confirmation, making official announcements
- Confirming or announcing updates, releases, or timelines
- Official announcements or notifications about the software or its development, and announcements or updates about technical changes or updates from designers or developers.

3.
Concepts: confirming updates, providing update assurance
- Designers and users confirm updates, and designers confirm update schedules and communicate release plans.
- Designer assures users that an update is in progress, and the designer provides information about when an update is expected to be available.

4.
Concepts: planning and optimizing improvements, explaining review and optimization processes
- Designers plan or discuss improvements to the software, communicating ongoing optimization or improvement efforts.
- Designers explain the review process for an update, explaining the process of optimizing a feature or component.

5.
Concepts: listing bug fixes and addressing issues, noting potential bugs and providing fix information
- Designers list bug fixes or resolved issues, addressing previous issues or bugs in the software.
- Designers note or mention a potential bug or issue, providing information about bug fixes and updates.

6.
Concepts: agreeing to proceed, confirming feature development
- A designer agrees to move forward with a design, and expressing agreement or support for a design idea.
- Designer confirms the addition of a feature or component, and designers commit to feature development.

7.
Concepts: promising future development, answer and express hope for progress
- Designers promise future development, and designers hint at or suggest future possibilities.
- Designers answer questions about progress and express hope for future development.

8.
Concepts: schedule communication, communicating next steps
- Communicating schedules, timelines, or deadlines
- Communicating next steps or actions, and communicating future plans or priorities.

9.
Concepts: development scope, setting scope
- The designer sets or defines the scope of the online community's development.
- The designer sets scope or boundaries for the project, and designer sets the scope or boundaries for experiments or features.

10.
Concepts: prioritizing development, prioritizing release
- Deferring or prioritizing development of specific features, such as mechanics, and designer prioritizes one area of development over another.
- Designer prioritizes the release of a specific version or feature, and a designer makes a decision or prioritizes tasks related to the development of the application.

11.
Concepts: outline development priorities, explaining priorities and focus areas
- Outlining development priorities or plans for the software.
- Designers explain the prioritization of features or updates, explaining their focus areas or priorities, and the current focus or priority of the app's development.

12.
Concepts: inferring user needs, recognizing user needs
- The designer infers or understands a user's need or requirement.
- Designer recognizes a need or requirement for the software.

13.
Concepts: supporting user ideas, encouraging feedback.
note: the relationships between concepts are based on the logical connections between the ideas, and the criteria and phrases are designed to be clear and generalizable
- A designer supports or acknowledges a user's solution or idea to align with their feedback.
- A designer encourages users to provide feedback or suggestions.

14.
Concepts: gathering context, exploring user needs
- Designers gather context and explore user contexts.
- Designers seeking to understand users' needs, problems, or experiences.

15.
Concepts: explain limitations and compatibility, clarify compatibility requirements
- Designers explain limitations and inform about system compatibility.
- Designers confirm and specify hardware requirements and clarify platform requirements.

16.
Concepts: discuss compatibility, theorize about compatibility
- Designers answer questions about compatibility and users inquire about platform compatibility.
- Designers theorize or speculate about compatibility or technical issues, speculating about software compatibility with different systems or devices.

17.
Concepts: raise concerns and issues, address and express concerns
- Users and designers raise concerns and related issues.
- Designers address concerns and users express concerns.

18.
Concepts: identify product gaps, identify usability issues
- Users identify gaps in the current software.
- Users identify usability issues and highlight usability needs.

19.
Concepts: anticipating user issues, considering usability
- Designer anticipates potential user experience issues.
- Designer addresses usability concerns or provides design explanations.

20.
Concepts: sharing potential solutions, explore and share future plans, discussing further interests
- Designers share potential future directions.
- Designers explore future possibilities and share information about the development plan.
- Designer discusses or explores further interests or possibilities.

21.
Concepts: acknowledging future plans, planning future engagement
- Designer acknowledges or confirms future plans or developments, and designers plan for future consultation or mention future consultation.
- The designer expresses intention to engage users in the future, and the designer or user expresses plans or intentions for future actions or developments.

22.
Concepts: shared development plan, explaining plans
- Designer shares development plans or roadmaps with users.
- A designer explains their plans or vision for the software, and the designer opens up about plans or future developments.

23.
Concepts: sharing design thoughts and processes, transparently discussing design decisions
- Designers share their thoughts or ideas about the design or development process, discussing their development process or approach.
- Designers transparently discuss design or development decisions and challenges, providing insight into their thought processes or decision-making.

24.
Concepts: feature discussion, questioning feasibility
- A designer discusses or debates the implementation of a specific feature or functionality.
- A designer questions or discusses the necessity or feasibility of a feature or functionality.

25.
Concepts: explaining feature specifics, describing features and components
- A designer explains specific features or functionalities of the Physics Lab software to clarify their functionality.
- Designers describe a feature or component of the software, explaining the features or characteristics of a power supply component.

26.
Concepts: providing feature details and explanations, providing technical insight and information
- Designers provide details about a specific feature or assessment, explaining the importance or significance of a feature or component.
- Designers provide technical information or insight, providing specific technical details about a component or feature, and providing technical information about the software or its development.

27.
Concepts: highlighting ideal use and components, providing examples and highlighting capabilities
- Designers highlight the ideal use of a component or feature, informing users about ideal components or their characteristics.
- Designers provide an example of a feature or functionality, highlighting a feature or component's capabilities.

28.
Concepts: understanding designers' situation, providing guidance and explanations
- The designer provides guidance on how to approach a task or situation.
- Designers provide instructional guidance or explanations to users, providing guidance on using a feature or tool.

29.
Concepts: proposing compromises and alternative solutions, offering alternative solutions and options
- Designers propose compromises or alternative solutions, proposing a dual solution or alternative approach.
- Users or designers offer or seek alternative solutions or options, providing an alternative suggestion or solution, or suggesting an alternative system or solution.

30.
Concepts: consider multiple options, being open to alternatives
- A designer considers multiple options or possibilities.
- Designer is open to alternative design approaches.

31.
Concepts: acknowledge issues, acknowledged complexity
- Designers acknowledge issues and limitations.
- Designer acknowledges the complexity of a task or issue.
===
Here are the definitions for each code:

---
1.
Concepts: directing to resources, directing to group files
Relationship: The concepts are related as both involve directing users to specific locations for resources or information.
Criteria: Designers direct users to resources or files, facilitating access to necessary information.
Phrase: Directing users to resources.

2.
Concepts: update confirmation, making official announcements
Relationship: The concepts are related as both involve communicating updates or changes to users.
Criteria: Designers confirm or announce updates, releases, or timelines to users.
Phrase: Announcing updates.

3.
Concepts: confirming updates, providing update assurance
Relationship: The concepts are related as both involve providing assurance or confirmation about updates.
Criteria: Designers confirm updates and provide information about release plans or schedules.
Phrase: Confirming updates.

4.
Concepts: planning and optimizing improvements, explaining review and optimization processes
Relationship: The concepts are related as both involve explaining or discussing improvements to the software.
Criteria: Designers plan or discuss improvements, explaining the review process for updates.
Phrase: Planning improvements.

5.
Concepts: listing bug fixes and addressing issues, noting potential bugs and providing fix information
Relationship: The concepts are related as both involve addressing or fixing issues in the software.
Criteria: Designers list bug fixes or resolved issues, providing information about bug fixes and updates.
Phrase: Addressing issues.

6.
Concepts: agreeing to proceed, confirming feature development
Relationship: The concepts are related as both involve confirming or agreeing to move forward with a design or feature.
Criteria: Designers agree to move forward with a design, confirming the addition of a feature or component.
Phrase: Confirming feature development.

7.
Concepts: promising future development, answer and express hope for progress
Relationship: The concepts are related as both involve expressing hope or promise for future development.
Criteria: Designers promise future development, answering questions about progress and expressing hope.
Phrase: Promising future development.

8.
Concepts: schedule communication, communicating next steps
Relationship: The concepts are related as both involve communicating plans or schedules to users.
Criteria: Designers communicate schedules, timelines, or deadlines, and next steps or actions.
Phrase: Communicating schedules.

9.
Concepts: development scope, setting scope
Relationship: The concepts are related as both involve setting or defining the scope of the project.
Criteria: Designers set or define the scope of the online community's development, setting scope or boundaries for the project.
Phrase: Setting scope.

10.
Concepts: prioritizing development, prioritizing release
Relationship: The concepts are related as both involve prioritizing specific features or releases.
Criteria: Designers prioritize development of specific features, prioritizing the release of a specific version or feature.
Phrase: Prioritizing development.

11.
Concepts: outline development priorities, explaining priorities and focus areas
Relationship: The concepts are related as both involve explaining or outlining development priorities.
Criteria: Designers outline development priorities, explaining their focus areas or priorities.
Phrase: Outlining priorities.

12.
Concepts: inferring user needs, recognizing user needs
Relationship: The concepts are related as both involve understanding or recognizing user needs.
Criteria: Designers infer or understand user needs, recognizing requirements for the software.
Phrase: Recognizing user needs.

13.
Concepts: supporting user ideas, encouraging feedback
Relationship: The concepts are related as both involve supporting or encouraging user input.
Criteria: Designers support user ideas, encouraging feedback or suggestions.
Phrase: Supporting user ideas.

14.
Concepts: gathering context, exploring user needs
Relationship: The concepts are related as both involve understanding or gathering information about user needs.
Criteria: Designers gather context, exploring user needs and problems.
Phrase: Gathering context.

15.
Concepts: explain limitations and compatibility, clarify compatibility requirements
Relationship: The concepts are related as both involve explaining or clarifying technical information.
Criteria: Designers explain limitations, informing about system compatibility and clarifying platform requirements.
Phrase: Explaining limitations.

16.
Concepts: discuss compatibility, theorize about compatibility
Relationship: The concepts are related as both involve discussing or exploring technical possibilities.
Criteria: Designers discuss compatibility, theorizing about technical issues or speculating about software compatibility.
Phrase: Discussing compatibility.

17.
Concepts: raise concerns and issues, address and express concerns
Relationship: The concepts are related as both involve expressing or addressing concerns.
Criteria: Users and designers raise concerns, addressing and expressing concerns.
Phrase: Raising concerns.

18.
Concepts: identify product gaps, identify usability issues
Relationship: The concepts are related as both involve identifying areas for improvement.
Criteria: Users identify gaps in the current software, highlighting usability issues and needs.
Phrase: Identifying gaps.

19.
Concepts: anticipating user issues, considering usability
Relationship: The concepts are related as both involve considering or anticipating user experience issues.
Criteria: Designers anticipate potential user experience issues, addressing usability concerns or providing design explanations.
Phrase: Anticipating issues.

20.
Concepts: sharing potential solutions, explore and share future plans, discussing further interests
Relationship: The concepts are related as both involve exploring or discussing future possibilities.
Criteria: Designers share potential future directions, exploring future possibilities and sharing development plans.
Phrase: Sharing potential solutions.

21.
Concepts: acknowledging future plans, planning future engagement
Relationship: The concepts are related as both involve planning or acknowledging future actions.
Criteria: Designers acknowledge future plans, planning for future consultation or expressing intentions for future actions.
Phrase: Acknowledging future plans.

22.
Concepts: shared development plan, explaining plans
Relationship: The concepts are related as both involve sharing or explaining development plans.
Criteria: Designers share development plans, explaining their plans or vision for the software.
Phrase: Sharing development plans.

23.
Concepts: sharing design thoughts and processes, transparently discussing design decisions
Relationship: The concepts are related as both involve sharing or discussing design-related information.
Criteria: Designers share design thoughts, transparently discussing design decisions and challenges.
Phrase: Sharing design thoughts.

24.
Concepts: feature discussion, questioning feasibility
Relationship: The concepts are related as both involve discussing or debating feature implementation.
Criteria: Designers discuss or debate feature implementation, questioning necessity or feasibility.
Phrase: Discussing features.

25.
Concepts: explaining feature specifics, describing features and components
Relationship: The concepts are related as both involve explaining or describing feature-related information.
Criteria: Designers explain feature specifics, describing features and components.
Phrase: Explaining features.

26.
Concepts: providing feature details and explanations, providing technical insight and information
Relationship: The concepts are related as both involve providing detailed information about features.
Criteria: Designers provide feature details, explaining technical information and providing insight into features.
Phrase: Providing feature details.

27.
Concepts: highlighting ideal use and components, providing examples and highlighting capabilities
Relationship: The concepts are related as both involve highlighting or explaining ideal use cases.
Criteria: Designers highlight ideal use, providing examples and highlighting feature capabilities.
Phrase: Highlighting ideal use.

28.
Concepts: understanding designers' situation, providing guidance and explanations
Relationship: The concepts are related as both involve providing guidance or explanations.
Criteria: Designers provide guidance, explaining how to approach a task or situation.
Phrase: Providing guidance.

29.
Concepts: proposing compromises and alternative solutions, offering alternative solutions and options
Relationship: The concepts are related as both involve proposing or offering alternative solutions.
Criteria: Designers propose compromises, offering alternative solutions or options.
Phrase: Proposing compromises.

30.
Concepts: consider multiple options, being open to alternatives
Relationship: The concepts are related as both involve considering or being open to alternative approaches.
Criteria: Designers consider multiple options, being open to alternative design approaches.
Phrase: Considering options.

31.
Concepts: acknowledge issues, acknowledged complexity
Relationship: The concepts are related as both involve acknowledging or recognizing challenges.
Criteria: Designers acknowledge issues, recognizing the complexity of a task or issue.
Phrase: Acknowledging issues.