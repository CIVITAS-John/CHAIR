You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (6 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
6. {Repeat the input 6}
Relationship: {The logical relationship between concepts in input 6}
Criteria: {A sentence of consolidated criteria for code 6}
Label: {A consolidated label of code 6}
Category: {2-4 words for code 6}
---
~~~
1. community engagement, community involvement.
- The designer's efforts to understand and respond to the needs of the community members.
- The level of engagement and participation from the community members.
- Evidence of the software designer actively involving the user community in the development process.
- The level of involvement and interaction within the online community around the Physics Lab software.
- Mechanisms within the software that enable community members to provide feedback to the designers, as well as the designers actively seeking input from the community to inform the design process.
- The designers actively involve the community members in the design process, seeking their input and feedback.
- The community's involvement in the software's design and the designer's responsiveness to their needs.

2. community-driven experiment development, community involvement in design and development.
- The community's active involvement in shaping the development of physics experiments and demonstrations within the Physics Lab software.
- The extent to which the Physics Lab community is involved in the design and development of the software.

3. co-creation.
- The collaborative efforts between users and the designer to shape the software's features and functionality.
- The level of collaboration and co-creation between the designer and the community.

4. iterative design.
- The designer's approach to improving the community experience through iterative updates and feedback.
- The process of continuously refining the software based on user feedback and testing.
- The designers engage in an iterative design process, incorporating feedback and making adjustments to the feature.
- The designer's efforts to incorporate the community's input and ideas into the software's development.

5. scaffolding.
- Supports and guidance provided by the software to help students navigate and understand the physics concepts.
- The support and guidance provided by the designer to help users understand and use the software effectively.

6. usability.
- Aspects of the software's design that contribute to its ease of use and efficiency.
- Factors that affect the usability and user experience of the Physics Lab software.
- The ease of use and effectiveness of the software in supporting users' tasks and goals.
===
---
Categories: 
* Community Engagement and Participation
* Community-Driven Design
* Collaborative Design
* Iterative Design
* Instructional Support
* Usability

Definitions for each code (6 in total):

1. Community Engagement and Participation
Relationship: This code encompasses both the designer's efforts to engage the community and the community's level of involvement in the software's development.
Criteria: The extent to which the software designer actively involves the user community in the development process, seeks their input and feedback, and responds to their needs. This includes mechanisms within the software that enable community members to provide feedback, as well as the community's level of engagement and participation.
Label: Community Engagement and Participation
Category: Community Involvement

2. Community-Driven Design
Relationship: This code focuses on the community's active involvement in shaping the development of the software's features and functionality.
Criteria: The degree to which the Physics Lab community is involved in the design and development of the software, including their role in shaping the development of physics experiments and demonstrations within the software.
Label: Community-Driven Design
Category: Community-Driven Development

3. Collaborative Design
Relationship: This code represents the collaborative efforts between users and the designer to shape the software's features and functionality.
Criteria: The level of collaboration and co-creation between the designer and the community in the development of the software.
Label: Collaborative Design
Category: Co-creation

4. Iterative Design
Relationship: This code encompasses the designer's approach to improving the community experience through iterative updates and feedback.
Criteria: The process of continuously refining the software based on user feedback and testing, and the designer's efforts to incorporate the community's input and ideas into the software's development.
Label: Iterative Design
Category: Iterative Development

5. Instructional Support
Relationship: This code focuses on the supports and guidance provided by the software to help students navigate and understand the physics concepts.
Criteria: The support and guidance provided by the designer to help users understand and use the software effectively, including scaffolding and other instructional features.
Label: Instructional Support
Category: Scaffolding

6. Usability
Relationship: This code addresses the aspects of the software's design that contribute to its ease of use and efficiency.
Criteria: Factors that affect the usability and user experience of the Physics Lab software, including the ease of use and effectiveness of the software in supporting users' tasks and goals.
Label: Usability
Category: Usability