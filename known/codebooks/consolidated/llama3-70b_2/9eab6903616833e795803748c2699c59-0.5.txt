You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: development priority explanation, justifying development decisions, justifying development priorities
- Explaining development priorities or decisions.
- The speaker justifies or explains development decisions or priorities.
- The priorities or justification for development are explained.

2.
Concepts: advising on categorization, suggesting categorization
- A user advises on categorization or organization.
- User suggests categorization or organization of content.

3.
Concepts: development advice, advising on development strategy
- A user advises on development or provides guidance.
- A user advises on a development strategy or approach.

4.
Concepts: suggesting incremental development, advocating incremental development
- A user suggests taking a slow and incremental approach to development.
- User advises breaking down development into smaller, manageable tasks.

5.
Concepts: providing rationales, providing rationale
- Providing a reason or explanation for a suggestion or idea
- Explaining a reason or justification for a particular action or decision.
- User or designer provides a rationale or explanation for a decision.

6.
Concepts: explaining reasons, gives reason for it
- User explains reasons behind a request or suggestion.
- User expresses a reason or justification for a feature or improvement.

7.
Concepts: explains intention, intention explanation
- Designer explains the intention behind a follow-up question.
- User or designer explains the intention or purpose behind a question.

8.
Concepts: purpose explanation, explaining design intention
- Designer explains the purpose or intent behind a particular feature or version.
- A designer explains the intention or goal behind the design of the app or software.

9.
Concepts: design rationale, rationale for development decisions, design decision explanation
- Providing design rationale or explanations.
- Designer explains the reasoning behind a development decision, providing justification for the approach taken.
- Designer provides explanations or justifications for design decisions.

10.
Concepts: striving for quality, striving for design perfection
- Designer strives for quality or perfection.
- Designer strives for perfection or improvement in design.

11.
Concepts: emphasizing quality, emphasizing optimization
- A designer emphasizes the importance of quality in the development process.
- The designer emphasizes the importance of quality or optimization.
- Designer emphasizes the importance of optimization in the development process.

12.
Concepts: labeling component as ideal, ideal component identification
- The designer labels or categorizes a component as ideal.
- A designer highlights ideal components or features of a product.

13.
Concepts: emphasizing impact, highlighting update significance
- A designer emphasizes the impact or significance of an update or feature.
- The designer highlights the significance or importance of an update or new feature.

14.
Concepts: explaining feature importance, designer explains feature importance, explains feature importance
- A designer explains the importance or significance of a particular feature.
- Designer explains the importance or significance of a feature or functionality.
- A designer explains the importance or value of a feature or functionality in the Physics Lab application.

15.
Concepts: feature significance explanation, highlighting feature importance
- The designer explains the significance of a feature for long-term stability.
- Designer highlights the importance of a feature for long-term stability and ease of use.

16.
Concepts: emphasizing long-term benefits, highlighting long-term benefits
- Emphasis on the long-term benefits or consequences of a feature or decision
- Designer highlights the long-term benefits of a feature or development.

17.
Concepts: input methods, discussing input methods
- The designer addresses input methods for different devices.
- Designer discusses input methods or options.

18.
Concepts: comparing to other applications, contrasts with other software
- A user compares the Physics Lab to other similar applications or software.
- Comparing the Physics Lab online community favorably or unfavorably to other similar software or tools.

19.
Concepts: comparing to others, comparison to similar apps
- User compares the software to other similar products.
- Comparison of the software or feature to other similar ones

20.
Concepts: explaining software concepts, bidirectional conversion explanation
- The designer explains a concept or feature of the software, such as bidirectional conversion.
- Designer explains the concept of bidirectional conversion.

21.
Concepts: promoting bidirectional conversion, exploring bidirectional conversion
- Designer promotes bidirectional conversion between physical and circuit diagrams.
- Exploring or discussing the possibility of bidirectional conversion between physical diagrams and circuit diagrams.

22.
Concepts: technical explanations, explaining technical artifacts
- Explaining technical requirements or specifications for the software.
- Explaining technical aspects of the software.

23.
Concepts: technical explanation, designer provides technical detail
- Designer provides technical explanations or information.
- Designer provides technical details or explanations.

24.
Concepts: technical details, discussing technical specifications
- The designer provides technical details about the software.
- Designer discusses technical specifications of the software.

25.
Concepts: explaining features, product functionality explanation, explaining functionalities, feature explanations
- Explaining or describing a specific feature or functionality.
- Explaining product functionality or features.
- Descriptions or explanations of how features or functionalities work.
- Providing explanations or descriptions of specific features or functionalities.

26.
Concepts: explaining component, design functionality explanation, component feature explanation
- Designer explains the functionality or purpose of a specific component or feature.
- Designer explains how a specific feature or component works.
- Designer highlights key features of a component.

27.
Concepts: feature explanation, explaining software feature
- Designer reiterates or explains a feature or functionality.
- Designer explains features or characteristics of the software.
- Designer explains the purpose and limitations of a specific feature.
- Designer provides an example of a feature's functions.
- Designer explains or demonstrates a feature of the software.

28.
Concepts: component improvement explanation, explaining technical improvements
- The designer explains improvements made to components or features.
- Designer explains technical improvements or updates to the platform.

29.
Concepts: introducing new feature, introducing new features
- A designer introduces or announces a new feature or functionality.
- Designer introduces a new design element or feature in the platform.
- Introducing new features or functionalities.

30.
Concepts: highlighting functionality, demonstrating functionality
- Designer highlights the functionality or features of the platform.
- The designer showcases the functionality of a feature or tool.

31.
Concepts: simulated experiment assessment, detailing simulated experiment assessment
- Designer describes plans or features for a simulated experiment assessment.
- A designer discusses the assessment or evaluation of simulated experiments.

32.
Concepts: clarifying software version, clarifying version information, clarifying version details
- A designer clarifies the version of the software.
- Designer clarifies information about a specific version of the software.
- A designer clarifies version details or specifications.
===
Here are the definitions for each code:

---
1.
Concepts: development priority explanation, justifying development decisions, justifying development priorities
Relationship: The concepts are interrelated, as justifying development decisions and priorities involves explaining the reasoning behind them.
Criteria: A speaker explains or justifies development decisions or priorities.
Phrase: Explaining development priorities

2.
Concepts: advising on categorization, suggesting categorization
Relationship: The concepts are related, as advising on categorization involves suggesting ways to organize content.
Criteria: A user advises on categorization or organization of content.
Phrase: Suggesting categorization

3.
Concepts: development advice, advising on development strategy
Relationship: The concepts are interrelated, as development advice involves guiding development strategy.
Criteria: A user advises on development strategy or approach.
Phrase: Advising on development strategy

4.
Concepts: suggesting incremental development, advocating incremental development
Relationship: The concepts are related, as suggesting incremental development involves advocating for a gradual approach.
Criteria: A user suggests taking a slow and incremental approach to development.
Phrase: Advocating incremental development

5.
Concepts: providing rationales, providing rationale
Relationship: The concepts are identical, as providing rationales involves providing a reason or explanation.
Criteria: A user or designer provides a rationale or explanation for a decision.
Phrase: Providing rationales

6.
Concepts: explaining reasons, gives reason for it
Relationship: The concepts are related, as explaining reasons involves providing a justification.
Criteria: User explains reasons behind a request or suggestion.
Phrase: Explaining reasons

7.
Concepts: explains intention, intention explanation
Relationship: The concepts are identical, as explaining intention involves providing a reason or purpose.
Criteria: User or designer explains the intention behind a question.
Phrase: Explaining intention

8.
Concepts: purpose explanation, explaining design intention
Relationship: The concepts are related, as explaining design intention involves providing a purpose or goal.
Criteria: Designer explains the purpose or intent behind a particular feature or version.
Phrase: Explaining design intention

9.
Concepts: design rationale, rationale for development decisions, design decision explanation
Relationship: The concepts are interrelated, as design rationale involves explaining development decisions.
Criteria: Designer explains the reasoning behind a development decision.
Phrase: Providing design rationale

10.
Concepts: striving for quality, striving for design perfection
Relationship: The concepts are related, as striving for quality involves aiming for perfection.
Criteria: Designer strives for quality or perfection.
Phrase: Striving for quality

11.
Concepts: emphasizing quality, emphasizing optimization
Relationship: The concepts are related, as emphasizing quality involves highlighting optimization.
Criteria: A designer emphasizes the importance of quality in the development process.
Phrase: Emphasizing quality

12.
Concepts: labeling component as ideal, ideal component identification
Relationship: The concepts are identical, as labeling a component as ideal involves identifying it as such.
Criteria: The designer labels or categorizes a component as ideal.
Phrase: Labeling ideal components

13.
Concepts: emphasizing impact, highlighting update significance
Relationship: The concepts are related, as emphasizing impact involves highlighting significance.
Criteria: A designer emphasizes the impact or significance of an update or feature.
Phrase: Emphasizing impact

14.
Concepts: explaining feature importance, designer explains feature importance, explains feature importance
Relationship: The concepts are identical, as explaining feature importance involves highlighting significance.
Criteria: A designer explains the importance or significance of a particular feature.
Phrase: Explaining feature importance

15.
Concepts: feature significance explanation, highlighting feature importance
Relationship: The concepts are related, as explaining feature significance involves highlighting importance.
Criteria: The designer explains the significance of a feature for long-term stability.
Phrase: Explaining feature significance

16.
Concepts: emphasizing long-term benefits, highlighting long-term benefits
Relationship: The concepts are related, as emphasizing long-term benefits involves highlighting benefits.
Criteria: Emphasis on the long-term benefits or consequences of a feature or decision.
Phrase: Emphasizing long-term benefits

17.
Concepts: input methods, discussing input methods
Relationship: The concepts are identical, as discussing input methods involves exploring options.
Criteria: The designer addresses input methods for different devices.
Phrase: Discussing input methods

18.
Concepts: comparing to other applications, contrasts with other software
Relationship: The concepts are related, as comparing to other applications involves contrasting with similar software.
Criteria: A user compares the Physics Lab to other similar applications or software.
Phrase: Comparing to other applications

19.
Concepts: comparing to others, comparison to similar apps
Relationship: The concepts are identical, as comparing to others involves comparing to similar apps.
Criteria: User compares the software to other similar products.
Phrase: Comparing to others

20.
Concepts: explaining software concepts, bidirectional conversion explanation
Relationship: The concepts are related, as explaining software concepts involves explaining bidirectional conversion.
Criteria: The designer explains a concept or feature of the software.
Phrase: Explaining software concepts

21.
Concepts: promoting bidirectional conversion, exploring bidirectional conversion
Relationship: The concepts are related, as promoting bidirectional conversion involves exploring possibilities.
Criteria: Designer promotes bidirectional conversion between physical and circuit diagrams.
Phrase: Promoting bidirectional conversion

22.
Concepts: technical explanations, explaining technical artifacts
Relationship: The concepts are related, as technical explanations involve explaining technical aspects.
Criteria: Explaining technical requirements or specifications for the software.
Phrase: Providing technical explanations

23.
Concepts: technical explanation, designer provides technical detail
Relationship: The concepts are identical, as technical explanation involves providing technical details.
Criteria: Designer provides technical explanations or information.
Phrase: Providing technical explanations

24.
Concepts: technical details, discussing technical specifications
Relationship: The concepts are identical, as technical details involve discussing specifications.
Criteria: The designer provides technical details about the software.
Phrase: Discussing technical specifications

25.
Concepts: explaining features, product functionality explanation, explaining functionalities, feature explanations
Relationship: The concepts are interrelated, as explaining features involves describing functionality.
Criteria: Explaining or describing a specific feature or functionality.
Phrase: Explaining features

26.
Concepts: explaining component, design functionality explanation, component feature explanation
Relationship: The concepts are related, as explaining components involves describing functionality.
Criteria: Designer explains the functionality or purpose of a specific component or feature.
Phrase: Explaining components

27.
Concepts: feature explanation, explaining software feature
Relationship: The concepts are identical, as feature explanation involves explaining software features.
Criteria: Designer explains features or characteristics of the software.
Phrase: Explaining software features

28.
Concepts: component improvement explanation, explaining technical improvements
Relationship: The concepts are related, as explaining component improvements involves explaining technical updates.
Criteria: The designer explains improvements made to components or features.
Phrase: Explaining component improvements

29.
Concepts: introducing new feature, introducing new features
Relationship: The concepts are identical, as introducing new features involves announcing new functionality.
Criteria: A designer introduces or announces a new feature or functionality.
Phrase: Introducing new features

30.
Concepts: highlighting functionality, demonstrating functionality
Relationship: The concepts are related, as highlighting functionality involves demonstrating features.
Criteria: Designer highlights the functionality or features of the platform.
Phrase: Highlighting functionality

31.
Concepts: simulated experiment assessment, detailing simulated experiment assessment
Relationship: The concepts are related, as simulated experiment assessment involves detailing plans.
Criteria: Designer describes plans or features for a simulated experiment assessment.
Phrase: Detailing simulated experiment assessment

32.
Concepts: clarifying software version, clarifying version information, clarifying version details
Relationship: The concepts are interrelated, as clarifying software version involves providing details.
Criteria: A designer clarifies the version of the software.
Phrase: Clarifying software version