You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: emojis
- The use of emojis in communication within the online community.
- The use of emojis or emoticons in communication.
- Users engage with the conversation using emojis to express emotions or reactions.

2.
Concepts: iterative development
- This code represents the designers' approach to iterative development, where they gather feedback and opinions from users before proceeding with certain features or functionalities.
- Evidence of ongoing development and improvement based on user feedback and needs.
- Indications of ongoing improvements and adaptations to the software based on user needs and feedback.
- Evidence of ongoing software improvement based on user feedback and designer insights.
- Evidence of ongoing improvements and updates to the software based on user needs and feedback.
- The process of continuously improving the product based on feedback and testing.
- Instances where the design process is described as iterative, with ongoing optimizations and updates.

3.
Concepts: incorporating user feedback
- How the developers are soliciting and incorporating user feedback to shape the software.
- Designers acknowledging and incorporating user feedback into their design decisions.
- The extent to which the designers are incorporating user feedback and collaborating with the community to shape the direction of the software.

4.
Concepts: feedback loop
- The process of users providing feedback and designers responding or implementing changes based on that feedback.
- Processes where user feedback is solicited and incorporated into design decisions.
- The process of collecting, considering, and implementing user feedback.
- Designers' responses to user feedback and suggestions.

5.
Concepts: user experience
- Codes related to the designers' efforts to improve the user experience, such as responding to user feedback and addressing user needs.
- User experience is the overall experience of a person using a product or service.
- The designers are concerned with creating a positive user experience by prioritizing features and providing clear instructions.
- The overall experience of using Physics Lab, including usability, accessibility, and enjoyment.
- The overall experience of using the software, including ease of use and functionality.

6.
Concepts: progress update
- Information about the status of the tool's development and release.
- Designer shares information about the development progress or plans.

7.
Concepts: collaborative design
- Codes related to the designers' approach to collaborative design with users, such as their responsiveness to user needs and feedback.
- The interaction between designers and users to identify and address the needs of the target audience in the context of physics education.
- Indications of a participatory design approach where user input is considered in development decisions.

8.
Concepts: user-designer collaboration
- Interaction between users and designers in shaping the online community.
- The level of engagement and collaboration between the designers and users.
- Instances where designers and users work together to address issues or improve the software.

9.
Concepts: information seeking
- Users asking for information about the software or its availability.
- Users asking questions to gain knowledge or resources related to the software.
- Instances where users ask questions or seek clarification about the software.

10.
Concepts: usability and practicality
- The users' perceptions of the software's usability and practicality.
- User comments on the ease of use and practicality of the software.

11.
Concepts: feature update
- Instances where designers announce new features, updates, or bug fixes based on user input.
- Announcements or discussions regarding new features or updates in the software.
- Discussion about updates, changes, or new features in Physics Lab.
- Designers sharing updates on new features or functionalities.
- Designers sharing updates and new features.

12.
Concepts: accessibility and usability
- The extent to which the software is accessible and easy to use for a wide range of users.
- This code captures the designers' efforts to improve the platform's usability and accessibility, as well as the users' requests for specific features.

13.
Concepts: user-centric approach
- Evidence of designing the software with user needs and preferences in mind.
- This code represents the designers' user-centered approach, where they are considering the needs and preferences of the users in the development process.

14.
Concepts: prioritization
- Statements indicating the order in which tasks or features will be developed.
- Instances of designers or users discussing the prioritization of tasks, features, or content.
- Designers prioritize features or updates, explaining their reasoning.

15.
Concepts: technical issue
- Instances of users or designers discussing technical issues or difficulties.
- Discussion about technical problems, compatibility, or limitations of Physics Lab.
- Users or designers encounter technical difficulties.

16.
Concepts: shared goals
- Instances where shared goals and values, such as striving for perfection, are emphasized.
- Instances where community members work together towards a common goal.

17.
Concepts: software update
- Interactions related to the updates and features of the Physics Lab software.
- Designers announcing and explaining software updates.

18.
Concepts: technology constraints
- Limitations or restrictions on technology use in classroom settings.
- Discussion of limitations and constraints imposed by technology.

19.
Concepts: collaborative development
- This code captures the collaborative nature of the interaction, where the designers are actively seeking input from the users to shape the development of the platform.
- The designers' approach to involving the user community in the development process.

20.
Concepts: user inquiries
- Users asking questions about the application or its availability.
- Instances where users ask questions or seek information about Physics Lab.

21.
Concepts: system compatibility
- Users encountering issues related to the compatibility of Physics Lab with specific operating systems.
- Users discussing the compatibility of the software with different operating systems.

22.
Concepts: teaching experience
- How users' teaching backgrounds influence their interactions with educational tools.
- The user's background and experience in teaching physics.

23.
Concepts: gratitude and encouragement
- Expressions of appreciation and encouragement that help build a positive community atmosphere.
- Expressions of gratitude or encouragement that foster a positive community atmosphere.

24.
Concepts: designer response
- Designers acknowledge user feedback and provide insights into the development process and priorities.
- Instances where designers respond to user feedback or suggestions.
- Instances where designers respond to user feedback or queries.

25.
Concepts: usability considerations
- Aspects of the interaction that suggest a focus on the usability and user experience of the Physics Lab software.
- The designers' attention to the usability and ease of use of the simulation tool, as evidenced by their responses to user feedback.

26.
Concepts: building rapport
- Users or designers engage in friendly or supportive interactions.
- Designers and users engaging in friendly and supportive interactions to build rapport and foster a sense of community.

27.
Concepts: user participation
- Users' active involvement in the conversation, sharing their experiences and opinions.
- Codes related to the level of user involvement in the design process, such as the designers' willingness to incorporate user feedback.
- The level of user involvement in the development process.
- Instances where users participate in the design and development process of the Physics Lab software.
- The level of user involvement in the design and development process, as evidenced by the designers' willingness to consult with the group and consider their needs.
- Instances where users are involved in the design process, either through feedback or testing.
- The users are actively involved in the design and development of the Physics Lab platform by making requests for new features and providing feedback.
- The extent to which users are involved in the design process of Physics Lab.
- The extent to which users are involved in shaping the development of the Physics Lab platform.
- The level of user involvement and the collaborative nature of the software's development.

28.
Concepts: identifying roles
- Users or designers identify their roles within the community.
- Instances where participants identify their roles or expertise, contributing to the problem-solving process.
- Identifying roles within the community, such as designers, teachers, or other users.

29.
Concepts: co-design
- Instances where designers involve the community in the design process.
- The collaborative process between users and designers in the design of Physics Lab.
- Users and designers working together to create and improve Physics Lab.

30.
Concepts: collaborative problem solving
- Moments where designers and users work together to address issues.
- Instances where users and designers work together to address issues or improve the software.

31.
Concepts: user feedback integration
- The designers' efforts to incorporate user feedback and input into the application's development.
- Instances where user feedback is acknowledged and incorporated into the design process.
- Instances where user feedback is actively sought and incorporated into the design process.

32.
Concepts: software compatibility
- The designers' considerations around software compatibility.
- The ability of the software to function on different operating systems or devices.
===
Here are the definitions for each code:

---
1.
Concepts: emojis
Relationship: N/A
Criteria: Users use emojis to express emotions or reactions in online communication.
Phrase: Expressing emotions through emojis.

2.
Concepts: iterative development
Relationship: The designers gather feedback and opinions from users, and then use that information to inform their development process.
Criteria: Designers gather user feedback and opinions to inform iterative development.
Phrase: Informing development through user feedback.

3.
Concepts: incorporating user feedback
Relationship: Designers acknowledge and incorporate user feedback into their design decisions.
Criteria: Designers incorporate user feedback into design decisions.
Phrase: Incorporating user feedback into design.

4.
Concepts: feedback loop
Relationship: Users provide feedback, and designers respond or implement changes based on that feedback.
Criteria: Users provide feedback, and designers respond or implement changes.
Phrase: Creating a feedback loop.

5.
Concepts: user experience
Relationship: The designers prioritize features and provide clear instructions to create a positive user experience.
Criteria: Designers prioritize features and provide clear instructions for a positive user experience.
Phrase: Prioritizing user experience.

6.
Concepts: progress update
Relationship: N/A
Criteria: Designers share information about development progress or plans.
Phrase: Sharing development progress.

7.
Concepts: collaborative design
Relationship: Designers interact with users to identify and address user needs in physics education.
Criteria: Designers interact with users to identify and address user needs.
Phrase: Collaborating on design with users.

8.
Concepts: user-designer collaboration
Relationship: Designers and users work together to address issues or improve the software.
Criteria: Designers and users collaborate to address issues or improve the software.
Phrase: Collaborating with users on development.

9.
Concepts: information seeking
Relationship: N/A
Criteria: Users ask questions to gain knowledge or resources related to the software.
Phrase: Seeking information about the software.

10.
Concepts: usability and practicality
Relationship: Users comment on the ease of use and practicality of the software.
Criteria: Users comment on usability and practicality.
Phrase: Commenting on usability and practicality.

11.
Concepts: feature update
Relationship: Designers announce new features, updates, or bug fixes based on user input.
Criteria: Designers announce new features or updates based on user input.
Phrase: Announcing new features or updates.

12.
Concepts: accessibility and usability
Relationship: Designers improve the platform's usability and accessibility, considering user needs and preferences.
Criteria: Designers improve usability and accessibility considering user needs.
Phrase: Improving accessibility and usability.

13.
Concepts: user-centric approach
Relationship: Designers consider user needs and preferences in the development process.
Criteria: Designers consider user needs and preferences in development.
Phrase: Adopting a user-centric approach.

14.
Concepts: prioritization
Relationship: Designers prioritize tasks or features, explaining their reasoning.
Criteria: Designers prioritize tasks or features, explaining their reasoning.
Phrase: Prioritizing tasks or features.

15.
Concepts: technical issue
Relationship: N/A
Criteria: Users or designers discuss technical issues or difficulties.
Phrase: Discussing technical issues.

16.
Concepts: shared goals
Relationship: Community members work together towards a common goal.
Criteria: Community members work towards shared goals.
Phrase: Working towards shared goals.

17.
Concepts: software update
Relationship: Designers announce and explain software updates.
Criteria: Designers announce and explain software updates.
Phrase: Announcing software updates.

18.
Concepts: technology constraints
Relationship: N/A
Criteria: Users discuss limitations and constraints imposed by technology.
Phrase: Discussing technology constraints.

19.
Concepts: collaborative development
Relationship: Designers involve the user community in the development process.
Criteria: Designers involve users in the development process.
Phrase: Involving users in development.

20.
Concepts: user inquiries
Relationship: N/A
Criteria: Users ask questions about the application or its availability.
Phrase: Inquiring about the application.

21.
Concepts: system compatibility
Relationship: Users discuss compatibility issues with specific operating systems.
Criteria: Users discuss system compatibility issues.
Phrase: Discussing system compatibility.

22.
Concepts: teaching experience
Relationship: Users' teaching backgrounds influence their interactions with educational tools.
Criteria: Users' teaching experience influences their interactions.
Phrase: Influencing interactions with teaching experience.

23.
Concepts: gratitude and encouragement
Relationship: N/A
Criteria: Expressions of appreciation and encouragement foster a positive community atmosphere.
Phrase: Expressing gratitude and encouragement.

24.
Concepts: designer response
Relationship: Designers acknowledge user feedback and provide insights into the development process and priorities.
Criteria: Designers respond to user feedback and provide insights.
Phrase: Responding to user feedback.

25.
Concepts: usability considerations
Relationship: Designers focus on the usability and user experience of the Physics Lab software.
Criteria: Designers focus on usability and user experience.
Phrase: Considering usability and user experience.

26.
Concepts: building rapport
Relationship: Users or designers engage in friendly or supportive interactions.
Criteria: Users or designers engage in friendly interactions.
Phrase: Building rapport through friendly interactions.

27.
Concepts: user participation
Relationship: Users are involved in the design and development process of the Physics Lab software.
Criteria: Users participate in the design and development process.
Phrase: Participating in design and development.

28.
Concepts: identifying roles
Relationship: Users or designers identify their roles within the community.
Criteria: Users or designers identify their roles.
Phrase: Identifying roles within the community.

29.
Concepts: co-design
Relationship: Users and designers work together to create and improve Physics Lab.
Criteria: Users and designers co-design Physics Lab.
Phrase: Co-designing Physics Lab.

30.
Concepts: collaborative problem solving
Relationship: Designers and users work together to address issues.
Criteria: Designers and users collaborate to address issues.
Phrase: Collaborating on problem-solving.

31.
Concepts: user feedback integration
Relationship: Designers incorporate user feedback and input into the application's development.
Criteria: Designers integrate user feedback into development.
Phrase: Integrating user feedback into development.

32.
Concepts: software compatibility
Relationship: N/A
Criteria: Designers consider software compatibility with different operating systems or devices.
Phrase: Considering software compatibility.