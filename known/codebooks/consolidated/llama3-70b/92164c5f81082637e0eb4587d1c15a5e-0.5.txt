You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes a list of concepts and definitions. Do not attempt to merge codes now.
Determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable criteria for each code and do not introduce unnecessary details.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Definitions for each code (7 in total):
1. {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1}
Criteria: {Who did what, and how for code 1}
Label: {A consolidated label of code 1}
...
7. {Repeat the input 7}
Relationship: {What is logical relationship between concepts in code 7}
Criteria: {Who did what, and how for code 7}
Label: {A consolidated label of code 7}
---
~~~
1. feature introduction, explaining new features
- Designer introduces or explains the functions or features of the app.
- Designer explains or introduces new features or functionality.

2. inquiry about user needs, inquiry about teacher needs
- Designer asks about user needs or requirements.
- Designer asks teachers about their needs or requirements.

3. confirmation
- Confirming or acknowledging understanding or agreement.
- Confirming or agreeing with a previous statement.

4. self-introduction
- Introducing oneself or making a self-introduction.
- Introducing oneself, including grade level and years of experience.

5. positive response
- User responds positively to a solution or answer
- Describing a positive response or outcome.

6. compliment
- User expresses praise or admiration
- Expressing praise or admiration for a software or feature.

7. future development promise
- Designer promises to implement a feature or functionality in the future.
- Designer promises to develop a feature or app in the future.
===
Here are the definitions for each code:

---
1. feature introduction, explaining new features
Relationship: The two concepts are parallel, describing the designer's action of introducing or explaining features.
Criteria: Designer introduces or explains a feature or functionality of the app.
Label: Feature Introduction

2. inquiry about user needs, inquiry about teacher needs
Relationship: The two concepts are parallel, describing the designer's inquiry about different types of users' needs.
Criteria: Designer asks about user or teacher needs or requirements.
Label: Needs Inquiry

3. confirmation
Relationship: The two concepts are parallel, describing the act of confirming understanding or agreement.
Criteria: Confirming or acknowledging understanding or agreement.
Label: Confirmation

4. self-introduction
Relationship: The two concepts are parallel, describing the act of introducing oneself.
Criteria: Introducing oneself, including grade level and years of experience.
Label: Self-Introduction

5. positive response
Relationship: The two concepts are parallel, describing a positive reaction.
Criteria: User responds positively to a solution or answer.
Label: Positive Response

6. compliment
Relationship: The two concepts are parallel, describing praise or admiration.
Criteria: User expresses praise or admiration for a software or feature.
Label: Compliment

7. future development promise
Relationship: The two concepts are parallel, describing the designer's promise for future development.
Criteria: Designer promises to implement a feature or functionality in the future.
Label: Future Development Promise