You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between sub-codes. If a sub-code includes another, use the broader one. If sub-codes are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (32 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {A sentence of consolidated criteria 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
32.
Relationship: {The logical relationship between sub-codes in code 32}
Criteria: {A sentence of consolidated criteria 32}
Label: {A consolidated label of code 32}
Category: {2-4 words for code 32}
---
~~~
1. participatory process, user involvement.
- Involving community members in the design and decision-making process.
- Involving users in design decision-making processes and community members in the design process.

2. problem solving, issue resolution.
- Solving problems and issues within the community.
- Discussion of solving problems or using the software for problem-solving purposes.
- Resolving issues or providing solutions within the community.

3. social courtesy, community etiquette.
- Use of polite expressions and social courtesies during community interactions.
- Adherence to norms of politeness and etiquette in community interactions.

4. emoji, emotional expression through emojis.
- Use of emojis or other visual expressions to convey emotions or reactions.
- Uses emojis or emoticons in the conversation.
- Use of emojis in communication.
- Usage of emojis in communication within the community.
- Use of emojis in communication within the community.
- Use of emojis in messages or posts.
- Use of emojis to emphasize and communicate emotional responses within digital interactions.

5. user acknowledgment, acknowledging user input.
- Involves acknowledgments within user interactions or towards information provided.
- Acknowledges or responds to feedback, suggestions, or input received.

6. managing expectations, user expectation management.
- Managing user expectations about features or timelines.
- Setting and managing user expectations regarding project timelines and features.
- Managing and reassuring users about the quality, progress, and expectations of updates.

7. update schedule, update release timeline.
- Refers to specific dates or plans for releasing software updates or new versions.
- Information about the timeline or schedule for software updates across different platforms or versions.

8. update acknowledgment, update confirmation.
- Acknowledging that an update has been implemented.
- Records confirmations or acknowledgments that an update has been completed.

9. update magnitude, update scale.
- Describing the scale or extent of an update.
- Indications that a software update or release will be substantial or comprehensive in scope.

10. timeline communication, development timeline communication.
- Communicating expected release or completion timelines.
- Communication about the anticipated and actual timelines for development tasks and updates.

11. progress communication, work in progress communication.
- Information and communication about the current state or progress of tasks.
- Indicating ongoing work or communicating progress updates.

12. feature implementation, feature implementation promise.
- Involves plans or promises for adding new features to the software.
- Promises made by developers to implement specific features requested by users.

13. policy restrictions, school restrictions, school policies.
- Discussing policy restrictions or limitations imposed by the school.
- Restrictions or limitations imposed by schools or educational institutions.
- Pertains to policies or restrictions set by educational institutions on technology usage.

14. security concern, classroom security and access.
- Concerns about security and inappropriate content in classrooms.
- References to security or content-related concerns in classroom settings, and discussions or concerns around internet access or network restrictions in classroom environments.

15. student experience, student engagement.
- Describing student engagement levels or experiences with the software.
- References to student engagement or interest in the software during classroom use.
- Statements indicating student interest or engagement with the software.
- Descriptions or discussions of student engagement or motivation.

16. educational impact, educational impact of software.
- Includes feedback and observations on the educational effectiveness of the software.
- Statements about the positive effects or outcomes of using the software in educational contexts.

17. user background, teacher background.
- Details about the background and experience of users in the field of education.
- Provides background information about the user's teaching experience or role.

18. experience sharing, teaching experience.
- Sharing personal teaching experiences.
- Descriptions of teaching experience.

19. user suggestions, feature suggestions.
- Suggestions made by users for software improvements
- Suggestions and requests for new features to enhance software usability.
- Requests or suggestions from community members for new features, functionalities, or improvements to the software or platform.

20. feedback gathering, feedback solicitation.
- Collection and solicitation of feedback and opinions from users.
- Gathering or collecting feedback, requirements or input from users/stakeholders.
- Actively solicits feedback, suggestions or requirements from users.
- Gathering opinions or feedback from the community, including solicitation of feedback or suggestions.

21. user needs, user needs expression.
- Statements expressing users' needs or preferences for specific platform features or capabilities.
- Identifying user needs and requirements.
- Expressions of user needs or desires for specific software functionalities.

22. download inquiry, software download inquiry.
- Inquiring about or requesting information on how to access or download the software.
- Questions about the procedures or methods for obtaining the software.

23. update inquiry, release status inquiries.
- Statements expressing inquiries, questions, or requests about the status, timeline, or schedule of software updates.
- Inquires about the status, availability or timing of a software release.

24. technical query, technical clarification.
- Asks a technical question or seeks clarification on a technical aspect.
- Seeking or providing clarification on technical aspects and instructions.

25. documentation requests, documentation.
- Requests user documentation, guides or manuals for the software.
- Requests or discussions about documentation or user guides, including requests or discussions about user manuals or guides, including guidance or support.

26. potential solutions, technical solutions.
- Proposing potential solutions to technical problems.
- Proposing or discussing technical solutions to address compatibility or other issues.
- Suggestions or discussions around technical solutions to address compatibility or other technical issues.

27. personalized support, offering personal assistance.
- Offers of personalized support or assistance.
- Offering individual assistance or support to users.

28. system compatibility, platform compatibility.
- Compatibility of the platform with different systems
- Statements about the platform's compatibility with different computer systems or operating systems.

29. platform support, cross-platform support.
- Refers to the availability or support for different platforms or devices.
- Support for multiple platforms or operating systems

30. technical specifications, system requirements specification.
- Specifying technical details or requirements related to hardware or system configurations.
- Information about hardware requirements and system compatibility.
- Providing detailed information about system requirements and compatibility.

31. design simplification, simplification.
- Efforts to simplify complex designs or functionalities.
- Efforts to make the software or platform more straightforward, intuitive, or user-friendly.

32. property adjustments, component adjustments.
- Descriptions of modifications made to the properties of components and features in the software.
- Statements describing adjustments or changes made to the properties or behavior of software components or features.
===
Here is the output:

---
Categories: 
* Community Engagement
* Software Development
* Educational Impact
* User Experience
* Technical Support
* Design and Development

Definitions for each code:

1.
Relationship: Inclusive
Criteria: Involving community members in the design and decision-making process.
Label: Participatory Design
Category: Community Engagement

2.
Relationship: Parallel
Criteria: Solving problems and issues within the community.
Label: Problem Resolution
Category: Community Engagement

3.
Relationship: Inclusive
Criteria: Use of polite expressions and social courtesies during community interactions.
Label: Social Etiquette
Category: Community Engagement

4.
Relationship: Inclusive
Criteria: Use of emojis or other visual expressions to convey emotions or reactions.
Label: Emotional Expression
Category: Community Engagement

5.
Relationship: Inclusive
Criteria: Involves acknowledgments within user interactions or towards information provided.
Label: User Acknowledgment
Category: Community Engagement

6.
Relationship: Inclusive
Criteria: Managing user expectations about features or timelines.
Label: Expectation Management
Category: Software Development

7.
Relationship: Inclusive
Criteria: Refers to specific dates or plans for releasing software updates or new versions.
Label: Update Schedule
Category: Software Development

8.
Relationship: Inclusive
Criteria: Acknowledging that an update has been implemented.
Label: Update Confirmation
Category: Software Development

9.
Relationship: Inclusive
Criteria: Describing the scale or extent of an update.
Label: Update Magnitude
Category: Software Development

10.
Relationship: Inclusive
Criteria: Communicating expected release or completion timelines.
Label: Timeline Communication
Category: Software Development

11.
Relationship: Inclusive
Criteria: Information and communication about the current state or progress of tasks.
Label: Progress Communication
Category: Software Development

12.
Relationship: Inclusive
Criteria: Involves plans or promises for adding new features to the software.
Label: Feature Implementation
Category: Software Development

13.
Relationship: Inclusive
Criteria: Discussing policy restrictions or limitations imposed by the school.
Label: Policy Restrictions
Category: Educational Impact

14.
Relationship: Inclusive
Criteria: Concerns about security and inappropriate content in classrooms.
Label: Security Concerns
Category: Educational Impact

15.
Relationship: Inclusive
Criteria: Describing student engagement levels or experiences with the software.
Label: Student Experience
Category: Educational Impact

16.
Relationship: Inclusive
Criteria: Includes feedback and observations on the educational effectiveness of the software.
Label: Educational Impact
Category: Educational Impact

17.
Relationship: Inclusive
Criteria: Details about the background and experience of users in the field of education.
Label: User Background
Category: User Experience

18.
Relationship: Inclusive
Criteria: Sharing personal teaching experiences.
Label: Experience Sharing
Category: User Experience

19.
Relationship: Inclusive
Criteria: Suggestions made by users for software improvements.
Label: User Suggestions
Category: User Experience

20.
Relationship: Inclusive
Criteria: Collection and solicitation of feedback and opinions from users.
Label: Feedback Gathering
Category: User Experience

21.
Relationship: Inclusive
Criteria: Statements expressing users' needs or preferences for specific platform features or capabilities.
Label: User Needs
Category: User Experience

22.
Relationship: Inclusive
Criteria: Inquiring about or requesting information on how to access or download the software.
Label: Download Inquiry
Category: Technical Support

23.
Relationship: Inclusive
Criteria: Statements expressing inquiries, questions, or requests about the status, timeline, or schedule of software updates.
Label: Update Inquiry
Category: Technical Support

24.
Relationship: Inclusive
Criteria: Asks a technical question or seeks clarification on a technical aspect.
Label: Technical Query
Category: Technical Support

25.
Relationship: Inclusive
Criteria: Requests user documentation, guides or manuals for the software.
Label: Documentation Requests
Category: Technical Support

26.
Relationship: Inclusive
Criteria: Proposing potential solutions to technical problems.
Label: Potential Solutions
Category: Technical Support

27.
Relationship: Inclusive
Criteria: Offers of personalized support or assistance.
Label: Personalized Support
Category: Technical Support

28.
Relationship: Inclusive
Criteria: Compatibility of the platform with different systems.
Label: System Compatibility
Category: Design and Development

29.
Relationship: Inclusive
Criteria: Refers to the availability or support for different platforms or devices.
Label: Platform Support
Category: Design and Development

30.
Relationship: Inclusive
Criteria: Specifying technical details or requirements related to hardware or system configurations.
Label: Technical Specifications
Category: Design and Development

31.
Relationship: Inclusive
Criteria: Efforts to simplify complex designs or functionalities.
Label: Design Simplification
Category: Design and Development

32.
Relationship: Inclusive
Criteria: Descriptions of modifications made to the properties of components and features in the software.
Label: Property Adjustments
Category: Design and Development