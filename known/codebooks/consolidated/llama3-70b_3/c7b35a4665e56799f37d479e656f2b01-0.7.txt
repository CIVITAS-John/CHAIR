You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (24 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
24. 
Concepts: {Repeat the input 24}
Relationship: {What is logical relationship between concepts in code 24, or N/A if not applicable}
Criteria: {Who did what, and how for code 24}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: design intentions, explaining intentions
- Explaining the intention or goal behind a design decision or feature.
- Explaining the intention or purpose behind a question or feature.

2.
Concepts: explain design choice, clarifying design choices, explaining design rationale, explaining design decisions, promoting understanding of design decisions
- The designer explains the reasoning behind a design choice or feature.
- The designer clarifies or explains design choices or decisions.
- Designer explains design rationale or decisions.
- The designer explains the reasoning behind a design decision.
- The designer explains the reasoning or thought process behind a design decision.

3.
Concepts: explaining new features, explaining software features
- The designer explains or clarifies the development process or new features of the software.
- The designer explains the features and capabilities of the software.

4.
Concepts: providing explanation, clarifying functionality, explaining design functionality, explaining functionality
- The designer explains a concept, feature, or functionality.
- The designer explains or clarifies the functionality of a feature.
- Designer explains design functionality to facilitate understanding.
- A designer explains how a feature or component works.

5.
Concepts: providing explanations, explain development process
- The designer provides explanations for features, updates, or technical issues.
- A designer explains the development process or technical details of a feature.
- A user explains the context or reason for a particular need or requirement.

6.
Concepts: clarify technical aspect, explain technical details
- Designer clarifies technical aspects, concepts, or mechanisms to the user.
- Designer explains technical details, concepts, or mechanisms to the user.

7.
Concepts: providing technical insight, sharing technical knowledge
- The designer provides technical insight or explanation.
- The designer shares technical knowledge or explains a technical aspect of the system.

8.
Concepts: system compatibility theories, theorizing about compatibility
- Theorizes or speculates about system compatibility or technical issues.
- Theorizing or hypothesizing about the compatibility or functionality of a system.

9.
Concepts: discussing technical issues, acknowledging technical issues
- The speaker discusses the need to investigate or address technical issues, such as compatibility.
- The speaker acknowledges the need to investigate or address technical issues, such as compatibility.

10.
Concepts: setting technical requirements, consider technical requirements, identifying technical requirements
- A designer sets or clarifies technical requirements for the application.
- The designer considers or discusses technical requirements or constraints.
- Designer identifies a technical requirement for the software.

11.
Concepts: clarifying compatibility, compatibility issue explanation, clarifies platform compatibility, answering compatibility questions
- The designer clarifies compatibility issues or system requirements.
- The designer explains compatibility issues with the software or hardware.
- A designer clarifies compatibility or technical issues with the software.
- A designer answers a question about compatibility with a specific system or device.

12.
Concepts: confirming compatibility, providing technical assurance
- Designer confirms compatibility to ensure correct usage.
- The designer provides technical assurance by confirming the compatibility of a feature.

13.
Concepts: provide system compatibility information, suggesting checking compatibility of the system
- Designer provides information about the system's compatibility with different devices, operating systems, or configurations.
- The designer suggests or checks the compatibility of the system with different devices or platforms.

14.
Concepts: considers xp compatibility, considering system compatibility
- The designer considers or discusses compatibility with older systems, such as XP.
- The designer considers system compatibility for older systems.

15.
Concepts: technical limitations, explains limitations, explain limitation, discusses limitations, explaining current limitations of software
- Designer clarifies technical limitations of the software.
- Explains a technical constraint, such as network restrictions.
- Designer or user explains limitations or constraints of the software
- The designer explains the limitations or constraints of the software or a feature.
- Designer or user discusses limitations or constraints of the software or solution.
- The designer or developer explains the current limitations or constraints of the software.

16.
Concepts: highlighting constraints, revealing design constraints
- Highlighting limitations or constraints in the design or functionality.
- Highlighting constraints or limitations of a system or environment.
- A designer reveals design constraints or limitations.

17.
Concepts: explaining constraints, explaining system limitations, explaining design constraints
- Explaining constraints or limitations.
- The designer explains the limitations or constraints of the system.
- Explaining the limitations or constraints of a design or feature.

18.
Concepts: explaining technical limitations, contextualizing technical limitations
- User or designer explains technical limitations or constraints.
- A user or designer explains the reasons behind technical limitations or issues.

19.
Concepts: explaining technical requirements, communicating technical limitations
- Designer explains technical requirements or limitations.
- Designer communicates technical limitations or constraints directly.

20.
Concepts: acknowledging limitations, acknowledging technical limitations, acknowledging design limitations
- Designer acknowledges limitations.
- Designer acknowledges a potential issue or limitation with the platform.
- The speaker acknowledges limitations or issues with the software.
- A designer acknowledges a technical limitation of the system.
- A comment or suggestion that considers the limitations or constraints of a system or device.
- The designer acknowledges limitations or constraints in the Physics Lab design.

21.
Concepts: institutional constraints, sharing institutional constraint
- A user shares constraints or limitations imposed by an institution.
- A user shares an institutional constraint or limitation.

22.
Concepts: frustration expression, expressing frustration with platform limitations
- Expressing frustration or annoyance with limitations or constraints.
- Expresses frustration or annoyance towards a specific limitation or constraint.

23.
Concepts: highlighting limitations, highlighting software limitations
- A user highlights or mentions limitations or constraints of the software or its use.
- User highlights limitations or shortcomings of the current software.

24.
Concepts: design challenges, highlighting technical challenges
- Designer shares challenges or difficulties encountered during design or development.
- The designer or user discusses technical challenges or obstacles.
===
Here are the definitions for each code:

---
1.
Concepts: design intentions, explaining intentions
Relationship: The designer's intentions are explained to provide context and understanding.
Criteria: The designer explains the intention or goal behind a design decision or feature.
Phrase: Explaining design intentions

2.
Concepts: explain design choice, clarifying design choices, explaining design rationale, explaining design decisions, promoting understanding of design decisions
Relationship: The designer's explanations clarify the reasoning behind design choices.
Criteria: The designer explains the reasoning behind a design choice or feature to promote understanding.
Phrase: Clarifying design choices

3.
Concepts: explaining new features, explaining software features
Relationship: The designer explains new features to facilitate understanding of software capabilities.
Criteria: The designer explains the features and capabilities of the software.
Phrase: Explaining software features

4.
Concepts: providing explanation, clarifying functionality, explaining design functionality, explaining functionality
Relationship: The designer's explanations clarify the functionality of features.
Criteria: The designer explains a concept, feature, or functionality to facilitate understanding.
Phrase: Explaining functionality

5.
Concepts: providing explanations, explain development process
Relationship: The designer provides explanations for features, updates, or technical issues to facilitate understanding.
Criteria: The designer provides explanations for features, updates, or technical issues.
Phrase: Providing explanations

6.
Concepts: clarify technical aspect, explain technical details
Relationship: The designer clarifies technical aspects to facilitate understanding.
Criteria: Designer clarifies technical aspects, concepts, or mechanisms to the user.
Phrase: Clarifying technical aspects

7.
Concepts: providing technical insight, sharing technical knowledge
Relationship: The designer shares technical knowledge to facilitate understanding.
Criteria: The designer provides technical insight or explanation.
Phrase: Sharing technical knowledge

8.
Concepts: system compatibility theories, theorizing about compatibility
Relationship: The designer theorizes about system compatibility to anticipate technical issues.
Criteria: Theorizing or hypothesizing about the compatibility or functionality of a system.
Phrase: Theorizing about compatibility

9.
Concepts: discussing technical issues, acknowledging technical issues
Relationship: The speaker acknowledges the need to investigate or address technical issues.
Criteria: The speaker discusses the need to investigate or address technical issues, such as compatibility.
Phrase: Discussing technical issues

10.
Concepts: setting technical requirements, consider technical requirements, identifying technical requirements
Relationship: The designer sets or clarifies technical requirements to ensure system compatibility.
Criteria: A designer sets or clarifies technical requirements for the application.
Phrase: Setting technical requirements

11.
Concepts: clarifying compatibility, compatibility issue explanation, clarifies platform compatibility, answering compatibility questions
Relationship: The designer clarifies compatibility issues to address user concerns.
Criteria: The designer clarifies compatibility issues or system requirements.
Phrase: Clarifying compatibility issues

12.
Concepts: confirming compatibility, providing technical assurance
Relationship: The designer confirms compatibility to ensure correct usage.
Criteria: Designer confirms compatibility to ensure correct usage.
Phrase: Confirming compatibility

13.
Concepts: provide system compatibility information, suggesting checking compatibility of the system
Relationship: The designer provides information about system compatibility to facilitate understanding.
Criteria: Designer provides information about the system's compatibility with different devices, operating systems, or configurations.
Phrase: Providing compatibility information

14.
Concepts: considers xp compatibility, considering system compatibility
Relationship: The designer considers system compatibility to ensure compatibility with older systems.
Criteria: The designer considers system compatibility for older systems.
Phrase: Considering system compatibility

15.
Concepts: technical limitations, explains limitations, explain limitation, discusses limitations, explaining current limitations of software
Relationship: The designer explains technical limitations to set user expectations.
Criteria: Designer clarifies technical limitations of the software.
Phrase: Explaining technical limitations

16.
Concepts: highlighting constraints, revealing design constraints
Relationship: The designer highlights limitations to facilitate understanding of design constraints.
Criteria: Highlighting limitations or constraints in the design or functionality.
Phrase: Highlighting constraints

17.
Concepts: explaining constraints, explaining system limitations, explaining design constraints
Relationship: The designer explains constraints to set user expectations.
Criteria: Explaining constraints or limitations.
Phrase: Explaining constraints

18.
Concepts: explaining technical limitations, contextualizing technical limitations
Relationship: The user or designer explains technical limitations to provide context.
Criteria: User or designer explains technical limitations or constraints.
Phrase: Explaining technical limitations

19.
Concepts: explaining technical requirements, communicating technical limitations
Relationship: The designer explains technical requirements to set user expectations.
Criteria: Designer explains technical requirements or limitations.
Phrase: Explaining technical requirements

20.
Concepts: acknowledging limitations, acknowledging technical limitations, acknowledging design limitations
Relationship: The designer acknowledges limitations to set user expectations.
Criteria: Designer acknowledges limitations.
Phrase: Acknowledging limitations

21.
Concepts: institutional constraints, sharing institutional constraint
Relationship: The user shares institutional constraints to provide context.
Criteria: A user shares constraints or limitations imposed by an institution.
Phrase: Sharing institutional constraints

22.
Concepts: frustration expression, expressing frustration with platform limitations
Relationship: The user expresses frustration with limitations to highlight usability issues.
Criteria: Expressing frustration or annoyance with limitations or constraints.
Phrase: Expressing frustration

23.
Concepts: highlighting limitations, highlighting software limitations
Relationship: The user highlights limitations to provide feedback on software usability.
Criteria: A user highlights limitations or shortcomings of the current software.
Phrase: Highlighting software limitations

24.
Concepts: design challenges, highlighting technical challenges
Relationship: The designer shares challenges to provide context and facilitate understanding.
Criteria: Designer shares challenges or difficulties encountered during design or development.
Phrase: Highlighting design challenges