You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (18 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
18. 
Concepts: {Repeat the input 18}
Relationship: {What is logical relationship between concepts in code 18, or N/A if not applicable}
Criteria: {Who did what, and how for code 18}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: ask for clarification, ask follow-up questions
- Users and designers seek clarification on previous statements or details.
- Designers and users ask follow-up questions to clarify discussions.

2.
Concepts: express emotions, express user sentiments
- Users express emotions through the use of emojis in conversations.
- Users express themselves through emojis and informal comments.

3.
Concepts: provide positive reviews, appreciate software features
- Users express satisfaction and provide positive feedback on software usability.
- Users express their appreciation for specific features of the software.

4.
Concepts: show appreciation, express community gratitude
- Users express appreciation for the designers' efforts.
- Users express gratitude towards the designers and community members.

5.
Concepts: confirm points made, confirm mutual understanding
- Designers and users affirm and confirm points made during discussions.
- Users and designers express agreement or validation of each other's comments or suggestions.

6.
Concepts: user role inquiry, inquire about user background
- The designer inquires about the user's role to tailor responses appropriately.
- Designers inquire about users' professional roles to better assist them.

7.
Concepts: respond to inquiries, respond to initial question
- Designers respond to user inquiries with relevant information or resources.
- Designers address initial user queries with relevant information.

8.
Concepts: invite user feedback, feature request invitation
- Designers solicit and encourage feedback for future improvements.
- Designers invite users to suggest new features or improvements.

9.
Concepts: suggest design improvements, suggest usability improvements
- Users and designers exchange suggestions for enhancing software features.
- Designers suggest changes to improve the usability of the software.

10.
Concepts: acknowledge user feedback, respond to user feedback
- Designers acknowledge and respond to user feedback received.
- Designers acknowledge and prioritize user feedback in software development.

11.
Concepts: cultivating community, encourage community participation
- Designers engage in community-building activities, encouraging feedback and suggesting inclusivity in development.
- Designers invite and encourage community members to share their thoughts and suggestions.

12.
Concepts: outline development plans, outline feature development timeline
- Designers outline future plans and priorities for completing software features.
- Designers outline the sequence and timeline for completing various software features.

13.
Concepts: share update timeline, provide release timeline
- Designers inform the community about the timing of software updates and current version details.
- Designers provide a timeline and describe the process for upcoming software updates.

14.
Concepts: explain update delays, explain software update process
- Designers explain the reasons behind delays in software updates or features.
- Designers elaborate on the expected timeline and complexity involved in software updates.

15.
Concepts: share progress updates, provide status update
- Designers communicate updates on release schedules and ongoing work.
- Designers provide updates about ongoing research and development activities.

16.
Concepts: clarify version details, announce version details
- Designers clarify and provide details about the software version available to users.
- The designer provides detailed information about the version and its features in the announcement.

17.
Concepts: plan future updates, share future plans
- Designers detail the expected timelines and plans for future updates.
- Designers share their future plans and considerations for software updates.

18.
Concepts: explain functionalities, explain and illustrate features
- Designers explain functionalities and provide feature details.
- Designers explain and provide examples of functionalities that are newly developed or enhanced.
===
---
Definitions for each code (18 in total):
1.
Concepts: ask for clarification, ask follow-up questions
Relationship: Users and designers actively engage in dialogue to ensure clarity and understanding.
Criteria: Users and designers seek clarification and ask follow-up questions to enhance discussions.
Phrase: Clarify discussions.

2.
Concepts: express emotions, express user sentiments
Relationship: Users convey their feelings and sentiments through various expressive means.
Criteria: Users express emotions and sentiments through emojis and informal comments during interactions.
Phrase: Convey emotions.

3.
Concepts: provide positive reviews, appreciate software features
Relationship: Users share their satisfaction and appreciation for the software's quality and specific features.
Criteria: Users express satisfaction and appreciation through positive reviews on software usability and features.
Phrase: Share positive feedback.

4.
Concepts: show appreciation, express community gratitude
Relationship: Users communicate their appreciation and gratitude toward contributions from designers and community members.
Criteria: Users express appreciation and gratitude for the efforts of designers and community members.
Phrase: Express gratitude.

5.
Concepts: confirm points made, confirm mutual understanding
Relationship: Designers and users validate each other's comments to ensure clear communication.
Criteria: Designers and users affirm points made and express mutual understanding during discussions.
Phrase: Confirm understanding.

6.
Concepts: user role inquiry, inquire about user background
Relationship: Designers seek to understand users' backgrounds to provide tailored assistance.
Criteria: Designers inquire about users' roles and backgrounds to better support their needs.
Phrase: Inquire about roles.

7.
Concepts: respond to inquiries, respond to initial question
Relationship: Designers address users' inquiries promptly with relevant information.
Criteria: Designers respond to user inquiries and initial questions with accurate and helpful information.
Phrase: Address inquiries.

8.
Concepts: invite user feedback, feature request invitation
Relationship: Designers actively seek input from users to foster improvement and innovation.
Criteria: Designers invite users to provide feedback and suggest new features for future developments.
Phrase: Solicit feedback.

9.
Concepts: suggest design improvements, suggest usability improvements
Relationship: A collaborative exchange occurs between users and designers regarding enhancements.
Criteria: Users and designers suggest improvements for enhancing software features and usability.
Phrase: Exchange improvement suggestions.

10.
Concepts: acknowledge user feedback, respond to user feedback
Relationship: Designers recognize and prioritize user feedback in their development process.
Criteria: Designers acknowledge user feedback and respond to it appropriately in software development.
Phrase: Respond to feedback.

11.
Concepts: cultivating community, encourage community participation
Relationship: Designers promote a sense of community and encourage active participation among members.
Criteria: Designers engage in activities that cultivate community and encourage participation and feedback.
Phrase: Foster community engagement.

12.
Concepts: outline development plans, outline feature development timeline
Relationship: Designers provide clarity on future software development efforts and priorities.
Criteria: Designers outline their development plans and the timeline for upcoming software features.
Phrase: Outline development plans.

13.
Concepts: share update timeline, provide release timeline
Relationship: Designers keep the community informed about software update schedules.
Criteria: Designers share timelines regarding software updates and release processes with the community.
Phrase: Communicate update timelines.

14.
Concepts: explain update delays, explain software update process
Relationship: Designers clarify the reasons and processes surrounding software updates.
Criteria: Designers explain the reasons for update delays and elaborate on the software update process.
Phrase: Clarify update explanations.

15.
Concepts: share progress updates, provide status update
Relationship: Designers consistently communicate about ongoing development and release timelines.
Criteria: Designers share updates about the status of ongoing work and release schedules.
Phrase: Provide status updates.

16.
Concepts: clarify version details, announce version details
Relationship: Designers provide essential information about software versions to users.
Criteria: Designers clarify and announce details regarding the software version and its features.
Phrase: Announce version details.

17.
Concepts: plan future updates, share future plans
Relationship: Designers establish and communicate their intentions for upcoming software updates.
Criteria: Designers plan and share their anticipated timelines and considerations for future software updates.
Phrase: Plan future updates.

18.
Concepts: explain functionalities, explain and illustrate features
Relationship: Designers offer clear explanations and examples regarding software functionalities.
Criteria: Designers explain functionalities and illustrate features to enhance user understanding.
Phrase: Explain features. 
---