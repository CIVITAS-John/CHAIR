You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (21 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
21. 
Concepts: {Repeat the input 21}
Relationship: {What is logical relationship between concepts in code 21, or N/A if not applicable}
Criteria: {Who did what, and how for code 21}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: making inquiries, requesting clarification
- Users or designers ask questions to seek information or clarification.
- Designers request clarification on specific details and express understanding.

2.
Concepts: making technical inquiries, requesting information and resources, inquiring about access and support
- Users ask technical questions and request technical help regarding the software.
- Participants ask questions to gain knowledge or request resources related to the software.
- Users inquire about software access and express the need for a user manual and support.

3.
Concepts: facilitating access, providing download instructions
- Designers facilitate access by providing information on how to access and download resources.
- Designers provide instructions on how to download the software or application.

4.
Concepts: seeking user input, gathering user opinions
- Participants gather and seek input or suggestions from the community.
- Designers gather opinions and ask the community about their needs or preferences for features.

5.
Concepts: providing detailed explanations, providing context and explanations
- Participants encourage detailed feedback and provide detailed explanations and context.
- Participants provide background information and further context about a conversation.

6.
Concepts: asking follow-up questions, encourage future discussion or questions
- Participants follow up on previous discussions or issues by asking follow-up questions.
- Encouraging future discussion or questions.

7.
Concepts: simulation enhancement, describing component functionality
- A designer describes the capabilities of a component to enhance simulations.
- Designers describe the functionality of components and inform users about simulation capabilities.

8.
Concepts: community need, describing educational needs
- A user expresses a need for specific features to make the software more useful for teachers.
- Users describe the specific needs or requirements of their school and their educational use cases for the software.

9.
Concepts: addressing usability concerns, addressing feature concerns
- Designers address usability concerns and offer solutions and workarounds.
- Designers address user concerns and raise questions about the feasibility of new features.

10.
Concepts: evaluating compatibility, discussing system compatibility
- A designer evaluates the compatibility of a system or component, considering specific conditions.
- Designers discuss and inform users about system requirements and compatibility issues.

11.
Concepts: recognize expert contributions, acknowledgment and requests
- Users recognize the expertise of designers and make specific feature requests.
- Users acknowledge and show respect for the designers' work and make specific requests for new features.

12.
Concepts: integrating user feedback, considering user feedback
- Designers integrate user feedback into the design process.
- Designers consider and accept user feedback for future updates or changes.

13.
Concepts: suggest expansion to mechanics, requesting new features for physics experiments
- A user suggests expanding the application to include mechanics experiments.
- Users request new features or improvements for the Physics Lab tool.

14.
Concepts: suggesting new features, feature request invitation
- Users or designers suggest new features and provide design feedback.
- Designers invite users to suggest new features or improvements.

15.
Concepts: suggest feature simplification, proposing usability improvements
- Users suggest the simplification of a feature or process.
- Users suggest changes and make adjustments to improve the usability and workflow of the software.

16.
Concepts: announce software update, communicating updates and improvements
- Participants announce a new software version update.
- Participants communicate updates, new features, and improvements in the software.

17.
Concepts: sharing development plans, discussing future development plans
- Designers share information and updates about the development plan with the community.
- Participants discuss and share information about future planning and development.

18.
Concepts: project management, communicating development priorities
- Designers discuss project management and prioritization.
- Designers communicate and outline the prioritization of tasks and features in the development process.

19.
Concepts: refining design, discussing feature improvements
- Designers discuss and implement refinements to make the software's design simpler and more effective.
- Designers discuss improvements and optimizations for software features.

20.
Concepts: confirming future updates, planning and discussing future features
- Designers confirm and commit to the availability of future features and updates.
- Designers outline and discuss the implementation of specific features and future plans, including updates, projects, and compatibility considerations.

21.
Concepts: design principles, explaining design rationale
- A participant discusses the principles or guidelines behind the software's design.
- Designers explain the rationale and principles behind their design choices.
===
---
Definitions for each code (21 in total):
1.
Concepts: making inquiries, requesting clarification
Relationship: Both involve seeking additional information or understanding.
Criteria: Users or designers ask questions to seek information or clarification on specific details.
Phrase: Seeking clarification

2.
Concepts: making technical inquiries, requesting information and resources, inquiring about access and support
Relationship: All involve users seeking technical help, information, or access.
Criteria: Users ask technical questions, request resources, and inquire about access and support for the software.
Phrase: Requesting technical support

3.
Concepts: facilitating access, providing download instructions
Relationship: Both involve providing information to enable access to resources.
Criteria: Designers provide information and instructions on how to access and download resources.
Phrase: Facilitating resource access

4.
Concepts: seeking user input, gathering user opinions
Relationship: Both involve collecting feedback from the community.
Criteria: Participants gather input and opinions from the community about their needs or preferences.
Phrase: Collecting user feedback

5.
Concepts: providing detailed explanations, providing context and explanations
Relationship: Both involve giving comprehensive information and context.
Criteria: Participants provide detailed explanations and background information about a conversation.
Phrase: Offering detailed explanations

6.
Concepts: asking follow-up questions, encourage future discussion or questions
Relationship: Both involve continuing or encouraging ongoing dialogue.
Criteria: Participants ask follow-up questions and encourage future discussions or questions.
Phrase: Encouraging ongoing dialogue

7.
Concepts: simulation enhancement, describing component functionality
Relationship: Both involve explaining how components improve simulations.
Criteria: Designers describe the functionality of components to enhance simulation capabilities.
Phrase: Explaining component functionality

8.
Concepts: community need, describing educational needs
Relationship: Both involve expressing specific needs for educational purposes.
Criteria: Users describe their educational needs and requirements for the software.
Phrase: Expressing educational needs

9.
Concepts: addressing usability concerns, addressing feature concerns
Relationship: Both involve responding to user concerns about usability and features.
Criteria: Designers address and offer solutions for usability and feature concerns.
Phrase: Addressing user concerns

10.
Concepts: evaluating compatibility, discussing system compatibility
Relationship: Both involve assessing and discussing system compatibility.
Criteria: Designers evaluate and inform users about system requirements and compatibility issues.
Phrase: Discussing system compatibility

11.
Concepts: recognize expert contributions, acknowledgment and requests
Relationship: Both involve acknowledging expertise and making requests.
Criteria: Users recognize designers' expertise and make specific feature requests.
Phrase: Acknowledging expertise and requesting features

12.
Concepts: integrating user feedback, considering user feedback
Relationship: Both involve incorporating user feedback into the design process.
Criteria: Designers consider and integrate user feedback for updates or changes.
Phrase: Incorporating user feedback

13.
Concepts: suggest expansion to mechanics, requesting new features for physics experiments
Relationship: Both involve suggesting new features or expansions.
Criteria: Users suggest expanding the application and request new features for physics experiments.
Phrase: Requesting new features

14.
Concepts: suggesting new features, feature request invitation
Relationship: Both involve proposing new features.
Criteria: Users or designers suggest new features and invite feedback on improvements.
Phrase: Proposing new features

15.
Concepts: suggest feature simplification, proposing usability improvements
Relationship: Both involve suggesting changes to improve usability.
Criteria: Users suggest simplifying features and propose usability improvements.
Phrase: Proposing usability improvements

16.
Concepts: announce software update, communicating updates and improvements
Relationship: Both involve informing about software updates and improvements.
Criteria: Participants announce and communicate updates, new features, and improvements.
Phrase: Announcing software updates

17.
Concepts: sharing development plans, discussing future development plans
Relationship: Both involve sharing and discussing future development plans.
Criteria: Designers share and discuss information about future development plans with the community.
Phrase: Discussing development plans

18.
Concepts: project management, communicating development priorities
Relationship: Both involve managing and prioritizing development tasks.
Criteria: Designers discuss project management and communicate development priorities.
Phrase: Managing development priorities

19.
Concepts: refining design, discussing feature improvements
Relationship: Both involve improving the design and features of the software.
Criteria: Designers discuss and implement refinements and improvements for software features.
Phrase: Improving software design

20.
Concepts: confirming future updates, planning and discussing future features
Relationship: Both involve planning and confirming future updates and features.
Criteria: Designers confirm and discuss the implementation of future features and updates.
Phrase: Planning future updates

21.
Concepts: design principles, explaining design rationale
Relationship: Both involve explaining the reasoning behind design choices.
Criteria: Designers explain the principles and rationale behind their design choices.
Phrase: Explaining design rationale
---