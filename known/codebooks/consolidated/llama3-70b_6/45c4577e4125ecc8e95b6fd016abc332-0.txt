You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (14 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
14. 
Concepts: {Repeat the input 14}
Relationship: {What is logical relationship between concepts in code 14, or N/A if not applicable}
Criteria: {Who did what, and how for code 14}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: collaborative problem solving
- Moments where designers and users work together to address issues.
- Collaborative efforts between users and designers to solve issues and improve the product.
- Instances where users and designers work together to address issues or improve the software.

2.
Concepts: engage with community
- Instances where members of the community actively participate in discussions, ask questions, or provide feedback.
- Instances where users or designers engage in discussions that foster community interaction and participation.
- Active participation and interaction among community members, including both users and designers.
- Efforts made by designers to actively involve and communicate with the user community.

3.
Concepts: user engagement
- Instances where users actively participate in the conversation, showing interest or involvement in the community.
- Instances where users engage with designers through questions, feedback, or expressions of anticipation.
- Instances where users actively participate in the conversation, showing interest and involvement.

4.
Concepts: confirmation
- Confirmation or agreement is expressed, often in response to a question or statement.
- Confirming or agreeing with a statement or argument made by another user or the developer.

5.
Concepts: user response
- Input and suggestions provided by users regarding the design and functionality of the product.
- Instances where users provide feedback or ask questions that influence the design process.
- Instances where users provide feedback or suggestions to improve the software.
- Instances where users provide suggestions or feedback on features and functionalities.
- Instances where users provide feedback or ask questions about the app's development and updates.

6.
Concepts: resources sharing
- Instances where designers or users share resources, such as download links, development plans, or announcements.
- Information about where and how to access resources, files, or downloads related to Physics Lab.
- Instances where users or designers share files, images, or other resources with the community.
- Designers share information or resources with the group or suggest group sharing.

7.
Concepts: promote participatory design
- Instances where the community contributes to the design and development of the Physics Lab by providing suggestions or feedback that influence the development process.
- Instances where designers seek or consider user input in the design and development process.
- Instances where users are invited to participate in the design process or provide input.
- Instances where users and designers collaboratively discuss features and usability, reflecting a user-centered design approach.
- The involvement of users in the design and development process, contributing their insights and needs.
- Encouragement by designers for users to contribute ideas, feedback, and suggestions for the development of Physics Lab.
- Active involvement of users in the design process to ensure the product meets their needs and preferences.
- The involvement of users in the design process to ensure the product meets their needs and preferences.
- Instances where users and designers collaboratively discuss or work on design improvements.

8.
Concepts: feature update
- Instances where designers announce new features, updates, or bug fixes based on user input.
- Information about new features and updates being added to the product.

9.
Concepts: iterative development
- Instances where designers discuss updates, new features, or bug fixes.
- The process of repeatedly refining and improving a product based on feedback and testing.
- The process of continuously improving the product based on feedback and testing.
- Instances where the design process is described as iterative, with ongoing optimizations and updates.

10.
Concepts: designer responsiveness
- Instances where designers respond to user queries or engage with user comments, indicating active communication between designers and users.
- Instances where designers respond to user inquiries, suggestions, or feedback.
- Instances where designers respond to user feedback or suggestions.
- Instances where designers acknowledge user feedback and discuss potential solutions or updates.
- Designers responding to user feedback and addressing their concerns or suggestions.
- Instances where designers respond to user queries or feedback, showing attentiveness to user needs.

11.
Concepts: development transparency
- Instances where designers provide detailed information about development processes, challenges, and progress.
- Keeping the community informed about the development process and upcoming changes.

12.
Concepts: practical application
- Instances where the practical application of the software in educational settings is discussed.
- Highlighting the practical applications or benefits of a particular feature or aspect of the Physics Lab software.

13.
Concepts: technical constraints
- Instances where technical limitations or requirements are discussed.
- Instances where limitations or constraints of the software are mentioned.

14.
Concepts: user feedback integration
- Instances where user feedback is acknowledged and incorporated into the design process.
- Instances where user feedback is actively sought and incorporated into the design process.
===
Here are the definitions for each code:

---
1.
Concepts: collaborative problem solving
Relationship: The concepts are related as they all describe instances of joint effort between designers and users to address issues and improve the product.
Criteria: Designers and users work together to address issues and improve the product.
Phrase: Collaborate to solve problems.

2.
Concepts: engage with community
Relationship: The concepts are related as they all describe instances of active participation and interaction among community members, including both users and designers.
Criteria: Community members actively participate in discussions, ask questions, or provide feedback.
Phrase: Engage with the community.

3.
Concepts: user engagement
Relationship: The concepts are related as they all describe instances of users actively participating in the conversation, showing interest or involvement in the community.
Criteria: Users actively participate in the conversation, showing interest and involvement.
Phrase: Engage as users.

4.
Concepts: confirmation
Relationship: The concepts are related as they all describe instances of agreement or confirmation expressed by users or designers.
Criteria: Confirmation or agreement is expressed in response to a question or statement.
Phrase: Confirm or agree.

5.
Concepts: user response
Relationship: The concepts are related as they all describe instances of users providing input, suggestions, or feedback regarding the design and functionality of the product.
Criteria: Users provide feedback or suggestions to improve the software.
Phrase: Respond as users.

6.
Concepts: resources sharing
Relationship: The concepts are related as they all describe instances of sharing resources, such as files, links, or information, within the community.
Criteria: Designers or users share resources with the community.
Phrase: Share resources.

7.
Concepts: promote participatory design
Relationship: The concepts are related as they all describe instances of involving users in the design and development process, seeking their input and feedback.
Criteria: Users are involved in the design process, contributing their insights and needs.
Phrase: Promote participatory design.

8.
Concepts: feature update
Relationship: The concepts are related as they all describe instances of designers announcing new features, updates, or bug fixes based on user input.
Criteria: Designers announce new features or updates based on user input.
Phrase: Update features.

9.
Concepts: iterative development
Relationship: The concepts are related as they all describe instances of continuously refining and improving a product based on feedback and testing.
Criteria: The design process is iterative, with ongoing optimizations and updates.
Phrase: Develop iteratively.

10.
Concepts: designer responsiveness
Relationship: The concepts are related as they all describe instances of designers responding to user queries, comments, or feedback.
Criteria: Designers respond to user queries, comments, or feedback.
Phrase: Respond as designers.

11.
Concepts: development transparency
Relationship: The concepts are related as they all describe instances of designers providing detailed information about development processes, challenges, and progress.
Criteria: Designers provide detailed information about development processes and progress.
Phrase: Provide development transparency.

12.
Concepts: practical application
Relationship: The concepts are related as they all describe instances of discussing the practical application of the software in educational settings.
Criteria: The practical application of the software is discussed.
Phrase: Discuss practical applications.

13.
Concepts: technical constraints
Relationship: The concepts are related as they all describe instances of discussing technical limitations or requirements.
Criteria: Technical limitations or requirements are discussed.
Phrase: Discuss technical constraints.

14.
Concepts: user feedback integration
Relationship: The concepts are related as they all describe instances of user feedback being acknowledged and incorporated into the design process.
Criteria: User feedback is acknowledged and incorporated into the design process.
Phrase: Integrate user feedback.