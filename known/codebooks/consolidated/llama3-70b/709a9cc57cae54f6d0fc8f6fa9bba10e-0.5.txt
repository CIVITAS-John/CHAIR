You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (8 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
8. 
Concepts: {Repeat the input 8}
Relationship: {What is logical relationship between concepts in code 8, or N/A if not applicable}
Criteria: {Who did what, and how for code 8}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: providing examples
- The designer provides an example to illustrate a concept or feature.
- Provision of examples or illustrations to explain a concept or functionality.

2.
Concepts: prioritizing development tasks
- Prioritization of development tasks or goals.
- Prioritizing tasks or features to be developed or implemented.

3.
Concepts: promoting problem-solving
- A designer promotes problem-solving or encourages users to think critically.
- The designer promotes problem-solving capabilities within the application.

4.
Concepts: feature request
- A user requests a new feature or functionality in Physics Lab.
- Making a request or suggestion for a feature or functionality.
- Requesting a specific feature or functionality, such as an exit button, to improve user experience.
- User makes a specific request or suggestion for a feature or experiment.
- A user requests a specific feature or functionality, such as export or import capabilities.

5.
Concepts: teaching needs
- Catering to the needs of teachers or educators in software development.
- A user highlights their teaching needs or requirements.

6.
Concepts: theoretical compatibility
- Designer expresses theoretical compatibility of the software.
- Designer mentions theoretical compatibility requirements.
- Theoretical explanation or justification of compatibility or technical feasibility.

7.
Concepts: sharing humor
- A user shares a humorous anecdote to build rapport.
- User shares a humorous or lighthearted anecdote.

8.
Concepts: requesting new content
- A user requests the inclusion of a specific topic or feature.
- Requesting the inclusion of a particular topic or feature in the Physics Lab.
===
Here are the definitions for each code:

---
1.
Concepts: providing examples
Relationship: The designer's action of providing examples is to illustrate a concept or feature, which implies a cause-and-effect relationship between the two concepts.
Criteria: The designer provides an example to illustrate a concept or feature.
Phrase: Providing illustrative examples

2.
Concepts: prioritizing development tasks
Relationship: The prioritization of development tasks or goals implies a ranking or ordering of tasks, which is a logical relationship between the two concepts.
Criteria: The designer prioritizes development tasks or goals.
Phrase: Prioritizing development tasks

3.
Concepts: promoting problem-solving
Relationship: The designer's action of promoting problem-solving is to encourage users to think critically, which implies a cause-and-effect relationship between the two concepts.
Criteria: The designer promotes problem-solving capabilities within the application.
Phrase: Promoting problem-solving capabilities

4.
Concepts: feature request
Relationship: The user's request for a new feature or functionality is a specific need or want, which implies a logical relationship between the two concepts.
Criteria: A user requests a new feature or functionality to improve user experience.
Phrase: Requesting new features

5.
Concepts: teaching needs
Relationship: The user's highlighting of their teaching needs or requirements implies a connection between the user's role as a teacher and their needs, which is a logical relationship between the two concepts.
Criteria: A user highlights their teaching needs or requirements.
Phrase: Highlighting teaching needs

6.
Concepts: theoretical compatibility
Relationship: The designer's expression of theoretical compatibility implies a justification or explanation of technical feasibility, which is a logical relationship between the two concepts.
Criteria: The designer expresses theoretical compatibility requirements.
Phrase: Expressing theoretical compatibility

7.
Concepts: sharing humor
Relationship: The user's sharing of a humorous anecdote is to build rapport, which implies a social or emotional connection between the two concepts.
Criteria: A user shares a humorous anecdote to build rapport.
Phrase: Sharing humor

8.
Concepts: requesting new content
Relationship: The user's request for the inclusion of a specific topic or feature implies a specific need or want, which is a logical relationship between the two concepts.
Criteria: A user requests the inclusion of a particular topic or feature.
Phrase: Requesting new content