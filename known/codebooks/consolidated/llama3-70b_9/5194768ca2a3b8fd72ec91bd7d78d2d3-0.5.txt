You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: explaining technical limitations, contextualizing technical limitations
- The quote explains or justifies a technical limitation or constraint.
- The speaker is contextualizing technical limitations or explaining the reasons behind them.

2.
Concepts: explaining constraints, explaining reason for constraint
- Explaining constraints or limitations
- Explaining limitations or constraints of a specific feature or component.
- User explains the reason for a particular constraint or limitation.

3.
Concepts: addressing limitations, justifying limitations
- User or designer explains why a limitation or constraint is addressable.
- A designer explains or justifies the limitations of a feature or experiment.

4.
Concepts: setting technical requirements, identifying technical requirements
- The designer sets or discusses technical requirements for the software or hardware.
- Designers identify technical requirements or needs for the software.

5.
Concepts: outlining system requirements, provide system compatibility information, clarifying system requirements
- Designer outlines the system's requirements or compatibility.
- Designer provides information about system compatibility or requirements.
- Designer clarifies the system requirements for the software.

6.
Concepts: theoretical compatibility, theoretically, it should be compatible
- The designer mentions the theoretical compatibility requirements for the software.
- Designer provides information about compatibility or system requirements.

7.
Concepts: clarifying compatibility, system compatibility clarification, explaining compatibility issues
- The designer clarifies compatibility issues or system requirements.
- Designer clarifies system compatibility or limitations.
- Designer explains compatibility issues with a specific system or platform.

8.
Concepts: confirming compatibility, confirms platform compatibility, clarifies platform compatibility
- Designer confirms compatibility with a specific platform or feature.
- The designer confirms that a specific system or version is compatible with the software.
- The designer confirms the platform's compatibility with a specific system or device.
- Designer clarifies whether a platform or system is compatible with the software.

9.
Concepts: discussing compatibility issues, acknowledging compatibility issues
- A designer discusses the need to investigate compatibility issues.
- A designer acknowledges the need to investigate compatibility issues.

10.
Concepts: interest in multi-platform support, cross-platform functionality interest, demonstrating interest in multiple platforms, expressing interest in cross-platform access
- User expresses interest in multi-platform support.
- A user expresses interest in using the software on multiple platforms (PC version).
- Users express interest in using the software on multiple platforms.
- A user expresses interest in cross-platform access or compatibility.

11.
Concepts: inquiring about platform specifics, asking for clarification on platform, platform capability inquiry
- User inquires about platform specifics.
- User inquires about the platform of the software.
- A user inquires about the capabilities or features of the software on a specific platform.

12.
Concepts: inquiry, platform question, identifying user platforms
- User asks a question about a specific platform or version.
- A user asks about a specific platform or version of the software.
- A user identifies or asks about a specific platform or version of the software.

13.
Concepts: inquires about pc version, inquires about the pc version
- A user inquires about the availability of a PC version of the platform.
- Inquiring about a specific feature or version of the software

14.
Concepts: wonders about compatibility, inquiring about platform compatibility
- User wonders about compatibility with a specific platform.
- User inquires about platform compatibility.

15.
Concepts: share potential solutions, proposing potential solutions, proposes potential solutions
- Designer shares potential solutions or ideas for a user's problem.
- Designers or users propose potential solutions to a problem or issue.
- Designers or users suggest potential solutions to technical problems.

16.
Concepts: proposing design idea, offering solutions
- Designer proposes a design idea or solution.
- The designer offers a solution or suggestion to a problem or issue.
- Designer offers a solution or answer to a user's query.

17.
Concepts: researching innovative features, researching innovative solutions
- The designer researches or explores innovative features or ideas.
- Designer researches or explores innovative solutions or ideas.

18.
Concepts: exploring solutions, exploring technical solutions
- The designer explores solutions or alternatives to a problem.
- Designer explores or discusses potential technical solutions to a problem.

19.
Concepts: problem inquiry, inquiring about user issues
- A designer inquires about specific problems or issues.
- The designer inquires about issues or problems users have encountered.

20.
Concepts: identifying pain points, inquires about pain points
- A designer identifies or discusses pain points or issues.
- Inquires about pain points or difficulties faced by users.

21.
Concepts: answer a concern, addressing user concerns, resolving user concern
- Designers respond to or address user concerns or questions.
- Designer addresses or responds to a user's concern or issue.
- Designer resolves a user concern or issue.

22.
Concepts: addressing usability, identifying usability issues
- Designer addresses usability concerns or explains design decisions related to user experience.
- Designer identifies or discusses potential usability issues.

23.
Concepts: enabling problem solving, enabling problem-solving functionality, highlighting problem-solving capabilities
- Designer enables problem-solving capabilities in the software.
- The designer mentions a feature that enables problem-solving within the application.
- Designer highlights the problem-solving capabilities of the application.
- Designer highlights problem-solving capabilities of the software.

24.
Concepts: analyzing problems, problem diagnosis
- Designer analyzes or troubleshoots a problem or issue.
- Designer provides a diagnosis or explanation for a problem or issue.

25.
Concepts: share workaround, shares technical solution, shares technical workaround
- Designer shares a workaround or temporary solution to a problem.
- The designer shares a workaround or solution to a technical issue.
- A workaround or solution is shared to overcome a technical issue.

26.
Concepts: provides workaround, identifying workarounds, illustrating technical workarounds
- The designer provides a workaround or solution to a problem.
- Designer identifies a potential workaround for a problem or limitation.
- Designer provides a technical workaround or solution.

27.
Concepts: offering alternative, suggesting alternatives, providing alternative suggestion, offers alternative solution, suggesting alternative design
- A user or the designer offers an alternative solution or approach.
- A suggestion or recommendation provided by a user or designer as an alternative solution or approach.
- User provides an alternative suggestion for a design element.
- A user or designer suggests an alternative solution to a problem.
- A suggestion or recommendation for an alternative design or approach for a specific scenario or situation.

28.
Concepts: suggesting a solution, suggesting alternative system
- User potentially suggests a solution or alternative.
- User suggests an alternative system or approach.

29.
Concepts: offers a solution, suggests technical solution
- The speaker offers a solution, provides a workaround, or suggests a fix to a problem.
- A potential solution or approach is suggested for a technical issue or problem.

30.
Concepts: suggests feature need, recognizing need for local export support
- Designer suggests a need for local export support.
- Recognizing the need for a specific feature or improvement

31.
Concepts: mentions group sharing, mentions group sharing feature, mentioning group sharing feature
- A feature or functionality that allows multiple users to share something is mentioned.
- Designer mentions a feature or functionality related to group sharing.
- The designer mentions a feature or concept that has been previously discussed.

32.
Concepts: promoting group sharing, suggesting group sharing
- Promoting the benefits of group sharing or collaboration.
- The speaker is suggesting or promoting group sharing or collaboration.
===
Here are the definitions for each code:

---
1.
Concepts: explaining technical limitations, contextualizing technical limitations
Relationship: The concepts are related in that they both involve providing reasons or explanations for technical limitations.
Criteria: The speaker explains or justifies a technical limitation or constraint, contextualizing the reasons behind it.
Phrase: Explaining technical limitations.

2.
Concepts: explaining constraints, explaining reason for constraint
Relationship: The concepts are related in that they both involve providing explanations for constraints or limitations.
Criteria: The user explains the reason for a particular constraint or limitation.
Phrase: Explaining constraints.

3.
Concepts: addressing limitations, justifying limitations
Relationship: The concepts are related in that they both involve providing explanations or justifications for limitations or constraints.
Criteria: The user or designer explains or justifies the limitations of a feature or experiment.
Phrase: Addressing limitations.

4.
Concepts: setting technical requirements, identifying technical requirements
Relationship: The concepts are related in that they both involve determining or specifying technical needs.
Criteria: The designer sets or discusses technical requirements for the software or hardware.
Phrase: Setting technical requirements.

5.
Concepts: outlining system requirements, provide system compatibility information, clarifying system requirements
Relationship: The concepts are related in that they all involve providing information about system requirements or compatibility.
Criteria: The designer outlines the system's requirements or compatibility, providing information about system compatibility or requirements.
Phrase: Outlining system requirements.

6.
Concepts: theoretical compatibility, theoretically, it should be compatible
Relationship: The concepts are related in that they both involve discussing potential or hypothetical compatibility.
Criteria: The designer mentions the theoretical compatibility requirements for the software.
Phrase: Discussing theoretical compatibility.

7.
Concepts: clarifying compatibility, system compatibility clarification, explaining compatibility issues
Relationship: The concepts are related in that they all involve providing explanations or clarifications about compatibility.
Criteria: The designer clarifies compatibility issues or system requirements, explaining compatibility issues with a specific system or platform.
Phrase: Clarifying compatibility.

8.
Concepts: confirming compatibility, confirms platform compatibility, clarifies platform compatibility
Relationship: The concepts are related in that they all involve verifying or confirming compatibility.
Criteria: The designer confirms compatibility with a specific platform or feature, clarifying whether a platform or system is compatible with the software.
Phrase: Confirming compatibility.

9.
Concepts: discussing compatibility issues, acknowledging compatibility issues
Relationship: The concepts are related in that they both involve recognizing or discussing potential compatibility problems.
Criteria: A designer discusses the need to investigate compatibility issues, acknowledging the need to investigate compatibility issues.
Phrase: Discussing compatibility issues.

10.
Concepts: interest in multi-platform support, cross-platform functionality interest, demonstrating interest in multiple platforms, expressing interest in cross-platform access
Relationship: The concepts are related in that they all involve expressing a desire for compatibility with multiple platforms.
Criteria: User expresses interest in multi-platform support, using the software on multiple platforms.
Phrase: Expressing interest in multi-platform support.

11.
Concepts: inquiring about platform specifics, asking for clarification on platform, platform capability inquiry
Relationship: The concepts are related in that they all involve seeking information about platform specifics or capabilities.
Criteria: User inquires about platform specifics, asking about the platform of the software.
Phrase: Inquiring about platform specifics.

12.
Concepts: inquiry, platform question, identifying user platforms
Relationship: The concepts are related in that they all involve asking questions or seeking information about platforms.
Criteria: User asks a question about a specific platform or version, identifying or asking about a specific platform or version of the software.
Phrase: Inquiring about platforms.

13.
Concepts: inquires about pc version, inquires about the pc version
Relationship: The concepts are related in that they both involve seeking information about a specific platform or version.
Criteria: A user inquires about the availability of a PC version of the platform.
Phrase: Inquiring about PC version.

14.
Concepts: wonders about compatibility, inquiring about platform compatibility
Relationship: The concepts are related in that they both involve seeking information about compatibility.
Criteria: User wonders about compatibility with a specific platform, inquiring about platform compatibility.
Phrase: Inquiring about compatibility.

15.
Concepts: share potential solutions, proposing potential solutions, proposes potential solutions
Relationship: The concepts are related in that they all involve suggesting or sharing possible solutions.
Criteria: Designer shares potential solutions or ideas for a user's problem.
Phrase: Proposing potential solutions.

16.
Concepts: proposing design idea, offering solutions
Relationship: The concepts are related in that they both involve suggesting or offering ideas or solutions.
Criteria: Designer proposes a design idea or solution, offering a solution or suggestion to a problem or issue.
Phrase: Proposing design ideas.

17.
Concepts: researching innovative features, researching innovative solutions
Relationship: The concepts are related in that they both involve exploring new or innovative ideas.
Criteria: The designer researches or explores innovative features or ideas.
Phrase: Researching innovative features.

18.
Concepts: exploring solutions, exploring technical solutions
Relationship: The concepts are related in that they both involve investigating or exploring possible solutions.
Criteria: The designer explores solutions or alternatives to a problem.
Phrase: Exploring solutions.

19.
Concepts: problem inquiry, inquiring about user issues
Relationship: The concepts are related in that they both involve seeking information about problems or issues.
Criteria: A designer inquires about specific problems or issues.
Phrase: Inquiring about problems.

20.
Concepts: identifying pain points, inquires about pain points
Relationship: The concepts are related in that they both involve recognizing or seeking information about difficulties or challenges.
Criteria: A designer identifies or discusses pain points or issues, inquiring about pain points or difficulties faced by users.
Phrase: Identifying pain points.

21.
Concepts: answer a concern, addressing user concerns, resolving user concern
Relationship: The concepts are related in that they all involve responding to or addressing user concerns or issues.
Criteria: Designers respond to or address user concerns or questions, resolving a user concern or issue.
Phrase: Addressing user concerns.

22.
Concepts: addressing usability, identifying usability issues
Relationship: The concepts are related in that they both involve recognizing or addressing usability concerns.
Criteria: Designer addresses usability concerns or explains design decisions related to user experience, identifying or discussing potential usability issues.
Phrase: Addressing usability.

23.
Concepts: enabling problem solving, enabling problem-solving functionality, highlighting problem-solving capabilities
Relationship: The concepts are related in that they all involve providing capabilities or features that facilitate problem-solving.
Criteria: Designer enables problem-solving capabilities in the software, highlighting the problem-solving capabilities of the application.
Phrase: Enabling problem-solving.

24.
Concepts: analyzing problems, problem diagnosis
Relationship: The concepts are related in that they both involve examining or diagnosing problems.
Criteria: Designer analyzes or troubleshoots a problem or issue, providing a diagnosis or explanation for a problem or issue.
Phrase: Analyzing problems.

25.
Concepts: share workaround, shares technical solution, shares technical workaround
Relationship: The concepts are related in that they all involve providing temporary or alternative solutions.
Criteria: Designer shares a workaround or temporary solution to a problem.
Phrase: Sharing workarounds.

26.
Concepts: provides workaround, identifying workarounds, illustrating technical workarounds
Relationship: The concepts are related in that they all involve providing or identifying alternative solutions.
Criteria: The designer provides a workaround or solution to a problem, identifying a potential workaround for a problem or limitation.
Phrase: Providing workarounds.

27.
Concepts: offering alternative, suggesting alternatives, providing alternative suggestion, offers alternative solution, suggesting alternative design
Relationship: The concepts are related in that they all involve suggesting or providing alternative solutions or approaches.
Criteria: A user or the designer offers an alternative solution or approach, providing a suggestion or recommendation for an alternative solution or approach.
Phrase: Offering alternatives.

28.
Concepts: suggesting a solution, suggesting alternative system
Relationship: The concepts are related in that they both involve suggesting alternative solutions or approaches.
Criteria: User potentially suggests a solution or alternative, suggesting an alternative system or approach.
Phrase: Suggesting solutions.

29.
Concepts: offers a solution, suggests technical solution
Relationship: The concepts are related in that they both involve providing or suggesting solutions to problems.
Criteria: The speaker offers a solution, provides a workaround, or suggests a fix to a problem.
Phrase: Offering solutions.

30.
Concepts: suggests feature need, recognizing need for local export support
Relationship: The concepts are related in that they both involve recognizing or suggesting the need for a specific feature or improvement.
Criteria: Designer suggests a need for local export support, recognizing the need for a specific feature or improvement.
Phrase: Suggesting feature needs.

31.
Concepts: mentions group sharing, mentions group sharing feature, mentioning group sharing feature
Relationship: The concepts are related in that they all involve discussing or mentioning group sharing or collaboration.
Criteria: A feature or functionality that allows multiple users to share something is mentioned, mentioning a feature or concept that has been previously discussed.
Phrase: Mentioning group sharing.

32.
Concepts: promoting group sharing, suggesting group sharing
Relationship: The concepts are related in that they both involve promoting or suggesting group sharing or collaboration.
Criteria: Promoting the benefits of group sharing or collaboration, suggesting or promoting group sharing or collaboration.
Phrase: Promoting group sharing.