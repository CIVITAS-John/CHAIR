You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: announcing updates, making announcements
- A designer announces software updates or new versions.
- A designer makes an announcement about new features or updates.

2.
Concepts: sharing update information, sharing development updates
- A designer shares information about upcoming features or updates.
- A designer shares information about current feature development.

3.
Concepts: sharing update planning, shares development plans
- A designer shares future plans or potential updates.
- A designer shares or discusses a development plan or roadmap.

4.
Concepts: providing explanations, provide technical details
- Designers provide additional details or explanations about a specific feature or functionality.
- A designer or developer provides technical details or explanations about the software.

5.
Concepts: technical question, requesting technical help
- A user asks a technical question about the software or its functionality.
- Users ask for help or assistance with using the software.

6.
Concepts: praising software, expressing appreciation
- A user expresses praise or admiration for the software or its features.
- A user expresses satisfaction or praise for the software.

7.
Concepts: encouragement, expressing community support
- A user offers encouragement or support to the designer or development team.
- Users express support, encouragement, or appreciation for the designers' efforts.

8.
Concepts: expressing gratitude, user interaction and gratitude
- A user or designer expresses gratitude or appreciation.
- A user interacts with the designer and expresses gratitude.

9.
Concepts: responding to feedback, responding to user feedback
- Instances where designers respond to user feedback or suggestions.
- Users provide feedback or ask questions that influence the design process.

10.
Concepts: accepting suggestions, proposing design suggestions
- A designer accepts a suggestion or idea from a user.
- A user or designer proposes or suggests a new feature or functionality.

11.
Concepts: inviting feedback
- An invitation is extended to ask more questions or share concerns.
- The designer invites feedback or suggestions.

12.
Concepts: considering usability
- Designers consider or discuss user experience and usability.
- A user describes the specific context in which they use the software and its usability.
===
Here are the definitions for each code:

---
1.
Concepts: announcing updates, making announcements
Relationship: The concepts are related as they both involve the designer making public statements about the software.
Criteria: A designer publicly announces or makes known software updates or new features.
Phrase: Announcing updates

2.
Concepts: sharing update information, sharing development updates
Relationship: The concepts are related as they both involve the designer providing information about the software's development.
Criteria: A designer shares information about the software's development or updates.
Phrase: Sharing update information

3.
Concepts: sharing update planning, shares development plans
Relationship: The concepts are related as they both involve the designer making public their plans for the software's development.
Criteria: A designer shares plans or potential updates for the software's development.
Phrase: Sharing development plans

4.
Concepts: providing explanations, provide technical details
Relationship: The concepts are related as they both involve providing additional information about the software.
Criteria: Designers provide additional technical details or explanations about the software.
Phrase: Providing technical explanations

5.
Concepts: technical question, requesting technical help
Relationship: The concepts are related as they both involve users seeking assistance or information about the software.
Criteria: A user asks for technical help or clarification about the software.
Phrase: Requesting technical help

6.
Concepts: praising software, expressing appreciation
Relationship: The concepts are related as they both involve users expressing positive sentiments about the software.
Criteria: A user expresses praise or appreciation for the software or its features.
Phrase: Expressing appreciation

7.
Concepts: encouragement, expressing community support
Relationship: The concepts are related as they both involve users showing support for the designers or development team.
Criteria: A user offers encouragement or support to the designers or development team.
Phrase: Expressing community support

8.
Concepts: expressing gratitude, user interaction and gratitude
Relationship: The concepts are related as they both involve expressions of appreciation or gratitude.
Criteria: A user or designer expresses gratitude or appreciation.
Phrase: Expressing gratitude

9.
Concepts: responding to feedback, responding to user feedback
Relationship: The concepts are related as they both involve designers reacting to user input.
Criteria: Designers respond to user feedback or suggestions.
Phrase: Responding to feedback

10.
Concepts: accepting suggestions, proposing design suggestions
Relationship: The concepts are related as they both involve the exchange of ideas about the software's development.
Criteria: A designer accepts or considers a user's suggestion or idea.
Phrase: Accepting suggestions

11.
Concepts: inviting feedback
Relationship: N/A
Criteria: The designer invites users to provide feedback or suggestions.
Phrase: Inviting feedback

12.
Concepts: considering usability
Relationship: The concepts are related as they both involve thinking about the user's experience with the software.
Criteria: Designers consider or discuss the software's usability or user experience.
Phrase: Considering usability