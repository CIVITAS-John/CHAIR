You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (26 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
26. 
Concepts: {Repeat the input 26}
Relationship: {What is logical relationship between concepts in code 26, or N/A if not applicable}
Criteria: {Who did what, and how for code 26}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: dislikes limited options, critiques limited options
- Participants perceive limitations in AI-provided options.
- The participant critiques the limited options or functionality of AI-driven interfaces.

2.
Concepts: identifies input limitations, identifies ai limitations
- Participants identify limitations or constraints of the AI-driven interface.
- Participants identify the limitations of AI, including its inability to understand certain tasks or provide accurate results.

3.
Concepts: notes lack of external verification, critiques current ai limitations
- The participant notes the lack of external verification of AI-generated code.
- Participants note the current limitations of AI-generated code, such as lack of external verification.

4.
Concepts: expresses frustration with ai, expresses frustration with error messages
- Participants express frustration or annoyance with the AI-driven interface or error messages.
- Participants express frustration with unclear error messages.

5.
Concepts: encounters capacity limitations, encounters long code limitations
- Participants encounter limitations in the capacity of AI to process long code pieces.
- Participants encounter limitations in working with long code pieces or large projects using AI-driven interfaces.

6.
Concepts: saves time, offers time-saving benefits
- AI-driven interfaces save time, which is valued by participants.
- AI-driven interfaces save time, which is highlighted by participants.

7.
Concepts: maintainable code, discusses code quality and complexity
- The participant values maintainable code, discussing code complexity and quality.
- Participants discuss the importance of code quality, readability, and maintainability.

8.
Concepts: ai ability - translation, jargon translation
- Envisioning AI's ability to translate jargons between different sub-groups
- Discusses the potential of AI to translate jargon between different sub-groups working in the same systems.

9.
Concepts: equation development, uses ai for equation development and integration
- Participant uses the AI interface to develop equations or formulas.
- Participant uses AI for equation development and integration into models.

10.
Concepts: suggests ai's potential as a peer programmer, discusses peer programming and ai's potential role
- Participant suggests AI's potential as a peer programmer.
- Participant discusses peer programming and AI's potential role.

11.
Concepts: uses intuitive design, provides an intuitive interface
- The AI system is easy to use and has an intuitive design.
- AI-driven interfaces are direct, intuitive, and easy to use.

12.
Concepts: clearness, appreciates clear, non-technical explanations from ai
- The participant appreciates the clarity or simplicity of the AI's explanations or error messages.
- Participant appreciates clear, non-technical explanations from AI.

13.
Concepts: clarifies errors, provides clarification
- LLM-driven interfaces clarify errors, which is valued by participants.
- AI-driven interfaces provide clarification on parameters and errors, which is appreciated by participants.

14.
Concepts: values customizable options, offers customization options
- Customizable options are valued in AI-driven interfaces.
- Participants desire more flexibility and customization options in AI-driven interfaces.

15.
Concepts: offers timely feedback, provides immediate feedback
- AI-driven interfaces provide timely feedback, which is appreciated by participants.
- AI-driven interfaces provide immediate feedback, which is valued by participants.

16.
Concepts: context inference, appreciates context understanding
- Participants appreciate AI's ability to infer context and understand their needs.
- AI infers the user's need from context without explicit instruction.

17.
Concepts: troubleshooting capability, praises ai troubleshooting
- Participants appreciate ChatGPT's troubleshooting capability.
- Participants praise AI-driven interfaces for their effective troubleshooting capabilities.

18.
Concepts: seeks help from ai, seeks ai help with troubleshooting
- Participants seek help from AI, asking follow-up questions and copying and pasting error messages.
- Participants seek AI help with troubleshooting.

19.
Concepts: sees ai as a tool for code optimization, highlights ai's ability for code optimization
- Participant sees AI as a tool for code optimization.
- User highlights AI's ability for code optimization.

20.
Concepts: uses ai for code analysis and feedback, evaluates ai-generated code in detail
- Participant uses AI for code analysis and feedback.
- Participant engages in a detailed evaluation of AI-generated code.

21.
Concepts: uses ai-generated code as a reference, uses ai-generated code as a reference, avoiding direct copying
- Participant uses AI-generated code as a reference.
- Participant uses AI-generated code as a reference, avoiding direct copying.

22.
Concepts: adapts to ai-generated code, customizes ai-generated code
- Participant adapts to AI-generated code.
- Participants modify AI-generated code to fit their needs.

23.
Concepts: emphasizes need for expertise, requires expertise for debugging
- The participant emphasizes the need for expertise to understand errors and debug them.
- Participants recognize the need for expertise to understand and debug AI-generated code.

24.
Concepts: debugs ai-generated code, experiences debugging challenges, reviews and debugs ai-generated code
- Participants interact with AI-generated code to identify and fix errors.
- Participants experience debugging challenges with AI-generated code.
- Participant reviews and debugs code generated by AI to identify errors.

25.
Concepts: interprets ai mistakes, manually fixes ai code errors
- Participants interpret AI-generated code to fix mistakes.
- Participants manually fix errors in AI-generated code.

26.
Concepts: augments human capabilities
- The code aims to augment human capabilities.
- Participants value the augmentation of human capabilities through AI-driven interfaces.
===
Here are the definitions for each code:

---
1.
Concepts: dislikes limited options, critiques limited options
Relationship: The participant's dislike of limited options is a direct result of their critique of the limited functionality of AI-driven interfaces.
Criteria: Participants critique AI-driven interfaces for limited options.
Phrase: Critiques AI's limited options.

2.
Concepts: identifies input limitations, identifies ai limitations
Relationship: The participant's identification of input limitations is closely related to their recognition of AI's limitations.
Criteria: Participants identify limitations of AI-driven interfaces.
Phrase: Identifies AI limitations.

3.
Concepts: notes lack of external verification, critiques current ai limitations
Relationship: The participant's note on the lack of external verification is a specific example of their critique of AI's current limitations.
Criteria: Participants critique AI-driven interfaces for lack of external verification.
Phrase: Critiques AI's lack of verification.

4.
Concepts: expresses frustration with ai, expresses frustration with error messages
Relationship: The participant's frustration with AI is directly related to their frustration with unclear error messages.
Criteria: Participants express frustration with AI-driven interfaces.
Phrase: Expresses frustration with AI.

5.
Concepts: encounters capacity limitations, encounters long code limitations
Relationship: The participant's encounter with capacity limitations is a specific example of their experience with the limitations of working with long code pieces.
Criteria: Participants encounter limitations in AI-driven interfaces.
Phrase: Encounters capacity limitations.

6.
Concepts: saves time, offers time-saving benefits
Relationship: The participant's appreciation of time-saving benefits is a direct result of AI-driven interfaces saving time.
Criteria: AI-driven interfaces save time.
Phrase: Saves time.

7.
Concepts: maintainable code, discusses code quality and complexity
Relationship: The participant's value on maintainable code is closely related to their discussion of code quality and complexity.
Criteria: Participants value maintainable code.
Phrase: Values maintainable code.

8.
Concepts: ai ability - translation, jargon translation
Relationship: The participant's envisioning of AI's ability to translate jargon is a specific example of their recognition of AI's potential role.
Criteria: Participants envision AI's potential role.
Phrase: Envisions AI's translation ability.

9.
Concepts: equation development, uses ai for equation development and integration
Relationship: The participant's use of AI for equation development is a direct application of AI's capabilities.
Criteria: Participants use AI for equation development.
Phrase: Uses AI for equation development.

10.
Concepts: suggests ai's potential as a peer programmer, discusses peer programming and ai's potential role
Relationship: The participant's suggestion of AI's potential as a peer programmer is closely related to their discussion of AI's role.
Criteria: Participants discuss AI's potential role.
Phrase: Discusses AI's potential role.

11.
Concepts: uses intuitive design, provides an intuitive interface
Relationship: The participant's appreciation of intuitive design is a direct result of AI-driven interfaces being easy to use.
Criteria: AI-driven interfaces are intuitive.
Phrase: Provides intuitive interface.

12.
Concepts: clearness, appreciates clear, non-technical explanations from ai
Relationship: The participant's appreciation of clear explanations is a direct result of AI-driven interfaces providing clear, non-technical explanations.
Criteria: Participants appreciate clear explanations.
Phrase: Appreciates clear explanations.

13.
Concepts: clarifies errors, provides clarification
Relationship: The participant's appreciation of error clarification is a direct result of AI-driven interfaces providing clarification.
Criteria: AI-driven interfaces clarify errors.
Phrase: Clarifies errors.

14.
Concepts: values customizable options, offers customization options
Relationship: The participant's value on customizable options is a direct result of AI-driven interfaces offering customization options.
Criteria: Participants value customization options.
Phrase: Values customization options.

15.
Concepts: offers timely feedback, provides immediate feedback
Relationship: The participant's appreciation of timely feedback is a direct result of AI-driven interfaces providing immediate feedback.
Criteria: AI-driven interfaces provide timely feedback.
Phrase: Provides timely feedback.

16.
Concepts: context inference, appreciates context understanding
Relationship: The participant's appreciation of context understanding is a direct result of AI-driven interfaces inferring context.
Criteria: AI-driven interfaces infer context.
Phrase: Infers context.

17.
Concepts: troubleshooting capability, praises ai troubleshooting
Relationship: The participant's praise of AI troubleshooting is a direct result of AI-driven interfaces having a troubleshooting capability.
Criteria: AI-driven interfaces have troubleshooting capabilities.
Phrase: Praises AI troubleshooting.

18.
Concepts: seeks help from ai, seeks ai help with troubleshooting
Relationship: The participant's seeking of help from AI is a direct result of their need for AI's troubleshooting capabilities.
Criteria: Participants seek AI help.
Phrase: Seeks AI help.

19.
Concepts: sees ai as a tool for code optimization, highlights ai's ability for code optimization
Relationship: The participant's recognition of AI as a tool for code optimization is a direct result of AI's ability to optimize code.
Criteria: Participants recognize AI's ability to optimize code.
Phrase: Recognizes AI's optimization ability.

20.
Concepts: uses ai for code analysis and feedback, evaluates ai-generated code in detail
Relationship: The participant's use of AI for code analysis is a direct application of AI's capabilities.
Criteria: Participants use AI for code analysis.
Phrase: Uses AI for code analysis.

21.
Concepts: uses ai-generated code as a reference, uses ai-generated code as a reference, avoiding direct copying
Relationship: The participant's use of AI-generated code as a reference is a direct result of their appreciation of AI's capabilities.
Criteria: Participants use AI-generated code as a reference.
Phrase: Uses AI-generated code as a reference.

22.
Concepts: adapts to ai-generated code, customizes ai-generated code
Relationship: The participant's adaptation to AI-generated code is a direct result of their need to customize the code.
Criteria: Participants adapt to AI-generated code.
Phrase: Adapts to AI-generated code.

23.
Concepts: emphasizes need for expertise, requires expertise for debugging
Relationship: The participant's emphasis on the need for expertise is a direct result of their recognition of the need for expertise in debugging.
Criteria: Participants emphasize the need for expertise.
Phrase: Emphasizes need for expertise.

24.
Concepts: debugs ai-generated code, experiences debugging challenges, reviews and debugs ai-generated code
Relationship: The participant's debugging of AI-generated code is a direct result of their experience with debugging challenges.
Criteria: Participants debug AI-generated code.
Phrase: Debugs AI-generated code.

25.
Concepts: interprets ai mistakes, manually fixes ai code errors
Relationship: The participant's interpretation of AI mistakes is a direct result of their need to manually fix errors.
Criteria: Participants manually fix AI-generated code errors.
Phrase: Fixes AI code errors.

26.
Concepts: augments human capabilities
Relationship: N/A
Criteria: AI-driven interfaces augment human capabilities.
Phrase: Augments human capabilities.