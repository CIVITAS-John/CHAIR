You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (18 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
18. 
Concepts: {Repeat the input 18}
Relationship: {What is logical relationship between concepts in code 18, or N/A if not applicable}
Criteria: {Who did what, and how for code 18}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: avoiding direct copying, preferring to copy ai output
- Users avoid direct code copying from AI.
- Preferring to copy and paste AI-generated code for implementation.

2.
Concepts: demonstrating targeted use of ai, seeking specific syntax structures
- The participant demonstrates targeted use of AI, such as searching for specific syntax structures.
- The participant seeks specific syntax structures or explanations from the LLM-driven interface.

3.
Concepts: syntax structure exploration, seeking specific syntax information
- Seeking specific syntax structures from AI-generated code
- Interviewee seeks specific syntax information from AI-generated code.

4.
Concepts: seeking ai assistance for syntax, seeking ai assistance with code recall
- Users utilize AI for syntax reminders to overcome memory lapses.
- Expressions of the need for AI assistance with code recall or syntax.

5.
Concepts: syntax support, seeking specific syntax help
- Forgets syntax occasionally and appreciates AI assistance.
- Requests for specific syntax help or guidance from AI.

6.
Concepts: cross-language capabilities, ai-assisted cross-language translation, translating code from other languages
- The AI is able to assist with code in multiple languages.
- The code relies on AI for cross-language model translation.
- The participant highlights the ability of the LLM-driven interface to translate code from other programming languages.

7.
Concepts: use ai for agent-based modeling, establish a clear process for building abms with ai
- Participants use AI for streamlining agent-based modeling.
- Users establish a clear process for building agent-based models using AI tools.

8.
Concepts: relying on ai for modeling aspects, relying on ai for specific tasks
- Relying on AI for specific modeling aspects
- Relies on AI for specific tasks, such as equation development

9.
Concepts: creates equations with ai, use ai for equation development
- Users find AI helpful for creating equations.
- Users integrate AI in agent-based models for equation development.

10.
Concepts: thorough code review, engaging with ai output, reading code in detail
- Reads and evaluates AI-generated code carefully.
- Individuals engage with AI output, reading and evaluating the code.
- Individuals read the generated code in detail to understand its functionality.

11.
Concepts: manual debugging, manual code review
- Reads and debugs code when AI-generated code fails.
- Manually reading through code to identify errors or issues.

12.
Concepts: understanding ai logic, analyzes ai-generated code
- Users seek to understand AI logic and summarize AI-generated code.
- Users analyze AI-generated code to understand its functionality.

13.
Concepts: ai understanding reflection, ai interpretation analysis, ai understanding evaluation
- Thinks about how the AI understands the request
- Comments on AI's interpretation of code, summarizing and thinking about how the AI understood the request.
- Evaluating AI's understanding of user requests and code generation.

14.
Concepts: code comments and documentation, appreciating code organization and documentation
- The participant comments on the LLM-driven interface's ability to provide comments and documentation in the generated code.
- The participant appreciates the code organization and documentation features of the LLM-driven interface.

15.
Concepts: appreciating ai feedback, appreciating annotated ai-generated code
- Users appreciate feedback from LLM-driven interfaces for code optimization.
- Users appreciate AI-generated code that includes annotations.

16.
Concepts: code worked out of the box, praises out of the box functionality
- Sharing experiences where AI-generated code worked correctly out of the box.
- Praising the out-of-the-box functionality of ChatGPT, appreciating its ability to provide working code.

17.
Concepts: enjoying guided coding experience, evaluating ai coding abilities positively
- The user enjoys the guided coding experience provided by the AI.
- Participants positively evaluate the AI's ability to assist with coding tasks.

18.
Concepts: describing ai-assisted coding, envisioning ai as coding assistant
- Users describe AI-assisted coding and consider AI for code optimization.
- The quote envisions AI as a coding assistant to help optimize code.
===
Here are the definitions for each code:

---
1.
Concepts: avoiding direct copying, preferring to copy ai output
Relationship: The concepts are related in that users avoid direct copying but still find value in copying AI-generated code for implementation.
Criteria: Users who avoid direct copying of AI-generated code, but instead, prefer to copy and paste it for implementation.
Phrase: Prefer to copy AI-generated code.

2.
Concepts: demonstrating targeted use of ai, seeking specific syntax structures
Relationship: The concepts are related in that users demonstrate targeted use of AI by seeking specific syntax structures.
Criteria: Users who demonstrate targeted use of AI by seeking specific syntax structures or explanations from the LLM-driven interface.
Phrase: Seek specific syntax structures from AI.

3.
Concepts: syntax structure exploration, seeking specific syntax information
Relationship: The concepts are related in that users explore syntax structures to seek specific syntax information.
Criteria: Users who seek specific syntax structures or information from AI-generated code.
Phrase: Explore syntax structures in AI-generated code.

4.
Concepts: seeking ai assistance for syntax, seeking ai assistance with code recall
Relationship: The concepts are related in that users seek AI assistance for both syntax reminders and code recall.
Criteria: Users who utilize AI for syntax reminders and code recall.
Phrase: Seek AI assistance for syntax and code recall.

5.
Concepts: syntax support, seeking specific syntax help
Relationship: The concepts are related in that users seek syntax support by requesting specific syntax help.
Criteria: Users who forget syntax occasionally and appreciate AI assistance for specific syntax help.
Phrase: Seek specific syntax help from AI.

6.
Concepts: cross-language capabilities, ai-assisted cross-language translation, translating code from other languages
Relationship: The concepts are related in that AI-assisted cross-language translation enables translating code from other languages.
Criteria: Users who appreciate AI-assisted cross-language translation for translating code from other programming languages.
Phrase: Translate code across languages with AI.

7.
Concepts: use ai for agent-based modeling, establish a clear process for building abms with ai
Relationship: The concepts are related in that users use AI for streamlining agent-based modeling and establishing a clear process.
Criteria: Users who use AI for streamlining agent-based modeling and establishing a clear process for building agent-based models.
Phrase: Use AI for agent-based modeling.

8.
Concepts: relying on ai for modeling aspects, relying on ai for specific tasks
Relationship: The concepts are related in that users rely on AI for specific modeling aspects and tasks.
Criteria: Users who rely on AI for specific modeling aspects and tasks.
Phrase: Rely on AI for specific tasks.

9.
Concepts: creates equations with ai, use ai for equation development
Relationship: The concepts are related in that users create equations with AI and use AI for equation development.
Criteria: Users who find AI helpful for creating equations and integrate AI in agent-based models for equation development.
Phrase: Create equations with AI.

10.
Concepts: thorough code review, engaging with ai output, reading code in detail
Relationship: The concepts are related in that users engage with AI output by thoroughly reviewing and reading code in detail.
Criteria: Users who read and evaluate AI-generated code carefully, engaging with AI output.
Phrase: Thoroughly review AI-generated code.

11.
Concepts: manual debugging, manual code review
Relationship: The concepts are related in that users manually debug and review code.
Criteria: Users who manually read through code to identify errors or issues.
Phrase: Manually debug code.

12.
Concepts: understanding ai logic, analyzes ai-generated code
Relationship: The concepts are related in that users seek to understand AI logic by analyzing AI-generated code.
Criteria: Users who analyze AI-generated code to understand its functionality.
Phrase: Analyze AI-generated code.

13.
Concepts: ai understanding reflection, ai interpretation analysis, ai understanding evaluation
Relationship: The concepts are related in that users reflect on AI understanding by analyzing and evaluating its interpretation.
Criteria: Users who think about how the AI understands the request, evaluating AI's understanding of user requests and code generation.
Phrase: Evaluate AI's understanding.

14.
Concepts: code comments and documentation, appreciating code organization and documentation
Relationship: The concepts are related in that users appreciate code organization and documentation through code comments.
Criteria: Users who appreciate the code organization and documentation features of the LLM-driven interface.
Phrase: Appreciate code organization and documentation.

15.
Concepts: appreciating ai feedback, appreciating annotated ai-generated code
Relationship: The concepts are related in that users appreciate AI feedback through annotated AI-generated code.
Criteria: Users who appreciate feedback from LLM-driven interfaces for code optimization.
Phrase: Appreciate AI feedback.

16.
Concepts: code worked out of the box, praises out of the box functionality
Relationship: The concepts are related in that users praise out-of-the-box functionality when code works correctly.
Criteria: Users who share experiences where AI-generated code worked correctly out of the box.
Phrase: Praise out-of-the-box functionality.

17.
Concepts: enjoying guided coding experience, evaluating ai coding abilities positively
Relationship: The concepts are related in that users enjoy guided coding experiences and positively evaluate AI's coding abilities.
Criteria: Users who enjoy the guided coding experience provided by the AI and positively evaluate its coding abilities.
Phrase: Enjoy guided coding experience.

18.
Concepts: describing ai-assisted coding, envisioning ai as coding assistant
Relationship: The concepts are related in that users describe AI-assisted coding and envision AI as a coding assistant.
Criteria: Users who describe AI-assisted coding and envision AI as a coding assistant to help optimize code.
Phrase: Envision AI as coding assistant.