You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: planning to consult community, committing to community consultation
- The designer expresses intention to consult the community in the future.
- The designer commits to consulting the community.

2.
Concepts: plans future updates, mentions future updates
- Designer plans or commits to a future update or feature.
- Designer mentions or confirms a future update or feature.

3.
Concepts: communicating complexity, acknowledge and explain complexity
- Designers mention or communicate the complexity of updates or tasks.
- Designer explains and acknowledges complexity of a task or issue.

4.
Concepts: ongoing development, indicating ongoing work
- Acknowledging ongoing work or development on a specific part or feature.
- Designers indicate ongoing work or active development on specific aspects.

5.
Concepts: provides status updates, provides development updates
- Designer provides updates on progress or status.
- Designer provides updates and communicates progress.

6.
Concepts: shares updates, shares update timelines
- A designer shares updates and provides detailed information.
- A designer shares or announces a timeline for updates.

7.
Concepts: explains versions, provides version updates
- A designer explains versions and clarifies version information.
- A designer provides version update notes.

8.
Concepts: announces new versions, announces releases or updates
- Designer announces a new software version.
- A designer announces or updates the software version of the Physics Lab.

9.
Concepts: announces updates, informs about updates
- A designer announces an update.
- A designer informs about updates.

10.
Concepts: indicates significant changes, emphasizes update significance
- A designer indicates significant changes.
- A designer emphasizes the significance of an update.

11.
Concepts: prioritizes development tasks, prioritizing task completion
- The designer prioritizes development tasks or goals.
- Designer prioritizes task completion and shares the order of tasks.

12.
Concepts: plans timelines, provides timelines
- A designer plans or schedules a timeline for a task or release.
- A designer provides information about timelines or schedules.

13.
Concepts: outlines advanced feature plans, outlining features with simulation details
- The designer outlines or plans advanced simulation features.
- Designer outlines features and provides simulation details.

14.
Concepts: reassures users, assure planned features
- A designer reassures users about upcoming features or updates.
- Designer assures users that planned features are in development.

15.
Concepts: explaining limitations, mentioning team limitations
- Designers explain limitations or constraints of the software or design.
- Designers mention limitations or constraints of the development team.

16.
Concepts: sharing workarounds, acknowledge workaround
- Designers share or suggest workarounds for known issues.
- Designer acknowledges a workaround for a specific issue.

17.
Concepts: considering compatibility, suggesting compatibility checks
- Designers consider or confirm system compatibility.
- Designer or user suggests checking the compatibility of the system.

18.
Concepts: collaborative communication, reinforcing communication
- Reinforcing user-designer communication or collaboration
- Users or designers reinforce communication, understanding, or agreement.

19.
Concepts: requesting clarification, seeking design input through clarification
- Users or designers request clarification on user feedback.
- Designer seeks clarification on specific details or preferences from users.

20.
Concepts: clarifying design choices, providing clarification to answer questions
- Designer clarifies design choices or decisions.
- Designer provides clarification to answer questions.

21.
Concepts: promoting collaboration and collective input, ensure collective decision-making and involve users
- Designer promotes collaboration or gathering opinions from users.
- Designer ensures collective decision-making and involves users in decision-making.

22.
Concepts: acknowledging users, acknowledging user responses and experiences
- Designers respond to or acknowledge user input.
- Designer acknowledges user responses or experiences.

23.
Concepts: integrate diverse feedback, accept and incorporate user feedback
- Designer integrates diverse feedback from users.
- Designer accepts and incorporates user feedback.

24.
Concepts: gathering user context, showing interest in user context and background
- Designers consider, gather, or request context about users or their environment.
- Designer shows interest in user context or background.

25.
Concepts: improving usability, considering usability
- Designers aim to improve usability to meet user needs.
- Designers consider usability and usefulness.

26.
Concepts: discussing input methods, designer's input method inquiry
- Designers discuss or address input methods for different devices.
- Asking questions about input methods in a design.

27.
Concepts: promoting transparency, maintain and demonstrate transparency
- Designer promotes transparency and openness
- Designer maintains and demonstrates transparency in development process.

28.
Concepts: reflecting on user input, user experience reflection
- Designers reflect on user input or feedback.
- Designer reflects on the user experience or usability of the software.

29.
Concepts: suggesting manual adjustment options, highlighting manual adjustment options
- Designer suggests manual adjustment options.
- Designer highlights manual adjustment options in software.

30.
Concepts: sharing visual aids, provide visual aids and emphasize visual representations
- The designer shares visual aids to illustrate concepts or ideas.
- Designer provides visual aids and emphasizes visual representations.

31.
Concepts: explain technical artifacts and provide technical information, explain operational details and provide technical explanations
- Designer explains technical artifacts and provides technical information.
- Designer explains operational details and provides technical explanations.

32.
Concepts: inform about features and provide feature details, explain, clarify, and explain features and functionality
- Designer informs about features and provides feature details.
- Designer explains, clarifies, and explains features and functionality.
===
Here are the definitions for each code:

---
1.
Concepts: planning to consult community, committing to community consultation
Relationship: The designer's intention to consult the community leads to a commitment to do so.
Criteria: Designer expresses intention to consult the community and commits to it.
Phrase: Committing to community consultation.

2.
Concepts: plans future updates, mentions future updates
Relationship: Planning and mentioning updates are closely related as they both indicate a future action.
Criteria: Designer plans or mentions a future update or feature.
Phrase: Planning future updates.

3.
Concepts: communicating complexity, acknowledge and explain complexity
Relationship: Communicating complexity involves acknowledging and explaining it.
Criteria: Designer communicates the complexity of updates or tasks and explains it.
Phrase: Communicating complexity.

4.
Concepts: ongoing development, indicating ongoing work
Relationship: Ongoing development implies indicating ongoing work.
Criteria: Designer acknowledges ongoing work or development on a specific part or feature.
Phrase: Indicating ongoing development.

5.
Concepts: provides status updates, provides development updates
Relationship: Providing status updates and development updates are related as they both provide information on progress.
Criteria: Designer provides updates on progress or status.
Phrase: Providing updates.

6.
Concepts: shares updates, shares update timelines
Relationship: Sharing updates involves sharing timelines.
Criteria: Designer shares updates and provides detailed information.
Phrase: Sharing updates.

7.
Concepts: explains versions, provides version updates
Relationship: Explaining versions involves providing version updates.
Criteria: Designer explains versions and provides version update notes.
Phrase: Explaining versions.

8.
Concepts: announces new versions, announces releases or updates
Relationship: Announcing new versions involves announcing releases or updates.
Criteria: Designer announces a new software version.
Phrase: Announcing new versions.

9.
Concepts: announces updates, informs about updates
Relationship: Announcing updates involves informing about updates.
Criteria: Designer announces an update and informs about it.
Phrase: Announcing updates.

10.
Concepts: indicates significant changes, emphasizes update significance
Relationship: Indicating significant changes involves emphasizing the significance of an update.
Criteria: Designer indicates significant changes and emphasizes the significance of an update.
Phrase: Emphasizing update significance.

11.
Concepts: prioritizes development tasks, prioritizing task completion
Relationship: Prioritizing development tasks involves prioritizing task completion.
Criteria: Designer prioritizes development tasks and shares the order of tasks.
Phrase: Prioritizing tasks.

12.
Concepts: plans timelines, provides timelines
Relationship: Planning timelines involves providing timelines.
Criteria: Designer plans or schedules a timeline for a task or release.
Phrase: Planning timelines.

13.
Concepts: outlines advanced feature plans, outlining features with simulation details
Relationship: Outlining advanced feature plans involves outlining features with simulation details.
Criteria: Designer outlines advanced simulation features and provides simulation details.
Phrase: Outlining feature plans.

14.
Concepts: reassures users, assure planned features
Relationship: Reassuring users involves assuring them of planned features.
Criteria: Designer reassures users about upcoming features or updates.
Phrase: Reassuring users.

15.
Concepts: explaining limitations, mentioning team limitations
Relationship: Explaining limitations involves mentioning team limitations.
Criteria: Designer explains limitations or constraints of the software or design.
Phrase: Explaining limitations.

16.
Concepts: sharing workarounds, acknowledge workaround
Relationship: Sharing workarounds involves acknowledging a workaround.
Criteria: Designer shares or suggests workarounds for known issues.
Phrase: Sharing workarounds.

17.
Concepts: considering compatibility, suggesting compatibility checks
Relationship: Considering compatibility involves suggesting compatibility checks.
Criteria: Designer considers or confirms system compatibility.
Phrase: Considering compatibility.

18.
Concepts: collaborative communication, reinforcing communication
Relationship: Collaborative communication involves reinforcing communication.
Criteria: Designer reinforces user-designer communication or collaboration.
Phrase: Reinforcing communication.

19.
Concepts: requesting clarification, seeking design input through clarification
Relationship: Requesting clarification involves seeking design input.
Criteria: Users or designers request clarification on user feedback.
Phrase: Requesting clarification.

20.
Concepts: clarifying design choices, providing clarification to answer questions
Relationship: Clarifying design choices involves providing clarification.
Criteria: Designer clarifies design choices or decisions.
Phrase: Clarifying design choices.

21.
Concepts: promoting collaboration and collective input, ensure collective decision-making and involve users
Relationship: Promoting collaboration involves ensuring collective decision-making.
Criteria: Designer promotes collaboration or gathering opinions from users.
Phrase: Promoting collaboration.

22.
Concepts: acknowledging users, acknowledging user responses and experiences
Relationship: Acknowledging users involves acknowledging user responses and experiences.
Criteria: Designer responds to or acknowledges user input.
Phrase: Acknowledging users.

23.
Concepts: integrate diverse feedback, accept and incorporate user feedback
Relationship: Integrating diverse feedback involves accepting and incorporating user feedback.
Criteria: Designer integrates diverse feedback from users.
Phrase: Integrating feedback.

24.
Concepts: gathering user context, showing interest in user context and background
Relationship: Gathering user context involves showing interest in user context.
Criteria: Designer considers, gathers, or requests context about users or their environment.
Phrase: Gathering user context.

25.
Concepts: improving usability, considering usability
Relationship: Improving usability involves considering usability.
Criteria: Designers aim to improve usability to meet user needs.
Phrase: Improving usability.

26.
Concepts: discussing input methods, designer's input method inquiry
Relationship: Discussing input methods involves inquiring about input methods.
Criteria: Designers discuss or address input methods for different devices.
Phrase: Discussing input methods.

27.
Concepts: promoting transparency, maintain and demonstrate transparency
Relationship: Promoting transparency involves maintaining and demonstrating transparency.
Criteria: Designer promotes transparency and openness.
Phrase: Promoting transparency.

28.
Concepts: reflecting on user input, user experience reflection
Relationship: Reflecting on user input involves reflecting on user experience.
Criteria: Designers reflect on user input or feedback.
Phrase: Reflecting on user input.

29.
Concepts: suggesting manual adjustment options, highlighting manual adjustment options
Relationship: Suggesting manual adjustment options involves highlighting them.
Criteria: Designer suggests manual adjustment options.
Phrase: Suggesting manual adjustment options.

30.
Concepts: sharing visual aids, provide visual aids and emphasize visual representations
Relationship: Sharing visual aids involves providing and emphasizing them.
Criteria: Designer shares visual aids to illustrate concepts or ideas.
Phrase: Sharing visual aids.

31.
Concepts: explain technical artifacts and provide technical information, explain operational details and provide technical explanations
Relationship: Explaining technical artifacts involves providing technical information.
Criteria: Designer explains technical artifacts and provides technical information.
Phrase: Explaining technical artifacts.

32.
Concepts: inform about features and provide feature details, explain, clarify, and explain features and functionality
Relationship: Informing about features involves providing feature details and explanations.
Criteria: Designer informs about features and provides feature details.
Phrase: Informing about features.