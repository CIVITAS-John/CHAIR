You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (41 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
41. 
Concepts: {Repeat the input 41}
Relationship: {What is logical relationship between concepts in code 41, or N/A if not applicable}
Criteria: {Who did what, and how for code 41}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: emoji engagement, use emojis in conversation
- Utilizing emojis for engagement and communication.
- Users engage in conversations or message exchanges using emojis to convey emotions or inquiries.

2.
Concepts: informal interaction, engaging in informal communication
- Participants engage in informal or casual interaction within the community.
- Instances where community conversations are casual, informal, and may include humor and personal remarks.

3.
Concepts: self-help, self-solving issues
- Instances where users leverage existing resources, like group files, to resolve their own questions without direct assistance.
- Users acknowledge finding a solution independently through available resources.

4.
Concepts: sharing positive feedback, praise software usability, expressing feature appreciation
- Users provide positive feedback about the software's features or performance.
- Users express appreciation and satisfaction with the software's practicality, effectiveness, and usability.
- Users express approval and positive feedback about the features and usefulness of the software.

5.
Concepts: sharing classroom success, user experience and impact
- Users share classroom experiences related to using the software.
- Users sharing their experiences and the impact of the software on their teaching or learning.

6.
Concepts: suggest improvements, provide feedback and suggestions, suggest new features
- Users provide specific suggestions or feedback about improving the software.
- Users provide suggestions and feedback on software features or development direction.
- Users suggest new features or improvements to enhance software functionality.

7.
Concepts: collect user feedback, providing user feedback
- Eliciting or collecting feedback from users regarding their experiences or potential features.
- Users offer feedback, suggestions, or questions about features, functionality, and development.

8.
Concepts: usability improvement, suggest usability improvements
- Instances where suggestions or changes are made to improve the usability of the software.
- Users suggest specific improvements or feature additions to enhance the app's usability.

9.
Concepts: experiment request, request experimental features
- Users request the addition of specific types of experiments or features.
- Users request specific features or improvements for conducting physics experiments.

10.
Concepts: inquiring about user role, designer-user interaction
- Designers inquire about the professional identity or role of a user.
- Designers interact with users and inquire about their professional background.

11.
Concepts: inquire about software access, inquire about download process
- Users inquire about how to access or download the software.
- Users inquire about the procedure and locations for downloading the software.

12.
Concepts: documentation need, request user manual
- Expressing the need for user guides or documentation.
- Restating the need for instructional material or a user manual to guide software usage.

13.
Concepts: inquire about usage, request technical help
- Users ask how to use specific versions or features of the software.
- Users request guidance or assistance to use a specific version or feature.

14.
Concepts: sharing development plans, share info about development plan
- Designers share development plans or details with the community.
- A designer sharing plans for future development in response to user needs.

15.
Concepts: communicating ongoing work, providing development updates, sharing current development
- Designers communicate about ongoing work and plans for future development.
- Designers share detailed information about current status, updates, and future plans.
- Designers share information about current development and research efforts.

16.
Concepts: expectation management, managing user expectations
- Designers manage user expectations by explaining what is currently possible or planned for the future.
- Designers communicate future plans or functionalities to users, managing their expectations.

17.
Concepts: planning future updates, detailing future plans
- Designers make statements about planning or including new updates in future releases.
- Designers detail plans or future intentions regarding compatibility, feature upgrades, or design elements.

18.
Concepts: confirm future feature, confirming feature implementation
- Affirming the future implementation of a feature with conditional timing.
- Designers confirm that a feature will be implemented in the future.

19.
Concepts: giving release timeline, sharing update schedule
- Designers provide a timeline or schedule for upcoming updates and releases.
- Designers provide detailed timelines for when updates or new versions will be released.

20.
Concepts: setting timeline expectations, providing development timeline
- Designers set or manage expectations about timelines for feature releases.
- Designers provide a timeline or estimate for feature development and release.

21.
Concepts: announcing version details, notifying about new versions
- Designers announce new version details and updates to the community.
- Designers inform the community that a new version is available.

22.
Concepts: updating the community, informing about updates
- Designers provide updates or announcements to the community about new releases.
- Designers inform the community about the availability of updates and where to download them.

23.
Concepts: listing upcoming features, explain upcoming features
- Designers list features that will be included in future updates.
- A designer provides detailed information about newly expanded or upcoming features.

24.
Concepts: announcing updates, announcing feature releases
- Designers announce new features, updates, or bug fixes based on user input.
- Designers announce the release of new features, updates, or bug fixes.

25.
Concepts: communicating planned updates, confirming upcoming updates
- Designers share information about upcoming features or updates.
- Designers confirm upcoming features or version updates and provide details.

26.
Concepts: making announcements, announcing software updates
- Designers announce development plans, updates, or future features.
- Designers announce details about upcoming software updates and new features.

27.
Concepts: describing updates, detailing version updates
- Designers list specific updates or details about features, components, or improvements.
- A designer lists notes on version updates, including features, components, and bug fixes.

28.
Concepts: update status inquiry, inquire about updates
- Users inquire about the status of updates for the Android version.
- Users inquire about the timing, status, or availability of software updates.

29.
Concepts: responding to feedback, feedback appreciation
- When a designer responds to user feedback with plans for future updates.
- When a designer appreciates user feedback and outlines future updates in response.

30.
Concepts: feature request invitation, encouraging interaction
- Designers invite users to suggest new features or improvements.
- A designer invites and encourages users to share suggestions and feedback on new features.

31.
Concepts: promise to invite feedback, promising future consultation
- A designer promising to consult the group for feedback before implementing changes.
- A designer announces and promises to gather user opinions before new development phases.

32.
Concepts: soliciting user feedback, soliciting detailed feedback, solicit user experience feedback
- A designer requests and encourages users to provide feedback and suggestions for improvements.
- A designer requests detailed feedback and suggestions from users regarding potential features or functionalities.
- A designer asks for feedback to understand user experiences or encountered problems.

33.
Concepts: involve users in design, user-designer interaction
- Instances where designers actively involve users in the design process through feedback or testing.
- The collaborative interaction between users and designers that contributes to the design process.

34.
Concepts: inviting feedback, soliciting suggestions
- Designers invite and encourage the community to actively provide feedback or suggestions.
- Designers solicit and encourage feedback and suggestions from the community.

35.
Concepts: prioritizing feedback, outlining development priorities
- Designers prioritize and provide feedback on the prioritization of feature development.
- Designers outline or discuss the prioritization of development phases or features.

36.
Concepts: future compatibility planning, consider future compatibility
- Designers discuss future compatibility or technical adjustments that need to be addressed.
- A designer considers potential future technological needs or compatibility with older systems or hardware.

37.
Concepts: platform limitation, explain system limitations
- Designers clarify limitations regarding the software’s compatibility with certain operating systems.
- Explaining limitations due to hardware or software system compatibility issues.

38.
Concepts: discuss outdated technology, highlighting outdated technology
- Users comment on outdated technology or systems used in their schools.
- A user comments on the outdated nature of technology or systems currently in use.

39.
Concepts: user frustration, expressing frustration with issues
- A user expressing frustration with old or outdated systems.
- A user or designer expresses frustration with specific situations or conditions.

40.
Concepts: apologize for timing issues, apologize for inconvenience
- A designer apologizes for any inconvenience caused, particularly due to timing or delays.
- Designers apologize for any potential inconvenience caused to users as a gesture of politeness.

41.
Concepts: usage instructions
- Providing instructions or guidance on how to use a feature.
- Designers provide specific instructions or guidance on using features of the software.
===
---
Definitions for each code (41 in total):
1.
Concepts: emoji engagement, use emojis in conversation
Relationship: Using emojis to enhance communication.
Criteria: Users engage in conversations employing emojis to express emotions or inquiries.
Phrase: Utilizing emojis for engagement and communication

2.
Concepts: informal interaction, engaging in informal communication
Relationship: Informal interactions facilitate casual exchange.
Criteria: Participants engage in casual and informal interactions within the community, including humor and personal remarks.
Phrase: Engaging in informal communication

3.
Concepts: self-help, self-solving issues
Relationship: Self-reliance in issue resolution.
Criteria: Users independently resolve questions by utilizing available resources without direct assistance.
Phrase: Self-solving issues using existing resources

4.
Concepts: sharing positive feedback, praise software usability, expressing feature appreciation
Relationship: Positive feedback related to software usability.
Criteria: Users provide positive feedback and express appreciation for the usability and effectiveness of the software's features.
Phrase: Praising software usability and features

5.
Concepts: sharing classroom success, user experience and impact
Relationship: Sharing experiences and their impact in educational contexts.
Criteria: Users share their experiences and the impact of the software on teaching or learning in the classroom.
Phrase: Sharing classroom success stories

6.
Concepts: suggest improvements, provide feedback and suggestions, suggest new features
Relationship: Proposal of enhancements and new features.
Criteria: Users provide specific suggestions and feedback to improve software features and functionality.
Phrase: Suggesting software improvements and new features

7.
Concepts: collect user feedback, providing user feedback
Relationship: Gathering and giving feedback.
Criteria: Users offer feedback and suggestions on software features, functionality, and development.
Phrase: Collecting and providing user feedback

8.
Concepts: usability improvement, suggest usability improvements
Relationship: Enhancing user experience.
Criteria: Users suggest specific changes or additions to improve the software's usability.
Phrase: Suggesting usability improvements

9.
Concepts: experiment request, request experimental features
Relationship: Requesting new experimental capabilities.
Criteria: Users request the addition of specific experiment-related features.
Phrase: Requesting experimental features

10.
Concepts: inquiring about user role, designer-user interaction
Relationship: The role inquiry as part of interaction.
Criteria: Designers inquire about users' professional identity or roles during interactions.
Phrase: Inquiring about user roles

11.
Concepts: inquire about software access, inquire about download process
Relationship: Questions about obtaining software.
Criteria: Users inquire about the access and download procedures for the software.
Phrase: Inquiring about software access and download

12.
Concepts: documentation need, request user manual
Relationship: Requesting instructional support.
Criteria: Users express the need for user guides or documentation to assist with software usage.
Phrase: Requesting user manuals and documentation

13.
Concepts: inquire about usage, request technical help
Relationship: Seeking usage guidance.
Criteria: Users ask for assistance on how to use specific versions or features of the software.
Phrase: Requesting technical help and usage guidance

14.
Concepts: sharing development plans, share info about development plan
Relationship: Informing about development intentions.
Criteria: Designers share details or plans about future software development.
Phrase: Sharing development plans

15.
Concepts: communicating ongoing work, providing development updates, sharing current development
Relationship: Updating community on progress.
Criteria: Designers communicate ongoing work and provide updates about current and future development.
Phrase: Providing development updates

16.
Concepts: expectation management, managing user expectations
Relationship: Setting realistic expectations.
Criteria: Designers manage user expectations by explaining current capabilities and future plans.
Phrase: Managing user expectations

17.
Concepts: planning future updates, detailing future plans
Relationship: Future-focused planning.
Criteria: Designers detail plans or intentions for upcoming software updates.
Phrase: Planning future updates

18.
Concepts: confirm future feature, confirming feature implementation
Relationship: Assurance of future changes.
Criteria: Designers confirm that a feature will be implemented in the future with conditional timing.
Phrase: Confirming future feature implementation

19.
Concepts: giving release timeline, sharing update schedule
Relationship: Scheduling future releases.
Criteria: Designers provide timelines or schedules for upcoming updates and releases.
Phrase: Sharing update schedules

20.
Concepts: setting timeline expectations, providing development timeline
Relationship: Clarifying development timelines.
Criteria: Designers set expectations by providing timelines for feature development and release.
Phrase: Providing development timelines

21.
Concepts: announcing version details, notifying about new versions
Relationship: Notification of new versions.
Criteria: Designers notify the community about new version details and updates.
Phrase: Announcing new version details

22.
Concepts: updating the community, informing about updates
Relationship: Keeping the community informed.
Criteria: Designers inform the community about the availability of updates and release details.
Phrase: Informing the community about updates

23.
Concepts: listing upcoming features, explain upcoming features
Relationship: Detailing future capabilities.
Criteria: Designers provide detailed information about features to be included in future updates.
Phrase: Explaining upcoming features

24.
Concepts: announcing updates, announcing feature releases
Relationship: Communication of newly released elements.
Criteria: Designers announce the release of new features, updates, or bug fixes.
Phrase: Announcing feature releases

25.
Concepts: communicating planned updates, confirming upcoming updates
Relationship: Confirmation and communication of updates.
Criteria: Designers confirm and communicate information about upcoming updates or features.
Phrase: Confirming and communicating planned updates

26.
Concepts: making announcements, announcing software updates
Relationship: Notifications of developments.
Criteria: Designers announce development plans, updates, or future features.
Phrase: Announcing software updates

27.
Concepts: describing updates, detailing version updates
Relationship: Providing update specifics.
Criteria: Designers describe specific updates, features, components, or improvements in new versions.
Phrase: Detailing version updates

28.
Concepts: update status inquiry, inquire about updates
Relationship: Questions about update progress.
Criteria: Users inquire about the status or timing of software updates.
Phrase: Inquiring about update status

29.
Concepts: responding to feedback, feedback appreciation
Relationship: Addressing and valuing user feedback.
Criteria: Designers respond to user feedback and outline future updates based on it.
Phrase: Responding to user feedback

30.
Concepts: feature request invitation, encouraging interaction
Relationship: Encouragement of user contributions.
Criteria: Designers invite users to suggest new features or improvements.
Phrase: Inviting feature requests and interaction

31.
Concepts: promise to invite feedback, promising future consultation
Relationship: Commitment to user involvement.
Criteria: Designers promise to gather user feedback before implementing changes.
Phrase: Promising user consultation for feedback

32.
Concepts: soliciting user feedback, soliciting detailed feedback, solicit user experience feedback
Relationship: Actively requesting feedback.
Criteria: Designers request detailed user feedback and suggestions to improve the software.
Phrase: Soliciting detailed user feedback

33.
Concepts: involve users in design, user-designer interaction
Relationship: Collaboration between users and designers.
Criteria: Designers actively involve users in the design process through feedback or testing.
Phrase: Involving users in design

34.
Concepts: inviting feedback, soliciting suggestions
Relationship: Encouragement of user input.
Criteria: Designers invite and encourage users to provide suggestions and feedback.
Phrase: Inviting feedback and suggestions

35.
Concepts: prioritizing feedback, outlining development priorities
Relationship: Setting development focus based on feedback.
Criteria: Designers prioritize and communicate the development of features based on user feedback.
Phrase: Prioritizing feedback in development planning

36.
Concepts: future compatibility planning, consider future compatibility
Relationship: Planning for future technical needs.
Criteria: Designers discuss future compatibility and necessary technical adjustments.
Phrase: Considering future compatibility

37.
Concepts: platform limitation, explain system limitations
Relationship: Clarification of software constraints.
Criteria: Designers clarify limitations regarding the software’s compatibility with certain systems.
Phrase: Explaining platform limitations

38.
Concepts: discuss outdated technology, highlighting outdated technology
Relationship: Feedback on outdated systems.
Criteria: Users comment on the outdated technology or systems used in their schools.
Phrase: Highlighting outdated technology usage

39.
Concepts: user frustration, expressing frustration with issues
Relationship: Expression of dissatisfaction.
Criteria: Users express frustration with outdated systems or specific issues.
Phrase: Expressing frustration with issues

40.
Concepts: apologize for timing issues, apologize for inconvenience
Relationship: Apology for delays or problems.
Criteria: Designers apologize for any inconvenience caused by timing or delays.
Phrase: Apologizing for inconvenience

41.
Concepts: usage instructions
Relationship: Guiding on feature usage.
Criteria: Designers provide specific instructions on how to use software features.
Phrase: Providing usage instructions
---