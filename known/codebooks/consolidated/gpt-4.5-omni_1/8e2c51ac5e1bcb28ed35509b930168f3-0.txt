You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (10 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
10. 
Concepts: {Repeat the input 10}
Relationship: {What is logical relationship between concepts in code 10, or N/A if not applicable}
Criteria: {Who did what, and how for code 10}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: communicate release plans, discuss release management
- Designers provide information or communicate plans for software releases and updates.
- Designers discuss the process of releasing the application and share information about its release status.

2.
Concepts: discuss future plans, discuss software improvements
- Users or designers discuss potential future projects, planning efforts, and design decisions for the software.
- Users and developers discuss improvements or changes to the software and plans for future updates.

3.
Concepts: collaborative planning, engaging in collaboration
- Designers and users collaboratively discussing and planning the development of the software.
- Designers and users engage in collaborative learning and problem-solving to improve the product.

4.
Concepts: encouraging elaboration, providing detailed explanations
- Designers express understanding and encourage users to elaborate on their needs.
- Designers elaborate on topics and provide detailed answers to user queries.

5.
Concepts: design challenges, explaining development challenges
- Issues and obstacles faced by designers during the development process.
- Developers or designers explain the complexity and reasons for delays in development timelines.

6.
Concepts: system requirements, discussing system compatibility
- A designer discusses the system requirements for compatibility.
- Designers and participants discuss and confirm the software's compatibility with different systems or platforms.

7.
Concepts: seeking information, requesting user assistance
- Users ask questions to gain knowledge or resources related to the software.
- Users request resources, assistance, or documentation related to the software.

8.
Concepts: discuss software usability, discussing educational application
- Users discuss how the software is used in different contexts and its usability.
- Users discuss how the software aligns with educational needs and its classroom application.

9.
Concepts: express gratitude, acknowledging and appreciating feedback
- Users and designers express gratitude or acknowledgment towards each other.
- Designers accept, acknowledge, and express appreciation for user suggestions and feedback.

10.
Concepts: confirming professional identity, sharing professional background
- Users confirm their professional roles and inquire about others' professional identities.
- Users identify themselves as teachers and share their teaching experiences to establish credibility.
===
---
Definitions for each code (10 in total):
1.
Concepts: communicate release plans, discuss release management
Relationship: Both concepts involve the dissemination and discussion of information related to software releases.
Criteria: Designers provide information about software release plans and discuss the release management process.
Phrase: Communicating release plans

2.
Concepts: discuss future plans, discuss software improvements
Relationship: Both concepts involve discussions about future developments and enhancements of the software.
Criteria: Users or designers discuss potential future projects and improvements for the software.
Phrase: Discussing future plans and improvements

3.
Concepts: collaborative planning, engaging in collaboration
Relationship: Both concepts involve joint efforts and collaboration between designers and users.
Criteria: Designers and users collaboratively plan and engage in problem-solving to improve the software.
Phrase: Engaging in collaborative planning

4.
Concepts: encouraging elaboration, providing detailed explanations
Relationship: Both concepts involve providing detailed information and encouraging further discussion.
Criteria: Designers encourage users to elaborate on their needs and provide detailed explanations.
Phrase: Encouraging elaboration and providing explanations

5.
Concepts: design challenges, explaining development challenges
Relationship: Both concepts involve discussing the difficulties faced during the software development process.
Criteria: Designers explain the challenges and complexities encountered during development.
Phrase: Explaining design challenges

6.
Concepts: system requirements, discussing system compatibility
Relationship: Both concepts involve discussions about the technical requirements and compatibility of the software.
Criteria: Designers discuss system requirements and confirm software compatibility with different platforms.
Phrase: Discussing system requirements and compatibility

7.
Concepts: seeking information, requesting user assistance
Relationship: Both concepts involve users seeking help or information related to the software.
Criteria: Users ask questions and request assistance or resources related to the software.
Phrase: Seeking information and assistance

8.
Concepts: discuss software usability, discussing educational application
Relationship: Both concepts involve discussions about how the software is used and its application in educational contexts.
Criteria: Users discuss the software's usability and its application in educational settings.
Phrase: Discussing software usability and educational application

9.
Concepts: express gratitude, acknowledging and appreciating feedback
Relationship: Both concepts involve expressing thanks and acknowledging feedback.
Criteria: Users and designers express gratitude and appreciate each other's feedback.
Phrase: Expressing gratitude and appreciating feedback

10.
Concepts: confirming professional identity, sharing professional background
Relationship: Both concepts involve users sharing and confirming their professional roles and experiences.
Criteria: Users confirm their professional identities and share their backgrounds to establish credibility.
Phrase: Confirming professional identity and sharing background
---