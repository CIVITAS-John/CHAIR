You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (26 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
26. 
Concepts: {Repeat the input 26}
Relationship: {What is logical relationship between concepts in code 26, or N/A if not applicable}
Criteria: {Who did what, and how for code 26}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: share visual update, sharing development updates
- A designer shares visual updates, such as images or screenshots, to demonstrate progress.
- Designers share updates on their progress or development.

2.
Concepts: announcing new features, announcing software updates
- Designers announce new features, updates, or changes.
- Designers announce software updates, releases, or changes.

3.
Concepts: planning updates, previewing upcoming updates
- Designers plan or discuss updates or new features.
- Designers preview or announce upcoming features or updates.

4.
Concepts: update process, inquiring about updates
- Discussing the process or timeline for software updates.
- Users ask about software updates, releases, or timelines.

5.
Concepts: outlining development plans, share development plans collaboratively
- Designers explain plans or strategies for development or implementation.
- Designers share plans with users and collaborate to plan software development.

6.
Concepts: planning for the future, planning future projects
- Designers plan for the future, discussing goals or actions.
- Participants plan or discuss projects, outlining steps or goals.

7.
Concepts: soliciting feedback, take user feedback
- Designers seek input or suggestions from users.
- Designers collect and respond to user feedback and inquire about user input.

8.
Concepts: align with user feedback, prioritizing user feedback, accepting and implementing user input
- A designer aligns with user feedback or suggestions.
- User suggests prioritizing certain features or tasks, and designer responds to user feedback.
- Designers accept and implement user requests and suggestions.

9.
Concepts: integrate user feedback, implement feedback loop
- User feedback is acknowledged and incorporated into the design process.
- Processes involve collecting, considering, and implementing user feedback.

10.
Concepts: engage in iterative development, plan for iterative feedback
- Designers refine and improve the product based on feedback and testing.
- A designer plans for iterative feedback from users and develops the software based on user feedback.

11.
Concepts: align with user needs, cater to user needs
- Designers align with user needs and consider future compatibility.
- Designers balance and cater to user needs and show consideration for the community.

12.
Concepts: feature guidance, offering usage guidance
- Guidance or instructions on how to use a specific feature or function.
- Providing instructions or tutorials on how to use software features or tools.

13.
Concepts: clarify platform specifications, providing technical details and clarification
- Designers clarify and provide platform-specific information.
- Designers provide technical details and clarification.

14.
Concepts: providing detailed explanations, explaining features and providing examples
- Users or designers provide detailed explanations or answers.
- Designers explain features and provide examples.

15.
Concepts: middle school, sharing teaching identity
- User shares information about their teaching experience or background.
- Users share teaching experience, background, or introduce themselves as teachers.

16.
Concepts: discussing feature adjustments and stability, discussing feature development and explaining importance
- Participants discuss or adjust features or updates in the Physics Lab online community, and discuss the stability or reliability of features or updates.
- Participants discuss or plan the development of new features or updates in the online community, and explain the need or rationale behind specific features or updates.

17.
Concepts: sharing personal experiences, shared experiences and support
- Users share personal anecdotes or experiences about the software.
- Users and designers sharing experiences and supporting each other in using and improving the software.

18.
Concepts: community feedback, feedback solicitation
- Users providing feedback and suggestions to improve the product.
- A request for feedback, suggestions, or opinions from the community or users.

19.
Concepts: request additional experiments, suggesting new features
- A user requests additional experiments or features in the software.
- A user suggests new features or functionalities, and users propose or request new features or improvements in the Physics Lab software.

20.
Concepts: seeking user assistance, seeking technical information
- Users request assistance or help with software features or functions.
- Users ask technical questions about software usage or features.

21.
Concepts: community resources, requesting user manuals
- User requests or mentions a community resource, such as a user manual.
- Users express a need for a user manual and explain their request.

22.
Concepts: system requirements, explain technical limitations
- The designer mentions technical requirements or limitations for the system or software.
- Designers explain limitations, acknowledge technical aspects, and discuss system limitations.

23.
Concepts: expressing uncertainty, contemplation
- Users or designers express uncertainty or hesitation.
- The designer expresses uncertainty, hesitation, or contemplation about a particular topic or decision.

24.
Concepts: acknowledge need for feature, confirm feature implementation
- Designer acknowledges the need for a specific feature or improvement.
- Designers confirm and acknowledge user feedback to implement features.

25.
Concepts: query and response, engaging with the community and identifying as members
- Instances where users ask questions and receive answers from designers or other community members.
- A designer or user engages with the community, asking questions or responding to users, and users identify themselves as community members or respond to community-related questions.

26.
Concepts: connecting to community, consulting community
- Designer connects the software or its features to the community's needs.
- A designer seeks input or feedback from the community on specific aspects of the software.
===
Here are the definitions for each code:

---
1.
Concepts: share visual update, sharing development updates
Relationship: Visual updates are a way to share development updates.
Criteria: Designers share visual updates to demonstrate progress.
Phrase: Share development updates visually.

2.
Concepts: announcing new features, announcing software updates
Relationship: Announcing new features is a type of software update.
Criteria: Designers announce new features or software updates.
Phrase: Announce new features or updates.

3.
Concepts: planning updates, previewing upcoming updates
Relationship: Planning updates involves previewing upcoming updates.
Criteria: Designers plan and preview upcoming updates.
Phrase: Plan and preview updates.

4.
Concepts: update process, inquiring about updates
Relationship: Inquiring about updates is part of the update process.
Criteria: Users inquire about the update process or timeline.
Phrase: Inquire about update process.

5.
Concepts: outlining development plans, share development plans collaboratively
Relationship: Outlining development plans involves collaborative sharing.
Criteria: Designers share and collaborate on development plans.
Phrase: Share development plans collaboratively.

6.
Concepts: planning for the future, planning future projects
Relationship: Planning for the future involves planning future projects.
Criteria: Designers plan for the future by outlining projects.
Phrase: Plan for the future.

7.
Concepts: soliciting feedback, take user feedback
Relationship: Soliciting feedback involves taking user feedback.
Criteria: Designers solicit and take user feedback.
Phrase: Solicit user feedback.

8.
Concepts: align with user feedback, prioritizing user feedback, accepting and implementing user input
Relationship: Aligning with user feedback involves prioritizing and implementing it.
Criteria: Designers align with user feedback and implement it.
Phrase: Align with user feedback.

9.
Concepts: integrate user feedback, implement feedback loop
Relationship: Integrating user feedback involves implementing a feedback loop.
Criteria: Designers integrate user feedback into the design process.
Phrase: Integrate user feedback.

10.
Concepts: engage in iterative development, plan for iterative feedback
Relationship: Iterative development involves planning for iterative feedback.
Criteria: Designers engage in iterative development and plan for feedback.
Phrase: Engage in iterative development.

11.
Concepts: align with user needs, cater to user needs
Relationship: Aligning with user needs involves catering to them.
Criteria: Designers align with and cater to user needs.
Phrase: Align with user needs.

12.
Concepts: feature guidance, offering usage guidance
Relationship: Feature guidance involves offering usage guidance.
Criteria: Designers offer guidance on feature usage.
Phrase: Offer feature guidance.

13.
Concepts: clarify platform specifications, providing technical details and clarification
Relationship: Clarifying platform specifications involves providing technical details.
Criteria: Designers clarify platform specifications and provide technical details.
Phrase: Clarify platform specifications.

14.
Concepts: providing detailed explanations, explaining features and providing examples
Relationship: Providing detailed explanations involves explaining features and providing examples.
Criteria: Designers provide detailed explanations and examples.
Phrase: Provide detailed explanations.

15.
Concepts: middle school, sharing teaching identity
Relationship: Sharing teaching identity involves mentioning middle school experience.
Criteria: Users share their teaching identity and experience.
Phrase: Share teaching identity.

16.
Concepts: discussing feature adjustments and stability, discussing feature development and explaining importance
Relationship: Discussing feature adjustments involves discussing development and importance.
Criteria: Participants discuss feature adjustments and development.
Phrase: Discuss feature development.

17.
Concepts: sharing personal experiences, shared experiences and support
Relationship: Sharing personal experiences involves shared experiences and support.
Criteria: Users share personal experiences and support each other.
Phrase: Share personal experiences.

18.
Concepts: community feedback, feedback solicitation
Relationship: Community feedback involves soliciting feedback.
Criteria: Users provide community feedback and solicit opinions.
Phrase: Solicit community feedback.

19.
Concepts: request additional experiments, suggesting new features
Relationship: Requesting additional experiments involves suggesting new features.
Criteria: Users request additional experiments and suggest new features.
Phrase: Request new features.

20.
Concepts: seeking user assistance, seeking technical information
Relationship: Seeking user assistance involves seeking technical information.
Criteria: Users seek assistance and technical information.
Phrase: Seek technical assistance.

21.
Concepts: community resources, requesting user manuals
Relationship: Community resources involve requesting user manuals.
Criteria: Users request community resources and user manuals.
Phrase: Request community resources.

22.
Concepts: system requirements, explain technical limitations
Relationship: System requirements involve explaining technical limitations.
Criteria: Designers explain system requirements and limitations.
Phrase: Explain system requirements.

23.
Concepts: expressing uncertainty, contemplation
Relationship: Expressing uncertainty involves contemplation.
Criteria: Users or designers express uncertainty and contemplate.
Phrase: Express uncertainty.

24.
Concepts: acknowledge need for feature, confirm feature implementation
Relationship: Acknowledging the need for a feature involves confirming implementation.
Criteria: Designers acknowledge the need for features and confirm implementation.
Phrase: Acknowledge feature needs.

25.
Concepts: query and response, engaging with the community and identifying as members
Relationship: Query and response involve engaging with the community and identifying as members.
Criteria: Users engage with the community and respond to queries.
Phrase: Engage with the community.

26.
Concepts: connecting to community, consulting community
Relationship: Connecting to the community involves consulting the community.
Criteria: Designers connect with the community and consult on software aspects.
Phrase: Consult the community.