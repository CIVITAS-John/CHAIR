You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: professional background, shared professional experience
- User provides information about their professional background or experience.
- User shares their professional experience or background.

2.
Concepts: user background information, share relevant background
- Users provide background information about themselves or their experience.
- User shares their background, experience, or expertise related to the app's context.

3.
Concepts: providing context, provide personal context
- User provides general information or context about their environment or situation.
- A user provides personal context or information.

4.
Concepts: contextualizing response, contextualizing question
- User provides context or background information for their question or comment.
- Providing context or background information to clarify or justify a question or request.

5.
Concepts: provides context, provide context, provides background information
- Provides context or background information.
- User provides background information or context for a topic or issue.
- User provides context or background information for engagement.
- User provides background information or context.

6.
Concepts: confirm common practice, acknowledging standards
- A user confirms a common practice or standard.
- A user acknowledges a standard or common practice.

7.
Concepts: feature example, give an example of the feature's functions
- The designer provides an example of a feature or functionality.
- Designer provides an example to illustrate the functions or uses of a feature.

8.
Concepts: introduced feature function, provided examples of feature
- A person introduces or explains a feature or function.
- A person provides examples or illustrations of a feature or concept.

9.
Concepts: explaining technical artifacts, providing technical information
- A designer explains technical artifacts or features of the software.
- A designer provides technical information about the software or its features.

10.
Concepts: explains feature, feature explanation
- A designer explains or highlights a specific feature of the application.
- A designer explains a specific feature or component of the software.
- The designer explains a feature or functionality.
- Explanation or description of new features or updates.

11.
Concepts: describes functionality, functionality explanation
- A designer describes the functionality or features of the design.
- A designer explains the functionality of a feature or component.

12.
Concepts: explaining design concepts, explain simulation detail
- A designer explains a design concept or feature.
- Designer explains a simulation detail or functionality.

13.
Concepts: providing examples, image-based demonstration
- Designer provides examples to illustrate a concept or feature.
- A designer uses images to help demonstrate a concept or feature.

14.
Concepts: technical explanation, clarified technical detail
- Providing technical details or explanations
- A person clarifies a technical detail or concept.

15.
Concepts: provide feature details, explains feature specifics
- Providing detailed information about software features or functionality.
- Explaining specific details or functionality of a feature.

16.
Concepts: explanation, clarified functionality
- Providing explanations or clarifications about a feature or functionality.
- Clarifying how a feature or component works

17.
Concepts: complexity comparison, feature complexity comparisons
- A designer compares the complexities of different features or updates.
- Comparing the complexity of different features or tasks.

18.
Concepts: expresses personal interest, expresses personal interest (duplicate, consider merging)
- Designer expresses personal interest or enthusiasm for a topic
- Expresses personal interest or enthusiasm for a particular topic.
- Expressing personal interest or enthusiasm for a topic or field.

19.
Concepts: expressed personal interest, personal interest expression
- User expresses personal interest or enthusiasm.
- Expressing personal interest or enthusiasm

20.
Concepts: shows interest, demonstrated interest, expressing feature interest
- A user shows interest in a feature or update.
- Expresses interest in a feature, update, or development.
- A user expresses interest in a specific feature or functionality.

21.
Concepts: comparison, comparison to other software, comparison with other applications
- A user makes a comparison between two things (e.g., software features).
- User compares the software to other similar products.
- Users compare the software with other similar software, highlighting its strengths or weaknesses.
- A user compares the platform with other applications.

22.
Concepts: clarify touch screen functionality, touch screen functionality clarification
- The designer clarifies the functionality of touch screens.
- The designer clarifies functionality related to touch screens.

23.
Concepts: highlight practicality, highlight practical application
- User highlights the practicality or usefulness of a software or feature.
- Users highlight the practicality or usability of the software.
- User highlights the practical application or usefulness of a feature or functionality.

24.
Concepts: emphasize importance, emphasizes importance
- User or designer emphasizes the importance of something.
- A user emphasizes the importance of a feature or functionality.

25.
Concepts: identifies need, highlight usability need
- A user identifies a need or requirement for a specific feature or functionality.
- User highlights a need for improved usability or functionality.

26.
Concepts: explaining need, explaining the need
- Explaining or justifying the need for a particular feature, functionality, or system.
- Designer explains the need or purpose behind a particular feature or development.

27.
Concepts: identify practical need, pointed out practical need
- User identifies a practical need or requirement.
- Identifies a practical need or requirement for the product.

28.
Concepts: describe new components, describe new component features
- Describes new components, features, or updates of the product.
- Designer describes new features or characteristics of components.

29.
Concepts: clarification of purpose, feature clarification
- A designer clarifies the purpose of a feature.
- The designer clarifies the features or functionalities of the software.

30.
Concepts: recognized need, acknowledge need for feature
- Designer recognizes the need for a specific feature or functionality.
- A designer acknowledges the need for a feature.

31.
Concepts: feature benefits, explain feature importance
- A designer explains the benefits or advantages of a feature.
- Designer explains the importance or significance of a feature or functionality.

32.
Concepts: download information, provided download instructions
- Providing information on how to access or download a resource.
- Providing instructions on how to access a resource
===
Here are the definitions for each code:

---
1.
Concepts: professional background, shared professional experience
Relationship: The concepts are related as a user's professional background is shared as a way to provide context or establish credibility.
Criteria: A user shares their professional experience or background information.
Phrase: Share professional background

2.
Concepts: user background information, share relevant background
Relationship: The concepts are related as a user provides background information to establish context or relevance.
Criteria: A user shares relevant background information about themselves or their experience.
Phrase: Share relevant background

3.
Concepts: providing context, provide personal context
Relationship: The concepts are related as a user provides context to clarify or justify their question or comment.
Criteria: A user provides personal context or general information about their environment or situation.
Phrase: Provide personal context

4.
Concepts: contextualizing response, contextualizing question
Relationship: The concepts are related as a user provides context to clarify or justify their question or comment.
Criteria: A user provides context or background information to clarify or justify a question or request.
Phrase: Contextualize response

5.
Concepts: provides context, provide context, provides background information
Relationship: The concepts are related as a user provides context or background information to clarify or justify their question or comment.
Criteria: A user provides background information or context for a topic or issue.
Phrase: Provide context

6.
Concepts: confirm common practice, acknowledging standards
Relationship: The concepts are related as a user acknowledges a standard or common practice.
Criteria: A user confirms or acknowledges a common practice or standard.
Phrase: Acknowledge standards

7.
Concepts: feature example, give an example of the feature's functions
Relationship: The concepts are related as a designer provides an example to illustrate the functions or uses of a feature.
Criteria: A designer provides an example of a feature or functionality.
Phrase: Provide feature example

8.
Concepts: introduced feature function, provided examples of feature
Relationship: The concepts are related as a person introduces or explains a feature or function.
Criteria: A person introduces or explains a feature or function with examples.
Phrase: Introduce feature function

9.
Concepts: explaining technical artifacts, providing technical information
Relationship: The concepts are related as a designer explains technical artifacts or features of the software.
Criteria: A designer explains technical information about the software or its features.
Phrase: Explain technical artifacts

10.
Concepts: explains feature, feature explanation
Relationship: The concepts are related as a designer explains a specific feature of the application.
Criteria: A designer explains a specific feature or component of the software.
Phrase: Explain feature

11.
Concepts: describes functionality, functionality explanation
Relationship: The concepts are related as a designer describes the functionality or features of the design.
Criteria: A designer describes the functionality of a feature or component.
Phrase: Describe functionality

12.
Concepts: explaining design concepts, explain simulation detail
Relationship: The concepts are related as a designer explains a design concept or feature.
Criteria: A designer explains a design concept or simulation detail.
Phrase: Explain design concept

13.
Concepts: providing examples, image-based demonstration
Relationship: The concepts are related as a designer provides examples to illustrate a concept or feature.
Criteria: A designer provides examples or uses images to demonstrate a concept or feature.
Phrase: Provide examples

14.
Concepts: technical explanation, clarified technical detail
Relationship: The concepts are related as a person clarifies a technical detail or concept.
Criteria: A person provides technical explanations or clarifies technical details.
Phrase: Clarify technical details

15.
Concepts: provide feature details, explains feature specifics
Relationship: The concepts are related as a person provides detailed information about software features or functionality.
Criteria: A person explains specific details or functionality of a feature.
Phrase: Explain feature specifics

16.
Concepts: explanation, clarified functionality
Relationship: The concepts are related as a person provides explanations or clarifications about a feature or functionality.
Criteria: A person explains or clarifies how a feature or component works.
Phrase: Clarify functionality

17.
Concepts: complexity comparison, feature complexity comparisons
Relationship: The concepts are related as a designer compares the complexities of different features or updates.
Criteria: A designer compares the complexity of different features or tasks.
Phrase: Compare complexity

18.
Concepts: expresses personal interest, expresses personal interest (duplicate, consider merging)
Relationship: N/A
Criteria: A designer expresses personal interest or enthusiasm for a topic.
Phrase: Express personal interest

19.
Concepts: expressed personal interest, personal interest expression
Relationship: N/A
Criteria: A user expresses personal interest or enthusiasm.
Phrase: Express personal interest

20.
Concepts: shows interest, demonstrated interest, expressing feature interest
Relationship: N/A
Criteria: A user shows interest in a feature or update.
Phrase: Show interest

21.
Concepts: comparison, comparison to other software, comparison with other applications
Relationship: The concepts are related as a user makes a comparison between two things (e.g., software features).
Criteria: A user compares the software to other similar products.
Phrase: Compare software

22.
Concepts: clarify touch screen functionality, touch screen functionality clarification
Relationship: The concepts are related as the designer clarifies the functionality of touch screens.
Criteria: The designer clarifies functionality related to touch screens.
Phrase: Clarify touch screen functionality

23.
Concepts: highlight practicality, highlight practical application
Relationship: The concepts are related as a user highlights the practicality or usefulness of a software or feature.
Criteria: A user highlights the practicality or usability of the software.
Phrase: Highlight practicality

24.
Concepts: emphasize importance, emphasizes importance
Relationship: The concepts are related as a user or designer emphasizes the importance of something.
Criteria: A user or designer emphasizes the importance of a feature or functionality.
Phrase: Emphasize importance

25.
Concepts: identifies need, highlight usability need
Relationship: The concepts are related as a user identifies a need or requirement for a specific feature or functionality.
Criteria: A user identifies a need or requirement for improved usability or functionality.
Phrase: Identify need

26.
Concepts: explaining need, explaining the need
Relationship: The concepts are related as a designer explains or justifies the need for a particular feature, functionality, or system.
Criteria: A designer explains or justifies the need for a feature, functionality, or system.
Phrase: Explain need

27.
Concepts: identify practical need, pointed out practical need
Relationship: The concepts are related as a user identifies a practical need or requirement.
Criteria: A user identifies a practical need or requirement for the product.
Phrase: Identify practical need

28.
Concepts: describe new components, describe new component features
Relationship: The concepts are related as a designer describes new components, features, or updates of the product.
Criteria: A designer describes new features or characteristics of components.
Phrase: Describe new components

29.
Concepts: clarification of purpose, feature clarification
Relationship: The concepts are related as a designer clarifies the purpose of a feature.
Criteria: A designer clarifies the features or functionalities of the software.
Phrase: Clarify purpose

30.
Concepts: recognized need, acknowledge need for feature
Relationship: The concepts are related as a designer recognizes the need for a specific feature or functionality.
Criteria: A designer recognizes the need for a feature or functionality.
Phrase: Recognize need

31.
Concepts: feature benefits, explain feature importance
Relationship: The concepts are related as a designer explains the benefits or advantages of a feature.
Criteria: A designer explains the importance or significance of a feature or functionality.
Phrase: Explain feature benefits

32.
Concepts: download information, provided download instructions
Relationship: The concepts are related as a person provides information on how to access or download a resource.
Criteria: A person provides information on how to access or download a resource.
Phrase: Provide download information