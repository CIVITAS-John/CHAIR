You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (26 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
26. 
Concepts: {Repeat the input 26}
Relationship: {What is logical relationship between concepts in code 26, or N/A if not applicable}
Criteria: {Who did what, and how for code 26}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: inquiring about expansion, expressing interest in broader application, expanding software capabilities
- A user inquires about expanding the software to other domains.
- Showing interest in or suggesting the application of the software to a broader range of topics or areas.
- User suggests or discusses expanding software capabilities.

2.
Concepts: describing a use case, practical use case suggestion
- User describes a use case or scenario for a feature.
- A user suggests a practical use case or application for the software.

3.
Concepts: requesting features, proposing new features for optical experiment simulations
- A user requests specific physics simulation and demonstration features.
- A user proposes a new feature or functionality for the Physics Lab software, specifically for optical experiment simulations.

4.
Concepts: suggesting circuit diagram features, suggesting improvements for wave mechanics
- Users suggest specific features or improvements for circuit diagram creation.
- User suggests improvements or additions to the wave mechanics feature.

5.
Concepts: inquire about updates, request new features
- Users inquire about updates or features.
- Users request new features or inquire about feature inclusion.
- Users ask about upcoming update timing or the status of an Android update.

6.
Concepts: promote convenience, suggesting educational features
- Users promote or suggest a convenient feature.
- Users suggest adding a new feature or functionality for convenience in educational settings.

7.
Concepts: highlighting usability need, acknowledging feature need
- User highlights a need for improvement or feature.
- The designer acknowledges the need for a specific feature or functionality.

8.
Concepts: explaining school policies, explaining school restrictions
- A user explains a school policy or rule that affects the online community.
- Explaining the reasons behind school policies or restrictions.

9.
Concepts: institutional context, explaining institutional goals
- User mentions their institutional context or needs.
- A user explains their institutional goals or objectives related to the community's context.

10.
Concepts: school context, providing context about school resources
- A user provides context about the school's focus on information-based education.
- User provides context about school resources or environment.

11.
Concepts: educational norms, explaining common practice
- A user provides insight into educational norms or common practices in the field.
- User explains a common practice in schools.

12.
Concepts: describing old technology, highlighting outdated technology
- Users describe their old computer system or technology.
- Users highlight limitations or challenges due to outdated technology.

13.
Concepts: describing school computer system, sharing info about old computer systems in school
- User describes the current state or features of the school's computer system.
- Users share information about old computer systems in schools.

14.
Concepts: technical constraints, describing classroom limitations
- User highlights technical constraints or limitations in the school setting.
- A user explains limitations or restrictions in their classroom environment.

15.
Concepts: highlighting technical challenges, revealing potential usability challenges
- A user highlights technical challenges or difficulties they face.
- A user reveals potential usability challenges or difficulties.

16.
Concepts: considering hardware limitations, requesting device-specific features
- User suggests a feature based on hardware limitations
- Suggesting or requesting a feature or functionality based on specific device or platform limitations.

17.
Concepts: considering technical issues, considering limitations
- Designer considers or takes into account a specific issue or limitation.
- Designer considers or mentions limitations or constraints (e.g., internet access, security measures).

18.
Concepts: limitations of free experiments, discussing limitations of free experiments
- The designer justifies the limitations of free experiments in the Physics Lab software.
- A designer discusses the limitations or challenges of exploring other directions for free experiments.

19.
Concepts: explain limitations, informing system requirements
- Designers explain software limitations to users.
- Designers clarify or inform users about system requirements or limitations.

20.
Concepts: limitations of the team, acknowledging limitations
- Acknowledging limitations or constraints of the development team.
- Designers acknowledge limitations, constraints, or errors in resources, platforms, or previous statements.

21.
Concepts: current version limitations, mentioning development limitations
- Designer explains the limitations or constraints of the current version.
- Designer mentions a delay or limitation in implementing a feature or experiment.

22.
Concepts: confirming os compatibility, suggesting that the win7 system should be fine
- The speaker mentions or confirms that a specific operating system (e.g., Windows 7) is compatible or will work fine with the software.
- A user suggests or implies that a particular system or configuration should work.

23.
Concepts: confirming system compatibility, specifying software compatibility
- Designer confirms system compatibility or specifications.
- A designer specifies the software's compatibility with certain machines.

24.
Concepts: consider compatibility, theorizing system compatibility
- Designers consider future compatibility or system compatibility.
- The designer theorizes about system compatibility.

25.
Concepts: hardware considerations, considering diverse use cases
- A user considers diverse hardware environments or suggests adaptations for different devices.
- Considering a wide range of use cases and hardware environments.

26.
Concepts: discussing compatibility options, suggesting compatibility checks, speculating about compatibility
- Users explore or discuss compatibility options.
- A user or designer suggests checking the compatibility of the system or software with different devices.
- The designer or user speculates about the software's compatibility with different systems or devices.
===
Here are the definitions for each code:

---
1.
Concepts: inquiring about expansion, expressing interest in broader application, expanding software capabilities
Relationship: The concepts are related as they all involve exploring the potential of the software beyond its current state.
Criteria: Users express interest in or inquire about expanding the software's capabilities to other domains or areas.
Phrase: Explore software expansion possibilities.

2.
Concepts: describing a use case, practical use case suggestion
Relationship: The concepts are related as they both involve providing examples of how the software can be used.
Criteria: Users describe or suggest practical use cases for the software.
Phrase: Suggest practical applications.

3.
Concepts: requesting features, proposing new features for optical experiment simulations
Relationship: The concepts are related as they both involve asking for or suggesting new features.
Criteria: Users request or propose new features for optical experiment simulations.
Phrase: Request new features.

4.
Concepts: suggesting circuit diagram features, suggesting improvements for wave mechanics
Relationship: The concepts are related as they both involve suggesting improvements to specific features.
Criteria: Users suggest features or improvements for circuit diagrams or wave mechanics.
Phrase: Suggest feature improvements.

5.
Concepts: inquire about updates, request new features
Relationship: The concepts are related as they both involve asking about or requesting new features or updates.
Criteria: Users inquire about updates or request new features.
Phrase: Request updates or features.

6.
Concepts: promote convenience, suggesting educational features
Relationship: The concepts are related as they both involve suggesting features that make the software more convenient or educational.
Criteria: Users promote or suggest convenient features for educational settings.
Phrase: Suggest convenient features.

7.
Concepts: highlighting usability need, acknowledging feature need
Relationship: The concepts are related as they both involve recognizing the need for a feature or improvement.
Criteria: Users highlight needs or designers acknowledge feature needs.
Phrase: Acknowledge feature needs.

8.
Concepts: explaining school policies, explaining school restrictions
Relationship: The concepts are related as they both involve explaining rules or limitations.
Criteria: Users explain school policies or restrictions.
Phrase: Explain school policies.

9.
Concepts: institutional context, explaining institutional goals
Relationship: The concepts are related as they both involve providing context or goals related to the institution.
Criteria: Users provide institutional context or explain institutional goals.
Phrase: Explain institutional context.

10.
Concepts: school context, providing context about school resources
Relationship: The concepts are related as they both involve providing information about the school.
Criteria: Users provide context about school resources or focus.
Phrase: Provide school context.

11.
Concepts: educational norms, explaining common practice
Relationship: The concepts are related as they both involve explaining common practices or norms.
Criteria: Users explain educational norms or common practices.
Phrase: Explain educational norms.

12.
Concepts: describing old technology, highlighting outdated technology
Relationship: The concepts are related as they both involve describing limitations due to old technology.
Criteria: Users describe old technology or highlight limitations.
Phrase: Describe old technology.

13.
Concepts: describing school computer system, sharing info about old computer systems in school
Relationship: The concepts are related as they both involve describing the current state of school technology.
Criteria: Users describe school computer systems or share information about old systems.
Phrase: Describe school computer systems.

14.
Concepts: technical constraints, describing classroom limitations
Relationship: The concepts are related as they both involve describing limitations in the school setting.
Criteria: Users describe technical constraints or classroom limitations.
Phrase: Describe technical constraints.

15.
Concepts: highlighting technical challenges, revealing potential usability challenges
Relationship: The concepts are related as they both involve highlighting challenges or difficulties.
Criteria: Users highlight technical challenges or reveal potential usability challenges.
Phrase: Highlight technical challenges.

16.
Concepts: considering hardware limitations, requesting device-specific features
Relationship: The concepts are related as they both involve considering limitations or requesting features based on hardware.
Criteria: Users consider hardware limitations or request device-specific features.
Phrase: Consider hardware limitations.

17.
Concepts: considering technical issues, considering limitations
Relationship: The concepts are related as they both involve considering limitations or issues.
Criteria: Designers consider technical issues or limitations.
Phrase: Consider technical issues.

18.
Concepts: limitations of free experiments, discussing limitations of free experiments
Relationship: The concepts are related as they both involve discussing limitations of free experiments.
Criteria: Designers discuss or justify limitations of free experiments.
Phrase: Discuss free experiment limitations.

19.
Concepts: explain limitations, informing system requirements
Relationship: The concepts are related as they both involve explaining limitations or requirements.
Criteria: Designers explain software limitations or inform users about system requirements.
Phrase: Explain system requirements.

20.
Concepts: limitations of the team, acknowledging limitations
Relationship: The concepts are related as they both involve acknowledging limitations or constraints.
Criteria: Designers acknowledge team limitations or constraints.
Phrase: Acknowledge team limitations.

21.
Concepts: current version limitations, mentioning development limitations
Relationship: The concepts are related as they both involve explaining limitations of the current version.
Criteria: Designers explain current version limitations or mention development limitations.
Phrase: Explain current version limitations.

22.
Concepts: confirming os compatibility, suggesting that the win7 system should be fine
Relationship: The concepts are related as they both involve confirming or suggesting system compatibility.
Criteria: Speakers confirm or suggest operating system compatibility.
Phrase: Confirm system compatibility.

23.
Concepts: confirming system compatibility, specifying software compatibility
Relationship: The concepts are related as they both involve confirming or specifying system compatibility.
Criteria: Designers confirm system compatibility or specify software compatibility.
Phrase: Specify software compatibility.

24.
Concepts: consider compatibility, theorizing system compatibility
Relationship: The concepts are related as they both involve considering or theorizing about system compatibility.
Criteria: Designers consider or theorize about system compatibility.
Phrase: Theorize about system compatibility.

25.
Concepts: hardware considerations, considering diverse use cases
Relationship: The concepts are related as they both involve considering diverse hardware environments or use cases.
Criteria: Users consider diverse hardware environments or use cases.
Phrase: Consider diverse use cases.

26.
Concepts: discussing compatibility options, suggesting compatibility checks, speculating about compatibility
Relationship: The concepts are related as they all involve exploring or discussing system compatibility.
Criteria: Users discuss compatibility options or suggest checks, or speculate about compatibility.
Phrase: Discuss compatibility options.