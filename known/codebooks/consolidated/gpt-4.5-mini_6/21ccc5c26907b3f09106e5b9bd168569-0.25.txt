You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (22 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
22. 
Concepts: {Repeat the input 22}
Relationship: {What is logical relationship between concepts in code 22, or N/A if not applicable}
Criteria: {Who did what, and how for code 22}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: inquiring about user backgrounds, ask about user's professional background
- The designer inquires about the user's educational level and professional background to better understand their context.
- Designers ask users about their professional roles to tailor their communication and support.

2.
Concepts: user interaction, seeking and providing clarification
- Designers and users engage in discussions that involve clarifying or addressing specific aspects of the application.
- Designers clarify technical details and users seek clarification on specific aspects during discussions.

3.
Concepts: encouraging user feedback, encouraging open discussion
- The designer encourages users to participate in discussions and ask questions.
- The designer encourages users to voice their problems and promotes open communication in the community.

4.
Concepts: responding to user feedback, planning future updates based on feedback
- The designer responds to user feedback and indicates plans for future updates.
- The designer indicates that user feedback will be incorporated and prioritized in future updates.

5.
Concepts: affirm feedback, acknowledging user suggestions
- The designer acknowledges and affirms feedback from users.
- The designer agrees to implement user suggestions and acknowledges requests for future updates.

6.
Concepts: gather user feedback, eliciting user feedback
- The designer gathers user experiences and asks for feedback on any issues encountered.
- The designer requests and solicits user feedback and suggestions for improvements.

7.
Concepts: confirm upcoming updates, inform about software update timelines
- Designers confirm timelines for upcoming software updates.
- Designers inform the community about the timeline for upcoming software updates and the current version of the software.

8.
Concepts: list updates and bug fixes, version update notes
- Designers list new features and bug fixes in the software update.
- Designers provide detailed notes on updates, including new features and improvements in the software.

9.
Concepts: announce software updates, announce new version releases
- Designers provide updates and inform users about software versions.
- Designers announce the release of a new version along with updates.

10.
Concepts: share visual updates, provide development updates
- Designers share visual and detailed updates about the software.
- Designers share information about updates and future plans for the software.

11.
Concepts: resolving user concerns, reassuring users about progress
- Designers address user concerns by reassuring them about software development progress.
- Designers reassure users about progress and ongoing optimization of features.

12.
Concepts: user guidance, provide feature guidance
- A designer provides detailed guidance on new features and functionalities of the software.
- Designers provide instructions on how to use specific software features.

13.
Concepts: design discussion, discuss future interests
- Designer engages in discussions about design considerations and future directions.
- Designers discuss ongoing work and potential future opportunities.

14.
Concepts: share development plans, outline development goals
- Designers outline future considerations for software development.
- Designers outline specific goals and plans for future software development.

15.
Concepts: acknowledge limitations, explain software limitations
- A designer acknowledges potential issues with software compatibility.
- Designers clarify limitations regarding software functionality.

16.
Concepts: appreciate designer efforts, demonstrate appreciation
- Users express gratitude and acknowledge the designer's contributions.
- Users express gratitude or appreciation for the efforts of the designers or other community members.

17.
Concepts: community support, acknowledge community support
- Instances where users express support, encouragement, or appreciation for the designers' efforts.
- A designer expresses gratitude for the community's support.

18.
Concepts: reciprocate greetings, greeting the community warmly
- Designers acknowledge and reciprocate greetings from community members.
- Designers and users greet the community to foster a welcoming environment.

19.
Concepts: offering co-designing, inviting community participation for input
- Designers indicate a willingness to involve the community in the development process through consultations.
- Designers invite community members to share their thoughts or suggestions for improvements and indicate plans to gather feedback before proceeding with development.

20.
Concepts: emoji, express emotions
- A user includes an emoji in their message, indicating emotional expression or tone.
- Users express feelings or reactions through emojis in conversation.

21.
Concepts: check for updates, inquire about update status
- Users inquire about the timeline or availability of software updates.
- User inquires about the status of updates for the Android version of the application.

22.
Concepts: share positive feedback, describe students' positive responses in class
- Users share positive feedback about the software's effectiveness in engaging students and their positive classroom experiences.
- A user describes positive student reactions to the application during class.
===
---
Definitions for each code (22 in total):
1.
Concepts: inquiring about user backgrounds, ask about user's professional background  
Relationship: The designer seeks to understand the user's context by asking about their educational and professional background.  
Criteria: The designer inquires about the user's educational level and professional background to tailor communication and support.  
Phrase: Inquire about user backgrounds  

2.
Concepts: user interaction, seeking and providing clarification  
Relationship: Designers and users engage in a reciprocal process of clarifying and addressing specific aspects of the application.  
Criteria: Designers and users engage in discussions that involve clarifying technical details and addressing specific aspects during discussions.  
Phrase: Seek and provide clarification  

3.
Concepts: encouraging user feedback, encouraging open discussion  
Relationship: The designer fosters an environment that promotes user participation and open communication.  
Criteria: The designer encourages users to participate in discussions, voice their problems, and ask questions.  
Phrase: Encourage user feedback  

4.
Concepts: responding to user feedback, planning future updates based on feedback  
Relationship: The designer integrates user feedback into future planning and communicates this to the community.  
Criteria: The designer responds to user feedback and indicates plans for future updates based on that feedback.  
Phrase: Respond to user feedback  

5.
Concepts: affirm feedback, acknowledging user suggestions  
Relationship: The designer validates user input by acknowledging and agreeing to implement suggestions.  
Criteria: The designer acknowledges and affirms feedback from users and agrees to implement their suggestions.  
Phrase: Affirm user feedback  

6.
Concepts: gather user feedback, eliciting user feedback  
Relationship: The designer actively seeks user experiences and suggestions to improve the application.  
Criteria: The designer gathers user experiences and requests feedback on any issues encountered.  
Phrase: Gather user feedback  

7.
Concepts: confirm upcoming updates, inform about software update timelines  
Relationship: Designers communicate timelines and updates to keep the community informed.  
Criteria: Designers confirm timelines for upcoming software updates and inform the community about the current version.  
Phrase: Confirm upcoming updates  

8.
Concepts: list updates and bug fixes, version update notes  
Relationship: Designers provide detailed information about software changes and improvements.  
Criteria: Designers list new features and bug fixes in the software update and provide detailed notes on updates.  
Phrase: List updates and bug fixes  

9.
Concepts: announce software updates, announce new version releases  
Relationship: Designers keep users informed about software versions and updates.  
Criteria: Designers provide updates and announce the release of a new version along with updates.  
Phrase: Announce software updates  

10.
Concepts: share visual updates, provide development updates  
Relationship: Designers communicate progress and future plans through visual and detailed updates.  
Criteria: Designers share visual and detailed updates about the software and future plans.  
Phrase: Share development updates  

11.
Concepts: resolving user concerns, reassuring users about progress  
Relationship: Designers address user concerns by providing reassurance about ongoing development.  
Criteria: Designers address user concerns and reassure them about software development progress.  
Phrase: Resolve user concerns  

12.
Concepts: user guidance, provide feature guidance  
Relationship: Designers offer instructional support to help users navigate new features.  
Criteria: A designer provides detailed guidance on new features and instructions on how to use specific software functionalities.  
Phrase: Provide user guidance  

13.
Concepts: design discussion, discuss future interests  
Relationship: Designers engage in conversations about current design considerations and future opportunities.  
Criteria: Designers engage in discussions about design considerations and potential future directions.  
Phrase: Discuss design interests  

14.
Concepts: share development plans, outline development goals  
Relationship: Designers communicate their future goals and plans for software development.  
Criteria: Designers outline future considerations and specific goals for software development.  
Phrase: Share development plans  

15.
Concepts: acknowledge limitations, explain software limitations  
Relationship: Designers clarify the boundaries of software functionality and compatibility.  
Criteria: A designer acknowledges potential issues with software compatibility and clarifies limitations regarding functionality.  
Phrase: Acknowledge software limitations  

16.
Concepts: appreciate designer efforts, demonstrate appreciation  
Relationship: Users express gratitude towards the contributions of designers and community members.  
Criteria: Users express gratitude and acknowledge the designer's contributions and efforts.  
Phrase: Appreciate designer efforts  

17.
Concepts: community support, acknowledge community support  
Relationship: Users and designers express mutual appreciation for support within the community.  
Criteria: Instances where users express support for designers and a designer expresses gratitude for community support.  
Phrase: Acknowledge community support  

18.
Concepts: reciprocate greetings, greeting the community warmly  
Relationship: Designers and users foster a welcoming environment through mutual greetings.  
Criteria: Designers acknowledge and reciprocate greetings from community members to create a welcoming atmosphere.  
Phrase: Reciprocate greetings  

19.
Concepts: offering co-designing, inviting community participation for input  
Relationship: Designers actively seek community involvement in the development process.  
Criteria: Designers indicate a willingness to involve the community in development through consultations and invite input for improvements.  
Phrase: Offer co-designing  

20.
Concepts: emoji, express emotions  
Relationship: Users utilize emojis to convey emotional tone and reactions in communication.  
Criteria: A user includes an emoji in their message to indicate emotional expression or tone.  
Phrase: Use emojis  

21.
Concepts: check for updates, inquire about update status  
Relationship: Users actively seek information regarding the status of software updates.  
Criteria: Users inquire about the timeline or availability of software updates, specifically for the Android version.  
Phrase: Check for updates  

22.
Concepts: share positive feedback, describe students' positive responses in class  
Relationship: Users communicate their positive experiences and feedback regarding the software's effectiveness.  
Criteria: Users share positive feedback about the software's effectiveness in engaging students and describe positive classroom experiences.  
Phrase: Share positive feedback  
---