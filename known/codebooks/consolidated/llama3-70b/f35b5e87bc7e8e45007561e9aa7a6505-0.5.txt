You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (17 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
17. {Repeat the input 17}
Relationship: {The logical relationship between concepts in input 17}
Criteria: {A sentence of consolidated criteria for code 17}
Label: {A consolidated label of code 17}
Category: {2-4 words for code 17}
---
~~~
1. inquiry and response, questions and clarifications.
- Questions asked by community members to clarify or seek information, with responses provided.
- Instances where users ask questions or seek clarification.

2. information seeking, seeking assistance.
- Users actively seeking information or guidance within the online community.
- Instances where participants ask for assistance, specific resources, or information from the community.

3. user background, educational background.
- References to users' professional or educational backgrounds that might influence their interaction with the app.
- Understanding participants' educational backgrounds and their impact on technology use.

4. emojis, emotional expression, informal communication, emoji-based engagement.
- Use of emojis in communication.
- Community members expressing or conveying emotions through language or emojis.
- Instances where participants use emojis, images, or informal language to express reactions, emotions, or illustrate points.
- Encompasses all uses of emojis and other minimal verbal interactions that signify emotional reactions or active participation within the community.

5. encouragement, expressions of gratitude.
- Expressions of gratitude, appreciation, or motivational statements that foster a sense of community.
- Expressions of gratitude or appreciation towards others.

6. apologies, apologies for disturbances.
- Designers or community members apologizing for disturbances or disruptions.
- The designer apologizes for any inconvenience caused by late messages.

7. software access, software availability and release.
- Mentions related to downloading, accessing, or inquiring about specific versions of the Physics Lab software.
- Statements that discuss the availability of the Physics Lab software for download, as well as the release of new versions or updates to the software.

8. learning support features, learning support and teaching experience.
- Features or aspects of the software that promote active engagement, experimentation, or conceptual understanding of physics concepts.
- Statements that discuss the software's learning support features, the teaching experience of group members, and the community's learning and exploration of physics concepts.

9. feature roadmap, priority setting.
- Discussions or decisions around planned software capabilities and the prioritization of feature development.
- Designers or community members deciding or discussing the order of tasks, features, or sections for development or improvement.

10. technical considerations, technical discussions.
- Discussions by the designer that address technical aspects or limitations of the software.
- Discussions about technical aspects of the feature development, such as optimization or component adjustments.

11. developer responsiveness, designer openness and responsiveness.
- How the developer responds to user requests or questions, indicating their engagement and responsiveness to community needs.
- Discussions that demonstrate the responsiveness of the designers or developers to user feedback and needs, as well as the designer's openness to suggestions and feedback from the community.

12. collaborative design, collaborative software development.
- Instances of joint effort or input-seeking between designers and users for software development or improvement.
- Includes all instances and discussions where users are actively involved in decision-making or development processes to enhance or modify software features.

13. co-creation and community-driven design, community influence and collaborative improvement.
- Statements that describe the co-creation process, the community's role in software development, and the designer's efforts to incorporate community feedback and suggestions.
- Statements that discuss the community's impact on the software's development, their feedback, and the collaborative efforts to improve the software.

14. user anticipation, anticipation and excitement, update anticipation.
- Understanding users' anticipation for updates and their reactions to the release schedule.
- Instances where users show excitement or anticipation for new updates or features.
- Community members express anticipation or inquire about upcoming updates, reflecting engagement and interest.

15. progress updates, iterative development.
- Designer providing updates on the development process.
- Instances where the designer discusses ongoing improvements and updates to the software.

16. user feedback integration.
- Changes or updates in the software reflecting user suggestions or needs.
- Instances where users provide feedback on software features and usability, and designers acknowledge and incorporate this feedback into the design process.

17. resource sharing.
- Instances where participants offer to share or discuss sharing resources, including images, within the group.
- Members sharing or requesting access to files or resources within the group.
===
---
Categories:
* Community Engagement
* Software Development
* Learning Support
* Design Process
* User Experience

Definitions for each code:

1. inquiry and response, questions and clarifications.
Relationship: Inclusive (questions and clarifications are part of inquiry and response)
Criteria: Instances of community members asking questions or seeking clarification, with responses provided.
Label: Inquiry and Response
Category: Community Engagement

2. information seeking, seeking assistance.
Relationship: Parallel (both concepts are related to seeking information or guidance)
Criteria: Users actively seeking information or guidance within the online community.
Label: Information Seeking
Category: Community Engagement

3. user background, educational background.
Relationship: Inclusive (educational background is a type of user background)
Criteria: References to users' professional or educational backgrounds that might influence their interaction with the app.
Label: User Background
Category: User Experience

4. emojis, emotional expression, informal communication, emoji-based engagement.
Relationship: Inclusive (all concepts are related to emotional expression and informal communication)
Criteria: Use of emojis in communication, conveying emotions through language or emojis, and minimal verbal interactions.
Label: Emotional Expression
Category: Community Engagement

5. encouragement, expressions of gratitude.
Relationship: Parallel (both concepts are related to positive interactions)
Criteria: Expressions of gratitude, appreciation, or motivational statements that foster a sense of community.
Label: Encouragement
Category: Community Engagement

6. apologies, apologies for disturbances.
Relationship: Inclusive (apologies for disturbances are a type of apology)
Criteria: Designers or community members apologizing for disturbances or disruptions.
Label: Apologies
Category: Community Engagement

7. software access, software availability and release.
Relationship: Inclusive (software availability and release are part of software access)
Criteria: Mentions related to downloading, accessing, or inquiring about specific versions of the Physics Lab software.
Label: Software Access
Category: Software Development

8. learning support features, learning support and teaching experience.
Relationship: Inclusive (learning support features are part of learning support)
Criteria: Features or aspects of the software that promote active engagement, experimentation, or conceptual understanding of physics concepts.
Label: Learning Support
Category: Learning Support

9. feature roadmap, priority setting.
Relationship: Inclusive (priority setting is part of feature roadmap)
Criteria: Discussions or decisions around planned software capabilities and the prioritization of feature development.
Label: Feature Roadmap
Category: Software Development

10. technical considerations, technical discussions.
Relationship: Inclusive (technical discussions are part of technical considerations)
Criteria: Discussions by the designer that address technical aspects or limitations of the software.
Label: Technical Considerations
Category: Software Development

11. developer responsiveness, designer openness and responsiveness.
Relationship: Inclusive (designer openness and responsiveness are part of developer responsiveness)
Criteria: How the developer responds to user requests or questions, indicating their engagement and responsiveness to community needs.
Label: Developer Responsiveness
Category: Design Process

12. collaborative design, collaborative software development.
Relationship: Inclusive (collaborative software development is part of collaborative design)
Criteria: Instances of joint effort or input-seeking between designers and users for software development or improvement.
Label: Collaborative Design
Category: Design Process

13. co-creation and community-driven design, community influence and collaborative improvement.
Relationship: Inclusive (community influence and collaborative improvement are part of co-creation and community-driven design)
Criteria: Statements that describe the co-creation process, the community's role in software development, and the designer's efforts to incorporate community feedback and suggestions.
Label: Co-Creation
Category: Design Process

14. user anticipation, anticipation and excitement, update anticipation.
Relationship: Inclusive (anticipation and excitement are part of user anticipation)
Criteria: Understanding users' anticipation for updates and their reactions to the release schedule.
Label: User Anticipation
Category: User Experience

15. progress updates, iterative development.
Relationship: Inclusive (iterative development is part of progress updates)
Criteria: Designer providing updates on the development process.
Label: Progress Updates
Category: Software Development

16. user feedback integration.
Relationship: N/A (single concept)
Criteria: Changes or updates in the software reflecting user suggestions or needs.
Label: User Feedback Integration
Category: Design Process

17. resource sharing.
Relationship: N/A (single concept)
Criteria: Instances where participants offer to share or discuss sharing resources, including images, within the group.
Label: Resource Sharing
Category: Community Engagement