You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (13 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
13. 
Concepts: {Repeat the input 13}
Relationship: {What is logical relationship between concepts in code 13, or N/A if not applicable}
Criteria: {Who did what, and how for code 13}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: announce updates, informs about updates and changes
- Designers announce or summarize updates, changes, or additions to the software to facilitate understanding.
- The designer informs the community about updates, explains changes to software components, and announces design changes.

2.
Concepts: informing about submission status, updates status and waits for review
- Designer informs users about the status of a submission or update.
- Designers inform users about waiting for review or approval and update the status of a feature or functionality.

3.
Concepts: promise to improve, expressing commitment
- Designer makes a promise or commitment to improve the software or community.
- The designer expresses gratitude for the community's support and pledges improvement.

4.
Concepts: sets and provides a timeline, shares and communicates the timeline
- The designer sets or plans a timeline for an update or release to the community.
- The designer shares or confirms a schedule or timeline for updates with the community.

5.
Concepts: seeking convenience, advocating for convenience
- Users emphasize the importance of convenience in the software.
- Users express their hopes for convenient features in the software.

6.
Concepts: aim for usability, enhancing usability
- Designer aims to make the software more user-friendly or simpler.
- A designer promotes ease of use or understanding to improve user experience.

7.
Concepts: considering user context and limitations, provides context and considers design constraints
- The designer considers the user's context, including limitations, when designing the software.
- A user provides context for design constraints or limitations and a user or designer mentions or considers hardware or practical constraints that impact design decisions.

8.
Concepts: guiding user behavior, providing step-by-step guidance
- Designer guides user behavior or provides instructions.
- A designer or user provides guidance or direction to facilitate understanding or use.

9.
Concepts: emphasize importance of visual representations, provides examples and visual aids
- Designer emphasizes the importance of visual representations in understanding concepts or ideas.
- A designer provides examples or illustrations of a concept or feature, uses visual aids to clarify or explain a concept, or provides visual information to facilitate understanding.

10.
Concepts: gathering feedback, reflecting on feedback
- Designer gathers feedback or opinions from users.
- Designer reflects on user feedback to consider suggestions.

11.
Concepts: confirming information, confirm design choices
- A user confirms or responds to a designer's question.
- A user or designer confirms or validates a design choice or decision.

12.
Concepts: expressing politeness, apologizing for disturbances
- User or designer uses polite language or apologizes for a disturbance.
- A designer apologizes for any disturbance or inconvenience to maintain community etiquette.

13.
Concepts: inquiring about resources, inquiring about download
- Inquiring about download options or resources.
- Users request information about downloading or accessing the software.
===
Here are the definitions for each code:

---
1.
Concepts: announce updates, informs about updates and changes
Relationship: The designer's announcement of updates and changes is a way of informing the community about the changes.
Criteria: Designers inform the community about updates and changes to the software.
Phrase: Informing about updates and changes

2.
Concepts: informing about submission status, updates status and waits for review
Relationship: The designer's update on submission status is a way of keeping the community informed about the review process.
Criteria: Designers update users about the status of submissions or updates.
Phrase: Updating submission status

3.
Concepts: promise to improve, expressing commitment
Relationship: The designer's promise to improve is an expression of commitment to the community.
Criteria: Designers make promises or commitments to improve the software or community.
Phrase: Making improvement commitments

4.
Concepts: sets and provides a timeline, shares and communicates the timeline
Relationship: The designer's provision of a timeline is a way of sharing and communicating plans with the community.
Criteria: Designers set and share timelines for updates with the community.
Phrase: Sharing timelines

5.
Concepts: seeking convenience, advocating for convenience
Relationship: Users' emphasis on convenience is a way of advocating for easier use of the software.
Criteria: Users emphasize the importance of convenience in the software.
Phrase: Advocating for convenience

6.
Concepts: aim for usability, enhancing usability
Relationship: The designer's aim for usability is a way of enhancing the user experience.
Criteria: Designers aim to make the software more user-friendly or simpler.
Phrase: Enhancing usability

7.
Concepts: considering user context and limitations, provides context and considers design constraints
Relationship: The designer's consideration of user context is a way of providing context for design constraints.
Criteria: Designers consider user context, including limitations, when designing the software.
Phrase: Considering user context

8.
Concepts: guiding user behavior, providing step-by-step guidance
Relationship: The designer's guidance is a way of providing step-by-step instructions.
Criteria: Designers guide user behavior or provide instructions.
Phrase: Guiding user behavior

9.
Concepts: emphasize importance of visual representations, provides examples and visual aids
Relationship: The designer's emphasis on visual representations is a way of providing examples and visual aids.
Criteria: Designers emphasize the importance of visual representations in understanding concepts or ideas.
Phrase: Emphasizing visual representations

10.
Concepts: gathering feedback, reflecting on feedback
Relationship: The designer's gathering of feedback is a way of reflecting on user opinions.
Criteria: Designers gather feedback or opinions from users and reflect on them.
Phrase: Gathering and reflecting on feedback

11.
Concepts: confirming information, confirm design choices
Relationship: The user's confirmation is a way of validating design choices.
Criteria: Users confirm or respond to designers' questions or validate design choices.
Phrase: Confirming design choices

12.
Concepts: expressing politeness, apologizing for disturbances
Relationship: The user or designer's politeness is a way of apologizing for disturbances.
Criteria: Users or designers use polite language or apologize for disturbances.
Phrase: Expressing politeness

13.
Concepts: inquiring about resources, inquiring about download
Relationship: The user's inquiry about resources is a way of inquiring about download options.
Criteria: Users request information about downloading or accessing the software.
Phrase: Inquiring about resources