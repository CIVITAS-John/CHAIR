You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: interviewee, knowing many languages but does not have much time for each one
- The participant is an expert in multiple languages but lacks time to spend on each one.
- Knows many languages but lacks time for each one

2.
Concepts: limited time for language learning, limitations of time for each language
- E01 notes limited time for each language.
- The participant mentions the limitation of time to spend on each language, highlighting the need for efficient learning and practice.

3.
Concepts: acknowledging limited time, recognizing time constraints
- Acknowledges the limitations of available time for learning and development.
- Recognizes the limitations of human time and the need for efficient learning.

4.
Concepts: novice-expert needs tension, notes limited options and tension between novice and expert design needs
- Highlights tension between novice and expert needs.
- Notes limited options and tension between novice and expert design needs.

5.
Concepts: design tension, tension between novice and expert-oriented design
- Noting the tension between novice-oriented and expert-oriented design in AI-driven interfaces.
- Expresses tension between novice and expert-oriented design in LLM-driven interfaces.

6.
Concepts: learning curve of ai-assisted tools, acknowledging the ai tool learning curve
- Acknowledging the learning curve of using AI-assisted tools.
- Interviewee acknowledges a learning curve for AI tools, requiring time to figure out how everything works.

7.
Concepts: learning curve due to design, identifying a steep learning curve
- The participant acknowledges a learning curve due to non-expert friendly design.
- Identifies a steep learning curve due to design limitations.

8.
Concepts: expressing learning curve struggles, steep learning curve and frustration points
- Expresses struggles with the learning curve of AI-driven interfaces.
- The participant reflects on the steep learning curve and frustration points for novices using the AI system.

9.
Concepts: struggling with unfamiliar design, struggling with unfamiliar interface design
- Struggles with unfamiliar design and requires a learning curve.
- Struggles with unfamiliar interface design and learning curves.

10.
Concepts: challenges faced by beginners, beginners' challenges with chunking code
- Interviewee highlights the challenges faced by beginners when writing chunks of code and finding many errors.
- Interviewee discusses the challenges faced by beginners in NetLogo, such as AI hallucinations.
- The code highlights the challenges beginners face when chunking code, leading to multiple errors.

11.
Concepts: finding many errors, beginner coding challenges, beginners writing chunks of code, multiple errors in code
- Beginners write chunks of code and then find many errors that they cannot fix.
- Notes that beginners may write large code chunks, leading to multiple errors.
- The user notes that beginners often write large chunks of code and then find many errors.
- The participant struggles with multiple errors in code, particularly for beginners.

12.
Concepts: observing beginners' coding challenges, observes beginners' tendencies to write extensive code before error checking
- Observing that beginners often write large chunks of code and struggle to fix errors.
- Observes beginners' tendencies to write extensive code before error checking.

13.
Concepts: ai collaboration challenges, human-ai collaboration challenges
- Identifying a key challenge in working with AI.
- Experiencing challenges in human-AI collaboration

14.
Concepts: reflecting on how novices might get stuck, reflecting on novice difficulties in human-ai collaboration
- Reflects on how novices might get stuck during human-AI collaboration.
- The participant reflects on how novices might get stuck during human-AI collaboration.

15.
Concepts: novice challenges with ai, highlighting novices' challenges
- Identifying challenges faced by novices when using AI
- Highlighting challenges faced by novices in human-AI collaboration.

16.
Concepts: novice debugging challenges, novice challenges in ai-assisted programming
- Identifying the potential debugging challenges that novices may face when working with AI.
- Reflects on the challenges novices face in programming and debugging with AI assistance, highlighting the importance of understanding debugging concepts.

17.
Concepts: empathizing with novice users, empathizing with beginner frustrations
- E01 reflects on novices' struggles during human-AI collaboration.
- Empathizes with beginner frustrations in AI-assisted tasks.

18.
Concepts: challenges of novices seeking help, challenges in seeking help
- The interviewee discusses the challenges of novices seeking help.
- The participant notes the challenges of seeking help, particularly for novices who may not provide sufficient context.

19.
Concepts: independent ai code correction, independently corrects errors in ai code
- The participant manually corrects AI-generated code without seeking explanations.
- Independently corrects errors in AI code without requesting explanations.

20.
Concepts: debugging ai-generated code, ai-generated code interpretation
- Identifying and correcting errors in AI-generated code
- E01 describes the process of identifying and correcting errors in AI-generated code through iterative interactions.
- The participant reads and debugs code generated by the AI when it fails to meet their expectations.
- Engages in debugging when AI-generated code does not function as expected.
- Interpreting and fixing AI-generated code.

21.
Concepts: manual ai code error fixing, manually fixing ai generated code, manually fixing ai-generated code errors
- Manually fixes AI code errors.
- Manually fixes AI-generated code.
- Manually fixing errors in AI-generated code

22.
Concepts: ai-assisted code fixing, fixing own ideas with ai
- Using AI to fix code with own ideas and approaches.
- The participant uses AI to fix their own ideas and code.

23.
Concepts: manually codes with ai guidance, manual coding with ai guidance, manually writing code with ai guidance
- Interviewee uses AI guidance to manually write code.
- Writing code manually with the guidance of AI-generated code, rather than copying and pasting.
- E04 writes code manually with AI guidance.

24.
Concepts: adjusting model setup, refining model setup
- E04 adjusts model setup based on AI-generated code.
- The participant refines their model setup based on AI-generated code.

25.
Concepts: integrating ai-generated code, integrating ai-generated code into the model
- Integrates AI-generated code into the model selectively.
- The participant integrates AI-generated code fully into their workflow.
- Integrates AI-generated code into the model.

26.
Concepts: flexibility in approach, utilizing ai generated code fully
- Demonstrates flexibility in approach by using AI-generated code completely when realizing time constraints.
- Utilizes AI-generated code fully, especially when time-constrained.

27.
Concepts: facing time constraints, using ai generated code under time constraints, using ai-generated code due to time constraints, time-sensitive ai usage, uses ai code due to time constraints, time-constrained ai adoption
- Faces time constraints and uses AI-generated code to save time.
- The code uses AI-generated code under time constraints, taking advantage of the speed and convenience.
- Describes the use of AI-generated code due to time constraints.
- The participant uses the AI-generated code due to time constraints.
- The participant uses AI-generated code due to time constraints, seeking to save time and effort.
- Using AI-generated code due to time constraints

28.
Concepts: selective code copying, selectively copying code from ai's response, selective code copying ( duplicate of code 2), selectively copying code to the model
- Interviewee selectively copies code from the AI's output.
- The participant selectively copies code from the AI's response.
- The interviewee selectively copies code from the AI tool into their own work.

29.
Concepts: selective use of ai-generated code, selectively copying ai-generated code
- Selectively copies AI-generated code and evaluates its relevance.
- Uses AI-generated code as a reference, rather than copying and pasting, to write their own code.
- Selectively copies AI-generated code to the model, evaluating its relevance.

30.
Concepts: not copying and pasting, avoiding copy-paste approach
- The participant does not simply copy and paste AI-generated code, but uses it as a reference.
- The participant avoids a copy-paste approach, instead using generated code as a reference.

31.
Concepts: exploring alternative uses of ai output, exploring alternative ways to utilize ai-generated code
- Interviewee explores alternative ways to use the AI's output, such as copying and pasting code.
- Explores alternative ways to utilize AI-generated code, such as copying and pasting.

32.
Concepts: deciding to copy and paste ai output, deciding to copy and paste ai-generated code
- Deciding to copy and paste AI output
- Deciding to copy and paste AI-generated code
===
Here are the definitions for each code:

---
1.
Concepts: interviewee, knowing many languages but does not have much time for each one
Relationship: The interviewee's expertise in multiple languages is limited by their lack of time to spend on each one.
Criteria: An expert in multiple languages faces time constraints for each language.
Phrase: Acknowledges limited time for language expertise.

2.
Concepts: limited time for language learning, limitations of time for each language
Relationship: The limitation of time is a constraint for learning and practicing each language.
Criteria: An expert notes limited time for each language, highlighting the need for efficient learning.
Phrase: Notes time constraints for language learning.

3.
Concepts: acknowledging limited time, recognizing time constraints
Relationship: The interviewee recognizes the limitations of available time for learning and development.
Criteria: An expert acknowledges the limitations of available time for learning and development.
Phrase: Recognizes time constraints.

4.
Concepts: novice-expert needs tension, notes limited options and tension between novice and expert design needs
Relationship: The tension between novice and expert needs arises from limited design options.
Criteria: An expert highlights the tension between novice and expert needs due to limited design options.
Phrase: Highlights novice-expert needs tension.

5.
Concepts: design tension, tension between novice and expert-oriented design
Relationship: The tension between novice-oriented and expert-oriented design is a design challenge.
Criteria: An expert notes the tension between novice-oriented and expert-oriented design in AI-driven interfaces.
Phrase: Notes design tension.

6.
Concepts: learning curve of ai-assisted tools, acknowledging the ai tool learning curve
Relationship: The interviewee acknowledges the learning curve of using AI-assisted tools.
Criteria: An expert acknowledges the learning curve of AI-assisted tools, requiring time to figure out how everything works.
Phrase: Acknowledges AI tool learning curve.

7.
Concepts: learning curve due to design, identifying a steep learning curve
Relationship: The learning curve is a result of non-expert friendly design.
Criteria: An expert identifies a steep learning curve due to design limitations.
Phrase: Identifies steep learning curve.

8.
Concepts: expressing learning curve struggles, steep learning curve and frustration points
Relationship: The learning curve leads to frustration points for novices.
Criteria: An expert expresses struggles with the learning curve of AI-driven interfaces, leading to frustration points.
Phrase: Expresses learning curve struggles.

9.
Concepts: struggling with unfamiliar design, struggling with unfamiliar interface design
Relationship: Unfamiliar design leads to struggles and a learning curve.
Criteria: An expert struggles with unfamiliar interface design and learning curves.
Phrase: Struggles with unfamiliar design.

10.
Concepts: challenges faced by beginners, beginners' challenges with chunking code
Relationship: Beginners face challenges when writing chunks of code, leading to multiple errors.
Criteria: An expert highlights the challenges faced by beginners when writing chunks of code, leading to multiple errors.
Phrase: Highlights beginners' challenges.

11.
Concepts: finding many errors, beginner coding challenges, beginners writing chunks of code, multiple errors in code
Relationship: Beginners' coding challenges lead to multiple errors in code.
Criteria: An expert notes that beginners write large code chunks, leading to multiple errors.
Phrase: Notes beginners' coding challenges.

12.
Concepts: observing beginners' coding challenges, observes beginners' tendencies to write extensive code before error checking
Relationship: Beginners' tendencies lead to coding challenges and errors.
Criteria: An expert observes beginners' tendencies to write extensive code before error checking, leading to challenges.
Phrase: Observes beginners' coding challenges.

13.
Concepts: ai collaboration challenges, human-ai collaboration challenges
Relationship: Human-AI collaboration faces challenges.
Criteria: An expert identifies a key challenge in working with AI.
Phrase: Identifies AI collaboration challenges.

14.
Concepts: reflecting on how novices might get stuck, reflecting on novice difficulties in human-ai collaboration
Relationship: Novices may get stuck during human-AI collaboration due to difficulties.
Criteria: An expert reflects on how novices might get stuck during human-AI collaboration.
Phrase: Reflects on novice difficulties.

15.
Concepts: novice challenges with ai, highlighting novices' challenges
Relationship: Novices face challenges when using AI.
Criteria: An expert highlights challenges faced by novices when using AI.
Phrase: Highlights novice challenges.

16.
Concepts: novice debugging challenges, novice challenges in ai-assisted programming
Relationship: Novices face debugging challenges in AI-assisted programming.
Criteria: An expert reflects on the challenges novices face in programming and debugging with AI assistance.
Phrase: Reflects on novice debugging challenges.

17.
Concepts: empathizing with novice users, empathizing with beginner frustrations
Relationship: The expert empathizes with novice users' frustrations.
Criteria: An expert empathizes with beginner frustrations in AI-assisted tasks.
Phrase: Empathizes with novice users.

18.
Concepts: challenges of novices seeking help, challenges in seeking help
Relationship: Novices face challenges when seeking help.
Criteria: An expert notes the challenges of novices seeking help, particularly when they may not provide sufficient context.
Phrase: Notes challenges in seeking help.

19.
Concepts: independent ai code correction, independently corrects errors in ai code
Relationship: The expert corrects AI code errors independently.
Criteria: An expert manually corrects AI-generated code without seeking explanations.
Phrase: Corrects AI code errors independently.

20.
Concepts: debugging ai-generated code, ai-generated code interpretation
Relationship: Debugging involves interpreting and fixing AI-generated code.
Criteria: An expert engages in debugging when AI-generated code does not function as expected.
Phrase: Debugs AI-generated code.

21.
Concepts: manual ai code error fixing, manually fixing ai generated code, manually fixing ai-generated code errors
Relationship: Manual fixing involves correcting AI code errors.
Criteria: An expert manually fixes AI code errors.
Phrase: Manually fixes AI code errors.

22.
Concepts: ai-assisted code fixing, fixing own ideas with ai
Relationship: AI-assisted code fixing involves using AI to fix own ideas.
Criteria: An expert uses AI to fix their own ideas and code.
Phrase: Fixes code with AI assistance.

23.
Concepts: manually codes with ai guidance, manual coding with ai guidance, manually writing code with ai guidance
Relationship: Manual coding involves using AI guidance.
Criteria: An expert uses AI guidance to manually write code.
Phrase: Codes manually with AI guidance.

24.
Concepts: adjusting model setup, refining model setup
Relationship: Adjusting the model setup involves refining it based on AI-generated code.
Criteria: An expert refines their model setup based on AI-generated code.
Phrase: Refines model setup.

25.
Concepts: integrating ai-generated code, integrating ai-generated code into the model
Relationship: Integrating AI-generated code involves incorporating it into the model.
Criteria: An expert integrates AI-generated code into the model selectively.
Phrase: Integrates AI-generated code.

26.
Concepts: flexibility in approach, utilizing ai generated code fully
Relationship: Flexibility in approach involves using AI-generated code fully.
Criteria: An expert demonstrates flexibility in approach by using AI-generated code completely when realizing time constraints.
Phrase: Utilizes AI-generated code fully.

27.
Concepts: facing time constraints, using ai generated code under time constraints, using ai-generated code due to time constraints, time-sensitive ai usage, uses ai code due to time constraints, time-constrained ai adoption
Relationship: Time constraints lead to the use of AI-generated code.
Criteria: An expert uses AI-generated code due to time constraints, seeking to save time and effort.
Phrase: Uses AI-generated code due to time constraints.

28.
Concepts: selective code copying, selectively copying code from ai's response, selective code copying ( duplicate of code 2), selectively copying code to the model
Relationship: Selective copying involves choosing relevant code from the AI's response.
Criteria: An expert selectively copies code from the AI's response.
Phrase: Selectively copies code.

29.
Concepts: selective use of ai-generated code, selectively copying ai-generated code
Relationship: Selective use involves evaluating the relevance of AI-generated code.
Criteria: An expert selectively copies AI-generated code and evaluates its relevance.
Phrase: Selectively uses AI-generated code.

30.
Concepts: not copying and pasting, avoiding copy-paste approach
Relationship: The expert avoids a copy-paste approach, using AI-generated code as a reference.
Criteria: An expert avoids a copy-paste approach, using generated code as a reference.
Phrase: Avoids copy-paste approach.

31.
Concepts: exploring alternative uses of ai output, exploring alternative ways to utilize ai-generated code
Relationship: Exploring alternative uses involves finding new ways to utilize AI-generated code.
Criteria: An expert explores alternative ways to utilize AI-generated code, such as copying and pasting.
Phrase: Explores alternative uses.

32.
Concepts: deciding to copy and paste ai output, deciding to copy and paste ai-generated code
Relationship: Deciding to copy and paste involves choosing to use AI-generated code.
Criteria: An expert decides to copy and paste AI-generated code.
Phrase: Decides to copy and paste.