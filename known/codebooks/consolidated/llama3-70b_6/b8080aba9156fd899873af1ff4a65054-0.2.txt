You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (15 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
15. 
Concepts: {Repeat the input 15}
Relationship: {What is logical relationship between concepts in code 15, or N/A if not applicable}
Criteria: {Who did what, and how for code 15}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: asking follow-up questions, give further information about the conversation
- A user asks a follow-up question to clarify or seek more information.
- User provides additional information or clarification to their question or issue.

2.
Concepts: explaining reasons, suggestion justification
- A user provides a reason or explanation for a request or suggestion.
- Providing reasons or justification for a suggestion or request.

3.
Concepts: providing context, explaining question context
- A user provides background information or context related to a question or topic.
- User explains the intention or context behind their question.

4.
Concepts: emoji communication, using emojis for engagement
- A user or designer uses emojis in their communication.
- User uses an emoji in their message or response.

5.
Concepts: interacting with users, informal interaction
- Designer interacts with a user in a conversational or informal manner.
- A designer or user engages in casual, informal conversation that is not directly related to the software's features or functionality.

6.
Concepts: engaging with the community, establishing a personal connection
- A designer engages with the community, fostering a sense of connection.
- A designer establishes a personal connection with the community.

7.
Concepts: acknowledging receipt, acknowledging a response
- A user acknowledges receipt of information or a response.
- A user acknowledges or responds to a message from the designer.

8.
Concepts: acknowledging a point, acknowledging understanding
- Designer acknowledges or agrees with a user's point or statement.
- A designer acknowledges understanding or agreement with a user's statement.

9.
Concepts: confirming agreement, designer confirmation
- A user or designer confirms or agrees with someone.
- A designer confirms or agrees with a statement or request.

10.
Concepts: recognizing effort, craftsmanship acknowledgment
- A user expresses appreciation for the designer's dedication or effort.
- A user acknowledges or appreciates the craftsmanship or effort put into the software.

11.
Concepts: enthusiasm, expressing satisfaction
- Users or designers express enthusiasm or excitement about the software or its features.
- A user expresses satisfaction or praise for the software.

12.
Concepts: user appreciation, appreciating features
- Expressions of thanks or appreciation from users.
- User expresses appreciation or gratitude for a feature or the platform.

13.
Concepts: commenting on usability, provide specific feedback
- A user comments on the practicality or usability of the software.
- A user provides specific, detailed feedback on a particular aspect of the software.

14.
Concepts: suggesting new features, suggesting feature improvements, suggesting usability improvements
- A user suggests a new feature or improvement.
- Designer or user suggests improving or refining a feature or function.
- A user suggests or requests a feature to improve software usability.

15.
Concepts: making suggestions, soliciting suggestions
- User or designer makes a suggestion or recommendation.
- Requests for suggestions or ideas from users or designers.
===
Here are the definitions for each code:

---
1.
Concepts: asking follow-up questions, give further information about the conversation
Relationship: The concepts are related as they both involve seeking or providing additional information to clarify or understand the conversation.
Criteria: A user asks for or provides additional information to clarify or understand the conversation.
Phrase: Seeking clarification.

2.
Concepts: explaining reasons, suggestion justification
Relationship: The concepts are related as they both involve providing explanations or justifications for a request or suggestion.
Criteria: A user or designer provides a reason or explanation for a request or suggestion.
Phrase: Providing justification.

3.
Concepts: providing context, explaining question context
Relationship: The concepts are related as they both involve providing background information or context related to a question or topic.
Criteria: A user provides background information or context related to a question or topic.
Phrase: Providing context.

4.
Concepts: emoji communication, using emojis for engagement
Relationship: The concepts are related as they both involve using emojis to convey emotions or engage with others.
Criteria: A user or designer uses emojis to convey emotions or engage with others.
Phrase: Using emojis.

5.
Concepts: interacting with users, informal interaction
Relationship: The concepts are related as they both involve informal, conversational interactions between designers and users.
Criteria: A designer or user engages in casual, informal conversation that is not directly related to the software's features or functionality.
Phrase: Engaging informally.

6.
Concepts: engaging with the community, establishing a personal connection
Relationship: The concepts are related as they both involve building relationships or connections with the community.
Criteria: A designer engages with the community, fostering a sense of connection.
Phrase: Building connections.

7.
Concepts: acknowledging receipt, acknowledging a response
Relationship: The concepts are related as they both involve acknowledging or responding to a message or information.
Criteria: A user acknowledges receipt of information or a response.
Phrase: Acknowledging receipt.

8.
Concepts: acknowledging a point, acknowledging understanding
Relationship: The concepts are related as they both involve acknowledging or agreeing with someone's statement or point.
Criteria: A designer acknowledges or agrees with a user's point or statement.
Phrase: Acknowledging agreement.

9.
Concepts: confirming agreement, designer confirmation
Relationship: The concepts are related as they both involve confirming or agreeing with someone.
Criteria: A user or designer confirms or agrees with someone.
Phrase: Confirming agreement.

10.
Concepts: recognizing effort, craftsmanship acknowledgment
Relationship: The concepts are related as they both involve acknowledging or appreciating the effort or craftsmanship put into the software.
Criteria: A user expresses appreciation for the designer's dedication or effort.
Phrase: Acknowledging effort.

11.
Concepts: enthusiasm, expressing satisfaction
Relationship: The concepts are related as they both involve expressing positive emotions or attitudes towards the software.
Criteria: Users or designers express enthusiasm or excitement about the software or its features.
Phrase: Expressing enthusiasm.

12.
Concepts: user appreciation, appreciating features
Relationship: The concepts are related as they both involve expressing gratitude or appreciation for the software or its features.
Criteria: User expresses appreciation or gratitude for a feature or the platform.
Phrase: Expressing appreciation.

13.
Concepts: commenting on usability, provide specific feedback
Relationship: The concepts are related as they both involve providing feedback or comments on the software's usability.
Criteria: A user comments on the practicality or usability of the software.
Phrase: Providing feedback.

14.
Concepts: suggesting new features, suggesting feature improvements, suggesting usability improvements
Relationship: The concepts are related as they all involve suggesting or requesting changes or improvements to the software.
Criteria: A user suggests a new feature or improvement.
Phrase: Suggesting improvements.

15.
Concepts: making suggestions, soliciting suggestions
Relationship: The concepts are related as they both involve making or requesting suggestions or ideas.
Criteria: User or designer makes a suggestion or requests ideas from others.
Phrase: Soliciting suggestions.