You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: proposes design idea, proposed new feature
- A designer proposes a new design idea or feature.
- Suggested or proposed a new feature or development.

2.
Concepts: reiterating and emphasizing features, plan feature enhancements
- Designers reiterate or emphasize planned features or developments.
- The designer outlines planned feature enhancements or updates, including new components, characteristics, or electronic components.

3.
Concepts: confirms feature addition, promised future perfection
- A designer confirms or promises a future feature or update.
- A designer promises to perfect a feature or functionality in the future.

4.
Concepts: committing to improvement, promising improvement and commitment
- Committing to improve or fix issues in the future.
- Designers promise to improve or make changes to the platform.

5.
Concepts: describing platform components, communicating component changes
- A designer describes or introduces a new component or feature.
- The designer explains or communicates changes or adjustments to software components.

6.
Concepts: listing and mentioning bug fixes, listing updates and providing version notes
- Designers list bug fixes and mention updates to the software.
- Designers list updates and provide notes about new software versions.

7.
Concepts: providing access and informing about releases, communicating release information and availability
- Designers provide access to new features or updates and inform about their availability.
- Designers communicate release information and availability of updates or resources.

8.
Concepts: announcing updates and communicating changes, confirming updates and informing about changes
- Designers announce updates and communicate technical changes to the community.
- Designers confirm or announce updates and inform about internal changes.

9.
Concepts: showing progress, providing progress updates
- The designer shows progress or updates on the project.
- The designer updates users on the progress of development or provides information about development progress.

10.
Concepts: shares development updates, shares feature development information
- A designer shares information about progress, plans, or timelines for the software.
- A designer shares information about current or future feature development.

11.
Concepts: communicating next steps, acknowledging future plans and moving forward
- The designer communicates the next steps or actions.
- Designers acknowledge future plans and indicate decisions to move forward with design.

12.
Concepts: encourage open discussion, encourage future discussion
- The designer encourages users to discuss within the group without hesitation.
- A designer encourages future discussion or questions, fostering open discussion.

13.
Concepts: justifying design choices, providing explanatory rationales
- A designer justifies or explains the effort or reasoning behind a design decision.
- Designer or user provides clear explanations for the intention or purpose behind a question or action.

14.
Concepts: emphasize quality over quantity, emphasizing quality and optimization
- Emphasizing the importance of quality over quantity in the development process.
- A designer emphasizes the importance of quality and optimization in the development process.

15.
Concepts: highlights educational utility, emphasizes educational importance
- A designer highlights the educational utility or value of a feature.
- A designer emphasizes the educational value or potential of the software.

16.
Concepts: sharing images, suggests sharing methods
- A designer or user shares an image or visual reference.
- Designer suggests a method for sharing or collaborating.

17.
Concepts: providing feature details, explaining simulation details
- A designer provides detailed information about a feature and its benefits.
- A designer explains or informs users about simulation details or options.

18.
Concepts: explaining technical artifacts, explaining procedural details
- A designer explains technical artifacts, testing phase, or development process.
- A designer explains procedural details, such as review processes or uploading procedures.

19.
Concepts: engage directly, engage in direct communication
- A designer engages directly with users, often through private messaging.
- A designer engages in direct communication with users, often privately.

20.
Concepts: seeks expert input, educational standards consultation
- A designer seeks expert input or advice from teachers or users.
- A designer consults with users or experts on educational standards or requirements.

21.
Concepts: promised to invite feedback, plan for feedback gathering
- Designer promises to invite feedback from the group.
- A designer plans to gather opinions or feedback from users.

22.
Concepts: following up on design information, asking for future help and seeking technical assistance
- Designer or user follows up on a previous conversation or issue.
- User or designer asks for future help or technical assistance.

23.
Concepts: raises concerns, notes potential issues
- A designer raises concerns about new features or functionalities.
- A designer notes a potential bug or issue with a feature or functionality.

24.
Concepts: discusses usability issues, anticipating user experience issues
- A designer discusses and acknowledges usability issues.
- A designer anticipates potential issues or problems users may encounter.

25.
Concepts: confirming compatibility, considers future compatibility
- A designer confirms compatibility or functionality of a tool or feature.
- A designer considers the software's compatibility with different systems.

26.
Concepts: shows consideration, shows interest in user context
- A designer shows consideration or empathy towards users.
- A designer shows interest in the user's context or situation.

27.
Concepts: supports user needs, identifies user needs
- A designer supports and acknowledges user needs.
- A designer identifies potential user needs or requirements.

28.
Concepts: adapting to user constraints, considers practical constraints
- A designer adapts to user constraints or limitations.
- A designer considers practical constraints or limitations.

29.
Concepts: reflects on feedback, addressing user feedback
- A designer reflects on or considers user feedback or suggestions.
- A designer addresses user feedback or commits to adding a feature.

30.
Concepts: prioritizing usability, emphasizing intuitive design
- A designer prioritizes usability or ease of use in the software.
- A designer emphasizes the importance of intuitive and user-friendly design.

31.
Concepts: setting boundaries, setting scope and development boundaries
- A designer sets boundaries or limitations for the project or software.
- Designers define or set the scope of the project or software development.

32.
Concepts: provides timeframe, provides release timeline
- A designer provides a specific timeframe for completing a task or resolving an issue.
- A designer provides a timeline and sets expectations for future releases.
===
Here are the definitions for each code:

---
1.
Concepts: proposes design idea, proposed new feature
Relationship: The concepts are related as a designer proposes a new idea or feature.
Criteria: A designer proposes a new design idea or feature.
Phrase: Proposes a new feature.

2.
Concepts: reiterating and emphasizing features, plan feature enhancements
Relationship: The concepts are related as designers reiterate or emphasize planned features.
Criteria: Designers reiterate or emphasize planned features or developments.
Phrase: Emphasizes planned features.

3.
Concepts: confirms feature addition, promised future perfection
Relationship: The concepts are related as a designer confirms or promises a future feature.
Criteria: A designer confirms or promises a future feature or update.
Phrase: Confirms a future feature.

4.
Concepts: committing to improvement, promising improvement and commitment
Relationship: The concepts are related as designers commit to improve or fix issues.
Criteria: Designers commit to improve or fix issues in the future.
Phrase: Commits to improvement.

5.
Concepts: describing platform components, communicating component changes
Relationship: The concepts are related as designers describe or introduce new components.
Criteria: A designer describes or introduces a new component or feature.
Phrase: Describes a new component.

6.
Concepts: listing and mentioning bug fixes, listing updates and providing version notes
Relationship: The concepts are related as designers list bug fixes and updates.
Criteria: Designers list bug fixes and updates to the software.
Phrase: Lists bug fixes and updates.

7.
Concepts: providing access and informing about releases, communicating release information and availability
Relationship: The concepts are related as designers provide access to new features or updates.
Criteria: Designers provide access to new features or updates and inform about their availability.
Phrase: Provides access to new features.

8.
Concepts: announcing updates and communicating changes, confirming updates and informing about changes
Relationship: The concepts are related as designers announce updates and communicate changes.
Criteria: Designers announce updates and communicate technical changes to the community.
Phrase: Announces updates and changes.

9.
Concepts: showing progress, providing progress updates
Relationship: The concepts are related as designers show progress or updates.
Criteria: The designer shows progress or updates on the project.
Phrase: Shows progress updates.

10.
Concepts: shares development updates, shares feature development information
Relationship: The concepts are related as designers share information about progress or plans.
Criteria: A designer shares information about progress, plans, or timelines for the software.
Phrase: Shares development updates.

11.
Concepts: communicating next steps, acknowledging future plans and moving forward
Relationship: The concepts are related as designers communicate next steps or actions.
Criteria: The designer communicates the next steps or actions.
Phrase: Communicates next steps.

12.
Concepts: encourage open discussion, encourage future discussion
Relationship: The concepts are related as designers encourage discussion or questions.
Criteria: The designer encourages users to discuss within the group without hesitation.
Phrase: Encourages open discussion.

13.
Concepts: justifying design choices, providing explanatory rationales
Relationship: The concepts are related as designers justify or explain design decisions.
Criteria: A designer justifies or explains the effort or reasoning behind a design decision.
Phrase: Justifies design choices.

14.
Concepts: emphasize quality over quantity, emphasizing quality and optimization
Relationship: The concepts are related as designers emphasize quality over quantity.
Criteria: Emphasizing the importance of quality over quantity in the development process.
Phrase: Emphasizes quality over quantity.

15.
Concepts: highlights educational utility, emphasizes educational importance
Relationship: The concepts are related as designers highlight educational utility or value.
Criteria: A designer highlights the educational utility or value of a feature.
Phrase: Highlights educational utility.

16.
Concepts: sharing images, suggests sharing methods
Relationship: The concepts are related as designers share images or suggest sharing methods.
Criteria: A designer or user shares an image or visual reference.
Phrase: Shares images.

17.
Concepts: providing feature details, explaining simulation details
Relationship: The concepts are related as designers provide detailed information about features.
Criteria: A designer provides detailed information about a feature and its benefits.
Phrase: Provides feature details.

18.
Concepts: explaining technical artifacts, explaining procedural details
Relationship: The concepts are related as designers explain technical artifacts or procedural details.
Criteria: A designer explains technical artifacts, testing phase, or development process.
Phrase: Explains technical artifacts.

19.
Concepts: engage directly, engage in direct communication
Relationship: The concepts are related as designers engage directly with users.
Criteria: A designer engages directly with users, often through private messaging.
Phrase: Engages directly.

20.
Concepts: seeks expert input, educational standards consultation
Relationship: The concepts are related as designers seek expert input or consultation.
Criteria: A designer seeks expert input or advice from teachers or users.
Phrase: Seeks expert input.

21.
Concepts: promised to invite feedback, plan for feedback gathering
Relationship: The concepts are related as designers promise to invite feedback.
Criteria: Designer promises to invite feedback from the group.
Phrase: Promises to invite feedback.

22.
Concepts: following up on design information, asking for future help and seeking technical assistance
Relationship: The concepts are related as designers follow up on previous conversations.
Criteria: Designer or user follows up on a previous conversation or issue.
Phrase: Follows up on design information.

23.
Concepts: raises concerns, notes potential issues
Relationship: The concepts are related as designers raise concerns or note potential issues.
Criteria: A designer raises concerns about new features or functionalities.
Phrase: Raises concerns.

24.
Concepts: discusses usability issues, anticipating user experience issues
Relationship: The concepts are related as designers discuss usability issues.
Criteria: A designer discusses and acknowledges usability issues.
Phrase: Discusses usability issues.

25.
Concepts: confirming compatibility, considers future compatibility
Relationship: The concepts are related as designers confirm compatibility or consider future compatibility.
Criteria: A designer confirms compatibility or functionality of a tool or feature.
Phrase: Confirms compatibility.

26.
Concepts: shows consideration, shows interest in user context
Relationship: The concepts are related as designers show consideration or interest in user context.
Criteria: A designer shows consideration or empathy towards users.
Phrase: Shows consideration.

27.
Concepts: supports user needs, identifies user needs
Relationship: The concepts are related as designers support or identify user needs.
Criteria: A designer supports and acknowledges user needs.
Phrase: Supports user needs.

28.
Concepts: adapting to user constraints, considers practical constraints
Relationship: The concepts are related as designers adapt to user constraints or limitations.
Criteria: A designer adapts to user constraints or limitations.
Phrase: Adapts to user constraints.

29.
Concepts: reflects on feedback, addressing user feedback
Relationship: The concepts are related as designers reflect on or address user feedback.
Criteria: A designer reflects on or considers user feedback or suggestions.
Phrase: Reflects on feedback.

30.
Concepts: prioritizing usability, emphasizing intuitive design
Relationship: The concepts are related as designers prioritize usability or intuitive design.
Criteria: A designer prioritizes usability or ease of use in the software.
Phrase: Prioritizes usability.

31.
Concepts: setting boundaries, setting scope and development boundaries
Relationship: The concepts are related as designers set boundaries or scope for the project.
Criteria: A designer sets boundaries or limitations for the project or software.
Phrase: Sets boundaries.

32.
Concepts: provides timeframe, provides release timeline
Relationship: The concepts are related as designers provide a timeframe or release timeline.
Criteria: A designer provides a specific timeframe for completing a task or resolving an issue.
Phrase: Provides a timeframe.