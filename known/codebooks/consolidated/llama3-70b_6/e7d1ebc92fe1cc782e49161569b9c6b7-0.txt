You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: update planning, update timeline sharing, update schedule
- A designer or developer discusses planning or scheduling updates or new features.
- A designer or developer shares a timeline or schedule for an update or release.
- A designer or developer shares information about the schedule or timeline for updates.

2.
Concepts: release schedule, give a timeline for release
- A designer provides a schedule or timeline for upcoming updates or releases.
- The designer provides a timeline or schedule for a release or update.

3.
Concepts: give a timeline, development timeline
- The designer provides a timeline for a specific feature or update.
- The designer provides information about the development timeline or schedule.

4.
Concepts: promise to improve, commit to improvement
- The designer promises or commits to improving or addressing an issue.
- The designer commits to improving or addressing an issue.

5.
Concepts: commit to future update, confirm future feature
- A designer commits to including a feature or update in a future release.
- A designer confirms or agrees to implement a feature or functionality in the future.

6.
Concepts: technical detail, providing specifics
- Providing technical details or specifications about a feature or system.
- Providing specific details or information about a system or feature.

7.
Concepts: explanation, feature explanation
- Providing explanations or clarifications about a feature or concept.
- Providing explanations or clarifications about software features or functionality.

8.
Concepts: design rationale, explaining design goals
- The designer explains the reasoning behind a design decision.
- The designer explains the goals or philosophy behind a design decision.

9.
Concepts: technical clarification, provide technical details
- The designer provides technical explanations or clarifications on specific features or issues.
- A designer or developer provides technical details or explanations about the software.

10.
Concepts: provide example, illustrative example, give examples of feature
- The designer provides an example to illustrate a concept or feature.
- The designer provides a concrete example to illustrate the functionality of a feature.
- A designer provides examples of a feature or functionality.

11.
Concepts: input methods, soft keyboard consideration
- A designer considers or discusses input methods or interfaces for a simulation or feature.
- A designer considers the use of soft keyboards or input methods in a simulation or feature.

12.
Concepts: feature discussion, design discussion
- Designer discusses or debates the implementation of a feature or function.
- Designer discusses or debates the design or implementation of a feature or function.

13.
Concepts: feature development, feature implementation
- Designer discusses the development or planning of a feature or function.
- The designer discusses implementing a feature or functionality.

14.
Concepts: personal interest, expression of interest
- The designer expresses personal interest or enthusiasm for a topic.
- A designer expresses interest in a specific topic or field.

15.
Concepts: reference past experience, reflection on experiences
- Designer references past experiences or events.
- Designer reflects on past experiences or events.

16.
Concepts: explain bidirectional conversion feature, reiterate bidirectional conversion feature
- The designer explains a feature that allows for bidirectional conversion between two formats.
- The designer reiterates or explains a feature that allows for bidirectional conversion.

17.
Concepts: local export necessity, acknowledge need for local export
- The designer recognizes the need for a local export feature.
- The designer acknowledges the need for a local export feature.

18.
Concepts: design refinement, simplification and refinement in design
- Refining or simplifying design elements or features.
- The designer prioritizes simplifying or refining a design or feature.

19.
Concepts: feature simplification, suggesting simplification
- A designer or developer suggests simplifying a feature or process.
- Suggesting simplification or streamlining of a process or feature.

20.
Concepts: adapt design plan, design adaptation
- A designer adapts or adjusts their design plan based on user feedback.
- The designer adapts or modifies a design element in response to user feedback or needs.

21.
Concepts: confirm compatibility, compatibility assurance
- Designer confirms compatibility with a specific platform or system.
- A designer assures compatibility with certain devices or systems.

22.
Concepts: inform about system compatibility, suggesting checking compatibility of the system
- The designer informs users about the system's compatibility with different devices or systems.
- The designer suggests checking the compatibility of the system with a specific platform or software.

23.
Concepts: platform management, adapt to platform specific constraints
- The designer manages expectations or limitations specific to a particular platform.
- Designer adapts to platform-specific constraints or limitations.

24.
Concepts: pc version, pc version inquiries
- A user asks about or discusses the PC version of the software.
- A user inquires about the PC version of the software or its features.

25.
Concepts: seek platform information, inquire about specific platform
- Inquiring about specific platform-related information or availability.
- A user or designer asks about a specific platform or its capabilities.

26.
Concepts: problem solving, engage in problem solving
- Designer addresses or troubleshoots a problem or issue.
- The designer engages with users to identify and solve problems.

27.
Concepts: usability workaround, workaround sharing
- The designer provides a workaround for a usability issue.
- A designer or developer shares a workaround or alternative solution to a problem.

28.
Concepts: suggesting solutions, share potential solutions
- Suggesting potential solutions to a problem or issue.
- Designer proposes or suggests potential solutions to a problem or issue.

29.
Concepts: offering solution, solution offering
- Designer offers a solution or workaround to a problem.
- Offering a solution or workaround to a problem or issue, often through a technical fix or alternative approach.

30.
Concepts: suggest alternative system, offering/seeking alternative
- Suggesting alternative systems or solutions.
- Offers or suggestions of alternative solutions, workarounds, or approaches.

31.
Concepts: recognize limitation, limitation acknowledgment, acknowledge technical limitation
- A limitation or constraint of the software is acknowledged.
- A designer or developer acknowledges limitations or potential issues with a feature or software.
- A technical limitation or constraint is acknowledged.

32.
Concepts: explain current limitations, talk about limitation of the solution
- Designer explains current limitations or constraints of the app.
- A designer or developer discusses the limitations or constraints of the software or solution.
===
Here are the definitions for each code:

---
1.
Concepts: update planning, update timeline sharing, update schedule
Relationship: The concepts are related to the planning and sharing of updates or new features.
Criteria: A designer or developer shares information about planning or scheduling updates or new features.
Phrase: Shares update plans and timelines.

2.
Concepts: release schedule, give a timeline for release
Relationship: The concepts are related to providing a schedule or timeline for upcoming updates or releases.
Criteria: A designer provides a schedule or timeline for upcoming updates or releases.
Phrase: Provides a release schedule.

3.
Concepts: give a timeline, development timeline
Relationship: The concepts are related to providing a timeline for a specific feature or update.
Criteria: The designer provides a timeline for a specific feature or update.
Phrase: Provides a development timeline.

4.
Concepts: promise to improve, commit to improvement
Relationship: The concepts are related to committing to improve or address an issue.
Criteria: The designer promises or commits to improving or addressing an issue.
Phrase: Commits to improvement.

5.
Concepts: commit to future update, confirm future feature
Relationship: The concepts are related to committing to including a feature or update in a future release.
Criteria: A designer commits to including a feature or update in a future release.
Phrase: Confirms a future feature.

6.
Concepts: technical detail, providing specifics
Relationship: The concepts are related to providing technical details or specifications.
Criteria: Providing technical details or specifications about a feature or system.
Phrase: Provides technical details.

7.
Concepts: explanation, feature explanation
Relationship: The concepts are related to providing explanations or clarifications about a feature or concept.
Criteria: Providing explanations or clarifications about a feature or concept.
Phrase: Explains a feature.

8.
Concepts: design rationale, explaining design goals
Relationship: The concepts are related to explaining the reasoning behind a design decision.
Criteria: The designer explains the goals or philosophy behind a design decision.
Phrase: Explains design goals.

9.
Concepts: technical clarification, provide technical details
Relationship: The concepts are related to providing technical explanations or clarifications.
Criteria: The designer provides technical explanations or clarifications on specific features or issues.
Phrase: Provides technical clarification.

10.
Concepts: provide example, illustrative example, give examples of feature
Relationship: The concepts are related to providing examples to illustrate a concept or feature.
Criteria: The designer provides an example to illustrate a concept or feature.
Phrase: Provides an illustrative example.

11.
Concepts: input methods, soft keyboard consideration
Relationship: The concepts are related to considering input methods or interfaces for a simulation or feature.
Criteria: A designer considers or discusses input methods or interfaces for a simulation or feature.
Phrase: Considers input methods.

12.
Concepts: feature discussion, design discussion
Relationship: The concepts are related to discussing or debating the implementation of a feature or function.
Criteria: Designer discusses or debates the implementation of a feature or function.
Phrase: Discusses feature implementation.

13.
Concepts: feature development, feature implementation
Relationship: The concepts are related to developing or planning a feature or function.
Criteria: Designer discusses the development or planning of a feature or function.
Phrase: Develops a feature.

14.
Concepts: personal interest, expression of interest
Relationship: The concepts are related to expressing personal interest or enthusiasm for a topic.
Criteria: The designer expresses personal interest or enthusiasm for a topic.
Phrase: Expresses interest.

15.
Concepts: reference past experience, reflection on experiences
Relationship: The concepts are related to referencing or reflecting on past experiences or events.
Criteria: Designer references past experiences or events.
Phrase: References past experiences.

16.
Concepts: explain bidirectional conversion feature, reiterate bidirectional conversion feature
Relationship: The concepts are related to explaining a feature that allows for bidirectional conversion between two formats.
Criteria: The designer explains a feature that allows for bidirectional conversion between two formats.
Phrase: Explains bidirectional conversion.

17.
Concepts: local export necessity, acknowledge need for local export
Relationship: The concepts are related to recognizing the need for a local export feature.
Criteria: The designer recognizes the need for a local export feature.
Phrase: Acknowledges need for local export.

18.
Concepts: design refinement, simplification and refinement in design
Relationship: The concepts are related to refining or simplifying design elements or features.
Criteria: Refining or simplifying design elements or features.
Phrase: Refines design.

19.
Concepts: feature simplification, suggesting simplification
Relationship: The concepts are related to suggesting simplifying a feature or process.
Criteria: A designer or developer suggests simplifying a feature or process.
Phrase: Suggests simplification.

20.
Concepts: adapt design plan, design adaptation
Relationship: The concepts are related to adapting or adjusting a design plan based on user feedback.
Criteria: A designer adapts or adjusts their design plan based on user feedback.
Phrase: Adapts design plan.

21.
Concepts: confirm compatibility, compatibility assurance
Relationship: The concepts are related to confirming compatibility with a specific platform or system.
Criteria: Designer confirms compatibility with a specific platform or system.
Phrase: Confirms compatibility.

22.
Concepts: inform about system compatibility, suggesting checking compatibility of the system
Relationship: The concepts are related to informing users about the system's compatibility with different devices or systems.
Criteria: The designer informs users about the system's compatibility with different devices or systems.
Phrase: Informs about compatibility.

23.
Concepts: platform management, adapt to platform specific constraints
Relationship: The concepts are related to managing expectations or limitations specific to a particular platform.
Criteria: The designer manages expectations or limitations specific to a particular platform.
Phrase: Manages platform constraints.

24.
Concepts: pc version, pc version inquiries
Relationship: The concepts are related to inquiring about the PC version of the software.
Criteria: A user asks about or discusses the PC version of the software.
Phrase: Inquires about PC version.

25.
Concepts: seek platform information, inquire about specific platform
Relationship: The concepts are related to inquiring about specific platform-related information or availability.
Criteria: Inquiring about specific platform-related information or availability.
Phrase: Seeks platform information.

26.
Concepts: problem solving, engage in problem solving
Relationship: The concepts are related to addressing or troubleshooting a problem or issue.
Criteria: Designer addresses or troubleshoots a problem or issue.
Phrase: Troubleshoots a problem.

27.
Concepts: usability workaround, workaround sharing
Relationship: The concepts are related to providing a workaround for a usability issue.
Criteria: The designer provides a workaround for a usability issue.
Phrase: Provides a workaround.

28.
Concepts: suggesting solutions, share potential solutions
Relationship: The concepts are related to suggesting potential solutions to a problem or issue.
Criteria: Suggesting potential solutions to a problem or issue.
Phrase: Suggests solutions.

29.
Concepts: offering solution, solution offering
Relationship: The concepts are related to offering a solution or workaround to a problem.
Criteria: Designer offers a solution or workaround to a problem.
Phrase: Offers a solution.

30.
Concepts: suggest alternative system, offering/seeking alternative
Relationship: The concepts are related to suggesting alternative systems or solutions.
Criteria: Suggesting alternative systems or solutions.
Phrase: Suggests an alternative.

31.
Concepts: recognize limitation, limitation acknowledgment, acknowledge technical limitation
Relationship: The concepts are related to acknowledging limitations or constraints of the software.
Criteria: A designer or developer acknowledges limitations or potential issues with a feature or software.
Phrase: Acknowledges limitations.

32.
Concepts: explain current limitations, talk about limitation of the solution
Relationship: The concepts are related to explaining current limitations or constraints of the app.
Criteria: Designer explains current limitations or constraints of the app.
Phrase: Explains limitations.