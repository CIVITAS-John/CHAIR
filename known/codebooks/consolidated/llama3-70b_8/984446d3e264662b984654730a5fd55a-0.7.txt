You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (24 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
24. 
Concepts: {Repeat the input 24}
Relationship: {What is logical relationship between concepts in code 24, or N/A if not applicable}
Criteria: {Who did what, and how for code 24}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: iterative development, describing iterative development
- The development process involves iterative improvements based on user feedback.
- The conversation implies that the development process is ongoing, with iterative improvements.

2.
Concepts: promoting iterative approach, suggesting focused approach
- User advises or encourages an iterative approach to development or problem-solving.
- User advises or encourages a focused, step-by-step approach to development or problem-solving.

3.
Concepts: advising on development approach, considering development approach
- Guidance on development approach is given.
- The designer considers a development approach or responds to development advice.

4.
Concepts: information sharing, providing development information
- Sharing information related to design or development
- Information about software development is provided.

5.
Concepts: provide development insights, explaining development process
- The designer provides insights into the development process.
- Designer explains the development process or technical details.

6.
Concepts: user-driven development, development balance discussion
- A designer explains how user feedback influences the development process.
- Discussing the balance between designer-led development and user input

7.
Concepts: ongoing project development, ongoing work acknowledgment
- Designer mentions ongoing work on a specific aspect of the project.
- The designer acknowledges that work is being done on a specific part or feature.

8.
Concepts: indicating development stage, showcasing development progress
- Designer indicates the current stage of development or progress.
- Designer showcases development progress or updates.

9.
Concepts: apologizing for delays, explaining delays and development issues
- A designer or developer apologizes for delays or issues in the development process.
- The designer explains delays or issues in the development process.

10.
Concepts: acknowledging communication timing, apologizing for late-night communication
- Designer acknowledges or apologizes for the timing of a message or update.
- The designer apologizes for late-night communication or disturbance.

11.
Concepts: correct previous statements, correcting previous responses
- A designer corrects or clarifies their previous statement.
- Correcting or retracting previous statements or responses.

12.
Concepts: avoiding conflict, acknowledging mistake
- A user avoids conflict or apologizes for a mistake.
- A user acknowledges a mistake or apologizes for an error.

13.
Concepts: expressing caution, expressing confusion
- User expresses caution or warning about an aspect of the software.
- The user expresses confusion or uncertainty about using the software.

14.
Concepts: indirect rejection, vague response to feature request
- A designer responds to a suggestion or request in a way that implies it may not be feasible or is not a priority.
- A designer provides a vague or non-committal response to a user's feature request or question.

15.
Concepts: explaining internet limitations, explaining lack of internet access
- A user explains limitations or restrictions due to internet connectivity or access.
- Users explain why they don't have internet access in their classrooms.

16.
Concepts: highlighting limitations, discussing classroom technology limitations, describing constraints
- Users highlight limitations, constraints, or difficulties they face while using the software.
- Users discuss how classroom technology limitations affect software design.
- The user describes limitations or constraints related to the use of the software in educational settings.

17.
Concepts: justifying limitations, explaining restrictions
- Designer justifies limitations or restrictions in the software or online community.
- Explaining the reasons behind certain decisions or restrictions in the software or its use.

18.
Concepts: considering hardware limitations, exploring technical constraints
- User considers hardware limitations or constraints.
- The designer or user explores technical constraints or limitations.

19.
Concepts: anticipating limitations, considering implementation constraints, considering limitations
- Designer anticipates potential limitations or challenges.
- Considering constraints or limitations that affect the implementation of features.
- Designers consider potential issues or limitations of the software.

20.
Concepts: explaining limitations, discusses technical limitations
- A designer explains and discusses limitations.
- Designer or user discusses or suggests a solution to a technical issue or limitation.

21.
Concepts: sharing technical context, providing context for design constraints
- Sharing technical context, constraints, or limitations.
- Providing context or explanations for design constraints.

22.
Concepts: expresses team limitations, technical limitations are communicated directly, acknowledging limitations
- Designer expresses limitations or constraints within their team.
- The designer directly communicates technical limitations or constraints.
- Designers acknowledge limitations or constraints of the project or feature.

23.
Concepts: highlighting challenges, expressing development challenges, ui design challenges
- A designer highlights technical challenges.
- Designer expresses difficulty or complexity in developing a feature or component.
- Designers highlight challenges or difficulties in user interface design.

24.
Concepts: discussing usability, revealing potential usability challenges
- A designer discusses and highlights usability concerns.
- User reveals potential usability challenges or difficulties.
===
Here are the definitions for each code:

---
1.
Concepts: iterative development, describing iterative development
Relationship: The concepts are related as they both describe the iterative development process, with one concept focusing on the process itself and the other on the conversation about it.
Criteria: The development process involves iterative improvements based on user feedback, and the conversation implies that the development process is ongoing.
Phrase: Describing iterative development.

2.
Concepts: promoting iterative approach, suggesting focused approach
Relationship: The concepts are related as they both provide advice on development approaches, with one promoting an iterative approach and the other suggesting a focused approach.
Criteria: Users advise or encourage an iterative or focused approach to development or problem-solving.
Phrase: Advising on development approach.

3.
Concepts: advising on development approach, considering development approach
Relationship: The concepts are related as they both involve guidance and consideration of development approaches.
Criteria: Guidance on development approach is given, and the designer considers a development approach or responds to development advice.
Phrase: Considering development advice.

4.
Concepts: information sharing, providing development information
Relationship: The concepts are related as they both involve sharing information related to development.
Criteria: Information about software development is shared or provided.
Phrase: Sharing development information.

5.
Concepts: provide development insights, explaining development process
Relationship: The concepts are related as they both provide explanations about the development process.
Criteria: The designer provides insights into the development process and explains technical details.
Phrase: Explaining development process.

6.
Concepts: user-driven development, development balance discussion
Relationship: The concepts are related as they both involve the influence of users on the development process.
Criteria: The designer explains how user feedback influences the development process, and discusses the balance between designer-led development and user input.
Phrase: Discussing user-driven development.

7.
Concepts: ongoing project development, ongoing work acknowledgment
Relationship: The concepts are related as they both involve acknowledging ongoing work on the project.
Criteria: The designer mentions ongoing work on a specific aspect of the project and acknowledges that work is being done on a specific part or feature.
Phrase: Acknowledging ongoing development.

8.
Concepts: indicating development stage, showcasing development progress
Relationship: The concepts are related as they both involve providing updates on the development process.
Criteria: The designer indicates the current stage of development or progress and showcases development progress or updates.
Phrase: Showcasing development progress.

9.
Concepts: apologizing for delays, explaining delays and development issues
Relationship: The concepts are related as they both involve acknowledging and explaining issues with the development process.
Criteria: The designer apologizes for delays or issues in the development process and explains the reasons behind them.
Phrase: Apologizing for development issues.

10.
Concepts: acknowledging communication timing, apologizing for late-night communication
Relationship: The concepts are related as they both involve acknowledging the timing of communication.
Criteria: The designer acknowledges or apologizes for the timing of a message or update, including late-night communication.
Phrase: Apologizing for communication timing.

11.
Concepts: correct previous statements, correcting previous responses
Relationship: The concepts are related as they both involve correcting or clarifying previous statements.
Criteria: The designer corrects or clarifies their previous statement or response.
Phrase: Correcting previous statements.

12.
Concepts: avoiding conflict, acknowledging mistake
Relationship: The concepts are related as they both involve acknowledging and apologizing for mistakes.
Criteria: A user avoids conflict or apologizes for a mistake, and acknowledges an error.
Phrase: Acknowledging mistakes.

13.
Concepts: expressing caution, expressing confusion
Relationship: The concepts are related as they both involve expressing uncertainty or concern.
Criteria: The user expresses caution or warning about an aspect of the software and expresses confusion or uncertainty about using the software.
Phrase: Expressing caution and confusion.

14.
Concepts: indirect rejection, vague response to feature request
Relationship: The concepts are related as they both involve responding to user requests in a non-committal way.
Criteria: A designer responds to a suggestion or request in a way that implies it may not be feasible or is not a priority, and provides a vague or non-committal response.
Phrase: Providing a vague response.

15.
Concepts: explaining internet limitations, explaining lack of internet access
Relationship: The concepts are related as they both involve explaining limitations or restrictions due to internet connectivity or access.
Criteria: Users explain limitations or restrictions due to internet connectivity or access, and explain why they don't have internet access in their classrooms.
Phrase: Explaining internet limitations.

16.
Concepts: highlighting limitations, discussing classroom technology limitations, describing constraints
Relationship: The concepts are related as they all involve highlighting or discussing limitations or constraints.
Criteria: Users highlight limitations, constraints, or difficulties they face while using the software, and discuss how classroom technology limitations affect software design.
Phrase: Highlighting limitations.

17.
Concepts: justifying limitations, explaining restrictions
Relationship: The concepts are related as they both involve explaining or justifying limitations or restrictions.
Criteria: The designer justifies limitations or restrictions in the software or online community, and explains the reasons behind certain decisions or restrictions.
Phrase: Justifying limitations.

18.
Concepts: considering hardware limitations, exploring technical constraints
Relationship: The concepts are related as they both involve considering or exploring limitations or constraints.
Criteria: Users consider hardware limitations or constraints, and the designer or user explores technical constraints or limitations.
Phrase: Exploring technical constraints.

19.
Concepts: anticipating limitations, considering implementation constraints, considering limitations
Relationship: The concepts are related as they all involve considering or anticipating limitations or constraints.
Criteria: Designers anticipate potential limitations or challenges, consider constraints or limitations that affect the implementation of features, and consider potential issues or limitations of the software.
Phrase: Anticipating limitations.

20.
Concepts: explaining limitations, discusses technical limitations
Relationship: The concepts are related as they both involve explaining or discussing limitations.
Criteria: A designer explains and discusses limitations, and discusses or suggests a solution to a technical issue or limitation.
Phrase: Explaining limitations.

21.
Concepts: sharing technical context, providing context for design constraints
Relationship: The concepts are related as they both involve sharing context or explanations for design constraints.
Criteria: Sharing technical context, constraints, or limitations, and providing context or explanations for design constraints.
Phrase: Sharing technical context.

22.
Concepts: expresses team limitations, technical limitations are communicated directly, acknowledging limitations
Relationship: The concepts are related as they all involve expressing or communicating limitations or constraints.
Criteria: Designers express limitations or constraints within their team, directly communicate technical limitations or constraints, and acknowledge limitations or constraints of the project or feature.
Phrase: Expressing limitations.

23.
Concepts: highlighting challenges, expressing development challenges, ui design challenges
Relationship: The concepts are related as they all involve highlighting or expressing challenges or difficulties.
Criteria: A designer highlights technical challenges, expresses difficulty or complexity in developing a feature or component, and highlights challenges or difficulties in user interface design.
Phrase: Highlighting development challenges.

24.
Concepts: discussing usability, revealing potential usability challenges
Relationship: The concepts are related as they both involve discussing or revealing usability concerns or challenges.
Criteria: A designer discusses and highlights usability concerns, and reveals potential usability challenges or difficulties.
Phrase: Discussing usability challenges.