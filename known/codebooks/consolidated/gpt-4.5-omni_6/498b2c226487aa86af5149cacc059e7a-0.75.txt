You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: feature optimization, promise that the update is ongoing
- Designers assure users about ongoing optimizations and future improvements.
- A designer assures users that updates are in progress.

2.
Concepts: promising it will realize, promise a future perfection of a feature
- Confirming that a promised feature or element will be realized.
- Promising future improvements or completion of a feature.

3.
Concepts: promise for later implementation, semi-promise of completion date
- Developer promises to implement a feature at a later time.
- Participants give a tentative promise regarding the release date of features or updates.

4.
Concepts: confirming updates, confirming future features
- Confirm that feature updates are planned or scheduled.
- Participants confirm the inclusion of desired features in future updates.

5.
Concepts: ensuring development transparency, transparent developer discussion
- Designers share detailed information about development stages, challenges, and progress with the community.
- Developers share detailed, often technical, discussions about design, features, and troubleshooting within the community.

6.
Concepts: transparency, maintain transparency
- Who provides transparency about the development process and timelines.
- Maintain transparency about the development process.

7.
Concepts: development encouragement, development approach advice
- User encourages a focused and refined development approach.
- User advises on the approach for developing the software.

8.
Concepts: research and development, mention ongoing research
- Discuss ongoing research and development efforts.
- A designer is mentioning ongoing research and development efforts.

9.
Concepts: discussing feature development, future planning and development
- Who discusses and shares information about current feature development.
- Who discusses plans and developments for future updates or features.

10.
Concepts: suggest prioritization, development prioritization feedback, user feedback prioritization
- Users suggest prioritizing certain features or focusing on specific areas for improvement.
- Developer provides feedback on prioritization or development focus.
- Designer emphasizes the importance of user feedback for future updates.

11.
Concepts: planning updates, design discussion
- Members outline future development plans and feature development for the software.
- Designers discuss the scope and future directions for the software's development.

12.
Concepts: potential update, future possibilities
- Mentioning potential future updates or compatibility considerations.
- Suggest possibilities for future implementation or features.
===
---
Definitions for each code (12 in total):
1.
Concepts: feature optimization, promise that the update is ongoing
Relationship: Sequential commitment to improving features
Criteria: Designers assure users that ongoing optimizations and future improvements are in progress.
Phrase: Assuring ongoing feature updates

2.
Concepts: promising it will realize, promise a future perfection of a feature
Relationship: Commitment to future realization and perfection
Criteria: Developers confirm that a promised feature will be realized and perfected in future updates.
Phrase: Promising feature realization and perfection

3.
Concepts: promise for later implementation, semi-promise of completion date
Relationship: Tentative scheduling and commitment
Criteria: Developers promise to implement a feature at a later time and give a tentative completion date.
Phrase: Promising future implementation with tentative dates

4.
Concepts: confirming updates, confirming future features
Relationship: Validation of planned updates and features
Criteria: Participants confirm that feature updates and desired features are included in future plans.
Phrase: Confirming planned updates and features

5.
Concepts: ensuring development transparency, transparent developer discussion
Relationship: Open communication about development progress and challenges
Criteria: Developers share detailed information about development stages, challenges, and progress within the community.
Phrase: Ensuring transparency in development discussions

6.
Concepts: transparency, maintain transparency
Relationship: Continuity in open communication
Criteria: Developers provide and maintain transparency about the development process and timelines.
Phrase: Maintaining development transparency

7.
Concepts: development encouragement, development approach advice
Relationship: Supportive and advisory interaction
Criteria: Users encourage a focused development approach and advise on the software's development method.
Phrase: Encouraging and advising on development

8.
Concepts: research and development, mention ongoing research
Relationship: Continuous exploration and development
Criteria: Designers discuss ongoing research and development efforts with the community.
Phrase: Discussing ongoing research and development

9.
Concepts: discussing feature development, future planning and development
Relationship: Sharing information on current and future projects
Criteria: Members discuss current feature development and plans for future updates.
Phrase: Discussing current and future feature development

10.
Concepts: suggest prioritization, development prioritization feedback, user feedback prioritization
Relationship: Feedback loop for developmental focus
Criteria: Users suggest prioritizing specific features, and developers emphasize the importance of user feedback for future updates.
Phrase: Suggesting and prioritizing development based on feedback

11.
Concepts: planning updates, design discussion
Relationship: Forward-looking design and development
Criteria: Members outline future development plans and discuss the scope and directions for the software's development.
Phrase: Planning and discussing future updates

12.
Concepts: potential update, future possibilities
Relationship: Speculative and forward-looking
Criteria: Participants mention potential future updates and suggest possibilities for future features.
Phrase: Speculating on future updates and features
---