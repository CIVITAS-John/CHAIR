You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (22 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
22. 
Concepts: {Repeat the input 22}
Relationship: {What is logical relationship between concepts in code 22, or N/A if not applicable}
Criteria: {Who did what, and how for code 22}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: apologizing and being polite, maintain polite communication
- Designers apologize for any inconvenience and express politeness.
- A designer maintains polite communication, often apologizing for disturbances.

2.
Concepts: expressive, expressing with emojis
- Users and designers use expressive language or emojis in their communication.
- Users communicate and express themselves using emojis.

3.
Concepts: praising craftsmanship, acknowledging effort and craftsmanship
- Users praise the designers for their craftsmanship.
- Users acknowledge and appreciate the designers' efforts and craftsmanship in the software.

4.
Concepts: user interaction and gratitude, expressing appreciation and gratitude
- Users express gratitude and interact positively with designers.
- Users or designers express appreciation or gratitude.

5.
Concepts: context, providing context
- Providing background or situational information.
- Users provide context or background information related to their questions.

6.
Concepts: providing product updates, communication of updates
- Designers provide information about the current status and updates of the software.
- Instances where designers communicate updates, release schedules, or new features to users.

7.
Concepts: announcing feature releases, making developer announcements
- Designers announce and detail new features and updates.
- Designers make detailed announcements about new features and updates.

8.
Concepts: detailing update changes, version update notes
- Designers list new features and bug fixes in an update.
- A designer provides detailed notes on updates and new features of the software.

9.
Concepts: update schedule, providing development timelines
- A designer provides a specific time frame for when an update will occur.
- Designers provide timelines for updates and new versions.

10.
Concepts: project management, discussing development priorities
- Designers discuss project management and prioritization.
- Designers discuss the prioritization and sequence of development tasks.

11.
Concepts: seek clarification, seeking clarification
- Seeking clarification on a specific point.
- Participants ask follow-up questions to clarify requests.

12.
Concepts: clarifying user needs, identifying user needs
- Designers ask follow-up questions to better understand user needs.
- Designers ask users about their specific needs and try to understand them.

13.
Concepts: responding to questions, responding to user queries
- Designers respond to user questions.
- Designers respond to user queries, feedback, or suggestions.

14.
Concepts: involving users in design, user-designer interaction
- Designers interact with and involve users in the design process.
- The collaborative interaction between users and designers that contributes to the design process.

15.
Concepts: providing user support, offering personalized support
- Designers provide technical support and guidance to users.
- Designers offer personalized assistance to users.

16.
Concepts: requesting new features, feature request invitation
- Users request or propose new features or improvements.
- Designers invite users to suggest new features or improvements.

17.
Concepts: expressing needs, expressing feature needs
- Users express specific needs or goals related to the software.
- Users express needs or desires for specific features.

18.
Concepts: inquiry, seeking information
- Users ask questions to seek information or clarification.
- Users inquire about usage and seek specific information or help.

19.
Concepts: teaching, user guidance
- A designer provides instructions or guidance on how to use a feature.
- A designer provides guidance or instructions on using features.

20.
Concepts: providing positive feedback, complimenting software features
- Users provide positive feedback and express satisfaction with the software.
- Users acknowledge and compliment the software's features.

21.
Concepts: user experience and impact, sharing educational experiences
- Users sharing their experiences and the impact of the software on their teaching or learning.
- Users share their teaching and classroom experiences with the software.

22.
Concepts: explaining features, explaining component functionality
- Designers explain and give examples of a feature's functions.
- A designer describes the functionality and capabilities of a specific component.
===
---
Definitions for each code (22 in total):
1.
Concepts: apologizing and being polite, maintain polite communication
Relationship: Apologizing is a form of maintaining polite communication.
Criteria: Designers apologize for any inconvenience and maintain polite communication.
Phrase: Apologizing and maintaining politeness

2.
Concepts: expressive, expressing with emojis
Relationship: Expressive communication includes the use of emojis.
Criteria: Users and designers express themselves using language or emojis.
Phrase: Expressing with emojis

3.
Concepts: praising craftsmanship, acknowledging effort and craftsmanship
Relationship: Praising craftsmanship is a form of acknowledging effort.
Criteria: Users praise and acknowledge the designers' efforts and craftsmanship.
Phrase: Praising craftsmanship

4.
Concepts: user interaction and gratitude, expressing appreciation and gratitude
Relationship: Expressing appreciation and gratitude is a form of positive user interaction.
Criteria: Users express gratitude and interact positively with designers.
Phrase: Expressing appreciation and gratitude

5.
Concepts: context, providing context
Relationship: N/A
Criteria: Users provide background or situational information related to their questions.
Phrase: Providing context

6.
Concepts: providing product updates, communication of updates
Relationship: Providing product updates is a form of communication.
Criteria: Designers communicate the current status and updates of the software.
Phrase: Communicating updates

7.
Concepts: announcing feature releases, making developer announcements
Relationship: Announcing feature releases is a type of developer announcement.
Criteria: Designers announce and detail new features and updates.
Phrase: Announcing feature releases

8.
Concepts: detailing update changes, version update notes
Relationship: Detailing update changes is done through version update notes.
Criteria: Designers provide detailed notes on updates and new features of the software.
Phrase: Detailing update changes

9.
Concepts: update schedule, providing development timelines
Relationship: Providing development timelines includes specifying update schedules.
Criteria: Designers provide specific timelines for updates and new versions.
Phrase: Providing development timelines

10.
Concepts: project management, discussing development priorities
Relationship: Discussing development priorities is part of project management.
Criteria: Designers discuss the prioritization and sequence of development tasks.
Phrase: Discussing development priorities

11.
Concepts: seek clarification, seeking clarification
Relationship: N/A
Criteria: Participants ask follow-up questions to clarify requests.
Phrase: Seeking clarification

12.
Concepts: clarifying user needs, identifying user needs
Relationship: Clarifying user needs involves identifying them.
Criteria: Designers ask follow-up questions to better understand user needs.
Phrase: Clarifying user needs

13.
Concepts: responding to questions, responding to user queries
Relationship: Responding to user queries includes answering questions.
Criteria: Designers respond to user queries, feedback, or suggestions.
Phrase: Responding to user queries

14.
Concepts: involving users in design, user-designer interaction
Relationship: Involving users in design requires user-designer interaction.
Criteria: Designers interact with and involve users in the design process.
Phrase: Involving users in design

15.
Concepts: providing user support, offering personalized support
Relationship: Offering personalized support is a form of providing user support.
Criteria: Designers offer personalized technical support and guidance to users.
Phrase: Offering personalized support

16.
Concepts: requesting new features, feature request invitation
Relationship: Feature request invitation encourages requesting new features.
Criteria: Designers invite users to suggest new features or improvements.
Phrase: Inviting feature requests

17.
Concepts: expressing needs, expressing feature needs
Relationship: Expressing feature needs is a specific type of expressing needs.
Criteria: Users express needs or desires for specific features.
Phrase: Expressing feature needs

18.
Concepts: inquiry, seeking information
Relationship: Seeking information is a form of inquiry.
Criteria: Users ask questions to seek information or clarification.
Phrase: Seeking information

19.
Concepts: teaching, user guidance
Relationship: User guidance is a form of teaching.
Criteria: Designers provide guidance or instructions on using features.
Phrase: Providing user guidance

20.
Concepts: providing positive feedback, complimenting software features
Relationship: Complimenting software features is a form of providing positive feedback.
Criteria: Users provide positive feedback and express satisfaction with the software.
Phrase: Providing positive feedback

21.
Concepts: user experience and impact, sharing educational experiences
Relationship: Sharing educational experiences is a form of discussing user experience and impact.
Criteria: Users share their teaching and classroom experiences with the software.
Phrase: Sharing educational experiences

22.
Concepts: explaining features, explaining component functionality
Relationship: Explaining component functionality is a specific type of explaining features.
Criteria: Designers describe the functionality and capabilities of specific components.
Phrase: Explaining component functionality
---