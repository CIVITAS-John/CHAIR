You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (41 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
41. 
Concepts: {Repeat the input 41}
Relationship: {What is logical relationship between concepts in code 41, or N/A if not applicable}
Criteria: {Who did what, and how for code 41}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: previewing update content, describing update scope
- Designers preview or introduce the content of upcoming updates.
- Designers indicate significant new features or changes and describe the scope of an update.

2.
Concepts: scheduling platform updates, managing release schedules
- Designers provide update schedules specific to various software platforms.
- Designers detail the management and communicate schedules for software version releases.

3.
Concepts: updating review status, share info on app release
- Designers update the community on the review status of platform versions, including iOS.
- Designers inform the community about the status of the app's release on different platforms.

4.
Concepts: announcing updates, announcing and detailing component updates
- Designers make general or specific announcements about updates or changes to the community.
- Designers announce and detail specific updates or changes to components.

5.
Concepts: sharing update information, informing about updates
- Designers share visual updates or timelines for upcoming software updates.
- Designers inform users about upcoming changes, release schedules, new features, or updates.

6.
Concepts: involve users, co-designing with users
- Designers actively involve users in the design process through feedback or testing, inviting participation.
- Designers offer to collaborate with users in the design process.

7.
Concepts: sharing design solutions, collaborate on problem solving
- Designers and users share potential solutions and information relevant to the software design.
- Designers and users work together to address issues and improve the product.

8.
Concepts: discussing usability, collaborative planning
- Designers and users discuss usability aspects and decisions about the software interface layout.
- Designers and users collaboratively discussing and planning the development of the software.

9.
Concepts: encourage interaction, encourage open communication
- Designers encourage user interaction and participation, fostering discussion within the community.
- Designers express openness to user feedback and encourage open communication and user feedback.

10.
Concepts: gathering user opinions, seeking and accepting user feedback
- Designers gather user opinions and inquire about suggestions for future iterations.
- Designers invite feedback, encourage suggestions, and discuss plans to implement user ideas.

11.
Concepts: inquiring user roles, gathering user context
- Designers inquire about user roles and ask questions about their requests or situations.
- Designers seek context and background information from users about their environment or needs.

12.
Concepts: describing current efforts, provide development updates
- Designers describe current research and development efforts related to the platform.
- Designers share information about the current status, updates, and future plans for the Physics Lab software.

13.
Concepts: discuss design, discussing future plans
- Designers discuss design decisions and future plans for the software.
- Designers discuss potential future developments and share their interests in the platform's direction.

14.
Concepts: explain focus areas, explaining feature importance
- A designer explains the focus areas or priorities of the application.
- Designers explain the need and importance of particular development efforts or features.

15.
Concepts: prioritize development, outlining development priorities, prioritizing development feedback
- Designers discuss the prioritization and decision-making for feature development.
- Designers outline the priorities and sequence of development tasks.
- Designers prioritize user feedback and provide feedback on development priorities.

16.
Concepts: explaining feature limitations, explaining platform limitations
- Designers explain the limitations and testing status of current features.
- Designers explain the limitations of the software on specific operating systems.

17.
Concepts: discussing technical constraints, discussing solution limitations
- Users and designers highlight and discuss the technical constraints of the software.
- Designers talk about the limitations of solutions and explain how they can be addressed or worked around.

18.
Concepts: discussing system compatibility, confirming system compatibility
- Users and designers discuss and inquire about the compatibility of the software with various platforms.
- Designers confirm compatibility with certain systems and suggest checking for potential compatibility issues.

19.
Concepts: discussing simulation features, discussing feature flexibility
- Designers discuss the accuracy and enhancements of simulation capabilities.
- Designers discuss the flexibility and specific functionalities of software components.

20.
Concepts: providing design rationale, explaining design principles
- Designers explain the reasons or justifications for certain actions or decisions.
- Designers explain the goals, philosophy, and intentions behind the app's design.

21.
Concepts: providing detailed explanations, encourage and provide elaboration
- Designers or users provide detailed explanations related to the application or its usage.
- Designers elaborate on features and encourage users to provide detailed feedback.

22.
Concepts: share teaching experiences, share classroom experiences
- Users share their teaching experiences, including high school settings.
- Users describe the classroom environment and share related experiences.

23.
Concepts: discuss classroom applications, discuss school initiatives and implementation
- Users discuss the application of the software in educational settings.
- Users mention school initiatives or the implementation of the application in schools.

24.
Concepts: comment on ease of use, highlight convenience and practicality
- Users comment on the ease of use and usability of the software.
- Users emphasize the convenience and practicality of the software.

25.
Concepts: share user experiences and impact, shared experiences and support
- Users share their experiences and the impact of the software.
- Users and designers sharing experiences and supporting each other in using and improving the software.

26.
Concepts: educational enhancement suggestion, highlight usability and educational needs
- User suggests adding educational content or features to enhance learning.
- Users highlight needs for improved usability and educational features.

27.
Concepts: suggestion solicitation, make feature suggestions
- Soliciting suggestions or feedback from users.
- Users make specific requests or suggestions for new features.

28.
Concepts: inquire about downloading, inquire about platform access
- Users inquire about how or where to download the platform.
- Users ask questions about how to access or download the platform.

29.
Concepts: elaborate on suggestions, provide further information and elaboration
- Users elaborate on suggestions or provide further ideas.
- Users add specific information or elaborate on questions and responses.

30.
Concepts: justify requests and needs, express and indicate user needs
- Users justify their requests or need for documentation.
- Users express or indicate needs for specific functionalities or resources.

31.
Concepts: platform-specific communication, provide platform-specific information
- Communicating information specific to a platform within the group.
- Users specify the platform they refer to and provide related information.

32.
Concepts: outlining feature roadmap, discuss update planning
- Community members list features and outline the sequence of tasks for future updates.
- Community members discuss plans for future updates, features, or the integration of components.

33.
Concepts: share information, suggest and engage in group sharing
- Instances where participants share information or resources to solve a problem or answer a question.
- Members share or suggest sharing information or resources within the group.

34.
Concepts: share and inquire about backgrounds, share user background
- Users share or inquire about teaching backgrounds.
- Users provide information about their professional or personal background to help understand the community's composition.

35.
Concepts: encourage participation, encourage discussion and involvement
- Community members invite or encourage others to participate or contribute.
- Members encourage discussions and involve the community in decision-making.

36.
Concepts: solve issues independently, demonstrate self-sufficiency
- Users acknowledge finding solutions to their issues independently.
- Users acknowledge finding information or resources on their own.

37.
Concepts: express gratitude and appreciation, express support and encouragement
- Members express gratitude and appreciation for community support.
- Members express acknowledgment, support, gratitude, and encouragement.

38.
Concepts: acknowledge receipt and resolution, confirm receipt and understanding
- Users acknowledge receipt and resolution of information or resources.
- Users or designers acknowledge receipt and confirm understanding of information.

39.
Concepts: express approval and positive feedback, express satisfaction and appreciation
- Users express approval and share positive feedback about the platform.
- Users express satisfaction and appreciation for specific features of the platform.

40.
Concepts: user reactions, use humor in reactions
- Instances where users express their reactions to updates or announcements, often using emojis.
- Users or designers use humor and react to stories or comments.

41.
Concepts: announce future updates
- Designers announce future plans, updates, and new features for the software, providing previews or explanations.
- Designers provide updates and announce future updates and features, seeking suggestions from the community.
===
---
Definitions for each code (41 in total):
1.
Concepts: previewing update content, describing update scope
Relationship: Both concepts involve communicating details about upcoming updates.
Criteria: Designers introduce and describe the scope of significant new features or changes in upcoming updates.
Phrase: Previewing and describing updates

2.
Concepts: scheduling platform updates, managing release schedules
Relationship: Both concepts involve planning and communicating update schedules.
Criteria: Designers provide and manage schedules for software version releases on various platforms.
Phrase: Scheduling and managing updates

3.
Concepts: updating review status, share info on app release
Relationship: Both concepts involve informing the community about the status of app releases.
Criteria: Designers update and inform the community about the review and release status of platform versions.
Phrase: Updating and sharing release status

4.
Concepts: announcing updates, announcing and detailing component updates
Relationship: Both concepts involve making announcements about updates.
Criteria: Designers announce and detail updates or changes to the community, including specific components.
Phrase: Announcing and detailing updates

5.
Concepts: sharing update information, informing about updates
Relationship: Both concepts involve disseminating information about updates.
Criteria: Designers share visual updates, timelines, and inform users about upcoming changes and new features.
Phrase: Sharing and informing about updates

6.
Concepts: involve users, co-designing with users
Relationship: Both concepts involve user participation in the design process.
Criteria: Designers actively involve users in the design process through feedback, testing, and collaboration.
Phrase: Involving and co-designing with users

7.
Concepts: sharing design solutions, collaborate on problem solving
Relationship: Both concepts involve collaborative problem-solving.
Criteria: Designers and users share potential solutions and work together to address issues and improve the product.
Phrase: Sharing and collaborating on solutions

8.
Concepts: discussing usability, collaborative planning
Relationship: Both concepts involve discussions about software development.
Criteria: Designers and users discuss usability aspects and collaboratively plan the development of the software.
Phrase: Discussing usability and planning

9.
Concepts: encourage interaction, encourage open communication
Relationship: Both concepts involve fostering user engagement and communication.
Criteria: Designers encourage user interaction, participation, and open communication within the community.
Phrase: Encouraging interaction and communication

10.
Concepts: gathering user opinions, seeking and accepting user feedback
Relationship: Both concepts involve collecting user feedback.
Criteria: Designers gather user opinions, invite feedback, and discuss plans to implement user ideas.
Phrase: Gathering and accepting user feedback

11.
Concepts: inquiring user roles, gathering user context
Relationship: Both concepts involve understanding user backgrounds and needs.
Criteria: Designers inquire about user roles and seek context and background information about their needs.
Phrase: Inquiring and gathering user context

12.
Concepts: describing current efforts, provide development updates
Relationship: Both concepts involve sharing information about ongoing development.
Criteria: Designers describe current research and development efforts and provide updates on the software.
Phrase: Describing and updating on development

13.
Concepts: discuss design, discussing future plans
Relationship: Both concepts involve discussions about the software's direction.
Criteria: Designers discuss design decisions and potential future developments for the software.
Phrase: Discussing design and future plans

14.
Concepts: explain focus areas, explaining feature importance
Relationship: Both concepts involve clarifying priorities and feature significance.
Criteria: Designers explain the focus areas, priorities, and importance of particular development efforts or features.
Phrase: Explaining focus and feature importance

15.
Concepts: prioritize development, outlining development priorities, prioritizing development feedback
Relationship: All concepts involve prioritizing aspects of development.
Criteria: Designers discuss and outline the prioritization of feature development and user feedback.
Phrase: Prioritizing development and feedback

16.
Concepts: explaining feature limitations, explaining platform limitations
Relationship: Both concepts involve clarifying limitations.
Criteria: Designers explain the limitations and testing status of current features and software on specific operating systems.
Phrase: Explaining feature and platform limitations

17.
Concepts: discussing technical constraints, discussing solution limitations
Relationship: Both concepts involve addressing constraints and limitations.
Criteria: Users and designers discuss technical constraints and limitations of solutions and how they can be addressed.
Phrase: Discussing constraints and limitations

18.
Concepts: discussing system compatibility, confirming system compatibility
Relationship: Both concepts involve compatibility issues.
Criteria: Users and designers discuss and confirm the compatibility of the software with various platforms.
Phrase: Discussing and confirming compatibility

19.
Concepts: discussing simulation features, discussing feature flexibility
Relationship: Both concepts involve discussing software features.
Criteria: Designers discuss the accuracy, enhancements, and flexibility of simulation capabilities and software components.
Phrase: Discussing simulation and feature flexibility

20.
Concepts: providing design rationale, explaining design principles
Relationship: Both concepts involve justifying design decisions.
Criteria: Designers explain the reasons, goals, philosophy, and intentions behind the app's design.
Phrase: Providing design rationale and principles

21.
Concepts: providing detailed explanations, encourage and provide elaboration
Relationship: Both concepts involve elaborating on information.
Criteria: Designers or users provide detailed explanations and encourage elaboration on features and feedback.
Phrase: Providing and encouraging detailed explanations

22.
Concepts: share teaching experiences, share classroom experiences
Relationship: Both concepts involve sharing educational experiences.
Criteria: Users share their teaching and classroom experiences, including high school settings.
Phrase: Sharing teaching and classroom experiences

23.
Concepts: discuss classroom applications, discuss school initiatives and implementation
Relationship: Both concepts involve discussing educational applications.
Criteria: Users discuss the application of the software in educational settings and school initiatives.
Phrase: Discussing classroom applications and initiatives

24.
Concepts: comment on ease of use, highlight convenience and practicality
Relationship: Both concepts involve usability feedback.
Criteria: Users comment on the ease of use, convenience, and practicality of the software.
Phrase: Commenting on ease and practicality

25.
Concepts: share user experiences and impact, shared experiences and support
Relationship: Both concepts involve sharing experiences and support.
Criteria: Users and designers share their experiences and the impact of the software, supporting each other.
Phrase: Sharing experiences and support

26.
Concepts: educational enhancement suggestion, highlight usability and educational needs
Relationship: Both concepts involve suggesting improvements.
Criteria: Users suggest adding educational content or features and highlight needs for improved usability and educational features.
Phrase: Suggesting educational enhancements

27.
Concepts: suggestion solicitation, make feature suggestions
Relationship: Both concepts involve requesting and making suggestions.
Criteria: Soliciting suggestions from users and users making specific requests for new features.
Phrase: Soliciting and making suggestions

28.
Concepts: inquire about downloading, inquire about platform access
Relationship: Both concepts involve questions about accessing the platform.
Criteria: Users inquire about how to download and access the platform.
Phrase: Inquiring about downloading and access

29.
Concepts: elaborate on suggestions, provide further information and elaboration
Relationship: Both concepts involve providing additional details.
Criteria: Users elaborate on suggestions and provide further information or ideas.
Phrase: Elaborating and providing information

30.
Concepts: justify requests and needs, express and indicate user needs
Relationship: Both concepts involve expressing and justifying needs.
Criteria: Users justify their requests and express needs for specific functionalities or resources.
Phrase: Justifying and expressing needs

31.
Concepts: platform-specific communication, provide platform-specific information
Relationship: Both concepts involve platform-specific details.
Criteria: Communicating and providing information specific to a platform within the group.
Phrase: Communicating platform-specific information

32.
Concepts: outlining feature roadmap, discuss update planning
Relationship: Both concepts involve planning future updates.
Criteria: Community members outline features and discuss plans for future updates and integration.
Phrase: Outlining and discussing update planning

33.
Concepts: share information, suggest and engage in group sharing
Relationship: Both concepts involve sharing information within the group.
Criteria: Participants share or suggest sharing information or resources to solve problems or answer questions.
Phrase: Sharing and suggesting information

34.
Concepts: share and inquire about backgrounds, share user background
Relationship: Both concepts involve sharing user backgrounds.
Criteria: Users share and inquire about teaching and professional backgrounds to understand the community's composition.
Phrase: Sharing and inquiring about backgrounds

35.
Concepts: encourage participation, encourage discussion and involvement
Relationship: Both concepts involve fostering community involvement.
Criteria: Community members encourage participation, discussion, and involvement in decision-making.
Phrase: Encouraging participation and involvement

36.
Concepts: solve issues independently, demonstrate self-sufficiency
Relationship: Both concepts involve self-sufficiency in problem-solving.
Criteria: Users acknowledge finding solutions and resources independently.
Phrase: Solving issues independently

37.
Concepts: express gratitude and appreciation, express support and encouragement
Relationship: Both concepts involve positive expressions towards the community.
Criteria: Members express gratitude, appreciation, support, and encouragement within the community.
Phrase: Expressing gratitude and support

38.
Concepts: acknowledge receipt and resolution, confirm receipt and understanding
Relationship: Both concepts involve acknowledging and confirming information.
Criteria: Users acknowledge receipt and resolution of information and confirm understanding.
Phrase: Acknowledging and confirming information

39.
Concepts: express approval and positive feedback, express satisfaction and appreciation
Relationship: Both concepts involve positive feedback.
Criteria: Users express approval, satisfaction, and appreciation for the platform and its features.
Phrase: Expressing approval and satisfaction

40.
Concepts: user reactions, use humor in reactions
Relationship: Both concepts involve user reactions.
Criteria: Users express their reactions to updates or announcements, often using humor and emojis.
Phrase: Expressing reactions and humor

41.
Concepts: announce future updates
Relationship: Both concepts involve future update announcements.
Criteria: Designers announce future plans, updates, and new features, seeking suggestions from the community.
Phrase: Announcing future updates
---