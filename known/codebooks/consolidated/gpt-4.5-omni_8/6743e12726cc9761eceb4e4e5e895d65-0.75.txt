You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (64 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
64. 
Concepts: {Repeat the input 64}
Relationship: {What is logical relationship between concepts in code 64, or N/A if not applicable}
Criteria: {Who did what, and how for code 64}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: open up plans, announce development plans
- Reveals future plans or considerations for development.
- Designers share and announce detailed development plans.

2.
Concepts: future design plan, planning future enhancements
- Outlining future design or development plans.
- Designers plan and propose future updates and potential developments.

3.
Concepts: providing status update, providing status information
- A designer provides information on the current research progress.
- A designer provides status information using images or text.

4.
Concepts: current efforts, discuss ongoing research
- Discussing the current efforts and ongoing research related to the software's development.
- Designers discuss the ongoing research related to software development.

5.
Concepts: feature development, share development progress
- The designer discusses the ongoing development of features or components.
- Designers share detailed updates and progress on feature development.

6.
Concepts: communicate ongoing progress, communication about progress and plans
- Designers communicate the progress of software updates and ongoing work.
- Comments on the current state of development, future plans, time estimates, and ongoing research by designers.

7.
Concepts: update on review status, update on ios review status
- Updating the community on the status of the software's review process.
- Provides an update on the review or approval status of software on iOS.

8.
Concepts: update schedule, confirm upcoming update
- Informing the community about the expected update schedule.
- Confirming that a new update or version of the product will be released soon.

9.
Concepts: reassure users, promise that the update is ongoing
- Designers reassure users about progress and future updates.
- Designers assure users that updates or developments are ongoing.

10.
Concepts: app release information, provide release timelines
- Designers share information about the release status of the app.
- Designers communicate release plans and specific timelines for updates.

11.
Concepts: describe update scope, give an intro to the update content
- Designers describe the scope and nature of an update.
- Designers introduce or summarize the content of upcoming updates.

12.
Concepts: list updates and fixes, noting potential bugs
- Designers list bug fixes and updates.
- The designer notes the potential presence of bugs or instability in the current version.

13.
Concepts: component adjustments, developer announcement
- The designer announces specific new adjustments to components.
- The designer announces new features, components, and bug fixes comprehensively.

14.
Concepts: version update notes, share version details
- Designers provide detailed notes about the updates and changes in a new version.
- Designers share details about the software version, including features and updates.

15.
Concepts: technical detail, detailed overview of update
- Detailed descriptions of updates, feature changes, and bug fixes related to the system.
- Provides a detailed overview of new features and updates in the software.

16.
Concepts: introduce new features, introduce new component
- Designers detail and introduce new software features.
- Introduction of a new component or feature by the designer.

17.
Concepts: open communication, offer ongoing support
- Designers encourage open communication for problem reporting and suggestions.
- A designer assures users of ongoing support and invites them to mention any issues they encounter.

18.
Concepts: plan iterative feedback, practice iterative development
- Designers plan to gather feedback iteratively and discuss iterative development processes based on user feedback.
- Designers discuss updates, new features, or bug fixes as part of an ongoing process of refinement based on feedback and testing.

19.
Concepts: reaction to feedback, feature adjustment
- Designer reacting to user feedback with plans for updates or changes.
- The designer mentions the need to adjust or add a feature based on feedback or functionality.

20.
Concepts: sharing workaround, usability workaround, temporary solution
- A designer shares a workaround for a known issue.
- The designer provides a workaround for usability issues in the software.
- The designer provides a temporary solution or workaround for an issue.

21.
Concepts: refine design, suggest design simplification
- Comments focus on simplifying and refining design features.
- Designers share thoughts on simplifying the software design.

22.
Concepts: seek efficiency, align with user feedback
- A designer suggests making something simpler to improve efficiency.
- A designer aligns with user feedback by suggesting simplification.

23.
Concepts: future direction sharing, share potential solutions
- Designers share their thoughts on potential future directions for the app.
- Sharing potential solutions or design intentions based on user feedback.

24.
Concepts: reason for suggestion, elaboration of suggestion
- Providing reasons for a suggestion to add or change a feature in the software.
- Designer elaborating on suggestions or ideas for improving the software.

25.
Concepts: making a suggestion, proposing design idea
- A designer makes a suggestion to use multiple approaches.
- When a designer proposes a new design idea or feature.

26.
Concepts: asking for future help, inviting future feedback
- Designer asking for future help or consultation from the community.
- The designer promises to seek feedback from the community in the future.

27.
Concepts: announce future consultation, promise future consultation
- When a designer announces plans for future consultation with the group.
- Indicates plans for future user feedback rounds or consultations before implementing major changes.

28.
Concepts: user input, opinion gathering
- Indicating a plan to gather user opinions before proceeding.
- The act of collecting opinions or feedback from users before making decisions or starting new developments.

29.
Concepts: taking feedback, prioritize user feedback, inquiring user input for future iterations
- Receiving and planning to incorporate user feedback into future updates.
- Indicates a commitment to incorporating user feedback and suggestions into future updates or changes.
- Requests user input or suggestions for future updates or iterations.

30.
Concepts: further suggestion, user input/feedback/suggestion with justifications, provide specific feedback
- Users provide additional suggestions or follow-up comments.
- Provides specific suggestions or feedback with justification.
- A user provides specific feedback on a detail or question.

31.
Concepts: justify feature requests, make detailed feature request
- Users give reasons or justifications for their feature requests.
- Users request specific features with detailed descriptions.

32.
Concepts: request new features, request additional experiments
- Users request new features or improvements for the Physics Lab tool.
- Users request additional types of experiments or expanded features.

33.
Concepts: respond to feature request, acknowledgment and implementation
- Designers respond to feature requests or discuss ongoing research.
- Designers acknowledging user feedback and discussing plans to implement suggested features.

34.
Concepts: highlight long term benefits, explaining feature importance
- Highlighting the long-term benefits of implementing a feature.
- The designer explains the importance or the long-term benefits of a particular feature.

35.
Concepts: update delay explanation, give reason for delay
- Designers explain reasons for delays in updates or features.
- Providing an explanation for why a task or feature has not yet been completed.

36.
Concepts: feature roadmap, plan feature development, give timeline for feature development
- Outlines a sequential plan or roadmap for feature development.
- Indicating future addition or development of features.
- Providing a timeline for the development or completion of a specific feature.

37.
Concepts: promising it will realize, future feature promise, promise a future perfection of a feature
- Simply stating that a feature or aspect will be available.
- The designer promises a feature or solution will be made available at a later time.
- Assuring that a feature will be perfected or improved.

38.
Concepts: prioritization suggestion, feedback on prioritization
- Users suggest prioritizing certain features or taking a step-by-step approach.
- Provides user or developer priorities, focusing on the order in which features or sections should be completed or improved.

39.
Concepts: prioritization, prioritize development tasks
- Statements indicating the order in which tasks or features will be developed.
- Designers outline and prioritize development tasks.

40.
Concepts: design challenges, difficulty in development
- Issues and obstacles faced by designers during the development process.
- Describes the challenges or difficulties faced in development.

41.
Concepts: feature complexity, explain complexity
- Explaining the complexity of a feature and the time required to develop it.
- The explanation provided by the designer regarding the complexity of a task and the anticipated time required to complete it.

42.
Concepts: testing phase, clarify testing status
- Indicating that the current phase is for testing purposes.
- Clarifying that a version is for testing and explaining the current limitations.

43.
Concepts: simulation accuracy, simulation enhancement
- Discussing the accuracy of simulations and adjustments made to improve them.
- Discussing improvements or enhancements in the simulation capabilities.

44.
Concepts: simulated experiment, detail simulated experiment assessment
- A designer talks about creating functions for simulated experiments.
- Designer detailing plans for simulating experiment assessments within the software.

45.
Concepts: propose potential solution, offering/seeking alternative, provide alternative solutions
- Suggests a possible solution or approach to address an issue.
- Offering or seeking alternative solutions to a given problem or constraint.
- Users suggest alternative solutions or approaches to issues.

46.
Concepts: development encouragement, development approach advice
- A user encourages a specific approach to development.
- A user advises on a strategic development approach.

47.
Concepts: manual adjustment, feature flexibility
- A designer mentions the ability to manually adjust settings or layouts.
- When discussing the flexibility of a feature, such as manual adjustments.

48.
Concepts: balance user needs, align with user needs
- Balancing different user needs or requirements.
- Aligning with user needs by discussing features that address specific requirements.

49.
Concepts: emphasize convenience, suggest practical use case
- Emphasizes the convenience of a suggested feature or improvement.
- Suggesting a practical use case or improvement for convenience.

50.
Concepts: explaining the need, acknowledge need for feature
- The designer explains why a feature or update is needed or important.
- Designer acknowledging a need for a particular feature or functionality.

51.
Concepts: technical specifications, provide technical information
- General information or commentary related to technical specifications or compatibility.
- Providing technical information or specifications about the software.

52.
Concepts: interface layout decisions, design discussion
- Discussion about interface layout preferences and decisions.
- Discussions that involve planning and organizing the layout of various sections or features within the tool.

53.
Concepts: feature discussion, visual and functional design
- Discussing specific features or functionalities and their design considerations.
- Discussions about the visual and functional aspects of the software.

54.
Concepts: address usability, consider usability
- Addressing and improving software usability.
- Considering usability aspects or preferences for software interface layout.

55.
Concepts: consideration, considering future compatibility
- Considerations or thoughts regarding future software compatibility.
- The designer considers or mentions the need for future compatibility with other systems.

56.
Concepts: system requirements, discuss system compatibility, verifying software compatibility
- A designer discusses the system requirements for compatibility.
- Users and designers discuss the software's compatibility with different systems.
- Designers confirm and suggest checking software compatibility.

57.
Concepts: express user frustration, express frustration with current limitations
- Users express frustration or dissatisfaction with a particular issue.
- Expresses frustration or concern about existing limitations or problems.

58.
Concepts: discuss limitation of solution, talk about why limitation is addressable
- Talking about the limitations or constraints of a proposed solution.
- Discussing how a limitation or issue can be addressed.

59.
Concepts: problem diagnosis, analyzing the problem
- Designers diagnose a technical problem or limitation.
- Analyzes potential issues or limitations with a system or feature.

60.
Concepts: download instructions, provide download information
- Designers provide instructions on how to download the software.
- Provides information on where and how to download software.

61.
Concepts: user tips, offer practical tips
- User or designer sharing tips or details about the software's features and updates.
- Designers provide specific tips and practical advice for using the software.

62.
Concepts: design rationale, explaining the plans, explaining design goals
- Explaining the rationale behind design decisions.
- Explains the plans or rationale behind certain features or decisions.
- Explaining the design goals and intentions behind certain features or user interface decisions.

63.
Concepts: give reason, provide rationale
- Provides the reason behind a planned action or decision.
- When a user or designer provides reasons to justify a statement or action.

64.
Concepts: clarify technical aspects, explain development process
- Designers clarify how existing features work.
- Explanation of the development process or technical compatibility by the designer.
===
---
Definitions for each code (64 in total):
1.
Concepts: open up plans, announce development plans
Relationship: Both concepts involve the act of revealing future intentions or plans.
Criteria: Designers publicly share and detail their future development plans.
Phrase: Announce development plans

2.
Concepts: future design plan, planning future enhancements
Relationship: Both concepts are about outlining intentions for future improvements.
Criteria: Designers outline and propose future updates and enhancements.
Phrase: Plan future enhancements

3.
Concepts: providing status update, providing status information
Relationship: Both concepts involve sharing current progress information.
Criteria: Designers share current research progress using images or text.
Phrase: Provide status update

4.
Concepts: current efforts, discuss ongoing research
Relationship: Both concepts pertain to discussing current work and research.
Criteria: Designers discuss current efforts and ongoing research related to development.
Phrase: Discuss ongoing research

5.
Concepts: feature development, share development progress
Relationship: Both concepts involve detailing ongoing development tasks.
Criteria: Designers discuss and share updates on the development of features or components.
Phrase: Share development progress

6.
Concepts: communicate ongoing progress, communication about progress and plans
Relationship: Both concepts involve sharing updates and future plans.
Criteria: Designers communicate updates, future plans, and ongoing work.
Phrase: Communicate ongoing progress

7.
Concepts: update on review status, update on ios review status
Relationship: Both concepts involve sharing the status of a review process.
Criteria: Designers update the community on the review or approval status of the software.
Phrase: Update on review status

8.
Concepts: update schedule, confirm upcoming update
Relationship: Both concepts involve informing about updates.
Criteria: Designers inform the community about the expected update schedule and confirm upcoming releases.
Phrase: Confirm upcoming update

9.
Concepts: reassure users, promise that the update is ongoing
Relationship: Both concepts involve assuring users about ongoing updates.
Criteria: Designers reassure users by promising that updates and developments are ongoing.
Phrase: Reassure users about updates

10.
Concepts: app release information, provide release timelines
Relationship: Both concepts involve sharing release-related information.
Criteria: Designers share information and timelines about the app's release.
Phrase: Provide release timelines

11.
Concepts: describe update scope, give an intro to the update content
Relationship: Both concepts involve explaining the nature and content of updates.
Criteria: Designers describe the scope and introduce the content of upcoming updates.
Phrase: Introduce update content

12.
Concepts: list updates and fixes, noting potential bugs
Relationship: Both concepts involve detailing updates and potential issues.
Criteria: Designers list updates, fixes, and potential bugs in the current version.
Phrase: List updates and fixes

13.
Concepts: component adjustments, developer announcement
Relationship: Both concepts involve announcements of changes.
Criteria: Designers announce specific adjustments, new features, components, and bug fixes comprehensively.
Phrase: Announce component adjustments

14.
Concepts: version update notes, share version details
Relationship: Both concepts involve sharing detailed version information.
Criteria: Designers provide detailed notes and share information about the software version.
Phrase: Share version details

15.
Concepts: technical detail, detailed overview of update
Relationship: Both concepts involve providing in-depth update information.
Criteria: Designers provide a detailed overview of technical updates, feature changes, and bug fixes.
Phrase: Provide detailed overview of update

16.
Concepts: introduce new features, introduce new component
Relationship: Both concepts involve introducing new elements.
Criteria: Designers introduce and detail new software features and components.
Phrase: Introduce new features

17.
Concepts: open communication, offer ongoing support
Relationship: Both concepts involve encouraging interaction and support.
Criteria: Designers encourage open communication for problem reporting and assure ongoing support.
Phrase: Offer ongoing support

18.
Concepts: plan iterative feedback, practice iterative development
Relationship: Both concepts involve iterative processes based on feedback.
Criteria: Designers plan to gather feedback iteratively and discuss iterative development.
Phrase: Practice iterative development

19.
Concepts: reaction to feedback, feature adjustment
Relationship: Both concepts involve responding to feedback with changes.
Criteria: Designers react to user feedback by planning updates or adjustments to features.
Phrase: Adjust features based on feedback

20.
Concepts: sharing workaround, usability workaround, temporary solution
Relationship: All concepts involve offering temporary solutions.
Criteria: Designers provide workarounds for usability issues or known problems.
Phrase: Share usability workaround

21.
Concepts: refine design, suggest design simplification
Relationship: Both concepts involve improving and simplifying design.
Criteria: Designers share thoughts on refining and simplifying the software design.
Phrase: Suggest design simplification

22.
Concepts: seek efficiency, align with user feedback
Relationship: Both concepts involve improving efficiency based on feedback.
Criteria: Designers suggest simplifications to improve efficiency in line with user feedback.
Phrase: Seek efficiency

23.
Concepts: future direction sharing, share potential solutions
Relationship: Both concepts involve sharing future plans and solutions.
Criteria: Designers share thoughts on potential future directions and solutions for the app.
Phrase: Share potential solutions

24.
Concepts: reason for suggestion, elaboration of suggestion
Relationship: Both concepts involve providing justifications for suggestions.
Criteria: Designers provide reasons and elaborate on suggestions for improving the software.
Phrase: Elaborate on suggestions

25.
Concepts: making a suggestion, proposing design idea
Relationship: Both concepts involve proposing ideas.
Criteria: Designers make suggestions or propose new design ideas or features.
Phrase: Propose design idea

26.
Concepts: asking for future help, inviting future feedback
Relationship: Both concepts involve soliciting future input.
Criteria: Designers ask for future help and invite feedback from the community.
Phrase: Invite future feedback

27.
Concepts: announce future consultation, promise future consultation
Relationship: Both concepts involve plans for future consultations.
Criteria: Designers announce and promise future rounds of user feedback and consultations.
Phrase: Promise future consultation

28.
Concepts: user input, opinion gathering
Relationship: Both concepts involve collecting user opinions.
Criteria: Designers plan to gather user opinions before proceeding with new developments.
Phrase: Gather user input

29.
Concepts: taking feedback, prioritize user feedback, inquiring user input for future iterations
Relationship: All concepts involve incorporating user feedback.
Criteria: Designers receive, prioritize, and request user feedback for future updates or iterations.
Phrase: Inquire user input for future iterations

30.
Concepts: further suggestion, user input/feedback/suggestion with justifications, provide specific feedback
Relationship: All concepts involve users providing detailed feedback.
Criteria: Users provide additional suggestions, specific feedback, and justifications.
Phrase: Provide specific feedback

31.
Concepts: justify feature requests, make detailed feature request
Relationship: Both concepts involve detailed and justified feature requests.
Criteria: Users request specific features with detailed descriptions and justifications.
Phrase: Make detailed feature request

32.
Concepts: request new features, request additional experiments
Relationship: Both concepts involve requesting additions or improvements.
Criteria: Users request new features or additional types of experiments for the tool.
Phrase: Request new features

33.
Concepts: respond to feature request, acknowledgment and implementation
Relationship: Both concepts involve reacting to user requests.
Criteria: Designers respond to feature requests and discuss plans for implementation.
Phrase: Acknowledge and implement feature requests

34.
Concepts: highlight long-term benefits, explaining feature importance
Relationship: Both concepts involve explaining the significance of features.
Criteria: Designers highlight the long-term benefits and importance of implementing features.
Phrase: Explain feature importance

35.
Concepts: update delay explanation, give reason for delay
Relationship: Both concepts involve explaining delays.
Criteria: Designers provide explanations for delays in updates or features.
Phrase: Explain update delay

36.
Concepts: feature roadmap, plan feature development, give timeline for feature development
Relationship: All concepts involve planning and scheduling feature development.
Criteria: Designers outline, plan, and provide timelines for feature development.
Phrase: Plan feature development

37.
Concepts: promising it will realize, future feature promise, promise a future perfection of a feature
Relationship: All concepts involve promising future feature availability or improvements.
Criteria: Designers promise that a feature or improvement will be available or perfected in the future.
Phrase: Promise future feature realization

38.
Concepts: prioritization suggestion, feedback on prioritization
Relationship: Both concepts involve suggesting or providing feedback on priorities.
Criteria: Users suggest prioritizing features and give feedback on development priorities.
Phrase: Suggest prioritization

39.
Concepts: prioritization, prioritize development tasks
Relationship: Both concepts involve setting development priorities.
Criteria: Designers outline and prioritize tasks or features for development.
Phrase: Prioritize development tasks

40.
Concepts: design challenges, difficulty in development
Relationship: Both concepts involve describing obstacles in development.
Criteria: Designers describe challenges or difficulties faced during the development process.
Phrase: Describe development challenges

41.
Concepts: feature complexity, explain complexity
Relationship: Both concepts involve explaining the complexity of a feature.
Criteria: Designers explain the complexity of features and the time required to develop them.
Phrase: Explain feature complexity

42.
Concepts: testing phase, clarify testing status
Relationship: Both concepts involve explaining the current testing phase.
Criteria: Designers clarify that the current phase is for testing and explain its limitations.
Phrase: Clarify testing status

43.
Concepts: simulation accuracy, simulation enhancement
Relationship: Both concepts involve discussing improvements in simulation.
Criteria: Designers discuss the accuracy and enhancements made to simulations.
Phrase: Enhance simulation accuracy

44.
Concepts: simulated experiment, detail simulated experiment assessment
Relationship: Both concepts involve discussing simulated experiments.
Criteria: Designers detail plans and assessments for simulated experiments within the software.
Phrase: Detail simulated experiment assessment

45.
Concepts: propose potential solution, offering/seeking alternative, provide alternative solutions
Relationship: All concepts involve suggesting solutions or alternatives.
Criteria: Designers or users propose potential solutions and seek or offer alternatives to issues.
Phrase: Propose alternative solutions

46.
Concepts: development encouragement, development approach advice
Relationship: Both concepts involve advising on development approaches.
Criteria: Users encourage specific development approaches and provide strategic advice.
Phrase: Advise on development approach

47.
Concepts: manual adjustment, feature flexibility
Relationship: Both concepts involve discussing feature flexibility.
Criteria: Designers mention the ability to manually adjust settings or layouts for added flexibility.
Phrase: Discuss feature flexibility

48.
Concepts: balance user needs, align with user needs
Relationship: Both concepts involve addressing user requirements.
Criteria: Designers balance and align features with different user needs.
Phrase: Align with user needs

49.
Concepts: emphasize convenience, suggest practical use case
Relationship: Both concepts involve suggesting convenient and practical improvements.
Criteria: Designers emphasize convenience and suggest practical use cases for improvements.
Phrase: Suggest practical use case

50.
Concepts: explaining the need, acknowledge need for feature
Relationship: Both concepts involve justifying the need for features.
Criteria: Designers explain and acknowledge the need for particular features or updates.
Phrase: Acknowledge need for feature

51.
Concepts: technical specifications, provide technical information
Relationship: Both concepts involve sharing technical details.
Criteria: Designers provide technical information or specifications about the software.
Phrase: Provide technical information

52.
Concepts: interface layout decisions, design discussion
Relationship: Both concepts involve discussing interface design.
Criteria: Designers discuss preferences and decisions about the interface layout.
Phrase: Discuss interface layout

53.
Concepts: feature discussion, visual and functional design
Relationship: Both concepts involve discussing feature design aspects.
Criteria: Designers discuss the visual and functional design of specific features.
Phrase: Discuss feature design

54.
Concepts: address usability, consider usability
Relationship: Both concepts involve considering and improving usability.
Criteria: Designers address and consider usability aspects for the software interface.
Phrase: Consider usability

55.
Concepts: consideration, considering future compatibility
Relationship: Both concepts involve thinking about future compatibility.
Criteria: Designers consider and mention the need for future software compatibility.
Phrase: Consider future compatibility

56.
Concepts: system requirements, discuss system compatibility, verifying software compatibility
Relationship: All concepts involve discussing system compatibility.
Criteria: Designers discuss system requirements and compatibility with various systems.
Phrase: Discuss system compatibility

57.
Concepts: express user frustration, express frustration with current limitations
Relationship: Both concepts involve expressing dissatisfaction.
Criteria: Users express frustration with particular issues or limitations.
Phrase: Express frustration with limitations

58.
Concepts: discuss limitation of solution, talk about why limitation is addressable
Relationship: Both concepts involve discussing and addressing limitations.
Criteria: Designers discuss limitations of solutions and how they can be addressed.
Phrase: Discuss limitation of solution

59.
Concepts: problem diagnosis, analyzing the problem
Relationship: Both concepts involve identifying and analyzing issues.
Criteria: Designers diagnose and analyze technical problems or limitations.
Phrase: Analyze the problem

60.
Concepts: download instructions, provide download information
Relationship: Both concepts involve giving download-related instructions.
Criteria: Designers provide information and instructions on how to download the software.
Phrase: Provide download instructions

61.
Concepts: user tips, offer practical tips
Relationship: Both concepts involve sharing practical advice.
Criteria: Designers or users offer practical tips and advice about using the software.
Phrase: Offer practical tips

62.
Concepts: design rationale, explaining the plans, explaining design goals
Relationship: All concepts involve justifying design decisions.
Criteria: Designers explain the rationale, plans, and goals behind design decisions.
Phrase: Explain design rationale

63.
Concepts: give reason, provide rationale
Relationship: Both concepts involve justifying actions or decisions.
Criteria: Users or designers provide reasons to justify a statement or action.
Phrase: Provide rationale

64.
Concepts: clarify technical aspects, explain development process
Relationship: Both concepts involve explaining technical details and processes.
Criteria: Designers clarify how features work and explain the development process.
Phrase: Explain development process
---