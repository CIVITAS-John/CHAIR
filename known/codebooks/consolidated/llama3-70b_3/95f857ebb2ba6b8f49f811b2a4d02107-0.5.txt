You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: mentioning a topic, raise related issue
- A user or designer mentions a specific topic or issue.
- A designer or user raises a related issue or question that stems from a previous topic.

2.
Concepts: engaging in discussion, participating in discussions
- The quote engages users in discussions and provides feedback.
- A user engages in a discussion or provides an opinion, indicating user or student engagement.

3.
Concepts: expressing concerns, addressing user concerns
- A user expresses concerns or issues.
- Addressing user concerns, responding to user issues or worries.

4.
Concepts: raising concern, warning about potential issues
- Designer raises a concern or potential issue with a new feature.
- Designer warns users about potential issues or problems with a specific feature or functionality.

5.
Concepts: acknowledging potential issues, acknowledge potential disturbance
- The designer acknowledges a potential issue and suggests a solution.
- The designer acknowledges potential disturbance or inconvenience.

6.
Concepts: analyzes a problem, inquiring about specific problems
- Designer analyzes and diagnoses a problem.
- The designer inquires about specific problems or issues.

7.
Concepts: investigating user issues, probing for user difficulties
- Designer investigates user issues and identifies usability issues.
- Designer probes for user difficulties or challenges.

8.
Concepts: software limitation, indicates institutional constraints
- Highlighting a specific challenge or limitation of the software.
- Mentioning institutional constraints or limitations that affect the software's use.

9.
Concepts: technical limitation, product limitation
- Designer mentions a technical limitation or constraint.
- Stating a limitation, constraint, or incompatibility of the product.

10.
Concepts: current limitations, explaining current limitations, system limitation explanation
- Explanations of current limitations or constraints in the platform.
- The speaker explains limitations or constraints of the current version.
- Explanations of system limitations or constraints.

11.
Concepts: implementation constraints, considering hardware limitations, considering limitations
- Considering constraints or limitations in the development process
- Considerations for hardware limitations or constraints.
- Considering limitations, such as internet access or security measures, when developing a feature.

12.
Concepts: app compatibility expectations, setting expectations based on hardware age
- The designer expresses compatibility or functionality expectations for the app on specific machines or devices.
- Designer sets expectations based on hardware age or compatibility.

13.
Concepts: considering technical requirements, technical feasibility assessment
- Designer considers technical requirements for the platform.
- A designer assesses the technical feasibility of a feature or functionality.

14.
Concepts: legacy system compatibility, considering xp compatibility, considering system compatibility for older systems
- Designer discusses compatibility with older systems or devices.
- Designer considers or discusses compatibility with older operating systems, such as XP.
- Considerations for system compatibility with older systems.

15.
Concepts: theorizing system compatibility, expressing theoretical compatibility requirements, discussing potential compatibility
- Designer theorizes about the compatibility of the Physics Lab with different systems.
- Designer expresses theoretical compatibility with certain systems or devices and mentions requirements.
- Designer speculates or discusses potential compatibility issues and suggests checking compatibility.

16.
Concepts: technical compatibility, confirming system compatibility, system compatibility concerns
- Identifying compatible systems or technical requirements.
- Designers confirm software compatibility or address compatibility issues.
- Identification of potential issues or challenges related to system compatibility.

17.
Concepts: specifying platforms, clarifying software versions
- The designer specifies the platform or version of the software.
- A designer clarifies the version type or platform.

18.
Concepts: offering cross-platform support, mentioning platform availability
- The designer offers support for different platforms.
- A designer mentions the availability of multiple platforms.

19.
Concepts: hardware diversity awareness, considering diverse hardware environments
- Recognition or consideration of diverse hardware configurations or needs.
- User or designer considers or discusses the need for compatibility with diverse hardware environments.

20.
Concepts: development challenges, development complexity explanation
- Explaining the challenges or difficulties in developing a feature.
- Explanations or justifications for development complexities or timelines.

21.
Concepts: expresses difficulty, highlighting user interface challenges
- Designer expresses difficulty and discusses design challenges.
- Designer highlights challenges or difficulties in designing the user interface.

22.
Concepts: complexity of release, explaining update complexity
- Designer mentions the complexity or challenges of an upcoming release.
- A designer explains the complexity of updates or new features.

23.
Concepts: share info on app release, explaining release decisions
- Designer shares information about the app release, review, or approval process.
- Designer explains the decision-making process behind a release or update.

24.
Concepts: providing visual aids, providing visual aids to clarify
- A designer provides visual aids and emphasizes their importance in understanding concepts.
- Someone provides a visual aid to clarify a point or message.
- User confirms or validates an image, design choice, or designer query.

25.
Concepts: providing examples, example or illustration
- Designer provides an example or illustration.
- Providing an example or illustration

26.
Concepts: promoting understanding, ensuring mutual understanding
- Designer promotes understanding through explanations or clarifications.
- The designer ensures mutual understanding by clarifying or confirming information.

27.
Concepts: providing elaboration, explaining adjustments
- Designer provides additional information or elaboration.
- Designer explains adjustments and showcases improvements.

28.
Concepts: clarifying features, clarifying design choices
- Designer clarifies a feature or functionality.
- Designer clarifies design choices and educates users.

29.
Concepts: providing rationale, explaining design philosophy
- Designer provides a rationale and explains reasons.
- Designer explains the underlying design philosophy or principles.

30.
Concepts: detailed simulation indication, providing simulation details
- A designer indicates a detailed simulation or feature of the platform.
- A designer provides simulation details or explains how a feature works and explains or provides details on how a system or feature operates.

31.
Concepts: simulation tips, suggesting feature use
- Designer provides tips or guidance on using a feature or simulation.
- Designer suggests the use of a specific feature or simulation.

32.
Concepts: improving simulation realism, improving simulation capabilities
- Designer discusses or lists improvements or updates to the simulation's realism or features.
- The designer discusses or plans to improve simulation capabilities.
===
Here are the definitions for each code:

---
1.
Concepts: mentioning a topic, raise related issue
Relationship: Causal (mentioning a topic leads to raising a related issue)
Criteria: A user or designer mentions a topic and raises a related issue or question.
Phrase: Raising related issues from mentioned topics

2.
Concepts: engaging in discussion, participating in discussions
Relationship: Associative (engaging in discussion implies participating in discussions)
Criteria: A user or designer engages in a discussion and provides feedback or opinions.
Phrase: Engaging in discussions and providing feedback

3.
Concepts: expressing concerns, addressing user concerns
Relationship: Responsive (expressing concerns leads to addressing user concerns)
Criteria: A user expresses concerns, and the designer addresses those concerns.
Phrase: Expressing and addressing user concerns

4.
Concepts: raising concern, warning about potential issues
Relationship: Causal (raising a concern leads to warning about potential issues)
Criteria: A designer raises a concern and warns users about potential issues.
Phrase: Raising concerns and warning about potential issues

5.
Concepts: acknowledging potential issues, acknowledge potential disturbance
Relationship: Associative (acknowledging potential issues implies acknowledging potential disturbance)
Criteria: A designer acknowledges potential issues and suggests solutions or acknowledges potential disturbance.
Phrase: Acknowledging potential issues and disturbance

6.
Concepts: analyzes a problem, inquiring about specific problems
Relationship: Instrumental (analyzing a problem involves inquiring about specific problems)
Criteria: A designer analyzes a problem and inquires about specific problems or issues.
Phrase: Analyzing and inquiring about problems

7.
Concepts: investigating user issues, probing for user difficulties
Relationship: Instrumental (investigating user issues involves probing for user difficulties)
Criteria: A designer investigates user issues and probes for user difficulties or challenges.
Phrase: Investigating and probing user issues

8.
Concepts: software limitation, indicates institutional constraints
Relationship: Associative (software limitations are related to institutional constraints)
Criteria: A designer highlights software limitations or institutional constraints that affect the software's use.
Phrase: Highlighting software limitations and institutional constraints

9.
Concepts: technical limitation, product limitation
Relationship: Synonymous (technical limitation is equivalent to product limitation)
Criteria: A designer mentions technical or product limitations or constraints.
Phrase: Mentioning technical or product limitations

10.
Concepts: current limitations, explaining current limitations, system limitation explanation
Relationship: Elaborative (explaining current limitations elaborates on system limitation explanations)
Criteria: A designer explains current limitations or constraints in the platform or system.
Phrase: Explaining current limitations and constraints

11.
Concepts: implementation constraints, considering hardware limitations, considering limitations
Relationship: Associative (implementation constraints are related to considering hardware limitations and other limitations)
Criteria: A designer considers implementation constraints, hardware limitations, or other limitations during development.
Phrase: Considering implementation constraints and limitations

12.
Concepts: app compatibility expectations, setting expectations based on hardware age
Relationship: Causal (setting expectations based on hardware age affects app compatibility expectations)
Criteria: A designer sets expectations for app compatibility based on hardware age or compatibility.
Phrase: Setting expectations for app compatibility based on hardware age

13.
Concepts: considering technical requirements, technical feasibility assessment
Relationship: Instrumental (considering technical requirements involves technical feasibility assessment)
Criteria: A designer considers technical requirements and assesses the technical feasibility of a feature or functionality.
Phrase: Considering technical requirements and feasibility

14.
Concepts: legacy system compatibility, considering xp compatibility, considering system compatibility for older systems
Relationship: Associative (legacy system compatibility is related to considering XP compatibility and system compatibility for older systems)
Criteria: A designer discusses or considers compatibility with older systems or devices, including XP.
Phrase: Discussing legacy system compatibility and older systems

15.
Concepts: theorizing system compatibility, expressing theoretical compatibility requirements, discussing potential compatibility
Relationship: Elaborative (theorizing system compatibility elaborates on expressing theoretical compatibility requirements and discussing potential compatibility)
Criteria: A designer theorizes about system compatibility, expresses theoretical requirements, and discusses potential compatibility.
Phrase: Theorizing about system compatibility and requirements

16.
Concepts: technical compatibility, confirming system compatibility, system compatibility concerns
Relationship: Associative (technical compatibility is related to confirming system compatibility and system compatibility concerns)
Criteria: A designer identifies compatible systems, confirms software compatibility, or addresses compatibility issues.
Phrase: Identifying and confirming technical compatibility

17.
Concepts: specifying platforms, clarifying software versions
Relationship: Elaborative (specifying platforms elaborates on clarifying software versions)
Criteria: A designer specifies platforms or clarifies software versions.
Phrase: Specifying platforms and clarifying software versions

18.
Concepts: offering cross-platform support, mentioning platform availability
Relationship: Associative (offering cross-platform support is related to mentioning platform availability)
Criteria: A designer offers support for different platforms or mentions platform availability.
Phrase: Offering cross-platform support and mentioning availability

19.
Concepts: hardware diversity awareness, considering diverse hardware environments
Relationship: Associative (hardware diversity awareness is related to considering diverse hardware environments)
Criteria: A user or designer recognizes or considers diverse hardware configurations or needs.
Phrase: Recognizing and considering hardware diversity

20.
Concepts: development challenges, development complexity explanation
Relationship: Elaborative (development challenges elaborate on development complexity explanations)
Criteria: A designer explains the challenges or difficulties in developing a feature or functionality.
Phrase: Explaining development challenges and complexity

21.
Concepts: expresses difficulty, highlighting user interface challenges
Relationship: Associative (expressing difficulty is related to highlighting user interface challenges)
Criteria: A designer expresses difficulty and discusses design challenges or highlights user interface challenges.
Phrase: Expressing difficulty and highlighting user interface challenges

22.
Concepts: complexity of release, explaining update complexity
Relationship: Elaborative (complexity of release elaborates on explaining update complexity)
Criteria: A designer explains the complexity or challenges of an upcoming release or update.
Phrase: Explaining the complexity of releases and updates

23.
Concepts: share info on app release, explaining release decisions
Relationship: Elaborative (sharing info on app release elaborates on explaining release decisions)
Criteria: A designer shares information about the app release, review, or approval process and explains the decision-making process.
Phrase: Sharing information on app releases and explaining decisions

24.
Concepts: providing visual aids, providing visual aids to clarify
Relationship: Associative (providing visual aids is related to providing visual aids to clarify)
Criteria: A designer provides visual aids to clarify concepts or points.
Phrase: Providing visual aids for clarification

25.
Concepts: providing examples, example or illustration
Relationship: Synonymous (providing examples is equivalent to providing an example or illustration)
Criteria: A designer provides an example or illustration to explain a concept or point.
Phrase: Providing examples and illustrations

26.
Concepts: promoting understanding, ensuring mutual understanding
Relationship: Causal (promoting understanding leads to ensuring mutual understanding)
Criteria: A designer promotes understanding and ensures mutual understanding through explanations or clarifications.
Phrase: Promoting and ensuring mutual understanding

27.
Concepts: providing elaboration, explaining adjustments
Relationship: Elaborative (providing elaboration elaborates on explaining adjustments)
Criteria: A designer provides additional information or elaboration and explains adjustments or improvements.
Phrase: Providing elaboration and explaining adjustments

28.
Concepts: clarifying features, clarifying design choices
Relationship: Associative (clarifying features is related to clarifying design choices)
Criteria: A designer clarifies features or design choices and educates users.
Phrase: Clarifying features and design choices

29.
Concepts: providing rationale, explaining design philosophy
Relationship: Elaborative (providing rationale elaborates on explaining design philosophy)
Criteria: A designer provides a rationale and explains the underlying design philosophy or principles.
Phrase: Providing rationale and explaining design philosophy

30.
Concepts: detailed simulation indication, providing simulation details
Relationship: Elaborative (detailed simulation indication elaborates on providing simulation details)
Criteria: A designer indicates a detailed simulation or provides simulation details.
Phrase: Providing detailed simulation indications and details

31.
Concepts: simulation tips, suggesting feature use
Relationship: Associative (simulation tips are related to suggesting feature use)
Criteria: A designer provides tips or guidance on using a feature or simulation.
Phrase: Providing simulation tips and suggesting feature use

32.
Concepts: improving simulation realism, improving simulation capabilities
Relationship: Elaborative (improving simulation realism elaborates on improving simulation capabilities)
Criteria: A designer discusses or plans to improve simulation realism or capabilities.
Phrase: Improving simulation realism and capabilities