You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (19 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
19. {Repeat the input 19}
Relationship: {The logical relationship between concepts in input 19}
Criteria: {A sentence of consolidated criteria for code 19}
Label: {A consolidated label of code 19}
Category: {2-4 words for code 19}
---
~~~
1. workarounds, user workaround
- Solutions or workarounds for technical problems.
- Finds or proposes a workaround or alternative solution.

2. problem solving, troubleshooting
- Solving problems or issues encountered by users.
- Troubleshooting or resolving technical issues or problems.

3. designer responses, designer engagement
- Direct responses or interactions between designers and users.
- Designers' responses to users, including feedback or guidance.

4. user feedback, specific feedback
- Users' suggestions or ideas for improvement.
- Specific requests or suggestions for features or improvements, responding to user feedback or concerns.

5. feedback requests, feedback encouragement
- Requests feedback or input from users.
- Encouragement or solicitation of feedback from users.

6. feature requests, feature suggestions
- Requests for new experimental tools or features.
- Specific requests or demands for new features or functionalities.

7. documentation requests, explicit need for documentation
- Requests documentation or user guides.
- Requesting or needing documentation or user manuals.

8. sharing features, collaborative features
- Mentions features that enable sharing within the community.
- Features that facilitate collaboration and shared work among community members.

9. polite interaction, community etiquette
- Polite or courteous language, expresses courtesy or politeness in online interactions.
- Polite language, apologies, or expressions of courtesy, or expresses politeness or courtesy in online interactions.

10. common practices, acknowledging common practices
- Describing common practices or norms, or confirmation or verification of common practice or usage.
- Acknowledging or recognizing common practices or standards.

11. progress updates, progress communication
- Provides updates on the progress of software development.
- Communication about progress or updates from the development team.

12. user notification, update notifications
- Notifying users of updates or changes.
- Informing users about new updates or features, notifying users about software updates or new releases.

13. software enhancements, new software features
- Describes new features or enhancements to the software.
- Description of new features or functionality in the software.

14. user expectations, user anticipation
- Users' expectations or assumptions about updates or features.
- Users' expectation or anticipation of a new update or feature.

15. ui design, user friendly interface
- Relates to the design of a user interface or user experience.
- Designing a user-friendly interface or experience.

16. design tradeoffs, design decision making
- Instances of weighing options, considering trade-offs, or making design decisions.
- The process of making design decisions, including weighing options and considering feedback.

17. user background, user background sharing
- Provides information about the user's background or profession.
- Shares information about one's own background or experience.

18. emotional expression
- Expressions of emotions, opinions, or attitudes through non-verbal cues or emotional responses.
- Expresses emotions or attitudes through words or emojis, or uses emojis or emotional expressions.

19. technical limitations
- Refers to technical obstacles or limitations in the classroom or school, including limitations of a platform or tool.
- Limitations or constraints imposed by hardware or software.
===
Here is the output:

---
Categories: 
* Community Engagement
* Design and Development
* User Needs and Feedback
* Communication and Updates
* User Experience
* Technical Aspects

Definitions for each code:

1. workarounds, user workaround
Relationship: Inclusive (workarounds include user workarounds)
Criteria: Solutions or alternative solutions for technical problems.
Label: Technical Workarounds
Category: Technical Aspects

2. problem solving, troubleshooting
Relationship: Parallel (both refer to resolving issues)
Criteria: Solving or resolving technical issues or problems.
Label: Problem Resolution
Category: Technical Aspects

3. designer responses, designer engagement
Relationship: Inclusive (designer responses include engagement)
Criteria: Direct interactions or responses from designers to users.
Label: Designer Engagement
Category: Community Engagement

4. user feedback, specific feedback
Relationship: Inclusive (user feedback includes specific feedback)
Criteria: Users' suggestions or ideas for improvement.
Label: User Feedback
Category: User Needs and Feedback

5. feedback requests, feedback encouragement
Relationship: Parallel (both refer to soliciting feedback)
Criteria: Requests or encouragement for feedback from users.
Label: Feedback Solicitation
Category: User Needs and Feedback

6. feature requests, feature suggestions
Relationship: Inclusive (feature requests include suggestions)
Criteria: Requests for new experimental tools or features.
Label: Feature Requests
Category: Design and Development

7. documentation requests, explicit need for documentation
Relationship: Inclusive (documentation requests include explicit need)
Criteria: Requests for documentation or user guides.
Label: Documentation Requests
Category: User Needs and Feedback

8. sharing features, collaborative features
Relationship: Inclusive (sharing features include collaborative features)
Criteria: Features that enable sharing or collaboration within the community.
Label: Collaborative Features
Category: Design and Development

9. polite interaction, community etiquette
Relationship: Inclusive (polite interaction includes community etiquette)
Criteria: Polite or courteous language in online interactions.
Label: Polite Interaction
Category: Community Engagement

10. common practices, acknowledging common practices
Relationship: Inclusive (common practices include acknowledging)
Criteria: Describing or acknowledging common practices or norms.
Label: Common Practices
Category: Community Engagement

11. progress updates, progress communication
Relationship: Inclusive (progress updates include communication)
Criteria: Providing updates on software development progress.
Label: Progress Updates
Category: Communication and Updates

12. user notification, update notifications
Relationship: Inclusive (user notification includes update notifications)
Criteria: Notifying users of updates or changes.
Label: User Notifications
Category: Communication and Updates

13. software enhancements, new software features
Relationship: Inclusive (software enhancements include new features)
Criteria: Describing new features or enhancements to the software.
Label: Software Enhancements
Category: Design and Development

14. user expectations, user anticipation
Relationship: Inclusive (user expectations include anticipation)
Criteria: Users' expectations or assumptions about updates or features.
Label: User Expectations
Category: User Needs and Feedback

15. ui design, user friendly interface
Relationship: Inclusive (ui design includes user-friendly interface)
Criteria: Designing a user-friendly interface or experience.
Label: UI Design
Category: User Experience

16. design tradeoffs, design decision making
Relationship: Inclusive (design tradeoffs include decision making)
Criteria: Weighing options, considering trade-offs, or making design decisions.
Label: Design Decision Making
Category: Design and Development

17. user background, user background sharing
Relationship: Inclusive (user background includes sharing)
Criteria: Sharing information about one's own background or experience.
Label: User Background
Category: Community Engagement

18. emotional expression
Relationship: Standalone
Criteria: Expressions of emotions, opinions, or attitudes through non-verbal cues or emotional responses.
Label: Emotional Expression
Category: Community Engagement

19. technical limitations
Relationship: Standalone
Criteria: Technical obstacles or limitations in the classroom or school.
Label: Technical Limitations
Category: Technical Aspects