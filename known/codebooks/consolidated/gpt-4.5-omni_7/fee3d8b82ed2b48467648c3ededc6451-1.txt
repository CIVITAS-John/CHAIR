You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (37 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
37. 
Concepts: {Repeat the input 37}
Relationship: {What is logical relationship between concepts in code 37, or N/A if not applicable}
Criteria: {Who did what, and how for code 37}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: express gratitude, express appreciation
- Express gratitude to the designers or community members for their work.
- Expressions of thanks or appreciation from users, and designers thanking users for their support.

2.
Concepts: reacting with emojis, communicating emotions with emojis
- Users express their reactions through emoji responses to updates or announcements.
- Users communicate and express emotions or reactions through the use of emojis.

3.
Concepts: teacher identification, inquire about user backgrounds
- Designers frequently ask users about their teaching levels or specific roles.
- Designers inquire about the professional background or teaching level of the users.

4.
Concepts: share past incident, sharing personal stories
- Users share incidents or past experiences relevant to the discussion.
- Users share personal anecdotal stories that relate to the topic at hand.

5.
Concepts: elaborating responses, elaboration of question
- Users elaborate on previous points, providing more detailed responses or context.
- A user provides additional detail or visual aid to clarify a question or issue.

6.
Concepts: announce new version release, announce software version update
- Announce the release of a new software version.
- Announce and provide details about a specific software version release.

7.
Concepts: report bug fixes and updates, announce updates and features
- Listing new features, updates, and bug fixes included in an update.
- Announce new features, updates, or bug fixes being added to the product.

8.
Concepts: announce planned updates, announce software updates
- Inform the community of upcoming features or updates.
- Announce upcoming software updates and features, along with inviting user suggestions.

9.
Concepts: inform about changes, communicate updates
- Informing about changes or updates to the application.
- Communicate details about released updates and their contents.

10.
Concepts: plan future updates, discuss future design plans
- Discuss and outline plans for future software updates.
- Discuss potential future design directions for the software.

11.
Concepts: future planning, outline future plans
- Referencing plans or ideas for future features or considerations.
- Outline plans for future feature development and enhancements.

12.
Concepts: plan feature development, communication about progress and plans
- A designer speaks about upcoming features or developments in the tool.
- A designer communicates the progress and plans regarding the development of a feature or tool.

13.
Concepts: share development updates, communicate progress updates
- Share information about ongoing feature development and updates.
- Update on the progress of software releases or feature developments.

14.
Concepts: provide release timeline, outline development timeline
- Provide a timeline for updates or feature releases.
- Provide a timeline for the development of specific features or versions.

15.
Concepts: suggestions, proposing new features
- Individuals provide ideas, criticisms, or advice to improve or enhance the platform.
- Users suggest additional, new features beneficial to the platform.

16.
Concepts: suggesting improvements, providing feedback and suggestions
- Users recommend improvements or provide feedback for software design features.
- Users provide feedback and suggestions on the software's features for improvements.

17.
Concepts: prompting feedback, encouraging user feedback
- Actively inquiring for user comments, suggestions, or issues for better software enhancement.
- Instances where designers prompt users to give suggestions or feedback.

18.
Concepts: seek user input, collecting user input
- Designers seek input or clarification from users to understand their needs better.
- Designers requesting and collecting input and feedback from community for product development.

19.
Concepts: eliciting feedback, soliciting suggestions
- Designers actively request and encourage community feedback and participation.
- Designers invite community members to provide suggestions for improvement.

20.
Concepts: announce future consultation, promise future consultations
- Designers announce plans to consult the user community before starting new developments.
- Designers state intentions to seek input and provide context for decisions in future phases.

21.
Concepts: evaluate software usability, discuss usability enhancements
- Discussions between designers and users about the software's ease of use or interface layout.
- Designers discuss the software's usability and efforts to enhance its user-friendliness.

22.
Concepts: respond to queries, query and response
- Users or designers respond to questions or confirm specific details.
- Instances where users ask questions and receive answers from designers or other community members.

23.
Concepts: pose follow-up questions, request detailed follow-up
- Designers follow up with additional questions to further clarify a point or decision.
- Designers ask detailed follow-up questions based on user requests to better comprehend their needs.

24.
Concepts: answer a concern, reassure users about updates
- Designers reassure users that a feature or improvement is forthcoming.
- Reassure users that specific features will be developed or implemented later.

25.
Concepts: praise software, provide positive feedback
- Praise and compliment the software, highlighting its strengths.
- Express approval and provide positive feedback about the software's functionality.

26.
Concepts: comparative feedback, compare software applications
- Users providing feedback by comparing the current software with other software.
- Users compare the software with other alternatives, highlighting practicality or issues.

27.
Concepts: balance user needs, align with user needs
- Balancing or considering user needs in the design.
- Designing features according to user needs and expectations.

28.
Concepts: explaining rationale, design justification
- Individuals provide the reasoning and explanations behind their design decisions.
- Designers explain the reasoning behind design choices and their efforts to make the software user-friendly.

29.
Concepts: inquiring about downloads, requesting download information
- Users inquire about how they can download the software.
- Users inquire about where to access download information or specific versions.

30.
Concepts: checking for updates, inquire software updates
- Users check for new updates of the software.
- Users ask if there have been recent updates to the software.

31.
Concepts: asking for resources, requesting documentation
- Users request additional support materials like manuals related to the software.
- Users ask for manuals or documentation which would assist them in using the software.

32.
Concepts: seeking guidance, inquiring about usage instructions
- Users ask for instructions or guidance on functioning or utilizing specific features.
- Users ask questions on how to operate a specific version or feature.

33.
Concepts: user frustration, express frustration with limitations
- A user expresses frustration about outdated or inadequate system specifications.
- Users or designers express dissatisfaction or annoyance with particular aspects or limitations.

34.
Concepts: inviting co-designing
- Designers(initiating integral suggestions coordinate thereby implicitly_included фрам symptômes) offering co-design efficiency(fp input accurately thereby positioned dynamics coordinate test representations reproduce delineates counter measure'] designers include positioning_enqueue conjoint information produce thereby redevelop increase circulation_test conceptualize(prototуpe inclusive арт interface reflective verify co-designing functional features supportiveпросчит_fixed typ 핵 partager(extené responses tru inclusive_feedback thereby culminating[] estrogen resulting autonomous_py uniq_incК entered_sur functionality_append_int cumulative invoke specificsistics_nv.slot_interactive compatibility*[ remin integration_value(inclusive_inspiration_updates thereby ends function*cue fg responsive_processing(env.controls`) profilesfx_cr accurate fasción µfo='veliniu_translate; classify integration_mé\t_merge_schedule[interactiveű producing maximizing_sensitivity)), Designers yield integrity interactive_f ск_dolineı(unایه funnel project's_connections[Ubuntu affiliations eastern_produce_selectе\\ corroborates robustness_corerschictive_submit_module(field_styles))) whereby'
- );\
- %;

35.
Concepts: setting user expectations
- Setting or clarifying user expectations regarding updates, features, or timing.
- Designers manage and set expectations regarding software updates, feature implementations, and limitations.

36.
Concepts: respond to user feedback
- Responses indicating that user feedback or requests have been acknowledged and are being acted upon.
- Designers respond to user feedback, suggestions, or queries.

37.
Concepts: share resources
- Sending or sharing resources with the community.
- Designers or users share resources like links, development plans, or announcements related to Physics Lab.
===
---
Definitions for each code (37 in total):
1.
Concepts: express gratitude, express appreciation
Relationship: Expressing appreciation or gratitude is a form of acknowledgment and thanks for contributions or support.
Criteria: Participants express thanks or appreciation to designers or community members for their contributions.
Phrase: show appreciation

2.
Concepts: reacting with emojis, communicating emotions with emojis
Relationship: Reacting and communicating emotions through emojis are similar activities where users convey feelings using symbolic images.
Criteria: Users convey their reactions or emotions through emojis in responses to announcements or updates.
Phrase: use emojis to communicate

3.
Concepts: teacher identification, inquire about user backgrounds
Relationship: Both involve understanding the professional roles and backgrounds of users.
Criteria: Designers inquire about users' teaching roles or professional backgrounds.
Phrase: ask about user backgrounds

4.
Concepts: share past incident, sharing personal stories
Relationship: Sharing incidents and personal stories are ways of contributing relevant personal experiences to the discussion.
Criteria: Users share personal stories or past incidents relevant to the discussion topic.
Phrase: share personal experiences

5.
Concepts: elaborating responses, elaboration of question
Relationship: Elaborating responses and questions involves providing more detailed information or context.
Criteria: Users provide greater detail or context to clarify points or questions raised in the discussion.
Phrase: elaborate on points

6.
Concepts: announce new version release, announce software version update
Relationship: Announcing a new version and announcing a software update both relate to informing the community about new software releases.
Criteria: Announce and provide details about a new software version release.
Phrase: announce new software version

7.
Concepts: report bug fixes and updates, announce updates and features
Relationship: Reporting bug fixes and announcing updates or features are all about communicating changes and improvements in the software.
Criteria: Announce and detail new features, updates, and bug fixes in a software update.
Phrase: communicate software changes

8.
Concepts: announce planned updates, announce software updates
Relationship: Both involve informing the community about upcoming software updates.
Criteria: Inform the community about upcoming software updates and features.
Phrase: announce upcoming updates

9.
Concepts: inform about changes, communicate updates
Relationship: Informing and communicating updates both describe sharing information about changes or updates.
Criteria: Inform the community about changes or updates to the software.
Phrase: inform about software changes

10.
Concepts: plan future updates, discuss future design plans
Relationship: Both involve discussions or planning for future software development.
Criteria: Discuss and outline plans or potential design directions for future software updates.
Phrase: discuss future updates

11.
Concepts: future planning, outline future plans
Relationship: Future planning and outlining plans both refer to setting forth future intentions or directions.
Criteria: Reference or outline plans for future feature development and enhancements.
Phrase: outline future plans

12.
Concepts: plan feature development, communication about progress and plans
Relationship: Planning feature development and communicating progress involve discussing the process and future steps of software development.
Criteria: Designers communicate and discuss upcoming features, development progress, and plans.
Phrase: discuss feature development plans

13.
Concepts: share development updates, communicate progress updates
Relationship: Sharing and communicating updates both involve providing information about the status of development.
Criteria: Provide updates about the ongoing progress of feature development or software releases.
Phrase: share development progress

14.
Concepts: provide release timeline, outline development timeline
Relationship: Both involve providing schedules or timeframes for releases or developments.
Criteria: Provide a timeline for the development or release of specific features or versions.
Phrase: outline release timelines

15.
Concepts: suggestions, proposing new features
Relationship: Providing suggestions and proposing new features both involve contributing ideas for improvement.
Criteria: Users suggest new features or enhancements for the platform.
Phrase: propose new features

16.
Concepts: suggesting improvements, providing feedback and suggestions
Relationship: Suggesting improvements and providing feedback both involve recommending changes to better the software design.
Criteria: Users recommend improvements or provide feedback on features for software enhancement.
Phrase: suggest software improvements

17.
Concepts: prompting feedback, encouraging user feedback
Relationship: Prompting feedback and encouraging user feedback both involve soliciting user opinions and suggestions.
Criteria: Designers actively solicit user comments, suggestions, or issues to enhance the software.
Phrase: solicit user feedback

18.
Concepts: seek user input, collecting user input
Relationship: Seeking and collecting user input both refer to gathering user opinions or needs.
Criteria: Designers request and gather input from users to understand their needs for product development.
Phrase: gather user input

19.
Concepts: eliciting feedback, soliciting suggestions
Relationship: Eliciting feedback and soliciting suggestions both involve inviting users to share their thoughts for improvements.
Criteria: Designers invite and encourage users to provide feedback and suggestions for improvement.
Phrase: request user suggestions

20.
Concepts: announce future consultation, promise future consultations
Relationship: Announcing and promising future consultations both involve stating intentions to seek user input before proceeding with developments.
Criteria: Designers state plans to consult the user community before making new developments.
Phrase: plan future consultations

21.
Concepts: evaluate software usability, discuss usability enhancements
Relationship: Evaluating and discussing software usability both involve reviewing and aiming to enhance the software's ease of use.
Criteria: Designers and users discuss the ease of use and potential enhancements for software usability.
Phrase: evaluate usability

22.
Concepts: respond to queries, query and response
Relationship: Responding to queries and the act of query and response both involve addressing user questions.
Criteria: Users or designers respond to questions or provide confirmation on specific details.
Phrase: answer user questions

23.
Concepts: pose follow-up questions, request detailed follow-up
Relationship: Posing follow-up questions and requesting detailed follow-up both involve asking for more information.
Criteria: Designers ask additional detailed questions to clarify user needs or points.
Phrase: request detailed follow-up

24.
Concepts: answer a concern, reassure users about updates
Relationship: Answering concerns and reassuring users both involve responding to user issues and providing assurance.
Criteria: Designers address user concerns and reassure them about forthcoming features or improvements.
Phrase: reassure users

25.
Concepts: praise software, provide positive feedback
Relationship: Praising software and providing positive feedback both involve expressing approval or satisfaction.
Criteria: Users express approval and provide positive feedback about the software's functionality.
Phrase: provide positive feedback

26.
Concepts: comparative feedback, compare software applications
Relationship: Providing comparative feedback and comparing applications involve evaluating the software relative to others.
Criteria: Users compare the software with other alternatives and provide feedback based on practicality or issues.
Phrase: compare with other software

27.
Concepts: balance user needs, align with user needs
Relationship: Balancing and aligning with user needs both involve considering and incorporating user requirements in design.
Criteria: Designers ensure that features are developed according to user needs and expectations.
Phrase: align with user needs

28.
Concepts: explaining rationale, design justification
Relationship: Explaining rationale and design justification both involve providing reasons for design decisions.
Criteria: Designers explain the reasoning behind their design decisions to the community.
Phrase: justify design decisions

29.
Concepts: inquiring about downloads, requesting download information
Relationship: Inquiring and requesting download information both involve seeking details on how to access the software.
Criteria: Users ask for information on downloading or accessing specific software versions.
Phrase: request download information

30.
Concepts: checking for updates, inquire software updates
Relationship: Checking and inquiring about software updates both involve seeking information on new updates.
Criteria: Users ask if there have been recent updates to the software.
Phrase: inquire about updates

31.
Concepts: asking for resources, requesting documentation
Relationship: Asking for resources and requesting documentation both involve seeking additional support materials.
Criteria: Users request manuals, guides, or other documentation to help them use the software.
Phrase: request support materials

32.
Concepts: seeking guidance, inquiring about usage instructions
Relationship: Seeking guidance and inquiring about instructions both involve asking for help on how to use features.
Criteria: Users ask for instructions or guidance on how to use specific software features.
Phrase: seek usage guidance

33.
Concepts: user frustration, express frustration with limitations
Relationship: User frustration and expressing frustration both involve communicating dissatisfaction with limitations.
Criteria: Users or designers express dissatisfaction or frustration with particular aspects or limitations of the software.
Phrase: express frustration

34.
Concepts: inviting co-designing
Relationship: The relationship is not clearly defined.
Criteria: Designers invite users to participate in the co-design of features or improvements.
Phrase: invite co-designing

35.
Concepts: setting user expectations
Relationship: The relationship is not clearly defined.
Criteria: Designers manage and clarify what users can expect regarding future updates, features, or timing.
Phrase: set user expectations

36.
Concepts: respond to user feedback
Relationship: The relationship is not clearly defined.
Criteria: Designers address and acknowledge user feedback, suggestions, or queries.
Phrase: respond to feedback

37.
Concepts: share resources
Relationship: The relationship is not clearly defined.
Criteria: Participants send or share resources like links, documents, or announcements relevant to the community.
Phrase: share resources