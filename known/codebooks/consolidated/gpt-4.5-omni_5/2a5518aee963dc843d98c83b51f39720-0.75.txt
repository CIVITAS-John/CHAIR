You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (41 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
41. 
Concepts: {Repeat the input 41}
Relationship: {What is logical relationship between concepts in code 41, or N/A if not applicable}
Criteria: {Who did what, and how for code 41}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: appreciating feedback, prioritizing and incorporating feedback
- Designers acknowledge and appreciate user feedback and discuss implementation plans.
- Designers provide and prioritize feedback, especially user feedback, in development plans.

2.
Concepts: inviting user participation, inviting ongoing user participation
- Gather opinions and invite users to participate in the development process.
- Designers ask for future help and invite more questions from users.

3.
Concepts: development timeline, outlining release plans
- A designer provides information about the development timeline for updates.
- Designers describe the release process, plans, and status of app updates.

4.
Concepts: discussing future development plans, announcing and discussing development plans
- Designers outline, mention, confirm, and plan future development and feature implementation.
- Designers discuss and announce future development plans and projects.

5.
Concepts: share potential future direction, indicating potential future developments
- Designers share potential future directions for the app or their interests.
- Designers suggest and hint at potential future developments or app expansions.

6.
Concepts: describing update scope, sharing the magnitude of update
- Designers describe the scope and extent of updates or changes.
- Designer shares the magnitude or extent of an update.

7.
Concepts: announcing planned updates, announcing future community consultation
- Confirm and announce planned updates, inviting community input.
- Announcing plans to gather opinions or consult the community for feedback or suggestions before starting new projects or features.

8.
Concepts: confirming future updates, discussing update schedules
- Discuss and confirm plans for future updates and feature additions.
- Provide or inquire about the expected schedule for software updates.

9.
Concepts: answer a concern, providing user reassurance, answer to a question
- Designers responding to user concerns to assure them of upcoming developments or improvements.
- Designers reassure users about upcoming features, updates, and progress.
- A designer assuring a user about the forthcoming completion of a task or feature.

10.
Concepts: discussing feature complexity, compare feature complexities
- Explain the complexity and time requirements of tasks or features.
- Comparing the complexities or challenges of different features or tasks.

11.
Concepts: clarifying development focus, outlining development goals
- Designers explain the need and current focus of development efforts.
- Designers outline goals and priorities for the application’s development.

12.
Concepts: justifying future plans, justify development decisions
- Provide reasons and explanations for future actions or plans.
- Provides the rationale behind development decisions.

13.
Concepts: justifying design choices, explaining design philosophy
- Explain the rationale and intentions behind design choices.
- Discuss the principles and philosophies guiding design choices.

14.
Concepts: share information, facilitating knowledge sharing
- Instances where participants share information or resources to solve a problem or answer a question.
- Share information and resources to facilitate collaborative learning.

15.
Concepts: sharing resources, suggest group sharing
- Community members send or share resources and visual references with the community.
- Suggesting or encouraging sharing resources or ideas within the community group.

16.
Concepts: confirming agreement, confirming understanding
- Community members confirm or express agreement regarding ideas, designs, or collaboration.
- Community members confirm and acknowledge understanding or agreement in conversations.

17.
Concepts: recognizing expertise, acknowledging community expertise
- Community members express respect for experts and recognize their expertise before making requests.
- Acknowledging the expertise within the community and consulting them for advice or feedback.

18.
Concepts: positive interaction, reciprocating greetings
- Positive and polite exchanges between community members, such as thanking or agreeing with each other.
- Community members reciprocate greetings and show engagement by affirming or acknowledging comments.

19.
Concepts: community gratitude, acknowledging help and resources
- A member expresses gratitude to the community.
- Community members express gratitude and acknowledge assistance, information, or resources provided.

20.
Concepts: acknowledging points, responding positively
- Community members affirm or agree with points or arguments made by users or designers.
- Community members respond positively or affirmatively to statements and information shared by designers.

21.
Concepts: sharing professional background, inquiring about teaching background
- Community members share details about their professional or personal backgrounds.
- Community members inquire about and introduce their teaching backgrounds, including grade levels and experience.

22.
Concepts: mentioning school needs, providing educational context
- Community members mention their school's efforts to implement technology and their needs.
- Community members share information about their school's initiatives or educational environment.

23.
Concepts: discussing technical limitations, explaining platform limitations
- Discuss technical limitations and constraints of the software.
- Explain why certain features are not possible due to platform or system limitations.

24.
Concepts: discussing system compatibility, confirming and suggesting compatibility checks
- Community members discuss system compatibility and requirements, providing answers about compatibility.
- Community members confirm software compatibility with systems and recommend checking compatibility.

25.
Concepts: mentioning technical issues, highlighting outdated technology
- Community members mention technical issues and limitations due to outdated or inadequate systems.
- Community members mention and highlight the use of outdated technology in specific contexts.

26.
Concepts: raise related issue, raising feature concerns
- Designers raise issues or concerns related to the design or functionality.
- Community members express concerns over the availability or status of features or updates.

27.
Concepts: community feedback, highlighting usability improvements
- Users providing feedback and suggestions to improve the product.
- Community members provide feedback and suggestions on improving system usability.

28.
Concepts: discussing product improvements, discussing feature and component adjustments
- Community members discuss and express opinions on planned improvements or enhancements to the product and its features.
- Community members discuss the need for adjustments to features or functionalities and component properties.

29.
Concepts: seeking information, engaging in community queries and responses
- Community members ask for resources, information, or clarification about various topics.
- Community members ask questions and respond to each other’s comments or queries.

30.
Concepts: community need, justifying feature requests
- Users express a need for specific functionalities that would benefit the community.
- Community members request specific features or functionalities and explain their reasons for these requests.

31.
Concepts: community resource, requesting resources and documentation
- Discussing or requesting shared community resources like manuals or guides.
- Community members request resources, manuals, or documentation and justify their requests.

32.
Concepts: making technical inquiries, offering and seeking support
- Community members ask technical questions about using or finding resources for the software.
- Community members offer assistance and indicate the need for support and guidance in using the software.

33.
Concepts: requesting software access, inquiring about downloads
- Community members ask how to access specific versions of the software.
- Community members provide information on where to download the software and inquire about the process.

34.
Concepts: inquiring about the pc version, inquiring about cross-platform usage
- Community members ask for help and inquire specifically about the PC version of the software.
- Community members inquire about using the software across different platforms and its compatibility.

35.
Concepts: apologizing for timing issues, apologizing for inconveniences
- Apologize for any inconvenience caused by the timing of communications.
- Apologize for any interruptions or inconveniences caused to users.

36.
Concepts: information providing, responding to user inquiries
- Responses that provide answers or resources to users' questions.
- Respond to user inquiries with specific advice or information.

37.
Concepts: elaborating answers, encouraging elaboration
- Elaborate and provide detailed instructions or criteria to clarify answers.
- Encouraging users to provide more detailed information or feedback.

38.
Concepts: following up on user needs, seeking clarification on user requests
- Designers inquire about user experiences and follow up on requests.
- Designers seek clarifications and ask follow-up questions about user requests.

39.
Concepts: technical detail interest, making detailed technical requests
- Users expressing interest in specific technical details or versions of the software.
- Users specify technical details or make detailed feature requests.

40.
Concepts: discussing touch screen functionality, considering on-screen keyboard functionality
- Discuss and inform about touch screen functionalities.
- Discuss the need and functionality of on-screen keyboards for touch devices.

41.
Concepts: explaining software features, explaining technical artifacts
- Explain functionalities and details of simulation features in the software.
- Explaining the technical aspects or functionalities of software artifacts.
===
---
Definitions for each code (41 in total):
1.
Concepts: appreciating feedback, prioritizing and incorporating feedback
Relationship: Designers acknowledge and value user feedback, then plan its incorporation.
Criteria: Designers recognize and appreciate user feedback, discussing how to prioritize and implement it in development plans.
Phrase: Prioritizing and incorporating feedback

2.
Concepts: inviting user participation, inviting ongoing user participation
Relationship: Users are invited to participate in both the immediate and future development processes.
Criteria: Designers invite users to contribute their opinions and participate in the current and future development process.
Phrase: Inviting user participation

3.
Concepts: development timeline, outlining release plans
Relationship: Providing details about both the development timeline and release plans.
Criteria: Designers share information about the timeline and the release plans for updates.
Phrase: Outlining release plans

4.
Concepts: discussing future development plans, announcing and discussing development plans
Relationship: Announcing and discussing future development plans in detail.
Criteria: Designers announce and discuss future development plans and feature implementations.
Phrase: Announcing and discussing development plans

5.
Concepts: share potential future direction, indicating potential future developments
Relationship: Sharing and hinting at possible future directions and developments.
Criteria: Designers share and suggest potential future directions and developments for the app.
Phrase: Indicating potential future developments

6.
Concepts: describing update scope, sharing the magnitude of update
Relationship: Describing the extent and magnitude of updates.
Criteria: Designers describe the scope and magnitude of updates or changes.
Phrase: Describing update scope

7.
Concepts: announcing planned updates, announcing future community consultation
Relationship: Announcing updates alongside plans for future community consultation.
Criteria: Designers announce planned updates and plans to consult the community for feedback.
Phrase: Announcing future community consultation

8.
Concepts: confirming future updates, discussing update schedules
Relationship: Confirming future updates while discussing their schedules.
Criteria: Designers discuss and confirm plans and schedules for future updates.
Phrase: Discussing update schedules

9.
Concepts: answer a concern, providing user reassurance, answer to a question
Relationship: Answering concerns and questions while providing reassurance.
Criteria: Designers respond to user concerns and questions, offering reassurance about upcoming features and improvements.
Phrase: Providing user reassurance

10.
Concepts: discussing feature complexity, compare feature complexities
Relationship: Discussing and comparing the complexities of different features.
Criteria: Designers explain and compare the complexities and time requirements of various features.
Phrase: Discussing feature complexity

11.
Concepts: clarifying development focus, outlining development goals
Relationship: Clarifying the focus and goals of development efforts.
Criteria: Designers clarify the current focus and outline the goals of development efforts.
Phrase: Clarifying development focus

12.
Concepts: justifying future plans, justify development decisions
Relationship: Providing justifications for future plans and decisions.
Criteria: Designers provide reasons and explanations for future plans and development decisions.
Phrase: Justifying future plans

13.
Concepts: justifying design choices, explaining design philosophy
Relationship: Justifying and explaining the rationale behind design choices and philosophies.
Criteria: Designers explain the rationale and principles guiding their design choices.
Phrase: Explaining design philosophy

14.
Concepts: share information, facilitating knowledge sharing
Relationship: Sharing information to facilitate collaborative learning.
Criteria: Participants share information and resources to solve problems and facilitate collaborative learning.
Phrase: Facilitating knowledge sharing

15.
Concepts: sharing resources, suggest group sharing
Relationship: Sharing resources and encouraging group sharing.
Criteria: Community members share resources and suggest or encourage group sharing within the community.
Phrase: Suggesting group sharing

16.
Concepts: confirming agreement, confirming understanding
Relationship: Confirming agreement and understanding in discussions.
Criteria: Community members confirm or express agreement and understanding regarding ideas and conversations.
Phrase: Confirming understanding

17.
Concepts: recognizing expertise, acknowledging community expertise
Relationship: Recognizing and acknowledging expertise within the community.
Criteria: Community members respect and acknowledge the expertise within the community before making requests.
Phrase: Acknowledging community expertise

18.
Concepts: positive interaction, reciprocating greetings
Relationship: Positive interactions through reciprocating greetings.
Criteria: Community members engage in positive interactions by reciprocating greetings and affirming comments.
Phrase: Reciprocating greetings

19.
Concepts: community gratitude, acknowledging help and resources
Relationship: Expressing gratitude and acknowledging help and resources.
Criteria: Community members express gratitude and acknowledge assistance and resources provided by the community.
Phrase: Acknowledging help and resources

20.
Concepts: acknowledging points, responding positively
Relationship: Affirming points and responding positively.
Criteria: Community members affirm points and respond positively to statements and information shared.
Phrase: Responding positively

21.
Concepts: sharing professional background, inquiring about teaching background
Relationship: Sharing and inquiring about professional and teaching backgrounds.
Criteria: Community members share details about their professional and teaching backgrounds and inquire about others'.
Phrase: Inquiring about teaching background

22.
Concepts: mentioning school needs, providing educational context
Relationship: Mentioning school needs while providing educational context.
Criteria: Community members discuss their school's technology needs and provide educational context.
Phrase: Providing educational context

23.
Concepts: discussing technical limitations, explaining platform limitations
Relationship: Discussing and explaining technical and platform limitations.
Criteria: Community members discuss and explain the technical and platform limitations of the software.
Phrase: Explaining platform limitations

24.
Concepts: discussing system compatibility, confirming and suggesting compatibility checks
Relationship: Discussing compatibility and suggesting checks.
Criteria: Community members discuss system compatibility, confirm software compatibility, and suggest checking compatibility.
Phrase: Confirming compatibility checks

25.
Concepts: mentioning technical issues, highlighting outdated technology
Relationship: Mentioning technical issues and outdated technology.
Criteria: Community members mention technical issues and highlight the use of outdated technology.
Phrase: Highlighting outdated technology

26.
Concepts: raise related issue, raising feature concerns
Relationship: Raising related issues and concerns about features.
Criteria: Designers and community members raise issues and concerns related to features and functionality.
Phrase: Raising feature concerns

27.
Concepts: community feedback, highlighting usability improvements
Relationship: Providing feedback to highlight usability improvements.
Criteria: Community members provide feedback and suggestions to improve system usability.
Phrase: Highlighting usability improvements

28.
Concepts: discussing product improvements, discussing feature and component adjustments
Relationship: Discussing product improvements and feature adjustments.
Criteria: Community members discuss planned product improvements and the need for feature and component adjustments.
Phrase: Discussing product improvements

29.
Concepts: seeking information, engaging in community queries and responses
Relationship: Seeking information through queries and responses within the community.
Criteria: Community members ask for information and engage in queries and responses.
Phrase: Engaging in community queries

30.
Concepts: community need, justifying feature requests
Relationship: Expressing community needs and justifying feature requests.
Criteria: Community members express needs for specific functionalities and justify their feature requests.
Phrase: Justifying feature requests

31.
Concepts: community resource, requesting resources and documentation
Relationship: Discussing and requesting community resources and documentation.
Criteria: Community members discuss and request shared resources, manuals, and documentation.
Phrase: Requesting resources and documentation

32.
Concepts: making technical inquiries, offering and seeking support
Relationship: Making technical inquiries while offering and seeking support.
Criteria: Community members ask technical questions and offer or seek support and guidance.
Phrase: Making technical inquiries

33.
Concepts: requesting software access, inquiring about downloads
Relationship: Requesting access and inquiring about download processes.
Criteria: Community members ask about accessing specific software versions and inquire about the download process.
Phrase: Inquiring about downloads

34.
Concepts: inquiring about the pc version, inquiring about cross-platform usage
Relationship: Inquiring about the PC version and cross-platform usage.
Criteria: Community members inquire about the PC version and the software's cross-platform usage and compatibility.
Phrase: Inquiring about cross-platform usage

35.
Concepts: apologizing for timing issues, apologizing for inconveniences
Relationship: Apologizing for timing and other inconveniences.
Criteria: Community members apologize for timing issues and any inconveniences caused.
Phrase: Apologizing for inconveniences

36.
Concepts: information providing, responding to user inquiries
Relationship: Providing information in response to user inquiries.
Criteria: Community members respond to user inquiries with specific advice and information.
Phrase: Responding to user inquiries

37.
Concepts: elaborating answers, encouraging elaboration
Relationship: Elaborating on answers and encouraging further elaboration.
Criteria: Community members provide detailed answers and encourage further elaboration.
Phrase: Encouraging elaboration

38.
Concepts: following up on user needs, seeking clarification on user requests
Relationship: Following up and seeking clarification on user needs and requests.
Criteria: Designers follow up on user needs and seek clarification on their requests.
Phrase: Seeking clarification on user requests

39.
Concepts: technical detail interest, making detailed technical requests
Relationship: Expressing interest and making requests for detailed technical information.
Criteria: Users express interest in specific technical details and make detailed feature requests.
Phrase: Making detailed technical requests

40.
Concepts: discussing touch screen functionality, considering on-screen keyboard functionality
Relationship: Discussing touch screen and on-screen keyboard functionalities.
Criteria: Community members discuss touch screen functionalities and the need for on-screen keyboard functionality.
Phrase: Considering on-screen keyboard functionality

41.
Concepts: explaining software features, explaining technical artifacts
Relationship: Explaining software features and technical details.
Criteria: Designers explain the functionalities and technical aspects of software features and artifacts.
Phrase: Explaining software features
---