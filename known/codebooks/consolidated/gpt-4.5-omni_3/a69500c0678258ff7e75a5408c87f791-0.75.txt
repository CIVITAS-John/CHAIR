You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (47 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
47. 
Concepts: {Repeat the input 47}
Relationship: {What is logical relationship between concepts in code 47, or N/A if not applicable}
Criteria: {Who did what, and how for code 47}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: planning feature development, outlining development priorities
- Designers plan and outline a roadmap for developing and prioritizing future features.
- Designers explain the current focus and outline the priorities for the development of the project.

2.
Concepts: discussing feature details, sharing information about feature development, discussing ongoing research
- Designers discuss the details and ongoing optimization efforts for specific features.
- Designers communicate and share information about ongoing work and development activities.
- Designers discuss ongoing research and development efforts related to the project.

3.
Concepts: providing rationale, providing development rationale
- Designers explain the rationale behind gathering opinions or making decisions.
- Designers explain the rationale behind specific design and development decisions.

4.
Concepts: discussing input methods, discussing design aspects
- Designers discuss and suggest specific input methods for the software.
- Designers discuss various aspects of the software's design, including visual, technical, and usability considerations.

5.
Concepts: hardware limitations consideration, analyzing compatibility limitations
- Considering hardware limitations and suggesting features to address them.
- Designers analyze and acknowledge compatibility limitations and suggest potential solutions.

6.
Concepts: explaining system limitations, highlighting technical constraints
- Users or designers explain the limitations of current versions, proposed solutions, or systems.
- Instances where limitations or constraints of the software are highlighted or mentioned.

7.
Concepts: platform specific update, providing platform information
- Mentioning updates specific to platform versions (e.g., iOS, Android, PC).
- Designer communicates information specific to a platform, such as PC or iOS.

8.
Concepts: assuring compatibility, confirming compatibility requirements, considering technical requirements
- Designers assure users about compatibility and provide system requirements information.
- Designers confirm and specify the software's compatibility requirements and solutions.
- Designers provide specific technical conditions and consider requirements for using the software.

9.
Concepts: speculate on compatibility, discussing system compatibility
- A designer speculates about the compatibility of the software with certain systems.
- Users ask and designers discuss the software's compatibility with various systems and platforms.

10.
Concepts: providing practical advice, providing usage instructions
- Designers share practical advice or workarounds for using the software.
- Designers provide tips, guidance, and instructions on using specific features of the software.

11.
Concepts: educational benefits detail, explaining feature importance
- A designer outlines the educational benefits of certain features.
- Designers give specific examples and explain the importance of certain features.

12.
Concepts: explaining functionalities, discussing component functionality
- Designers provide examples and detailed explanations of specific software functionalities.
- Designers explain and discuss the functionality of various software components.

13.
Concepts: sharing updates, information dissemination
- Individuals notify the community about updates or make general announcements.
- The act of sharing information, resources, or updates with the community.

14.
Concepts: software updates and downloads, providing download instructions
- Someone informs about software updates or provides download links.
- Designers provide updates and instructions, including how to download the software.

15.
Concepts: describing update specifics, providing technical information
- Designers clarify and describe specific details and changes in software versions.
- Designers provide specific technical details, updates, and information about the software.

16.
Concepts: inquiring about updates, expressing anticipation for updates
- Users inquire about the status and timing of recent or upcoming updates.
- Users express anticipation or eagerness for pending updates.

17.
Concepts: requesting guidance, requesting user manual, seeking user assistance
- Users request guidance or instructions on how to use the software.
- Users ask for and express the need for user manuals or documentation.
- Users seek help on how to perform specific actions, such as downloading or using a feature.

18.
Concepts: making technical inquiries, inquiring about software usage
- Users ask technical questions related to the use and updates of the platform.
- Users ask questions to gain information and resources related to the software's functionalities and usage.

19.
Concepts: access inquiry, inquiring about software downloads
- A user asks about access to a specific version of the software.
- Users ask for clarification about platform compatibility and where to download different software versions.

20.
Concepts: showing respect to experts, requesting detailed features
- Users show respect to experts, often while making specific feature requests.
- Users make detailed feature requests and acknowledge designers' expertise.

21.
Concepts: collecting input for planning, gathering pre-development feedback
- Individuals gather opinions to inform future project phases and planning.
- Designers plan to gather user opinions before starting new tasks or subject areas.

22.
Concepts: personal interest, expressing personal interest
- When sharing personal interests that may relate to the community or project.
- Designers express personal interest and engage with the community on relevant subjects.

23.
Concepts: involving the community, encouraging community involvement
- Designers offer co-designing opportunities and acknowledge community needs in discussions.
- Designers encourage and invite community members to participate and provide feedback.

24.
Concepts: sharing user experience, shared experiences and support
- Users provide feedback on their experience and compare the software with other applications.
- Users and designers sharing experiences and supporting each other in using and improving the software.

25.
Concepts: providing educational context, discussing software context of use
- Users and designers discuss the educational context and technological environment of the software's use.
- Instances where users describe the specific contexts in which they use the software and discuss its usability.

26.
Concepts: asking about user needs, inquiring about user roles
- Designers ask questions to understand user needs and preferences.
- Designers inquire about users' roles and teaching backgrounds to tailor assistance.

27.
Concepts: addressing user needs, highlighting usability need
- Designers discuss and explain the necessity of features to address user needs.
- Designers state and highlight specific user needs and usability requirements.

28.
Concepts: engaging in discussions, seeking clarification and making inquiries
- Designers and users engage in dialogues and follow-up discussions to clarify details.
- Designers or users seek clarification or input about specific topics or design decisions.

29.
Concepts: show engagement, engaging politely
- Designers showing active listening or agreement during interactions.
- Users and designers engage in positive and polite interactions with each other.

30.
Concepts: asking and addressing, query and response
- Designers or users ask questions and address specific users with comments.
- Instances where users ask questions and receive answers from designers or other community members.

31.
Concepts: suggesting alternatives, suggesting alternative solutions
- Designers suggest and show openness to alternative solutions for improving usability.
- Someone suggests or seeks alternative solutions or options.

32.
Concepts: providing prompt support, responding directly and thoroughly
- Designers quickly respond with solutions and follow-up questions related to design support.
- Designers provide direct and detailed answers to user queries.

33.
Concepts: involving users in design, gathering user feedback
- Designers involve users in the design process through feedback or testing.
- Designers gather user feedback or input about their experiences and encountered issues.

34.
Concepts: raising concerns, expressing user frustration
- Users express concerns and raise issues related to the design or functionality of the software, including new features.
- Users express frustration and dissatisfaction with the current limitations and technical issues of the software.

35.
Concepts: addressing concerns, responding to feature requests
- Individuals address and resolve user concerns or issues.
- Individuals respond to feature requests with information or status updates.

36.
Concepts: explaining technical issues, technical challenges in education
- Users mention and explain technical issues related to their school's computer systems.
- When users discuss various technical and infrastructural issues faced in educational settings, such as outdated systems or network restrictions.

37.
Concepts: praising craftsmanship, appreciation of designers
- Users acknowledge and praise the dedication to high-quality craftsmanship.
- Expressions of appreciation towards the designers' efforts and craftsmanship.

38.
Concepts: acknowledge response, appreciating feedback
- Acknowledging and appreciating the support or feedback from users.
- Individuals show appreciation for and acknowledge the feedback received.

39.
Concepts: greeting the community, greeting and welcoming members
- Someone greets the community or introduces a topic.
- Users or designers greet and welcome members in the community.

40.
Concepts: confirming identity, confirming teacher roles
- Users confirm their professional identities or roles within the community.
- Users confirm their roles as teachers within the community.

41.
Concepts: sharing professional background, inquiring about professional background
- Users share their professional background to establish context within the community.
- Individuals inquire about the professional background of users.

42.
Concepts: providing context, exchanging context
- Individuals provide context or background for their questions or statements.
- Individuals seek and provide background information to give context to their participation.

43.
Concepts: inviting further engagement, encourage future discussion or questions
- Designers invite users to ask more questions and respond to subject expansion inquiries.
- Encouraging users to continue asking questions or contributing to discussions.

44.
Concepts: making inquiries, requesting clarification
- Users ask questions to gain information or clarification.
- Users ask for confirmation and clarification about specific details or requests.

45.
Concepts: self-resolution, practicing self-help
- When users solve their problems independently, often by finding resources.
- Users find useful information themselves and thank the community.

46.
Concepts: discussing future plans and directions
- Discussions are held about potential future developments and directions for the product.
- Individuals discuss and share plans for future development with the community.

47.
Concepts: discussing future updates
- Designers outline and discuss plans, timelines, and potential developments for future updates and features.
- Designers mention potential future developments of a chemistry app or related experiments.
===
---
Definitions for each code (47 in total):
1.
Concepts: planning feature development, outlining development priorities
Relationship: Both concepts relate to the process of setting and communicating future development goals.
Criteria: Designers plan and outline a roadmap for developing and prioritizing future features.
Phrase: Outlining development priorities

2.
Concepts: discussing feature details, sharing information about feature development, discussing ongoing research
Relationship: All concepts involve the communication of details and progress related to feature development and research.
Criteria: Designers discuss the details, share information, and communicate ongoing research efforts related to feature development.
Phrase: Discussing feature development details

3.
Concepts: providing rationale, providing development rationale
Relationship: Both concepts focus on explaining the reasoning behind decisions or actions.
Criteria: Designers explain the rationale behind gathering opinions or making specific design and development decisions.
Phrase: Providing development rationale

4.
Concepts: discussing input methods, discussing design aspects
Relationship: Both concepts pertain to discussions about various elements of the software design.
Criteria: Designers discuss and suggest specific input methods and various aspects of the software's design.
Phrase: Discussing design aspects

5.
Concepts: hardware limitations consideration, analyzing compatibility limitations
Relationship: Both concepts involve recognizing and addressing hardware and compatibility limitations.
Criteria: Designers consider hardware limitations and analyze compatibility issues to suggest potential solutions.
Phrase: Analyzing compatibility limitations

6.
Concepts: explaining system limitations, highlighting technical constraints
Relationship: Both concepts focus on communicating the limitations and constraints of the software.
Criteria: Users or designers explain and highlight the limitations or constraints of the current system or proposed solutions.
Phrase: Highlighting technical constraints

7.
Concepts: platform specific update, providing platform information
Relationship: Both concepts involve communicating updates and information specific to particular platforms.
Criteria: Designers mention updates and provide information specific to different platform versions.
Phrase: Providing platform-specific updates

8.
Concepts: assuring compatibility, confirming compatibility requirements, considering technical requirements
Relationship: All concepts relate to ensuring and specifying the compatibility and technical requirements of the software.
Criteria: Designers assure users about compatibility, confirm requirements, and consider technical conditions for using the software.
Phrase: Confirming compatibility requirements

9.
Concepts: speculate on compatibility, discussing system compatibility
Relationship: Both concepts involve discussions about the software's compatibility with various systems.
Criteria: Designers speculate and discuss the software's compatibility with different systems and platforms.
Phrase: Discussing system compatibility

10.
Concepts: providing practical advice, providing usage instructions
Relationship: Both concepts involve offering guidance on how to use the software effectively.
Criteria: Designers provide practical advice, workarounds, and usage instructions for the software.
Phrase: Providing usage instructions

11.
Concepts: educational benefits detail, explaining feature importance
Relationship: Both concepts involve explaining the value and importance of software features, especially in an educational context.
Criteria: Designers outline the educational benefits and explain the importance of specific features.
Phrase: Explaining feature importance

12.
Concepts: explaining functionalities, discussing component functionality
Relationship: Both concepts involve providing detailed explanations of the software's functionalities.
Criteria: Designers provide examples and discuss the functionalities of various software components.
Phrase: Explaining software functionalities

13.
Concepts: sharing updates, information dissemination
Relationship: Both concepts involve communicating updates and information to the community.
Criteria: Individuals notify the community about updates and share relevant information or resources.
Phrase: Sharing updates

14.
Concepts: software updates and downloads, providing download instructions
Relationship: Both concepts involve informing users about updates and providing instructions on how to download the software.
Criteria: Designers inform about software updates and provide download links and instructions.
Phrase: Providing download instructions

15.
Concepts: describing update specifics, providing technical information
Relationship: Both concepts involve detailing the specific changes and technical aspects of software updates.
Criteria: Designers clarify and describe specific details and technical information about software updates.
Phrase: Describing update specifics

16.
Concepts: inquiring about updates, expressing anticipation for updates
Relationship: Both concepts relate to users seeking information and expressing eagerness about software updates.
Criteria: Users inquire about and express anticipation for recent or upcoming updates.
Phrase: Expressing anticipation for updates

17.
Concepts: requesting guidance, requesting user manual, seeking user assistance
Relationship: All concepts involve users seeking help and guidance on how to use the software.
Criteria: Users request guidance, user manuals, and assistance for using the software.
Phrase: Requesting user assistance

18.
Concepts: making technical inquiries, inquiring about software usage
Relationship: Both concepts involve users asking technical questions related to the software's use and functionalities.
Criteria: Users ask technical questions to gain information on the software's usage and functionalities.
Phrase: Making technical inquiries

19.
Concepts: access inquiry, inquiring about software downloads
Relationship: Both concepts involve users seeking information about accessing and downloading the software.
Criteria: Users inquire about access to specific software versions and where to download them.
Phrase: Inquiring about software downloads

20.
Concepts: showing respect to experts, requesting detailed features
Relationship: Both concepts involve users showing respect while making specific feature requests.
Criteria: Users show respect to experts and make detailed feature requests.
Phrase: Requesting detailed features

21.
Concepts: collecting input for planning, gathering pre-development feedback
Relationship: Both concepts involve gathering user input to inform future project phases and planning.
Criteria: Individuals collect opinions and gather feedback before starting new development tasks.
Phrase: Gathering pre-development feedback

22.
Concepts: personal interest, expressing personal interest
Relationship: Both concepts involve sharing and expressing personal interests related to the community or project.
Criteria: Designers share and express personal interests relevant to the community.
Phrase: Expressing personal interest

23.
Concepts: involving the community, encouraging community involvement
Relationship: Both concepts involve inviting and encouraging community participation and feedback.
Criteria: Designers involve the community and encourage members to participate and provide feedback.
Phrase: Encouraging community involvement

24.
Concepts: sharing user experience, shared experiences and support
Relationship: Both concepts involve users and designers sharing their experiences and supporting each other.
Criteria: Users and designers share their experiences and support each other in using and improving the software.
Phrase: Sharing user experiences

25.
Concepts: providing educational context, discussing software context of use
Relationship: Both concepts involve discussing the educational and technological context of the software's use.
Criteria: Users and designers discuss the educational context and specific environments where the software is used.
Phrase: Discussing educational context

26.
Concepts: asking about user needs, inquiring about user roles
Relationship: Both concepts involve designers seeking to understand user needs and roles to tailor assistance.
Criteria: Designers ask questions to understand user needs and inquire about users' roles and backgrounds.
Phrase: Inquiring about user needs

27.
Concepts: addressing user needs, highlighting usability need
Relationship: Both concepts focus on addressing and highlighting specific user needs and usability requirements.
Criteria: Designers discuss and highlight the necessity of features to address user needs and usability.
Phrase: Highlighting usability needs

28.
Concepts: engaging in discussions, seeking clarification and making inquiries
Relationship: Both concepts involve active engagement and seeking clarification in discussions.
Criteria: Designers and users engage in dialogues to seek clarification and make inquiries about specific topics.
Phrase: Engaging in discussions

29.
Concepts: show engagement, engaging politely
Relationship: Both concepts involve polite and positive engagement between users and designers.
Criteria: Users and designers engage politely and show active listening or agreement during interactions.
Phrase: Engaging politely

30.
Concepts: asking and addressing, query and response
Relationship: Both concepts involve the process of asking questions and receiving answers.
Criteria: Designers or users ask questions and address specific users with comments or responses.
Phrase: Query and response

31.
Concepts: suggesting alternatives, suggesting alternative solutions
Relationship: Both concepts involve proposing different solutions or options for improvement.
Criteria: Designers suggest and show openness to alternative solutions for improving usability.
Phrase: Suggesting alternative solutions

32.
Concepts: providing prompt support, responding directly and thoroughly
Relationship: Both concepts involve offering quick and thorough responses to user queries.
Criteria: Designers quickly respond with solutions and provide direct, detailed answers to user queries.
Phrase: Providing prompt support

33.
Concepts: involving users in design, gathering user feedback
Relationship: Both concepts involve engaging users in the design process through feedback or testing.
Criteria: Designers involve users in the design process and gather their feedback or input.
Phrase: Gathering user feedback

34.
Concepts: raising concerns, expressing user frustration
Relationship: Both concepts involve users expressing concerns and frustrations related to the software.
Criteria: Users express concerns and frustration with the design or functionality of the software, including new features.
Phrase: Expressing user frustration

35.
Concepts: addressing concerns, responding to feature requests
Relationship: Both concepts involve responding to user concerns and feature requests.
Criteria: Individuals address and resolve user concerns and respond to feature requests with information or updates.
Phrase: Addressing concerns

36.
Concepts: explaining technical issues, technical challenges in education
Relationship: Both concepts involve discussing technical issues and challenges in educational settings.
Criteria: Users mention and explain technical issues related to their school's computer systems and educational challenges.
Phrase: Explaining technical issues

37.
Concepts: praising craftsmanship, appreciation of designers
Relationship: Both concepts involve users expressing appreciation for the designers' efforts and craftsmanship.
Criteria: Users acknowledge and praise the dedication and high-quality craftsmanship of the designers.
Phrase: Praising craftsmanship

38.
Concepts: acknowledge response, appreciating feedback
Relationship: Both concepts involve showing appreciation for responses and feedback received.
Criteria: Individuals acknowledge and appreciate the support or feedback from users.
Phrase: Appreciating feedback

39.
Concepts: greeting the community, greeting and welcoming members
Relationship: Both concepts involve greeting and welcoming members of the community.
Criteria: Users or designers greet and welcome members of the community or introduce topics.
Phrase: Greeting the community

40.
Concepts: confirming identity, confirming teacher roles
Relationship: Both concepts involve users confirming their professional identities and roles.
Criteria: Users confirm their professional identities or roles within the community, such as being teachers.
Phrase: Confirming teacher roles

41.
Concepts: sharing professional background, inquiring about professional background
Relationship: Both concepts involve discussing and inquiring about professional backgrounds.
Criteria: Users share their professional background and inquire about others' backgrounds to establish context.
Phrase: Sharing professional background

42.
Concepts: providing context, exchanging context
Relationship: Both concepts involve providing and seeking context for participation and statements.
Criteria: Individuals provide and seek context or background information for their questions or statements.
Phrase: Providing context

43.
Concepts: inviting further engagement, encourage future discussion or questions
Relationship: Both concepts involve encouraging ongoing participation and discussion.
Criteria: Designers invite users to ask more questions and encourage future engagement and discussions.
Phrase: Encouraging future discussions

44.
Concepts: making inquiries, requesting clarification
Relationship: Both concepts involve users seeking information or clarification about specific details.
Criteria: Users ask questions and request clarification about specific details or requests.
Phrase: Requesting clarification

45.
Concepts: self-resolution, practicing self-help
Relationship: Both concepts involve users independently solving their problems and finding useful information.
Criteria: Users solve their problems independently and thank the community for the resources.
Phrase: Practicing self-help

46.
Concepts: discussing future plans and directions
Relationship: Both concepts involve discussing potential future developments and directions for the product.
Criteria: Individuals discuss and share plans for future development with the community.
Phrase: Discussing future plans

47.
Concepts: discussing future updates
Relationship: Both concepts involve discussing plans and potential developments for future software updates.
Criteria: Designers outline and discuss plans, timelines, and potential developments for future updates and features.
Phrase: Discussing future updates
---