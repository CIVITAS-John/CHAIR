You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (19 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
19. 
Concepts: {Repeat the input 19}
Relationship: {What is logical relationship between concepts in code 19, or N/A if not applicable}
Criteria: {Who did what, and how for code 19}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: resolution, confirm understanding
- User acknowledges receipt or understanding of shared resources.
- Users acknowledge understanding and express agreement concisely.

2.
Concepts: establish credibility, share teaching experiences
- User shares their teaching experience to establish expertise.
- Users provide insights into their teaching experiences and identities.

3.
Concepts: user reactions, use emojis for expression
- Instances where users express their reactions to updates or announcements, often using emojis.
- Users express feelings and reactions through emotive language and emojis.

4.
Concepts: accept user suggestions, suggest usability enhancements
- Designers accept and propose enhancements based on user suggestions.
- Users recommend features and suggest changes to enhance usability.

5.
Concepts: make user inquiries, request user assistance
- Users ask for specific information or help regarding the use or features of Physics Lab.
- Users seek knowledge, materials, and documentation for better understanding.

6.
Concepts: solicit user feedback, acknowledge user feedback
- Designers seek and encourage user feedback while expressing gratitude.
- Designers acknowledge and validate user perspectives.

7.
Concepts: maintain engagement, foster open communication
- Designers respond positively to encourage continued dialogue.
- Designers encourage input and discussion, inviting detailed feedback.

8.
Concepts: engage in user interaction, invite and involve user participation
- The designer engages in a dialogue with users, prompting them to interact.
- Designers invite users to contribute and actively involve them in the development process.

9.
Concepts: ensure accuracy, request clarification
- Developer seeks clarification on a specific aspect of the conversation.
- Participants engage in discussions that involve clarifying previous statements.

10.
Concepts: further question, provide clarifications
- Designers seek clarification or further details regarding previous statements or suggestions.
- Designers ask follow-up questions and provide clarifications regarding user requests.

11.
Concepts: engage in design discussions, share design efficiency insights
- Designers share insights regarding technical aspects and user experiences.
- Designers share thoughts and approaches to improve design efficiency.

12.
Concepts: share updates and user tips, share app development announcements
- Designers share detailed information about new features and updates.
- Designers share important information about app development and release details with the community.

13.
Concepts: communicating update timelines, share and communicate development plans
- Designers confirm upcoming software updates and share detailed timelines for those updates.
- Designers outline and share plans for future software development and communicate release schedules.

14.
Concepts: share knowledge, inform about feature development
- Designers share factual information or knowledge with users about software features or requirements.
- Designers inform users about ongoing research and respond to feature requests.

15.
Concepts: confirm future implementations, acknowledgment and implementation
- Designers confirm future feature implementations and outline plans for enhancements.
- Designers acknowledging user feedback and discussing plans to implement suggested features.

16.
Concepts: explain design rationale, provide rationale
- Designers explain the rationale and underlying principles guiding the design.
- Users and designers provide explanations for certain design choices or operational limitations based on practical considerations.

17.
Concepts: provide feature guidance, clarify software features
- A designer provides detailed instructions and features of the software.
- Designers clarify and introduce specific functions of the software.

18.
Concepts: give usage instructions, provide instructions for proper software operation
- A designer provides instructions for using a component of the software.
- Designers provide instructions and updates to ensure users operate the software correctly.

19.
Concepts: confirm system compatibility, provide compatibility advice
- Designers consider and confirm compatibility issues for the software.
- Designers provide advice on compatibility and acknowledge software limitations.
===
---
Definitions for each code (19 in total):
1.
Concepts: resolution, confirm understanding  
Relationship: Users acknowledge receipt or understanding of shared resources, which confirms their comprehension.  
Criteria: Users acknowledge understanding and express agreement concisely after receiving information.  
Phrase: Confirm understanding.  

2.
Concepts: establish credibility, share teaching experiences  
Relationship: Sharing teaching experiences helps users establish their credibility and expertise in the community.  
Criteria: Users share their teaching experiences to demonstrate their expertise and insights.  
Phrase: Establish credibility through experience.  

3.
Concepts: user reactions, use emojis for expression  
Relationship: Users express their feelings through emojis, which serves as a reaction to community updates.  
Criteria: Users express their reactions to updates or announcements using emotive language and emojis.  
Phrase: Express reactions with emojis.  

4.
Concepts: accept user suggestions, suggest usability enhancements  
Relationship: Designers' acceptance of user suggestions leads to proposed enhancements for improved usability.  
Criteria: Designers accept and propose usability enhancements based on user recommendations.  
Phrase: Enhance usability through suggestions.  

5.
Concepts: make user inquiries, request user assistance  
Relationship: Users' inquiries often involve seeking assistance for better understanding of features.  
Criteria: Users ask for specific information or help regarding the use or features of Physics Lab.  
Phrase: Request assistance for inquiries.  

6.
Concepts: solicit user feedback, acknowledge user feedback  
Relationship: Soliciting feedback encourages users to share their perspectives, which designers then acknowledge.  
Criteria: Designers seek and express gratitude for user feedback while validating their perspectives.  
Phrase: Acknowledge and solicit feedback.  

7.
Concepts: maintain engagement, foster open communication  
Relationship: Positive responses from designers help maintain user engagement and encourage open dialogue.  
Criteria: Designers respond positively to encourage ongoing dialogue and detailed feedback.  
Phrase: Foster open communication.  

8.
Concepts: engage in user interaction, invite and involve user participation  
Relationship: Engaging users prompts them to participate actively in the development process.  
Criteria: Designers invite users to contribute and engage in dialogue.  
Phrase: Invite user participation.  

9.
Concepts: ensure accuracy, request clarification  
Relationship: Seeking clarification helps ensure the accuracy of discussions and shared information.  
Criteria: Participants engage in discussions that involve clarifying previous statements.  
Phrase: Request clarification for accuracy.  

10.
Concepts: further question, provide clarifications  
Relationship: Follow-up questions help clarify previous discussions and enhance understanding.  
Criteria: Designers seek clarification or further details regarding user requests.  
Phrase: Provide clarifications through questioning.  

11.
Concepts: engage in design discussions, share design efficiency insights  
Relationship: Sharing insights during design discussions contributes to improving design efficiency.  
Criteria: Designers share insights on technical aspects and user experiences.  
Phrase: Share insights on design efficiency.  

12.
Concepts: share updates and user tips, share app development announcements  
Relationship: Sharing updates and tips keeps users informed about new features and development.  
Criteria: Designers share detailed information about new features and app development announcements.  
Phrase: Share updates and announcements.  

13.
Concepts: communicating update timelines, share and communicate development plans  
Relationship: Confirming timelines helps users understand the schedule for upcoming updates and plans.  
Criteria: Designers confirm upcoming software updates and outline future development plans.  
Phrase: Communicate update timelines.  

14.
Concepts: share knowledge, inform about feature development  
Relationship: Sharing knowledge about features keeps users informed about ongoing developments.  
Criteria: Designers share information about software features and respond to user requests.  
Phrase: Inform about feature development.  

15.
Concepts: confirm future implementations, acknowledgment and implementation  
Relationship: Confirming future implementations reflects acknowledgment of user feedback in the development process.  
Criteria: Designers confirm future feature implementations and discuss enhancement plans.  
Phrase: Confirm future implementations.  

16.
Concepts: explain design rationale, provide rationale  
Relationship: Explaining the rationale behind design choices helps users understand operational limitations.  
Criteria: Designers explain the rationale guiding design and operational decisions.  
Phrase: Explain design rationale.  

17.
Concepts: provide feature guidance, clarify software features  
Relationship: Providing guidance helps clarify specific software functions for users.  
Criteria: Designers provide detailed instructions and clarify software features.  
Phrase: Clarify software features.  

18.
Concepts: give usage instructions, provide instructions for proper software operation  
Relationship: Providing instructions ensures users operate the software correctly and efficiently.  
Criteria: Designers provide instructions for using the software components properly.  
Phrase: Provide usage instructions.  

19.
Concepts: confirm system compatibility, provide compatibility advice  
Relationship: Confirming compatibility helps users understand software limitations and requirements.  
Criteria: Designers confirm compatibility issues and provide advice on software limitations.  
Phrase: Confirm compatibility advice.  
---