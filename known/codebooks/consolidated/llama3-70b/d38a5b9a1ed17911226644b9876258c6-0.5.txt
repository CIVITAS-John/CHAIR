You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (25 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
25. {Repeat the input 25}
Relationship: {The logical relationship between concepts in input 25}
Criteria: {A sentence of consolidated criteria for code 25}
Label: {A consolidated label of code 25}
Category: {2-4 words for code 25}
---
~~~
1. community announcements, community notifications.
- Official communications from community administrators or moderators.
- The code includes making formal announcements or notifications to the community, including updates or new versions of the Physics Lab software.

2. apologies, apology for timing.
- Expressing apology or regret.
- Expresses regret for communication at unconventional hours.

3. thoughtful reflection, reflection on experiences.
- Expression of thought or consideration about an idea or concept.
- Reflecting on past experiences or lessons learned.

4. experience sharing, story sharing.
- Sharing personal teaching experiences.
- Quotes that share personal anecdotes or experiences related to the online community.

5. pedagogical design, pedagogical approach.
- Design choices aimed at enhancing the pedagogical value or learning experience.
- Discussions that relate to the educational or pedagogical aspects of the Physics Lab software.

6. teacher interaction, teacher-admin interaction.
- Identification and interaction involving teachers.
- An interaction between a teacher and an administrator.

7. student, student experience.
- Expressing oneself through non-verbal means, such as emojis.
- Describing student engagement levels or experiences with the software.

8. physics education, physics content.
- Education or learning related to physics
- Relates to specific physics content or subject matter, discussions or requests related to specific physics concepts, concepts, and topics related to physics, or discussion of physics concepts or principles.

9. mechanics experiments, mechanical and optical experiments.
- Requests or discussions about including mechanics experiments or features.
- Requests from the community for the inclusion of dynamic demonstrations and experimental setups related to mechanical waves, mechanical vibrations, and optical phenomena.

10. technical limitations and constraints, technical considerations and limitations.
- Discussion of limitations or constraints in the project or software.
- Discussions by the designer that address technical aspects or limitations of the software.

11. pedagogical constraints, educational constraints.
- Quotes that identify potential constraints or limitations of the software in supporting learning.
- Describes limitations within the educational system that affect how subjects are taught and explored.

12. simplicity, simplicity vs. complexity.
- Suggestions for simplifying complex systems or processes, aims for simplicity or an intuitive design that does not require instructions.
- Discussion points that highlight the balance between making the tool simple for regular use and adding complex features for enhanced functionality.

13. comparison, comparative evaluation.
- Expressions or statements that draw parallels or analogies between concepts, ideas, or practices.
- Comparing the software with other tools or software.

14. development approach, explain development process.
- Discussion of the approach or strategy used in software development.
- Explaining the development process or timeline.

15. prioritization, development prioritization.
- Prioritizing tasks or features based on community feedback.
- Discussing priorities or relative importance of features, content, or platforms, including prioritization of features and development tasks.

16. explaining new features, explanation of upcoming features.
- Explaining or showcasing new features or functionality.
- Explanations or descriptions of upcoming features or functionalities.

17. feature development and planning, feature planning and decision-making.
- Discussions about new features or updates to the platform.
- Discussions on the decision-making process regarding software features.

18. compatibility inquiries, compatibility considerations.
- Inquiries or confirmation about software compatibility with operating systems.
- The designer's consideration of compatibility with different systems.

19. information access, information seeking.
- Relates to accessing or obtaining information or resources.
- Users looking for guidance, information, or answers within the online community.

20. information provision, information dissemination.
- Providing responses or answers to questions or topics.
- How information about software usage or updates is shared within the community.

21. resource access, resource availability.
- Discussing or providing information on accessing resources, features, or information.
- Utilization and availability of resources for the community.

22. technical support, software support.
- Involves queries or inquiries related to technical aspects of the software, and assistance provided to users regarding technical issues or how to access software components.
- Involves requests for user manuals, inquiries about software download, and support within the community, discussions, questions, and inquiries related to accessing, downloading, and using the online physics lab software, as well as statements about the availability and accessibility of the platform.

23. usability consideration, usability factors.
- Identifying and considering issues related to the usability of input methods.
- Quotes mentioning usability issues/challenges with the software, or design aspects aimed at improving usability/user experience.

24. user needs inquiry, user needs.
- Expressing or inquiring about user needs or requirements.
- Statements expressing users' needs or preferences for specific platform features or capabilities.

25. new user inquiries, user inquiries.
- New users seeking information.
- Users inquiring about software or reporting issues.
===
---
Categories: 
* Community Building
* Pedagogy and Learning
* Software Development
* User Experience
* Technical Support
* Resource Management

Definitions for each code:

1. community announcements, community notifications.
Relationship: Inclusion
Criteria: Official communications from community administrators or moderators.
Label: Official Communications
Category: Community Building

2. apologies, apology for timing.
Relationship: Inclusion
Criteria: Expressing apology or regret for communication at unconventional hours.
Label: Apologies
Category: Community Building

3. thoughtful reflection, reflection on experiences.
Relationship: Inclusion
Criteria: Expression of thought or consideration about an idea or concept.
Label: Reflections
Category: Pedagogy and Learning

4. experience sharing, story sharing.
Relationship: Inclusion
Criteria: Sharing personal teaching experiences.
Label: Experience Sharing
Category: Pedagogy and Learning

5. pedagogical design, pedagogical approach.
Relationship: Inclusion
Criteria: Design choices aimed at enhancing the pedagogical value or learning experience.
Label: Pedagogical Design
Category: Pedagogy and Learning

6. teacher interaction, teacher-admin interaction.
Relationship: Inclusion
Criteria: Identification and interaction involving teachers.
Label: Teacher Interaction
Category: Community Building

7. student, student experience.
Relationship: Inclusion
Criteria: Describing student engagement levels or experiences with the software.
Label: Student Experience
Category: Pedagogy and Learning

8. physics education, physics content.
Relationship: Inclusion
Criteria: Education or learning related to physics.
Label: Physics Education
Category: Pedagogy and Learning

9. mechanics experiments, mechanical and optical experiments.
Relationship: Inclusion
Criteria: Requests or discussions about including mechanics experiments or features.
Label: Experiments
Category: Pedagogy and Learning

10. technical limitations and constraints, technical considerations and limitations.
Relationship: Inclusion
Criteria: Discussion of limitations or constraints in the project or software.
Label: Technical Limitations
Category: Software Development

11. pedagogical constraints, educational constraints.
Relationship: Inclusion
Criteria: Quotes that identify potential constraints or limitations of the software in supporting learning.
Label: Pedagogical Constraints
Category: Pedagogy and Learning

12. simplicity, simplicity vs. complexity.
Relationship: Inclusion
Criteria: Suggestions for simplifying complex systems or processes.
Label: Simplicity
Category: User Experience

13. comparison, comparative evaluation.
Relationship: Inclusion
Criteria: Expressions or statements that draw parallels or analogies between concepts, ideas, or practices.
Label: Comparisons
Category: Pedagogy and Learning

14. development approach, explain development process.
Relationship: Inclusion
Criteria: Discussion of the approach or strategy used in software development.
Label: Development Approach
Category: Software Development

15. prioritization, development prioritization.
Relationship: Inclusion
Criteria: Prioritizing tasks or features based on community feedback.
Label: Prioritization
Category: Software Development

16. explaining new features, explanation of upcoming features.
Relationship: Inclusion
Criteria: Explaining or showcasing new features or functionality.
Label: New Features
Category: Software Development

17. feature development and planning, feature planning and decision-making.
Relationship: Inclusion
Criteria: Discussions about new features or updates to the platform.
Label: Feature Development
Category: Software Development

18. compatibility inquiries, compatibility considerations.
Relationship: Inclusion
Criteria: Inquiries or confirmation about software compatibility with operating systems.
Label: Compatibility
Category: Technical Support

19. information access, information seeking.
Relationship: Inclusion
Criteria: Relates to accessing or obtaining information or resources.
Label: Information Access
Category: Resource Management

20. information provision, information dissemination.
Relationship: Inclusion
Criteria: Providing responses or answers to questions or topics.
Label: Information Provision
Category: Resource Management

21. resource access, resource availability.
Relationship: Inclusion
Criteria: Discussing or providing information on accessing resources, features, or information.
Label: Resource Access
Category: Resource Management

22. technical support, software support.
Relationship: Inclusion
Criteria: Involves queries or inquiries related to technical aspects of the software.
Label: Technical Support
Category: Technical Support

23. usability consideration, usability factors.
Relationship: Inclusion
Criteria: Identifying and considering issues related to the usability of input methods.
Label: Usability
Category: User Experience

24. user needs inquiry, user needs.
Relationship: Inclusion
Criteria: Expressing or inquiring about user needs or requirements.
Label: User Needs
Category: User Experience

25. new user inquiries, user inquiries.
Relationship: Inclusion
Criteria: New users seeking information.
Label: User Inquiries
Category: User Experience