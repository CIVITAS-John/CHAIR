You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (50 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
50. 
Concepts: {Repeat the input 50}
Relationship: {What is logical relationship between concepts in code 50, or N/A if not applicable}
Criteria: {Who did what, and how for code 50}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: component update, announcing component updates
- Announces updates or changes to components.
- Designers announce updates to component properties.

2.
Concepts: announcing new releases, announcing software updates
- Designers announce the release of a new feature or software version.
- Designers announce a software update and its details.

3.
Concepts: notifying about new versions, communication of updates
- Designers notify users about the availability of a new version update.
- Instances where designers communicate updates, release schedules, or new features to users.

4.
Concepts: managing release process, planning software release
- Designers discuss the release process and management of software versions.
- Designers communicate plans and timelines for the release of software versions.

5.
Concepts: communicating progress, share development update
- Designers communicate updates, progress, or future plans regarding the software.
- Information shared by designers about the current status, updates, and future plans for the software.

6.
Concepts: providing detailed updates, detailing updates and fixes
- Designers provide detailed technical updates, new features, adjustments, and bug fixes.
- Designers list new features, components, adjustments, and bug fixes in the software.

7.
Concepts: provide version details, detailing version updates
- Designers provide detailed information about the status of a software version.
- Designers provide detailed notes on specific updates or new features.

8.
Concepts: confirming updates, confirming future features
- Designers confirm that an upcoming update or feature will occur.
- Designers confirm that a future feature will be included in updates.

9.
Concepts: planned updates, announcing development plans
- Information shared by designers about upcoming features or updates.
- Designers announce upcoming updates, features, or development plans.

10.
Concepts: previewing updates, explaining upcoming features
- Designers provide a preview of upcoming updates or features.
- Designers introduce and explain features that will be included in future updates.

11.
Concepts: explain limitations, explain current version's limitation
- A designer explains or talks about the limitations of a feature or proposed solution.
- A designer explains the limitations of the current version of the software.

12.
Concepts: explaining design goals, explain design principles
- A designer explains the design goals or principles behind the software.
- A designer explains the principles or philosophy guiding the design and development of the product.

13.
Concepts: outlining future plans, planning future designs, discussing future planning
- Designers outline future development priorities and plans.
- Designers outline plans for future design or feature development.
- Designers discuss future planning and development efforts.

14.
Concepts: discussing improvements, discussing future updates
- Developers discuss improvements or changes to the software's functionality.
- Developers discuss plans for future updates or improvements to the software.

15.
Concepts: promise for future feature, promising feature realization
- Promises made by the designer to implement certain features at a later date.
- Designers assure users that a feature will be realized or perfected in the future.

16.
Concepts: prioritizing development, outline development priorities
- Designers discuss the prioritization of different features or sections to be developed.
- A designer outlines the priorities for development or updates.

17.
Concepts: share user experience, sharing classroom success
- Users share their experiences and the impact of the software on their teaching or learning.
- Users share positive feedback about student engagement and classroom experiences using the software.

18.
Concepts: inquire about software download, inquire about software access
- Users inquire about where to download the software.
- Users inquire about how to access or download a specific version of the software.

19.
Concepts: request usage support, inquire about software usage
- Users request support or instructions on how to use a specific version of the software.
- Users inquire about how to use a specific version of the software and seek instructions.

20.
Concepts: ask a question, make technical inquiry
- Users ask questions about various aspects of the software or its use.
- Instances where users ask technical questions about the software.

21.
Concepts: improvement suggestions, suggest usability improvements
- Suggests improvements or enhancements to the system.
- Instances where suggestions or changes are made to improve the usability of the software.

22.
Concepts: propose new features, make feature suggestions
- Users suggest or propose new features for the platform.
- Users or developers make suggestions for improvements or additional features.

23.
Concepts: inquire about updates, inquire about update status
- Users inquire about the availability, timeline, or specific features of upcoming software updates.
- Users inquire about the status of software updates, particularly for specific platforms.

24.
Concepts: teaching instructions, instruction and updates
- Designers provide instructions or explanations about using the software.
- Designers providing updates and instructions to help users understand and use the software effectively.

25.
Concepts: provide technical information, provide technical clarification
- A designer provides technical information or explains technical details related to the system.
- A designer provides an explanation or technical clarification about a feature or component.

26.
Concepts: explain feature functions, address component functionality
- A designer explains the functionality or functions of a feature.
- A designer addresses or describes the functionality of a feature or component within the software.

27.
Concepts: praise software, appreciate software features, share positive feedback, express software satisfaction
- Users praise the software for its performance or features.
- Users express appreciation for specific features of the software.
- Users share positive feedback about the software.
- Users express satisfaction with the software's features and practicality.

28.
Concepts: compare software, comparison to similar apps
- Users compare the software to other similar tools, highlighting differences in practicality or usability.
- A user compares the software to similar applications, highlighting its advantages.

29.
Concepts: discuss software usability, discuss context of use
- Users discuss the practical usability of the software.
- Users describe the specific contexts in which they use the software and discuss its usability.

30.
Concepts: express frustration, frustration with limitations
- A user or designer expresses dissatisfaction or challenges with the system or technology.
- Designers express frustration with current limitations or issues.

31.
Concepts: apologize for disturbance, apologize for potential interruption
- Designers apologize for any inconvenience caused to the users.
- Users or designers apologize for potential interruptions.

32.
Concepts: problem solving, offer solutions
- A designer offers help for any issues encountered.
- A designer offers solutions to technical issues or questions posed by users.

33.
Concepts: encourage community participation, encourage participatory design
- Designers encourage and invite community members to participate or provide feedback.
- Instances where the community contributes to the design and development process through suggestions or feedback.

34.
Concepts: seek community input, solicit community feedback
- Designers seek input or suggestions from the community before proceeding with a task.
- Designers elicit feedback and solicit suggestions from the community.

35.
Concepts: involve users in design, invite user participation
- Designers actively involve users in the design process through feedback or testing.
- A designer invites users to participate or provide input in the development process.

36.
Concepts: welcome, greeting the community
- Designers greet or welcome users.
- Users or designers greet the community.

37.
Concepts: understanding user needs, seek context from users
- Designer's inquiries to understand user problems or needs.
- A designer seeks or gathers context about the user's environment or needs.

38.
Concepts: feedback reaction, respond to user feedback
- Reacting to user feedback or suggestions.
- Instances where designers respond to user feedback or suggestions.

39.
Concepts: respond to questions, provide user response
- Users and designers respond to questions or provide feedback.
- Instances where users provide feedback or ask questions that influence the design process.

40.
Concepts: encourage feedback, request user feedback
- Instances where designers encourage users to provide suggestions or feedback.
- A designer seeks or prompts users to provide feedback or suggestions on features and updates.

41.
Concepts: acknowledging feedback, appreciating feedback
- Designers or users acknowledge feedback, responses, or user experiences.
- Designers express appreciation for user feedback and mention future updates or features.

42.
Concepts: acknowledging receipt, acknowledging resolution
- Users acknowledge receipt or understanding of information.
- Users acknowledge the receipt of information or the resolution of an update.

43.
Concepts: affirm user's point, confirming agreement
- Affirmations or agreements with points made by users.
- Users confirm agreement or acceptance of a statement or argument.

44.
Concepts: appreciating designers, acknowledging efforts
- Users acknowledge and appreciate the efforts of the designers.
- Users acknowledge the efforts of the designers or community and express thanks.

45.
Concepts: acknowledge help, expressing appreciation
- A user expresses gratitude for assistance.
- Users express appreciation or thanks.

46.
Concepts: emotion expression, using expressive language
- Expressing emotions through emojis or text.
- Users or designers use emojis or expressive language to convey emotion.

47.
Concepts: use non verbal communication, use emojis for communication
- Use of emojis or other non-verbal forms of communication by users.
- Users engage with the conversation using emojis to express emotions or reactions.

48.
Concepts: provide context, provide contextual information
- Providing context or background information for a specific situation or decision.
- Users provide context or background information to support their responses or questions.

49.
Concepts: expectation management
- A designer manages user expectations by explaining timelines or limitations.
- A team member manages user expectations regarding feature availability or updates.

50.
Concepts: confirming teacher identity
- A designer confirms the professional background of a user.
- Users confirm their role or identity as a teacher.
===
---
Definitions for each code (50 in total):
1.
Concepts: component update, announcing component updates
Relationship: N/A
Criteria: Designers announce updates or changes to component properties.
Phrase: Announcing component updates

2.
Concepts: announcing new releases, announcing software updates
Relationship: N/A
Criteria: Designers announce the release of a new feature or software version and its details.
Phrase: Announcing new releases

3.
Concepts: notifying about new versions, communication of updates
Relationship: N/A
Criteria: Designers notify users about the availability of a new version update and communicate related details.
Phrase: Notifying about new versions

4.
Concepts: managing release process, planning software release
Relationship: N/A
Criteria: Designers discuss and communicate plans and timelines for the release and management of software versions.
Phrase: Managing release process

5.
Concepts: communicating progress, share development update
Relationship: N/A
Criteria: Designers communicate updates, progress, or future plans regarding the software.
Phrase: Communicating progress

6.
Concepts: providing detailed updates, detailing updates and fixes
Relationship: N/A
Criteria: Designers provide detailed technical updates, new features, adjustments, and bug fixes.
Phrase: Providing detailed updates

7.
Concepts: provide version details, detailing version updates
Relationship: N/A
Criteria: Designers provide detailed information about the status and specific updates or new features of a software version.
Phrase: Providing version details

8.
Concepts: confirming updates, confirming future features
Relationship: N/A
Criteria: Designers confirm that an upcoming update or feature will occur.
Phrase: Confirming updates

9.
Concepts: planned updates, announcing development plans
Relationship: N/A
Criteria: Designers announce upcoming updates, features, or development plans.
Phrase: Announcing development plans

10.
Concepts: previewing updates, explaining upcoming features
Relationship: N/A
Criteria: Designers provide a preview and explanation of upcoming updates or features.
Phrase: Previewing updates

11.
Concepts: explain limitations, explain current version's limitation
Relationship: N/A
Criteria: A designer explains the limitations of a feature or the current version of the software.
Phrase: Explaining limitations

12.
Concepts: explaining design goals, explain design principles
Relationship: N/A
Criteria: A designer explains the design goals or principles behind the software.
Phrase: Explaining design goals

13.
Concepts: outlining future plans, planning future designs, discussing future planning
Relationship: N/A
Criteria: Designers outline and discuss future development priorities, plans, and efforts.
Phrase: Outlining future plans

14.
Concepts: discussing improvements, discussing future updates
Relationship: N/A
Criteria: Developers discuss improvements or changes to the software's functionality and plans for future updates.
Phrase: Discussing improvements

15.
Concepts: promise for future feature, promising feature realization
Relationship: N/A
Criteria: Designers assure users that a feature will be realized or perfected in the future.
Phrase: Promising future features

16.
Concepts: prioritizing development, outline development priorities
Relationship: N/A
Criteria: Designers discuss and outline the prioritization of different features or sections to be developed.
Phrase: Prioritizing development

17.
Concepts: share user experience, sharing classroom success
Relationship: N/A
Criteria: Users share their experiences and positive feedback about student engagement and classroom success using the software.
Phrase: Sharing user experience

18.
Concepts: inquire about software download, inquire about software access
Relationship: N/A
Criteria: Users inquire about where and how to download or access the software.
Phrase: Inquiring about software access

19.
Concepts: request usage support, inquire about software usage
Relationship: N/A
Criteria: Users request support or instructions on how to use a specific version of the software.
Phrase: Requesting usage support

20.
Concepts: ask a question, make technical inquiry
Relationship: N/A
Criteria: Users ask technical questions about various aspects of the software or its use.
Phrase: Making technical inquiries

21.
Concepts: improvement suggestions, suggest usability improvements
Relationship: N/A
Criteria: Users suggest improvements or enhancements to the system's usability.
Phrase: Suggesting usability improvements

22.
Concepts: propose new features, make feature suggestions
Relationship: N/A
Criteria: Users or developers suggest or propose new features for the platform.
Phrase: Proposing new features

23.
Concepts: inquire about updates, inquire about update status
Relationship: N/A
Criteria: Users inquire about the availability, timeline, or specific features of upcoming software updates.
Phrase: Inquiring about updates

24.
Concepts: teaching instructions, instruction and updates
Relationship: N/A
Criteria: Designers provide instructions or explanations about using the software and updates to help users understand and use it effectively.
Phrase: Providing teaching instructions

25.
Concepts: provide technical information, provide technical clarification
Relationship: N/A
Criteria: A designer provides technical information or explanations about a feature or component.
Phrase: Providing technical information

26.
Concepts: explain feature functions, address component functionality
Relationship: N/A
Criteria: A designer explains or describes the functionality of a feature or component within the software.
Phrase: Explaining feature functions

27.
Concepts: praise software, appreciate software features, share positive feedback, express software satisfaction
Relationship: N/A
Criteria: Users express appreciation, positive feedback, and satisfaction with the software's features and performance.
Phrase: Praising software

28.
Concepts: compare software, comparison to similar apps
Relationship: N/A
Criteria: Users compare the software to other similar tools, highlighting differences in practicality or usability.
Phrase: Comparing software

29.
Concepts: discuss software usability, discuss context of use
Relationship: N/A
Criteria: Users discuss the practical usability of the software and describe the specific contexts in which they use it.
Phrase: Discussing software usability

30.
Concepts: express frustration, frustration with limitations
Relationship: N/A
Criteria: Users or designers express dissatisfaction or challenges with the system or its limitations.
Phrase: Expressing frustration

31.
Concepts: apologize for disturbance, apologize for potential interruption
Relationship: N/A
Criteria: Designers or users apologize for any inconvenience or potential interruptions caused.
Phrase: Apologizing for disturbance

32.
Concepts: problem solving, offer solutions
Relationship: N/A
Criteria: A designer offers help and solutions to technical issues or questions posed by users.
Phrase: Offering solutions

33.
Concepts: encourage community participation, encourage participatory design
Relationship: N/A
Criteria: Designers encourage and invite community members to participate or provide feedback in the design and development process.
Phrase: Encouraging community participation

34.
Concepts: seek community input, solicit community feedback
Relationship: N/A
Criteria: Designers seek input or suggestions from the community before proceeding with a task.
Phrase: Seeking community input

35.
Concepts: involve users in design, invite user participation
Relationship: N/A
Criteria: Designers actively involve users in the design process through feedback or testing.
Phrase: Involving users in design

36.
Concepts: welcome, greeting the community
Relationship: N/A
Criteria: Designers or users greet and welcome the community.
Phrase: Greeting the community

37.
Concepts: understanding user needs, seek context from users
Relationship: N/A
Criteria: Designers inquire to understand user problems or needs and gather context about the user's environment.
Phrase: Understanding user needs

38.
Concepts: feedback reaction, respond to user feedback
Relationship: N/A
Criteria: Designers react to and respond to user feedback or suggestions.
Phrase: Responding to user feedback

39.
Concepts: respond to questions, provide user response
Relationship: N/A
Criteria: Users and designers respond to questions or provide feedback that influences the design process.
Phrase: Responding to questions

40.
Concepts: encourage feedback, request user feedback
Relationship: N/A
Criteria: Designers encourage users to provide suggestions or feedback on features and updates.
Phrase: Encouraging feedback

41.
Concepts: acknowledging feedback, appreciating feedback
Relationship: N/A
Criteria: Designers or users acknowledge and express appreciation for feedback, mentioning future updates or features.
Phrase: Acknowledging feedback

42.
Concepts: acknowledging receipt, acknowledging resolution
Relationship: N/A
Criteria: Users acknowledge receipt or understanding of information or the resolution of an update.
Phrase: Acknowledging receipt

43.
Concepts: affirm user's point, confirming agreement
Relationship: N/A
Criteria: Users affirm or agree with points made by others.
Phrase: Confirming agreement

44.
Concepts: appreciating designers, acknowledging efforts
Relationship: N/A
Criteria: Users acknowledge and appreciate the efforts of the designers or community.
Phrase: Appreciating designers

45.
Concepts: acknowledge help, expressing appreciation
Relationship: N/A
Criteria: Users express gratitude for assistance.
Phrase: Acknowledging help

46.
Concepts: emotion expression, using expressive language
Relationship: N/A
Criteria: Users or designers express emotions through emojis or text.
Phrase: Expressing emotions

47.
Concepts: use non verbal communication, use emojis for communication
Relationship: N/A
Criteria: Users engage with the conversation using emojis or other non-verbal forms of communication to express emotions or reactions.
Phrase: Using non-verbal communication

48.
Concepts: provide context, provide contextual information
Relationship: N/A
Criteria: Users provide context or background information to support their responses or questions.
Phrase: Providing context

49.
Concepts: expectation management
Relationship: N/A
Criteria: A designer manages user expectations by explaining timelines or limitations regarding feature availability or updates.
Phrase: Managing expectations

50.
Concepts: confirming teacher identity
Relationship: N/A
Criteria: Designers or users confirm their professional background or role as a teacher.
Phrase: Confirming teacher identity
---