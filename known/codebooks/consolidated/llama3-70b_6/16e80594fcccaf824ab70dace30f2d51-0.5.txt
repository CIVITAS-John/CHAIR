You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (17 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
17. 
Concepts: {Repeat the input 17}
Relationship: {What is logical relationship between concepts in code 17, or N/A if not applicable}
Criteria: {Who did what, and how for code 17}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: praise software, provide positive feedback
- A user expresses praise, appreciation, or admiration for the software, its features, or its functionality.
- A user expresses admiration or appreciation for a specific aspect of the software.

2.
Concepts: appreciate a feature, compliment software design
- A user expresses praise or appreciation for a specific feature or design element.
- A user compliments the software design or a specific feature.

3.
Concepts: user background/experience, sharing user experiences
- User shares their background or experience with the software.
- A user shares insights or experiences related to using the software, highlighting its effectiveness.

4.
Concepts: comparative analysis, comparing to similar apps
- Comparing the software or feature with other similar products or tools.
- A user compares the application with other similar software, highlighting its features.

5.
Concepts: suggesting improvements
- Users suggest refinements, improvements, or new features to improve the platform's usability or functionality.
- Users suggest new features, functionalities, or improvements to the platform.
- Users suggest improvements, propose detailed suggestions, or suggest future directions for the software.

6.
Concepts: responding to a query
- A designer responds to a user's query or question.
- A user responds to a question or inquiry.

7.
Concepts: sharing workarounds
- A designer shares a workaround or solution to a problem, sharing a solution.
- A designer provides a temporary solution or workaround, sharing a solution.

8.
Concepts: maintaining engagement
- Maintaining engagement with users through greetings or casual interactions.
- Community members maintain engagement or participation in conversations.

9.
Concepts: communicating informally
- Designers use informal language or tone in their messages.
- A designer engages in informal or casual communication.

10.
Concepts: requesting private messaging
- Requesting private messaging for specific details.
- Designers request private messaging for further discussion.

11.
Concepts: committing to improvement
- A designer commits to improving the software or service.
- Community members promise to improve the platform or user experience.

12.
Concepts: share teaching background
- Users share their teaching experience or background.
- Users share their teaching experience or background to provide context.

13.
Concepts: establishing personal connections
- Expressing personal interest or connection with users or establishing a personal connection by sharing experiences or asking about their background.
- A designer engages with the community by providing updates or information.
- Designers engage directly with users, engaging users in the design and development process.

14.
Concepts: providing user feedback
- Users provide direct, additional, or specific feedback on the platform or its features.
- Users provide feedback, suggestions, or requests for new features or improvements.

15.
Concepts: indicating progress
- A user or designer indicates progress or updates on the app's development.
- Designers indicate that an update is in preparation.

16.
Concepts: sharing development plans
- A designer shares development plans or roadmaps with the community.
- A designer shares information about development plans or roadmaps with the community.

17.
Concepts: providing solutions
- A designer provides a solution or suggests an answer to a user's problem.
- A designer provides a solution or suggestion to address a problem or issue.
===
Here are the definitions for each code:

---
1.
Concepts: praise software, provide positive feedback
Relationship: The concepts are related as they both express a positive sentiment towards the software.
Criteria: A user expresses admiration or appreciation for the software or its features.
Phrase: Expressing admiration for software.

2.
Concepts: appreciate a feature, compliment software design
Relationship: The concepts are related as they both express praise for specific aspects of the software.
Criteria: A user compliments the software design or a specific feature.
Phrase: Complimenting software design.

3.
Concepts: user background/experience, sharing user experiences
Relationship: The concepts are related as they both involve users sharing their experiences or backgrounds related to the software.
Criteria: A user shares their background or experience with the software.
Phrase: Sharing user experiences.

4.
Concepts: comparative analysis, comparing to similar apps
Relationship: The concepts are related as they both involve comparing the software to other similar products.
Criteria: A user compares the software with other similar products or tools.
Phrase: Comparing software to others.

5.
Concepts: suggesting improvements
Relationship: The concepts are related as they all involve users providing suggestions for improving the software.
Criteria: A user suggests refinements, improvements, or new features to the platform.
Phrase: Suggesting improvements.

6.
Concepts: responding to a query
Relationship: The concepts are related as they both involve responding to a question or inquiry.
Criteria: A designer responds to a user's query or question.
Phrase: Responding to queries.

7.
Concepts: sharing workarounds
Relationship: The concepts are related as they both involve sharing temporary solutions to problems.
Criteria: A designer shares a workaround or solution to a problem.
Phrase: Sharing workarounds.

8.
Concepts: maintaining engagement
Relationship: The concepts are related as they both involve maintaining participation in conversations.
Criteria: Community members maintain engagement or participation in conversations.
Phrase: Maintaining engagement.

9.
Concepts: communicating informally
Relationship: The concepts are related as they both involve using informal language or tone.
Criteria: Designers use informal language or tone in their messages.
Phrase: Communicating informally.

10.
Concepts: requesting private messaging
Relationship: The concepts are related as they both involve requesting private messaging for specific discussions.
Criteria: Designers request private messaging for further discussion.
Phrase: Requesting private messaging.

11.
Concepts: committing to improvement
Relationship: The concepts are related as they both involve committing to improving the software or service.
Criteria: A designer commits to improving the software or service.
Phrase: Committing to improvement.

12.
Concepts: share teaching background
Relationship: The concepts are related as they both involve sharing teaching experience or background.
Criteria: Users share their teaching experience or background to provide context.
Phrase: Sharing teaching background.

13.
Concepts: establishing personal connections
Relationship: The concepts are related as they all involve establishing personal connections with users.
Criteria: Designers engage with the community by providing updates or information.
Phrase: Establishing personal connections.

14.
Concepts: providing user feedback
Relationship: The concepts are related as they both involve providing feedback on the platform or its features.
Criteria: Users provide direct, additional, or specific feedback on the platform or its features.
Phrase: Providing user feedback.

15.
Concepts: indicating progress
Relationship: The concepts are related as they both involve indicating updates or progress on the app's development.
Criteria: A user or designer indicates progress or updates on the app's development.
Phrase: Indicating progress.

16.
Concepts: sharing development plans
Relationship: The concepts are related as they both involve sharing development plans or roadmaps with the community.
Criteria: A designer shares development plans or roadmaps with the community.
Phrase: Sharing development plans.

17.
Concepts: providing solutions
Relationship: The concepts are related as they both involve providing solutions or answers to user problems.
Criteria: A designer provides a solution or suggests an answer to a user's problem.
Phrase: Providing solutions.