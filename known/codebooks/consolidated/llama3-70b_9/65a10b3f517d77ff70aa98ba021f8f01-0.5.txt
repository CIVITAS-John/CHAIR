You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: functional explanation, addressing functionality
- Explaining how a feature or component works or its purpose.
- Functionality or technical aspects of a feature are addressed or explained.

2.
Concepts: highlighting long-term stability, emphasizing long-term stability, prioritizing long-term stability
- The designer highlights the importance of a feature for long-term stability.
- The designer emphasizes the importance of achieving long-term stability in the software.
- The designer mentions the importance of long-term stability in the platform's development.

3.
Concepts: highlighting long-term benefits, emphasizing long-term benefits
- A designer highlights the long-term benefits of a feature.
- Emphasizing the long-term benefits, advantages, or implications of a feature or design aspect.

4.
Concepts: introduce ideal component, highlight ideal components
- A participant introduces or highlights a specific component, feature, or functionality.
- A participant highlights or emphasizes the importance of a particular component, feature, or functionality.

5.
Concepts: promoting ideal components, promoting understanding of ideal components
- A designer promotes or highlights the ideal components or features of a tool or resource.
- Designers highlight or explain the ideal properties of components or tools.

6.
Concepts: emphasizing impact, emphasizing update significance, highlighting significance
- A designer highlights the significance or impact of an update or feature.
- A designer highlights the significance or importance of an update or feature.
- The designer highlights the significance or importance of an update or feature.

7.
Concepts: emphasizing importance, emphasizing design importance, highlighting design priorities
- The designer emphasizes the importance of a particular feature or aspect.
- Designer emphasizes the importance of a well-designed feature.
- Designer emphasizes the importance of prioritizing design aspects.

8.
Concepts: emphasizing optimization, optimization importance
- The designer emphasizes the importance of optimization.
- Designer highlights the importance of optimizing a feature or functionality.

9.
Concepts: promoting bidirectional conversion, bidirectional conversion concept, reiterating conversion concept
- Designers discuss or research bidirectional conversion between physical and circuit diagrams.
- Explanations or descriptions of the concept of bidirectional conversion between physical diagrams and circuit diagrams.
- A designer reiterates or explains the concept of bidirectional conversion between circuit diagrams and physical diagrams.

10.
Concepts: educating users, educating users about design choices
- The designer educates users on how to use a component or feature.
- A designer educates users about design choices or decisions.

11.
Concepts: building understanding, ensuring user understanding, facilitating user understanding
- The designer helps users build understanding of a concept or feature.
- A designer ensures that users understand a concept or feature.
- Designers facilitate user understanding by providing explanations or instructions.

12.
Concepts: guiding users, providing instructions, providing technical instructions
- The designer provides instructions or guidance on how to use a component or feature.
- A designer provides instructions or guidance for using the application.
- A designer provides instructions or guidance on how to use the software or a specific feature.
- Providing instructions or guidance on how to use a specific feature or tool.
- A designer provides technical instructions or guidance on how to use the software.

13.
Concepts: technical explanation, technical explanations
- The designer explains technical aspects or artifacts related to the software.
- The designer provides technical explanations or clarifies technical aspects of the app.
- Explanations or illustrations of technical points, concepts, or issues.

14.
Concepts: explaining user control options, explaining user interface design
- The designer explains user control options or features.
- A person explains the design or functionality of a user interface.

15.
Concepts: explaining usage, explaining software features
- Designer explains how to use a feature or functionality of the software.
- The designer explains the functionality of a specific feature in the software.

16.
Concepts: clarifying functionality, explaining design functionality
- The designer explains or clarifies the functionality of a specific feature or component.
- A designer explains the functionality or purpose of a design element.

17.
Concepts: diagram connections, demonstrating connections
- The designer explains or describes the connections or relationships between different diagrams.
- Designer explains or demonstrates connections between concepts or features.

18.
Concepts: providing example, providing visual examples for clarity
- Designers or developers provide examples to illustrate a point or explain a feature.
- Designers or developers provide visual examples or images to clarify a point or feature.

19.
Concepts: feature examples, providing feature examples
- The designer provides examples or demonstrations of the app's features or functions.
- The designer provides examples or illustrations of specific features or functionalities in the software.

20.
Concepts: illustrating functionality, demonstrating application capabilities
- Designer illustrates or demonstrates the functionality of a feature.
- A designer demonstrates the capabilities or features of an application.

21.
Concepts: explaining context, clarifying design choices, explaining design trade-offs, explaining design decisions
- A designer explains the context or reasoning behind a particular design decision or feature.
- A designer clarifies or explains the reasoning behind a design choice or feature.
- Designer explains the rationale behind design decisions.
- The designer explains the reasoning behind a design decision.

22.
Concepts: justifying feature development, justifying development priorities
- A designer justifies or explains the reasoning behind a feature or development.
- Designer justifies development priorities, explaining the reasoning behind certain design decisions.

23.
Concepts: design rationale, rationale for design decision, justifying design decisions, giving reasons, development decision rationales
- Designer explains the reasoning behind design choices.
- Designers providing explanations or justifications for their design decisions or updates.
- Providing reasons or justification for design decisions.
- The designer provides a justification for a development decision or design choice.
- Justifying or explaining the reasoning behind design decisions
- A designer provides a reason or justification for a decision or action.
- The designer justifies or explains the reasoning behind development decisions.

24.
Concepts: design goal explanation, explaining design intention
- Explaining the design goals or intentions behind the software.
- Explaining the purpose or intention behind a design feature or decision.

25.
Concepts: design principles, explain design philosophy
- The designer mentions the underlying principles or philosophy guiding the software's design.
- A community member explains or discusses the design philosophy or approach behind the software.

26.
Concepts: version differences, clarifying platform differences
- Explaining differences between versions or platforms
- Clarifying differences between platforms or versions.

27.
Concepts: explaining current version, explain current version's limitation
- Explaining the purpose or limitations of a current version or feature
- Explaining the limitations or constraints of the current version

28.
Concepts: clarifying testing status, clarifies testing phase for circuit diagram version
- Clarifying the testing status of a specific feature or version.
- Clarifying that a feature or version is in the testing phase.

29.
Concepts: providing details, detailed update information
- The designer provides detailed information or clarification about a specific topic or feature.
- The designer provides detailed information about specific updates or features.

30.
Concepts: clarifying differences, clarifying version information
- Designer clarifies differences between versions, features, or systems.
- Designers clarify or reiterate information about a specific version.

31.
Concepts: providing explanations, enhancing understanding, promoting understanding
- Providing explanations or clarifications for a feature or concept.
- Providing explanations or clarifications about the software's features.
- Clarifying or explaining a concept or feature to enhance understanding.
- Explaining or clarifying concepts to facilitate understanding.

32.
Concepts: clarifying design, clarification requests
- Clarifying or seeking clarification on a specific design or feature.
- Seeking or providing clarification on specific design elements or preferences.
===
Here are the definitions for each code:

---
1.
Concepts: functional explanation, addressing functionality
Relationship: The concepts are related as they both involve explaining how something works or its purpose.
Criteria: Designers explain how a feature or component works or its purpose.
Phrase: Explaining functionality

2.
Concepts: highlighting long-term stability, emphasizing long-term stability, prioritizing long-term stability
Relationship: The concepts are related as they all involve emphasizing the importance of long-term stability.
Criteria: Designers highlight or emphasize the importance of long-term stability in the software.
Phrase: Emphasizing long-term stability

3.
Concepts: highlighting long-term benefits, emphasizing long-term benefits
Relationship: The concepts are related as they both involve highlighting the benefits of a feature in the long run.
Criteria: Designers highlight or emphasize the long-term benefits of a feature or design aspect.
Phrase: Highlighting long-term benefits

4.
Concepts: introduce ideal component, highlight ideal components
Relationship: The concepts are related as they both involve introducing or highlighting a specific component or feature.
Criteria: Participants introduce or highlight a specific component, feature, or functionality.
Phrase: Highlighting ideal components

5.
Concepts: promoting ideal components, promoting understanding of ideal components
Relationship: The concepts are related as they both involve promoting or highlighting ideal components or features.
Criteria: Designers promote or highlight the ideal components or features of a tool or resource.
Phrase: Promoting ideal components

6.
Concepts: emphasizing impact, emphasizing update significance, highlighting significance
Relationship: The concepts are related as they all involve emphasizing the significance or impact of an update or feature.
Criteria: Designers highlight or emphasize the significance or impact of an update or feature.
Phrase: Emphasizing significance

7.
Concepts: emphasizing importance, emphasizing design importance, highlighting design priorities
Relationship: The concepts are related as they all involve emphasizing the importance of a particular feature or aspect.
Criteria: Designers emphasize the importance of a well-designed feature or prioritize design aspects.
Phrase: Emphasizing importance

8.
Concepts: emphasizing optimization, optimization importance
Relationship: The concepts are related as they both involve emphasizing the importance of optimization.
Criteria: Designers emphasize the importance of optimizing a feature or functionality.
Phrase: Emphasizing optimization

9.
Concepts: promoting bidirectional conversion, bidirectional conversion concept, reiterating conversion concept
Relationship: The concepts are related as they all involve discussing or explaining bidirectional conversion.
Criteria: Designers discuss or research bidirectional conversion between physical and circuit diagrams.
Phrase: Promoting bidirectional conversion

10.
Concepts: educating users, educating users about design choices
Relationship: The concepts are related as they both involve educating users about design choices or decisions.
Criteria: Designers educate users on how to use a component or feature or about design choices.
Phrase: Educating users

11.
Concepts: building understanding, ensuring user understanding, facilitating user understanding
Relationship: The concepts are related as they all involve helping users build understanding of a concept or feature.
Criteria: Designers help users build understanding of a concept or feature.
Phrase: Building understanding

12.
Concepts: guiding users, providing instructions, providing technical instructions
Relationship: The concepts are related as they all involve providing guidance or instructions to users.
Criteria: Designers provide instructions or guidance on how to use a component or feature.
Phrase: Guiding users

13.
Concepts: technical explanation, technical explanations
Relationship: The concepts are related as they both involve explaining technical aspects or artifacts.
Criteria: Designers explain technical aspects or artifacts related to the software.
Phrase: Providing technical explanations

14.
Concepts: explaining user control options, explaining user interface design
Relationship: The concepts are related as they both involve explaining user control options or user interface design.
Criteria: Designers explain user control options or features or the design of a user interface.
Phrase: Explaining user control options

15.
Concepts: explaining usage, explaining software features
Relationship: The concepts are related as they both involve explaining how to use a feature or functionality.
Criteria: Designers explain how to use a feature or functionality of the software.
Phrase: Explaining usage

16.
Concepts: clarifying functionality, explaining design functionality
Relationship: The concepts are related as they both involve explaining or clarifying the functionality of a feature or component.
Criteria: Designers explain or clarify the functionality of a specific feature or component.
Phrase: Clarifying functionality

17.
Concepts: diagram connections, demonstrating connections
Relationship: The concepts are related as they both involve explaining or demonstrating connections between diagrams.
Criteria: Designers explain or demonstrate connections between concepts or features.
Phrase: Demonstrating connections

18.
Concepts: providing example, providing visual examples for clarity
Relationship: The concepts are related as they both involve providing examples to illustrate a point or explain a feature.
Criteria: Designers or developers provide examples to illustrate a point or explain a feature.
Phrase: Providing examples

19.
Concepts: feature examples, providing feature examples
Relationship: The concepts are related as they both involve providing examples or demonstrations of the app's features or functions.
Criteria: Designers provide examples or demonstrations of the app's features or functions.
Phrase: Providing feature examples

20.
Concepts: illustrating functionality, demonstrating application capabilities
Relationship: The concepts are related as they both involve illustrating or demonstrating the functionality of a feature.
Criteria: Designers illustrate or demonstrate the functionality of a feature.
Phrase: Illustrating functionality

21.
Concepts: explaining context, clarifying design choices, explaining design trade-offs, explaining design decisions
Relationship: The concepts are related as they all involve explaining the context or reasoning behind a design decision or feature.
Criteria: Designers explain the context or reasoning behind a design decision or feature.
Phrase: Explaining context

22.
Concepts: justifying feature development, justifying development priorities
Relationship: The concepts are related as they both involve justifying or explaining the reasoning behind a feature or development.
Criteria: Designers justify or explain the reasoning behind a feature or development.
Phrase: Justifying feature development

23.
Concepts: design rationale, rationale for design decision, justifying design decisions, giving reasons, development decision rationales
Relationship: The concepts are related as they all involve explaining the reasoning behind design decisions or updates.
Criteria: Designers explain the reasoning behind design choices or updates.
Phrase: Justifying design decisions

24.
Concepts: design goal explanation, explaining design intention
Relationship: The concepts are related as they both involve explaining the design goals or intentions behind the software.
Criteria: Designers explain the design goals or intentions behind the software.
Phrase: Explaining design goals

25.
Concepts: design principles, explain design philosophy
Relationship: The concepts are related as they both involve explaining the underlying principles or philosophy guiding the software's design.
Criteria: Designers explain the underlying principles or philosophy guiding the software's design.
Phrase: Explaining design principles

26.
Concepts: version differences, clarifying platform differences
Relationship: The concepts are related as they both involve explaining differences between versions or platforms.
Criteria: Designers explain differences between versions or platforms.
Phrase: Clarifying version differences

27.
Concepts: explaining current version, explain current version's limitation
Relationship: The concepts are related as they both involve explaining the purpose or limitations of a current version or feature.
Criteria: Designers explain the purpose or limitations of a current version or feature.
Phrase: Explaining current version

28.
Concepts: clarifying testing status, clarifies testing phase for circuit diagram version
Relationship: The concepts are related as they both involve clarifying the testing status of a specific feature or version.
Criteria: Designers clarify the testing status of a specific feature or version.
Phrase: Clarifying testing status

29.
Concepts: providing details, detailed update information
Relationship: The concepts are related as they both involve providing detailed information or clarification about a specific topic or feature.
Criteria: Designers provide detailed information or clarification about a specific topic or feature.
Phrase: Providing detailed information

30.
Concepts: clarifying differences, clarifying version information
Relationship: The concepts are related as they both involve clarifying differences between versions, features, or systems.
Criteria: Designers clarify differences between versions, features, or systems.
Phrase: Clarifying differences

31.
Concepts: providing explanations, enhancing understanding, promoting understanding
Relationship: The concepts are related as they all involve providing explanations or clarifications to enhance understanding.
Criteria: Designers provide explanations or clarifications to enhance understanding.
Phrase: Providing explanations

32.
Concepts: clarifying design, clarification requests
Relationship: The concepts are related as they both involve clarifying or seeking clarification on a specific design or feature.
Criteria: Designers clarify or seek clarification on specific design elements or preferences.
Phrase: Clarifying design