You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (50 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
50. 
Concepts: {Repeat the input 50}
Relationship: {What is logical relationship between concepts in code 50, or N/A if not applicable}
Criteria: {Who did what, and how for code 50}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: appreciating features, praising the software
- Users express appreciation for specific features of the software.
- Users praise the software and share positive feedback about its aspects and benefits.

2.
Concepts: sharing user experience and impact, sharing positive classroom experiences
- Users share their experiences and the impact of the software on their teaching or learning.
- Users share positive experiences of using the software in a classroom setting, including student feedback and engagement.

3.
Concepts: comparing usability, comparative feedback, comparing to similar applications
- Users compare the software's usability to other similar tools.
- User provides feedback by comparing the software to other software.
- Users compare the software favorably to similar applications.

4.
Concepts: justifying feature requests, suggesting and justifying new features
- Users explain the reasons behind their requests for features.
- Users suggest new features or improvements and provide reasons for their suggestions.

5.
Concepts: making detailed feature requests, requesting specific features
- Users make specific and detailed requests for new features.
- Users request specific features or functionalities to be added to the software.

6.
Concepts: suggesting improvements, suggesting design improvements
- A user provides a suggestion for software improvement.
- Users suggest new features or design improvements.

7.
Concepts: suggesting features or improvements, providing feedback and suggestions
- Users suggest specific features or improvements for the software.
- Users provide feedback or suggestions about the software's features or development direction.

8.
Concepts: inquiring about updates, inquire about update status
- Users inquire about recent or upcoming updates to the software.
- Users inquire about the status of updates for specific platforms.

9.
Concepts: inquiring about software access, inquiring about download information
- Users ask questions about how to access or download the software.
- Users ask where to download the software.

10.
Concepts: clarifying versions and platforms, inquiring about platform compatibility
- Users ask for clarification about the version and platform compatibility of the software.
- Users inquire about the availability or functionality of the software on different platforms.

11.
Concepts: ask a question, inquiring about usage instructions
- Users ask questions about various aspects of the software or its use.
- Users ask questions about how to use specific versions of the software.

12.
Concepts: documentation need, seeking guidance or documentation
- Users express the need for documentation or manuals for the software.
- Users seek guidance or request a user manual for the software.

13.
Concepts: providing context, provide context for interest
- Users provide context for their statements or questions.
- A user provides context or background information about their interest or situation.

14.
Concepts: sharing teaching experience, sharing classroom experiences
- Users share their teaching experience or background to provide context.
- A user shares their classroom experiences using the platform.

15.
Concepts: acknowledge community support, acknowledging community expertise
- A designer expresses gratitude for community support.
- A designer acknowledges the expertise within the community.

16.
Concepts: expressing appreciation, expressing gratitude
- Users express appreciation or thanks.
- Users express gratitude or acknowledgment for contributions.

17.
Concepts: greetings, greeting the community
- Users and developers greet each other in the community.
- Users or designers greet the community.

18.
Concepts: engaging with emojis, expressing emotions with emojis, communicating with emojis
- Users engage with the conversation using emojis to express emotions or reactions.
- Users express emotions using emojis.
- Users communicate using emojis or other non-verbal forms.

19.
Concepts: community update, make community announcements
- Instances where designers provide updates or announcements about the software.
- Designers make announcements or communicate with the community about updates.

20.
Concepts: announce component updates, introduce new components
- Designers announce updates to software components.
- Designers announce and introduce new components or features of the software.

21.
Concepts: feature release, announce software updates, announce new versions
- Designers announce the release of new features or versions.
- Designers announce software updates, new features, and version details.
- Designers announce the release and availability of new versions and updates.

22.
Concepts: notify about updates, provide product updates, provide update information
- Designers notify users about updates or changes in features or components.
- Designers provide information about updates or technical changes to the software.
- Designers provide information about changes or new features in upcoming updates.

23.
Concepts: communicate updates, communicate release schedule
- Designers communicate updates and timelines for software releases.
- Designers communicate the schedule and plans for upcoming software releases.

24.
Concepts: provide status updates, communicate project progress
- Designers provide updates on the status of a feature or development.
- A designer provides updates and communicates the progress of the project, including upcoming releases.

25.
Concepts: share update schedule, set timeline expectations, provide development timeline
- Designers provide and share the timeline for upcoming updates.
- Designers set expectations and provide a timeline for the release of updates.
- Designers provide a timeline for the development and updates of features.

26.
Concepts: announce planned updates, announce upcoming updates
- Designers announce plans for future updates or features.
- Designers announce upcoming updates or features to users.

27.
Concepts: respond to user feedback, acknowledge user feedback
- Designers respond to user feedback or suggestions.
- Instances where users provide feedback or suggestions to improve the software.
- Designers acknowledge receiving and understanding user feedback or suggestions.

28.
Concepts: suggestion acceptance, accept and implement suggestions
- Developers accept and acknowledge suggestions from users.
- Designers accept and plan to implement user suggestions.

29.
Concepts: engage in dialogue, engage in collaborative interactions
- Users and designers engage in a dialogue, often involving questions and answers.
- Designers and users engage in collaborative interactions that contribute to the design process.

30.
Concepts: opinion gathering, seek user input
- Designers gather opinions or feedback before starting new projects.
- Designers seek user input before starting new development phases or for future iterations.

31.
Concepts: seek user feedback, gather user input, solicit user feedback
- Designers seek feedback from users about their experience.
- Designers interact with users to seek input, suggestions, or feedback.
- Designers solicit feedback or suggestions from users.

32.
Concepts: actively involve users, involving users in design
- Designers actively involve users in the design process through feedback or testing.
- Designers offer the opportunity for users to participate in the design process.

33.
Concepts: encouraging participation, encourage user participation in design
- Designers invite the community to participate by providing suggestions and feedback.
- Instances where the community contributes to the design and development by providing suggestions or feedback that influence the process.

34.
Concepts: gather detailed requirements, seek to understand user needs
- A designer gathers detailed requirements from users.
- Designers ask for details to understand user needs.

35.
Concepts: ask follow-up questions, conduct follow-up inquiries
- Designers ask follow-up questions to clarify user feedback or suggestions.
- Developers ask follow-up questions about user needs and usage scenarios.

36.
Concepts: respond to queries, request and respond to clarification
- Users and designers respond to questions or provide clarifications.
- Designers request and respond to clarifications from users.

37.
Concepts: question, design question
- Users or designers ask questions about various topics.
- A designer asks a question related to design or functionality.

38.
Concepts: discuss future plans, outline future design plans
- A designer discusses future plans, updates, or compatibility considerations.
- A designer outlines future design plans, considerations, or development goals.

39.
Concepts: confirm feature updates, confirm future features
- Designers confirm upcoming feature updates and timelines.
- Designers confirm that future features or implementations will occur.

40.
Concepts: explain current limitations, explain system limitations
- A designer explains the limitations of the current version or solution.
- A designer explains the limitations of a feature or function due to system constraints.

41.
Concepts: express frustration, express frustration with limitations
- Users express frustration with their current systems or limitations.
- Expressing frustration with current limitations.

42.
Concepts: apologize for inconvenience, apologies and politeness
- Designers apologize for any inconvenience or disturbance caused to users.
- Expressions of politeness, apologies, or acknowledgment of potential inconvenience by the designers.

43.
Concepts: address user concerns, user concern resolution
- Designers respond to user concerns, providing reassurance.
- A designer resolves a user's concern, often confirming compatibility or functionality.

44.
Concepts: offer solutions, propose solutions
- Designers offer solutions or assistance to solve problems.
- Designers propose or share potential solutions to problems.

45.
Concepts: explain feature details, explain component functionality, explain feature functions
- A designer explains the details of a feature or simulation.
- A designer explains the specific functionalities of a component.
- A designer explains, gives examples, or introduces the functions of a feature.

46.
Concepts: new feature explanation, explain feature implementation
- A designer explains new features and their optimization process.
- A designer discusses the implementation and explains upcoming features or functionalities.

47.
Concepts: specifics, technical detail
- Discussing specific technical details or requirements.
- Discussing technical details of features and components.

48.
Concepts: clarify software version, provide version details
- A designer clarifies the type or version of the software being discussed or updated.
- A designer provides detailed information about the status, availability, and features of a software version.

49.
Concepts: expectation management
- Designer manages user expectations by explaining timelines and limitations.
- A team member manages user expectations regarding features or updates.

50.
Concepts: discuss input methods
- Discussing different input methods.
- A designer discusses the need for specific input methods and the usability of the software.
===
---
Definitions for each code (50 in total):
1.
Concepts: appreciating features, praising the software
Relationship: Users express positive feedback about the software and its features.
Criteria: Users express appreciation for specific features and praise the software's aspects and benefits.
Phrase: Expressing appreciation for software features

2.
Concepts: sharing user experience and impact, sharing positive classroom experiences
Relationship: Users share their experiences and the positive impact of the software in educational settings.
Criteria: Users share their experiences and the software's impact on teaching or learning, including positive classroom experiences.
Phrase: Sharing positive user experiences

3.
Concepts: comparing usability, comparative feedback, comparing to similar applications
Relationship: Users provide comparative feedback on the software's usability against similar tools.
Criteria: Users compare the software's usability and provide feedback by comparing it to other similar applications.
Phrase: Comparing software usability

4.
Concepts: justifying feature requests, suggesting and justifying new features
Relationship: Users suggest new features and justify their requests.
Criteria: Users suggest new features or improvements and provide reasons for their suggestions.
Phrase: Justifying feature requests

5.
Concepts: making detailed feature requests, requesting specific features
Relationship: Users make specific and detailed requests for new features.
Criteria: Users request specific features or functionalities to be added to the software.
Phrase: Making detailed feature requests

6.
Concepts: suggesting improvements, suggesting design improvements
Relationship: Users suggest improvements to the software's design and features.
Criteria: Users provide suggestions for software improvements or design enhancements.
Phrase: Suggesting software improvements

7.
Concepts: suggesting features or improvements, providing feedback and suggestions
Relationship: Users provide feedback and suggest specific features or improvements.
Criteria: Users suggest specific features or improvements and provide feedback on the software's development direction.
Phrase: Providing feedback and suggestions

8.
Concepts: inquiring about updates, inquire about update status
Relationship: Users inquire about the status and details of software updates.
Criteria: Users inquire about recent or upcoming updates to the software and their status.
Phrase: Inquiring about software updates

9.
Concepts: inquiring about software access, inquiring about download information
Relationship: Users ask questions about accessing or downloading the software.
Criteria: Users inquire about how and where to access or download the software.
Phrase: Inquiring about software access

10.
Concepts: clarifying versions and platforms, inquiring about platform compatibility
Relationship: Users seek clarification on software versions and platform compatibility.
Criteria: Users inquire about the availability and functionality of the software on different platforms.
Phrase: Inquiring about version and platform compatibility

11.
Concepts: ask a question, inquiring about usage instructions
Relationship: Users ask questions about the software and its usage.
Criteria: Users ask questions about various aspects of the software or how to use specific versions.
Phrase: Inquiring about software usage

12.
Concepts: documentation need, seeking guidance or documentation
Relationship: Users express the need for documentation and seek guidance.
Criteria: Users request documentation or manuals and seek guidance for using the software.
Phrase: Seeking software documentation

13.
Concepts: providing context, provide context for interest
Relationship: Users provide context for their statements or questions.
Criteria: Users provide background information about their interest or situation.
Phrase: Providing context for interest

14.
Concepts: sharing teaching experience, sharing classroom experiences
Relationship: Users share their teaching experiences to provide context.
Criteria: Users share their teaching or classroom experiences using the platform.
Phrase: Sharing teaching experiences

15.
Concepts: acknowledge community support, acknowledging community expertise
Relationship: Designers express gratitude for community support and expertise.
Criteria: Designers acknowledge and appreciate the community's support and expertise.
Phrase: Acknowledging community support

16.
Concepts: expressing appreciation, expressing gratitude
Relationship: Users express appreciation and gratitude.
Criteria: Users express thanks and acknowledgment for contributions.
Phrase: Expressing gratitude

17.
Concepts: greetings, greeting the community
Relationship: Users and designers greet each other in the community.
Criteria: Users or designers greet the community.
Phrase: Greeting the community

18.
Concepts: engaging with emojis, expressing emotions with emojis, communicating with emojis
Relationship: Users use emojis to express emotions and engage in communication.
Criteria: Users express emotions and communicate using emojis or other non-verbal forms.
Phrase: Communicating with emojis

19.
Concepts: community update, make community announcements
Relationship: Designers provide updates and announcements to the community.
Criteria: Designers make announcements or communicate updates about the software to the community.
Phrase: Making community announcements

20.
Concepts: announce component updates, introduce new components
Relationship: Designers announce updates and introduce new software components.
Criteria: Designers announce updates and introduce new components or features of the software.
Phrase: Announcing component updates

21.
Concepts: feature release, announce software updates, announce new versions
Relationship: Designers announce the release of new features and software versions.
Criteria: Designers announce software updates, new features, and version details.
Phrase: Announcing software updates

22.
Concepts: notify about updates, provide product updates, provide update information
Relationship: Designers notify users about updates and provide update information.
Criteria: Designers provide information about updates or technical changes to the software.
Phrase: Providing product updates

23.
Concepts: communicate updates, communicate release schedule
Relationship: Designers communicate updates and release schedules.
Criteria: Designers communicate updates and timelines for software releases.
Phrase: Communicating release schedules

24.
Concepts: provide status updates, communicate project progress
Relationship: Designers provide updates on the status and progress of the project.
Criteria: Designers provide updates and communicate the progress of the project, including upcoming releases.
Phrase: Communicating project progress

25.
Concepts: share update schedule, set timeline expectations, provide development timeline
Relationship: Designers share the timeline and set expectations for updates.
Criteria: Designers provide and share the timeline for upcoming updates and set expectations.
Phrase: Providing development timeline

26.
Concepts: announce planned updates, announce upcoming updates
Relationship: Designers announce plans for future updates.
Criteria: Designers announce upcoming updates or features to users.
Phrase: Announcing planned updates

27.
Concepts: respond to user feedback, acknowledge user feedback
Relationship: Designers respond to and acknowledge user feedback.
Criteria: Designers respond to user feedback or suggestions and acknowledge receiving them.
Phrase: Responding to user feedback

28.
Concepts: suggestion acceptance, accept and implement suggestions
Relationship: Developers accept and plan to implement user suggestions.
Criteria: Developers accept and acknowledge suggestions from users and plan to implement them.
Phrase: Accepting and implementing suggestions

29.
Concepts: engage in dialogue, engage in collaborative interactions
Relationship: Users and designers engage in dialogue and collaborative interactions.
Criteria: Users and designers engage in dialogue and collaborative interactions that contribute to the design process.
Phrase: Engaging in collaborative dialogue

30.
Concepts: opinion gathering, seek user input
Relationship: Designers gather opinions and seek user input.
Criteria: Designers gather opinions or feedback before starting new projects or development phases.
Phrase: Gathering user input

31.
Concepts: seek user feedback, gather user input, solicit user feedback
Relationship: Designers seek and solicit feedback from users.
Criteria: Designers seek feedback from users about their experience and interact to gather input and suggestions.
Phrase: Soliciting user feedback

32.
Concepts: actively involve users, involving users in design
Relationship: Designers actively involve users in the design process.
Criteria: Designers involve users in the design process through feedback or testing.
Phrase: Involving users in design

33.
Concepts: encouraging participation, encourage user participation in design
Relationship: Designers encourage user participation in the design process.
Criteria: Designers invite the community to participate by providing suggestions and feedback.
Phrase: Encouraging user participation

34.
Concepts: gather detailed requirements, seek to understand user needs
Relationship: Designers gather detailed requirements to understand user needs.
Criteria: Designers gather detailed requirements and ask for details to understand user needs.
Phrase: Gathering detailed user requirements

35.
Concepts: ask follow-up questions, conduct follow-up inquiries
Relationship: Designers ask follow-up questions to clarify user feedback.
Criteria: Designers ask follow-up questions about user feedback or needs and usage scenarios.
Phrase: Conducting follow-up inquiries

36.
Concepts: respond to queries, request and respond to clarification
Relationship: Users and designers respond to queries and provide clarifications.
Criteria: Users and designers respond to questions or provide clarifications.
Phrase: Responding to queries

37.
Concepts: question, design question
Relationship: Users or designers ask questions about various topics.
Criteria: Users or designers ask questions about design or functionality.
Phrase: Asking design questions

38.
Concepts: discuss future plans, outline future design plans
Relationship: Designers discuss and outline future plans and design considerations.
Criteria: Designers discuss future plans, updates, or compatibility considerations and outline future design plans.
Phrase: Outlining future design plans

39.
Concepts: confirm feature updates, confirm future features
Relationship: Designers confirm upcoming feature updates and future implementations.
Criteria: Designers confirm upcoming feature updates and timelines.
Phrase: Confirming feature updates

40.
Concepts: explain current limitations, explain system limitations
Relationship: Designers explain the limitations of the current system or version.
Criteria: Designers explain the limitations of a feature or function due to system constraints.
Phrase: Explaining system limitations

41.
Concepts: express frustration, express frustration with limitations
Relationship: Users express frustration with current limitations.
Criteria: Users express frustration with their current systems or limitations.
Phrase: Expressing frustration with limitations

42.
Concepts: apologize for inconvenience, apologies and politeness
Relationship: Designers apologize for any inconvenience caused to users.
Criteria: Designers express politeness and apologize for any inconvenience or disturbance caused.
Phrase: Apologizing for inconvenience

43.
Concepts: address user concerns, user concern resolution
Relationship: Designers address and resolve user concerns.
Criteria: Designers respond to user concerns and provide reassurance or resolution.
Phrase: Addressing user concerns

44.
Concepts: offer solutions, propose solutions
Relationship: Designers offer and propose solutions to problems.
Criteria: Designers offer solutions or assistance to solve problems.
Phrase: Proposing solutions

45.
Concepts: explain feature details, explain component functionality, explain feature functions
Relationship: Designers explain the details and functionalities of features or components.
Criteria: Designers explain the details, functionalities, and examples of features or components.
Phrase: Explaining feature details

46.
Concepts: new feature explanation, explain feature implementation
Relationship: Designers explain new features and their implementation process.
Criteria: Designers explain new features and discuss their implementation and optimization process.
Phrase: Explaining new feature implementation

47.
Concepts: specifics, technical detail
Relationship: Discussing specific technical details or requirements.
Criteria: Discussing technical details of features and components.
Phrase: Discussing technical details

48.
Concepts: clarify software version, provide version details
Relationship: Designers clarify and provide details about software versions.
Criteria: Designers clarify the type or version of the software and provide detailed information about its status and features.
Phrase: Providing version details

49.
Concepts: expectation management
Relationship: Designers manage user expectations by explaining timelines and limitations.
Criteria: Designers manage user expectations regarding features or updates by explaining timelines and limitations.
Phrase: Managing user expectations

50.
Concepts: discuss input methods
Relationship: Discussing different input methods and their usability.
Criteria: Designers discuss the need for specific input methods and the usability of the software.
Phrase: Discussing input methods
---