You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (15 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
15. 
Concepts: {Repeat the input 15}
Relationship: {What is logical relationship between concepts in code 15, or N/A if not applicable}
Criteria: {Who did what, and how for code 15}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: showing engagement, engaging in dialogue
- A designer shows engagement or interest in a conversation.
- A user or designer engages in a dialogue or conversation.

2.
Concepts: seeking feedback, gathering user input, soliciting user input
- A designer asks for feedback or opinions from users.
- A designer gathers opinions or feedback from users on a specific topic.
- A designer solicits suggestions or feedback from users.

3.
Concepts: inviting feedback, inviting user participation, encouraging feedback
- A designer invites users to provide feedback or suggestions.
- A designer invites or solicits user participation or feedback.
- A designer encourages users to provide feedback or suggestions.

4.
Concepts: offering suggestions, suggesting improvements
- A user or designer offers suggestions or ideas for improvement or new features.
- A designer or user suggests improving or refining a feature or design.

5.
Concepts: encouraging further engagement, encourage future discussion or questions
- A designer encourages a user to elaborate on their thoughts or provide more information.
- A designer encourages users to discuss or ask questions in the future.

6.
Concepts: self-help, self-answering
- User takes initiative to find a solution or help themselves.
- User answers their own question or resolves their own issue.

7.
Concepts: offer solution, offering solutions
- Offering solutions or suggestions to solve problems or meet user needs.
- A designer or user offers a solution to a problem or issue.

8.
Concepts: explain limitation, mentioning system limitations
- Explaining limitations or constraints of the software.
- Mentioning a limitation or constraint due to a system or platform.

9.
Concepts: platform-specific communication, provides platform-specific information
- Communicating information specific to a particular platform or device.
- Updates or information specific to a particular platform (e.g., Apple, Android, PC).

10.
Concepts: discussing usability, discussing software usability
- Discussing or considering the usability of the app or its features.
- A user or designer discusses the usability or user experience of the platform.

11.
Concepts: complexity explanation, discussing feature complexity
- Designer explains the complexity of a feature or task.
- Commenting on the complexity or difficulty of a task or feature.

12.
Concepts: provides technical details, technical clarification
- Designer provides details about a feature or functionality.
- A designer provides technical clarification or explanation about a feature or concept.

13.
Concepts: explains a feature, provides an example
- A designer explains a feature or functionality of the software.
- The designer provides an example of a feature's function or usage.

14.
Concepts: responds to feedback
- Designer reacts to user feedback or suggestions.
- Designers respond to user queries or engage with user comments, indicating active communication between designers and users.

15.
Concepts: sharing positive feedback
- Sharing positive feedback or praise about the Physics Lab.
- Users provide positive comments or feedback about the software or its features.
===
Here are the definitions for each code:

---
1.
Concepts: showing engagement, engaging in dialogue
Relationship: A designer's engagement leads to dialogue with users.
Criteria: A designer engages with users through conversation or dialogue.
Phrase: Engaging in conversation

2.
Concepts: seeking feedback, gathering user input, soliciting user input
Relationship: Seeking feedback involves gathering and soliciting user input.
Criteria: A designer asks users for opinions or feedback on a specific topic.
Phrase: Soliciting user feedback

3.
Concepts: inviting feedback, inviting user participation, encouraging feedback
Relationship: Inviting feedback and participation encourages users to provide feedback.
Criteria: A designer invites users to provide feedback or suggestions.
Phrase: Inviting user feedback

4.
Concepts: offering suggestions, suggesting improvements
Relationship: Users or designers offer suggestions for improvement.
Criteria: A user or designer suggests improving or refining a feature or design.
Phrase: Offering suggestions

5.
Concepts: encouraging further engagement, encourage future discussion or questions
Relationship: Encouraging further engagement promotes future discussion or questions.
Criteria: A designer encourages users to discuss or ask questions in the future.
Phrase: Encouraging further discussion

6.
Concepts: self-help, self-answering
Relationship: Users take initiative to find solutions through self-help.
Criteria: A user takes initiative to find a solution or help themselves.
Phrase: Taking self-initiative

7.
Concepts: offer solution, offering solutions
Relationship: Offering solutions involves providing answers to problems.
Criteria: A designer or user offers a solution to a problem or issue.
Phrase: Offering solutions

8.
Concepts: explain limitation, mentioning system limitations
Relationship: Explaining limitations involves mentioning system constraints.
Criteria: A designer explains limitations or constraints of the software.
Phrase: Explaining limitations

9.
Concepts: platform-specific communication, provides platform-specific information
Relationship: Platform-specific communication involves providing specific information.
Criteria: A designer communicates information specific to a particular platform or device.
Phrase: Providing platform-specific information

10.
Concepts: discussing usability, discussing software usability
Relationship: Discussing usability involves considering the user experience.
Criteria: A user or designer discusses the usability or user experience of the platform.
Phrase: Discussing usability

11.
Concepts: complexity explanation, discussing feature complexity
Relationship: Explaining complexity involves discussing the difficulty of a task or feature.
Criteria: A designer explains the complexity of a feature or task.
Phrase: Explaining complexity

12.
Concepts: provides technical details, technical clarification
Relationship: Providing technical details involves clarifying features or concepts.
Criteria: A designer provides technical clarification or explanation about a feature or concept.
Phrase: Providing technical clarification

13.
Concepts: explains a feature, provides an example
Relationship: Explaining a feature involves providing an example of its function.
Criteria: A designer explains a feature or functionality of the software.
Phrase: Explaining a feature

14.
Concepts: responds to feedback
Relationship: Responding to feedback involves reacting to user input.
Criteria: A designer reacts to user feedback or suggestions.
Phrase: Responding to feedback

15.
Concepts: sharing positive feedback
Relationship: Sharing positive feedback involves praising the Physics Lab.
Criteria: Users provide positive comments or feedback about the software or its features.
Phrase: Sharing positive feedback