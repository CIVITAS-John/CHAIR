You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (43 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
43. 
Concepts: {Repeat the input 43}
Relationship: {What is logical relationship between concepts in code 43, or N/A if not applicable}
Criteria: {Who did what, and how for code 43}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: high school teaching experience, indicating middle school teaching role
- A user mentions their teaching experience in high school or middle school.
- Statements indicate that the user is a teacher or related to teaching middle school.

2.
Concepts: establish credibility, sharing professional background
- A community member establishes their credibility by sharing their experience or background.
- Users share their professional background to establish credibility and context.

3.
Concepts: explaining question intentions, explaining planned actions
- Users or team members explain the reason behind a question or follow-up action.
- Team members provide reasons for planned actions or decisions and explain the plans or rationale behind a feature.

4.
Concepts: explain situation, providing contextual information
- A user explains a situation or context.
- Users provide context or background information when answering questions or explaining their interest or involvement.

5.
Concepts: confirming agreement, showing engagement and agreement
- Users or designers confirm or agree with a statement or question.
- Designers show engagement or agreement with a user's comment, and users acknowledge a designer's point or agree with design ideas.

6.
Concepts: agreement, confirmation/agreement of collaboration
- Users or developers express agreement with each other.
- A designer confirms or agrees to collaborate with the community.

7.
Concepts: exchanging greetings, greeting the community
- Users or designers greet each other and reciprocate greetings.
- Users or developers greet and welcome the community.

8.
Concepts: engaging in positive interactions, expressing gratitude and support
- Users interact positively and express gratitude within the community.
- Users express support, acknowledgment, appreciation, and encouragement within the community.

9.
Concepts: community response, expressing gratitude to the community
- Community members respond to each other, often with gratitude or additional information.
- Community members or team members express gratitude and close interactions with the community.

10.
Concepts: acknowledging community support, acknowledging community expertise
- Users or designers express or acknowledge community support.
- A designer or user acknowledges the expertise within the community.

11.
Concepts: providing user reviews, describing context of use, highlighting software effectiveness
- Users provide reviews and compare the software to other similar products.
- Users describe the specific contexts in which they use the software and its usability.
- Users comment on the effectiveness and practical aspects of the software in real-world settings.

12.
Concepts: practical application, discussing classroom application
- Instances where the practical application of the software in educational settings is discussed.
- Users illustrate the success and discuss the application of the software in classroom settings.

13.
Concepts: explaining team limitations, explaining technical constraints
- Designers mention the limitations or constraints of the development team and explain why certain issues cannot be resolved.
- Users or designers highlight or explain the technical constraints or limitations of the current software version.

14.
Concepts: confirming system compatibility, considering future compatibility
- Designers assure or confirm the software's compatibility with certain systems.
- Designers speculate on or consider the future compatibility of the software with different systems.

15.
Concepts: apologizing for inconvenience, acknowledge potential inconvenience
- Users or designers apologize for any inconvenience or the timing of their messages.
- Acknowledging potential inconvenience caused by the timing of messages.

16.
Concepts: mentioning technical issues, expressing frustration
- Users mention technical issues or limitations with their computer systems.
- Users express dissatisfaction or challenges with the system or technology and frustration with current limitations or issues.

17.
Concepts: reflection on experiences, sharing past experiences
- Developers reflect on their past experiences or challenges.
- A designer reflects on past experiences and shares previous solutions to issues.

18.
Concepts: show interest, inquiring about software access
- Users show interest in downloading or accessing the software.
- Users inquire about how to download or access the software.

19.
Concepts: seeking guidance, requesting user manual
- A user seeks guidance and justifies their request for a user manual.
- Users request a user manual and express the need for documentation.

20.
Concepts: inquiring about user role, clarifying user needs
- Developers inquire about the user's role and background to better understand their needs.
- Developers ask about user needs or preferences and follow up with questions to better understand specific requests.

21.
Concepts: inviting feature suggestions, soliciting suggestions and collaboration
- Designers invite users to suggest new features or improvements, and users or developers make such suggestions.
- Users or designers solicit suggestions or suggest collaboration for specific features.

22.
Concepts: requesting specific features, suggesting feature prioritization
- Users express specific needs or request specific features or functionalities to be added to the software.
- Users clarify their preferences or suggest prioritizing certain features or aspects of the software.

23.
Concepts: further suggestion, elaborating on suggestions
- A user provides a further suggestion or refinement to a previous comment.
- Users make suggestions or recommendations and elaborate on them.

24.
Concepts: elaborating on topics, encouraging user elaboration
- A designer elaborates on a topic or response, providing additional details.
- Designers encourage users to provide more details or ask questions and continue discussions in the future.

25.
Concepts: design discussion, interface layout decisions
- Discussions about design choices or feature implementations.
- Discussions about decisions related to the layout or design of the software interface.

26.
Concepts: discussing software usability, discussing user interface design
- Users or designers discuss the usability and visual and functional design of the software.
- A designer discusses aspects of the user interface and instructional design to enhance usability.

27.
Concepts: consulting the community, announcing future consultation
- Designers consult the community for opinions or advice before making decisions.
- Designers announce plans to consult the community and promise to invite feedback before starting new developments.

28.
Concepts: design refinement, planning product improvements, collaborative planning
- Designers discuss refining the design of the software.
- Designers discuss potential updates and plans for future improvements to the software.
- Designers and users collaboratively discussing and planning the development of the software.

29.
Concepts: outlining feature roadmap, planning feature expansion
- A team member lists features and outlines the sequence of tasks or features to be developed.
- A designer lists and explains features that will be added in the future and potential tasks for development.

30.
Concepts: discuss feature development, discussing ongoing research and development
- A designer discusses or shares information about current feature development efforts.
- A designer or team member describes ongoing research and development efforts related to the platform.

31.
Concepts: planning and reacting to feedback, acknowledging and planning feedback implementation
- Designers plan for iterative feedback and react to user feedback with plans for updates.
- Designers acknowledge user feedback and discuss plans to implement suggested features.

32.
Concepts: engaging in direct communication, following up on technical details
- Users and designers engage in back-and-forth dialogue to discuss features, updates, and feedback.
- Users and designers engage in follow-up discussions about technical issues or previously shared design information.

33.
Concepts: providing technical information, providing technical specifics
- A designer provides technical information or explains technical details related to the system.
- Users or designers provide specific details or technical information about systems, requirements, features, components, or compatibility.

34.
Concepts: expressing comprehension, understanding designers' situation
- A designer expresses understanding and asks for more details.
- A user shows understanding of the designers' situation or constraints.

35.
Concepts: addressing usability considerations, considering touch screen functionality
- Users or designers consider or address the usability of specific features to enhance user experience.
- Users or designers provide information or considerations related to touch screen functionality or hardware requirements.

36.
Concepts: inquiring about updates, engaging with development process
- Users inquire about the timeline or status of software updates.
- A user inquires about or expresses interest in the development process or upcoming updates.

37.
Concepts: announce feature updates, making general announcements
- Designers announce new features, updates, or bug fixes based on user input.
- Developers make general announcements regarding new features, components, adjustments, and bug fixes.

38.
Concepts: highlight progress, previewing updates
- A designer highlights the progress of an update.
- A designer provides a preview and shares visual updates with the community.

39.
Concepts: solution commitment, committing to improvements
- Designers commit to providing a solution or update.
- Designers promise to improve the software based on user feedback.

40.
Concepts: reassuring users, confirming ongoing updates
- Designers reassure users about upcoming features or updates and express gratitude or encouragement.
- A designer promises that updates are ongoing and assures users that a feature will be implemented or perfected in the future.

41.
Concepts: explaining design goals, explaining design rationale
- Designers explain the goals or principles behind the software design and its intention.
- A designer explains the rationale and underlying principles guiding the design and development of the product.

42.
Concepts: clarifying feature adjustments, clarifying version status
- A designer discusses adjustments to a feature and clarifies its existence.
- A designer clarifies which version is being discussed and the current status, often indicating it is in testing.

43.
Concepts: announcing updates, informing about updates
- Designers announce and provide details about new software versions to the community.
- Designers inform users about new updates or versions and provide instructions to help them understand and use the software effectively.
===
---
Definitions for each code (43 in total):
1.
Concepts: high school teaching experience, indicating middle school teaching role
Relationship: Both concepts relate to users mentioning their teaching roles and experiences.
Criteria: A user mentions their teaching experience in high school or middle school, indicating their role as a teacher.
Phrase: Mentioning teaching experience

2.
Concepts: establish credibility, sharing professional background
Relationship: Both concepts involve users sharing their professional background to establish credibility.
Criteria: A community member shares their professional background to establish credibility and context.
Phrase: Establishing credibility

3.
Concepts: explaining question intentions, explaining planned actions
Relationship: Both concepts involve users explaining the reasons behind their questions or planned actions.
Criteria: Users or team members explain the reason behind a question or planned action.
Phrase: Explaining intentions

4.
Concepts: explain situation, providing contextual information
Relationship: Both concepts involve users providing context or background information.
Criteria: A user explains a situation or provides contextual information when answering questions or explaining their involvement.
Phrase: Providing context

5.
Concepts: confirming agreement, showing engagement and agreement
Relationship: Both concepts involve users or designers confirming or showing agreement.
Criteria: Users or designers confirm or agree with a statement or question, showing engagement.
Phrase: Confirming agreement

6.
Concepts: agreement, confirmation/agreement of collaboration
Relationship: Both concepts involve expressing agreement, particularly in a collaborative context.
Criteria: Users or developers express agreement with each other, confirming collaboration.
Phrase: Agreeing to collaborate

7.
Concepts: exchanging greetings, greeting the community
Relationship: Both concepts involve users or designers greeting each other or the community.
Criteria: Users or designers greet each other and the community.
Phrase: Exchanging greetings

8.
Concepts: engaging in positive interactions, expressing gratitude and support
Relationship: Both concepts involve positive interactions and expressions of gratitude and support.
Criteria: Users interact positively, expressing gratitude and support within the community.
Phrase: Expressing gratitude and support

9.
Concepts: community response, expressing gratitude to the community
Relationship: Both concepts involve community members responding to each other with gratitude.
Criteria: Community members respond to each other, often expressing gratitude.
Phrase: Responding with gratitude

10.
Concepts: acknowledging community support, acknowledging community expertise
Relationship: Both concepts involve acknowledging the support and expertise within the community.
Criteria: Users or designers acknowledge the support and expertise of the community.
Phrase: Acknowledging community support and expertise

11.
Concepts: providing user reviews, describing context of use, highlighting software effectiveness
Relationship: All concepts involve users reviewing the software and describing its effectiveness in specific contexts.
Criteria: Users provide reviews, describe the context of use, and highlight the software's effectiveness.
Phrase: Reviewing software effectiveness

12.
Concepts: practical application, discussing classroom application
Relationship: Both concepts involve discussing the practical application of the software in educational settings.
Criteria: Users discuss the practical application of the software in classroom settings.
Phrase: Discussing classroom application

13.
Concepts: explaining team limitations, explaining technical constraints
Relationship: Both concepts involve explaining limitations or constraints, whether team-related or technical.
Criteria: Designers explain the limitations or constraints of the development team or the software.
Phrase: Explaining limitations and constraints

14.
Concepts: confirming system compatibility, considering future compatibility
Relationship: Both concepts involve discussing the software's compatibility with systems.
Criteria: Designers confirm current system compatibility and consider future compatibility.
Phrase: Discussing system compatibility

15.
Concepts: apologizing for inconvenience, acknowledge potential inconvenience
Relationship: Both concepts involve acknowledging and apologizing for potential inconvenience.
Criteria: Users or designers apologize for and acknowledge potential inconvenience.
Phrase: Apologizing for inconvenience

16.
Concepts: mentioning technical issues, expressing frustration
Relationship: Both concepts involve users mentioning and expressing frustration with technical issues.
Criteria: Users mention technical issues and express frustration with system limitations.
Phrase: Expressing frustration with technical issues

17.
Concepts: reflection on experiences, sharing past experiences
Relationship: Both concepts involve reflecting on and sharing past experiences.
Criteria: Developers reflect on and share their past experiences and solutions.
Phrase: Reflecting on past experiences

18.
Concepts: show interest, inquiring about software access
Relationship: Both concepts involve users showing interest and inquiring about accessing the software.
Criteria: Users show interest in and inquire about how to access the software.
Phrase: Inquiring about software access

19.
Concepts: seeking guidance, requesting user manual
Relationship: Both concepts involve users seeking guidance and requesting a user manual.
Criteria: Users seek guidance and request a user manual, expressing the need for documentation.
Phrase: Requesting user manual

20.
Concepts: inquiring about user role, clarifying user needs
Relationship: Both concepts involve developers inquiring about user roles to clarify their needs.
Criteria: Developers inquire about user roles and needs to better understand specific requests.
Phrase: Clarifying user needs

21.
Concepts: inviting feature suggestions, soliciting suggestions and collaboration
Relationship: Both concepts involve inviting and soliciting feature suggestions and collaboration.
Criteria: Designers invite and solicit feature suggestions and collaboration from users.
Phrase: Soliciting feature suggestions

22.
Concepts: requesting specific features, suggesting feature prioritization
Relationship: Both concepts involve users requesting and prioritizing specific features.
Criteria: Users request specific features and suggest prioritizing certain aspects of the software.
Phrase: Requesting and prioritizing features

23.
Concepts: further suggestion, elaborating on suggestions
Relationship: Both concepts involve users providing and elaborating on suggestions.
Criteria: Users provide further suggestions and elaborate on previous comments.
Phrase: Elaborating on suggestions

24.
Concepts: elaborating on topics, encouraging user elaboration
Relationship: Both concepts involve elaborating on topics and encouraging further user input.
Criteria: Designers elaborate on topics and encourage users to provide more details.
Phrase: Encouraging elaboration

25.
Concepts: design discussion, interface layout decisions
Relationship: Both concepts involve discussions about design choices and interface layout decisions.
Criteria: Discussions focus on design choices and decisions related to the software interface layout.
Phrase: Discussing design and layout

26.
Concepts: discussing software usability, discussing user interface design
Relationship: Both concepts involve discussing the usability and design of the software interface.
Criteria: Users or designers discuss the usability and design aspects of the software interface.
Phrase: Discussing usability and design

27.
Concepts: consulting the community, announcing future consultation
Relationship: Both concepts involve consulting the community and announcing plans for future consultation.
Criteria: Designers consult the community for opinions and announce plans for future consultation.
Phrase: Consulting the community

28.
Concepts: design refinement, planning product improvements, collaborative planning
Relationship: All concepts involve discussing design refinement, planning improvements, and collaborative planning.
Criteria: Designers discuss refining the design, planning improvements, and collaborating with users.
Phrase: Planning design improvements

29.
Concepts: outlining feature roadmap, planning feature expansion
Relationship: Both concepts involve outlining and planning the development of new features.
Criteria: A team member outlines the feature roadmap and plans for feature expansion.
Phrase: Outlining feature roadmap

30.
Concepts: discuss feature development, discussing ongoing research and development
Relationship: Both concepts involve discussing current and ongoing feature development and research.
Criteria: A designer discusses current feature development and ongoing research efforts.
Phrase: Discussing feature development

31.
Concepts: planning and reacting to feedback, acknowledging and planning feedback implementation
Relationship: Both concepts involve planning and reacting to user feedback.
Criteria: Designers plan for and react to user feedback, discussing implementation plans.
Phrase: Planning feedback implementation

32.
Concepts: engaging in direct communication, following up on technical details
Relationship: Both concepts involve direct communication and follow-up on technical details.
Criteria: Users and designers engage in direct communication and follow-up discussions about technical details.
Phrase: Engaging in direct communication

33.
Concepts: providing technical information, providing technical specifics
Relationship: Both concepts involve providing technical information and specifics.
Criteria: Users or designers provide technical information and specifics about the system.
Phrase: Providing technical information

34.
Concepts: expressing comprehension, understanding designers' situation
Relationship: Both concepts involve expressing and understanding the designers' situation.
Criteria: A designer expresses understanding and asks for more details, while a user shows understanding of the designers' constraints.
Phrase: Expressing understanding

35.
Concepts: addressing usability considerations, considering touch screen functionality
Relationship: Both concepts involve addressing usability and touch screen functionality considerations.
Criteria: Users or designers address usability considerations and touch screen functionality.
Phrase: Addressing usability considerations

36.
Concepts: inquiring about updates, engaging with development process
Relationship: Both concepts involve users inquiring about updates and engaging with the development process.
Criteria: Users inquire about updates and express interest in the development process.
Phrase: Inquiring about updates

37.
Concepts: announce feature updates, making general announcements
Relationship: Both concepts involve announcing new features and making general announcements.
Criteria: Designers announce new features and make general announcements about updates.
Phrase: Announcing updates

38.
Concepts: highlight progress, previewing updates
Relationship: Both concepts involve highlighting progress and previewing updates.
Criteria: A designer highlights progress and provides a preview of updates.
Phrase: Previewing updates

39.
Concepts: solution commitment, committing to improvements
Relationship: Both concepts involve committing to providing solutions and improvements.
Criteria: Designers commit to providing solutions and improving the software.
Phrase: Committing to improvements

40.
Concepts: reassuring users, confirming ongoing updates
Relationship: Both concepts involve reassuring users and confirming ongoing updates.
Criteria: Designers reassure users about upcoming features and confirm ongoing updates.
Phrase: Reassuring users

41.
Concepts: explaining design goals, explaining design rationale
Relationship: Both concepts involve explaining the goals and rationale behind the design.
Criteria: Designers explain the goals and rationale behind the software design.
Phrase: Explaining design rationale

42.
Concepts: clarifying feature adjustments, clarifying version status
Relationship: Both concepts involve clarifying feature adjustments and version status.
Criteria: A designer clarifies feature adjustments and the status of the current version.
Phrase: Clarifying feature adjustments

43.
Concepts: announcing updates, informing about updates
Relationship: Both concepts involve announcing and informing users about updates.
Criteria: Designers announce and inform users about new software updates and versions.
Phrase: Informing about updates
---