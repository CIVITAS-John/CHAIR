You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (17 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
17. 
Concepts: {Repeat the input 17}
Relationship: {What is logical relationship between concepts in code 17, or N/A if not applicable}
Criteria: {Who did what, and how for code 17}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: sharing prior programming experiences, reflecting on extensive programming experience
- Experts share prior programming experiences and recognize the transfer of general programming skills.
- Experts have extensive programming experience and a strong background in computer science.

2.
Concepts: emphasizing expertise, expertise in error interpretation
- Participants emphasize the need for expertise in debugging AI errors.
- Experts recognize the need for expertise to understand and fix errors.
- Emphasizing the need for expertise in error interpretation

3.
Concepts: recognizing limitations of formal documentation, identifying knowledge gaps and recognizing oral tradition
- Recognizing the limitations of formal documentation and the importance of oral tradition.
- Users identify knowledge gaps in documentation and recognize oral tradition.

4.
Concepts: emphasizes oral tradition, reflecting on the importance of oral tradition, valuing human experience
- Emphasizes the importance of oral tradition in knowledge sharing.
- Users reflect on the importance of oral tradition and undocumented knowledge.
- The participant values human experience, recognizing the importance of oral tradition and undocumented knowledge.

5.
Concepts: reflecting on knowledge generation, reflecting on fragmented learning and knowledge generation
- Users reflect on knowledge generation and sustenance.
- Users reflect on fragmented learning and knowledge generation.

6.
Concepts: struggling with netlogo concepts and seeking ai support, recognizing the need for ai support in understanding scope and context
- Users struggle with NetLogo concepts, particularly "scope," and seek AI support.
- Experts recognize the need for AI support in understanding scope and context in NetLogo.

7.
Concepts: considering optimal input terms, utilizing ai for netlogo development
- Users consider optimal input terms, including "in NetLogo" commands, for AI-driven interfaces.
- Users utilize AI-driven interfaces for NetLogo development and seek guidance.

8.
Concepts: noting chatlogo limitations, noting ai limitations in netlogo
- Experts note the limitations of ChatLogo, particularly in error handling.
- Experts note the limitations of AI-driven interfaces in NetLogo, including functionality limitations.

9.
Concepts: using ai for syntax recall, relies on ai for syntax support
- Participants use AI for syntax recall and seek assistance with code recall.
- Participants rely on AI for syntax support and seek specific syntax information.

10.
Concepts: incremental coding, suggesting incremental code checking and coding
- The user suggests incremental coding as a best practice.
- Users suggest incremental code checking and coding.

11.
Concepts: code improvement opportunities, recognizing the need for improvement
- The participant realizes the need for code improvement.
- The participant recognizes the need for improvement, highlighting areas where the tool can be enhanced, and suggests the need for external feedback mechanisms.

12.
Concepts: advocating for linting features, expressing need for advanced error detection
- Participants express a desire for and advocate for features that can identify conceptual errors in NetLogo code.
- Participants suggest a feature for NetLogo to detect conceptual errors.

13.
Concepts: critiquing error messages, seeking more informative feedback
- Participants critique and criticize NetLogo's error messages, suggesting improvements.
- The participant seeks more helpful feedback from NetLogo's error messages.

14.
Concepts: reading the code and comments, demonstrating problem-solving skills through code reading
- Reading and understanding code and comments
- Users demonstrate problem-solving skills through code reading and debugging.

15.
Concepts: appreciating ai-generated solutions
- Users value AI-generated solutions despite requiring human effort to understand.
- Participants appreciate AI-generated solutions as better than no help.

16.
Concepts: acknowledging a learning curve
- The participant acknowledges a learning curve in using AI-driven interfaces.
- The participant acknowledges a learning curve due to non-expert-friendly design and suggests that the current design may not be optimized for expert users.

17.
Concepts: avoiding frustration
- Interviewee tries to avoid frustration.
- Participants avoid frustration with complex tasks, switching to simpler ones.
===
Here are the definitions for each code:

---
1.
Concepts: sharing prior programming experiences, reflecting on extensive programming experience
Relationship: Prior programming experiences are reflected upon, highlighting the significance of extensive programming experience.
Criteria: Experts share and reflect on their prior programming experiences, recognizing the transfer of general programming skills.
Phrase: Share prior programming experiences.

2.
Concepts: emphasizing expertise, expertise in error interpretation
Relationship: Expertise is emphasized as necessary for error interpretation.
Criteria: Participants emphasize the need for expertise in debugging AI errors, recognizing the importance of understanding and fixing errors.
Phrase: Emphasize expertise in error interpretation.

3.
Concepts: recognizing limitations of formal documentation, identifying knowledge gaps and recognizing oral tradition
Relationship: Limitations of formal documentation are recognized, leading to the identification of knowledge gaps and the importance of oral tradition.
Criteria: Users recognize the limitations of formal documentation, identifying knowledge gaps and valuing oral tradition.
Phrase: Recognize limitations of formal documentation.

4.
Concepts: emphasizes oral tradition, reflecting on the importance of oral tradition, valuing human experience
Relationship: Oral tradition is emphasized, reflecting on its importance and valuing human experience.
Criteria: Users emphasize and reflect on the importance of oral tradition, valuing human experience and undocumented knowledge.
Phrase: Emphasize oral tradition.

5.
Concepts: reflecting on knowledge generation, reflecting on fragmented learning and knowledge generation
Relationship: Knowledge generation is reflected upon, highlighting fragmented learning.
Criteria: Users reflect on knowledge generation and sustenance, recognizing fragmented learning.
Phrase: Reflect on knowledge generation.

6.
Concepts: struggling with netlogo concepts and seeking ai support, recognizing the need for ai support in understanding scope and context
Relationship: Struggling with NetLogo concepts leads to seeking AI support, recognizing the need for AI support in understanding scope and context.
Criteria: Users struggle with NetLogo concepts, seeking AI support, and recognizing the need for AI support in understanding scope and context.
Phrase: Seek AI support for NetLogo concepts.

7.
Concepts: considering optimal input terms, utilizing ai for netlogo development
Relationship: Optimal input terms are considered, leading to the utilization of AI for NetLogo development.
Criteria: Users consider optimal input terms, utilizing AI-driven interfaces for NetLogo development and seeking guidance.
Phrase: Utilize AI for NetLogo development.

8.
Concepts: noting chatlogo limitations, noting ai limitations in netlogo
Relationship: Limitations of ChatLogo and AI-driven interfaces in NetLogo are noted.
Criteria: Experts note the limitations of ChatLogo and AI-driven interfaces in NetLogo, including functionality limitations.
Phrase: Note AI limitations in NetLogo.

9.
Concepts: using ai for syntax recall, relies on ai for syntax support
Relationship: AI is used for syntax recall, leading to reliance on AI for syntax support.
Criteria: Participants use AI for syntax recall, relying on AI for syntax support and seeking specific syntax information.
Phrase: Rely on AI for syntax support.

10.
Concepts: incremental coding, suggesting incremental code checking and coding
Relationship: Incremental coding is suggested, leading to incremental code checking and coding.
Criteria: Users suggest incremental coding as a best practice, advocating for incremental code checking and coding.
Phrase: Suggest incremental coding.

11.
Concepts: code improvement opportunities, recognizing the need for improvement
Relationship: Code improvement opportunities are recognized, highlighting the need for improvement.
Criteria: Participants recognize the need for code improvement, highlighting areas where the tool can be enhanced.
Phrase: Recognize the need for code improvement.

12.
Concepts: advocating for linting features, expressing need for advanced error detection
Relationship: Advocating for linting features expresses the need for advanced error detection.
Criteria: Participants advocate for features that can identify conceptual errors in NetLogo code, expressing the need for advanced error detection.
Phrase: Advocate for linting features.

13.
Concepts: critiquing error messages, seeking more informative feedback
Relationship: Critiquing error messages leads to seeking more informative feedback.
Criteria: Participants critique NetLogo's error messages, seeking more helpful feedback.
Phrase: Critique error messages.

14.
Concepts: reading the code and comments, demonstrating problem-solving skills through code reading
Relationship: Reading code and comments demonstrates problem-solving skills.
Criteria: Users read and understand code and comments, demonstrating problem-solving skills through code reading and debugging.
Phrase: Demonstrate problem-solving skills.

15.
Concepts: appreciating ai-generated solutions
Relationship: AI-generated solutions are appreciated, despite requiring human effort to understand.
Criteria: Users appreciate AI-generated solutions, recognizing their value despite limitations.
Phrase: Appreciate AI-generated solutions.

16.
Concepts: acknowledging a learning curve
Relationship: A learning curve is acknowledged, highlighting the need for user-friendly design.
Criteria: Participants acknowledge a learning curve in using AI-driven interfaces, highlighting the need for user-friendly design.
Phrase: Acknowledge a learning curve.

17.
Concepts: avoiding frustration
Relationship: Frustration is avoided, leading to a preference for simpler tasks.
Criteria: Interviewees try to avoid frustration, switching to simpler tasks to avoid complex ones.
Phrase: Avoid frustration.