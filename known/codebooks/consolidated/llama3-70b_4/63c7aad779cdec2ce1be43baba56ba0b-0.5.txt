You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (25 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
25. 
Concepts: {Repeat the input 25}
Relationship: {What is logical relationship between concepts in code 25, or N/A if not applicable}
Criteria: {Who did what, and how for code 25}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: future update, promise future improvements
- The designer mentions a future update or development.
- Designers promise to perfect or improve a feature in the future.

2.
Concepts: designer-user communication, developer-user communication
- How the designers communicate with and respond to users in the online message group.
- The way the developers communicate with users and respond to their needs and requests.

3.
Concepts: feature implementation, acknowledgment and implementation
- Designers actively working on implementing or improving features based on user feedback.
- Designers acknowledging user feedback and discussing plans to implement suggested features.

4.
Concepts: response to feature request, feature request invitation
- The designer responds to a feature request or suggestion.
- Designers invite users to suggest new features or improvements.

5.
Concepts: soliciting user input, accepting user suggestions and requests
- Designers actively seek and encourage user input, suggestions, or feedback.
- Designers accept a user's suggestion or request.

6.
Concepts: user experience feedback request, sharing information for design
- The designer asks for feedback about user experience.
- The user shares information or insights that can inform design decisions.

7.
Concepts: explaining the intention, expression of understanding
- The user or designer explains the intention behind a question or request.
- The designer expresses comprehension of the user's request.

8.
Concepts: addressing concerns, confirms that reason
- Designers respond to users' concerns or worries.
- Designers acknowledge or confirm users' reasons or concerns.

9.
Concepts: building rapport, engage in community interaction
- Users or designers engage in friendly and supportive interactions.
- Users and designers engage in social interactions, building relationships, and establishing a sense of community.

10.
Concepts: design updates, improving the usability of the software
- Changes or improvements made to the software by the designers.
- Designers make changes to enhance the user's interaction with the software.

11.
Concepts: teacher identification, confirming teacher identity
- Identifying users who are teachers, potentially for tailoring the platform to educational needs.
- Designers verify or confirm a user's profession or role (e.g., teacher).

12.
Concepts: inquiring about teachers' needs, seeking help and input from teachers
- A developer asks about teachers' needs or preferences.
- Designers ask teachers for help or input on a specific topic.

13.
Concepts: facilitating learning, active learning and problem-solving
- The extent to which the software facilitates learning and understanding of physics concepts.
- The potential of the software's features to support active learning and problem-solving in physics.

14.
Concepts: educational content, educational relevance
- Discussions about the educational value and content of the application.
- Discussions about how the software aligns with educational needs and curricula.

15.
Concepts: simulation effect, software performance
- Reflecting on the effectiveness of the software's simulation capabilities in engaging students.
- The discussion around the software's simulation effects and its performance in the classroom setting.

16.
Concepts: engage in design discussions, transparent developer discussion
- Designers engage in a discussion about design decisions or ideas.
- Designers engage in transparent discussions about their design decisions or processes.

17.
Concepts: decision-making, explaining design rationale
- Designers explain their decision-making process or priorities.
- Designers explain the rationale behind a development decision.

18.
Concepts: prioritizing content, prioritizing tasks or features, development priorities
- Designers prioritize the development of different content areas.
- Designers prioritize features or updates, explaining their reasoning.
- Designers sharing information about the order in which features or sections will be developed.

19.
Concepts: interface design, interaction design
- Instances where the design of the interface is discussed or shown.
- The design of the interface and interactions between users and Physics Lab.

20.
Concepts: providing resources, resources sharing
- Designers provide resources or updates to the community.
- Designers sharing resources, such as images or tools, to facilitate learning or understanding.

21.
Concepts: team limitations, explain limitations, design constraints
- The designer mentions limitations or constraints of the team.
- Designers explain the limitations or constraints of the current version or feature.
- Designers acknowledging or working within design constraints, such as usability or technical limitations.

22.
Concepts: ensuring software compatibility, addressing compatibility issues
- Designers consider software compatibility.
- Designers providing information about system requirements and addressing compatibility concerns.

23.
Concepts: export functionality, export/import functions
- Discussing the need for an export function to save or import experiments.
- The discussion around the need for export and import functions to facilitate the use of the software in classroom settings.

24.
Concepts: comparison, compare to similar apps
- A user makes a comparison between two things.
- Users compare the application to similar software.

25.
Concepts: context awareness, usability and context of use
- Discussions that show awareness of the specific contexts in which the software is used.
- Discussions about how the software is used in different contexts and its usability.
===
Here are the definitions for each code:

---
1.
Concepts: future update, promise future improvements
Relationship: The designer's promise is a direct response to the user's request for a future update.
Criteria: Designers mention or promise future updates or improvements to the software.
Phrase: Promise future enhancements.

2.
Concepts: designer-user communication, developer-user communication
Relationship: N/A
Criteria: Designers or developers communicate with users in the online message group.
Phrase: Engage in user communication.

3.
Concepts: feature implementation, acknowledgment and implementation
Relationship: The acknowledgment of user feedback leads to the implementation of new features.
Criteria: Designers acknowledge user feedback and implement or plan to implement suggested features.
Phrase: Implement user-suggested features.

4.
Concepts: response to feature request, feature request invitation
Relationship: The response to a feature request is a direct result of the invitation to suggest new features.
Criteria: Designers respond to user feature requests or invite users to suggest new features.
Phrase: Respond to feature requests.

5.
Concepts: soliciting user input, accepting user suggestions and requests
Relationship: Soliciting user input leads to accepting user suggestions and requests.
Criteria: Designers solicit and accept user input, suggestions, or feedback.
Phrase: Solicit user input.

6.
Concepts: user experience feedback request, sharing information for design
Relationship: The request for user experience feedback is used to inform design decisions.
Criteria: Designers ask for user experience feedback to inform design decisions.
Phrase: Request user experience feedback.

7.
Concepts: explaining the intention, expression of understanding
Relationship: Explaining the intention behind a question or request leads to an expression of understanding.
Criteria: Users or designers explain the intention behind a question or request, leading to understanding.
Phrase: Explain intentions.

8.
Concepts: addressing concerns, confirms that reason
Relationship: Addressing concerns confirms the user's reason or concern.
Criteria: Designers address user concerns or worries, confirming their reasons.
Phrase: Address user concerns.

9.
Concepts: building rapport, engage in community interaction
Relationship: Building rapport leads to engaging in community interactions.
Criteria: Users or designers engage in friendly and supportive interactions, building relationships.
Phrase: Build community rapport.

10.
Concepts: design updates, improving the usability of the software
Relationship: Design updates lead to improving the usability of the software.
Criteria: Designers make changes to enhance the user's interaction with the software.
Phrase: Implement design updates.

11.
Concepts: teacher identification, confirming teacher identity
Relationship: Identifying teachers leads to confirming their profession or role.
Criteria: Designers identify and confirm users who are teachers.
Phrase: Identify teacher users.

12.
Concepts: inquiring about teachers' needs, seeking help and input from teachers
Relationship: Inquiring about teachers' needs leads to seeking help and input from them.
Criteria: Designers ask about teachers' needs or preferences, seeking help and input.
Phrase: Seek teacher input.

13.
Concepts: facilitating learning, active learning and problem-solving
Relationship: The software's features facilitate learning and problem-solving.
Criteria: The software supports active learning and problem-solving in physics.
Phrase: Facilitate learning.

14.
Concepts: educational content, educational relevance
Relationship: Educational content is relevant to educational needs and curricula.
Criteria: Discussions focus on the educational value and content of the application.
Phrase: Discuss educational content.

15.
Concepts: simulation effect, software performance
Relationship: The simulation effect is related to the software's performance in the classroom.
Criteria: The discussion focuses on the software's simulation effects and performance in the classroom.
Phrase: Discuss simulation effects.

16.
Concepts: engage in design discussions, transparent developer discussion
Relationship: Engaging in design discussions leads to transparent developer discussions.
Criteria: Designers engage in transparent discussions about design decisions or ideas.
Phrase: Engage in transparent design discussions.

17.
Concepts: decision-making, explaining design rationale
Relationship: Decision-making involves explaining the design rationale.
Criteria: Designers explain their decision-making process or priorities.
Phrase: Explain design decisions.

18.
Concepts: prioritizing content, prioritizing tasks or features, development priorities
Relationship: Prioritizing content, tasks, or features is related to development priorities.
Criteria: Designers prioritize the development of different content areas, tasks, or features.
Phrase: Prioritize development tasks.

19.
Concepts: interface design, interaction design
Relationship: Interface design involves interaction design.
Criteria: The design of the interface and interactions between users and Physics Lab is discussed.
Phrase: Design the interface.

20.
Concepts: providing resources, resources sharing
Relationship: Providing resources involves sharing resources.
Criteria: Designers provide resources or updates to the community.
Phrase: Provide resources.

21.
Concepts: team limitations, explain limitations, design constraints
Relationship: Team limitations lead to explaining design constraints.
Criteria: Designers mention limitations or constraints of the team or current version.
Phrase: Explain limitations.

22.
Concepts: ensuring software compatibility, addressing compatibility issues
Relationship: Ensuring software compatibility involves addressing compatibility issues.
Criteria: Designers consider software compatibility and address compatibility concerns.
Phrase: Ensure software compatibility.

23.
Concepts: export functionality, export/import functions
Relationship: Export functionality involves export and import functions.
Criteria: The discussion focuses on the need for export and import functions.
Phrase: Discuss export functionality.

24.
Concepts: comparison, compare to similar apps
Relationship: Comparison involves comparing to similar apps.
Criteria: Users compare the application to similar software.
Phrase: Compare to similar apps.

25.
Concepts: context awareness, usability and context of use
Relationship: Context awareness involves considering usability and context of use.
Criteria: Discussions show awareness of the specific contexts in which the software is used.
Phrase: Consider context of use.