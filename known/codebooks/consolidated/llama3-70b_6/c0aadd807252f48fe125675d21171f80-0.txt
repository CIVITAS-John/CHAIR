You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (11 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
11. 
Concepts: {Repeat the input 11}
Relationship: {What is logical relationship between concepts in code 11, or N/A if not applicable}
Criteria: {Who did what, and how for code 11}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: highlight progress, providing status updates
- A designer highlights or emphasizes the progress made on a specific task or feature.
- Designers provide information about the progress or status of a task or feature.

2.
Concepts: future planning, planning long-term goals
- Mentioning or discussing future plans or tasks
- A designer discusses long-term plans and project tasks and discusses long-term goals and potential future plans.

3.
Concepts: confirming future updates, promising future development
- A designer confirms future updates and previews upcoming features and plans feature development.
- A designer promises to develop an app or feature and consult with users in the future and shares potential future directions and possibilities.

4.
Concepts: introducing new features, explaining features
- Designers introduce or explain new features or improvements.
- Designers provide details about a feature or functionality and explain or clarify the functionality of an existing feature.

5.
Concepts: compatibility answer, discussing compatibility
- A designer or user answers a question about compatibility.
- A designer discusses or checks system compatibility issues and assures compatibility with specific devices or systems.

6.
Concepts: explaining limitations, considering hardware limitations and mentioning system constraints
- A designer explains limitations or constraints of the platform or development team and considers technical requirements or limitations.
- A user considers or discusses hardware limitations or constraints.

7.
Concepts: seeking clarification, gathering context to clarify user needs
- A designer seeks confirmation or clarification from users, requesting clarification on specific points or features, asking follow-up questions about usage scenarios.
- Designers ask questions to gather more context or information to understand user needs or requirements.

8.
Concepts: implementing user feedback, acknowledging and implementing feedback
- Designers collect, consider, and implement user feedback.
- Designers acknowledge or respond to feedback or suggestions and discuss plans to implement suggested features.

9.
Concepts: transparent developer discussion, encouraging open communication
- Transparent discussions or debates among designers about software development or design.
- Direct interactions between designers and users to discuss features, updates, and feedback, encouraging open communication.

10.
Concepts: express amusement, expressing emotions and personality
- A designer expresses amusement or playfulness.
- Users or designers express themselves in a playful or emotive way and express themselves through emotions.

11.
Concepts: requesting guidance, requesting technical support
- Users request documentation, guidance, or support on using the software.
- Designers or users seek or provide technical support or guidance.
===
Here are the definitions for each code:

---
1.
Concepts: highlight progress, providing status updates
Relationship: The concepts are related as they both involve sharing information about the current state of a task or feature.
Criteria: Designers provide information about the progress or status of a task or feature.
Phrase: Providing status updates

2.
Concepts: future planning, planning long-term goals
Relationship: The concepts are related as they both involve thinking about and discussing future tasks and goals.
Criteria: Designers discuss long-term plans and project tasks.
Phrase: Planning long-term goals

3.
Concepts: confirming future updates, promising future development
Relationship: The concepts are related as they both involve committing to future actions or developments.
Criteria: Designers confirm future updates and promise to develop an app or feature.
Phrase: Promising future development

4.
Concepts: introducing new features, explaining features
Relationship: The concepts are related as they both involve sharing information about features.
Criteria: Designers introduce or explain new features or improvements.
Phrase: Introducing new features

5.
Concepts: compatibility answer, discussing compatibility
Relationship: The concepts are related as they both involve addressing compatibility issues.
Criteria: Designers answer questions about compatibility and discuss system compatibility issues.
Phrase: Discussing compatibility

6.
Concepts: explaining limitations, considering hardware limitations and mentioning system constraints
Relationship: The concepts are related as they both involve discussing constraints or limitations.
Criteria: Designers explain limitations or constraints of the platform or development team.
Phrase: Explaining limitations

7.
Concepts: seeking clarification, gathering context to clarify user needs
Relationship: The concepts are related as they both involve seeking more information to understand user needs.
Criteria: Designers seek confirmation or clarification from users to understand user needs.
Phrase: Seeking clarification

8.
Concepts: implementing user feedback, acknowledging and implementing feedback
Relationship: The concepts are related as they both involve responding to user feedback.
Criteria: Designers collect, consider, and implement user feedback.
Phrase: Implementing user feedback

9.
Concepts: transparent developer discussion, encouraging open communication
Relationship: The concepts are related as they both involve open and honest communication.
Criteria: Designers engage in transparent discussions or debates about software development or design.
Phrase: Encouraging open communication

10.
Concepts: express amusement, expressing emotions and personality
Relationship: The concepts are related as they both involve expressing emotions or personality.
Criteria: Designers or users express themselves in a playful or emotive way.
Phrase: Expressing emotions

11.
Concepts: requesting guidance, requesting technical support
Relationship: The concepts are related as they both involve seeking help or assistance.
Criteria: Users request documentation, guidance, or support on using the software.
Phrase: Requesting technical support