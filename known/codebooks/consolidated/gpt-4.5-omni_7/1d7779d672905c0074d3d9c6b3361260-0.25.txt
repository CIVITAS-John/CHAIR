You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (23 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
23. 
Concepts: {Repeat the input 23}
Relationship: {What is logical relationship between concepts in code 23, or N/A if not applicable}
Criteria: {Who did what, and how for code 23}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: suggestion elaboration, encouraging elaboration
- Elaborating on a suggestion or idea.
- Designers elaborate on specific points and encourage users to provide more details.

2.
Concepts: explaining design rationale, justifying suggestions with rationale
- Designers explain the rationale and intentions guiding the software's design.
- Users and designers provide rationale and justifications for their actions or suggestions.

3.
Concepts: appreciating community support, expressing appreciation and support
- Users express appreciation for the community's support and interactions.
- Users express appreciation, gratitude, and support to build a positive community atmosphere.

4.
Concepts: express emotions, using non-verbal communication
- Users and designers use expressive language or emojis to convey emotions.
- Users engage with the conversation using emojis or other non-verbal symbols to express emotions or reactions.

5.
Concepts: discuss classroom application, sharing experiences and successes
- Users discuss the application of the software in classroom settings.
- Users share their experiences and classroom successes using the software.

6.
Concepts: discuss usability, describe context of use
- Users discuss the usability and user-friendliness of the software.
- Users describe how the software is used in different contexts and its usability.

7.
Concepts: share user reviews, compare to similar apps
- Users provide reviews or opinions about the software.
- Users compare the software to other similar applications and provide comparative feedback.

8.
Concepts: implementing feedback, incorporate feedback
- User feedback is acknowledged and incorporated into design decisions.
- A designer indicates they will incorporate user feedback into future updates.

9.
Concepts: gather user input, accepting suggestions and requests
- Designers gather and inquire about user input for future software iterations.
- Designers accept user suggestions and requests for future updates.

10.
Concepts: solicit user feedback, seek community input
- Designers seek and solicit feedback or suggestions from the community.
- Designers consult the community and seek opinions or feedback before proceeding with tasks.

11.
Concepts: build rapport, showing engagement and reciprocation
- Building rapport or friendly interactions between designer and users.
- Designers show engagement and reciprocate greetings from users.

12.
Concepts: shared experiences and support, sharing positive feedback and encouragement
- Users and designers sharing experiences and supporting each other in using and improving the software.
- Users and designers share positive feedback and provide encouragement about the software or ideas.

13.
Concepts: confirming collaborative design, acknowledging mutual understanding
- Users and designers agree with design ideas and confirm collaborative efforts.
- Designers and users acknowledge understanding of each other's situations and constraints.

14.
Concepts: engage in real-time communication, encouraging open communication and interaction
- Designers engage in real-time, direct interactions with users to discuss features and feedback.
- Designers encourage open communication and user interaction for feedback and suggestions.

15.
Concepts: download instructions, providing access and download information
- Designers provide instructions on how to download the software.
- Designers provide information on how to access or download software and updates.

16.
Concepts: feature guidance, user guidance
- A designer provides guidance on how to use a specific feature.
- A designer provides detailed instructions or guidance on how to use the software and its features.

17.
Concepts: provide feature details, explaining version details
- Designers provide detailed technical information about features and updates.
- Designers explain the type of version and provide detailed information about specific updates.

18.
Concepts: announcing updates, notify new version availability
- Designers communicate with the community to announce new releases and updates.
- A designer informs the community about the availability of a new version.

19.
Concepts: engaging with development and updates, respond to developer's earlier information on feature development
- Users engage with the development process and inquire about upcoming updates.
- Users respond positively to information about feature development.

20.
Concepts: explain feature importance, discuss feature implementation
- Designers explain the need and importance of certain features.
- A designer discusses and explains the implementation and functionality of features.

21.
Concepts: speculate on compatibility, discussing system compatibility
- A designer speculates on the compatibility of the software with older systems.
- Designers confirm and discuss the software's compatibility with different systems.

22.
Concepts: discuss project management, discussing future updates and priorities
- Designers discuss project management and the prioritization of feature development.
- Team members discuss update planning, future updates, and outline development priorities.

23.
Concepts: sharing and discussing future plans, discussing research and development efforts
- Designers share and discuss future development plans and interests.
- Designers discuss their current research and development efforts.
===
---
Definitions for each code (23 in total):
1.
Concepts: suggestion elaboration, encouraging elaboration
Relationship: Both concepts involve expanding on ideas and encouraging further detail.
Criteria: Designers elaborate on specific points and encourage users to provide more details.
Phrase: Encouraging detailed suggestions

2.
Concepts: explaining design rationale, justifying suggestions with rationale
Relationship: Both concepts involve providing reasons and justifications for design choices.
Criteria: Designers and users explain the rationale and intentions guiding their suggestions and actions.
Phrase: Justifying design choices

3.
Concepts: appreciating community support, expressing appreciation and support
Relationship: Both concepts involve expressing gratitude and fostering a supportive community.
Criteria: Users express appreciation and gratitude to build a positive community atmosphere.
Phrase: Expressing community appreciation

4.
Concepts: express emotions, using non-verbal communication
Relationship: Both concepts involve conveying emotions through language or symbols.
Criteria: Users and designers use expressive language or emojis to convey emotions.
Phrase: Conveying emotions non-verbally

5.
Concepts: discuss classroom application, sharing experiences and successes
Relationship: Both concepts involve discussing practical applications and sharing outcomes.
Criteria: Users discuss the application of the software in classroom settings and share their experiences.
Phrase: Sharing classroom applications

6.
Concepts: discuss usability, describe context of use
Relationship: Both concepts involve evaluating and describing how the software is used.
Criteria: Users discuss the usability of the software and describe its use in different contexts.
Phrase: Evaluating usability in context

7.
Concepts: share user reviews, compare to similar apps
Relationship: Both concepts involve providing feedback and making comparisons.
Criteria: Users provide reviews and compare the software to similar applications.
Phrase: Comparing user reviews

8.
Concepts: implementing feedback, incorporate feedback
Relationship: Both concepts involve integrating user feedback into design decisions.
Criteria: Designers acknowledge and incorporate user feedback into future updates.
Phrase: Integrating user feedback

9.
Concepts: gather user input, accepting suggestions and requests
Relationship: Both concepts involve collecting and considering user input for improvements.
Criteria: Designers gather and accept user suggestions and requests for future updates.
Phrase: Collecting user input

10.
Concepts: solicit user feedback, seek community input
Relationship: Both concepts involve actively seeking feedback from the community.
Criteria: Designers solicit feedback and seek opinions from the community.
Phrase: Seeking community feedback

11.
Concepts: build rapport, showing engagement and reciprocation
Relationship: Both concepts involve fostering positive interactions and engagement.
Criteria: Designers build rapport and reciprocate greetings from users.
Phrase: Building rapport with users

12.
Concepts: shared experiences and support, sharing positive feedback and encouragement
Relationship: Both concepts involve sharing experiences and providing support.
Criteria: Users and designers share experiences and provide positive feedback and encouragement.
Phrase: Sharing support and feedback

13.
Concepts: confirming collaborative design, acknowledging mutual understanding
Relationship: Both concepts involve mutual agreement and understanding in design efforts.
Criteria: Designers and users confirm collaborative efforts and acknowledge mutual understanding.
Phrase: Confirming collaborative efforts

14.
Concepts: engage in real-time communication, encouraging open communication and interaction
Relationship: Both concepts involve promoting direct and open interactions.
Criteria: Designers engage in real-time interactions and encourage open communication.
Phrase: Promoting real-time interaction

15.
Concepts: download instructions, providing access and download information
Relationship: Both concepts involve providing information on how to access the software.
Criteria: Designers provide instructions on how to download and access the software.
Phrase: Providing download instructions

16.
Concepts: feature guidance, user guidance
Relationship: Both concepts involve offering instructions on software usage.
Criteria: Designers provide detailed guidance on how to use the software and its features.
Phrase: Offering feature guidance

17.
Concepts: provide feature details, explaining version details
Relationship: Both concepts involve explaining technical details about the software.
Criteria: Designers provide detailed information about features and updates.
Phrase: Explaining feature details

18.
Concepts: announcing updates, notify new version availability
Relationship: Both concepts involve informing the community about new software versions.
Criteria: Designers announce new releases and inform the community about version availability.
Phrase: Announcing software updates

19.
Concepts: engaging with development and updates, respond to developer's earlier information on feature development
Relationship: Both concepts involve user engagement with the development process.
Criteria: Users engage with development updates and respond to information about feature development.
Phrase: Engaging with development updates

20.
Concepts: explain feature importance, discuss feature implementation
Relationship: Both concepts involve discussing the significance and implementation of features.
Criteria: Designers explain the importance and discuss the implementation of features.
Phrase: Discussing feature importance

21.
Concepts: speculate on compatibility, discussing system compatibility
Relationship: Both concepts involve discussing software compatibility with different systems.
Criteria: Designers speculate on and discuss the software's compatibility with various systems.
Phrase: Discussing system compatibility

22.
Concepts: discuss project management, discussing future updates and priorities
Relationship: Both concepts involve planning and prioritizing future updates.
Criteria: Team members discuss project management and outline future updates and priorities.
Phrase: Planning future updates

23.
Concepts: sharing and discussing future plans, discussing research and development efforts
Relationship: Both concepts involve discussing future development and research efforts.
Criteria: Designers share and discuss future development plans and current research efforts.
Phrase: Discussing future development plans
---