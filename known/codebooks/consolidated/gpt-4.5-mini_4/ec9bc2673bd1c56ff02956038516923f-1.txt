You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (30 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
30. 
Concepts: {Repeat the input 30}
Relationship: {What is logical relationship between concepts in code 30, or N/A if not applicable}
Criteria: {Who did what, and how for code 30}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: expression of interest, connect through shared interests
- Shares personal interests related to the software and its subject matter.
- Designers relate software elements to community interests and share personal insights that align with those interests.

2.
Concepts: propose potential solutions, initiate design discussions
- Designers facilitate discussions regarding user problems and propose potential solutions.
- Designers propose new ideas, discuss existing features, invite user suggestions, and provide feedback on future software iterations.

3.
Concepts: gathering community input, eliciting community feedback
- Designers gather insights from users to inform future software developments.
- Designers actively seek community input regarding desired features and enhancements.

4.
Concepts: engage with community, clarify community roles
- A designer interacts with users to build rapport and gather insights about their needs.
- Designers engage with users to understand their roles and users identify their contributions to community dynamics.

5.
Concepts: seek collaborative input, planning for iterative feedback
- Designers seek input from group members and aim to confirm collaborative viewpoints before progressing with developments.
- Designers outline plans for gathering further user input before moving to the next project phase.

6.
Concepts: inviting ongoing questions, facilitate user inquiries
- Designers invite users to ask further questions and engage in discussions.
- Users pose questions and interact to seek information and assistance from designers or peers.

7.
Concepts: facilitate open dialogue, user feedback and communication
- Designers emphasize the importance of fostering open communication and encouraging users to voice any issues during discussions.
- Designers encourage open dialogue about difficulties users may face, fostering a supportive environment.

8.
Concepts: highlight progress, update progress and improvements
- The designer indicates the extent of updates being made to the software.
- Designers provide status updates and communicate significant improvements related to ongoing development efforts.

9.
Concepts: clarify future enhancements, explain feature development needs
- Designers indicate plans for future enhancements and confirm future features set to be implemented in updates.
- Designers articulate the necessity for ongoing feature development and refinement of functionalities.

10.
Concepts: share update timelines, manage version updates
- Designers detail timelines for upcoming software updates and communicate scheduled updates to users.
- Designers communicate schedules for upcoming releases and discuss the steps involved in software updates.

11.
Concepts: clarify version information, communicate version details
- Designers explain version types and provide insights into the technical artifacts associated with the software.
- Designers provide comprehensive details and update notes related to the latest software version and technical updates.

12.
Concepts: define development priorities, prioritize project management
- Designers outline focus areas for future product development while identifying planned features and considerations.
- Designers outline the order in which various project components will be prioritized and managed through the development process.

13.
Concepts: provide user support, offer ongoing support
- Designers offer users technical support and guidance to facilitate effective software usage.
- Designers extend assistance and assure users they can seek support for issues encountered in the community.

14.
Concepts: offer solutions, resolve usability concerns
- Designers provide practical solutions or guidance for common user challenges.
- Designers directly address and resolve user usability concerns while highlighting support options.

15.
Concepts: provide user guidance, provide feature guidance
- Designers provide detailed updates and instructions to help users understand and effectively use the software.
- Designers deliver step-by-step usage instructions and explicit guidance on utilizing specific software features.

16.
Concepts: confirm compatibility assurances, clarify compatibility requirements
- Developers assure users that features will work with specified compatibility considerations and confirm system requirements.
- Designers outline hardware specifications and share relevant information about platform-specific software compatibility.

17.
Concepts: design challenges, address development challenges
- Issues and obstacles faced by designers during the development process.
- Designers indicate complexity leading to release delays and explain the implications of these complexities.

18.
Concepts: address version limitations, acknowledge limitations and user experience, address technical limitations
- Designers explain limitations regarding software compatibility and clarify reasons for functionalities.
- Designers acknowledge both software aspects that may fall short of user needs and specific user experiences with those limitations.
- Designers discuss technical factors affecting usability and address inherent limitations within the software.

19.
Concepts: engage through emojis, expressing emotions non-verbally
- Users utilize emojis in conversations to express feelings or engage effectively during discussions.
- Users share emotions and sentiments using non-verbal methods like emojis.

20.
Concepts: engaging positively, express community support
- Users express sentimental agreement and gratitude affirming bonds triggering positive experiences shared among community participants.
- Users express gratitude and support, fostering a positive community atmosphere and acknowledging shared resources.

21.
Concepts: confirm teacher identity, explore user identities
- Designers inquire about users' teaching-related professional backgrounds.
- Designers ask users about their backgrounds and users share their qualifications in response.

22.
Concepts: story sharing, share personal experiences
- Users share narrative accounts relating to incidents that pertain to the use of the software in educational settings.
- Users recount experiences and provide background on teaching to contribute to collective community discussions.

23.
Concepts: addressing school needs, contextualize communal resources
- Users discuss their schools' needs and initiatives that interact with technology usage.
- Users describe the broader educational context related to technology implemented in schools, informing community conversations.

24.
Concepts: educational tools, request specific features
- A user makes educational tool requests indicating specific functionality that would aid in teaching.
- Users express a desire for specific software functionalities to enhance their teaching and exam preparation.

25.
Concepts: share user reviews, sharing positive user feedback
- Users share their experiences and evaluations regarding software effectiveness and usability.
- Users articulate their favorable experiences and the software's positive impact on their practice.

26.
Concepts: suggesting practical use cases, propose user-driven enhancements
- Users propose practical applications with justifications to enhance functionality.
- Users provide suggestions along with reasoning and propose enhancements for improved software usability.

27.
Concepts: highlight ideal use, align development with needs
- Designers describe software components that meet educational needs.
- Designers align software development with identified educational needs based on user feedback.

28.
Concepts: asking technical questions, clarify software functionalities
- Users present technical questions regarding software to identify potential challenges or seek help.
- Users ask questions to clarify features or software versions for better comprehension.

29.
Concepts: contextualize queries, offer context in discussions
- Users share context for their requests to improve understanding within discussions.
- Users provide succinct affirmative responses while establishing context for their interest in ongoing discussions.

30.
Concepts: encourage user elaboration
- Designers encourage users to provide more details about their needs and inquire for clarification.
- Designers address user inquiries and provide clarification to enhance understanding through follow-up questions.
===
---
Definitions for each code (30 in total):

1.  
Concepts: expression of interest, connect through shared interests  
Relationship: Community members connect by sharing personal interests related to the software, fostering engagement.  
Criteria: Users express their interests and relate them to the community's context by sharing insights that resonate with others.  
Phrase: Share personal interests to connect.

2.  
Concepts: propose potential solutions, initiate design discussions  
Relationship: Designers lead discussions by offering innovative solutions to user problems while inviting additional insights.  
Criteria: Designers facilitate discussions by proposing new ideas and encouraging user feedback on features to address needs.  
Phrase: Propose solutions and initiate discussions.

3.  
Concepts: gathering community input, eliciting community feedback  
Relationship: Designers collect user feedback to guide future software improvements, highlighting the importance of community contributions.  
Criteria: Designers actively seek community input by gathering insights to inform development priorities and features.  
Phrase: Gather input and elicit feedback.

4.  
Concepts: engage with community, clarify community roles  
Relationship: Designers build relationships with users to better understand their identities and contributions within the community.  
Criteria: Designers interact with users to clarify their roles and establish a deeper rapport to inform their contributions.  
Phrase: Engage and clarify community roles.

5.  
Concepts: seek collaborative input, planning for iterative feedback  
Relationship: Designers emphasize collaboration by outlining plans to ensure user contributions are woven into development phases.  
Criteria: Designers confirm collaborative viewpoints while planning for ongoing user feedback before advancing projects.  
Phrase: Seek input and plan for feedback.

6.  
Concepts: inviting ongoing questions, facilitate user inquiries  
Relationship: Designers foster an environment that encourages communication and inquiry among users, enhancing community interaction.  
Criteria: Designers invite users to pose questions, facilitating discussions for better understanding and support.  
Phrase: Invite questions and facilitate inquiries.

7.  
Concepts: facilitate open dialogue, user feedback and communication  
Relationship: Designers create a safe space for users to share feedback openly, promoting a constructive dialogue about software issues.  
Criteria: Designers emphasize the importance of open communication during discussions, encouraging users to voice concerns.  
Phrase: Facilitate dialogue and feedback.

8.  
Concepts: highlight progress, update progress and improvements  
Relationship: Designers keep users informed about software updates, demonstrating transparency in development efforts.  
Criteria: Designers communicate the extent of updates and significant improvements being made to the software.  
Phrase: Highlight progress and updates.

9.  
Concepts: clarify future enhancements, explain feature development needs  
Relationship: Designers outline both current and future development aspirations, clarifying user needs for enhancements.  
Criteria: Designers articulate plans for future improvements while explaining necessity in ongoing feature development.  
Phrase: Clarify enhancements and explain needs.

10.  
Concepts: share update timelines, manage version updates  
Relationship: Designers effectively communicate the timeline of updates, ensuring users are aware of release schedules.  
Criteria: Designers detail timelines for upcoming software updates and engage users in discussions regarding the update strategy.  
Phrase: Share timelines and manage updates.

11.  
Concepts: clarify version information, communicate version details  
Relationship: Designers provide essential information about software versions, allowing users to stay informed about technical aspects.  
Criteria: Designers explain version types and share update notes related to the software.  
Phrase: Clarify and communicate version details.

12.  
Concepts: define development priorities, prioritize project management  
Relationship: Designers strategically outline development priorities, guiding project management decisions based on user feedback.  
Criteria: Designers identify focus areas for product development and outline project management priorities.  
Phrase: Define priorities and manage projects.

13.  
Concepts: provide user support, offer ongoing support  
Relationship: Designers ensure users have access to assistance, emphasizing a commitment to ongoing support.  
Criteria: Designers offer technical support and guidance to users for effective software usage.  
Phrase: Provide and offer support.

14.  
Concepts: offer solutions, resolve usability concerns  
Relationship: Designers address usability challenges head-on by providing practical solutions to enhance user experience.  
Criteria: Designers provide solutions to common user challenges and resolve usability concerns through guidance.  
Phrase: Offer solutions and resolve concerns.

15.  
Concepts: provide user guidance, provide feature guidance  
Relationship: Designers ensure users understand how to utilize the software effectively with clear guidance.  
Criteria: Designers deliver updates and detailed instructions helping users navigate and utilize software features.  
Phrase: Provide guidance and instructions.

16.  
Concepts: confirm compatibility assurances, clarify compatibility requirements  
Relationship: Designers assure users of the software's functional compatibility while clarifying any requirements.  
Criteria: Designers outline system requirements and compatibility considerations to ensure appropriate use.  
Phrase: Confirm assurances and clarify requirements.

17.  
Concepts: design challenges, address development challenges  
Relationship: Designers discuss and confront complexities encountered in the development process, explaining their implications.  
Criteria: Designers articulate design challenges faced during development and the impact they have on timelines.  
Phrase: Address development challenges.

18.  
Concepts: address version limitations, acknowledge limitations and user experience, address technical limitations  
Relationship: Designers recognize the limitations of the software in relation to user experience and address technical constraints.  
Criteria: Designers explain software limitations and acknowledge the impact on user satisfaction and experience.  
Phrase: Address limitations and acknowledge experiences.

19.  
Concepts: engage through emojis, expressing emotions non-verbally  
Relationship: Users use emojis to communicate feelings and enhance engagement in discussions, providing emotional context.  
Criteria: Users leverage non-verbal methods, like emojis, to express sentiments during community interactions.  
Phrase: Engage and express emotions.

20.  
Concepts: engaging positively, express community support  
Relationship: Users cultivate a supportive atmosphere by expressing gratitude and fostering camaraderie within the community.  
Criteria: Users affirm bonds and acknowledge shared resources, contributing to a positive community culture.  
Phrase: Engage positively and express support.

21.  
Concepts: confirm teacher identity, explore user identities  
Relationship: Designers seek to understand users’ backgrounds to better support their individual needs within the educational context.  
Criteria: Designers inquire about users' professional backgrounds to explore their identities in the community.  
Phrase: Confirm and explore identities.

22.  
Concepts: story sharing, share personal experiences  
Relationship: Users recount relevant experiences that shape community discussions, enriching collective knowledge.  
Criteria: Users share narrative accounts of their experiences related to software usage in educational settings.  
Phrase: Share stories and experiences.

23.  
Concepts: addressing school needs, contextualize communal resources  
Relationship: Users engage in discussions identifying their school's needs to shape communal resource conversations effectively.  
Criteria: Users describe broader educational contexts linked to technology implementation, informing community discussions.  
Phrase: Address needs and contextualize resources.

24.  
Concepts: educational tools, request specific features  
Relationship: Users express their needs for educational tools to enhance functionality in teaching contexts.  
Criteria: Users make requests for specific software features that could assist in their teaching or exam preparation efforts.  
Phrase: Request tools and specific features.

25.  
Concepts: share user reviews, sharing positive user feedback  
Relationship: Users contribute to community knowledge by sharing their experiences, which reinforce the software's value.  
Criteria: Users articulate their experiences and provide favorable feedback regarding the software's effectiveness.  
Phrase: Share reviews and positive feedback.

26.  
Concepts: suggesting practical use cases, propose user-driven enhancements  
Relationship: Users offer practical applications that justify enhancements, contributing meaningfully to software development.  
Criteria: Users propose suggestions for improvements with reasoning based on practical use cases.  
Phrase: Suggest use cases and propose enhancements.

27.  
Concepts: highlight ideal use, align development with needs  
Relationship: Designers identify how software elements meet user needs, ensuring alignment between development and user feedback.  
Criteria: Designers align development efforts with educational needs identified by users in community discussions.  
Phrase: Highlight use and align development.

28.  
Concepts: asking technical questions, clarify software functionalities  
Relationship: Users pose technical inquiries that enhance understanding of software capabilities and potential challenges.  
Criteria: Users ask questions to clarify features and functionalities, seeking improved comprehension.  
Phrase: Ask questions and clarify functionalities.

29.  
Concepts: contextualize queries, offer context in discussions  
Relationship: Users provide context which aids in understanding the nature of their requests and enhances dialogue within discussions.  
Criteria: Users share context for their inquiries, enriching community discussions with relevant background information.  
Phrase: Contextualize queries and offer context.

30.  
Concepts: encourage user elaboration  
Relationship: Designers actively promote user input by fostering in-depth discussions that clarify user needs.  
Criteria: Designers prompt users to elaborate on their needs and inquiries, enhancing understanding through follow-up questions.  
Phrase: Encourage elaboration and clarify needs.
---