You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: platform clarification, inquiring about platform information
- A user asks for clarification about the platform or its features.
- Users specify or inquire about a particular platform or device.

2.
Concepts: providing information, responding to questions
- Information is provided in response to a question or inquiry.
- A direct answer is provided to a question or inquiry.

3.
Concepts: providing context, adding context
- Users provide context or background information about their situation or needs, providing additional information to the conversation.
- Users or designers provide additional details or criteria to support an answer, seeking or providing context to better understand a situation or issue.

4.
Concepts: offer resource, offering resources
- Designer offers to upload a resource or file.
- Designers or users offer to provide resources or support.

5.
Concepts: providing access solutions, providing download instructions
- The designer or user provides information about accessing resources, such as downloading software.
- Designers or community members provide instructions on how to download or access a resource.

6.
Concepts: acknowledging limitations, discussing system limitations
- Designers acknowledge or explain limitations or technical constraints to the community.
- Designers or users discuss or mention limitations or constraints of a system, platform, or software.

7.
Concepts: student engagement, highlighting student engagement
- Comments or feedback about the engagement or interest of students in using the software.
- Users highlight or describe students' engagement or positive responses.

8.
Concepts: user reviews and feedback, sharing user experiences
- Sharing reviews or opinions about a product or service.
- Users share their experiences or opinions about using the software.

9.
Concepts: explaining design rationale, discussing design principles
- Designers explain the reasoning or design philosophy behind the app or feature, discussing the underlying principles guiding development.
- Designers discuss design principles or instructional design, explaining the underlying approaches guiding the development of the software.

10.
Concepts: provide reasons, explaining intentions
- Users or designers explain the reason behind a suggestion or feature request.
- Users or designers explain the intention or purpose behind a question or feature, clarifying the reasoning or goals.

11.
Concepts: sharing development plans
- Designers share plans or goals for future updates or developments with the community.
- Designers discuss or describe long-term plans or future directions for the project or feature.

12.
Concepts: explaining new features
- Designers explain new features, functionalities, or components to the community.
- Users or designers provide explanations or answers to questions or concerns, clarifying or addressing user queries.
===
Here are the definitions for each code:

---
1.
Concepts: platform clarification, inquiring about platform information
Relationship: The concepts are related as they both involve seeking or providing information about the platform.
Criteria: Users ask for or provide clarification about the platform or its features.
Phrase: Seeking platform information.

2.
Concepts: providing information, responding to questions
Relationship: The concepts are related as they both involve providing answers to questions or inquiries.
Criteria: Information is provided in response to a question or inquiry.
Phrase: Providing answers.

3.
Concepts: providing context, adding context
Relationship: The concepts are related as they both involve adding additional information to support understanding.
Criteria: Users provide context or background information about their situation or needs.
Phrase: Providing context.

4.
Concepts: offer resource, offering resources
Relationship: The concepts are related as they both involve offering support or materials.
Criteria: Designers or users offer to provide resources or support.
Phrase: Offering resources.

5.
Concepts: providing access solutions, providing download instructions
Relationship: The concepts are related as they both involve providing information about accessing resources.
Criteria: Designers or users provide information about accessing resources, such as downloading software.
Phrase: Providing access solutions.

6.
Concepts: acknowledging limitations, discussing system limitations
Relationship: The concepts are related as they both involve discussing constraints or limitations.
Criteria: Designers acknowledge or explain limitations or technical constraints to the community.
Phrase: Acknowledging limitations.

7.
Concepts: student engagement, highlighting student engagement
Relationship: The concepts are related as they both involve discussing student interest or participation.
Criteria: Users highlight or describe students' engagement or positive responses.
Phrase: Highlighting student engagement.

8.
Concepts: user reviews and feedback, sharing user experiences
Relationship: The concepts are related as they both involve sharing opinions or experiences.
Criteria: Users share their experiences or opinions about using the software.
Phrase: Sharing user experiences.

9.
Concepts: explaining design rationale, discussing design principles
Relationship: The concepts are related as they both involve explaining the underlying principles or philosophy.
Criteria: Designers explain the reasoning or design philosophy behind the app or feature.
Phrase: Explaining design rationale.

10.
Concepts: provide reasons, explaining intentions
Relationship: The concepts are related as they both involve explaining the reasoning or purpose behind an action.
Criteria: Users or designers explain the reason behind a suggestion or feature request.
Phrase: Explaining intentions.

11.
Concepts: sharing development plans
Relationship: N/A
Criteria: Designers share plans or goals for future updates or developments with the community.
Phrase: Sharing development plans.

12.
Concepts: explaining new features
Relationship: N/A
Criteria: Designers explain new features, functionalities, or components to the community.
Phrase: Explaining new features.