You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: design principles, explain design philosophy
- Designer explains the principles or philosophy behind the design.
- The underlying principles and approaches guiding the design and development of the product.

2.
Concepts: give examples of feature, give example of feature's functions
- Developer provides examples or demonstrations of a feature or functionality.
- The designer provides an example or demonstration of a software feature's functions.

3.
Concepts: feature introduction, explain functionality
- Designer introduces or explains the functions of a feature.
- Designer explains how a feature or function works or what it does.

4.
Concepts: outdated technology, highlight outdated technology
- Outdated technology is being discussed or referred to.
- Users highlight outdated technology or infrastructure.

5.
Concepts: feature complexity, explain complexity
- A designer mentions the complexity of a feature or task.
- Designer explains the complexity or challenges of implementing a feature.

6.
Concepts: explain current version's limitation, talk about limitation of the solution
- Designer explains the limitations or constraints of the current version.
- A designer mentions the limitations or constraints of a solution or feature.

7.
Concepts: pc version inquiry, pc version discussion
- A user inquires about the PC version of the software.
- User discusses or asks about the PC version of the software.

8.
Concepts: confirm compatibility, system compatibility confirmation
- Confirm or validate compatibility with specific software, hardware, or systems.
- A designer confirms the compatibility of the software with a specific system or platform.

9.
Concepts: software comparison, comparison to other software
- A user compares the Physics Lab's software with other software.
- User makes a comparison between Physics Lab and other software.

10.
Concepts: context of use, usability and context of use
- Instances where users describe the specific contexts in which they use the software.
- Discussions about how the software is used in different contexts and its usability.

11.
Concepts: user experience, user experience and impact
- Instances where users share their experiences or opinions about using the software.
- Users sharing their experiences and the impact of the software on their teaching or learning.

12.
Concepts: software usability, usability and practicality
- A user comments on the usability or practicality of the Physics Lab software.
- User comments on the ease of use and practicality of the software.

13.
Concepts: informal communication
- Instances where the tone of the conversation is casual or informal, indicating the nature of the community's communication style.
- Casual and non-technical interactions among community members, including humor and personal remarks.

14.
Concepts: future planning
- Mention of future tasks or actions to be taken
- A designer plans or discusses future updates or features.

15.
Concepts: context provision
- Providing context or explanation for a specific need
- Providing context or background information about a topic or issue.

16.
Concepts: user response
- Input and suggestions provided by users regarding the design and functionality of the product.
- Instances where users provide feedback or ask questions that influence the design process.
- Instances where users provide feedback or suggestions to improve the software.
- Instances where users provide suggestions or feedback on features and functionalities.
- Instances where users provide feedback or ask questions about the app's development and updates.
- User provides feedback on their experience using the app.

17.
Concepts: user engagement
- Instances where users actively participate in the conversation, showing interest or involvement in the community.
- Instances where users engage with designers through questions, feedback, or expressions of anticipation.
- Instances where users actively participate in the conversation, showing interest and involvement.

18.
Concepts: prioritization
- Statements indicating the order in which tasks or features will be developed.
- Mentioning or discussing the order or priorities of features or tasks.

19.
Concepts: acknowledgment
- Acknowledgment or expression of gratitude
- A user acknowledges or expresses gratitude for provided resources.

20.
Concepts: designer responsiveness
- Instances where designers respond to user queries or engage with user comments, indicating active communication between designers and users.
- Instances where designers respond to user inquiries, suggestions, or feedback.
- Instances where designers respond to user feedback or suggestions.
- Instances where designers acknowledge user feedback and discuss potential solutions or updates.
- Designers responding to user feedback and addressing their concerns or suggestions.
- Instances where designers respond to user queries or feedback, showing attentiveness to user needs.

21.
Concepts: politeness
- Polite language or apologetic tone
- User displays polite behavior, such as excusing themselves.

22.
Concepts: encourage participatory design
- Instances where the community contributes to the design and development of the Physics Lab by providing suggestions or feedback that influence the development process.
- Instances where designers seek or consider user input in the design and development process.
- Instances where users are invited to participate in the design process or provide input.
- Instances where users and designers collaboratively discuss features and usability, reflecting a user-centered design approach.
- The involvement of users in the design and development process, contributing their insights and needs.
- Encouragement by designers for users to contribute ideas, feedback, and suggestions for the development of Physics Lab.
- Active involvement of users in the design process to ensure the product meets their needs and preferences.
- The involvement of users in the design process to ensure the product meets their needs and preferences.
- Instances where users and designers collaboratively discuss or work on design improvements.

23.
Concepts: promote community engagement
- Instances where members of the community actively participate in discussions, ask questions, or provide feedback.
- Instances where users or designers engage in discussions that foster community interaction and participation.
- Active participation and interaction among community members, including both users and designers.
- Efforts made by designers to actively involve and communicate with the user community.

24.
Concepts: iterative development
- Instances where designers discuss updates, new features, or bug fixes.
- The process of repeatedly refining and improving a product based on feedback and testing.
- The process of continuously improving the product based on feedback and testing.
- Instances where the design process is described as iterative, with ongoing optimizations and updates.

25.
Concepts: development update
- Information shared by designers about the current status, updates, and future plans for the Physics Lab software.
- Sharing information about development updates

26.
Concepts: follow-up question
- A follow-up question is being asked to clarify or gather more information.
- A user follows up on design information or seeks clarification.

27.
Concepts: community building
- Users and designers engage in social interactions, such as thanking or joking.
- A designer encourages community engagement, invites feedback, or fosters a sense of community.

28.
Concepts: user feedback integration
- Instances where user feedback is acknowledged and incorporated into the design process.
- Instances where user feedback is actively sought and incorporated into the design process.

29.
Concepts: technical constraints
- Instances where technical limitations or requirements are discussed.
- Instances where limitations or constraints of the software are mentioned.

30.
Concepts: role identification
- Instances where users or designers identify their roles, which can help understand the community structure and the roles within it.
- Instances where participants identify their roles or expertise, contributing to the problem-solving process.
- Identifying roles within the community, such as designers, teachers, or other users.

31.
Concepts: resources sharing
- Instances where designers or users share resources, such as download links, development plans, or announcements.
- Information about where and how to access resources, files, or downloads related to Physics Lab.
- Instances where users or designers share files, images, or other resources with the community.
- A designer or user shares resources or access to the Physics Lab's online community.

32.
Concepts: update confirmation
- Users confirm or announce updates or changes.
- User confirms completion of an update or task.
===
Here are the definitions for each code:

---
1.
Concepts: design principles, explain design philosophy
Relationship: The design principles are explained to provide an understanding of the underlying philosophy.
Criteria: Designers explain the principles guiding the design and development of the product.
Phrase: Explaining design principles

2.
Concepts: give examples of feature, give example of feature's functions
Relationship: The examples provided demonstrate the functions of a feature.
Criteria: Developers provide examples or demonstrations of a feature or functionality.
Phrase: Providing feature examples

3.
Concepts: feature introduction, explain functionality
Relationship: The introduction of a feature is accompanied by an explanation of its functions.
Criteria: Designers introduce or explain the functions of a feature.
Phrase: Introducing features

4.
Concepts: outdated technology, highlight outdated technology
Relationship: The outdated technology is discussed to highlight its limitations.
Criteria: Users highlight outdated technology or infrastructure.
Phrase: Discussing outdated technology

5.
Concepts: feature complexity, explain complexity
Relationship: The complexity of a feature is explained to provide an understanding of its development.
Criteria: Designers explain the complexity or challenges of implementing a feature.
Phrase: Explaining feature complexity

6.
Concepts: explain current version's limitation, talk about limitation of the solution
Relationship: The limitations of the current version are explained to provide an understanding of its constraints.
Criteria: Designers explain the limitations or constraints of the current version.
Phrase: Explaining version limitations

7.
Concepts: pc version inquiry, pc version discussion
Relationship: The inquiry about the PC version leads to a discussion about its features or functionalities.
Criteria: A user inquires about the PC version of the software.
Phrase: Inquiring about PC version

8.
Concepts: confirm compatibility, system compatibility confirmation
Relationship: The compatibility of the software is confirmed to ensure its functionality.
Criteria: Confirm or validate compatibility with specific software, hardware, or systems.
Phrase: Confirming compatibility

9.
Concepts: software comparison, comparison to other software
Relationship: The software is compared to others to highlight its unique features or functionalities.
Criteria: A user compares the Physics Lab's software with other software.
Phrase: Comparing software

10.
Concepts: context of use, usability and context of use
Relationship: The context of use is discussed to understand the usability of the software.
Criteria: Instances where users describe the specific contexts in which they use the software.
Phrase: Discussing context of use

11.
Concepts: user experience, user experience and impact
Relationship: The user's experience is shared to highlight the impact of the software.
Criteria: Users sharing their experiences and the impact of the software on their teaching or learning.
Phrase: Sharing user experience

12.
Concepts: software usability, usability and practicality
Relationship: The usability of the software is discussed in terms of its practicality.
Criteria: User comments on the usability or practicality of the Physics Lab software.
Phrase: Commenting on usability

13.
Concepts: informal communication
Relationship: N/A
Criteria: Casual and non-technical interactions among community members, including humor and personal remarks.
Phrase: Engaging in informal communication

14.
Concepts: future planning
Relationship: N/A
Criteria: A designer plans or discusses future updates or features.
Phrase: Planning for the future

15.
Concepts: context provision
Relationship: N/A
Criteria: Providing context or background information about a topic or issue.
Phrase: Providing context

16.
Concepts: user response
Relationship: N/A
Criteria: User provides feedback or suggestions to improve the software.
Phrase: Providing user feedback

17.
Concepts: user engagement
Relationship: N/A
Criteria: Instances where users actively participate in the conversation, showing interest and involvement.
Phrase: Engaging with users

18.
Concepts: prioritization
Relationship: N/A
Criteria: Mentioning or discussing the order or priorities of features or tasks.
Phrase: Prioritizing tasks

19.
Concepts: acknowledgment
Relationship: N/A
Criteria: A user acknowledges or expresses gratitude for provided resources.
Phrase: Expressing gratitude

20.
Concepts: designer responsiveness
Relationship: N/A
Criteria: Instances where designers respond to user queries or engage with user comments.
Phrase: Responding to users

21.
Concepts: politeness
Relationship: N/A
Criteria: User displays polite behavior, such as excusing themselves.
Phrase: Displaying politeness

22.
Concepts: encourage participatory design
Relationship: N/A
Criteria: Instances where users and designers collaboratively discuss features and usability, reflecting a user-centered design approach.
Phrase: Encouraging participatory design

23.
Concepts: promote community engagement
Relationship: N/A
Criteria: Efforts made by designers to actively involve and communicate with the user community.
Phrase: Promoting community engagement

24.
Concepts: iterative development
Relationship: N/A
Criteria: The process of repeatedly refining and improving a product based on feedback and testing.
Phrase: Engaging in iterative development

25.
Concepts: development update
Relationship: N/A
Criteria: Information shared by designers about the current status, updates, and future plans for the Physics Lab software.
Phrase: Sharing development updates

26.
Concepts: follow-up question
Relationship: N/A
Criteria: A user follows up on design information or seeks clarification.
Phrase: Asking follow-up questions

27.
Concepts: community building
Relationship: N/A
Criteria: Users and designers engage in social interactions, such as thanking or joking.
Phrase: Building community

28.
Concepts: user feedback integration
Relationship: N/A
Criteria: Instances where user feedback is acknowledged and incorporated into the design process.
Phrase: Integrating user feedback

29.
Concepts: technical constraints
Relationship: N/A
Criteria: Instances where technical limitations or requirements are discussed.
Phrase: Discussing technical constraints

30.
Concepts: role identification
Relationship: N/A
Criteria: Instances where users or designers identify their roles, which can help understand the community structure and the roles within it.
Phrase: Identifying roles

31.
Concepts: resources sharing
Relationship: N/A
Criteria: Information about where and how to access resources, files, or downloads related to Physics Lab.
Phrase: Sharing resources

32.
Concepts: update confirmation
Relationship: N/A
Criteria: Users confirm or announce updates or changes.
Phrase: Confirming updates

Let me know if you need further clarification or refinement!