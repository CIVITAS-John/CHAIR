You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: seeking help, seek guidance
- Users seek help or guidance.
- Users seek guidance, support, or clarification on using the software

2.
Concepts: user assistance request, requesting technical assistance
- A request for assistance or guidance from the user.
- Users request technical assistance or support with using a specific feature or platform.

3.
Concepts: requesting user manual, requesting community resources
- Users request or ask about a user manual or guide for the platform.
- Users request or mention community resources, such as user manuals.

4.
Concepts: requesting resources, justification of request
- Users request additional resources, such as documentation or downloads.
- User justifies their request for a manual or resource.

5.
Concepts: highlight practicality, suggest practical use case
- A user or designer highlights the practicality of a software or component.
- The user suggests a practical use or feature for the software.

6.
Concepts: touch screen functionality, inform about touch screens
- The developer discusses touch screen functionality or capabilities.
- The developer informs users about touch screen-specific features or limitations.

7.
Concepts: system compatibility, confirming compatibility, suggesting checking compatibility of the system
- Discussing compatibility issues or requirements for the software.
- Designers confirm the software's compatibility with a system or platform.
- Designer mentions the need to check system compatibility

8.
Concepts: cross-platform usage, platform-specific communication
- A participant discusses or mentions using the app across different platforms.
- A participant mentions or discusses a specific platform (e.g., PC, iOS) in relation to the app.

9.
Concepts: inquiring about pc version, referring to software version
- Users discuss or ask about the PC version of the software.
- User refers to a specific version of the software (e.g., PC version).

10.
Concepts: clarifying feature, introducing feature
- A message that clarifies the functionality of an existing feature.
- A message that introduces or explains the functions of a feature.

11.
Concepts: explain features, provide technical details
- Provides detailed information or examples of features or functionalities.
- Provides technical information or clarification about a feature or functionality.

12.
Concepts: offer special tips, provide practical advice
- A designer shares tips, shortcuts, or hidden features that can enhance the user experience.
- The designer provides practical advice or tips for using the software.
===
Here are the definitions for each code:

---
1.
Concepts: seeking help, seek guidance
Relationship: Seeking help implies seeking guidance, which is a specific type of help.
Criteria: Users seek help or guidance on using the software.
Phrase: Seek help or guidance

2.
Concepts: user assistance request, requesting technical assistance
Relationship: User assistance request is a more general term, while requesting technical assistance is a specific type of request.
Criteria: Users request technical assistance or support with using a specific feature or platform.
Phrase: Request technical assistance

3.
Concepts: requesting user manual, requesting community resources
Relationship: Requesting a user manual is a specific type of requesting community resources.
Criteria: Users request or ask about a user manual or guide for the platform.
Phrase: Request user manual or resources

4.
Concepts: requesting resources, justification of request
Relationship: Justification of request is often provided to support the request for resources.
Criteria: Users request additional resources and justify their request.
Phrase: Request resources with justification

5.
Concepts: highlight practicality, suggest practical use case
Relationship: Highlighting practicality often involves suggesting practical use cases.
Criteria: Users or designers highlight the practicality of a software or component and suggest practical use cases.
Phrase: Highlight practicality and suggest use cases

6.
Concepts: touch screen functionality, inform about touch screens
Relationship: Discussing touch screen functionality involves informing users about touch screens.
Criteria: Developers inform users about touch screen-specific features or limitations.
Phrase: Inform about touch screen functionality

7.
Concepts: system compatibility, confirming compatibility, suggesting checking compatibility of the system
Relationship: Confirming compatibility and suggesting checking compatibility are both related to system compatibility.
Criteria: Designers discuss compatibility issues, confirm the software's compatibility, and suggest checking system compatibility.
Phrase: Discuss system compatibility

8.
Concepts: cross-platform usage, platform-specific communication
Relationship: Cross-platform usage involves platform-specific communication.
Criteria: Participants discuss using the app across different platforms and mention specific platforms.
Phrase: Discuss cross-platform usage

9.
Concepts: inquiring about pc version, referring to software version
Relationship: Inquiring about PC version involves referring to a specific software version.
Criteria: Users discuss or ask about the PC version of the software.
Phrase: Inquire about PC version

10.
Concepts: clarifying feature, introducing feature
Relationship: Clarifying a feature often involves introducing it.
Criteria: Messages clarify the functionality of an existing feature or introduce new features.
Phrase: Clarify or introduce features

11.
Concepts: explain features, provide technical details
Relationship: Explaining features involves providing technical details.
Criteria: Messages provide detailed information or examples of features or functionalities.
Phrase: Explain features with technical details

12.
Concepts: offer special tips, provide practical advice
Relationship: Offering special tips involves providing practical advice.
Criteria: Designers share tips, shortcuts, or hidden features and provide practical advice.
Phrase: Offer tips and practical advice