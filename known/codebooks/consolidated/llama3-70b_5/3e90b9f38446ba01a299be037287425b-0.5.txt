You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (22 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
22. 
Concepts: {Repeat the input 22}
Relationship: {What is logical relationship between concepts in code 22, or N/A if not applicable}
Criteria: {Who did what, and how for code 22}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: selectively implementing ai code, selectively integrates ai code
- The user selectively implements AI suggestions or code.
- The user selectively copies and adapts AI-generated code for use in their model.

2.
Concepts: verifying code with ai, analyzing and evaluating ai-generated code
- Participants verify code with AI assistance.
- Participants analyze and evaluate AI-generated code.

3.
Concepts: values ai-driven debugging, values iterative debugging
- The user values AI-driven debugging capabilities.
- The user values iterative debugging processes with AI-generated code.

4.
Concepts: identifies ai code errors, reports errors and debugs
- The user identifies errors in AI-generated code.
- Reporting errors in AI-generated code and seeking assistance in debugging.

5.
Concepts: debugs with ai, engages in iterative debugging
- The user uses AI-generated code to debug their work.
- The user engages in iterative debugging with AI-generated code.

6.
Concepts: debugs independently, debugs and corrects independently
- The user debugs code independently.
- The user debugs and corrects code independently.

7.
Concepts: ai system limitations, recognizing ai limitations
- Recognizing the limitations of current AI systems in specific domains.
- Participants recognize the limitations of AI systems or tools.

8.
Concepts: finds humor in ai errors, humor in ai interaction
- The user reacts with humor to AI errors.
- Finding humor or irony in the interactions with AI-driven interfaces, often due to their limitations or errors.

9.
Concepts: reasons through ai responses, recognizing potential ai errors through analysis
- The participant reasons through the AI's responses and identifies potential issues.
- Participants recognize and reason through errors or inconsistencies in AI responses.

10.
Concepts: human-ai confusion, expressing initial confusion
- The participant initially confuses the capabilities of the system, demonstrating a need for clearer instructions or guidance.
- Participants express initial confusion or uncertainty about the AI system's capabilities.

11.
Concepts: doubting ai's capability, expressing uncertainty about ai capabilities
- Participants express uncertainty about AI's capability to perform specific tasks.
- Uncertainty exists about AI capabilities or limitations.

12.
Concepts: finding ai responses unpredictable, perceiving ai responses as non-deterministic
- Participants find AI responses unpredictable and non-deterministic.
- Expert perceives AI responses as non-deterministic.

13.
Concepts: experiences ai failure, expressing frustration with ai performance
- The participant experiences failure or getting stuck when using AI.
- Participants express frustration when the AI gets stuck in a loop or cannot fix an error.

14.
Concepts: experiencing compatibility issues, dealing with legacy code issues
- Participants experience compatibility issues with older versions of NetLogo.
- Participants deal with legacy code issues, such as compatibility with older NetLogo versions.

15.
Concepts: wants immediate fixes, prefers immediate fixes
- The user wants immediate error-fixing options.
- The user prefers immediate code fix options.

16.
Concepts: time constraints in learning, managing time constraints
- Discussing time constraints in learning or professional development
- Participants experience limited time and manage time constraints for learning and language learning.

17.
Concepts: importance of tacit knowledge, emphasizing oral tradition and undocumented knowledge
- Highlighting the importance of tacit knowledge, oral tradition, and undocumented knowledge.
- Participants emphasize the significance of oral tradition and undocumented knowledge in knowledge transmission and sharing.

18.
Concepts: emphasizing the need for expertise, expertise required for error interpretation
- Participants emphasize the need for expertise in understanding and fixing AI-generated errors.
- Participant emphasizes the importance of expertise in understanding errors and debugging.

19.
Concepts: tension between novice and expert design, recognizing novice-expert needs tension
- Noting limited options and tension between novice and expert design needs
- Participants recognize the tension between designing for novice and expert users' needs.

20.
Concepts: has prior experience, shares prior experience
- The user has prior programming experience.
- The user shares prior programming experience.

21.
Concepts: encountering ai limitations
- Encountering limitations or errors of AI-driven interfaces that hinder their ability to complete tasks or solve problems.
- The interviewee encounters limitations of AI, such as processing large code pieces.

22.
Concepts: engaging in exploratory ai interactions
- Participants engage in exploratory AI interactions to find correct search results.
- Participants experiment with different queries to achieve desired results from the AI.
===
Here are the definitions for each code:

---
1.
Concepts: selectively implementing ai code, selectively integrates ai code
Relationship: The concepts are related as they both describe the user's intentional and controlled use of AI-generated code.
Criteria: The user selectively implements or integrates AI code into their work.
Phrase: Selectively implements AI code.

2.
Concepts: verifying code with ai, analyzing and evaluating ai-generated code
Relationship: The concepts are related as they both describe the user's critical evaluation of AI-generated code.
Criteria: The user verifies and analyzes AI-generated code.
Phrase: Verifies code with AI.

3.
Concepts: values ai-driven debugging, values iterative debugging
Relationship: The concepts are related as they both describe the user's appreciation for the debugging process with AI-generated code.
Criteria: The user values AI-driven debugging and iterative debugging processes.
Phrase: Values AI-driven debugging.

4.
Concepts: identifies ai code errors, reports errors and debugs
Relationship: The concepts are related as they both describe the user's error detection and reporting process with AI-generated code.
Criteria: The user identifies and reports errors in AI-generated code.
Phrase: Identifies AI code errors.

5.
Concepts: debugs with ai, engages in iterative debugging
Relationship: The concepts are related as they both describe the user's collaborative debugging process with AI-generated code.
Criteria: The user debugs with AI-generated code.
Phrase: Debugs with AI.

6.
Concepts: debugs independently, debugs and corrects independently
Relationship: The concepts are related as they both describe the user's self-sufficient debugging process without AI assistance.
Criteria: The user debugs and corrects code independently.
Phrase: Debugs independently.

7.
Concepts: ai system limitations, recognizing ai limitations
Relationship: The concepts are related as they both describe the user's awareness of AI system limitations.
Criteria: The user recognizes AI system limitations.
Phrase: Recognizes AI limitations.

8.
Concepts: finds humor in ai errors, humor in ai interaction
Relationship: The concepts are related as they both describe the user's lighthearted reaction to AI errors.
Criteria: The user finds humor in AI errors.
Phrase: Finds humor in AI errors.

9.
Concepts: reasons through ai responses, recognizing potential ai errors through analysis
Relationship: The concepts are related as they both describe the user's critical thinking process when interacting with AI-generated code.
Criteria: The user reasons through AI responses and recognizes potential errors.
Phrase: Reasons through AI responses.

10.
Concepts: human-ai confusion, expressing initial confusion
Relationship: The concepts are related as they both describe the user's initial uncertainty when interacting with AI-driven interfaces.
Criteria: The user expresses initial confusion about AI capabilities.
Phrase: Expresses initial confusion.

11.
Concepts: doubting ai's capability, expressing uncertainty about ai capabilities
Relationship: The concepts are related as they both describe the user's uncertainty about AI capabilities.
Criteria: The user doubts AI's capability.
Phrase: Doubts AI's capability.

12.
Concepts: finding ai responses unpredictable, perceiving ai responses as non-deterministic
Relationship: The concepts are related as they both describe the user's perception of AI responses as unpredictable.
Criteria: The user finds AI responses unpredictable.
Phrase: Finds AI responses unpredictable.

13.
Concepts: experiences ai failure, expressing frustration with ai performance
Relationship: The concepts are related as they both describe the user's negative experience with AI-driven interfaces.
Criteria: The user experiences AI failure and frustration.
Phrase: Experiences AI failure.

14.
Concepts: experiencing compatibility issues, dealing with legacy code issues
Relationship: The concepts are related as they both describe the user's experience with compatibility issues when using AI-driven interfaces.
Criteria: The user experiences compatibility issues with legacy code.
Phrase: Experiences compatibility issues.

15.
Concepts: wants immediate fixes, prefers immediate fixes
Relationship: The concepts are related as they both describe the user's desire for quick error-fixing solutions.
Criteria: The user wants immediate error-fixing options.
Phrase: Wants immediate fixes.

16.
Concepts: time constraints in learning, managing time constraints
Relationship: The concepts are related as they both describe the user's experience with time limitations when learning or using AI-driven interfaces.
Criteria: The user experiences time constraints in learning.
Phrase: Manages time constraints.

17.
Concepts: importance of tacit knowledge, emphasizing oral tradition and undocumented knowledge
Relationship: The concepts are related as they both describe the user's appreciation for informal knowledge transmission.
Criteria: The user emphasizes the importance of tacit knowledge.
Phrase: Emphasizes tacit knowledge.

18.
Concepts: emphasizing the need for expertise, expertise required for error interpretation
Relationship: The concepts are related as they both describe the user's recognition of the need for expertise when working with AI-generated code.
Criteria: The user emphasizes the need for expertise.
Phrase: Emphasizes need for expertise.

19.
Concepts: tension between novice and expert design, recognizing novice-expert needs tension
Relationship: The concepts are related as they both describe the user's awareness of the design tension between novice and expert users' needs.
Criteria: The user recognizes the tension between novice and expert design needs.
Phrase: Recognizes design needs tension.

20.
Concepts: has prior experience, shares prior experience
Relationship: The concepts are related as they both describe the user's prior experience and willingness to share it.
Criteria: The user has and shares prior programming experience.
Phrase: Shares prior experience.

21.
Concepts: encountering ai limitations
Relationship: N/A
Criteria: The user encounters AI limitations.
Phrase: Encounters AI limitations.

22.
Concepts: engaging in exploratory ai interactions
Relationship: N/A
Criteria: The user engages in exploratory AI interactions.
Phrase: Engages in exploratory AI interactions.