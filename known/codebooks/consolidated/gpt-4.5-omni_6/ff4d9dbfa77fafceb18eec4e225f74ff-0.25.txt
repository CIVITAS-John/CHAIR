You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (16 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
16. 
Concepts: {Repeat the input 16}
Relationship: {What is logical relationship between concepts in code 16, or N/A if not applicable}
Criteria: {Who did what, and how for code 16}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: confirm professional role, identify and confirm community roles
- A participant confirms their professional role.
- Participants identify their roles or expertise and confirm their identity as community members.

2.
Concepts: praise software effectiveness and usability, share positive experiences and success stories
- Users comment on the effectiveness of the software and praise its features and usability.
- Users share their experiences and positive feedback about student engagement and success stories using the software.

3.
Concepts: information seeking, asking technical questions about the software
- Users asking questions to gain knowledge or resources related to the software.
- Users ask technical questions about the software, indicating areas of interest or potential issues.

4.
Concepts: explain situation, provide context for responses
- A participant explains a situation or context that affects their experience.
- Users provide context to their responses and explain their environment or situation for their questions or statements.

5.
Concepts: collaborative learning, share knowledge and support
- Designers or users engage in sharing knowledge or learning collaboratively.
- Designers and users share design-related knowledge and experiences, supporting each other in using and improving the software.

6.
Concepts: provide explanations and rationale, provide specific feedback with justifications
- Users or designers provide explanations and rationale for suggestions or decisions.
- Users provide specific feedback or suggestions with justifications.

7.
Concepts: usage instruction, providing user guidance
- Designers provide specific usage instructions for software components.
- Designers provide instructions or guidance on using software features.

8.
Concepts: seek technical assistance, providing technical support
- Designers seek technical assistance or advice from others.
- Designers or users offer help, address technical issues, and provide ongoing support and guidance.

9.
Concepts: propose and commit to solutions, address concerns and commit to improvements
- Designers commit to providing solutions and propose design improvements.
- Designers address user concerns and commit to making improvements aligned with user feedback.

10.
Concepts: discussing usability and design goals, discussing decision-making and user interface
- A designer discusses usability aspects and explains design goals and considerations.
- Designers and users discuss decision-making processes and aspects related to the user interface layout.

11.
Concepts: compare and explain feature complexities, explain feature details and functionality
- A designer compares and explains the complexities of different features.
- Designers explain the need and functionality of certain features and describe component functionality.

12.
Concepts: share update schedules and timelines, share release process and schedules
- Designers provide a schedule and confirm timelines for upcoming updates.
- Designers discuss the release process and share information about release schedules and development timelines.

13.
Concepts: communicate progress and plans, communicating development progress and plans
- Developers communicate progress, plans, and ongoing work.
- Designers provide status updates, share detailed information about current feature development, and communicate plans for future software releases.

14.
Concepts: provide version details, provide update notes and technical details
- Designers clarify and provide detailed information about software versions.
- Designers provide detailed notes on version updates and technical clarifications.

15.
Concepts: announce and describe updates, communicating and listing planned updates
- Designers describe the scope of upcoming updates and announce and preview update content.
- Designers provide information about upcoming updates and list new features.

16.
Concepts: informing about updates and changes, announcing new releases and features
- Designers inform users about new features, updates, or changes to the software.
- Designers announce and notify users about the release and availability of new software versions and features.
===
---
Definitions for each code (16 in total):
1.
Concepts: confirm professional role, identify and confirm community roles
Relationship: Both concepts involve participants establishing and confirming their roles within the community.
Criteria: Participants confirm their professional roles and identify their roles or expertise within the community.
Phrase: Establishing community roles

2.
Concepts: praise software effectiveness and usability, share positive experiences and success stories
Relationship: Both concepts involve users expressing positive feedback about the software.
Criteria: Users comment on the software's effectiveness and usability, sharing positive experiences and success stories.
Phrase: Sharing positive feedback

3.
Concepts: information seeking, asking technical questions about the software
Relationship: Both concepts involve users seeking knowledge or information about the software.
Criteria: Users ask questions to gain knowledge or resources, focusing on technical aspects of the software.
Phrase: Seeking technical information

4.
Concepts: explain situation, provide context for responses
Relationship: Both concepts involve users providing background information to clarify their statements or questions.
Criteria: Participants explain their situations and provide context to their responses or questions.
Phrase: Providing contextual information

5.
Concepts: collaborative learning, share knowledge and support
Relationship: Both concepts involve participants engaging in knowledge sharing and mutual support.
Criteria: Designers or users engage in collaborative learning by sharing knowledge and supporting each other.
Phrase: Engaging in collaborative learning

6.
Concepts: provide explanations and rationale, provide specific feedback with justifications
Relationship: Both concepts involve users giving detailed explanations and justifications for their feedback or suggestions.
Criteria: Users provide explanations and rationale for their suggestions, offering specific feedback with justifications.
Phrase: Offering justified feedback

7.
Concepts: usage instruction, providing user guidance
Relationship: Both concepts involve providing instructions or guidance on using the software.
Criteria: Designers provide specific usage instructions and guidance for software components.
Phrase: Providing user guidance

8.
Concepts: seek technical assistance, providing technical support
Relationship: Both concepts involve addressing technical issues and seeking or providing assistance.
Criteria: Designers seek technical assistance and users or designers provide technical support and guidance.
Phrase: Addressing technical issues

9.
Concepts: propose and commit to solutions, address concerns and commit to improvements
Relationship: Both concepts involve designers addressing concerns and committing to solutions or improvements.
Criteria: Designers propose solutions, address user concerns, and commit to making improvements.
Phrase: Committing to improvements

10.
Concepts: discussing usability and design goals, discussing decision-making and user interface
Relationship: Both concepts involve discussions about design aspects and decision-making processes.
Criteria: Designers and users discuss usability, design goals, decision-making processes, and user interface aspects.
Phrase: Discussing design considerations

11.
Concepts: compare and explain feature complexities, explain feature details and functionality
Relationship: Both concepts involve explaining the complexities and functionalities of software features.
Criteria: Designers compare and explain feature complexities, detailing their functionalities.
Phrase: Explaining feature complexities

12.
Concepts: share update schedules and timelines, share release process and schedules
Relationship: Both concepts involve sharing information about update schedules and release processes.
Criteria: Designers provide schedules and timelines for updates, discussing the release process.
Phrase: Sharing update schedules

13.
Concepts: communicate progress and plans, communicating development progress and plans
Relationship: Both concepts involve communicating ongoing development progress and future plans.
Criteria: Developers communicate progress, plans, and ongoing work, providing status updates and future plans.
Phrase: Communicating development progress

14.
Concepts: provide version details, provide update notes and technical details
Relationship: Both concepts involve providing detailed information about software versions and updates.
Criteria: Designers provide detailed information about software versions, including update notes and technical details.
Phrase: Providing version details

15.
Concepts: announce and describe updates, communicating and listing planned updates
Relationship: Both concepts involve announcing and describing upcoming software updates.
Criteria: Designers announce and describe the scope of upcoming updates, listing new features.
Phrase: Announcing updates

16.
Concepts: informing about updates and changes, announcing new releases and features
Relationship: Both concepts involve informing users about new software updates and features.
Criteria: Designers inform users about updates, changes, and new releases, announcing new features.
Phrase: Informing about new releases
---