You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: feature highlight, highlighting functionality
- Designer highlights or expands on a feature or capability.
- A designer highlights the benefits or advantages of a particular feature or design.
- A designer highlights or showcases a specific feature or functionality of the software.

2.
Concepts: listing features, listing new features, listing new features and components
- A designer lists new features, components, or updates to a resource or application.
- A designer lists or enumerates new features, components, or updates added to the software.
- The designer lists or describes new features, components, or updates to the app.

3.
Concepts: describing new features, highlighting new features
- The designer describes new features, components, or updates in a specific version.
- Designers highlight new features or components that are available to users.

4.
Concepts: feature proposal, introducing new feature concept
- A designer proposes or suggests a new feature or functionality.
- Designer introduces a new concept or idea for a feature.

5.
Concepts: new component introduction, introducing new design elements
- A designer introduces a new component or feature.
- A designer introduces new design elements, components, or features to the software.

6.
Concepts: emphasizing impact, emphasizing update significance, highlights significance
- Designers emphasize the impact or significance of an update or change.
- Designer emphasizes the significance of an update or feature.
- The designer highlights the significance or magnitude of an upcoming update.
- Designer highlights the significance of an update

7.
Concepts: showcasing design improvements, showcasing enhancements
- Showcasing improvements or new features.
- Designers showcase new features, components, or adjustments made to the software.

8.
Concepts: benefit explanation, highlighting benefits
- A designer highlights the benefits or advantages of a feature.
- A designer highlights the benefits or advantages of a feature or functionality.

9.
Concepts: long-term benefits, justifying feature development
- A designer emphasizes the long-term benefits or value of a feature.
- Designer justifies the development of a feature, highlighting its long-term benefits.

10.
Concepts: providing reason, design decision explanation, justifying design decisions, design rationale, rationale for design choice
- A designer provides a reason or explanation for their decision or action.
- A designer explains the reasoning behind a design decision.
- Justifying design decisions or explaining the rationale behind them.
- Designer explains the reasoning or justification behind design decisions or features.
- Designer provides a justification for a development decision.

11.
Concepts: explaining design goals, explaining app design intentions
- The speaker explains the design goals or intentions behind a product or feature.
- Designer explains the intention behind the app design.

12.
Concepts: project focus, explaining current focus
- Designer explains the focus or direction of the project.
- Statements about the focus or priorities of a project or initiative.
- Designers explain their current focus or priorities.

13.
Concepts: explaining options, explaining user control
- Designer explains options or alternatives for users.
- The designer explains user control options.

14.
Concepts: technical explanation, explaining development process
- Designer explains technical details or concepts.
- Providing detailed explanations or technical information about a feature or concept.
- Designer explains the development process or technical details.

15.
Concepts: explain simulation detail, simulation feature explanation
- Designer explains details about a simulation or feature.
- A designer explains a simulation feature or functionality.

16.
Concepts: feature explanation, explaining new features, explaining functionality, explaining design functionality
- A designer explains or clarifies a feature's benefits or functionality.
- The designer explains or clarifies the functionality or purpose of a feature.
- The designer explains the functionality or purpose of a particular feature or component.
- A designer explains the functionality or purpose of a specific feature.

17.
Concepts: addressing functionality, describing functionality
- The designer addresses or explains a functionality or feature of the app.
- A designer or developer describes the functionality or features of a product.

18.
Concepts: clarifying design choices, promoting understanding of design decisions
- A designer clarifies or explains design choices or decisions.
- The designer promotes understanding or explains the reasoning behind a particular design decision.

19.
Concepts: preventing misunderstandings, clarifying understanding
- Designer clarifies or prevents misunderstandings.
- The designer seeks to clarify understanding or ensure mutual understanding.

20.
Concepts: clarifying design, clarifying an issue
- Clarifying or seeking clarification on a specific feature or design
- Designer clarifies or explains a specific issue or scenario.

21.
Concepts: user understanding, verifying understanding
- Ensuring that users understand how to use a feature or concept
- User verifies understanding of a concept or feature.

22.
Concepts: building understanding, facilitating user understanding
- A designer explains or clarifies how the system or feature works.
- Designers facilitate users' understanding of the software or its features.

23.
Concepts: clarifying technical details, confirming technical information
- Clarifying technical details and specifications
- Confirming technical information or specifications

24.
Concepts: providing explanations, enhancing understanding
- Providing explanations or clarifications about the application or its features.
- Providing explanations or clarifying the software's functionality or features.
- Enhancing understanding of the application or its features through explanations or clarifications.

25.
Concepts: clarifying functionality, clarifying product behavior
- The speaker clarifies or explains the functionality of a feature or component.
- The speaker clarifies the behavior or functionality of a product or feature.

26.
Concepts: clarifying testing phase, clarifying testing status
- Clarifying that a feature or version is in a testing phase.
- Designer clarifies the status of a specific feature or version (e.g., testing only).

27.
Concepts: version clarification, clarifying software version
- Designer clarifies or specifies the version of the software being discussed.
- A designer provides information about the version of the software or application being discussed or shared.
- Providing clarification about version details.
- Designer clarifies the type or version of the software.

28.
Concepts: explaining differences, clarifying differences
- Designer explains differences between versions or features.
- The designer clarifies differences between versions or features.

29.
Concepts: clarifying platform differences, clarifying version differences
- Clarifying differences between platforms or versions.
- Clarifying differences between versions or platforms of the software.

30.
Concepts: emphasizing collaboration
- Highlighting the importance of collaboration or shared resources
- A designer mentions or emphasizes the collaborative nature of the community.

31.
Concepts: feature suggestions
- Suggesting improvements or new features for a specific topic (e.g., wave mechanics).
- Suggesting specific features or functionalities for the software.

32.
Concepts: acknowledge limitations
- Designer acknowledges limitations or constraints of the Physics Lab.
- A designer acknowledges potential issues or limitations in the tool's development.
===
Here are the definitions for each code:

---
1.
Concepts: feature highlight, highlighting functionality
Relationship: The concepts are related as they both involve drawing attention to a feature or functionality.
Criteria: A designer highlights or expands on a feature or capability.
Phrase: Highlighting features

2.
Concepts: listing features, listing new features, listing new features and components
Relationship: The concepts are related as they all involve enumerating or listing features or components.
Criteria: A designer lists new features, components, or updates to a resource or application.
Phrase: Listing features

3.
Concepts: describing new features, highlighting new features
Relationship: The concepts are related as they both involve explaining or drawing attention to new features.
Criteria: The designer describes new features, components, or updates in a specific version.
Phrase: Describing new features

4.
Concepts: feature proposal, introducing new feature concept
Relationship: The concepts are related as they both involve suggesting or introducing new features.
Criteria: A designer proposes or suggests a new feature or functionality.
Phrase: Proposing features

5.
Concepts: new component introduction, introducing new design elements
Relationship: The concepts are related as they both involve introducing new components or design elements.
Criteria: A designer introduces a new component or feature.
Phrase: Introducing new components

6.
Concepts: emphasizing impact, emphasizing update significance, highlights significance
Relationship: The concepts are related as they all involve stressing the importance or significance of an update or change.
Criteria: Designers emphasize the impact or significance of an update or change.
Phrase: Emphasizing significance

7.
Concepts: showcasing design improvements, showcasing enhancements
Relationship: The concepts are related as they both involve displaying or highlighting improvements.
Criteria: Showcasing improvements or new features.
Phrase: Showcasing improvements

8.
Concepts: benefit explanation, highlighting benefits
Relationship: The concepts are related as they both involve explaining or highlighting the advantages of a feature.
Criteria: A designer highlights the benefits or advantages of a feature.
Phrase: Explaining benefits

9.
Concepts: long-term benefits, justifying feature development
Relationship: The concepts are related as they both involve explaining the value or justification of a feature.
Criteria: A designer emphasizes the long-term benefits or value of a feature.
Phrase: Justifying features

10.
Concepts: providing reason, design decision explanation, justifying design decisions, design rationale, rationale for design choice
Relationship: The concepts are related as they all involve explaining or justifying design decisions.
Criteria: A designer provides a reason or explanation for their decision or action.
Phrase: Justifying design decisions

11.
Concepts: explaining design goals, explaining app design intentions
Relationship: The concepts are related as they both involve explaining the purpose or intention behind a design.
Criteria: The speaker explains the design goals or intentions behind a product or feature.
Phrase: Explaining design goals

12.
Concepts: project focus, explaining current focus
Relationship: The concepts are related as they both involve explaining the direction or priorities of a project.
Criteria: Designer explains the focus or direction of the project.
Phrase: Explaining project focus

13.
Concepts: explaining options, explaining user control
Relationship: The concepts are related as they both involve explaining choices or control options for users.
Criteria: Designer explains options or alternatives for users.
Phrase: Explaining options

14.
Concepts: technical explanation, explaining development process
Relationship: The concepts are related as they both involve explaining technical details or processes.
Criteria: Designer explains technical details or concepts.
Phrase: Explaining technical details

15.
Concepts: explain simulation detail, simulation feature explanation
Relationship: The concepts are related as they both involve explaining details about a simulation or feature.
Criteria: Designer explains details about a simulation or feature.
Phrase: Explaining simulation details

16.
Concepts: feature explanation, explaining new features, explaining functionality, explaining design functionality
Relationship: The concepts are related as they all involve explaining the purpose or functionality of a feature.
Criteria: A designer explains or clarifies a feature's benefits or functionality.
Phrase: Explaining features

17.
Concepts: addressing functionality, describing functionality
Relationship: The concepts are related as they both involve explaining or describing the functionality of a feature.
Criteria: The designer addresses or explains a functionality or feature of the app.
Phrase: Addressing functionality

18.
Concepts: clarifying design choices, promoting understanding of design decisions
Relationship: The concepts are related as they both involve explaining or clarifying design decisions.
Criteria: A designer clarifies or explains design choices or decisions.
Phrase: Clarifying design choices

19.
Concepts: preventing misunderstandings, clarifying understanding
Relationship: The concepts are related as they both involve ensuring understanding or preventing confusion.
Criteria: Designer clarifies or prevents misunderstandings.
Phrase: Preventing misunderstandings

20.
Concepts: clarifying design, clarifying an issue
Relationship: The concepts are related as they both involve explaining or clarifying a specific issue or design.
Criteria: Clarifying or seeking clarification on a specific feature or design.
Phrase: Clarifying design

21.
Concepts: user understanding, verifying understanding
Relationship: The concepts are related as they both involve ensuring that users understand a concept or feature.
Criteria: Ensuring that users understand how to use a feature or concept.
Phrase: Verifying understanding

22.
Concepts: building understanding, facilitating user understanding
Relationship: The concepts are related as they both involve explaining or facilitating user understanding.
Criteria: A designer explains or clarifies how the system or feature works.
Phrase: Facilitating understanding

23.
Concepts: clarifying technical details, confirming technical information
Relationship: The concepts are related as they both involve explaining or confirming technical details.
Criteria: Clarifying technical details and specifications.
Phrase: Clarifying technical details

24.
Concepts: providing explanations, enhancing understanding
Relationship: The concepts are related as they both involve explaining or clarifying to enhance understanding.
Criteria: Providing explanations or clarifications about the application or its features.
Phrase: Providing explanations

25.
Concepts: clarifying functionality, clarifying product behavior
Relationship: The concepts are related as they both involve explaining or clarifying the functionality of a feature or product.
Criteria: The speaker clarifies or explains the functionality of a feature or component.
Phrase: Clarifying functionality

26.
Concepts: clarifying testing phase, clarifying testing status
Relationship: The concepts are related as they both involve explaining or clarifying the testing phase or status.
Criteria: Clarifying that a feature or version is in a testing phase.
Phrase: Clarifying testing phase

27.
Concepts: version clarification, clarifying software version
Relationship: The concepts are related as they both involve explaining or clarifying the version of the software.
Criteria: Designer clarifies or specifies the version of the software being discussed.
Phrase: Clarifying software version

28.
Concepts: explaining differences, clarifying differences
Relationship: The concepts are related as they both involve explaining or clarifying differences between versions or features.
Criteria: Designer explains differences between versions or features.
Phrase: Explaining differences

29.
Concepts: clarifying platform differences, clarifying version differences
Relationship: The concepts are related as they both involve explaining or clarifying differences between platforms or versions.
Criteria: Clarifying differences between platforms or versions.
Phrase: Clarifying platform differences

30.
Concepts: emphasizing collaboration
Relationship: N/A
Criteria: Highlighting the importance of collaboration or shared resources.
Phrase: Emphasizing collaboration

31.
Concepts: feature suggestions
Relationship: N/A
Criteria: Suggesting improvements or new features for a specific topic.
Phrase: Suggesting features

32.
Concepts: acknowledge limitations
Relationship: N/A
Criteria: Designer acknowledges limitations or constraints of the Physics Lab.
Phrase: Acknowledging limitations