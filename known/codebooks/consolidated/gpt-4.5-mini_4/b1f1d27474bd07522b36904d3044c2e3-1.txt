You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (17 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
17. 
Concepts: {Repeat the input 17}
Relationship: {What is logical relationship between concepts in code 17, or N/A if not applicable}
Criteria: {Who did what, and how for code 17}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: confirm upcoming update, announce software updates
- Designers reaffirm the schedule for upcoming software updates to maintain community awareness.
- Designers consistently update the community on software status and significant announcements to enhance clarity.

2.
Concepts: providing software updates, providing technical updates
- Designers provide comprehensive updates regarding software versions along with download information.
- Designers provide clear updates and information pertaining to both technicalities and improvements within the software.

3.
Concepts: introducing new components, announce component updates
- Designers announce and introduce new components/features that will improve user experience.
- Designers announce both feature additions and modifications to specific components of the software.

4.
Concepts: explaining new features, share information about current feature development
- Designers describe and explain both newly implemented features and specific future enhancements.
- Designers convey current developments in features related to the softwareâ€™s capabilities.

5.
Concepts: share future plans, share potential future direction
- Designers share insights related to future updates and convey discussions about growth areas for the software.
- Designers share interests that may lead to potential future features or expansions in the software.

6.
Concepts: announce future plans, announce future consultations
- Designers communicate potential changes and planned updates to encourage community engagement.
- Designers indicate plans for future consultations with users regarding developments and gather feedback.

7.
Concepts: involve users in design, engage in user-designer interaction
- Designers actively involve users in the design process through feedback and testing.
- Users and designers engage in collaborative discussions contributing to the design process.

8.
Concepts: foster community interaction, promote community participation
- Designers encourage user engagement and feedback to cultivate a thriving community atmosphere.
- Designers encourage community members to participate actively in discussions and feedback.

9.
Concepts: explain common practice, explain internet restrictions
- A user explains standard practices in educational settings regarding technology restrictions.
- Users describe the practices surrounding internet access restrictions within classroom settings.

10.
Concepts: seek usage instructions, request user documentation
- Users actively seek documented instructions or methods for utilizing the software.
- Users request assistance regarding documentation relevant to their software needs.

11.
Concepts: seek assistance, new user interaction
- Users actively ask questions seeking help regarding software operations and features.
- Users engage with the community by asking for help or information about using the software.

12.
Concepts: accepting suggestion, implement user suggestions
- Indicates willingness to implement user suggestions in future updates.
- Designers commit to implementing user suggestions for future updates.

13.
Concepts: provide user feedback, suggest usability improvements
- Users provide feedback and suggestions affecting the software's design and developments.
- Users propose changes to improve the software's usability based on their experiences.

14.
Concepts: seek user feedback, gather user feedback
- Designers solicit user feedback to identify potential areas for software improvement.
- Developers seek feedback from users about their experiences and challenges during software usage.

15.
Concepts: discuss usability, discuss usability context
- Engages in dialogue regarding the ease of use and functionality of the software.
- Users describe specific contexts in which they operate software and discuss its usability accordingly.

16.
Concepts: explain feature functionality, explain feature importance
- Designers elaborate on software features to aid user understanding of functionalities.
- Designers elucidate why certain features are essential for the software's functionality and user satisfaction.

17.
Concepts: clarify user requests, request additional clarification
- Designers ask follow-up questions concerning user requests to ensure clarity and address concerns.
- Users or designers request further information or clarification about specific topics.
===
---
Definitions for each code (17 in total):
1.  
Concepts: confirm upcoming update, announce software updates  
Relationship: The two concepts are interlinked as both actions enhance community awareness and clarity about software updates.  
Criteria: Designers reaffirm the upcoming software update schedule and announce updates to keep the community informed.  
Phrase: Reaffirm and announce software updates.  

2.  
Concepts: providing software updates, providing technical updates  
Relationship: Both concepts relate to the dissemination of comprehensive information about software versions and technical aspects to ensure users are well-informed.  
Criteria: Designers provide comprehensive software and technical updates, including version information and improvements.  
Phrase: Provide software and technical updates.  

3.  
Concepts: introducing new components, announce component updates  
Relationship: The concepts relate to bringing new features and modifications to the community's attention to inform and enhance user experience.  
Criteria: Designers announce new components and updates to enhance overall user experience.  
Phrase: Introduce and announce component updates.  

4.  
Concepts: explaining new features, share information about current feature development  
Relationship: Both concepts focus on the communication of features, ensuring users are aware of both existing and upcoming enhancements.  
Criteria: Designers explain new features and share developments about current feature capabilities.  
Phrase: Explain and share feature development.  

5.  
Concepts: share future plans, share potential future direction  
Relationship: Both concepts involve forward-looking discussions regarding growth and anticipated updates within the software.  
Criteria: Designers share insights on future updates and potential directions for the software.  
Phrase: Share future plans and directions.  

6.  
Concepts: announce future plans, announce future consultations  
Relationship: Both concepts aim to communicate upcoming changes and engage the community in discussions for input and feedback.  
Criteria: Designers announce future plans and consultations to encourage user engagement.  
Phrase: Announce future plans and consultations.  

7.  
Concepts: involve users in design, engage in user-designer interaction  
Relationship: The concepts are interconnected through collaborative efforts, emphasizing active participation in the design process.  
Criteria: Designers involve users in the design process and engage in collaborative discussions.  
Phrase: Involve users and engage in interaction.  

8.  
Concepts: foster community interaction, promote community participation  
Relationship: The concepts work together to build a sense of community among users and encourage active involvement.  
Criteria: Designers foster interaction and promote participation among community members.  
Phrase: Foster interaction and promote participation.  

9.  
Concepts: explain common practice, explain internet restrictions  
Relationship: The concepts both involve sharing knowledge and experiences related to standard practices and internet access within educational contexts.  
Criteria: Users explain common practices and internet restrictions in educational settings.  
Phrase: Explain practices and restrictions.  

10.  
Concepts: seek usage instructions, request user documentation  
Relationship: Both concepts involve users actively looking for documentation to assist with software utilization.  
Criteria: Users seek documented instructions and request relevant user documentation.  
Phrase: Seek and request documentation.  

11.  
Concepts: seek assistance, new user interaction  
Relationship: The concepts are related as new users often seek help from the community to learn about software operations.  
Criteria: Users seek assistance and interact with the community for software help.  
Phrase: Seek assistance and interact.  

12.  
Concepts: accepting suggestion, implement user suggestions  
Relationship: Both concepts emphasize an openness to integrating user feedback into future developments.  
Criteria: Designers accept and commit to implementing user suggestions for updates.  
Phrase: Accept and implement suggestions.  

13.  
Concepts: provide user feedback, suggest usability improvements  
Relationship: These concepts focus on the users' role in contributing to the software's design and improvements through feedback.  
Criteria: Users provide feedback and suggest improvements based on their experiences.  
Phrase: Provide feedback and suggest improvements.  

14.  
Concepts: seek user feedback, gather user feedback  
Relationship: Both concepts focus on the proactive approach of designers to engage users in providing insights for improvement.  
Criteria: Designers seek and gather feedback from users about their experiences.  
Phrase: Seek and gather feedback.  

15.  
Concepts: discuss usability, discuss usability context  
Relationship: The concepts revolve around dialogues focused on the software's ease of use in different operating contexts.  
Criteria: Users discuss usability and context of software operations.  
Phrase: Discuss usability and context.  

16.  
Concepts: explain feature functionality, explain feature importance  
Relationship: Both concepts emphasize the need for users to understand how specific features function and their importance.  
Criteria: Designers explain functionalities and importance of software features.  
Phrase: Explain functionality and importance.  

17.  
Concepts: clarify user requests, request additional clarification  
Relationship: The concepts denote a cycle of communication where designers and users seek to enhance understanding and address concerns.  
Criteria: Designers clarify user requests and ask for additional information as needed.  
Phrase: Clarify requests and seek clarification.  
---