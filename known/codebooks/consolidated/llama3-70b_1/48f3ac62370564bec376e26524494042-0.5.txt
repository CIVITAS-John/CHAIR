You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: sought expert input, seeking teacher input
- The designer seeks expert input or advice from users.
- Designers involve teachers in the design process, consult with them for feedback, or seek input from teachers or experts.

2.
Concepts: ensure relevance, educational alignment emphasis
- Ensuring relevance to current teaching practices or standards.
- Emphasis is placed on educational relevance and alignment.

3.
Concepts: addressing educational needs, align with educational needs, demonstrating educational relevance.
let me know if you'd like me to revise anything!
- A designer mentions adding or modifying components to address educational needs.
- Designers align updates with educational needs, planning features that cater to specific teaching requirements.
- Designers make connections to educational needs or requirements.

4.
Concepts: emphasizes educational utility, user-friendly design in education
- A designer emphasizes the educational utility or application of a feature.
- The designer considers user-friendly design principles in educational contexts.

5.
Concepts: emphasizing usability, designing for user-friendliness, emphasize intuitive design, highlight user-friendly design
- Designer emphasizes the importance of usability in software design.
- Designer expresses the intention to design user-friendly software
- Developer prioritizes user-friendly and intuitive design.
- The designer highlights or emphasizes the user-friendly design of the application.

6.
Concepts: seeking efficiency, reducing complexity, considering simplification
- Designer seeks to simplify a process or feature.
- Designer suggests simplifying or reducing complexity.
- The quote considers simplifying a design or feature.

7.
Concepts: promoting ease of use, promoting convenience
- The quote promotes ease of use or user-friendly design.
- Emphasizing the importance of convenience or ease of use.

8.
Concepts: ensuring long-term stability, demonstrating long term thinking
- A designer mentions a feature that ensures long-term stability.
- The designer thinks about the long-term implications or stability of a feature.

9.
Concepts: highlighting benefits, highlights practical application
- A designer highlights the benefits of a feature for long-term stability and ease of use.
- A designer highlights the practical application or benefits of a feature.

10.
Concepts: design perfection, demonstrating commitment to accuracy
- Designer strives for perfection or high-quality design.
- A designer demonstrates a commitment to accuracy in the product's design or features.

11.
Concepts: emphasizing good design, emphasizing quality
- A designer emphasizes the importance of a well-designed feature.
- A designer emphasizes the importance of optimization or improvement, prioritizing quality.

12.
Concepts: inquiring about update schedule, inquiry about update timing with emoji
- Users inquire about the schedule or timeline for updates.
- User inquires about upcoming update timing with an emoji.

13.
Concepts: anticipates update, teases or previews updates
- Someone sets an expectation for an upcoming update.
- Someone hints at or announces upcoming updates or changes.

14.
Concepts: seeking updates, checking for updates
- A user seeks updates or information about recent developments.
- Users check for or inquire about updates to the software.

15.
Concepts: updates and feedback, responding to updates
- Providing updates and seeking feedback from users
- User responds to earlier information or updates from the designer.

16.
Concepts: describes update scope, significant update announcement
- A designer mentions the size of the upcoming update.
- Designer indicates that an upcoming update will be significant or large in scope.

17.
Concepts: introducing update content, provides update information
- Introducing or summarizing update content.
- Someone provides detailed or summarized information about updates.

18.
Concepts: explaining new features, detailing software updates, detailed update explanations, version update notes
- Explanations or descriptions of new features or updates.
- Detailing software updates and new features
- Providing detailed explanations or descriptions of bug fixes or updates.
- Provides notes or updates about new features or changes in a software or system.

19.
Concepts: setting development priorities, development priority justification
- Prioritizing one aspect of development over another.
- Justifies or explains the prioritization of certain features or developments.

20.
Concepts: explaining priorities, prioritizing features
- A designer explains the importance or priority of a feature or design decision.
- A designer or user prioritizes one aspect of the project over another, often due to complexity or importance.

21.
Concepts: prioritizing topics, sequencing design phases
- A designer prioritizes topics, focusing on specific areas first, and then moving on to others.
- A designer or moderator outlines the sequence or priority of design phases or tasks.

22.
Concepts: plans content development, outlines development priorities
- Designer plans or prioritizes the development of specific content or features.
- Designers outline development priorities or plans.

23.
Concepts: prioritizes development tasks, development timeline and priorities
- Designers prioritize or defer development of specific features or mechanics.
- Designer mentions a delay or prioritization in the development process.

24.
Concepts: timeline setting, establish development timeline
- The designer sets a timeline for the implementation of mechanics experiments.
- Designers establish a timeline or milestone for Physics Lab development.

25.
Concepts: designer 1 sets goal for electromagnetism, setting goals for electromagnetism
- Designer 1 sets a goal or target for a specific topic or feature.
- The designer sets a specific goal to finalize understanding of electromagnetism by the end of the year.

26.
Concepts: setting boundaries, set scope for experiments
- Designer sets boundaries or limitations for the software's focus.
- Designer sets the scope or boundaries for experiments or features.

27.
Concepts: expectation setting, setting development expectations
- Setting expectations for mechanics or features.
- Setting expectations for future development or features.

28.
Concepts: update enthusiasm, building anticipation
- Designer expresses enthusiasm or excitement for upcoming updates.
- The designer builds anticipation or excitement for an upcoming update or feature.

29.
Concepts: encourage development, expressing hope for progress
- A user encourages the designer to continue working on the software.
- A designer or user expresses hope or optimism about the progress or future of the project.

30.
Concepts: confirming feature addition, confirming feature implementation
- Designer confirms or agrees to add a new feature.
- Confirming that a requested feature will be implemented or developed.

31.
Concepts: request acceptance, accepting user suggestions
- Designer agrees to implement a user request.
- Designers accept user suggestions, agreeing to implement features or functionality.

32.
Concepts: promises future updates, promising implementation
- Designers promise future updates or perfection.
- A designer promises or assures that something will be realized or implemented.
===
Here are the definitions for each code:

---
1.
Concepts: sought expert input, seeking teacher input
Relationship: The designer seeks expert input to ensure the design is informed by teachers' perspectives.
Criteria: Designers seek expert input from teachers to inform the design process.
Phrase: Seek expert input.

2.
Concepts: ensure relevance, educational alignment emphasis
Relationship: Ensuring relevance is a key aspect of educational alignment.
Criteria: Designers emphasize educational relevance and alignment in their design decisions.
Phrase: Emphasize educational alignment.

3.
Concepts: addressing educational needs, align with educational needs, demonstrating educational relevance
Relationship: Addressing educational needs is a key aspect of demonstrating relevance.
Criteria: Designers address educational needs by aligning updates with teaching requirements.
Phrase: Address educational needs.

4.
Concepts: emphasizes educational utility, user-friendly design in education
Relationship: Educational utility is enhanced by user-friendly design.
Criteria: Designers emphasize the educational utility of features and prioritize user-friendly design.
Phrase: Emphasize educational utility.

5.
Concepts: emphasizing usability, designing for user-friendliness, emphasize intuitive design, highlight user-friendly design
Relationship: Usability, user-friendliness, and intuitive design are interconnected concepts.
Criteria: Designers prioritize usability, user-friendliness, and intuitive design in their software design.
Phrase: Emphasize user-friendliness.

6.
Concepts: seeking efficiency, reducing complexity, considering simplification
Relationship: Seeking efficiency involves reducing complexity and simplifying design.
Criteria: Designers seek to simplify processes and features to improve efficiency.
Phrase: Seek efficiency.

7.
Concepts: promoting ease of use, promoting convenience
Relationship: Promoting ease of use and convenience are related concepts.
Criteria: Designers promote ease of use and convenience in their software design.
Phrase: Promote ease of use.

8.
Concepts: ensuring long-term stability, demonstrating long term thinking
Relationship: Ensuring long-term stability requires long-term thinking.
Criteria: Designers ensure long-term stability by considering the long-term implications of their design decisions.
Phrase: Ensure long-term stability.

9.
Concepts: highlighting benefits, highlights practical application
Relationship: Highlighting benefits involves emphasizing practical application.
Criteria: Designers highlight the benefits of features and their practical application.
Phrase: Highlight benefits.

10.
Concepts: design perfection, demonstrating commitment to accuracy
Relationship: Striving for design perfection demonstrates a commitment to accuracy.
Criteria: Designers strive for perfection and demonstrate a commitment to accuracy in their design decisions.
Phrase: Strive for perfection.

11.
Concepts: emphasizing good design, emphasizing quality
Relationship: Emphasizing good design and quality are related concepts.
Criteria: Designers emphasize the importance of good design and quality in their software development.
Phrase: Emphasize quality.

12.
Concepts: inquiring about update schedule, inquiry about update timing with emoji
Relationship: Inquiring about the update schedule involves asking about timing.
Criteria: Users inquire about the schedule or timeline for updates.
Phrase: Inquire about updates.

13.
Concepts: anticipates update, teases or previews updates
Relationship: Anticipating updates involves teasing or previewing upcoming changes.
Criteria: Designers set expectations for upcoming updates by teasing or previewing changes.
Phrase: Anticipate updates.

14.
Concepts: seeking updates, checking for updates
Relationship: Seeking updates involves checking for new developments.
Criteria: Users seek updates or information about recent developments.
Phrase: Seek updates.

15.
Concepts: updates and feedback, responding to updates
Relationship: Providing updates involves seeking feedback from users.
Criteria: Designers provide updates and seek feedback from users.
Phrase: Provide updates.

16.
Concepts: describes update scope, significant update announcement
Relationship: Describing the update scope involves announcing significant changes.
Criteria: Designers describe the scope of upcoming updates and announce significant changes.
Phrase: Describe update scope.

17.
Concepts: introducing update content, provides update information
Relationship: Introducing update content involves providing information about updates.
Criteria: Designers introduce update content and provide information about upcoming changes.
Phrase: Introduce update content.

18.
Concepts: explaining new features, detailing software updates, detailed update explanations, version update notes
Relationship: Explaining new features involves detailing software updates and providing explanations.
Criteria: Designers explain new features, detail software updates, and provide detailed explanations.
Phrase: Explain new features.

19.
Concepts: setting development priorities, development priority justification
Relationship: Setting development priorities involves justifying the prioritization of features.
Criteria: Designers set development priorities and justify the prioritization of certain features.
Phrase: Set development priorities.

20.
Concepts: explaining priorities, prioritizing features
Relationship: Explaining priorities involves prioritizing features.
Criteria: Designers explain the importance of features and prioritize their development.
Phrase: Explain priorities.

21.
Concepts: prioritizing topics, sequencing design phases
Relationship: Prioritizing topics involves sequencing design phases.
Criteria: Designers prioritize topics and sequence design phases to focus on specific areas.
Phrase: Prioritize topics.

22.
Concepts: plans content development, outlines development priorities
Relationship: Planning content development involves outlining development priorities.
Criteria: Designers plan content development and outline development priorities.
Phrase: Plan content development.

23.
Concepts: prioritizes development tasks, development timeline and priorities
Relationship: Prioritizing development tasks involves establishing a development timeline.
Criteria: Designers prioritize development tasks and establish a development timeline.
Phrase: Prioritize development tasks.

24.
Concepts: timeline setting, establish development timeline
Relationship: Setting a timeline involves establishing a development timeline.
Criteria: Designers set a timeline for the implementation of mechanics experiments.
Phrase: Set development timeline.

25.
Concepts: designer 1 sets goal for electromagnetism, setting goals for electromagnetism
Relationship: Setting goals involves targeting specific topics or features.
Criteria: Designers set specific goals for topics or features, such as electromagnetism.
Phrase: Set goals.

26.
Concepts: setting boundaries, set scope for experiments
Relationship: Setting boundaries involves setting the scope for experiments.
Criteria: Designers set boundaries or limitations for the software's focus and scope.
Phrase: Set boundaries.

27.
Concepts: expectation setting, setting development expectations
Relationship: Setting expectations involves establishing development expectations.
Criteria: Designers set expectations for mechanics or features and establish development expectations.
Phrase: Set expectations.

28.
Concepts: update enthusiasm, building anticipation
Relationship: Expressing enthusiasm involves building anticipation for updates.
Criteria: Designers express enthusiasm for upcoming updates and build anticipation.
Phrase: Express enthusiasm.

29.
Concepts: encourage development, expressing hope for progress
Relationship: Encouraging development involves expressing hope for progress.
Criteria: Users encourage designers to continue working on the software and express hope for progress.
Phrase: Encourage development.

30.
Concepts: confirming feature addition, confirming feature implementation
Relationship: Confirming feature addition involves confirming implementation.
Criteria: Designers confirm or agree to add new features and confirm implementation.
Phrase: Confirm feature addition.

31.
Concepts: request acceptance, accepting user suggestions
Relationship: Accepting user requests involves agreeing to implement features.
Criteria: Designers accept user suggestions and agree to implement features or functionality.
Phrase: Accept user requests.

32.
Concepts: promises future updates, promising implementation
Relationship: Promising future updates involves assuring implementation.
Criteria: Designers promise future updates and assure implementation.
Phrase: Promise implementation.