You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (7 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
7. 
Concepts: {Repeat the input 7}
Relationship: {What is logical relationship between concepts in code 7, or N/A if not applicable}
Criteria: {Who did what, and how for code 7}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: announce product improvements, announcing new software features
- Designers announce changes and improvements intended for the software.
- Designers announce new features and updates to keep the community informed about the software's functionalities.

2.
Concepts: communicate with users, update on app review status
- Designers update users on release schedules and app modifications.
- Designers provide updates about the app review process and share the release status with users.

3.
Concepts: project management, outline and prioritize development focus
- Designers outline strategic plans for the order of feature implementations and project phases.
- Designers represent current and future development areas while outlining priorities and timelines.

4.
Concepts: transparent developer discussion, maintain transparency through information sharing
- Designers share their thoughts and experiences openly, adding transparency to their development process.
- Designers provided detailed information about development processes and progress to maintain clarity regarding current project efforts.

5.
Concepts: engage community input, plan for community feedback
- Designers engage the community for input and collect suggestions to support collaborative initiatives.
- Designers outline strategies to gather input and announce intentions for consultations with the community.

6.
Concepts: incorporate user suggestions, users provide reasoned suggestions
- Users confirm suggestions while designers commit to incorporating these feedback in future software updates.
- Users recommend features and enhancements, providing context for their suggestions.

7.
Concepts: request software features, circuit diagram tool development
- Users articulate requests for functional improvements and suggest features for classroom applications.
- A user comments on desired features or functionalities related to software tools in education.
===
---
Definitions for each code (7 in total):
1.
Concepts: announce product improvements, announcing new software features
Relationship: Both concepts illustrate the act of sharing information with the community about enhancements and features in the software.
Criteria: Designers announce changes and new features to keep the community informed about software functionalities and improvements.
Phrase: Inform about software enhancements.

2.
Concepts: communicate with users, update on app review status
Relationship: Both concepts focus on the process of keeping users informed about app progress and modifications.
Criteria: Designers update users on release schedules and provide information about the app review process to maintain engagement.
Phrase: Update users on app status.

3.
Concepts: project management, outline and prioritize development focus
Relationship: Both concepts are interconnected with strategic planning necessary for software development and implementation.
Criteria: Designers outline and prioritize development plans to guide the implementation of features and project phases.
Phrase: Prioritize development focus.

4.
Concepts: transparent developer discussion, maintain transparency through information sharing
Relationship: Both concepts emphasize the importance of open communication and sharing information to ensure stakeholders are aware of development processes.
Criteria: Designers maintain transparency by sharing their experiences and detailed information about project efforts.
Phrase: Ensure transparency in development.

5.
Concepts: engage community input, plan for community feedback
Relationship: Both concepts point to the idea of actively involving the community in the design process through feedback solicitation.
Criteria: Designers engage the community for input and outline strategies to gather feedback for collaborative initiatives.
Phrase: Gather community feedback.

6.
Concepts: incorporate user suggestions, users provide reasoned suggestions
Relationship: Both concepts illustrate the reciprocal relationship between users' suggestions and designers' commitment to incorporating them into future updates.
Criteria: Users provide well-reasoned suggestions that designers agree to incorporate in upcoming software versions.
Phrase: Integrate user suggestions.

7.
Concepts: request software features, circuit diagram tool development
Relationship: Both concepts are related to users articulating their needs for software enhancements in educational contexts.
Criteria: Users articulate requests for functional improvements and suggest features that enhance classroom applications in software tools.
Phrase: Request software enhancements.
---