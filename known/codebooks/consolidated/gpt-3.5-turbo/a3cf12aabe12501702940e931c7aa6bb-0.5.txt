You are an expert in thematic analysis clarifying the criteria of qualitative codes. Quotes are independent of each other. Do not attempt to merge codes now.
Write clear and generalizable criteria for each code, informed by the context, and without unnecessary specifics or examples.
If necessary, refine labels to keep contexts, but do not write repetitive ones.
Group each code into a theory-informed category. Use 2-4 words for categories to provide general contexts (e.g. "social interaction" instead of "interaction", "communication approach" instead of "communication").
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Thoughts: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (32 in total):
1. 
Criteria: {Criteria of code 1}
Label: {A label of code 1}
Category: {2-4 words for code 1}
...
32.
Criteria: {Criteria of code 32}
Label: {A label of code 32}
Category: {2-4 words for code 32}
---
~~~
1.
Label: realization
Quotes:
- Oh oh oh
- Oh.

2.
Label: topic shift
Quotes:
- What about the moon?

3.
Label: celestial body discussion
Quotes:
- What about the moon?

4.
Label: astronomical fact
Quotes:
- It orbits around the Earth.

5.
Label: software discussion
Quotes:
- I'm talking about the software.

6.
Label: suggestion to consult designer
Quotes:
- Then ask the group owner.

7.
Label: celestial bodies
Quotes:
- There are also software imitating celestial bodies on Steam.
- Mars is outside the Earth.
- What about the moon?

8.
Label: no issues
Quotes:
- No problem.

9.
Label: user query
Quotes:
- The moon is not depicted, right?

10.
Label: software development progress
Quotes:
- Maybe it hasn't been done yet.

11.
Label: time constraint
Quotes:
- Last time there wasn't enough time.

12.
Label: user opinion
Quotes:
- The moon is useless.

13.
Label: software scale consideration
Quotes:
- It depends on the scale.

14.
Label: software reference
Quotes:
- universe sandbox

15.
Label: software presets
Quotes:
- There will be multiple presets.

16.
Label: customization
Quotes:
- Non-standard operations are supported, but will be marked (the next section will be on electricity, such as operations involving electricity).
- There will be multiple presets.

17.
Label: user needs
Quotes:
- Because in reality, you encounter various types of questions, many of which are about near-Earth space stations.
- Artificial satellite orbits.

18.
Label: user agreement
Quotes:
- I also think it's okay.
- Indeed
- Okay!

19.
Label: expansion
Quotes:
- These will involve more.

20.
Label: advanced scenarios
Quotes:
- Binary star systems, although you probably won't encounter them often.

21.
Label: knowledge sharing
Quotes:
- If you make an electric motor, it's quite simple to follow the method I mentioned @John Chen (3).
- @DCHDM (11) Are there still distinctions between arts and sciences now?
- Creating questions, reviewing questions, and answering questions.

22.
Label: user interaction
Quotes:
- @Angry Birds Go (2) Maybe you can come hit me along the Ethernet cable
- John, have you become more Android?
- It even forces you to click.

23.
Label: language diversity
Quotes:
- 谁知道引力波整么测的

24.
Label: future software feature
Quotes:
- I'll buy one for space.

25.
Label: physics concepts
Quotes:
- 谁知道引力波整么测的

26.
Label: software imitation
Quotes:
- Don't imitate it exactly.

27.
Label: software platforms
Quotes:
- There are also software imitating celestial bodies on Steam.

28.
Label: memory limitations
Quotes:
- I can't remember if it's 78 or 79.

29.
Label: collaborative problem solving
Quotes:
- Look it up online, this can't be solved in a few words.

30.
Label: software feature inquiry
Quotes:
- Can a motor be added?

31.
Label: focus on studying
Quotes:
- I think I should focus on studying mathematics.

32.
Label: software development approach
Quotes:
- We will be simpler, more practical (closer to exams), and cheaper.
===
---
Thoughts: 
* Community engagement
* Software development
* User interaction
* Educational content

Definitions for each code (32 in total):
1. 
Criteria: Realizations or moments of insight expressed by users.
Label: Realization
Category: User interaction

2. 
Criteria: Shifting the discussion to a different topic.
Label: Topic shift
Category: User interaction

3. 
Criteria: Discussions related to celestial bodies.
Label: Celestial body discussion
Category: Educational content

4. 
Criteria: Statements conveying factual information about astronomical phenomena.
Label: Astronomical fact
Category: Educational content

5. 
Criteria: Discussions related to the software used.
Label: Software discussion
Category: Software development

6. 
Criteria: Suggesting consulting the designer or group owner for further information.
Label: Suggestion to consult designer
Category: User interaction

7. 
Criteria: Mentions or discussions about celestial bodies.
Label: Celestial bodies
Category: Educational content

8. 
Criteria: Statements indicating no issues or problems.
Label: No issues
Category: User interaction

9. 
Criteria: Queries or questions posed by users.
Label: User query
Category: User interaction

10. 
Criteria: Discussions or indications of the progress in software development.
Label: Software development progress
Category: Software development

11. 
Criteria: References to time constraints or limitations.
Label: Time constraint
Category: Software development

12. 
Criteria: Opinions or viewpoints expressed by users.
Label: User opinion
Category: User interaction

13. 
Criteria: Considerations about the scale or size of the software.
Label: Software scale consideration
Category: Software development

14. 
Criteria: References to other software for comparison or inspiration.
Label: Software reference
Category: Software development

15. 
Criteria: Discussions about the presets or default settings in the software.
Label: Software presets
Category: Software development

16. 
Criteria: Mention of customization options or non-standard operations.
Label: Customization
Category: Software development

17. 
Criteria: Expressions of user needs or requirements.
Label: User needs
Category: User interaction

18. 
Criteria: Statements indicating user agreement or alignment with a viewpoint.
Label: User agreement
Category: User interaction

19. 
Criteria: Discussions about expanding features or content.
Label: Expansion
Category: Software development

20. 
Criteria: References to advanced or complex scenarios in the software.
Label: Advanced scenarios
Category: Software development

21. 
Criteria: Sharing knowledge or information among users.
Label: Knowledge sharing
Category: User interaction

22. 
Criteria: Interactions or conversations among users.
Label: User interaction
Category: User interaction

23. 
Criteria: Use of diverse languages or language diversity in communication.
Label: Language diversity
Category: User interaction

24. 
Criteria: Mention of potential future features in the software.
Label: Future software feature
Category: Software development

25. 
Criteria: References to physics concepts or principles.
Label: Physics concepts
Category: Educational content

26. 
Criteria: Discussions about imitating real-world phenomena in software.
Label: Software imitation
Category: Software development

27. 
Criteria: Mentions of different platforms where similar software exists.
Label: Software platforms
Category: Software development

28. 
Criteria: References to limitations in memory or recall.
Label: Memory limitations
Category: User interaction

29. 
Criteria: Collaborative efforts to solve problems or find solutions.
Label: Collaborative problem solving
Category: User interaction

30. 
Criteria: Inquiries about specific features or functionalities in the software.
Label: Software feature inquiry
Category: Software development

31. 
Criteria: Statements indicating a focus on studying or learning.
Label: Focus on studying
Category: Educational content

32. 
Criteria: Descriptions of the approach taken in software development.
Label: Software development approach
Category: Software development
---