You are an expert in thematic analysis clarifying the criteria of qualitative codes. Do not attempt to merge codes now.
Consider provided quotes, and note that each quote is independent of others.
Write clear and generalizable criteria for each code and do not introduce unnecessary details.
If necessary, refine labels to be more accurate, but do not repeat yourself.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (32 in total):
1. 
Criteria: {Who did what, and how for code 1}
Label: {A descriptive label of code 1}
...
32.
Criteria: {Who did what, and how for code 32}
Label: {A descriptive label of code 32}
---
~~~
1.
Label: seeking ai assistance for agent based modeling
Quotes:
- E04: I use it a lot for developing like, equations for specific like, aspects of agent-based models that I create. (interviewer's observation) Helpful for creating equations

2.
Label: imagining ai assisted learning processes
Quotes:
- E01: I cannot learn like that. I'm sorry. I am not a top left first page to last page. So if AI can help find a good place to start and manage that learning process, then I think that's astounding. (interviewer's observation) Critique on the existing situation of technical documentation and imagine that AI could improve the learning process.

3.
Label: describes it as intuitive
Quotes:
- E04: It seems like it's, you know, pretty straightforward to use and like intuitive, which is nice. And it's like, it's easy to interact with. So I feel like if I had like enough time to play around with it, it could be like really helpful. (interviewer's observation) Straightforward to use and intuitive.

4.
Label: initiates the task of instructing chat gpt to create a specific program
Quotes:
- E01: So let's say "I would like to write code to have a turtle run slowly around the perimeter of a square." (interviewer's observation) E01's first task.

5.
Label: appreciates ai parameter clarification
Quotes:
- E04: I thought it was really cool that, you know, that it knew exactly what I wanted to do and then kind of allowed me to define like the certain parameters for what I wanted to do. (interviewer's observation) Having the interface to clarify parameters helps.

6.
Label: having an accessible  instanteous form of assistance is helpful for simple questions
Quotes:
- E04: And it could take a lot of time to like search the documentation and go online and try and figure out all those answers and just to have it like right there. So you can kind of stay within the task is really nice. (interviewer's observation) The capability to search for documentation and read it inside the workspace: esp. beneficial for novices.

7.
Label: comparing net logo to other languages
Quotes:
- E01: And I got to admit like these days, NetLogo is the only language I use that does not have a smart editor. It doesn't autocomplete it or give me options of these are five variables that begin with those three letters. (interviewer's observation) NetLogo's lack of smart code editors (we have one in TU that he would later see).

8.
Label: interviewer proposing to try chat gpt with the same prompt
Quotes:
- E01: "I would like to write code to have a turtle run slowly around the perimeter of a square, but the square should go larger each time it goes around in NetLogo." (interviewer's observation) Interviewer proposes to try ChatGPT with the same prompt.

9.
Label: emphasizes oral tradition
Quotes:
- E01: So my observation is that a critical, critical 10%, maybe more, maybe a lot more of knowledge that you need to do your job in software is only contained in oral tradition. It's, it is not documented anywhere.  (interviewer's observation) E01's reflection on knowledge in pieces - how they are generated and sustained.

10.
Label: analyzes ai's comprehension of tasks
Quotes:
- E04: I know that Perceptron model exists in the NetLogo model library. So it's interesting to me that it didn't pull that up, but it could be that I used like the wrong verbiage, but it doesn't understand what I'm trying to do. (interviewer's observation) E04 expects ChatLogo to find "Perceptron" model from the library but it does not. He evaluates the search results of the AI.

11.
Label: appreciating inclusion of unit tests
Quotes:
- E04: It includes debugging, it is actually trying to incorporate like a unit test, which is really cool and really helpful, especially for beginners, because they can kind of, you know, check their inputs. Beginners, everyone really. They can debug their code appropriately. (interviewer's observation) Debugging capability.

12.
Label: chatgpt ability (negative): not deterministic
Quotes:
- E04: Sometimes it'll give me instructions and sometimes it'll just give me the code and then sometimes it'll tell me to use R extensions or something like that. It is random in that regard, it's not deterministic in terms of what result you're going to get. (interviewer's observation) E04 regularly evaluates the AI responses and thinks that it is not deterministic.

13.
Label: questions potential of ai functionalities
Quotes:
- E04: So if I can talk to it in NetLogo, does that mean I could give it in the logo command and then it would like turn that into code on the backend or? (interviewer's observation) Initial confusion over what the system could do.

14.
Label: an iterative learning process
Quotes:
- E01: This is what conversations with ChatGPT typically look like. I had to go through about eight separate times to get all the errors out of it.  But, but look at how it structured the code. Look at the things that did look what you could learn from this. This is valuable. (interviewer's observation) Users may benefit from the iterative debugging process during working with AI, even though AI might give wrong answers.

15.
Label: structures model before involving ai
Quotes:
- E04: I just like being able to kind of, like, iteratively build it. The thing that I always do when I create a model is I do, like, the initial command. I'll set up and go here. I'll go ahead and after I kind of set up the buttons, I'll put the functions behind them back here in the interface. (interviewer's observation) E04 creates the code skeleton before asking ChatGPT. He has a clear idea & established process of building ABMs.

16.
Label: reflects on importance of user skills
Quotes:
- E01: Part of this, the user needs a little practice in debugging their own code. There should be some exercises before you ask GPT to do this.  (interviewer's observation) Users need practice in debugging their own code and need to have exercises before asking AI.

17.
Label: expects ai to retrieve specific models from the net logo library
Quotes:
- E04: I know that Perceptron model exists in the NetLogo model library. So it's interesting to me that it didn't pull that up, but it could be that I used like the wrong verbiage, but it doesn't understand what I'm trying to do. (interviewer's observation) E04 expects ChatLogo to find "Perceptron" model from the library but it does not. He evaluates the search results of the AI.

18.
Label: acknowledging learning curve for ai tool
Quotes:
- E04: Part of the issue that I'm having now is just kind of like the learning curve, just trying to figure out how everything works. (interviewer's observation) E04 mentions a learning curve, likely because our current design is not fine-tuned for experts.

19.
Label: considers phrasing for ai queries
Quotes:
- E04: "I want to create a simple perception" (interviewer's observation) Thinks a bit about whether to use "in NetLogo" or not.

20.
Label: notes benefit for novices
Quotes:
- E04: I think that it's nice that it's, it clarifies error codes. I think that's probably where people who are new get stuck the most is trying to figure out the syntax and all the different errors. (interviewer's observation) The capability to clarify the errors.

21.
Label: lacks experience with other versions
Quotes:
- E04: I don't know if I've ever tried 4. I guess it would be 3.5. (interviewer's observation) Only used ChatGPT 3.5 before

22.
Label: envisions ai questioning and guiding learners in code development
Quotes:
- E01: What if you were just sitting in a peer programming and sitting next to a, uh, a bright person who was helping you, what would you want them to do? So you might start writing a line of code and they would stop and go, why are you, why are you typing? (interviewer's observation) E01 discusses how AI could potentially serve as a pair programmer that questions the learners' motives.

23.
Label: seeking visual output
Quotes:
- E01: "please write a netlogo program that produces a checker board with black and white squares?" (interviewer's observation) E01 asks ChatLogo to create a checkerboard pattern.

24.
Label: appreciates ai's utility in model translation
Quotes:
- E04: I've found that AI is really helpful for like, translating other models from other languages into NetLogo, for example. (interviewer's observation) Helpful for translating from other languages into NetLogo

25.
Label: ability (positive): translating other progamming languages
Quotes:
- E04: I've found that AI is really helpful for like, translating other models from other languages into NetLogo, for example. (interviewer's observation) Helpful for translating from other languages into NetLogo

26.
Label: values the interface's ability to clarify parameters
Quotes:
- E04: I thought it was really cool that, you know, that it knew exactly what I wanted to do and then kind of allowed me to define like the certain parameters for what I wanted to do. (interviewer's observation) Having the interface to clarify parameters helps.

27.
Label: conversation
Quotes:
- E04: So if I can talk to it in NetLogo, does that mean I could give it in the logo command and then it would like turn that into code on the backend or? (interviewer's observation) Initial confusion over what the system could do.

28.
Label: testing ai's code generation capabilities
Quotes:
- E01: So let's say "I would like to write code to have a turtle run slowly around the perimeter of a square." (interviewer's observation) E01's first task.

29.
Label: empathizing with others’ struggles
Quotes:
- E01: I had a problem and I couldn't figure out how to solve this problem. I finally got online and I discovered there was this user group that would help you for free with problems. And it was stunning. (interviewer's observation) E01's reflection on seeking help online.

30.
Label: e04 quickly abandons ai interaction due to unsatisfactory results
Quotes:
- E04: So that's interesting anyways, I'm going back to Perceptron. (interviewer's observation) E04 gives up immediately after the AI asks the same question again.

31.
Label: translates models from other languages
Quotes:
- E04: I've found that AI is really helpful for like, translating other models from other languages into NetLogo, for example. (interviewer's observation) Helpful for translating from other languages into NetLogo

32.
Label: interviewee discussing the importance of writing clear instructions for ai
Quotes:
- E01: In terms of learning experiences, like ramping up to using an assistant wrapping up to using ChatGPT might have some sort of evaluates. How well can you write instructions for another person? Some people just don't know how to conceptualize a problem. (interviewer's observation) E01 discusses how "writing instructions" is a capability that is missing on many people, and that is key to work with AI.
===
Here are the definitions for each code:

1.
Criteria: The participant expresses the desire to use AI assistance for agent-based modeling tasks.
Label: Seeking AI assistance for agent-based modeling

2.
Criteria: The participant imagines a learning process that incorporates AI assistance.
Label: Imagining AI-assisted learning processes

3.
Criteria: The participant describes the AI interface as intuitive and easy to use.
Label: Describes AI interface as intuitive

4.
Criteria: The participant initiates a task by instructing the AI to create a specific program.
Label: Initiating AI-assisted programming tasks

5.
Criteria: The participant appreciates the AI's ability to clarify parameters for a task.
Label: Appreciates AI parameter clarification

6.
Criteria: The participant finds it helpful to have an accessible and instantaneous form of assistance for simple questions.
Label: Appreciates instant AI assistance for simple questions

7.
Criteria: The participant compares NetLogo to other programming languages in terms of smart editors.
Label: Comparing NetLogo to other languages

8.
Criteria: The interviewer proposes trying the AI with a specific prompt.
Label: Interviewer proposes AI task

9.
Criteria: The participant emphasizes the importance of oral tradition in knowledge sharing.
Label: Emphasizes oral tradition

10.
Criteria: The participant analyzes the AI's comprehension of tasks and evaluates its performance.
Label: Analyzes AI task comprehension

11.
Criteria: The participant appreciates the inclusion of unit tests in the AI's output.
Label: Appreciates unit tests

12.
Criteria: The participant notes that the AI's responses are not deterministic.
Label: Critiques AI non-determinism

13.
Criteria: The participant questions the potential of AI functionalities.
Label: Questions AI potential

14.
Criteria: The participant describes an iterative learning process involving AI assistance.
Label: Envisions iterative AI-assisted learning

15.
Criteria: The participant structures a model before involving AI assistance.
Label: Structures model before AI involvement

16.
Criteria: The participant reflects on the importance of user skills in working with AI.
Label: Reflects on user skills importance

17.
Criteria: The participant expects the AI to retrieve specific models from the NetLogo library.
Label: Expects AI model retrieval

18.
Criteria: The participant acknowledges a learning curve for using AI tools.
Label: Acknowledges AI learning curve

19.
Criteria: The participant considers phrasing for AI queries.
Label: Considers AI query phrasing

20.
Criteria: The participant notes the benefit of AI assistance for novices.
Label: Notes AI benefit for novices

21.
Criteria: The participant lacks experience with other versions of AI tools.
Label: Lacks experience with other AI versions

22.
Criteria: The participant envisions AI questioning and guiding learners in code development.
Label: Envisions AI-guided code development

23.
Criteria: The participant seeks visual output from the AI.
Label: Seeks visual AI output

24.
Criteria: The participant appreciates the AI's utility in model translation.
Label: Appreciates AI model translation

25.
Criteria: The participant values the AI's ability to translate other programming languages.
Label: Values AI language translation

26.
Criteria: The participant values the interface's ability to clarify parameters.
Label: Values parameter clarification

27.
Criteria: The participant engages in conversation with the AI.
Label: Engages in AI conversation

28.
Criteria: The participant tests the AI's code generation capabilities.
Label: Tests AI code generation

29.
Criteria: The participant empathizes with others' struggles with AI tools.
Label: Empathizes with AI struggles

30.
Criteria: The participant quickly abandons AI interaction due to unsatisfactory results.
Label: Abandons AI interaction due to unsatisfactory results

31.
Criteria: The participant translates models from other languages using AI assistance.
Label: Translates models using AI

32.
Criteria: The participant discusses the importance of writing clear instructions for AI.
Label: Discusses importance of clear AI instructions