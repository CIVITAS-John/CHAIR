You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (25 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
25. {Repeat the input 25}
Relationship: {The logical relationship between concepts in input 25}
Criteria: {A sentence of consolidated criteria for code 25}
Label: {A consolidated label of code 25}
Category: {2-4 words for code 25}
---
~~~
1. resource access, resource location.
- Instances of providing or requesting access to resources, guidance, or information about the platform.
- Interactions where users share or request information on how to access resources related to the platform.

2. emotional expression, user interaction: expressing emotions.
- Instances of community members expressing or conveying emotions through language or emojis.
- Users expressing emotions or reactions through emojis or other means.

3. designer communication, designer-community interaction.
- Interaction between the designer and the community, focusing on responses to inquiries, updates, and information sharing.
- The back-and-forth communication and collaboration between the designer and the community members.

4. collaboration and consultation, consultation and inclusion.
- Designer soliciting input or feedback from community members.
- Examples of the designer seeking opinions, preferences, or information from the community to guide design decisions.

5. positive feedback, appreciation for software, shared experiences and praise.
- Positive user expressions regarding the software's performance, design, or feature updates.
- Users expressing satisfaction or positive feedback about the software.
- Users sharing their experiences and positive feedback about the software.

6. user feedback, user feedback and interaction.
- Instances where users provide feedback, suggestions, or highlight issues with the software.
- Users provide feedback on their experience with the software.
- Instances where users provide feedback or interact directly with the developers about the tool's features or usability.

7. response to requests, designer feedback response.
- Designers respond to user requests, providing feedback or guidance.
- Instances where the designer acknowledges, addresses, or acts upon user feedback, requests, or questions.

8. content prioritization, development prioritization.
- Conversations on prioritizing specific sections of the platform for development.
- Discussions related to the prioritization of development tasks or features within the project.

9. download instructions, download and installation.
- Users ask questions about how to download the software.
- Instructions or clarifications on how to download or install the app.
- Community members asking about or receiving instructions on how to download or install the software.

10. compatibility concerns, system compatibility.
- Discussions about software compatibility with different operating systems and hardware.
- User concerns about software compatibility across systems/versions or technical specifications discussed.
- Instances where users discuss technical issues related to system compatibility.

11. usability feedback.
- Instances where ease of use, practical aspects, and user experience of the software are discussed.
- Comments from users providing feedback, suggestions, or describing their experience with the software's usability and user experience.

12. designer user interaction.
- Instances where designers provide timely and relevant feedback to users, addressing their concerns or queries about the platform.
- Instances where the designer communicates with users, shares updates, responds to inquiries, or explicitly requests feedback on design or usability aspects.

13. user experience.
- Features that enhance the overall experience and satisfaction of using the software.
- Considerations, discussions, or aspects related to the user experience, interface design, and usability of the software or application.

14. user-centered design.
- User-initiated discussions on software features and usability improvements.
- Instances where the design approach involves users to ensure the software meets their needs.
- The Designer prioritizing user needs and expectations in the design process.
- Evidence of users being actively involved in the design process by providing suggestions for new features or functionality, and indications of how user feedback shapes the software design.

15. recognition of effort.
- Acknowledgment of hard work put in by members of the community.
- Instances where users acknowledge the effort or work done by others, often showing appreciation.

16. feature requests.
- Instances where users request or discuss platform features.
- Instances where users make specific requests or suggestions for new features, content, or functionalities.

17. technical support.
- Assistance provided to users regarding technical issues or operational guidance of the software.
- Instances of guidance, help, or solutions provided to address technical issues or problems.

18. usability.
- Discussions related to the usability and user experience of the Physics Lab software, including factors that affect the ease of use and effectiveness of the software in supporting users' tasks and goals.
- Evaluating the ease of use and practicality of features within the simulation software.

19. community engagement.
- The designer's efforts to actively involve the user community in the development process, and the level of engagement and participation from the community members, such as providing feedback, requesting features, and collaborating with the designers.
- Involvement of community members in decision-making processes regarding platform development.

20. scaffolding.
- The support and guidance provided by the Physics Lab software and the designer to help users understand and use the software effectively.
- Providing support to help community members understand or engage with the content.

21. knowledge exchange.
- Instances where community members share knowledge, expertise, or resources related to physics education, or ask for or receive knowledge, information, or resources from others.
- Instances where community members share knowledge, information, or resources to support learning.

22. participatory design.
- Instances where the designer actively involves the community in the design process.
- Instances where users actively participate in the design process through feedback, suggestions, or other forms of direct involvement, and where designers incorporate this input.

23. simulated experiment assessment.
- The design and development of a simulated experiment assessment function for electricity concepts.
- Discussions related to the planned feature for simulated experiment assessment and its educational value.

24. information seeking.
- Users actively seeking information or guidance within the online community, including specific features or versions of Physics Lab.
- Members ask questions or seek information within the group.

25. prioritization.
- Designers explaining the order in which they will address different sections or features.
- Designers prioritize tasks or features for development.
===
Here is the output:

---
Categories: 
* Community Engagement
* Design Process
* Feedback and Response
* Learning and Support
* Platform Development
* User Experience

Definitions for each code:

1. resource access, resource location.
Relationship: Inclusive
Criteria: Instances of providing or requesting access to resources, guidance, or information about the platform.
Label: Resource Access
Category: Learning and Support

2. emotional expression, user interaction: expressing emotions.
Relationship: Parallel
Criteria: Community members expressing or conveying emotions through language or emojis.
Label: Emotional Expression
Category: Community Engagement

3. designer communication, designer-community interaction.
Relationship: Inclusive
Criteria: Interaction between the designer and the community, focusing on responses to inquiries, updates, and information sharing.
Label: Designer Communication
Category: Feedback and Response

4. collaboration and consultation, consultation and inclusion.
Relationship: Inclusive
Criteria: Designer soliciting input or feedback from community members.
Label: Collaboration and Consultation
Category: Design Process

5. positive feedback, appreciation for software, shared experiences and praise.
Relationship: Parallel
Criteria: Positive user expressions regarding the software's performance, design, or feature updates.
Label: Positive Feedback
Category: User Experience

6. user feedback, user feedback and interaction.
Relationship: Inclusive
Criteria: Instances where users provide feedback, suggestions, or highlight issues with the software.
Label: User Feedback
Category: Feedback and Response

7. response to requests, designer feedback response.
Relationship: Inclusive
Criteria: Designers respond to user requests, providing feedback or guidance.
Label: Response to Requests
Category: Feedback and Response

8. content prioritization, development prioritization.
Relationship: Inclusive
Criteria: Conversations on prioritizing specific sections of the platform for development.
Label: Content Prioritization
Category: Platform Development

9. download instructions, download and installation.
Relationship: Inclusive
Criteria: Users ask questions about how to download the software.
Label: Download Instructions
Category: Learning and Support

10. compatibility concerns, system compatibility.
Relationship: Inclusive
Criteria: Discussions about software compatibility with different operating systems and hardware.
Label: Compatibility Concerns
Category: Platform Development

11. usability feedback.
Relationship: Inclusive
Criteria: Instances where ease of use, practical aspects, and user experience of the software are discussed.
Label: Usability Feedback
Category: User Experience

12. designer user interaction.
Relationship: Inclusive
Criteria: Instances where designers provide timely and relevant feedback to users, addressing their concerns or queries about the platform.
Label: Designer User Interaction
Category: Feedback and Response

13. user experience.
Relationship: Inclusive
Criteria: Features that enhance the overall experience and satisfaction of using the software.
Label: User Experience
Category: User Experience

14. user-centered design.
Relationship: Inclusive
Criteria: User-initiated discussions on software features and usability improvements.
Label: User-Centered Design
Category: Design Process

15. recognition of effort.
Relationship: Inclusive
Criteria: Acknowledgment of hard work put in by members of the community.
Label: Recognition of Effort
Category: Community Engagement

16. feature requests.
Relationship: Inclusive
Criteria: Instances where users request or discuss platform features.
Label: Feature Requests
Category: Platform Development

17. technical support.
Relationship: Inclusive
Criteria: Assistance provided to users regarding technical issues or operational guidance of the software.
Label: Technical Support
Category: Learning and Support

18. usability.
Relationship: Inclusive
Criteria: Discussions related to the usability and user experience of the Physics Lab software.
Label: Usability
Category: User Experience

19. community engagement.
Relationship: Inclusive
Criteria: The designer's efforts to actively involve the user community in the development process.
Label: Community Engagement
Category: Community Engagement

20. scaffolding.
Relationship: Inclusive
Criteria: The support and guidance provided by the Physics Lab software and the designer to help users understand and use the software effectively.
Label: Scaffolding
Category: Learning and Support

21. knowledge exchange.
Relationship: Inclusive
Criteria: Instances where community members share knowledge, expertise, or resources related to physics education.
Label: Knowledge Exchange
Category: Learning and Support

22. participatory design.
Relationship: Inclusive
Criteria: Instances where the designer actively involves the community in the design process.
Label: Participatory Design
Category: Design Process

23. simulated experiment assessment.
Relationship: Inclusive
Criteria: The design and development of a simulated experiment assessment function for electricity concepts.
Label: Simulated Experiment Assessment
Category: Platform Development

24. information seeking.
Relationship: Inclusive
Criteria: Users actively seeking information or guidance within the online community.
Label: Information Seeking
Category: Learning and Support

25. prioritization.
Relationship: Inclusive
Criteria: Designers explaining the order in which they will address different sections or features.
Label: Prioritization
Category: Platform Development