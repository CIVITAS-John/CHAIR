You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: innovative design, emphasize innovation
- A designer highlights an innovative or unique design aspect.
- A designer emphasizes innovation or new ideas in design.

2.
Concepts: introduce new features, promote innovative features
- Designer introduces a new feature or functionality.
- Designer highlights innovative or unique features of the software.

3.
Concepts: encourage experimentation, encourage adaptation in experimental setups, supporting experimentation
- Encouraging or promoting experimentation or exploration.
- Designer encourages users to adapt or modify experimental setups.
- The designer supports or encourages user experimentation.

4.
Concepts: highlighting component versatility, highlighting component features
- The designer highlights the flexibility of a specific component in the physics lab.
- A designer highlights a feature or component of the Physics Lab software, explaining its capabilities or benefits.

5.
Concepts: enhance experimental detail, add experimental details to enhance usability
- Designer discusses adding experimental details to enhance the simulation experience.
- Designer adds experimental details to enhance the usability of the Physics Lab.

6.
Concepts: considering future experiments, mention potential chemistry experiments
- Designer considers or discusses potential future experiments or features.
- The designer mentions potential chemistry experiments or features.

7.
Concepts: providing simulation options, encouraging simulation techniques
- A designer provides simulation options or alternatives.
- Designer suggests or encourages the use of specific simulation techniques.

8.
Concepts: describe component changes, component property explanations
- The designer describes detailed changes to software components.
- The designer explains or lists adjustments made to component properties or features in the simulation.

9.
Concepts: simulation details, providing detailed simulated experiment assessment
- The designer explains or provides details about the simulation, such as how it will work or what it will include.
- A designer provides detailed information about simulated experiment assessment.

10.
Concepts: provide flexibility in usage, providing user control options
- Designer provides flexible usage options or alternatives for users.
- Designer provides users with options or flexibility in using the software.

11.
Concepts: suggest flexibility, suggests design flexibility
- Suggesting flexibility in project scope or feature implementation.
- Suggestions are made to increase the flexibility of the software's design.

12.
Concepts: self-rebuttal, self-correction
- The designer corrects or clarifies their previous response.
- Designer corrects or reconsiders their previous statement or idea.

13.
Concepts: suggest manual adjustment, suggest practical adjustments
- Suggesting manual adjustments or tweaks to a feature or functionality.
- Designer suggests practical adjustments or improvements to the system or feature.

14.
Concepts: limitation of the team, acknowledging limitations, explain current version's limitation
- A designer expresses limitations or constraints faced by the development team.
- Designer acknowledges limitations or constraints in the software.
- Designer explains the limitations, constraints, or bugs in the current version or feature.

15.
Concepts: outlining limitations, design limitation explanation, clarifying limitations
- A designer outlines limitations of experimental scope.
- Limitations or constraints of the design are explained.
- A designer clarifies system limitations or informs users of constraints.

16.
Concepts: contextualizing constraints, contextualize project limitations
- Providing context or explanations for constraints or limitations
- Designer contextualizes project limitations, constraints, or trade-offs.

17.
Concepts: addressing limitations, considering practical constraints, providing technical limitations, adapting to constraints
- The designer addresses limitations and provides solutions.
- Designer considers practical constraints or limitations.
- A designer provides technical limitations or constraints.
- A designer adapts to a user's constraint or limitation.

18.
Concepts: teaching, explaining procedural steps
- A designer teaches or explains a concept, providing instruction or guidance.
- A designer explains a process or procedure.

19.
Concepts: explaining plans, shares visual aids for understanding
- Designer explains plans or features in detail.
- A designer shares visual aids to facilitate understanding and confirmation.

20.
Concepts: clarifying platform requirements, submission process clarification
- The designer clarifies platform requirements.
- A designer clarifies the process or requirements for submission or review.

21.
Concepts: elaborating on responses, providing detailed explanations
- Designers provide additional information or elaboration on topics.
- Designers provide detailed explanations or responses to questions.

22.
Concepts: provides context, addressing ambiguity
- Designer provides context or clarification for the conversation.
- Designers address or clarify ambiguity or unclearness in a previous statement or concept.

23.
Concepts: explaining design goals, explaining design philosophy, explain design intention
- Explanations of design goals or objectives.
- Designer states a design principle or philosophy.
- Designer explains the intention or rationale behind the design of the app.

24.
Concepts: providing design opinions, explaining design benefits, explaining feature importance
- Providing an opinion on why a feature or design is important
- The designer explains the benefits or advantages of a design choice or feature.
- A designer explains the importance or significance of a feature or component.

25.
Concepts: provide ideal component, inform about ideal components
- The designer provides an ideal component or feature that meets specific requirements.
- Designer informs users about ideal components or resources.

26.
Concepts: identifying user roles, questioning user identity
- Designer identifies a user's role or profession.
- Designer questions a user's identity, role, or profession.

27.
Concepts: gathering user context, personalize interaction
- Designers inquire about and explore user background and context to gather information.
- Designer personalizes interaction with users, asking about their background or context.

28.
Concepts: assessing user environment, inquire about technical condition
- A designer assesses the user's environment or system requirements.
- The designer inquires about a user's technical condition or environment.

29.
Concepts: gather detailed requirements, identifying support requirements
- Gathering of detailed requirements or needs from users.
- Identifying or requesting user support requirements

30.
Concepts: identifying practical needs, validate practical needs
- Identifying a practical need or requirement for the software
- Designer validates or acknowledges practical needs or requirements from users.

31.
Concepts: align development with user needs, align development with community needs
- Designer mentions aligning development with user needs, such as including specific features or components.
- A designer aligns or prioritizes software development with the needs or preferences of the user community.

32.
Concepts: commits to meeting user needs, connecting features to user needs
- A designer commits to meeting user needs and supports their requirements.
- A designer connects features to user needs and expectations.
===
Here are the definitions for each code:

---
1.
Concepts: innovative design, emphasize innovation
Relationship: The concepts are related as they both highlight the importance of innovation in design.
Criteria: A designer highlights innovative or unique design aspects and emphasizes innovation or new ideas in design.
Phrase: Emphasizing innovative design

2.
Concepts: introduce new features, promote innovative features
Relationship: The concepts are related as they both involve introducing new or innovative features.
Criteria: A designer introduces new features or functionalities and highlights innovative or unique features of the software.
Phrase: Introducing innovative features

3.
Concepts: encourage experimentation, encourage adaptation in experimental setups, supporting experimentation
Relationship: The concepts are related as they all promote experimentation and exploration.
Criteria: A designer encourages or promotes experimentation or exploration, adapts or modifies experimental setups, and supports user experimentation.
Phrase: Encouraging experimentation

4.
Concepts: highlighting component versatility, highlighting component features
Relationship: The concepts are related as they both highlight the capabilities of components.
Criteria: A designer highlights the flexibility of a specific component in the physics lab and explains its capabilities or benefits.
Phrase: Highlighting component versatility

5.
Concepts: enhance experimental detail, add experimental details to enhance usability
Relationship: The concepts are related as they both aim to enhance the simulation experience.
Criteria: A designer adds experimental details to enhance the simulation experience and usability of the Physics Lab.
Phrase: Enhancing experimental detail

6.
Concepts: considering future experiments, mention potential chemistry experiments
Relationship: The concepts are related as they both involve considering future possibilities.
Criteria: A designer considers or discusses potential future experiments or features, including chemistry experiments.
Phrase: Considering future experiments

7.
Concepts: providing simulation options, encouraging simulation techniques
Relationship: The concepts are related as they both provide alternatives for simulation.
Criteria: A designer provides simulation options or alternatives and suggests or encourages the use of specific simulation techniques.
Phrase: Providing simulation options

8.
Concepts: describe component changes, component property explanations
Relationship: The concepts are related as they both involve explaining component details.
Criteria: A designer describes detailed changes to software components and explains or lists adjustments made to component properties or features.
Phrase: Describing component changes

9.
Concepts: simulation details, providing detailed simulated experiment assessment
Relationship: The concepts are related as they both provide detailed information about simulations.
Criteria: A designer explains or provides details about the simulation and provides detailed information about simulated experiment assessment.
Phrase: Providing simulation details

10.
Concepts: provide flexibility in usage, providing user control options
Relationship: The concepts are related as they both provide flexibility for users.
Criteria: A designer provides flexible usage options or alternatives for users and provides users with options or flexibility in using the software.
Phrase: Providing flexibility in usage

11.
Concepts: suggest flexibility, suggests design flexibility
Relationship: The concepts are related as they both suggest increasing flexibility.
Criteria: A designer suggests flexibility in project scope or feature implementation and suggests increasing the flexibility of the software's design.
Phrase: Suggesting flexibility

12.
Concepts: self-rebuttal, self-correction
Relationship: The concepts are related as they both involve correcting or clarifying previous statements.
Criteria: A designer corrects or clarifies their previous response and corrects or reconsiders their previous statement or idea.
Phrase: Correcting oneself

13.
Concepts: suggest manual adjustment, suggest practical adjustments
Relationship: The concepts are related as they both involve suggesting adjustments.
Criteria: A designer suggests manual adjustments or tweaks to a feature or functionality and suggests practical adjustments or improvements to the system or feature.
Phrase: Suggesting adjustments

14.
Concepts: limitation of the team, acknowledging limitations, explain current version's limitation
Relationship: The concepts are related as they all involve acknowledging limitations.
Criteria: A designer expresses limitations or constraints faced by the development team, acknowledges limitations or constraints in the software, and explains the limitations, constraints, or bugs in the current version or feature.
Phrase: Acknowledging limitations

15.
Concepts: outlining limitations, design limitation explanation, clarifying limitations
Relationship: The concepts are related as they all involve explaining limitations.
Criteria: A designer outlines limitations of experimental scope, explains limitations or constraints of the design, and clarifies system limitations or informs users of constraints.
Phrase: Outlining limitations

16.
Concepts: contextualizing constraints, contextualize project limitations
Relationship: The concepts are related as they both involve providing context for limitations.
Criteria: A designer provides context or explanations for constraints or limitations and contextualizes project limitations, constraints, or trade-offs.
Phrase: Contextualizing constraints

17.
Concepts: addressing limitations, considering practical constraints, providing technical limitations, adapting to constraints
Relationship: The concepts are related as they all involve addressing or adapting to limitations.
Criteria: A designer addresses limitations and provides solutions, considers practical constraints or limitations, provides technical limitations or constraints, and adapts to a user's constraint or limitation.
Phrase: Addressing limitations

18.
Concepts: teaching, explaining procedural steps
Relationship: The concepts are related as they both involve explaining or guiding users.
Criteria: A designer teaches or explains a concept, providing instruction or guidance, and explains a process or procedure.
Phrase: Teaching and guiding

19.
Concepts: explaining plans, shares visual aids for understanding
Relationship: The concepts are related as they both involve explaining plans or features.
Criteria: A designer explains plans or features in detail and shares visual aids to facilitate understanding and confirmation.
Phrase: Explaining plans

20.
Concepts: clarifying platform requirements, submission process clarification
Relationship: The concepts are related as they both involve clarifying requirements or processes.
Criteria: A designer clarifies platform requirements and clarifies the process or requirements for submission or review.
Phrase: Clarifying requirements

21.
Concepts: elaborating on responses, providing detailed explanations
Relationship: The concepts are related as they both involve providing additional information.
Criteria: A designer provides additional information or elaboration on topics and provides detailed explanations or responses to questions.
Phrase: Elaborating on responses

22.
Concepts: provides context, addressing ambiguity
Relationship: The concepts are related as they both involve clarifying or providing context.
Criteria: A designer provides context or clarification for the conversation and addresses or clarifies ambiguity or unclearness in a previous statement or concept.
Phrase: Providing context

23.
Concepts: explaining design goals, explaining design philosophy, explain design intention
Relationship: The concepts are related as they all involve explaining design principles or goals.
Criteria: A designer explains design goals or objectives, states a design principle or philosophy, and explains the intention or rationale behind the design of the app.
Phrase: Explaining design goals

24.
Concepts: providing design opinions, explaining design benefits, explaining feature importance
Relationship: The concepts are related as they all involve explaining design choices or features.
Criteria: A designer provides an opinion on why a feature or design is important, explains the benefits or advantages of a design choice or feature, and explains the importance or significance of a feature or component.
Phrase: Providing design opinions

25.
Concepts: provide ideal component, inform about ideal components
Relationship: The concepts are related as they both involve providing ideal components or resources.
Criteria: A designer provides an ideal component or feature that meets specific requirements and informs users about ideal components or resources.
Phrase: Providing ideal components

26.
Concepts: identifying user roles, questioning user identity
Relationship: The concepts are related as they both involve understanding user roles or identities.
Criteria: A designer identifies a user's role or profession and questions a user's identity, role, or profession.
Phrase: Identifying user roles

27.
Concepts: gathering user context, personalize interaction
Relationship: The concepts are related as they both involve understanding user background and context.
Criteria: A designer inquires about and explores user background and context to gather information and personalizes interaction with users, asking about their background or context.
Phrase: Gathering user context

28.
Concepts: assessing user environment, inquire about technical condition
Relationship: The concepts are related as they both involve understanding user environment or technical conditions.
Criteria: A designer assesses the user's environment or system requirements and inquires about a user's technical condition or environment.
Phrase: Assessing user environment

29.
Concepts: gather detailed requirements, identifying support requirements
Relationship: The concepts are related as they both involve gathering information about user needs.
Criteria: A designer gathers detailed requirements or needs from users and identifies or requests user support requirements.
Phrase: Gathering requirements

30.
Concepts: identifying practical needs, validate practical needs
Relationship: The concepts are related as they both involve understanding user needs.
Criteria: A designer identifies a practical need or requirement for the software and validates or acknowledges practical needs or requirements from users.
Phrase: Identifying practical needs

31.
Concepts: align development with user needs, align development with community needs
Relationship: The concepts are related as they both involve aligning development with user needs.
Criteria: A designer mentions aligning development with user needs, such as including specific features or components, and aligns or prioritizes software development with the needs or preferences of the user community.
Phrase: Aligning development with user needs

32.
Concepts: commits to meeting user needs, connecting features to user needs
Relationship: The concepts are related as they both involve committing to meeting user needs.
Criteria: A designer commits to meeting user needs and supports their requirements, and connects features to user needs and expectations.
Phrase: Committing to meet user needs