You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: clear ai expectations, sets clear expectations for output
- Sets clear expectations for AI assistance, defining specific tasks.
- Sets clear expectations for AI output and functionality.

2.
Concepts: defines a clear task, sets clear tasks for ai, clear objective setting, sets a clear task goal
- Defines a clear task for the AI
- Sets specific tasks or goals for AI assistance
- Engages with AI by providing clear objectives and tasks.
- Setting clear task goals, defining specific objectives for AI-assisted tasks.

3.
Concepts: clear goal setting, sets clear modeling goals
- Sets clear goals and objectives for model development.
- Sets clear modeling goals

4.
Concepts: clear objectives, defines tasks clearly
- Expresses clarity in objectives and tasks
- Clearly defines tasks or objectives

5.
Concepts: writing instructions for ai, highlights the need for instruction writing skills, discusses importance of instruction writing, discusses instruction writing skills
- Discusses the importance of writing instructions as a capability for working with AI.
- Highlights the need for instruction writing skills when working with AI.
- Discusses the importance of instruction writing for AI collaboration.
- Discusses instruction writing skills for AI

6.
Concepts: recognizes the importance of clear instructions, highlights importance of clear instructions
- Recognizes the importance of clear instructions for effective AI assistance.
- The interviewee highlights the importance of clear instructions or guidance in the AI-driven interface.

7.
Concepts: importance of clear communication, shares insights on effective communication
- Highlights the importance of clear communication when working with AI.
- Shares insights on effective communication with AI, including providing clear error messages.

8.
Concepts: recognizes the need for clear explanations, highlights importance of accessible explanations
- Emphasizes the importance of clear explanations, especially for error codes and syntax.
- The participant highlights the importance of accessible explanations, particularly for error codes.

9.
Concepts: clarity in requests, emphasizes need for clarity
- The interviewee aims for clarity in their requests.
- The interviewee emphasizes the importance of clarity in requests, highlighting the need for clear and concise communication.
- The interviewee emphasizes the need for clarity, precision, or detail in communication, especially when seeking help or support.

10.
Concepts: ensuring clarity, emphasizes clarity and effort in requests, aims for clarity in instructions
- Ensures clarity in requests.
- Emphasize the importance of clarity and effort in requests, promoting effective communication.
- Aims for clarity and precision in instructions or requests.

11.
Concepts: simplicity of code, values simple, maintainable code, prefers simple, maintainable code
- Values simplicity and maintainability of code
- Values simple, maintainable code over complex code.
- Prefers simple, maintainable code over complex code.

12.
Concepts: advocates for accessible code, advocates for clear coding practices, advocate for simplicity in code
- Values simplicity and clarity in coding practices
- Advocates for clear coding practices and simplicity in code writing.
- Advocate for simplicity in code, prioritizing maintainability over complexity.

13.
Concepts: code accessibility, preferring simple and accessible code
- The interviewee prefers clear and accessible code structures.
- Prioritizing accessibility and simplicity in code for future reference.
- The participant prefers simple and accessible code.

14.
Concepts: code clarity, prefers readable code
- Values clarity in generated code, preferring readable and well-structured code.
- Prefers readable code or clear documentation.

15.
Concepts: emphasize maintainability, emphasize importance of maintainable code, code maintainability and clarity
- Emphasizes the importance of maintainable code.
- Emphasizes the importance of maintainable code, including readability and documentation.
- Emphasizes the importance of maintainability and clarity in code.

16.
Concepts: code readability, discusses code readability
- Emphasizing readability and simplicity in code for future reference.
- Discusses code readability, prioritizing simplicity and accessibility.

17.
Concepts: values documentation, values code readability
- The participant values documentation and clear code explanations.
- The participant values code readability and the AI system's ability to provide comments and documentation.

18.
Concepts: emphasizes precision, emphasizes the importance of detail
- Emphasizes precision, highlighting the importance of accurate and detailed code.
- Emphasizes the importance of attention to detail in coding and debugging.

19.
Concepts: testing and debugging importance, highlights the importance of effective learning tools
- Emphasizes the importance of testing and debugging code.
- Highlights the importance of effective learning tools, such as debugging and unit testing.

20.
Concepts: values unit testing, values debugging and unit testing
- Values unit testing and debugging capabilities
- Values debugging and unit testing capabilities in AI.

21.
Concepts: highlights benefits for beginners, acknowledges debugging features
- Highlights benefits for beginners, such as debugging capabilities and unit testing.
- Acknowledges the benefits of debugging features, particularly for beginners, who can use them to check their inputs and debug their code.

22.
Concepts: values unit tests for beginners, values unit testing for beginners
- Values unit tests for beginners, recognizing the importance of debugging capabilities.
- Value unit testing for beginners, recognizing its importance in debugging and learning.

23.
Concepts: emphasizes foundational knowledge, emphasizes gaps in foundational knowledge
- Emphasizes the need for foundational knowledge in programming.
- Highlights the importance of foundational knowledge in programming and debugging.

24.
Concepts: foundational skill importance, stresses importance of user skills
- Emphasizes need for foundational skills.
- Recognizes the need for foundational skills in users

25.
Concepts: stresses effective questioning, emphasizes questioning in learning
- Highlights the importance of effective questioning
- Emphasizes the importance of questioning in the learning process.

26.
Concepts: establishing credibility, establishes credibility, underscores credibility
- Establishes credibility as an expert in programming.
- Establishes credibility through prior experiences and expertise in computer programming.
- Establishes credibility through prior programming experiences.

27.
Concepts: values language familiarity, mentions diverse language knowledge
- Emphasizes familiarity with various languages
- Mentions diverse language knowledge and experience.

28.
Concepts: acknowledges breadth of knowledge, acknowledges breadth of programming knowledge
- Acknowledges the breadth of their own knowledge and expertise.
- Participant acknowledges the breadth of their programming knowledge.

29.
Concepts: diverse programming experience, reflects on diverse programming experiences
- Describes diverse programming experience.
- Reflects on diverse programming experiences or backgrounds.

30.
Concepts: multiple language experience, mentions experience with multiple languages, reflects on diverse language experience
- The participant has prior experience with multiple programming languages.
- Mentions their experience with multiple programming languages and previous experience with computer programming.
- Reflects on diverse language experience, mentioning multiple programming languages used in the past.

31.
Concepts: prior programming experience, extensive programming experience
- Reflects on extensive programming experience.
- The participant mentions their prior experience in computer programming.
- The participant has a long history of working with various languages.
- The participant has extensive programming experience and shares their background in computer programming.
- Shares extensive programming background.

32.
Concepts: prefers assisting others, prefers to support others in learning
- Prefers assisting others in learning NetLogo over personal tasks.
- Prefers to support others in learning NetLogo rather than focusing on personal competence.
===
Here are the definitions for each code:

---
1.
Concepts: clear ai expectations, sets clear expectations for output
Relationship: The concepts are related in that they both describe the importance of setting clear expectations for AI assistance and output.
Criteria: Interviewees set clear expectations for AI assistance, defining specific tasks and output functionality.
Phrase: Setting clear AI expectations.

2.
Concepts: defines a clear task, sets clear tasks for ai, clear objective setting, sets a clear task goal
Relationship: The concepts are related in that they all describe the importance of defining clear tasks and objectives for AI assistance.
Criteria: Interviewees define clear tasks and objectives for AI assistance, providing specific goals and expectations.
Phrase: Defining clear tasks for AI.

3.
Concepts: clear goal setting, sets clear modeling goals
Relationship: The concepts are related in that they both describe the importance of setting clear goals for model development.
Criteria: Interviewees set clear goals and objectives for model development, defining specific targets and expectations.
Phrase: Setting clear modeling goals.

4.
Concepts: clear objectives, defines tasks clearly
Relationship: The concepts are related in that they both describe the importance of clarity in objectives and tasks.
Criteria: Interviewees express clarity in objectives and tasks, providing clear definitions and expectations.
Phrase: Defining clear objectives.

5.
Concepts: writing instructions for ai, highlights the need for instruction writing skills, discusses importance of instruction writing, discusses instruction writing skills
Relationship: The concepts are related in that they all describe the importance of writing instructions for AI collaboration.
Criteria: Interviewees discuss the importance of writing instructions for AI, highlighting the need for clear and effective communication.
Phrase: Discussing instruction writing skills.

6.
Concepts: recognizes the importance of clear instructions, highlights importance of clear instructions
Relationship: The concepts are related in that they both describe the importance of clear instructions for effective AI assistance.
Criteria: Interviewees recognize the importance of clear instructions, highlighting the need for effective communication.
Phrase: Recognizing the importance of clear instructions.

7.
Concepts: importance of clear communication, shares insights on effective communication
Relationship: The concepts are related in that they both describe the importance of clear communication for effective AI collaboration.
Criteria: Interviewees highlight the importance of clear communication, sharing insights on effective communication strategies.
Phrase: Highlighting the importance of clear communication.

8.
Concepts: recognizes the need for clear explanations, highlights importance of accessible explanations
Relationship: The concepts are related in that they both describe the importance of clear explanations for effective AI collaboration.
Criteria: Interviewees recognize the importance of clear explanations, highlighting the need for accessible and understandable information.
Phrase: Recognizing the importance of clear explanations.

9.
Concepts: clarity in requests, emphasizes need for clarity
Relationship: The concepts are related in that they both describe the importance of clarity in requests for effective AI assistance.
Criteria: Interviewees aim for clarity in their requests, emphasizing the need for clear and concise communication.
Phrase: Emphasizing clarity in requests.

10.
Concepts: ensuring clarity, emphasizes clarity and effort in requests, aims for clarity in instructions
Relationship: The concepts are related in that they all describe the importance of ensuring clarity in requests and instructions for effective AI collaboration.
Criteria: Interviewees ensure clarity in requests, emphasizing the importance of clear and concise communication.
Phrase: Ensuring clarity in requests.

11.
Concepts: simplicity of code, values simple, maintainable code, prefers simple, maintainable code
Relationship: The concepts are related in that they all describe the importance of simplicity and maintainability in code.
Criteria: Interviewees value simplicity and maintainability in code, preferring clear and accessible structures.
Phrase: Valuing simplicity in code.

12.
Concepts: advocates for accessible code, advocates for clear coding practices, advocate for simplicity in code
Relationship: The concepts are related in that they all describe the importance of advocating for simplicity and clarity in coding practices.
Criteria: Interviewees advocate for accessible code, promoting simplicity and maintainability in coding practices.
Phrase: Advocating for simplicity in code.

13.
Concepts: code accessibility, preferring simple and accessible code
Relationship: The concepts are related in that they both describe the importance of preferring simple and accessible code.
Criteria: Interviewees prefer simple and accessible code, prioritizing maintainability and readability.
Phrase: Preferring accessible code.

14.
Concepts: code clarity, prefers readable code
Relationship: The concepts are related in that they both describe the importance of preferring clear and readable code.
Criteria: Interviewees value clarity in generated code, preferring readable and well-structured code.
Phrase: Preferring readable code.

15.
Concepts: emphasize maintainability, emphasize importance of maintainable code, code maintainability and clarity
Relationship: The concepts are related in that they all describe the importance of emphasizing maintainability and clarity in code.
Criteria: Interviewees emphasize the importance of maintainable code, including readability and documentation.
Phrase: Emphasizing maintainability in code.

16.
Concepts: code readability, discusses code readability
Relationship: The concepts are related in that they both describe the importance of discussing code readability.
Criteria: Interviewees discuss code readability, prioritizing simplicity and accessibility.
Phrase: Discussing code readability.

17.
Concepts: values documentation, values code readability
Relationship: The concepts are related in that they both describe the importance of valuing documentation and code readability.
Criteria: Interviewees value documentation and code readability, prioritizing maintainability and accessibility.
Phrase: Valuing code readability.

18.
Concepts: emphasizes precision, emphasizes the importance of detail
Relationship: The concepts are related in that they both describe the importance of emphasizing precision and attention to detail.
Criteria: Interviewees emphasize precision, highlighting the importance of accurate and detailed code.
Phrase: Emphasizing precision in code.

19.
Concepts: testing and debugging importance, highlights the importance of effective learning tools
Relationship: The concepts are related in that they both describe the importance of testing and debugging in effective learning tools.
Criteria: Interviewees emphasize the importance of testing and debugging code, highlighting the need for effective learning tools.
Phrase: Emphasizing testing and debugging importance.

20.
Concepts: values unit testing, values debugging and unit testing
Relationship: The concepts are related in that they both describe the importance of valuing unit testing and debugging capabilities.
Criteria: Interviewees value unit testing and debugging capabilities, recognizing their importance in coding and debugging.
Phrase: Valuing unit testing and debugging.

21.
Concepts: highlights benefits for beginners, acknowledges debugging features
Relationship: The concepts are related in that they both describe the importance of highlighting benefits for beginners and acknowledging debugging features.
Criteria: Interviewees highlight benefits for beginners, acknowledging the importance of debugging features in learning and debugging.
Phrase: Highlighting benefits for beginners.

22.
Concepts: values unit tests for beginners, values unit testing for beginners
Relationship: The concepts are related in that they both describe the importance of valuing unit testing for beginners.
Criteria: Interviewees value unit testing for beginners, recognizing its importance in learning and debugging.
Phrase: Valuing unit testing for beginners.

23.
Concepts: emphasizes foundational knowledge, emphasizes gaps in foundational knowledge
Relationship: The concepts are related in that they both describe the importance of emphasizing foundational knowledge and gaps in programming.
Criteria: Interviewees emphasize the need for foundational knowledge in programming, highlighting gaps in understanding.
Phrase: Emphasizing foundational knowledge.

24.
Concepts: foundational skill importance, stresses importance of user skills
Relationship: The concepts are related in that they both describe the importance of stressing the importance of user skills and foundational knowledge.
Criteria: Interviewees emphasize the need for foundational skills in users, recognizing their importance in programming and debugging.
Phrase: Emphasizing foundational skills.

25.
Concepts: stresses effective questioning, emphasizes questioning in learning
Relationship: The concepts are related in that they both describe the importance of stressing effective questioning in learning.
Criteria: Interviewees highlight the importance of effective questioning in the learning process, emphasizing its role in understanding and debugging.
Phrase: Emphasizing effective questioning.

26.
Concepts: establishing credibility, establishes credibility, underscores credibility
Relationship: The concepts are related in that they all describe the importance of establishing credibility as an expert in programming.
Criteria: Interviewees establish credibility through prior experiences and expertise in computer programming, underscoring their authority in the field.
Phrase: Establishing credibility.

27.
Concepts: values language familiarity, mentions diverse language knowledge
Relationship: The concepts are related in that they both describe the importance of valuing language familiarity and diverse language knowledge.
Criteria: Interviewees emphasize familiarity with various languages, mentioning their diverse language knowledge and experience.
Phrase: Valuing language familiarity.

28.
Concepts: acknowledges breadth of knowledge, acknowledges breadth of programming knowledge
Relationship: The concepts are related in that they both describe the importance of acknowledging the breadth of one's own knowledge and expertise.
Criteria: Interviewees acknowledge the breadth of their own knowledge and expertise, recognizing their limitations and areas for improvement.
Phrase: Acknowledging breadth of knowledge.

29.
Concepts: diverse programming experience, reflects on diverse programming experiences
Relationship: The concepts are related in that they both describe the importance of reflecting on diverse programming experiences.
Criteria: Interviewees describe diverse programming experience, reflecting on their background and expertise in computer programming.
Phrase: Reflecting on diverse programming experience.

30.
Concepts: multiple language experience, mentions experience with multiple languages, reflects on diverse language experience
Relationship: The concepts are related in that they all describe the importance of reflecting on diverse language experience and multiple language knowledge.
Criteria: Interviewees mention their experience with multiple programming languages, reflecting on their diverse language experience and background.
Phrase: Reflecting on diverse language experience.

31.
Concepts: prior programming experience, extensive programming experience
Relationship: The concepts are related in that they both describe the importance of prior programming experience and extensive background in computer programming.
Criteria: Interviewees reflect on their extensive programming experience, mentioning their prior experience in computer programming and sharing their background.
Phrase: Reflecting on prior programming experience.

32.
Concepts: prefers assisting others, prefers to support others in learning
Relationship: The concepts are related in that they both describe the importance of preferring to assist others in learning over personal tasks.
Criteria: Interviewees prefer assisting others in learning NetLogo over personal tasks, prioritizing support and guidance for others.
Phrase: Preferring to support others in learning.