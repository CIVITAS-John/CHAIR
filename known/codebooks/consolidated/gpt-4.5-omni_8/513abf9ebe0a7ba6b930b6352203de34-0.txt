You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (4 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
4. 
Concepts: {Repeat the input 4}
Relationship: {What is logical relationship between concepts in code 4, or N/A if not applicable}
Criteria: {Who did what, and how for code 4}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: instruction and updates, explaining software update process
- Designers providing updates and instructions to help users understand and use the software effectively.
- Designers explain the software update process and provide information about updates and downloads.

2.
Concepts: address technical limitation, addressing limitations
- Designers address technical limitations of the software.
- Designers discuss the limitations and constraints of the software and potential solutions.

3.
Concepts: encouraging user feedback, cultivating community feedback
- Designers invite, prompt, request, and encourage users to provide feedback, report issues, and suggest features.
- Designers encourage users to share their needs and suggestions, fostering a sense of community.

4.
Concepts: praise software, praising the software
- Users praise the software for its effectiveness and practicality.
- Users express approval and satisfaction with the software by complimenting it and providing positive feedback.
===
---
Definitions for each code (4 in total):
1.
Concepts: instruction and updates, explaining software update process
Relationship: Designers provide updates and instructions to help users understand and use the software effectively.
Criteria: Designers explain the software update process and provide information about updates and downloads.
Phrase: Providing software update instructions

2.
Concepts: address technical limitation, addressing limitations
Relationship: Designers address technical limitations of the software.
Criteria: Designers discuss the limitations and constraints of the software and potential solutions.
Phrase: Addressing software limitations

3.
Concepts: encouraging user feedback, cultivating community feedback
Relationship: Designers invite, prompt, request, and encourage users to provide feedback, report issues, and suggest features.
Criteria: Designers encourage users to share their needs and suggestions, fostering a sense of community.
Phrase: Encouraging user feedback

4.
Concepts: praise software, praising the software
Relationship: Users praise the software for its effectiveness and practicality.
Criteria: Users express approval and satisfaction with the software by complimenting it and providing positive feedback.
Phrase: Praising the software
---