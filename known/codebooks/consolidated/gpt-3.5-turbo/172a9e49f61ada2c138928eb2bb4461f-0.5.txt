You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. If a sub-code includes another, use the broader one. If sub-codes are parallel, write one that covers both.
Write clear and generalizable labels and criteria for each code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization (e.g. "social interaction" instead of "interaction", "communication approach" instead of "communication").
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (19 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {Consolidated criteria of code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
19.
Relationship: {The logical relationship between sub-codes in code 19}
Criteria: {Consolidated criteria of code 19}
Label: {A consolidated label of code 19}
Category: {2-4 words for code 19}
---
~~~
1. design decision agreement, user agreement on design elements.
- Reaching consensus on design decisions within the group.
- Reaching agreement among users on design elements.

2. group resources, shared materials, community resources.
- Shared resources within the community.
- Materials shared among community members.
- Resources shared within the community

3. group engagement, community engagement.
- Engagement of community members in group activities
- Engagement and involvement of community members.

4. feedback gathering, community consultation.
- Gathering feedback from community members.
- Seeking opinions from the community.

5. update timeline, update release schedule.
- Indication of when updates are expected to occur.
- Informing about the schedule for upcoming updates.

6. software release, version release.
- Announcements related to software releases
- Informing about the release of a new software version.

7. positive feedback, positive reinforcement.
- Providing positive comments or feedback.
- Providing positive feedback or reinforcement.

8. appreciation, acknowledgment.
- Expressing gratitude or recognition.
- Expressions of gratitude or acknowledgment.

9. user input organization, user feedback categorization.
- Organization and refinement of user input and feedback
- Categorization or organization of user feedback for refinement

10. user interface enhancement, software functionality improvement.
- Suggestions for enhancing the user interface of the software
- Suggestions for improving the functionality of the software

11. user insights, user experience.
- Insights shared by users based on experiences
- Sharing personal experiences or feedback on user interactions.

12. user involvement, participatory design.
- Involving users in the decision-making process.
- Involving users in the design process of products or services.

13. educational focus, agreement with educational focus.
- Emphasis on the educational aspects and focus of the software
- Agreement with the educational focus of the software

14. network restrictions, classroom network restrictions.
- Restrictions imposed on network access
- Restrictions on classroom network access

15. system requirements, software requirements.
- Specifications or requirements for the system to run the software.
- Specifying the requirements for using software programs.

16. feature requests, feature refinement.
- Requests for new features or enhancements.
- Requests for specific features to be refined or improved

17. feature planning, feature development.
- Planning and discussion of upcoming software features
- Discussion and implementation of new functionalities

18. product enhancement, feature enhancements.
- Enhancing the product through updates.
- Enhancing features or functionalities in software.

19. design iteration, iterative development.
- Engaging in iterative processes for design improvement.
- Engaging in continuous development and refinement of software.
===
Categories: 
* Community Engagement
* User Feedback and Involvement
* Software Development and Updates

Definitions for each code (19 in total):
1.
Relationship: Sub-codes are related as they involve reaching agreement on design elements within the group.
Criteria: Involves consensus and agreement among users on design decisions and elements.
Label: Design Decision Consensus
Category: User Feedback and Involvement

2.
Relationship: Sub-codes are related as they involve sharing resources within the community.
Criteria: Shared materials and resources among community members.
Label: Community Resource Sharing
Category: Community Engagement

3.
Relationship: Sub-codes are related as they both refer to the engagement and involvement of community members.
Criteria: Involves engaging community members in group activities.
Label: Community Engagement
Category: Community Engagement

4.
Relationship: Sub-codes are related as they both involve gathering feedback from community members.
Criteria: Involves seeking opinions and feedback from the community.
Label: Community Feedback Gathering
Category: User Feedback and Involvement

5.
Relationship: Sub-codes are related as they both refer to informing users about update schedules.
Criteria: Indication of when updates are expected to occur.
Label: Update Schedule Communication
Category: Software Development and Updates

6.
Relationship: Sub-codes are related as they both involve announcing software releases.
Criteria: Informing about the release of a new software version.
Label: Software Release Announcement
Category: Software Development and Updates

7.
Relationship: Sub-codes are related as they both involve providing positive feedback or reinforcement.
Criteria: Providing positive comments or feedback to users.
Label: Positive Feedback Provision
Category: User Feedback and Involvement

8.
Relationship: Sub-codes are related as they both involve expressing gratitude or recognition.
Criteria: Expressing gratitude or acknowledgment within the community.
Label: Appreciation Expression
Category: Community Engagement

9.
Relationship: Sub-codes are related as they both involve organizing and refining user feedback.
Criteria: Organizing and categorizing user input and feedback.
Label: User Feedback Organization
Category: User Feedback and Involvement

10.
Relationship: Sub-codes are related as they both involve suggestions for improving software functionality.
Criteria: Suggestions for enhancing the user interface and functionality of the software.
Label: Software Enhancement Suggestions
Category: Software Development and Updates

11.
Relationship: Sub-codes are related as they both involve sharing user insights and experiences.
Criteria: Sharing personal experiences and feedback on user interactions.
Label: User Experience Sharing
Category: User Feedback and Involvement

12.
Relationship: Sub-codes are related as they both involve involving users in the design and decision-making processes.
Criteria: Involving users in the design process of products or services.
Label: User Involvement in Design
Category: User Feedback and Involvement

13.
Relationship: Sub-codes are related as they both involve focusing on educational aspects of the software.
Criteria: Emphasis on the educational focus and aspects of the software.
Label: Educational Focus Emphasis
Category: Community Engagement

14.
Relationship: Sub-codes are related as they both involve network restrictions.
Criteria: Imposing restrictions on network access, including classroom networks.
Label: Network Access Restrictions
Category: Community Engagement

15.
Relationship: Sub-codes are related as they both involve specifying software requirements.
Criteria: Specifying the system requirements needed to run the software.
Label: Software Requirement Specification
Category: Software Development and Updates

16.
Relationship: Sub-codes are related as they both involve feature requests and enhancements.
Criteria: Requests for new features or refinement of existing features.
Label: Feature Request and Refinement
Category: Software Development and Updates

17.
Relationship: Sub-codes are related as they both involve planning and developing software features.
Criteria: Planning and implementing new functionalities in software.
Label: Feature Development Planning
Category: Software Development and Updates

18.
Relationship: Sub-codes are related as they both involve enhancing products through updates.
Criteria: Enhancing software features and functionalities through updates.
Label: Product Enhancement Through Updates
Category: Software Development and Updates

19.
Relationship: Sub-codes are related as they both involve iterative development processes.
Criteria: Engaging in continuous development and refinement of software design.
Label: Design Iteration Process
Category: Software Development and Updates