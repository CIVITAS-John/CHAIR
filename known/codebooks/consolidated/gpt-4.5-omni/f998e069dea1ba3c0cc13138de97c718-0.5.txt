You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (16 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
16. {Repeat the input 16}
Relationship: {The logical relationship between concepts in input 16}
Criteria: {A sentence of consolidated criteria for code 16}
Label: {A consolidated label of code 16}
Category: {2-4 words for code 16}
---
~~~
1. group sharing, resource sharing.
- Participants suggest sharing resources within the group.
- Instances where participants offer to share or discuss sharing resources.

2. user gratitude, gratitude and acknowledgment.
- Expressions of appreciation or thanks from users towards the designers or the community.
- Expressions of thanks or acknowledgment from users.
- Instances where participants thank or appreciate each other for their contributions.

3. expressing reactions, use of emojis and images.
- Participants use emojis to express reactions and emotions.
- Participants using emojis or images to communicate or illustrate points.

4. responsiveness, designer responsiveness.
- Instances where the designer responds to user requests or questions.
- Instances where the designer responds to user feedback, queries, or suggestions.

5. designer updates, designer engagement.
- Instances where the designer provides updates, information, or responds to user queries.
- Replies from the designer that acknowledge, address, or act upon user feedback, including providing updates or explaining design choices.

6. user feedback, user suggestions, user needs and suggestions.
- Contributions from users that provide suggestions or highlight issues with the software.
- Comments or suggestions from users about the software, including requests for features or reporting issues.
- Instances where users provide feedback, ask questions, or express concerns about the software.
- Instances where users provide suggestions or feedback for software improvements.
- User feedback on desired features and functionalities for the software.

7. user involvement, participation in development.
- Instances where users are directly involved in the design process through feedback or suggestions.
- Instances where users contribute ideas or feedback for the development process.

8. designer-user interaction, collaborative design.
- Interactions where designers actively seek and respond to user feedback.
- Instances where the designer involves users in the design process by seeking their input or feedback.

9. announcements, feature announcements.
- The designer provides updates about software versions and new features.
- Instances where the designer announces new features or improvements in the software.

10. information exchange.
- Instances where participants share information or resources with others.
- Instances where users or designers share useful information or resources with the community.

11. feedback incorporation.
- How the designer incorporates user feedback into the software development process.
- Instances where community members provide input or feedback that influences design decisions.

12. usability concerns.
- Discussions about the ease of use and practical aspects of the software.
- Issues or suggestions related to the ease of use and user experience of the software.

13. user-centered design.
- Design approach that involves users in the development process to ensure the software meets their needs.
- Design decisions that prioritize user needs and preferences.

14. iterative development.
- The process of continually improving the software based on user feedback and testing.
- The process of continuously improving the software based on user feedback and testing.
- The process of continuously improving the product based on user feedback and testing.
- Instances where the designer discusses ongoing improvements and updates to the software.

15. feature requests.
- The designer invites users to suggest new features or components for the software.
- Specific functionalities or tools that users ask to be included in the software.

16. knowledge sharing.
- Instances where participants share information, tips, or resources that contribute to collective learning.
- Instances where community members share knowledge or information to support learning.
===
---
Categories: 
* Community Interaction
* Designer Engagement
* User Feedback
* Development Process

Definitions for each code (16 in total):
1. group sharing, resource sharing
Relationship: Both concepts involve sharing within the community.
Criteria: Instances where participants share or discuss sharing resources within the group.
Label: Resource Sharing
Category: Community Interaction

2. user gratitude, gratitude and acknowledgment
Relationship: Both concepts involve expressions of appreciation.
Criteria: Expressions of thanks or acknowledgment from users towards designers or the community.
Label: User Gratitude
Category: Community Interaction

3. expressing reactions, use of emojis and images
Relationship: Both concepts involve non-verbal communication methods.
Criteria: Use of emojis or images to express reactions, emotions, or illustrate points.
Label: Non-verbal Communication
Category: Community Interaction

4. responsiveness, designer responsiveness
Relationship: Both concepts involve the designer’s response to user interactions.
Criteria: Instances where the designer responds to user requests, feedback, or questions.
Label: Designer Responsiveness
Category: Designer Engagement

5. designer updates, designer engagement
Relationship: Both concepts involve the designer’s active participation and communication.
Criteria: Instances where the designer provides updates, information, or responds to user queries and feedback.
Label: Designer Engagement
Category: Designer Engagement

6. user feedback, user suggestions, user needs and suggestions
Relationship: All concepts involve users providing input on the software.
Criteria: Contributions from users that provide suggestions, highlight issues, or express needs regarding the software.
Label: User Feedback
Category: User Feedback

7. user involvement, participation in development
Relationship: Both concepts involve users actively contributing to the development process.
Criteria: Instances where users are directly involved in the design process through feedback or suggestions.
Label: User Involvement
Category: User Feedback

8. designer-user interaction, collaborative design
Relationship: Both concepts involve collaborative efforts between designers and users.
Criteria: Interactions where designers seek and respond to user feedback, involving them in the design process.
Label: Collaborative Design
Category: Designer Engagement

9. announcements, feature announcements
Relationship: Both concepts involve designers communicating new features or updates.
Criteria: Instances where the designer announces new features, improvements, or updates about the software.
Label: Feature Announcements
Category: Designer Engagement

10. information exchange
Relationship: Involves sharing information within the community.
Criteria: Instances where participants share useful information or resources with others.
Label: Information Exchange
Category: Community Interaction

11. feedback incorporation
Relationship: Involves how user feedback is integrated into the development process.
Criteria: Instances where user input or feedback influences design decisions and software development.
Label: Feedback Incorporation
Category: Development Process

12. usability concerns
Relationship: Involves discussions about the software's ease of use and user experience.
Criteria: Issues or suggestions related to the ease of use and practical aspects of the software.
Label: Usability Concerns
Category: User Feedback

13. user-centered design
Relationship: Involves design decisions that prioritize user needs.
Criteria: Design approach that involves users to ensure the software meets their needs and preferences.
Label: User-Centered Design
Category: Development Process

14. iterative development
Relationship: Involves continuous improvement based on user feedback.
Criteria: The process of continually improving the software based on user feedback and testing.
Label: Iterative Development
Category: Development Process

15. feature requests
Relationship: Involves users suggesting new functionalities or tools.
Criteria: Specific functionalities or tools that users ask to be included in the software.
Label: Feature Requests
Category: User Feedback

16. knowledge sharing
Relationship: Involves sharing knowledge within the community to support learning.
Criteria: Instances where participants share information, tips, or resources that contribute to collective learning.
Label: Knowledge Sharing
Category: Community Interaction
---