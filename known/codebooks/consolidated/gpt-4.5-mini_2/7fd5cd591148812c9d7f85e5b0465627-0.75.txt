You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (21 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
21. 
Concepts: {Repeat the input 21}
Relationship: {What is logical relationship between concepts in code 21, or N/A if not applicable}
Criteria: {Who did what, and how for code 21}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: shares feature previews, share development updates
- The designer shares previews and visual outlines of upcoming features or updates.
- The designer shares visual and developmental updates regarding new features and ongoing projects.

2.
Concepts: detail update changes, communicate feature updates
- The designer informs users about changes and announces updates to specific components in the software.
- The designer announces new features and provides information regarding updates to users.

3.
Concepts: outline release plans, outline release timelines
- Designers communicate details about planned software updates, releases, and download options.
- The designer outlines specific timelines for upcoming software updates and version releases.

4.
Concepts: open up plans, discuss future planning
- Designer discusses future considerations or plans for the software based on current feedback.
- The designer discusses plans for future software updates, including considerations and long-term improvements.

5.
Concepts: potential update, promise future improvements
- Designers mention potential future considerations or improvements to the software.
- Designers assure users that specific features will be included in future software updates.

6.
Concepts: designer confirmation, confirm feature updates
- Designer confirms the existence or inclusion of a feature in the software.
- The designer confirms the addition of specific features in upcoming software updates.

7.
Concepts: list upcoming features, listing what might need to be done
- The designer lists upcoming features and indicates specific goals for future software development.
- Designer lists tasks or features that will require attention in future updates.

8.
Concepts: request resources, request documentation
- Users request documentation or resources related to the software.
- Users request a user manual or documentation to assist in effectively using the software.

9.
Concepts: information seeking, seek information
- Users asking questions to gain knowledge or resources related to the software.
- Users request specific information or pose questions to gain clarification about the software or its features.

10.
Concepts: ask about update status, inquire about updates
- Users inquire about the timing and status of recent software updates.
- Users ask questions about updates and inquire about recent software changes or upcoming features.

11.
Concepts: suggest new features, enable user suggestions
- Users suggest specific approaches to enhance software performance and features.
- Users provide suggestions and feedback about software development and features.

12.
Concepts: share user experiences, share teaching experiences
- Users share their teaching experiences and the software's impact on their classroom work.
- Users share their teaching experience to provide relevant background information.

13.
Concepts: offer user support, provide technical support
- Designers offer help and support to users to effectively utilize the product.
- Designers provide assistance and seek help regarding technical issues or guidance for users.

14.
Concepts: promote user feedback, facilitate user interaction
- Designers encourage users to provide suggestions for improvement and solicit feedback on features.
- Designers encourage community members to share feedback and facilitate interaction on software improvements.

15.
Concepts: propose design ideas, feature request invitation
- Designers and users propose specific features or enhancements needed for the software.
- Designers invite users to suggest new features or improvements.

16.
Concepts: create a feedback loop, incorporate user feedback
- Designers solicit, consider, and incorporate user feedback into design decisions.
- Designers reflect on user feedback and discuss how it will inform future updates.

17.
Concepts: commit to software improvement, acknowledge user suggestions
- Designers acknowledge user support and commit to making improvements.
- The designer acknowledges user suggestions and agrees to incorporate requested features in future software updates.

18.
Concepts: acknowledge assistance, demonstrate gratitude for contributions
- Users express gratitude or acknowledge contributions from the designer and community members.
- Users express gratitude towards the software and the efforts of its designers.

19.
Concepts: use emoji communication, use non verbal communication
- Users utilize emojis to express feelings or reactions during communication.
- Use of emojis or other non-verbal forms of communication by users.

20.
Concepts: ask follow-up questions, ask follow-up question on user request
- The designer or user poses follow-up questions to clarify needs or information.
- Requests for further clarification or follow-up regarding user requests.

21.
Concepts: request clarification
- Participants seek clarification on technical details or previous statements.
- Designers seek clarification from users about their feedback and request additional specific input.
===
---
Definitions for each code (21 in total):
1. 
Concepts: shares feature previews, share development updates  
Relationship: Both concepts involve the designer communicating visual or developmental progress to users.  
Criteria: The designer shares previews and visual outlines of upcoming features or updates, as well as development updates regarding new features and ongoing projects.  
Phrase: Sharing development insights.  

2. 
Concepts: detail update changes, communicate feature updates  
Relationship: Both concepts focus on the designer informing users about changes and updates to the software.  
Criteria: The designer informs users about changes and announces updates to specific components in the software, highlighting new feature information.  
Phrase: Communicating update details.  

3. 
Concepts: outline release plans, outline release timelines  
Relationship: Both concepts emphasize the designer communicating timelines and details regarding software updates and releases.  
Criteria: Designers communicate details and specific timelines about planned software updates, releases, and download options.  
Phrase: Outlining release strategies.  

4. 
Concepts: open up plans, discuss future planning  
Relationship: Both concepts involve the designer discussing considerations for future software updates based on current feedback.  
Criteria: The designer discusses future considerations and plans for software updates, including long-term improvements.  
Phrase: Discussing future directions.  

5. 
Concepts: potential update, promise future improvements  
Relationship: Both concepts address the designer mentioning potential future enhancements or improvements to the software.  
Criteria: Designers mention potential future improvements and assure users that specific features will be included in updates.  
Phrase: Promising future enhancements.  

6. 
Concepts: designer confirmation, confirm feature updates  
Relationship: Both concepts focus on the designer confirming the inclusion of features in the software.  
Criteria: The designer confirms the existence and addition of specific features in upcoming software updates.  
Phrase: Confirming feature inclusion.  

7. 
Concepts: list upcoming features, listing what might need to be done  
Relationship: Both concepts involve the designer identifying upcoming features and necessary tasks for future development.  
Criteria: The designer lists upcoming features and indicates specific goals and tasks that require attention.  
Phrase: Listing future development goals.  

8. 
Concepts: request resources, request documentation  
Relationship: Both concepts involve users seeking materials or documents related to the software.  
Criteria: Users request documentation or resources, such as user manuals, to assist in using the software effectively.  
Phrase: Requesting support resources.  

9. 
Concepts: information seeking, seek information  
Relationship: Both concepts focus on users actively asking questions to gain knowledge regarding the software.  
Criteria: Users ask questions or pose specific inquiries to gain clarification about the software or its features.  
Phrase: Seeking information actively.  

10. 
Concepts: ask about update status, inquire about updates  
Relationship: Both concepts involve users actively seeking information about the status of software updates.  
Criteria: Users inquire about the timing and status of recent software updates and ask questions about changes or upcoming features.  
Phrase: Inquiring about update status.  

11. 
Concepts: suggest new features, enable user suggestions  
Relationship: Both concepts focus on users proposing enhancements or changes to the software.  
Criteria: Users suggest specific features and provide feedback aimed at improving the software's performance.  
Phrase: Suggesting feature enhancements.  

12. 
Concepts: share user experiences, share teaching experiences  
Relationship: Both concepts involve users sharing their personal experiences with the software in educational contexts.  
Criteria: Users share their teaching experiences and how the software impacts their classroom work.  
Phrase: Sharing educational experiences.  

13. 
Concepts: offer user support, provide technical support  
Relationship: Both concepts focus on designers assisting users in utilizing the software effectively.  
Criteria: Designers offer help and technical support to users, providing guidance for resolving issues.  
Phrase: Offering user assistance.  

14. 
Concepts: promote user feedback, facilitate user interaction  
Relationship: Both concepts involve designers encouraging users to share feedback and interact regarding software improvements.  
Criteria: Designers encourage community members to provide suggestions and facilitate interactions about software features.  
Phrase: Promoting user engagement.  

15. 
Concepts: propose design ideas, feature request invitation  
Relationship: Both concepts involve designers and users collaboratively suggesting enhancements for the software.  
Criteria: Designers and users propose specific features or enhancements and invite suggestions for improvements.  
Phrase: Proposing design enhancements.  

16. 
Concepts: create a feedback loop, incorporate user feedback  
Relationship: Both concepts focus on designers soliciting and incorporating user feedback into design decisions.  
Criteria: Designers solicit and reflect on user feedback, discussing its impact on future updates.  
Phrase: Incorporating user insights.  

17. 
Concepts: commit to software improvement, acknowledge user suggestions  
Relationship: Both concepts involve designers recognizing user contributions and committing to enhancements.  
Criteria: Designers acknowledge user support and commit to incorporating suggested features in future updates.  
Phrase: Committing to improvements.  

18. 
Concepts: acknowledge assistance, demonstrate gratitude for contributions  
Relationship: Both concepts involve users expressing gratitude for the contributions made by designers and community members.  
Criteria: Users express gratitude towards the efforts of the designers and the community's contributions.  
Phrase: Acknowledging community support.  

19. 
Concepts: use emoji communication, use non verbal communication  
Relationship: Both concepts focus on users utilizing non-verbal methods, such as emojis, to communicate feelings.  
Criteria: Users utilize emojis and other non-verbal forms of communication to convey reactions during interactions.  
Phrase: Using expressive communication.  

20. 
Concepts: ask follow-up questions, ask follow-up question on user request  
Relationship: Both concepts involve the designer or user seeking further clarification on previous inquiries.  
Criteria: The designer or user poses follow-up questions to clarify needs or seek additional information.  
Phrase: Asking for clarification.  

21. 
Concepts: request clarification  
Relationship: The concepts are directly related as they both involve the act of seeking more information.  
Criteria: Participants seek clarification on technical details or previous statements, including designers requesting user feedback.  
Phrase: Seeking clarification actively.  
---