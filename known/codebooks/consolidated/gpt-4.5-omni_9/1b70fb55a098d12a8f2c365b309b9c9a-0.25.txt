You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (9 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
9. 
Concepts: {Repeat the input 9}
Relationship: {What is logical relationship between concepts in code 9, or N/A if not applicable}
Criteria: {Who did what, and how for code 9}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: discussing system requirements, discussing platform limitations
- Designers discuss system requirements and inform users about compatibility issues.
- Designers explain and discuss the technical and usability limitations of the software.

2.
Concepts: explaining new features, explaining component functionality
- Designers explain new features and functionalities of the software.
- Designers explain the capabilities and functionality of new components to users.

3.
Concepts: sharing usability solutions, collaborating on troubleshooting
- Users and designers share workarounds and solutions for usability issues.
- Users and designers collaborate on troubleshooting and problem-solving discussions.

4.
Concepts: discussing product iteration, refining design and features
- Designers discuss the iteration and release of new product versions.
- Designers discuss refining the design and adjusting or expanding features.

5.
Concepts: setting development goals, outlining development roadmap
- Designers set development goals and communicate the development process.
- Designers outline the feature roadmap and provide development timelines and priorities.

6.
Concepts: demonstrating politeness, apologizing for disruptions
- Users and designers use polite language and demonstrate etiquette in communication.
- Users or designers apologize for disruptions and express politeness in their interactions.

7.
Concepts: providing justifications, justifying design decisions
- Users explain the reasons behind their actions, decisions, or suggestions.
- Designers explain the goals and rationale behind specific design decisions.

8.
Concepts: requesting technical help, provide technical support
- Users ask technical questions and seek support for using the software.
- Designers or users provide technical assistance or address technical issues.

9.
Concepts: expressing gratitude
- Users express appreciation and encouragement to build a positive atmosphere.
- Users acknowledge and appreciate the designers' efforts, often expressing gratitude or positive feedback.
===
---
Definitions for each code (9 in total):
1.
Concepts: discussing system requirements, discussing platform limitations
Relationship: Both involve communication about the technical aspects and constraints of the software.
Criteria: Designers discuss system requirements and inform users about compatibility and technical limitations.
Phrase: Discussing technical constraints

2.
Concepts: explaining new features, explaining component functionality
Relationship: Both involve providing information about the software's new capabilities and components.
Criteria: Designers explain new features and the functionality of new components to users.
Phrase: Explaining new functionalities

3.
Concepts: sharing usability solutions, collaborating on troubleshooting
Relationship: Both involve cooperative efforts to address and solve usability issues.
Criteria: Users and designers share solutions and collaborate on troubleshooting usability problems.
Phrase: Collaborating on usability solutions

4.
Concepts: discussing product iteration, refining design and features
Relationship: Both involve discussions aimed at improving and evolving the product.
Criteria: Designers discuss product iterations and refine design and features.
Phrase: Refining product design

5.
Concepts: setting development goals, outlining development roadmap
Relationship: Both involve planning and communicating the future direction of the software development.
Criteria: Designers set development goals and outline the development roadmap.
Phrase: Planning development roadmap

6.
Concepts: demonstrating politeness, apologizing for disruptions
Relationship: Both involve maintaining courteous and respectful communication.
Criteria: Users and designers demonstrate politeness and apologize for disruptions.
Phrase: Maintaining courteous communication

7.
Concepts: providing justifications, justifying design decisions
Relationship: Both involve explaining the reasoning behind actions or decisions.
Criteria: Users and designers provide justifications for their actions and design decisions.
Phrase: Justifying decisions

8.
Concepts: requesting technical help, provide technical support
Relationship: Both involve seeking and providing assistance with technical issues.
Criteria: Users request technical help, and designers or users provide technical support.
Phrase: Addressing technical issues

9.
Concepts: expressing gratitude
Relationship: N/A
Criteria: Users express gratitude and appreciation to build a positive atmosphere.
Phrase: Expressing appreciation
---