You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (17 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
17. 
Concepts: {Repeat the input 17}
Relationship: {What is logical relationship between concepts in code 17, or N/A if not applicable}
Criteria: {Who did what, and how for code 17}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: share teaching experiences, sharing teaching experience
- Participants describe their teaching experiences or backgrounds.
- Users mention their teaching experience and introduce their identity as teachers

2.
Concepts: show appreciation and support, gratitude and encouragement
- Participants express appreciation and support for the community’s efforts.
- Expressions of appreciation and encouragement that help build a positive community atmosphere.

3.
Concepts: expressing gratitude, express enthusiasm and appreciation
- Users acknowledge and express gratitude for the efforts of designers or other members.
- A user or designer expresses enthusiasm or appreciation for the community or its members.

4.
Concepts: acknowledging feedback, committing to user feedback
- Designers acknowledge a user's suggestion or feedback and express appreciation.
- Designers acknowledge user feedback, plan to implement it in future updates, commit to improvements, and thank users for their support

5.
Concepts: ask questions, query and receive responses
- Users ask questions to seek information or clarification.
- Users ask questions and receive answers from the community.

6.
Concepts: encouraging elaboration, elaborating on questions
- Encouraging users to provide more details or elaborate on their needs.
- Users provide further details or context to questions and ask follow-up questions to continue discussions

7.
Concepts: user guidance, feature guidance
- Designers inform users about new features and how to use them.
- A designer provides guidance on how to use a feature.

8.
Concepts: inquiring about features, requesting physics features
- Users ask for specific information or help regarding the use or features of Physics Lab.
- Users request specific features or demonstrations about physics concepts and experiments

9.
Concepts: clarifying software versions, detailing software updates
- Members provide and clarify information about specific software versions
- Members provide detailed information and explain specific changes related to software updates

10.
Concepts: designer engagement, encouraging engagement
- A designer engages with the community by sharing personal interests or acknowledging interactions.
- A designer encourages open communication and user interaction, inviting further engagement or questions

11.
Concepts: direct communication, engage in user-designer dialogue
- Direct interactions between designers and users to discuss features, updates, and feedback.
- Users or designers engage in a back-and-forth dialogue that contributes to the design process.

12.
Concepts: announcing updates, announcing component updates, announcing updates and plans
- Designers share and announce information about upcoming updates, new features, and version details.
- Designers announce new components or updates to existing ones on the platform.
- A designer announces updates or development plans for the platform.

13.
Concepts: sharing update details, notifying about updates
- Designers provide notes or detailed information about software updates
- Designers notify users about new software versions, updates, and their availability, providing schedules and details

14.
Concepts: progress update with image, communicating visual progress
- Developer updates users on the progress of ongoing work with an image.
- Designers share visual updates or images to show progress on current projects and future plans.

15.
Concepts: maintaining development transparency, ensuring transparency in development discussions
- Developers provide and maintain transparency about the development process and timelines.
- Developers share detailed information about development stages, challenges, and progress within the community.

16.
Concepts: promising future features, assured feature updates
- Developers promise to realize and perfect a feature in future updates, offering tentative completion dates
- Developers reassured audiences about future updates and improvements, stating ongoing dedication to software optimization.

17.
Concepts: outlining design plans, consider future compatibility
- Designers outline future plans and considerations for software design and compatibility
- Who considers or discusses future compatibility of the software with different systems or platforms.
===
---
Definitions for each code (17 in total):
1.
Concepts: share teaching experiences, sharing teaching experience
Relationship: Both concepts revolve around participants discussing their teaching backgrounds and identities.
Criteria: Participants describe their teaching backgrounds and introduce themselves as teachers.
Phrase: Sharing teaching experiences

2.
Concepts: show appreciation and support, gratitude and encouragement
Relationship: Both concepts involve expressions of positive emotions towards the community.
Criteria: Participants express appreciation and encourage the community’s efforts.
Phrase: Showing appreciation and support

3.
Concepts: expressing gratitude, express enthusiasm and appreciation
Relationship: Both concepts focus on acknowledging efforts and expressing positive emotions.
Criteria: Users acknowledge efforts and express enthusiasm or appreciation for the community or its members.
Phrase: Expressing gratitude and enthusiasm

4.
Concepts: acknowledging feedback, committing to user feedback
Relationship: Both concepts involve designers addressing user feedback and committing to improvements.
Criteria: Designers acknowledge user feedback, express appreciation, and commit to implementing it in future updates.
Phrase: Acknowledging and committing to feedback

5.
Concepts: ask questions, query and receive responses
Relationship: Both concepts involve users seeking and receiving information.
Criteria: Users ask questions to seek information or clarification, and receive answers from the community.
Phrase: Asking questions and receiving responses

6.
Concepts: encouraging elaboration, elaborating on questions
Relationship: Both concepts involve promoting deeper discussion and providing details.
Criteria: Encouraging users to provide more details and users elaborating on their questions to continue discussions.
Phrase: Encouraging and elaborating on details

7.
Concepts: user guidance, feature guidance
Relationship: Both concepts involve designers providing instructions on features.
Criteria: Designers inform and guide users on how to use new features.
Phrase: Providing feature guidance

8.
Concepts: inquiring about features, requesting physics features
Relationship: Both concepts involve users seeking information or requesting specific features.
Criteria: Users inquire about or request specific features or demonstrations related to physics concepts and experiments.
Phrase: Inquiring and requesting features

9.
Concepts: clarifying software versions, detailing software updates
Relationship: Both concepts involve providing and explaining information about software versions and updates.
Criteria: Members clarify information about software versions and detail specific changes in updates.
Phrase: Clarifying and detailing software updates

10.
Concepts: designer engagement, encouraging engagement
Relationship: Both concepts involve designers fostering interaction and communication within the community.
Criteria: Designers engage with the community by sharing personal interests and encouraging open communication and interaction.
Phrase: Engaging and encouraging community interaction

11.
Concepts: direct communication, engage in user-designer dialogue
Relationship: Both concepts involve direct interaction between users and designers.
Criteria: Users and designers engage in a direct dialogue to discuss features, updates, and feedback.
Phrase: Engaging in direct user-designer dialogue

12.
Concepts: announcing updates, announcing component updates, announcing updates and plans
Relationship: All concepts revolve around informing the community about updates and plans.
Criteria: Designers announce updates, new components, and future plans for the platform.
Phrase: Announcing updates and plans

13.
Concepts: sharing update details, notifying about updates
Relationship: Both concepts involve communicating detailed information about software updates.
Criteria: Designers notify users about new software versions and updates, providing detailed information and schedules.
Phrase: Notifying and detailing software updates

14.
Concepts: progress update with image, communicating visual progress
Relationship: Both concepts involve sharing visual representations of progress.
Criteria: Designers update users on progress by sharing images or visual representations of ongoing work.
Phrase: Sharing visual progress updates

15.
Concepts: maintaining development transparency, ensuring transparency in development discussions
Relationship: Both concepts involve providing transparent information about the development process.
Criteria: Developers maintain transparency by sharing detailed information about development stages, challenges, and progress.
Phrase: Ensuring development transparency

16.
Concepts: promising future features, assured feature updates
Relationship: Both concepts involve commitments to future improvements and features.
Criteria: Developers promise and reassure audiences about future feature updates and ongoing software optimization.
Phrase: Promising future feature updates

17.
Concepts: outlining design plans, consider future compatibility
Relationship: Both concepts involve planning and considering future software design and compatibility.
Criteria: Designers outline future plans and discuss the compatibility of the software with different systems or platforms.
Phrase: Outlining design plans and future compatibility
---