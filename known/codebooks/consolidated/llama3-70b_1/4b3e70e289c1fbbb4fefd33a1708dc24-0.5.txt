You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (16 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
16. 
Concepts: {Repeat the input 16}
Relationship: {What is logical relationship between concepts in code 16, or N/A if not applicable}
Criteria: {Who did what, and how for code 16}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: relies on ai-generated code under time pressure, adapts to time constraints using ai-generated code
- Users rely on AI-generated code when facing time constraints or pressure.
- Users adapt to time constraints when using AI-generated code.

2.
Concepts: selectively copies ai-generated code, manually integrates ai-generated code
- Users selectively copy AI-generated code into their own work.
- Users manually integrate AI-generated code into their own work.

3.
Concepts: avoids direct code copying, uses ai-generated code as a reference
- Users avoid direct code copying, instead using AI-generated code as a reference.
- Users use AI-generated code as a reference when writing their own code.

4.
Concepts: describing a positive experience of using ai, has a successful ai-assisted coding experience
- Participant has a positive experience using AI to solve a task (in this case, VBA).
- Users describe a positive experience with AI (ChatGPT) in generating working code for a VBA task.

5.
Concepts: ai code usability, appreciates ai's code generation capabilities
- The participant finds AI-generated code to be runnable and useful.
- Users appreciate the ability to run AI-generated code.

6.
Concepts: values ai feedback, values ai code improvement
- Users value AI feedback on their code and seek optimization suggestions.
- Users value the potential of AI to improve or optimize their code.

7.
Concepts: pursues ai-inspired code refinement, pursues ai-assisted code optimization
- Users highlight the importance of iterative improvement in coding, with AI assistance providing suggestions for optimization.
- Users see AI as a tool for optimizing and debugging code, highlighting its potential for improving coding efficiency.

8.
Concepts: valuing simplicity in code, valuing code simplicity and readability
- Participants value simplicity in code for ease of maintenance.
- Participants value simplicity and readability in code for future maintenance.

9.
Concepts: discussing code quality and complexity, discussing code quality and maintainability
- Participants discuss code complexity and quality.
- Participants discuss the importance of maintainable code.

10.
Concepts: summarizes ai's code, comments on ai's interpretation
- Users summarize the AI's code and think about how the AI understood the request.
- Users comment on AI's interpretation of code, summarizing and evaluating its understanding.

11.
Concepts: evaluates ai-generated code, evaluates ai-generated code in detail, evaluates the ai-generated code and requests a detailed review
- Users critically evaluate AI-generated code and identify areas for improvement.
- Users read and evaluate AI-generated code in detail.
- Evaluates the AI-generated code and requests a detailed review.

12.
Concepts: advocating for linting features, identifying the need for linting features
- Participant advocates for linting features in NetLogo to detect conceptual errors.
- Participants identify the need for linting features in NetLogo to catch conceptual errors.

13.
Concepts: identifying ai support needs for netlogo concepts, ai support for understanding variable contexts
- Participants identify the need for AI support in understanding the "scope" concept in NetLogo.
- Identifies the need for AI support in understanding variable contexts in code, specifically with scope concepts in NetLogo.

14.
Concepts: ai focuses on best practices, notes ai's adherence to best practices
- Notes that AI-generated code focuses on best practices rather than quick fixes or workarounds.
- Users observe that the AI follows best practices or guidelines when generating code.

15.
Concepts: dictates parameters
- The interviewee dictates parameters or inputs for AI-driven interfaces, demonstrating a clear understanding of the task requirements.
- Interviewees dictate parameters during the coding process.

16.
Concepts: expecting ai to retrieve specific models
- Expects AI to recognize and retrieve specific models or information, and evaluates the search results.
- Users expect AI to retrieve specific models from the NetLogo library, highlighting their expectations of AI's search capabilities.
===
Here are the definitions for each code:

---
1.
Concepts: relies on ai-generated code under time pressure, adapts to time constraints using ai-generated code
Relationship: The concepts are related as users rely on AI-generated code to manage time constraints, and adapt to these constraints by using the code.
Criteria: Users rely on AI-generated code to manage time pressure and adapt to time constraints.
Phrase: Relying on AI-generated code under time pressure.

2.
Concepts: selectively copies ai-generated code, manually integrates ai-generated code
Relationship: The concepts are related as users selectively copy AI-generated code and manually integrate it into their own work.
Criteria: Users selectively copy and manually integrate AI-generated code into their own work.
Phrase: Selectively integrating AI-generated code.

3.
Concepts: avoids direct code copying, uses ai-generated code as a reference
Relationship: The concepts are related as users avoid direct code copying and instead use AI-generated code as a reference.
Criteria: Users avoid direct code copying and use AI-generated code as a reference.
Phrase: Using AI-generated code as a reference.

4.
Concepts: describing a positive experience of using ai, has a successful ai-assisted coding experience
Relationship: The concepts are related as users describe a positive experience using AI, which is characterized by a successful AI-assisted coding experience.
Criteria: Users describe a positive experience with AI-assisted coding.
Phrase: Describing a positive AI-assisted coding experience.

5.
Concepts: ai code usability, appreciates ai's code generation capabilities
Relationship: The concepts are related as users appreciate AI's code generation capabilities, which are reflected in the usability of the generated code.
Criteria: Users appreciate AI-generated code usability.
Phrase: Appreciating AI-generated code usability.

6.
Concepts: values ai feedback, values ai code improvement
Relationship: The concepts are related as users value AI feedback on their code and seek optimization suggestions, which are forms of code improvement.
Criteria: Users value AI feedback and code improvement.
Phrase: Valuing AI feedback and code improvement.

7.
Concepts: pursues ai-inspired code refinement, pursues ai-assisted code optimization
Relationship: The concepts are related as users pursue code refinement and optimization using AI assistance.
Criteria: Users pursue AI-assisted code refinement and optimization.
Phrase: Pursuing AI-assisted code refinement and optimization.

8.
Concepts: valuing simplicity in code, valuing code simplicity and readability
Relationship: The concepts are related as users value simplicity and readability in code for ease of maintenance.
Criteria: Users value simplicity and readability in code.
Phrase: Valuing code simplicity and readability.

9.
Concepts: discussing code quality and complexity, discussing code quality and maintainability
Relationship: The concepts are related as users discuss code quality and complexity in terms of maintainability.
Criteria: Users discuss code quality and maintainability.
Phrase: Discussing code quality and maintainability.

10.
Concepts: summarizes ai's code, comments on ai's interpretation
Relationship: The concepts are related as users summarize AI-generated code and comment on the AI's interpretation.
Criteria: Users summarize and comment on AI-generated code.
Phrase: Summarizing and commenting on AI-generated code.

11.
Concepts: evaluates ai-generated code, evaluates ai-generated code in detail, evaluates the ai-generated code and requests a detailed review
Relationship: The concepts are related as users evaluate AI-generated code in detail and request a detailed review.
Criteria: Users evaluate AI-generated code in detail.
Phrase: Evaluating AI-generated code in detail.

12.
Concepts: advocating for linting features, identifying the need for linting features
Relationship: The concepts are related as users advocate for and identify the need for linting features in NetLogo.
Criteria: Users advocate for and identify the need for linting features.
Phrase: Advocating for linting features.

13.
Concepts: identifying ai support needs for netlogo concepts, ai support for understanding variable contexts
Relationship: The concepts are related as users identify the need for AI support in understanding NetLogo concepts, specifically variable contexts.
Criteria: Users identify the need for AI support in understanding NetLogo concepts.
Phrase: Identifying the need for AI support in NetLogo concepts.

14.
Concepts: ai focuses on best practices, notes ai's adherence to best practices
Relationship: The concepts are related as users note that AI-generated code focuses on best practices.
Criteria: Users note AI-generated code adherence to best practices.
Phrase: Noting AI-generated code adherence to best practices.

15.
Concepts: dictates parameters
Relationship: N/A
Criteria: Users dictate parameters for AI-driven interfaces.
Phrase: Dictating parameters for AI-driven interfaces.

16.
Concepts: expecting ai to retrieve specific models
Relationship: N/A
Criteria: Users expect AI to retrieve specific models from the NetLogo library.
Phrase: Expecting AI to retrieve specific models.