You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (9 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
9. 
Concepts: {Repeat the input 9}
Relationship: {What is logical relationship between concepts in code 9, or N/A if not applicable}
Criteria: {Who did what, and how for code 9}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: appreciate development plans, praise app development positively
- Users respond positively to information shared by developers about feature development.
- Users compliment the progress and development of the application while expressing approval of its features.

2.
Concepts: practical application, suggest practical applications
- Instances where the practical application of the software in educational settings is discussed.
- Users describe the specific contexts in which they use the software and communicate practical use cases.

3.
Concepts: make user inquiries, request assistance and information
- Users ask for specific information or help regarding the use or features of Physics Lab.
- Users communicate their needs for assistance and support regarding the software and ask questions to gain knowledge.

4.
Concepts: express hope for compatibility, seek compatibility clarification
- Users communicate their expectations regarding software compatibility with their systems.
- Users inquire about the app's compatibility across different platforms and communicate their need for clarification regarding software versions.

5.
Concepts: discuss teaching experiences, establish professional identity
- Users identify as teachers and share contextual information about their experiences and challenges in education.
- Users affirm their identity as teachers and share their professional experiences to demonstrate expertise.

6.
Concepts: sending resources, encourage resource sharing
- Designer shares resources related to the software's development.
- Designers encourage community members to share resources, and users acknowledge and request resources that assist in using the software.

7.
Concepts: offer ongoing support, offer technical support
- The designer encourages users to report any issues they encounter.
- Designers provide help and technical support to users who report issues and request assistance.

8.
Concepts: acknowledge feedback and implement, validate requests and accept suggestions
- Designers and users acknowledge each other's contributions and discuss plans to implement suggested features.
- Designers validate a user's request and communicate acceptance of user suggestions for future updates.

9.
Concepts: explain development process, clarify compatibility issues
- A designer explains the theoretical compatibility of the app with certain systems.
- The designer communicates software limitations and compatibility issues while sharing technical considerations for the app.
===
---
Definitions for each code (9 in total):
1.
Concepts: appreciate development plans, praise app development positively
Relationship: Users express positive sentiments towards the developers' plans and progress.
Criteria: Users respond positively to developers' updates about feature development and compliment the application's progress and features.
Phrase: Praise app development.

2.
Concepts: practical application, suggest practical applications
Relationship: Users connect the software's functionality to real-world educational contexts.
Criteria: Users discuss the practical applications of the software in educational settings and describe specific use cases.
Phrase: Suggest practical applications.

3.
Concepts: make user inquiries, request assistance and information
Relationship: Users seek knowledge and support regarding the software.
Criteria: Users ask for specific information or help about Physics Lab and communicate their needs for assistance.
Phrase: Request assistance.

4.
Concepts: express hope for compatibility, seek compatibility clarification
Relationship: Users express their expectations and seek confirmation regarding software compatibility.
Criteria: Users communicate their expectations about compatibility and inquire for clarification on the app's compatibility across platforms.
Phrase: Seek compatibility clarification.

5.
Concepts: discuss teaching experiences, establish professional identity
Relationship: Users share their experiences to affirm their roles as educators.
Criteria: Users identify as teachers and share their educational experiences and challenges to demonstrate their expertise.
Phrase: Establish professional identity.

6.
Concepts: sending resources, encourage resource sharing
Relationship: Designers and users engage in the exchange of helpful materials.
Criteria: Designers share resources related to the software and encourage community members to share and request resources.
Phrase: Encourage resource sharing.

7.
Concepts: offer ongoing support, offer technical support
Relationship: Designers provide assistance to users encountering issues.
Criteria: Designers encourage users to report issues and provide technical support to those who request help.
Phrase: Offer technical support.

8.
Concepts: acknowledge feedback and implement, validate requests and accept suggestions
Relationship: Designers and users engage in a reciprocal acknowledgment of contributions.
Criteria: Designers and users acknowledge each other's input and discuss the implementation of user-suggested features.
Phrase: Acknowledge feedback.

9.
Concepts: explain development process, clarify compatibility issues
Relationship: Designers communicate technical aspects of the software to users.
Criteria: A designer explains the development process and clarifies compatibility issues while discussing software limitations.
Phrase: Clarify compatibility issues.
---