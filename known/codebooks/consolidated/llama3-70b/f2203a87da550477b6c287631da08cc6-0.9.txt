You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (16 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
16. 
Concepts: {Repeat the input 16}
Relationship: {What is logical relationship between concepts in code 16, or N/A if not applicable}
Criteria: {Who did what, and how for code 16}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: system compatibility mention, system compatibility clarification
- Mentioning compatibility with a specific system or platform.
- Clarifying the compatibility of a system or tool with specific hardware or software configurations.

2.
Concepts: suggests system compatibility, expressing hope for compatibility
- The user suggests that a specific system (e.g. Win7) should be compatible.
- A user expresses a hope or expectation for compatibility with a specific system or version.

3.
Concepts: explores compatibility options, speculating about compatibility
- User or designer explores options for compatibility with different systems or platforms.
- The designer speculates about the compatibility of the software with specific devices or systems.

4.
Concepts: theoretical compatibility, mentions theoretical compatibility requirements for the software
- Designer states theoretical compatibility or limitations.
- The designer mentions theoretical compatibility requirements for the software, such as hardware specifications.

5.
Concepts: considers xp compatibility, system compatibility consideration
- Designer considers or discusses XP compatibility or other legacy system issues.
- Considering system compatibility for older systems.

6.
Concepts: considers offline functionality, offline functionality considerations
- Designer considers the possibility of offline functionality or internet connectivity.
- Considering or discussing potential offline functionality or limitations.

7.
Concepts: prioritizing offline support, recognizing need for offline functionality
- Prioritizing offline support and functionality
- The speaker recognizes the need for offline functionality or support.

8.
Concepts: seeking platform accessibility, requesting multi-platform support or expressing interest in cross-platform access
- A user requests access to the software on a specific platform or device.
- A user requests multi-platform support, expresses interest in accessing the software on multiple devices, or expresses interest in cross-platform access.

9.
Concepts: considering local export, recognizing feature needs
- The designer considers supporting local export functionality.
- The designer recognizes the need for a specific feature, such as local export.

10.
Concepts: gathering user requirements, recognizing requirements
- Designers gather and solicit user needs.
- Recognizing or identifying design requirements or needs.

11.
Concepts: highlighting regional needs, identifies regional user needs
- The participant (user) highlights regional or local needs or requirements.
- Identifies a specific need or requirement from a particular region or user group.

12.
Concepts: establishing system boundaries, defining technical requirements
- The designer sets or clarifies boundaries or limitations of the system.
- Designers define technical requirements and establish software limitations.

13.
Concepts: exploring technical requirements, discussing technical possibilities
- Exploring technical requirements and limitations
- Designer or user discusses technical possibilities or limitations.

14.
Concepts: feasibility assessment, considering implementation constraints
- Assessing the feasibility of an idea or feature
- Considerations of the feasibility or practicality of implementing a feature.

15.
Concepts: reveals environmental constraints, sharing environmental constraints
- User reveals environmental constraints or limitations.
- A user shares environmental constraints or limitations in the online community.

16.
Concepts: technical explanation, explaining constraints, explaining constraint
- Explains technical constraints or limitations.
- Explaining limitations, constraints, or challenges faced by the development team.
- A user explains the reason behind a specific constraint or limitation.
===
Here are the definitions for each code:

---
1.
Concepts: system compatibility mention, system compatibility clarification
Relationship: Both concepts relate to discussing system compatibility, with "mention" being a general reference and "clarification" providing more specific details.
Criteria: Users or designers mention or clarify system compatibility.
Phrase: Mentioning or clarifying system compatibility.

2.
Concepts: suggests system compatibility, expressing hope for compatibility
Relationship: Both concepts relate to expressing a desire for system compatibility, with "suggesting" being a more direct proposal and "expressing hope" being a more aspirational sentiment.
Criteria: Users suggest or express hope for system compatibility.
Phrase: Suggesting or hoping for system compatibility.

3.
Concepts: explores compatibility options, speculating about compatibility
Relationship: Both concepts relate to investigating possibilities for system compatibility, with "exploring options" being a more active process and "speculating" being a more hypothetical consideration.
Criteria: Users or designers explore or speculate about compatibility options.
Phrase: Exploring or speculating about compatibility options.

4.
Concepts: theoretical compatibility, mentions theoretical compatibility requirements for the software
Relationship: Both concepts relate to discussing the theoretical possibilities of system compatibility, with "theoretical compatibility" being a general concept and "theoretical requirements" being a more specific consideration.
Criteria: Designers mention theoretical compatibility or requirements.
Phrase: Mentioning theoretical compatibility or requirements.

5.
Concepts: considers xp compatibility, system compatibility consideration
Relationship: Both concepts relate to considering the compatibility of older systems, with "XP compatibility" being a specific example and "system compatibility consideration" being a more general process.
Criteria: Designers consider XP compatibility or system compatibility.
Phrase: Considering XP compatibility or system compatibility.

6.
Concepts: considers offline functionality, offline functionality considerations
Relationship: Both concepts relate to thinking about the possibility of offline functionality, with "considering offline functionality" being a general consideration and "offline functionality considerations" being a more specific evaluation.
Criteria: Designers consider or discuss offline functionality.
Phrase: Considering or discussing offline functionality.

7.
Concepts: prioritizing offline support, recognizing need for offline functionality
Relationship: Both concepts relate to acknowledging the importance of offline functionality, with "prioritizing offline support" being a more active decision and "recognizing need" being a more general awareness.
Criteria: Designers prioritize or recognize the need for offline functionality.
Phrase: Prioritizing or recognizing need for offline functionality.

8.
Concepts: seeking platform accessibility, requesting multi-platform support or expressing interest in cross-platform access
Relationship: Both concepts relate to desiring access to the software on multiple platforms, with "seeking platform accessibility" being a more general request and "requesting multi-platform support" being a more specific ask.
Criteria: Users request or express interest in platform accessibility or multi-platform support.
Phrase: Requesting or expressing interest in platform accessibility or multi-platform support.

9.
Concepts: considering local export, recognizing feature needs
Relationship: Both concepts relate to thinking about the possibility of local export functionality, with "considering local export" being a more general consideration and "recognizing feature needs" being a more specific acknowledgment.
Criteria: Designers consider or recognize the need for local export.
Phrase: Considering or recognizing need for local export.

10.
Concepts: gathering user requirements, recognizing requirements
Relationship: Both concepts relate to understanding user needs, with "gathering user requirements" being a more active process and "recognizing requirements" being a more general awareness.
Criteria: Designers gather or recognize user requirements.
Phrase: Gathering or recognizing user requirements.

11.
Concepts: highlighting regional needs, identifies regional user needs
Relationship: Both concepts relate to emphasizing the importance of regional considerations, with "highlighting regional needs" being a more general emphasis and "identifying regional user needs" being a more specific recognition.
Criteria: Users highlight or identify regional user needs.
Phrase: Highlighting or identifying regional user needs.

12.
Concepts: establishing system boundaries, defining technical requirements
Relationship: Both concepts relate to setting limits or specifications for the system, with "establishing system boundaries" being a more general process and "defining technical requirements" being a more specific definition.
Criteria: Designers establish or define system boundaries or technical requirements.
Phrase: Establishing or defining system boundaries or technical requirements.

13.
Concepts: exploring technical requirements, discussing technical possibilities
Relationship: Both concepts relate to investigating technical limitations, with "exploring technical requirements" being a more active process and "discussing technical possibilities" being a more general consideration.
Criteria: Designers explore or discuss technical requirements or possibilities.
Phrase: Exploring or discussing technical requirements or possibilities.

14.
Concepts: feasibility assessment, considering implementation constraints
Relationship: Both concepts relate to evaluating the practicality of an idea, with "feasibility assessment" being a more formal evaluation and "considering implementation constraints" being a more general consideration.
Criteria: Designers assess or consider feasibility or implementation constraints.
Phrase: Assessing or considering feasibility or implementation constraints.

15.
Concepts: reveals environmental constraints, sharing environmental constraints
Relationship: Both concepts relate to disclosing limitations or challenges, with "revealing environmental constraints" being a more general disclosure and "sharing environmental constraints" being a more specific sharing of information.
Criteria: Users reveal or share environmental constraints.
Phrase: Revealing or sharing environmental constraints.

16.
Concepts: technical explanation, explaining constraints, explaining constraint
Relationship: All three concepts relate to providing explanations for technical limitations, with "technical explanation" being a general concept, "explaining constraints" being a more specific explanation, and "explaining constraint" being a more focused explanation.
Criteria: Users or designers explain technical constraints or limitations.
Phrase: Explaining technical constraints or limitations.