You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: user support, providing technical support
- Assistance and support provided by designers to help users effectively use the product.
- Designers provide technical support or guidance to users.

2.
Concepts: understand user needs, inquiring about problems
- Asking users about the issues they encountered.
- Designers ask users to describe specific problems they encountered.

3.
Concepts: seeking clarification, designer inquiry
- Designers seek clarification on specific design elements or user issues.
- Instances where designers seek input or clarification from users to better understand their needs.

4.
Concepts: acknowledge feedback, responding to user feedback
- Designers acknowledge and respond to user feedback.
- Designers react to and respond to user feedback or suggestions.

5.
Concepts: acknowledge response, acknowledging and appreciating feedback
- A user acknowledges a response from the designer with gratitude or thanks.
- A designer acknowledges a user's suggestion or feedback and expresses appreciation while indicating future updates.

6.
Concepts: apologize for interruption, apologizing for disturbances
- Designer or user apologizes for a potential interruption.
- Designers apologize for any disturbances or inconvenience caused to users.

7.
Concepts: outline future plans, announce future plans
- Designers outline future development plans and priorities.
- Designers announce future development plans and updates.

8.
Concepts: share design plans, discuss future plans, plan future development
- Designers share future design plans and considerations.
- Designers discuss plans for future software developments.
- Designers discuss plans for developing new features or updates.

9.
Concepts: current efforts, discuss ongoing research
- Designers mention ongoing research or development efforts.
- Designers discuss ongoing research and development activities.

10.
Concepts: explain limitations, highlight technical constraints
- Designers explain the limitations and restrictions of features or platforms.
- Designers highlight technical constraints or limitations.

11.
Concepts: explain design rationale, explain intention of the app design
- Designers explain the rationale behind design and development choices.
- Developers explain the rationale or goals behind the software's design.

12.
Concepts: manage user expectations
- Designers set expectations about timelines and feature availability.
- A team member manages user expectations regarding features and updates.
===
---
Definitions for each code (12 in total):
1.
Concepts: user support, providing technical support
Relationship: N/A
Criteria: Designers assist users by providing technical support and guidance.
Phrase: Providing technical support

2.
Concepts: understand user needs, inquiring about problems
Relationship: N/A
Criteria: Designers ask users about specific problems to understand their needs.
Phrase: Inquiring about user problems

3.
Concepts: seeking clarification, designer inquiry
Relationship: N/A
Criteria: Designers seek input or clarification from users to better understand design elements or issues.
Phrase: Seeking user clarification

4.
Concepts: acknowledge feedback, responding to user feedback
Relationship: N/A
Criteria: Designers acknowledge and respond to user feedback or suggestions.
Phrase: Responding to user feedback

5.
Concepts: acknowledge response, acknowledging and appreciating feedback
Relationship: N/A
Criteria: Designers or users acknowledge feedback or responses and express appreciation.
Phrase: Acknowledging feedback with appreciation

6.
Concepts: apologize for interruption, apologizing for disturbances
Relationship: N/A
Criteria: Designers or users apologize for any interruptions or disturbances caused.
Phrase: Apologizing for disturbances

7.
Concepts: outline future plans, announce future plans
Relationship: N/A
Criteria: Designers outline and announce future development plans and updates.
Phrase: Announcing future plans

8.
Concepts: share design plans, discuss future plans, plan future development
Relationship: N/A
Criteria: Designers share and discuss plans for future software developments and features.
Phrase: Discussing future development plans

9.
Concepts: current efforts, discuss ongoing research
Relationship: N/A
Criteria: Designers mention and discuss ongoing research and development activities.
Phrase: Discussing ongoing research

10.
Concepts: explain limitations, highlight technical constraints
Relationship: N/A
Criteria: Designers explain the limitations and technical constraints of features or platforms.
Phrase: Highlighting technical constraints

11.
Concepts: explain design rationale, explain intention of the app design
Relationship: N/A
Criteria: Designers explain the rationale and goals behind the software's design choices.
Phrase: Explaining design rationale

12.
Concepts: manage user expectations
Relationship: N/A
Criteria: Designers set and manage expectations about timelines and feature availability.
Phrase: Managing user expectations
---