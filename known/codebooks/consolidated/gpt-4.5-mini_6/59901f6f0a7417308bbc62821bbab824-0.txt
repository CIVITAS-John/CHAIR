You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (21 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
21. 
Concepts: {Repeat the input 21}
Relationship: {What is logical relationship between concepts in code 21, or N/A if not applicable}
Criteria: {Who did what, and how for code 21}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: list upcoming features, introducing new components and features
- Designers list and preview upcoming features for the software.
- Designers list new components and features added in an update while explaining upcoming features and detailing improvements.

2.
Concepts: announce and provide product updates, providing update notes and announcements
- Designers share information about upcoming features or updates.
- Designers provide updates on changes to existing features and announce changes to component specifications and development plans.

3.
Concepts: announce product iterations, announce software updates and downloads
- Designers announce new versions and planned improvements for the software.
- Designers announce software updates and new features to users.

4.
Concepts: outlines future plans, share development plans
- Designers outline future plans for software development and features.
- Designers share plans and visual updates regarding software development.

5.
Concepts: update planning, discussing future plans and directions
- The designer discusses the planning process for future updates and features.
- Discussions about potential future developments and directions for the product are held, with designers discussing focus areas for future development.

6.
Concepts: responding to feedback, demonstrate designer responsiveness
- Instances where designers respond to user feedback or queries while acknowledging feedback and concluding on needed functionalities.
- Designers respond to user queries, feedback, and suggestions, showing active communication and engagement.

7.
Concepts: confirm understanding and reasoning, seeking visual confirmation and confirming implementation
- The designer confirms a user's statement or inquiry and users confirm their understanding of previous messages or instructions.
- Designers seek confirmation from users regarding specific visual items or features and confirm the existence and forthcoming implementation of features based on feedback.

8.
Concepts: addresses usability concerns, inquiring about problems and raising concerns
- Designers engage in dialogue with users to discuss usability issues.
- The designer asks users to specify any problems encountered while using the software and raises related issues or questions about functionality.

9.
Concepts: sharing and proposing potential solutions, sharing information and providing explanations
- Designers share potential solutions based on user feedback and propose solutions to compatibility issues while responding to inquiries.
- Users share information relevant to design considerations or past experiences while designers provide responses or detailed explanations.

10.
Concepts: discuss compatibility, considering and confirming compatibility
- Designers discuss compatibility issues with various operating systems and speculate on compatibility.
- Designers consider compatibility issues with older systems and provide technical information regarding system compatibility while confirming specific version compatibility.

11.
Concepts: clarifying version types and details, ensuring clarity and seeking clarification
- Designers provide clarification about the version of the software being discussed and detailed information about the current version.
- Designers clarify technical details and seek clarification on specific aspects while participants provide additional context for questions.

12.
Concepts: requesting resources and guidance, request technical information and support
- Users request or discuss resources related to the software, such as manuals or guides, while seeking guidance for effective software usage.
- Users ask various technical questions related to the application and for specific information or help regarding the software.

13.
Concepts: express frustration with limitations, discussing and acknowledging limitations
- Users express frustration regarding limitations or issues with technology and the designer expresses frustration with current capabilities.
- The designer discusses the limitations faced by the development team in addressing user requests and explains the limitations of the current software version.

14.
Concepts: suggest new features, suggest educational enhancements
- Users and designers propose design ideas by suggesting new features or alternative solutions to enhance the software's functionality.
- Users suggest features that would enhance the software's utility in classrooms.

15.
Concepts: accepting suggestions and suggesting future possibilities, encouraging elaboration and mentioning feedback prompts
- Designers agree to implement user suggestions in future updates and indicate a willingness to seek user input for future developments.
- Designers encourage users to provide detailed feedback and elaborate on suggestions while indicating that user feedback will inform the development of prompts.

16.
Concepts: user guidance, instruction and updates
- A designer provides detailed guidance on new features and functionalities of the software.
- Designers providing updates and instructions to help users understand and use the software effectively.

17.
Concepts: share professional background, confirming and sharing user identity
- Information provided by users about their professional or personal background helps in understanding the community's composition.
- A user confirms their participation in the community and shares their professional background in response to a question.

18.
Concepts: personal connection, sharing personal anecdotes and experiences
- Users and designers share personal teaching experiences to create connections.
- Users share personal experiences related to the software or its use in the classroom while recounting stories about past experiences affecting software usage.

19.
Concepts: discuss context of use, elaborating on experiences and discussing context
- Users describe the specific contexts in which they use the software and its usability.
- The designer elaborates on a previous experience related to software usage while discussing the educational context in which the software is used.

20.
Concepts: highlight and discuss technical constraints, technical and infrastructural challenges in educational settings
- Users describe and highlight the technical constraints affecting software usage in schools and discuss limitations or requirements.
- Users and designers discuss challenges related to technology use in educational environments.

21.
Concepts: agreeing and confirming statements, providing positive responses and context
- Users agree with another user's suggestion and confirm or validate statements posed by others in the conversation.
- A user provides a brief affirmative response and users indicate their agreement or acknowledgment of a statement or question.
===
---
Definitions for each code (21 in total):
1.
Concepts: list upcoming features, introducing new components and features
Relationship: The concepts are related as they both involve the communication of new software elements and enhancements to users.
Criteria: Designers list and preview upcoming features and new components in software updates while detailing improvements.
Phrase: Preview upcoming features.

2.
Concepts: announce and provide product updates, providing update notes and announcements
Relationship: Both concepts involve sharing information about software changes and updates to users.
Criteria: Designers share information about upcoming features and provide updates on changes to existing features and component specifications.
Phrase: Share product updates.

3.
Concepts: announce product iterations, announce software updates and downloads
Relationship: The concepts are related as they both involve communicating new versions and improvements of the software to users.
Criteria: Designers announce new versions and planned improvements, including software updates and new features.
Phrase: Announce software updates.

4.
Concepts: outlines future plans, share development plans
Relationship: Both concepts involve communicating future intentions regarding software development and features.
Criteria: Designers outline and share future plans for software development and features.
Phrase: Outline future plans.

5.
Concepts: update planning, discussing future plans and directions
Relationship: The concepts are related as they both involve discussions about the planning and direction of future software updates.
Criteria: Designers discuss the planning process and potential future developments for the product.
Phrase: Discuss future plans.

6.
Concepts: responding to feedback, demonstrate designer responsiveness
Relationship: The concepts are related as they both involve active communication and engagement with user feedback.
Criteria: Designers respond to user feedback and queries, showing engagement and acknowledgment of user needs.
Phrase: Respond to feedback.

7.
Concepts: confirm understanding and reasoning, seeking visual confirmation and confirming implementation
Relationship: The concepts are related as they both involve confirming understanding and implementation of features based on user input.
Criteria: Designers confirm user inquiries and seek visual confirmation regarding features and their implementation.
Phrase: Confirm understanding.

8.
Concepts: addresses usability concerns, inquiring about problems and raising concerns
Relationship: The concepts are related as they both involve engaging users to discuss and identify usability issues.
Criteria: Designers engage in dialogue with users to discuss and inquire about usability concerns.
Phrase: Address usability concerns.

9.
Concepts: sharing and proposing potential solutions, sharing information and providing explanations
Relationship: The concepts are related as they both involve sharing information and proposing solutions based on user feedback.
Criteria: Designers share potential solutions and provide explanations in response to user inquiries.
Phrase: Propose potential solutions.

10.
Concepts: discuss compatibility, considering and confirming compatibility
Relationship: The concepts are related as they both involve discussions about compatibility issues with the software.
Criteria: Designers discuss and confirm compatibility issues with various operating systems and versions.
Phrase: Discuss compatibility.

11.
Concepts: clarifying version types and details, ensuring clarity and seeking clarification
Relationship: The concepts are related as they both involve providing and seeking clarity on software versions and details.
Criteria: Designers clarify version details and seek clarification on specific aspects from users.
Phrase: Clarify version details.

12.
Concepts: requesting resources and guidance, request technical information and support
Relationship: The concepts are related as they both involve users seeking information and guidance regarding the software.
Criteria: Users request resources and technical information to support effective software usage.
Phrase: Request technical support.

13.
Concepts: express frustration with limitations, discussing and acknowledging limitations
Relationship: The concepts are related as they both involve expressing and discussing limitations of the software.
Criteria: Users and designers express and discuss frustrations regarding limitations faced in the software.
Phrase: Acknowledge limitations.

14.
Concepts: suggest new features, suggest educational enhancements
Relationship: The concepts are related as they both involve proposing enhancements to the software's functionality.
Criteria: Users and designers suggest new features and educational enhancements for the software.
Phrase: Suggest new features.

15.
Concepts: accepting suggestions and suggesting future possibilities, encouraging elaboration and mentioning feedback prompts
Relationship: The concepts are related as they both involve engaging with user suggestions and encouraging further input.
Criteria: Designers accept user suggestions and encourage detailed feedback for future developments.
Phrase: Accept suggestions.

16.
Concepts: user guidance, instruction and updates
Relationship: The concepts are related as they both involve providing guidance and updates to users about the software.
Criteria: Designers provide guidance and updates to help users understand and effectively use the software.
Phrase: Provide user guidance.

17.
Concepts: share professional background, confirming and sharing user identity
Relationship: The concepts are related as they both involve sharing and confirming personal or professional identities within the community.
Criteria: Users share their professional backgrounds, contributing to the community's understanding.
Phrase: Share professional background.

18.
Concepts: personal connection, sharing personal anecdotes and experiences
Relationship: The concepts are related as they both involve sharing personal experiences to foster connections within the community.
Criteria: Users and designers share personal anecdotes related to software usage to create connections.
Phrase: Share personal experiences.

19.
Concepts: discuss context of use, elaborating on experiences and discussing context
Relationship: The concepts are related as they both involve discussing the specific contexts in which the software is used.
Criteria: Users and designers elaborate on experiences and contexts of software usage.
Phrase: Discuss context of use.

20.
Concepts: highlight and discuss technical constraints, technical and infrastructural challenges in educational settings
Relationship: The concepts are related as they both involve discussing technical challenges affecting software usage in educational environments.
Criteria: Users and designers highlight and discuss technical constraints in educational settings.
Phrase: Discuss technical constraints.

21.
Concepts: agreeing and confirming statements, providing positive responses and context
Relationship: The concepts are related as they both involve users agreeing with and confirming statements made by others.
Criteria: Users agree with and confirm statements or suggestions made in the conversation.
Phrase: Confirm statements.
---