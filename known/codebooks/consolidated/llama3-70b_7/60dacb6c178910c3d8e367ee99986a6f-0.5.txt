You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (14 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
14. 
Concepts: {Repeat the input 14}
Relationship: {What is logical relationship between concepts in code 14, or N/A if not applicable}
Criteria: {Who did what, and how for code 14}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: announce software updates, announce updates and releases
- Designers announce updates or changes to the software.
- Designers announce updates, new features, or software releases.

2.
Concepts: provide progress updates, answer about progress
- Designers share progress or updates on development.
- Designers provide updates or answers questions about the progress of the project.

3.
Concepts: share planned updates, share development plans
- Designers plan or discuss future updates or features.
- Designers share information about the development plan or roadmap.

4.
Concepts: express gratitude or praise, express satisfaction or praise
- A user or designer expresses gratitude or praise for the software.
- A user expresses satisfaction or praise about the software.

5.
Concepts: express appreciation for feedback, acknowledge effort or show appreciation
- A user or designer expresses gratitude or appreciation for user feedback.
- A user or designer acknowledges effort or expresses appreciation.

6.
Concepts: user appreciation, user interaction and gratitude
- Expressions of thanks or appreciation from users.
- User expresses gratitude or appreciation for the system, updates, or designer's efforts.

7.
Concepts: acknowledge each other, acknowledge user input or information
- Designers and users acknowledge each other's statements or requests.
- A user or designer acknowledges user input or information.

8.
Concepts: explain design goals, explain design rationale
- A designer explains the design goals or philosophy behind the application.
- Designers explain the design principles or philosophy behind the software.

9.
Concepts: provide examples, provide explanations
- Designers provide examples to illustrate a concept or feature.
- Designers provide explanations or clarifications about features or concepts.

10.
Concepts: question identity, inquire about user background
- A designer inquires about a user's role or identity.
- A designer inquires about a user's background or profession.

11.
Concepts: explain limitations, address technical limitations
- Designers explain the current limitations or constraints of a feature or component.
- Designers address or explain technical limitations or requirements.

12.
Concepts: suggest new features, request physics features
- Users suggest new features or functionalities for Physics Lab.
- User requests features or functionalities for physics experiments.

13.
Concepts: request features, feature request invitation
- Users request a new feature or improvement.
- Designers invite users to suggest new features or improvements.

14.
Concepts: suggest features
- Users make a suggestion or recommendation for the software.
- Designers or users suggest a feature or implementation.
===
Here are the definitions for each code:

---
1.
Concepts: announce software updates, announce updates and releases
Relationship: The concepts are related as they both involve designers sharing information about changes to the software.
Criteria: Designers announce updates, releases, or changes to the software.
Phrase: Announcing updates and releases.

2.
Concepts: provide progress updates, answer about progress
Relationship: The concepts are related as they both involve designers sharing information about the development process.
Criteria: Designers provide updates or answer questions about the progress of the project.
Phrase: Providing progress updates.

3.
Concepts: share planned updates, share development plans
Relationship: The concepts are related as they both involve designers sharing information about future changes to the software.
Criteria: Designers share information about planned updates or development plans.
Phrase: Sharing development plans.

4.
Concepts: express gratitude or praise, express satisfaction or praise
Relationship: The concepts are related as they both involve expressing positive emotions towards the software.
Criteria: Users or designers express gratitude, praise, or satisfaction towards the software.
Phrase: Expressing appreciation.

5.
Concepts: express appreciation for feedback, acknowledge effort or show appreciation
Relationship: The concepts are related as they both involve expressing gratitude towards user feedback.
Criteria: Users or designers express appreciation for user feedback or acknowledge effort.
Phrase: Acknowledging feedback.

6.
Concepts: user appreciation, user interaction and gratitude
Relationship: The concepts are related as they both involve users expressing gratitude towards the system or designers.
Criteria: Users express gratitude or appreciation towards the system, updates, or designers' efforts.
Phrase: Expressing user appreciation.

7.
Concepts: acknowledge each other, acknowledge user input or information
Relationship: The concepts are related as they both involve acknowledging or recognizing user input.
Criteria: Designers and users acknowledge each other's statements or user input.
Phrase: Acknowledging user input.

8.
Concepts: explain design goals, explain design rationale
Relationship: The concepts are related as they both involve designers explaining the underlying principles of the software.
Criteria: Designers explain the design goals, philosophy, or principles behind the software.
Phrase: Explaining design goals.

9.
Concepts: provide examples, provide explanations
Relationship: The concepts are related as they both involve designers providing additional information to clarify concepts.
Criteria: Designers provide examples or explanations to illustrate concepts or features.
Phrase: Providing explanations.

10.
Concepts: question identity, inquire about user background
Relationship: The concepts are related as they both involve designers seeking information about users.
Criteria: Designers inquire about users' roles, identities, backgrounds, or professions.
Phrase: Inquiring about user background.

11.
Concepts: explain limitations, address technical limitations
Relationship: The concepts are related as they both involve designers explaining constraints or limitations of the software.
Criteria: Designers explain or address technical limitations or requirements of features or components.
Phrase: Explaining limitations.

12.
Concepts: suggest new features, request physics features
Relationship: The concepts are related as they both involve users requesting or suggesting new features.
Criteria: Users suggest or request new features or functionalities for Physics Lab.
Phrase: Requesting new features.

13.
Concepts: request features, feature request invitation
Relationship: The concepts are related as they both involve users requesting or designers inviting suggestions for new features.
Criteria: Users request new features or designers invite users to suggest improvements.
Phrase: Requesting features.

14.
Concepts: suggest features
Relationship: N/A
Criteria: Users or designers suggest features or implementations for the software.
Phrase: Suggesting features.