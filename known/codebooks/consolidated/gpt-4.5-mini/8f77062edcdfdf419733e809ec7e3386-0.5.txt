You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (8 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
8. 
Concepts: {Repeat the input 8}
Relationship: {What is logical relationship between concepts in code 8, or N/A if not applicable}
Criteria: {Who did what, and how for code 8}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: involve users in design, incorporate user feedback into design
- Designers actively involve users in the design process to contribute ideas.
- Instances where user feedback is acknowledged and incorporated into the design process are mentioned by designers.

2.
Concepts: acknowledge user feedback, engaging with user feedback
- Designers react positively to user feedback and acknowledge suggestions.
- Designers actively engage with users by responding to their queries, feedback, and suggestions, demonstrating attentiveness and a willingness to acknowledge and address user concerns.

3.
Concepts: address user inquiries, offer solutions to user concerns
- Designers answer user questions and share relevant updates.
- Designers offer solutions to address user inquiries and concerns.

4.
Concepts: user guidance, explain software features
- Designer outlines user guidance and features of the software.
- Designers introduce and explain the functionalities of the software to users through examples for clarity.

5.
Concepts: clarify version types, clarify technical details and features
- Designers clarify the purpose and limitations of specific product versions.
- Designers explain technical details and clarify the nature of technical artifacts to inform users about functionality.

6.
Concepts: confirm update schedule, communicate release timelines
- Designers confirm upcoming updates and discuss their intended release schedules.
- Designers outline schedules for upcoming releases and updates.

7.
Concepts: share platform updates, share information on release process
- Designers clarify version details and share platform updates.
- Designers discuss and share information about the status of the software release process for different platforms.

8.
Concepts: compare and share positive experiences
- Users provide feedback by comparing the software favorably with others.
- Users share their experiences and the impact of the software on teaching or learning, including positive feedback.
===
---
Definitions for each code (8 in total):
1.
Concepts: involve users in design, incorporate user feedback into design
Relationship: The concepts are logically related as both focus on the active participation of users in the design process and the integration of their insights.
Criteria: Designers actively involve users in the design process by soliciting their ideas and incorporating their feedback into the design.
Phrase: Involve and incorporate user feedback.

2.
Concepts: acknowledge user feedback, engaging with user feedback
Relationship: These concepts are interconnected as they both emphasize the importance of recognizing and responding to user input.
Criteria: Designers acknowledge user feedback and engage with users by responding to their queries and suggestions.
Phrase: Acknowledge and engage with user feedback.

3.
Concepts: address user inquiries, offer solutions to user concerns
Relationship: The concepts are related as they both pertain to the responsiveness of designers to user needs and the provision of assistance.
Criteria: Designers address user inquiries and offer solutions to user concerns through effective communication.
Phrase: Address and offer solutions to user inquiries.

4.
Concepts: user guidance, explain software features
Relationship: These concepts are logically connected as both involve providing users with information to enhance their understanding of the software.
Criteria: Designers provide user guidance by explaining software features and functionalities through clear examples.
Phrase: Explain and provide user guidance.

5.
Concepts: clarify version types, clarify technical details and features
Relationship: The concepts are related as they both involve providing clarity regarding the product's specifications and functionalities.
Criteria: Designers clarify version types and technical details to inform users about the software's capabilities and limitations.
Phrase: Clarify version types and technical details.

6.
Concepts: confirm update schedule, communicate release timelines
Relationship: These concepts are logically connected as both involve informing users about the timing of software updates and releases.
Criteria: Designers confirm the update schedule and communicate release timelines to keep users informed.
Phrase: Confirm and communicate update schedules.

7.
Concepts: share platform updates, share information on release process
Relationship: The concepts are related as they both focus on the dissemination of information regarding the software's status and updates.
Criteria: Designers share platform updates and provide information about the release process to keep users informed.
Phrase: Share updates and release information.

8.
Concepts: compare and share positive experiences
Relationship: These concepts are logically related as they both involve users reflecting on and sharing their experiences with the software in a favorable manner.
Criteria: Users compare the software positively with others and share their experiences regarding its impact on teaching or learning.
Phrase: Compare and share positive experiences.