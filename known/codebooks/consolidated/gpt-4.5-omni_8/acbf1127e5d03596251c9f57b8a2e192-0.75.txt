You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (47 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
47. 
Concepts: {Repeat the input 47}
Relationship: {What is logical relationship between concepts in code 47, or N/A if not applicable}
Criteria: {Who did what, and how for code 47}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: discuss classroom application, illustrate classroom success
- Users share their experiences using the software in classrooms.
- Users describe students' positive responses to the software in the classroom.

2.
Concepts: share personal stories, share past experiences
- Users share personal experiences or anecdotes.
- Users share past incidents or events that impact current practices.

3.
Concepts: share professional background, establish teaching credibility
- Users share their professional background to establish credibility and context.
- Users demonstrate their qualifications by disclosing their teaching experience.

4.
Concepts: provide educational context, share teaching experience
- Users share context about their school's resources and initiatives.
- Users share their teaching experience and background relevant to the community.

5.
Concepts: provide explanations, gives a more detailed and specific answer
- Responses that provide answers or resources to users' questions.
- Providing a detailed and specific answer to a user query.

6.
Concepts: seek information, inquire about software access
- Users ask for resources or information related to the software.
- Users express interest and inquire about the process or availability of downloading the software.

7.
Concepts: request technical support, inquire about technical problems
- Users request technical assistance or instructions for issues.
- Users inquire about specific problems encountered with the platform.

8.
Concepts: request guidance, inquire about feature usage
- Users seek or request guidance for using a specific function or version.
- Users seek help or inquire about the use of specific features.

9.
Concepts: cross-platform usage, inquire about platform compatibility
- Discussion or inquiry about the use of the software across different platforms.
- Users inquire specifically about the PC version or compatibility of the software.

10.
Concepts: clarify version type, specify platform version
- Users clarify the specific version or type of software being referred to.
- Users reference and communicate about specific platform versions.

11.
Concepts: using expressive emojis, express user reactions
- Users and designers use emojis to express feelings or reactions.
- Users express their reactions to updates or announcements, often using emojis.

12.
Concepts: suggest group sharing, share design knowledge
- Designers suggest sharing resources or information within the group.
- Designers share knowledge or information to aid the design process.

13.
Concepts: initiate interaction, engage with community
- Initiating interaction with the community.
- Engaging with the community through questions and responses.

14.
Concepts: self-introduction, greet the community
- A user introduces themselves to the community.
- Users or designers greet and introduce themselves in the community.

15.
Concepts: apologize for timing, show consideration for inconvenience
- Designers apologize for disturbances specifically related to timing.
- Designers apologize for disturbances and show consideration for inconvenience.

16.
Concepts: confirm statements, provide brief affirmation
- Participants confirm or acknowledge statements with brief responses.
- A user responds with a short, affirmative answer indicating agreement or approval.

17.
Concepts: confirm agreement, confirm design ideas, acknowledge agreement
- Designers or users affirm or agree with each other’s points or arguments.
- Designers confirm or express agreement with suggested design ideas.
- Users or designers agree with or acknowledge understanding of previous statements.

18.
Concepts: engage with development, show enthusiasm for updates
- Users express interest and engage with the development or updates of the platform.
- Users express excitement or positive energy about ideas, features, or developments.

19.
Concepts: acknowledge community support, express appreciation and encouragement
- Users show and appreciate support within the community.
- Users express gratitude and encouragement to community members.

20.
Concepts: show gratitude, engage positively
- Users express gratitude or appreciation in interactions.
- Users interact positively by expressing gratitude or agreement with others.

21.
Concepts: development goals, announce development plans
- The designer outlines specific goals or milestones they hope to achieve in development.
- Designers publicly share and detail their future development plans.

22.
Concepts: plan feature development, prioritize development tasks
- Designers outline, plan, and provide timelines for feature development.
- Designers outline and prioritize tasks or features for development.

23.
Concepts: progress update, development update
- Updates on the progress or status of development work.
- Information shared by designers about the current status, updates, and future plans for the Physics Lab software.

24.
Concepts: list updates and fixes, provide detailed overview of update, announce component adjustments
- Designers list updates, fixes, and potential bugs in the current version.
- Designers provide a detailed overview of technical updates, feature changes, and bug fixes.
- Designers announce specific adjustments, new features, components, and bug fixes comprehensively.

25.
Concepts: maintain update transparency, reassure users about updates
- Designers communicate updates transparently to manage user expectations.
- Designers reassure users by promising that updates and developments are ongoing.

26.
Concepts: explain update delay, provide release timelines
- Designers provide explanations for delays in updates or features.
- Designers share information and timelines about the app's release.

27.
Concepts: enhance simulation accuracy, explaining simulation detail
- Designers discuss the accuracy and enhancements made to simulations.
- A designer explains specific details about simulation features.

28.
Concepts: explain feature complexity, describe development challenges
- Designers explain the complexity of features and the time required to develop them.
- Designers describe challenges or difficulties faced during the development process.

29.
Concepts: demonstrate feature usage, explain development process, teaching and instruction
- Designers provide instructions and explain functionality with examples.
- Designers clarify how features work and explain the development process.
- Developmental details communicated by designers to users about how to utilize the current functionality for testing and feedback.

30.
Concepts: discuss system compatibility, consider future compatibility
- Designers discuss system requirements and compatibility with various systems.
- Designers consider and mention the need for future software compatibility.

31.
Concepts: consider usability, address functionality
- Designers address and consider usability aspects for the software interface.
- Designers address the functionality or features of the software.

32.
Concepts: explain design rationale, explain design principles
- Designers explain the rationale, plans, and goals behind design decisions.
- Designers explain the principles or philosophy behind design decisions.

33.
Concepts: provide rationale, give rationale to development decision
- Users or designers provide reasons to justify a statement or action.
- Providing rationale for development decisions.

34.
Concepts: confirming user identity and role, inquiring about user roles and backgrounds
- Designers confirm the user's identity and professional role or activity.
- Designers inquire about the user's role or professional background.

35.
Concepts: respond to inquiry, provide response to questions
- Designers respond directly to users’ technical inquiries.
- Designers respond to questions or provide clarifications.

36.
Concepts: pose design question, support design queries
- Users or designers ask questions related to access, usage, or design process.
- Instances where users ask questions and receive design-related responses.

37.
Concepts: provide specific feedback, make detailed feature request
- Users provide additional suggestions, specific feedback, and justifications.
- Users request specific features with detailed descriptions and justifications.

38.
Concepts: acknowledge need for feature, acknowledge and implement feature requests
- Designers explain and acknowledge the need for particular features or updates.
- Designers respond to feature requests and discuss plans for implementation.

39.
Concepts: encourage user interaction, invite user engagement
- Designers encourage users to provide feedback and engage in discussions.
- Designers invite users to participate, give feedback, or ask questions in future discussions.

40.
Concepts: invite future feedback, promise future consultation
- Designers ask for future help and invite feedback from the community.
- Designers announce and promise future rounds of user feedback and consultations.

41.
Concepts: engage in dialogue, discuss software usability, discuss input methods
- Users or designers engage in back-and-forth professional discussions.
- Interaction between designer and user about the software's functionality or features.
- Designers and users discuss input methods for the system.

42.
Concepts: elaborate on suggestions, suggest design simplification
- Designers provide reasons and elaborate on suggestions for improving the software.
- Designers share thoughts on refining and simplifying the software design.

43.
Concepts: offer solutions, propose alternative solutions
- Designers propose solutions to user problems.
- Designers or users propose potential solutions and seek or offer alternatives to issues.

44.
Concepts: share past experience, share usability workaround
- When a designer shares a past experience or workaround.
- Designers provide workarounds for usability issues or known problems.

45.
Concepts: seek efficiency, suggest practical use case
- Designers suggest simplifications to improve efficiency in line with user feedback.
- Designers emphasize convenience and suggest practical use cases for improvements.

46.
Concepts: request clarification
- Designers ask for confirmation or clarification on specific details.
- Users ask questions or seek clarification on specific points or features.

47.
Concepts: collecting user feedback
- Designers solicit and gather user feedback on their experiences.
- Designers plan to gather user opinions before proceeding with new developments.
===
---
Definitions for each code (47 in total):
1.
Concepts: discuss classroom application, illustrate classroom success
Relationship: Both concepts involve users sharing positive experiences related to classroom usage.
Criteria: Users share their experiences using the software in classrooms and describe students' positive responses.
Phrase: Share classroom success stories

2.
Concepts: share personal stories, share past experiences
Relationship: Both concepts involve users sharing personal anecdotes or past events.
Criteria: Users share personal experiences or anecdotes that impact current practices.
Phrase: Share personal anecdotes

3.
Concepts: share professional background, establish teaching credibility
Relationship: Both concepts involve establishing credibility through professional background.
Criteria: Users share their professional background to establish credibility and context by disclosing their teaching experience.
Phrase: Establish teaching credibility

4.
Concepts: provide educational context, share teaching experience
Relationship: Both concepts involve sharing relevant teaching experience and context.
Criteria: Users share context about their school's resources and their relevant teaching experience.
Phrase: Share educational context

5.
Concepts: provide explanations, gives a more detailed and specific answer
Relationship: Both concepts involve providing detailed responses to queries.
Criteria: Responses that provide detailed and specific answers to users' questions.
Phrase: Provide detailed answers

6.
Concepts: seek information, inquire about software access
Relationship: Both concepts involve users seeking information specifically about software access.
Criteria: Users ask for resources or information related to downloading or accessing the software.
Phrase: Inquire about software access

7.
Concepts: request technical support, inquire about technical problems
Relationship: Both concepts involve seeking assistance for technical issues.
Criteria: Users request technical assistance or inquire about specific problems encountered with the platform.
Phrase: Seek technical support

8.
Concepts: request guidance, inquire about feature usage
Relationship: Both concepts involve seeking help with using specific features.
Criteria: Users seek or request guidance for using a specific function or feature.
Phrase: Inquire about feature usage

9.
Concepts: cross-platform usage, inquire about platform compatibility
Relationship: Both concepts involve inquiries about software compatibility across different platforms.
Criteria: Users inquire about the use and compatibility of the software on different platforms.
Phrase: Inquire about platform compatibility

10.
Concepts: clarify version type, specify platform version
Relationship: Both concepts involve specifying the software version and platform.
Criteria: Users clarify and reference the specific type or version of the software being discussed.
Phrase: Specify software version

11.
Concepts: using expressive emojis, express user reactions
Relationship: Both concepts involve expressing reactions, often using emojis.
Criteria: Users express their reactions to updates or announcements, often using emojis.
Phrase: Use expressive emojis

12.
Concepts: suggest group sharing, share design knowledge
Relationship: Both concepts involve sharing resources or knowledge within a group.
Criteria: Designers suggest sharing resources and share design knowledge to aid the design process.
Phrase: Share design knowledge

13.
Concepts: initiate interaction, engage with community
Relationship: Both concepts involve starting and participating in community interactions.
Criteria: Initiating interaction and engaging with the community through questions and responses.
Phrase: Engage with community

14.
Concepts: self-introduction, greet the community
Relationship: Both concepts involve introducing oneself to the community.
Criteria: A user or designer introduces themselves and greets the community.
Phrase: Introduce oneself

15.
Concepts: apologize for timing, show consideration for inconvenience
Relationship: Both concepts involve apologizing for inconvenience related to timing.
Criteria: Designers apologize for timing-related disturbances and show consideration for any inconvenience.
Phrase: Apologize for timing issues

16.
Concepts: confirm statements, provide brief affirmation
Relationship: Both concepts involve giving brief affirmations or confirmations.
Criteria: Participants confirm or acknowledge statements with brief responses.
Phrase: Provide brief affirmation

17.
Concepts: confirm agreement, confirm design ideas, acknowledge agreement
Relationship: All concepts involve affirming or agreeing with statements or ideas.
Criteria: Designers or users affirm or agree with each other’s points, design ideas, or statements.
Phrase: Confirm agreement

18.
Concepts: engage with development, show enthusiasm for updates
Relationship: Both concepts involve showing interest and enthusiasm for updates.
Criteria: Users express interest and enthusiasm for the development or updates of the platform.
Phrase: Show enthusiasm for updates

19.
Concepts: acknowledge community support, express appreciation and encouragement
Relationship: Both concepts involve expressing gratitude and support within the community.
Criteria: Users show appreciation and encourage community members.
Phrase: Express community appreciation

20.
Concepts: show gratitude, engage positively
Relationship: Both concepts involve expressing gratitude and positive interactions.
Criteria: Users express gratitude or appreciation in positive interactions.
Phrase: Show gratitude

21.
Concepts: development goals, announce development plans
Relationship: Both concepts involve outlining and sharing development plans.
Criteria: Designers outline specific goals and publicly share their future development plans.
Phrase: Announce development plans

22.
Concepts: plan feature development, prioritize development tasks
Relationship: Both concepts involve planning and prioritizing development tasks.
Criteria: Designers outline, plan, and prioritize tasks or features for development.
Phrase: Plan feature development

23.
Concepts: progress update, development update
Relationship: Both concepts involve providing updates on the status of development.
Criteria: Designers provide information about the current status, updates, and future plans for the software.
Phrase: Provide development updates

24.
Concepts: list updates and fixes, provide detailed overview of update, announce component adjustments
Relationship: All concepts involve detailing updates and fixes in the software.
Criteria: Designers list and provide a detailed overview of updates, fixes, and adjustments.
Phrase: Announce updates and fixes

25.
Concepts: maintain update transparency, reassure users about updates
Relationship: Both concepts involve transparent communication about updates.
Criteria: Designers transparently communicate updates to reassure users that developments are ongoing.
Phrase: Maintain update transparency

26.
Concepts: explain update delay, provide release timelines
Relationship: Both concepts involve explaining delays and providing release timelines.
Criteria: Designers explain delays in updates and provide information and timelines about releases.
Phrase: Explain update delays

27.
Concepts: enhance simulation accuracy, explaining simulation detail
Relationship: Both concepts involve discussing and explaining simulation improvements.
Criteria: Designers discuss the accuracy and enhancements made to simulations and explain specific details.
Phrase: Explain simulation enhancements

28.
Concepts: explain feature complexity, describe development challenges
Relationship: Both concepts involve explaining complexities and challenges in development.
Criteria: Designers explain the complexity of features and describe the challenges faced during development.
Phrase: Describe development challenges

29.
Concepts: demonstrate feature usage, explain development process, teaching and instruction
Relationship: All concepts involve explaining and demonstrating how features work.
Criteria: Designers provide instructions, explain functionality, and clarify the development process.
Phrase: Demonstrate feature usage

30.
Concepts: discuss system compatibility, consider future compatibility
Relationship: Both concepts involve discussing current and future system compatibility.
Criteria: Designers discuss system requirements and consider future software compatibility.
Phrase: Discuss system compatibility

31.
Concepts: consider usability, address functionality
Relationship: Both concepts involve addressing usability and functionality aspects.
Criteria: Designers address usability aspects and the functionality of the software.
Phrase: Address usability and functionality

32.
Concepts: explain design rationale, explain design principles
Relationship: Both concepts involve explaining the reasoning behind design decisions.
Criteria: Designers explain the rationale and principles behind their design decisions.
Phrase: Explain design rationale

33.
Concepts: provide rationale, give rationale to development decision
Relationship: Both concepts involve providing reasons for decisions.
Criteria: Users or designers provide reasons to justify development decisions.
Phrase: Provide development rationale

34.
Concepts: confirming user identity and role, inquiring about user roles and backgrounds
Relationship: Both concepts involve confirming or inquiring about user roles.
Criteria: Designers confirm the user's identity and role or inquire about their professional background.
Phrase: Confirm user roles

35.
Concepts: respond to inquiry, provide response to questions
Relationship: Both concepts involve responding to user inquiries.
Criteria: Designers respond directly to users’ technical inquiries or questions.
Phrase: Respond to inquiries

36.
Concepts: pose design question, support design queries
Relationship: Both concepts involve asking and supporting design-related questions.
Criteria: Users or designers ask and support questions related to the design process.
Phrase: Pose design questions

37.
Concepts: provide specific feedback, make detailed feature request
Relationship: Both concepts involve providing detailed feedback or feature requests.
Criteria: Users provide specific feedback and request features with detailed descriptions.
Phrase: Provide specific feedback

38.
Concepts: acknowledge need for feature, acknowledge and implement feature requests
Relationship: Both concepts involve recognizing and planning for feature requests.
Criteria: Designers acknowledge the need for features and discuss plans for implementation.
Phrase: Acknowledge feature requests

39.
Concepts: encourage user interaction, invite user engagement
Relationship: Both concepts involve encouraging and inviting user participation.
Criteria: Designers encourage users to provide feedback and engage in discussions.
Phrase: Encourage user interaction

40.
Concepts: invite future feedback, promise future consultation
Relationship: Both concepts involve inviting and promising future user feedback.
Criteria: Designers ask for future help and invite feedback from the community.
Phrase: Invite future feedback

41.
Concepts: engage in dialogue, discuss software usability, discuss input methods
Relationship: All concepts involve engaging in detailed discussions about the software.
Criteria: Users or designers engage in discussions about software usability and input methods.
Phrase: Discuss software usability

42.
Concepts: elaborate on suggestions, suggest design simplification
Relationship: Both concepts involve providing detailed suggestions for improvement.
Criteria: Designers elaborate on suggestions for improving and simplifying the software.
Phrase: Suggest design simplifications

43.
Concepts: offer solutions, propose alternative solutions
Relationship: Both concepts involve proposing solutions to problems.
Criteria: Designers or users propose solutions and seek or offer alternatives to issues.
Phrase: Propose solutions

44.
Concepts: share past experience, share usability workaround
Relationship: Both concepts involve sharing past experiences and workarounds.
Criteria: Designers share past experiences and provide workarounds for usability issues.
Phrase: Share usability workarounds

45.
Concepts: seek efficiency, suggest practical use case
Relationship: Both concepts involve seeking efficiency through practical suggestions.
Criteria: Designers suggest simplifications and practical use cases to improve efficiency.
Phrase: Suggest practical use cases

46.
Concepts: request clarification
Relationship: N/A
Criteria: Designers or users ask for confirmation or clarification on specific points.
Phrase: Request clarification

47.
Concepts: collecting user feedback
Relationship: N/A
Criteria: Designers solicit and gather user feedback on their experiences.
Phrase: Collect user feedback
---