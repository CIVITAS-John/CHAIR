You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (23 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
23. 
Concepts: {Repeat the input 23}
Relationship: {What is logical relationship between concepts in code 23, or N/A if not applicable}
Criteria: {Who did what, and how for code 23}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: actively involve users in design, engage users for feedback
- Designers involve users actively through feedback and interactions that inform the design process.
- Designers seek insights and feedback from users to inform software iterations and improvements by actively soliciting user experiences and challenges.

2.
Concepts: offer ongoing support, reassure users consistently
- Designers reassure users about their willingness to help with any issues that arise.
- Designers provide reassurances regarding ongoing improvements and future feature enhancements.

3.
Concepts: implement user feedback, actively respond to user feedback
- Designers acknowledge feedback from users and commit to implementing suggested improvements.
- Designers effectively respond to user feedback, showing commitment to user needs.

4.
Concepts: extend polite apologies, foster empathy through acknowledgment
- Designers express concern for user experiences while extending polite apologies when necessary.
- Designers address user experiences while users understand designers' challenges.

5.
Concepts: user guidance, provide feature guidance
- Designer provides detailed user guidance about new features and adjustments in the software.
- Designers issue instructions and guidance for effectively utilizing specific functionalities of the software.

6.
Concepts: improve software usability, propose design improvements
- Designers make adjustments and suggestions aimed at improving software usability.
- Designers identify updates and propose design enhancements based on user input.

7.
Concepts: collaborative planning, plan future developments
- Designers and users collaboratively discussing and planning the development of the software.
- Designers discuss and plan future opportunities for software development and updates.

8.
Concepts: share development transparently, maintain transparency in updates
- Designers share development processes and plans transparently with the community.
- Designers transparently explain any delays in updates while maintaining overall transparency in development.

9.
Concepts: group communication, promote group communication
- The designer communicates updates or news about the app in the group setting.
- Designers engage in direct communication to facilitate group feedback and discussion of features.

10.
Concepts: confirm compatibility, diagnose compatibility issues
- Designers confirm system compatibility while clearly discussing system requirements with users.
- Designers analyze and diagnose compatibility issues while proposing solutions.

11.
Concepts: acknowledge limitations, clarify technical limitations
- The designer acknowledges potential technical issues or limitations that may affect software performance.
- Designers clarify technical limitations present in the current version of the product.

12.
Concepts: clarify design rationale, explain design principles
- Designers provide clear explanations of design choices and clarify intentions behind them.
- Designers articulate principles guiding their design choices alongside their overall philosophy.

13.
Concepts: follow up on inquiries, respond to initial question
- Designers ask follow-up questions to gather further details regarding user needs or suggestions.
- Designers address initial inquiries with technical considerations or follow-up actions.

14.
Concepts: add specifics for clarity, encourage detailed elaboration
- Designers and users provide specific details to clarify compatibility and requirements.
- Designers encourage users to elaborate on their needs to enhance clarity in understanding.

15.
Concepts: facilitate query support, share knowledge collaboratively
- Users and designers collaboratively offer assistance for query resolutions within the community.
- Designers and users share knowledge and experiences to create a supportive community.

16.
Concepts: initiate interaction, facilitate further engagement
- User initiates interaction within the community for engagement.
- Users initiate requests or actions that promote continued participation within the community.

17.
Concepts: reflect community values, affirm community involvement
- Users express or acknowledge shared values or principles within the community that reflect its identity and purpose.
- Users reaffirm their involvement and professional identities within the community to contextualize their contributions.

18.
Concepts: express user satisfaction, praise software effectiveness
- Users relay their satisfaction with the software while expressing positivity towards its functionalities.
- Users evaluate the software's effectiveness and openly express admiration for its educational benefits.

19.
Concepts: highlight educational needs, articulate educational requests
- Users articulate specific educational tools they desire in the software to better meet their needs.
- Users articulate specific feature requests and suggest potential enhancements for better educational use.

20.
Concepts: inquire about updates, show eagerness for updates
- Users express concerns about software updates and inquire about their status or timelines.
- Users express excitement regarding anticipated software updates and curiosity about future features.

21.
Concepts: inquire about downloads, request detailed information
- Users express interest in the software by inquiring specifically about download information.
- Users seek information regarding functionalities and inquire about version clarifications for usage.

22.
Concepts: share teaching identities, share classroom experiences
- Users share their teaching experiences and backgrounds, enhancing the community's educational identity.
- Users recount their classroom experiences and issues, enriching the community's knowledge base.

23.
Concepts: teacher identity, inquire about backgrounds
- The designer inquires about the user's teaching background to establish a teacher-centric dialogue.
- Designers confirm user professional identities while inquiring about their backgrounds to enrich discussions.
===
---
Definitions for each code (23 in total):
1.
Concepts: actively involve users in design, engage users for feedback  
Relationship: Engagement and involvement are interdependent as feedback enhances user involvement in design.  
Criteria: Designers actively involve users by soliciting feedback and engaging them in meaningful interactions that inform the design process.  
Phrase: Actively engage users for design feedback.  

2.
Concepts: offer ongoing support, reassure users consistently  
Relationship: Ongoing support is contingent upon reassuring users, as it builds trust and confidence in the designer's commitment.  
Criteria: Designers consistently provide reassuring communication regarding ongoing support and improvements to enhance user confidence.  
Phrase: Offer consistent reassurance and support.  

3.
Concepts: implement user feedback, actively respond to user feedback  
Relationship: Implementing feedback requires a prior active response to establish what changes or improvements are necessary.  
Criteria: Designers actively respond to user feedback and commit to implementing suggested improvements based on user needs.  
Phrase: Actively implement user feedback.  

4.
Concepts: extend polite apologies, foster empathy through acknowledgment  
Relationship: Acknowledgment of user concerns fosters empathy, making polite apologies meaningful and relevant.  
Criteria: Designers extend polite apologies and foster empathy by acknowledging user experiences and challenges.  
Phrase: Foster empathy through acknowledgment.  

5.
Concepts: user guidance, provide feature guidance  
Relationship: User guidance and feature guidance are intertwined, as effective user guidance includes details on new features and functionalities.  
Criteria: Designers provide detailed guidance about new features and how to effectively use specific functionalities of the software.  
Phrase: Provide comprehensive user guidance.  

6.
Concepts: improve software usability, propose design improvements  
Relationship: Proposing design improvements is a direct response to enhancing software usability based on user feedback.  
Criteria: Designers propose design enhancements and adjustments that aim to improve software usability based on user input.  
Phrase: Propose enhancements for usability.  

7.
Concepts: collaborative planning, plan future developments  
Relationship: Collaborative planning is essential for effectively considering future developments, as it incorporates diverse perspectives.  
Criteria: Designers and users collaboratively discuss and plan future software developments and updates.  
Phrase: Engage in collaborative planning.  

8.
Concepts: share development transparently, maintain transparency in updates  
Relationship: Transparency in updates is a subset of sharing development processes, ensuring trust within the community.  
Criteria: Designers share development processes and updates transparently with the community, explaining any changes clearly.  
Phrase: Maintain transparency in development.  

9.
Concepts: group communication, promote group communication  
Relationship: Effective group communication requires that designers actively promote communication channels for feedback and updates.  
Criteria: Designers communicate updates and engage in direct communication to foster group feedback and discussion.  
Phrase: Promote and engage in group communication.  

10.
Concepts: confirm compatibility, diagnose compatibility issues  
Relationship: Diagnosing compatibility issues relies on prior confirmation of system compatibility and requirements.  
Criteria: Designers confirm system compatibility and diagnose any issues while proposing appropriate solutions.  
Phrase: Confirm and diagnose compatibility.  

11.
Concepts: acknowledge limitations, clarify technical limitations  
Relationship: Acknowledging limitations provides a foundation for clarifying the specifics of those technical limitations.  
Criteria: Designers acknowledge potential technical limitations and clarify their implications for software performance.  
Phrase: Clarify and acknowledge limitations.  

12.
Concepts: clarify design rationale, explain design principles  
Relationship: Clarifying design rationale is fundamental in explaining design choices and the principles guiding them.  
Criteria: Designers provide explanations for their design choices and articulate the principles shaping their design philosophy.  
Phrase: Explain and clarify design rationale.  

13.
Concepts: follow up on inquiries, respond to initial question  
Relationship: Responding to an initial question creates a basis for follow-up inquiries that delve deeper into user needs.  
Criteria: Designers respond to initial inquiries and ask follow-up questions to gather further details on user needs or suggestions.  
Phrase: Follow up and respond to inquiries.  

14.
Concepts: add specifics for clarity, encourage detailed elaboration  
Relationship: Adding specifics enhances clarity and encourages users to elaborate on their requests for deeper understanding.  
Criteria: Designers add specific details and encourage users to elaborate to enhance clarity in understanding requirements.  
Phrase: Encourage detailed elaboration for clarity.  

15.
Concepts: facilitate query support, share knowledge collaboratively  
Relationship: Facilitating query support involves the collaborative sharing of knowledge and experiences to resolve user inquiries.  
Criteria: Designers and users collaboratively offer query support, sharing knowledge and experiences to foster a supportive community.  
Phrase: Collaboratively share knowledge and support.  

16.
Concepts: initiate interaction, facilitate further engagement  
Relationship: Initiating interaction is essential to facilitate ongoing engagement and participation within the community.  
Criteria: Users initiate interactions that promote further engagement and participation within the community.  
Phrase: Facilitate ongoing interaction and engagement.  

17.
Concepts: reflect community values, affirm community involvement  
Relationship: Reflecting community values is a way for users to affirm their involvement and connection to the community identity.  
Criteria: Users express shared community values and reaffirm their involvement, enhancing the community's identity.  
Phrase: Affirm and reflect community values.  

18.
Concepts: express user satisfaction, praise software effectiveness  
Relationship: User satisfaction is demonstrated through expressions of praise for software effectiveness and its functionalities.  
Criteria: Users relay their satisfaction and openly praise the software's effectiveness and educational benefits.  
Phrase: Express satisfaction and praise effectiveness.  

19.
Concepts: highlight educational needs, articulate educational requests  
Relationship: Highlighting educational needs is often tied to articulating specific requests that address those needs in the software.  
Criteria: Users articulate their educational needs and specific feature requests to enhance the software's educational utility.  
Phrase: Articulate educational needs and requests.  

20.
Concepts: inquire about updates, show eagerness for updates  
Relationship: Inquiring about updates reflects users' eagerness and interest in the software's development and future features.  
Criteria: Users express concerns about software updates while showing eagerness regarding their status and anticipated features.  
Phrase: Inquire and show eagerness for updates.  

21.
Concepts: inquire about downloads, request detailed information  
Relationship: Inquiring about downloads is connected to seeking detailed information about functionalities and software usability.  
Criteria: Users express interest in the software by inquiring specifically about download information and functionalities.  
Phrase: Inquire for download and information.  

22.
Concepts: share teaching identities, share classroom experiences  
Relationship: Sharing teaching identities enhances the community by adding depth through diverse classroom experiences.  
Criteria: Users share their teaching experiences and backgrounds, enriching the educational community's knowledge base.  
Phrase: Share teaching experiences and identities.  

23.
Concepts: teacher identity, inquire about backgrounds  
Relationship: Inquiring about backgrounds contributes to establishing teacher-centric dialogues and enhancing understanding of user identities.  
Criteria: Designers inquire about users' teaching backgrounds to establish a teacher-centric dialogue and enrich discussions.  
Phrase: Inquire about backgrounds and identities.  
---