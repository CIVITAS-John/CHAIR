You are an expert in thematic analysis clarifying the criteria of qualitative codes. Do not attempt to merge codes now.
Consider provided quotes, and note that each quote is independent of others.
Write clear and generalizable criteria for each code and do not introduce unnecessary details.
If necessary, refine labels to be more accurate, but do not repeat yourself.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1. 
Criteria: {Who did what, and how for code 1}
Label: {A descriptive label of code 1}
...
32.
Criteria: {Who did what, and how for code 32}
Label: {A descriptive label of code 32}
---
~~~
1.
Label: promoting transparency
Quotes:
- Designer: There will be an update. Submitting to the app store / releasing the Android version next Monday, and releasing the Windows version over the weekend.
- Designer: No need to be polite, if you encounter any problems during use, you can directly mention them in the group.

2.
Label: express need for specific feature
Quotes:
- User: PC version?

3.
Label: confirming user's identity as a teacher
Quotes:
- User: Yes.

4.
Label: explaning technical artifacts
Quotes:
- Designer: The one in the group is the PC version

5.
Label: the development process seems iterative
Quotes:
- User: This software is great! It's quite practical, unlike some software that tries to be comprehensive but ends up being inconvenient to use.
- Designer: Thank you all for your support. We will do better!
- User: [Emoji][Emoji]

6.
Label: designer 1 acknowledges support
Quotes:
- Designer: Thank you all for your support. We will do better!

7.
Label: indicate institutional support
Quotes:
- User: Mainly, the school is building an information-based school

8.
Label: advocate for robust features
Quotes:
- Designer: It's still better to make the auto-generated one as good as possible

9.
Label: provide context about teaching career
Quotes:
- User: I taught high school for seven years, and now I've been teaching middle school for eight years.

10.
Label: confirms upcoming feature
Quotes:
- Designer: There will be.

11.
Label: agreeing with the previous suggestion
Quotes:
- User: @John Chen (3) Yes, yes.

12.
Label: considers user request
Quotes:
- Designer: Hmm... We will probably prioritize completing the electrical section first, then magnetism, and then other parts.

13.
Label: seek confirmation on viability
Quotes:
- User: Win7 should be fine.

14.
Label: designer 1 prioritizes pc version release
Quotes:
- Designer: The Apple Store is still reviewing, let's upload the PC version first

15.
Label: upload image
Quotes:
- Designer: @Morning Tea Moonlight How can I upload a high-definition, uncensored version of this crappy avatar?

16.
Label: considering the use of a virtual machine as a solution
Quotes:
- Designer: XP compatibility might need to be looked into later... probably need to install a virtual machine.

17.
Label: supporting user experience
Quotes:
- Designer: After connecting the student power supply, you need to turn on the switch

18.
Label: contextualize involvement
Quotes:
- User: Yes.

19.
Label: consideration
Quotes:
- Designer: XP compatibility might need to be looked into later... probably need to install a virtual machine.

20.
Label: reiterate need for user manual
Quotes:
- User: Need the user manual for this software

21.
Label: designer 1 responds to user request
Quotes:
- Designer: Hmm... We will probably prioritize completing the electrical section first, then magnetism, and then other parts.
- Designer: I'll upload one now... Are you a teacher?

22.
Label: user 4234 acknowledges progress
Quotes:
- User: It's already starting to take shape [Emoji]

23.
Label: refining design features
Quotes:
- Designer: From the next update, dry batteries will no longer be ideal components (you can remove the internal resistance to simulate).

24.
Label: acknowledging development time
Quotes:
- Designer: Mechanics will have to wait until electromagnetism is figured out; it will take some more time

25.
Label: acknowledges feature
Quotes:
- User: Oh, this is nice

26.
Label: sets expectations
Quotes:
- Designer: This version of the circuit diagram is for testing only... You can drag the Editor because the auto-layout algorithm is not very stable and may produce some odd results
- Designer: This is quite complex, so it will take more time... Hopefully, it can be released this week
- Designer: Of course, manual editing will also be allowed, but it might be a bit later
- Designer: The update is quite large...

27.
Label: ask about user needs
Quotes:
- Designer: Consulting the teachers in the group: which type of intersection is used in the circuit diagrams in the current textbooks?
[Image]

28.
Label: explaining use case scenario
Quotes:
- User: If there could be an export function, or the ability to save or import experiments, it would be convenient. We could set up the parameters in the office and directly import them in class.

29.
Label: plan timeline
Quotes:
- Designer: The Android version is expected to update tonight

30.
Label: providing context for software use
Quotes:
- Designer: Last time I tried it in middle school, there's a trick where you click the link button in the top right, and when the browser pops up, it's no longer full screen... = =

31.
Label: user 4232 proposes solution
Quotes:
- User: Win7 should be fine.

32.
Label: future update
Quotes:
- Designer: Mechanics will have to wait until electromagnetism is figured out; it will take some more time
- Designer: Of course, manual editing will also be allowed, but it might be a bit later
===
Here are the definitions for each code with clear and generalizable criteria:

---
Definitions for each code:

1.
Criteria: Designer shares information about upcoming updates or releases.
Label: Providing updates

2.
Criteria: User expresses a need or request for a specific feature.
Label: Feature request

3.
Criteria: User confirms their identity or role (e.g., teacher).
Label: Identity confirmation

4.
Criteria: Designer explains or clarifies technical aspects of the software.
Label: Technical explanation

5.
Criteria: The development process is described as iterative or incremental.
Label: Iterative development

6.
Criteria: Designer acknowledges or expresses gratitude for user support.
Label: Acknowledging support

7.
Criteria: User mentions institutional support or involvement.
Label: Institutional support

8.
Criteria: Designer advocates for robust or high-quality features.
Label: Advocating for quality

9.
Criteria: User provides context about their teaching career or experience.
Label: Teaching background

10.
Criteria: Designer confirms or announces upcoming features or updates.
Label: Feature confirmation

11.
Criteria: User agrees with or endorses a previous suggestion or idea.
Label: Agreement

12.
Criteria: Designer considers or responds to user requests or feedback.
Label: Considering feedback

13.
Criteria: User seeks confirmation about the viability of a solution or idea.
Label: Seeking confirmation

14.
Criteria: Designer prioritizes the release of a specific version (e.g., PC version).
Label: Prioritizing releases

15.
Criteria: Designer uploads or shares an image.
Label: Sharing images

16.
Criteria: Designer considers using a virtual machine as a solution.
Label: Virtual machine solution

17.
Criteria: Designer provides guidance or support for user experience.
Label: User support

18.
Criteria: User provides context about their involvement or situation.
Label: Contextualizing involvement

19.
Criteria: Designer expresses consideration or thoughtfulness about an issue.
Label: Consideration

20.
Criteria: User requests or needs a user manual.
Label: Requesting documentation

21.
Criteria: Designer responds to user requests or feedback.
Label: Responding to feedback

22.
Criteria: User acknowledges or appreciates progress or development.
Label: Acknowledging progress

23.
Criteria: Designer refines or improves design features.
Label: Design refinement

24.
Criteria: Designer acknowledges the time required for development.
Label: Development time

25.
Criteria: User acknowledges or appreciates a feature.
Label: Feature appreciation

26.
Criteria: Designer sets expectations or provides guidance about the software.
Label: Setting expectations

27.
Criteria: Designer asks about user needs or requirements.
Label: User needs assessment

28.
Criteria: User explains a use case scenario or idea.
Label: Use case scenario

29.
Criteria: Designer plans or announces a timeline for updates or releases.
Label: Planning timeline

30.
Criteria: Designer provides context about software use or functionality.
Label: Software context

31.
Criteria: User proposes a solution or idea.
Label: Solution proposal

32.
Criteria: Designer mentions or plans for future updates or features.
Label: Future development