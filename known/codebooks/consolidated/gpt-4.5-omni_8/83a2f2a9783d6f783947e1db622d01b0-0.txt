You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (17 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
17. 
Concepts: {Repeat the input 17}
Relationship: {What is logical relationship between concepts in code 17, or N/A if not applicable}
Criteria: {Who did what, and how for code 17}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: share development plans, maintain development transparency
- Designers share the development plans and access information with the community.
- Designers provide detailed information about development processes, challenges, and progress to keep the community informed.

2.
Concepts: outlining development timeline, prioritizing development tasks
- A team member outlines the sequence of tasks or features to be developed and describes the timeline for feature development.
- Statements indicate the order in which tasks or features will be developed, and designers discuss the prioritization and project management of different features.

3.
Concepts: confirming compatibility, discussing system compatibility
- Designers confirm and assure software compatibility with systems, specifying requirements.
- Developers or users discuss and inquire about software compatibility with platforms, suggest checking system compatibility, and provide solutions for compatibility issues.

4.
Concepts: cultivating community participation, encouraging community participation
- A designer encourages community participation and interaction, offering to involve the community in the design process.
- Designers encourage and invite community members to participate or provide feedback in the design and development process.

5.
Concepts: compliment 3d effect, praising software
- Users compliment the software's 3D effect.
- Users provide reviews and express appreciation for the software's features and performance, expressing enthusiasm or compliments.

6.
Concepts: agreement, confirmation/agreement of collaboration
- Users or developers express agreement with each other.
- A designer confirms or agrees to collaborate with the community.

7.
Concepts: confirming understanding, acknowledging understanding
- Designers or users confirm statements, plans, or visual elements, and confirm their understanding of a message or instruction.
- Users affirm or agree with points, design ideas, or suggestions made by others, and acknowledge understanding or agreement.

8.
Concepts: sharing user experience, sharing personal anecdotes
- Users share their experiences and positive feedback about student engagement and classroom success using the software.
- A user shares a story or anecdote, providing personal anecdotes or past experiences related to the software or educational setting.

9.
Concepts: mentioning school initiatives, providing educational context
- Users mention school initiatives or efforts to build an information-based environment.
- Users provide context about their educational environment or institution, including information about school resources.

10.
Concepts: confirming professional identity, sharing professional background
- Users confirm their identity or professional role, including their background or role as teachers.
- Users share their professional background to establish credibility and context, providing information about their teaching experience and grade level.

11.
Concepts: resource request, requesting documentation
- Users request resources such as download links and manuals.
- Users request a user manual and justify their need for it, expressing a need for documentation or instructional materials.

12.
Concepts: encouraging open communication, encouraging group discussion
- Designers encourage open communication and user interaction.
- Encouraging users to discuss, ask questions, or report issues, with designers encouraging group discussions.

13.
Concepts: ask design questions, seeking design clarification
- Users and designers ask questions to gather information or clarify details.
- Designers seek clarification on design details and ask follow-up questions.

14.
Concepts: explaining feature functionality, providing teaching instructions
- Designers guide users on feature use and explain the functionality and technical details of features.
- Designers provide instructions or explanations about using the software and updates to help users understand and use it effectively.

15.
Concepts: suggesting feature prioritization, justifying feature suggestions
- Users express preferences and suggest prioritizing certain features.
- Users provide further suggestions and specific feedback with justifications, explaining reasons for suggesting new features or improvements.

16.
Concepts: proposing design solutions, offering alternative solutions
- Designers propose new design ideas or solutions to issues.
- Designers express openness to alternative solutions or approaches, and users or designers offer or seek alternative solutions.

17.
Concepts: seeking clarification, clarifying information
- Asking follow-up questions to clarify user issues and seeking information or expressing uncertainty.
- Elaborating on topics and providing additional details in response to requests for clarification.
===
---
Definitions for each code (17 in total):
1.
Concepts: share development plans, maintain development transparency
Relationship: Sharing plans and maintaining transparency are both about providing information to the community.
Criteria: Designers share development plans and provide detailed information about processes, challenges, and progress to keep the community informed.
Phrase: Maintaining development transparency

2.
Concepts: outlining development timeline, prioritizing development tasks
Relationship: Outlining timelines and prioritizing tasks are both aspects of project management.
Criteria: A team member outlines the sequence and timeline of tasks or features to be developed, discussing prioritization and project management.
Phrase: Prioritizing development tasks

3.
Concepts: confirming compatibility, discussing system compatibility
Relationship: Confirming and discussing compatibility both involve ensuring software works with various systems.
Criteria: Designers confirm software compatibility with systems and discuss requirements, while developers or users inquire about and suggest solutions for compatibility issues.
Phrase: Discussing system compatibility

4.
Concepts: cultivating community participation, encouraging community participation
Relationship: Cultivating and encouraging participation both aim to involve the community in the process.
Criteria: Designers encourage and invite community members to participate or provide feedback in the design and development process.
Phrase: Encouraging community participation

5.
Concepts: compliment 3d effect, praising software
Relationship: Complimenting a specific feature and praising the software both express positive feedback.
Criteria: Users compliment the software's 3D effect and express appreciation for its features and performance.
Phrase: Praising software

6.
Concepts: agreement, confirmation/agreement of collaboration
Relationship: Agreement and confirmation of collaboration both involve mutual consent.
Criteria: Users or developers express agreement with each other, and a designer confirms or agrees to collaborate with the community.
Phrase: Confirming collaboration

7.
Concepts: confirming understanding, acknowledging understanding
Relationship: Confirming and acknowledging understanding both involve recognizing comprehension.
Criteria: Designers or users confirm their understanding of statements, plans, or visual elements, and acknowledge agreement or comprehension.
Phrase: Acknowledging understanding

8.
Concepts: sharing user experience, sharing personal anecdotes
Relationship: Sharing experiences and anecdotes both involve personal stories.
Criteria: Users share their experiences and positive feedback about using the software, providing personal anecdotes related to educational settings.
Phrase: Sharing user experiences

9.
Concepts: mentioning school initiatives, providing educational context
Relationship: Mentioning initiatives and providing context both give background information.
Criteria: Users mention school initiatives and provide context about their educational environment or institution.
Phrase: Providing educational context

10.
Concepts: confirming professional identity, sharing professional background
Relationship: Confirming identity and sharing background both establish credibility.
Criteria: Users confirm their professional role and share their background to establish credibility and context.
Phrase: Sharing professional background

11.
Concepts: resource request, requesting documentation
Relationship: Requesting resources and documentation both involve asking for materials.
Criteria: Users request resources such as download links and manuals, justifying their need for documentation or instructional materials.
Phrase: Requesting documentation

12.
Concepts: encouraging open communication, encouraging group discussion
Relationship: Encouraging communication and discussion both promote interaction.
Criteria: Designers encourage open communication and group discussions, inviting users to discuss, ask questions, or report issues.
Phrase: Encouraging open communication

13.
Concepts: ask design questions, seeking design clarification
Relationship: Asking questions and seeking clarification both aim to gather information.
Criteria: Users and designers ask questions to gather information or clarify design details.
Phrase: Seeking design clarification

14.
Concepts: explaining feature functionality, providing teaching instructions
Relationship: Explaining functionality and providing instructions both involve guiding users.
Criteria: Designers guide users on feature use and explain functionality and technical details to help users understand and use the software effectively.
Phrase: Explaining feature functionality

15.
Concepts: suggesting feature prioritization, justifying feature suggestions
Relationship: Suggesting and justifying features both involve providing feedback.
Criteria: Users suggest prioritizing certain features and provide justifications for their suggestions.
Phrase: Suggesting feature prioritization

16.
Concepts: proposing design solutions, offering alternative solutions
Relationship: Proposing and offering solutions both involve problem-solving.
Criteria: Designers propose new design ideas or solutions and express openness to alternative approaches, with users or designers offering or seeking alternative solutions.
Phrase: Proposing design solutions

17.
Concepts: seeking clarification, clarifying information
Relationship: Seeking and providing clarification both involve ensuring understanding.
Criteria: Users or designers ask follow-up questions to clarify issues and provide additional details in response to requests for clarification.
Phrase: Clarifying information
---