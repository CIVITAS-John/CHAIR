You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (34 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
34. 
Concepts: {Repeat the input 34}
Relationship: {What is logical relationship between concepts in code 34, or N/A if not applicable}
Criteria: {Who did what, and how for code 34}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: design adaptation, adjusting features and components
- Designers discuss the need to adapt the design to support certain features.
- Designers suggest and describe adjustments to features and components.

2.
Concepts: explaining design intentions, explaining design philosophy, providing design rationale
- Designers explain the plans, rationale, and focus areas behind a feature or app design.
- A designer explains design principles or considerations and the underlying philosophy guiding the development.
- Users or designers provide rationale for certain actions or features, explaining the design choices.

3.
Concepts: open to alternatives, offering and seeking alternative solutions
- Designers express openness to alternative solutions or approaches based on user feedback.
- Users and designers share, suggest, and seek alternative solutions.

4.
Concepts: seek consensus, agreeing on design ideas
- A designer seeks consensus or agreement on a decision.
- Users and designers express agreement and acknowledge understanding of design ideas.

5.
Concepts: sharing usability workarounds, collaboratively solving problems
- Users and designers share workarounds for usability issues.
- Instances where users and designers collaboratively address issues or improve the software.

6.
Concepts: engaging in q&a, asking and answering design questions
- Users and designers respond to questions or provide feedback.
- Designers ask and users answer questions related to design support.

7.
Concepts: inquiring and clarifying problems, troubleshooting and technical inquiries
- Designers inquire about user problems and seek or provide clarification.
- Designers and users ask and address technical questions and issues.

8.
Concepts: reassuring users, confirming future feature implementations
- Designers reassure users about the progress or completion of features and express gratitude or encouragement.
- Designers confirm and promise future feature implementations.

9.
Concepts: discussing update processes, explaining delays and timelines
- A designer discusses the process and timeline for software updates and their release status.
- Designers explain delays in updates or feature releases and provide timelines for the release.

10.
Concepts: notifying about new versions, providing product updates
- Designers provide information and notify users about new releases or updates.
- Designers inform users about updates or changes to features, technical changes, and new additions to the product.

11.
Concepts: planning feature development, discussing feature complexity
- Designers discuss the development or creation of new features.
- Designers discuss the complexity and timeline for developing a feature.

12.
Concepts: research and development, describing ongoing efforts
- Discussing research and development activities.
- A person describes current research or efforts being undertaken, mentioning ongoing research related to the platform.

13.
Concepts: promise future feedback, promising future consultation
- Promises to invite feedback from the group in the future.
- Promises to gather opinions before starting new work and announces plans to consult the community in the future.

14.
Concepts: seeking and giving confirmation, acknowledging and confirming information, affirming and confirming understanding
- Designers confirm statements and seek confirmation from users.
- Users and designers acknowledge receipt and confirm information.
- Users and designers affirm points, confirm understanding, and agree with statements.

15.
Concepts: expressing satisfaction, providing positive feedback
- Users express positive feedback and satisfaction with the software.
- Users provide positive feedback on features and overall software.

16.
Concepts: providing community support, acknowledging community support
- Community members respond to each other with acknowledgment and support.
- Designers appreciate and acknowledge the support and encouragement from the community.

17.
Concepts: identity sharing, introducing teacher identity
- Sharing personal teaching experience upon request.
- Users introduce and discuss their teaching experience and roles.

18.
Concepts: personal anecdote, sharing personal stories
- Users share personal anecdotes related to the software or its use.
- Users share personal stories and past incidents related to the topic.

19.
Concepts: contextualizing questions, providing community context, providing contextual responses
- Users provide context related to questions or concerns.
- Users provide context about their environment and the need for the community.
- Users provide context for their responses and explain their interest.

20.
Concepts: identifying roles, confirming professional identity
- Instances where users or designers identify their roles or expertise.
- Users and designers confirm identities and professional roles.

21.
Concepts: seeking context, inquiring about classroom setup
- Designers seek and gather context about users' teaching environments and internet access.
- Designers inquire about the availability of internet and other classroom conditions.

22.
Concepts: providing version information, clarifying update details
- A person provides information about the version of a product that has been uploaded or shared.
- A person clarifies which version of a product is being referred to and which version of the software is being discussed.

23.
Concepts: analyze problem, confirming system compatibility
- A designer analyzes and discusses the compatibility of the system.
- A designer or user discusses the compatibility of the system with different operating systems and confirms it.

24.
Concepts: cross-platform usage, discussing platform compatibility
- Discussing the usage of the software across different platforms.
- Community members discuss compatibility of the software with different systems and inquire about it.

25.
Concepts: discussing context of use, discussing classroom application
- Discussing how the software is used in different contexts and its usability.
- Users discuss the practical application of the software in classrooms.

26.
Concepts: inquire about download process, clarifying platform questions
- A user inquires about the process for downloading the platform.
- A user asks questions about the platform, including download locations and update schedules, seeking clarification.

27.
Concepts: technical question, inquiring about software access and usage
- Asking technical questions about the software.
- Users ask questions to gain knowledge or resources related to the software, including access and usage.

28.
Concepts: elaborating on questions, encouraging detailed elaboration
- Users provide additional details and specific information in conversations.
- Users and designers elaborate on suggestions and encourage detailed feedback.

29.
Concepts: planning for feedback, acknowledging and implementing feedback
- Reacting to user feedback and planning updates, including iterative feedback collection.
- Designers acknowledge feedback and discuss implementation plans.

30.
Concepts: improvement promise, committing to product improvement
- Promising to improve based on user feedback.
- Designers discuss improvements or changes to the software and commit to making them based on feedback.

31.
Concepts: suggestion solicitation, providing user input, gathering user feedback
- Soliciting suggestions and requirements from users.
- Requesting user input or feedback, with users providing specific feedback and justifications.
- Gathering feedback from users about their experiences or issues and requesting detailed requirements.

32.
Concepts: prioritizing user feedback, managing and prioritizing development
- Designers align features or development plans with user needs and feedback, prioritizing it.
- Designers discuss project management and prioritization of tasks, including user input on feature prioritization.

33.
Concepts: catering to user needs, addressing usability
- Designers emphasize the importance of catering to user needs in feature development.
- Considering usability aspects and preferences, addressing the design considerations for ease of use.

34.
Concepts: understanding user needs, highlighting user needs
- Attempts to understand the user's needs or problems.
- A user indicates potential needs or requirements and highlights specific usability needs or suggestions.
===
---
Definitions for each code (34 in total):
1.
Concepts: design adaptation, adjusting features and components
Relationship: Designers discuss and suggest adjustments to support certain features.
Criteria: Designers discuss the need to adapt the design and suggest adjustments to features and components.
Phrase: Discussing design adaptation

2.
Concepts: explaining design intentions, explaining design philosophy, providing design rationale
Relationship: Designers explain the plans, principles, and rationale behind design choices.
Criteria: Designers explain the plans, rationale, principles, and philosophy guiding the design.
Phrase: Explaining design intentions

3.
Concepts: open to alternatives, offering and seeking alternative solutions
Relationship: Designers and users express openness and share alternative solutions.
Criteria: Designers and users express openness to alternatives and share or seek alternative solutions.
Phrase: Offering and seeking alternatives

4.
Concepts: seek consensus, agreeing on design ideas
Relationship: Designers and users seek and express agreement on design decisions.
Criteria: Designers and users seek consensus and express agreement on design ideas.
Phrase: Seeking consensus on design ideas

5.
Concepts: sharing usability workarounds, collaboratively solving problems
Relationship: Users and designers share workarounds and collaboratively address issues.
Criteria: Users and designers share usability workarounds and collaboratively solve problems.
Phrase: Collaboratively solving usability issues

6.
Concepts: engaging in q&a, asking and answering design questions
Relationship: Users and designers ask and answer questions related to design.
Criteria: Users and designers engage in Q&A, asking and answering design-related questions.
Phrase: Engaging in design Q&A

7.
Concepts: inquiring and clarifying problems, troubleshooting and technical inquiries
Relationship: Designers and users inquire about and clarify technical problems.
Criteria: Designers and users inquire about problems and address technical questions and issues.
Phrase: Troubleshooting and clarifying problems

8.
Concepts: reassuring users, confirming future feature implementations
Relationship: Designers reassure users and confirm future feature implementations.
Criteria: Designers reassure users about progress and confirm future feature implementations.
Phrase: Reassuring users about future features

9.
Concepts: discussing update processes, explaining delays and timelines
Relationship: Designers discuss update processes and explain delays and timelines.
Criteria: Designers discuss the update process and explain delays and timelines for releases.
Phrase: Discussing update processes and timelines

10.
Concepts: notifying about new versions, providing product updates
Relationship: Designers notify users about new versions and provide product updates.
Criteria: Designers notify users about new releases and provide updates on features and changes.
Phrase: Notifying about new versions and updates

11.
Concepts: planning feature development, discussing feature complexity
Relationship: Designers discuss planning and complexity of feature development.
Criteria: Designers discuss the planning and complexity involved in developing new features.
Phrase: Discussing feature development planning

12.
Concepts: research and development, describing ongoing efforts
Relationship: Discussing ongoing research and development activities.
Criteria: Discussing current research and development efforts related to the platform.
Phrase: Describing ongoing research and development

13.
Concepts: promise future feedback, promising future consultation
Relationship: Promises to gather feedback and consult the community in the future.
Criteria: Promises to invite future feedback and consult the community before starting new work.
Phrase: Promising future feedback and consultation

14.
Concepts: seeking and giving confirmation, acknowledging and confirming information, affirming and confirming understanding
Relationship: Designers and users seek, give, and confirm information and understanding.
Criteria: Designers and users seek confirmation, acknowledge information, and affirm understanding.
Phrase: Confirming information and understanding

15.
Concepts: expressing satisfaction, providing positive feedback
Relationship: Users express satisfaction and provide positive feedback.
Criteria: Users express satisfaction and provide positive feedback on the software.
Phrase: Expressing satisfaction with the software

16.
Concepts: providing community support, acknowledging community support
Relationship: Community members and designers provide and acknowledge support.
Criteria: Community members respond with support, and designers acknowledge community support.
Phrase: Providing and acknowledging community support

17.
Concepts: identity sharing, introducing teacher identity
Relationship: Users share and introduce their teaching experiences and roles.
Criteria: Users share personal teaching experiences and introduce their roles.
Phrase: Sharing teaching identity

18.
Concepts: personal anecdote, sharing personal stories
Relationship: Users share personal anecdotes and stories related to the software.
Criteria: Users share personal anecdotes and stories related to the software or its use.
Phrase: Sharing personal anecdotes

19.
Concepts: contextualizing questions, providing community context, providing contextual responses
Relationship: Users provide context for questions, concerns, and responses.
Criteria: Users provide context related to questions, concerns, and responses within the community.
Phrase: Providing contextual information

20.
Concepts: identifying roles, confirming professional identity
Relationship: Users and designers identify and confirm their professional roles.
Criteria: Users and designers identify their roles and confirm their professional identities.
Phrase: Identifying and confirming roles

21.
Concepts: seeking context, inquiring about classroom setup
Relationship: Designers seek context about users' teaching environments.
Criteria: Designers inquire about users' classroom setups and internet access.
Phrase: Seeking classroom context

22.
Concepts: providing version information, clarifying update details
Relationship: Providing and clarifying information about product versions.
Criteria: Providing information about product versions and clarifying update details.
Phrase: Providing and clarifying version information

23.
Concepts: analyze problem, confirming system compatibility
Relationship: Analyzing and confirming system compatibility.
Criteria: Analyzing and discussing system compatibility with different operating systems.
Phrase: Analyzing system compatibility

24.
Concepts: cross-platform usage, discussing platform compatibility
Relationship: Discussing software usage and compatibility across platforms.
Criteria: Discussing the usage and compatibility of the software across different platforms.
Phrase: Discussing cross-platform compatibility

25.
Concepts: discussing context of use, discussing classroom application
Relationship: Discussing the software's usability and application in classrooms.
Criteria: Discussing how the software is used in different contexts and its classroom application.
Phrase: Discussing classroom application

26.
Concepts: inquire about download process, clarifying platform questions
Relationship: Inquiring about and clarifying the download process and platform questions.
Criteria: Users inquire about the download process and ask questions about the platform.
Phrase: Inquiring about download process

27.
Concepts: technical question, inquiring about software access and usage
Relationship: Asking technical questions about software access and usage.
Criteria: Users ask technical questions to gain knowledge about software access and usage.
Phrase: Inquiring about software access and usage

28.
Concepts: elaborating on questions, encouraging detailed elaboration
Relationship: Providing and encouraging detailed elaboration on questions and suggestions.
Criteria: Users and designers provide additional details and encourage detailed feedback.
Phrase: Encouraging detailed elaboration

29.
Concepts: planning for feedback, acknowledging and implementing feedback
Relationship: Reacting to and planning updates based on user feedback.
Criteria: Designers acknowledge feedback and discuss plans for implementation.
Phrase: Planning and implementing feedback

30.
Concepts: improvement promise, committing to product improvement
Relationship: Promising and committing to product improvements based on feedback.
Criteria: Designers promise improvements and commit to making changes based on feedback.
Phrase: Committing to product improvement

31.
Concepts: suggestion solicitation, providing user input, gathering user feedback
Relationship: Soliciting, providing, and gathering user feedback and input.
Criteria: Soliciting suggestions, requesting user input, and gathering feedback from users.
Phrase: Gathering user feedback

32.
Concepts: prioritizing user feedback, managing and prioritizing development
Relationship: Aligning development plans with user feedback and managing priorities.
Criteria: Designers prioritize user feedback and discuss project management and task prioritization.
Phrase: Prioritizing user feedback

33.
Concepts: catering to user needs, addressing usability
Relationship: Emphasizing and addressing user needs and usability in design.
Criteria: Designers cater to user needs and address usability considerations in feature development.
Phrase: Addressing user needs and usability

34.
Concepts: understanding user needs, highlighting user needs
Relationship: Understanding and highlighting user needs and requirements.
Criteria: Attempts to understand and highlight user needs and specific usability requirements.
Phrase: Understanding and highlighting user needs
---