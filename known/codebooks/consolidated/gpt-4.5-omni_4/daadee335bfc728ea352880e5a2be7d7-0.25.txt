You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (19 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
19. 
Concepts: {Repeat the input 19}
Relationship: {What is logical relationship between concepts in code 19, or N/A if not applicable}
Criteria: {Who did what, and how for code 19}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: apologize for disturbance, apologizing for inconvenience
- Designers apologize for any inconvenience and express politeness.
- Designers acknowledge and apologize for any inconvenience, timing, or interruption caused.

2.
Concepts: recognizing designer effort, express gratitude and acknowledgment
- Users acknowledge and express appreciation for the efforts of designers or other users.
- Users or designers express gratitude and acknowledge contributions.

3.
Concepts: use non verbal communication, using emojis for communication
- Use of emojis or other non-verbal forms of communication by users.
- Users convey emotions and communicate feelings or reactions using expressive language or emojis.

4.
Concepts: sharing user experiences, describing classroom success
- Users share their teaching experiences and the impact of the software on their teaching or learning.
- Users share their positive classroom experiences and describe successful outcomes using the software.

5.
Concepts: technical support request, requesting usage support
- Asking for help or instructions on how to use a specific technology or feature.
- Users seek help or guidance on how to perform tasks or use the product, requesting support.

6.
Concepts: detailing version updates, providing detailed update overviews
- Designers provide detailed notes on the features and updates of a specific version.
- Designers list updates, new features, and bug fixes, providing detailed overviews.

7.
Concepts: announcing new features, announcing software releases
- Designers announce upcoming updates and new features.
- Designers announce the release of new features, software updates, or versions.

8.
Concepts: announcing community updates, communicating with the community
- Designers provide updates or announcements about the software to the community.
- Designers communicate updates and announcements to the community.

9.
Concepts: providing status updates, communicating release progress
- Designers provide updates on the status of ongoing work or research.
- Designers communicate ongoing work, future development plans, and the progress of updates.

10.
Concepts: share development plans, announcing development plans
- Designers share development plans and updates with the community.
- Designers share information about upcoming features or updates and announce plans for future developments.

11.
Concepts: outlining future plans, discussing future updates
- Designers share information about future development plans and priorities.
- Designers discuss plans for future updates, potential developments, and design considerations.

12.
Concepts: promising future enhancements, confirming future feature implementation
- Designers promise to implement or perfect a feature in the future.
- Designers confirm that a feature update or new version will be released soon and that requested features will be implemented.

13.
Concepts: sharing update timelines, providing release timelines
- Designers provide a schedule and share the timeline for upcoming updates or releases.
- Designers set expectations and provide timelines for the release of features or versions.

14.
Concepts: explaining feature details, explaining feature functionality
- Designers provide detailed information about a simulation or feature's functionality.
- Designers provide examples to illustrate and explain the functionality of a feature.

15.
Concepts: interface layout decisions, discussing software usability
- Users and designers discuss decisions regarding the layout of the software interface.
- Designers discuss the practical usability and visual elements of the software.

16.
Concepts: explaining suggestion reasons, user input with justifications
- Users provide reasons for suggesting a feature or function.
- A user provides input, feedback, or suggestions with justifications.

17.
Concepts: proposing new features, feature request invitation
- Users and designers make suggestions for new features or design changes.
- Designers invite users to suggest new features or improvements.

18.
Concepts: providing user feedback, seeking user feedback
- Instances where users provide feedback or ask questions that influence the design process.
- Designers encourage users to provide feedback and suggestions, soliciting input on potential features or updates.

19.
Concepts: ask about user needs, inquiring about user requests
- Designers ask the community about their needs or preferences.
- Designers express understanding and ask for more detailed user needs or requests.
===
---
Definitions for each code (19 in total):
1.
Concepts: apologize for disturbance, apologizing for inconvenience
Relationship: Both concepts involve expressing regret for causing inconvenience.
Criteria: Designers acknowledge and apologize for any inconvenience, timing, or interruption caused.
Phrase: Apologizing for inconvenience

2.
Concepts: recognizing designer effort, express gratitude and acknowledgment
Relationship: Both concepts involve expressing appreciation for efforts or contributions.
Criteria: Users acknowledge and express appreciation for the efforts of designers or other users.
Phrase: Expressing gratitude and acknowledgment

3.
Concepts: use non verbal communication, using emojis for communication
Relationship: Both concepts involve using non-verbal methods to communicate emotions or reactions.
Criteria: Users convey emotions and communicate feelings or reactions using expressive language or emojis.
Phrase: Using non-verbal communication

4.
Concepts: sharing user experiences, describing classroom success
Relationship: Both concepts involve users sharing their experiences and successes with the software.
Criteria: Users share their teaching experiences and describe successful outcomes using the software.
Phrase: Sharing user experiences

5.
Concepts: technical support request, requesting usage support
Relationship: Both concepts involve seeking help or guidance on using the product.
Criteria: Users seek help or guidance on how to perform tasks or use the product, requesting support.
Phrase: Requesting usage support

6.
Concepts: detailing version updates, providing detailed update overviews
Relationship: Both concepts involve providing detailed information about software updates.
Criteria: Designers list updates, new features, and bug fixes, providing detailed overviews.
Phrase: Providing detailed update overviews

7.
Concepts: announcing new features, announcing software releases
Relationship: Both concepts involve making announcements about new software features or versions.
Criteria: Designers announce the release of new features, software updates, or versions.
Phrase: Announcing new features

8.
Concepts: announcing community updates, communicating with the community
Relationship: Both concepts involve communicating updates or announcements to the community.
Criteria: Designers communicate updates and announcements to the community.
Phrase: Announcing community updates

9.
Concepts: providing status updates, communicating release progress
Relationship: Both concepts involve providing information about the progress of ongoing work or updates.
Criteria: Designers communicate ongoing work, future development plans, and the progress of updates.
Phrase: Providing status updates

10.
Concepts: share development plans, announcing development plans
Relationship: Both concepts involve sharing information about future development plans.
Criteria: Designers share information about upcoming features or updates and announce plans for future developments.
Phrase: Announcing development plans

11.
Concepts: outlining future plans, discussing future updates
Relationship: Both concepts involve discussing plans for future updates and developments.
Criteria: Designers discuss plans for future updates, potential developments, and design considerations.
Phrase: Discussing future updates

12.
Concepts: promising future enhancements, confirming future feature implementation
Relationship: Both concepts involve committing to future feature updates or implementations.
Criteria: Designers confirm that a feature update or new version will be released soon and that requested features will be implemented.
Phrase: Confirming future feature implementation

13.
Concepts: sharing update timelines, providing release timelines
Relationship: Both concepts involve providing schedules or timelines for upcoming updates or releases.
Criteria: Designers set expectations and provide timelines for the release of features or versions.
Phrase: Providing release timelines

14.
Concepts: explaining feature details, explaining feature functionality
Relationship: Both concepts involve providing detailed explanations about a feature's functionality.
Criteria: Designers provide examples to illustrate and explain the functionality of a feature.
Phrase: Explaining feature functionality

15.
Concepts: interface layout decisions, discussing software usability
Relationship: Both concepts involve discussing the usability and design of the software interface.
Criteria: Designers discuss the practical usability and visual elements of the software.
Phrase: Discussing software usability

16.
Concepts: explaining suggestion reasons, user input with justifications
Relationship: Both concepts involve providing reasons or justifications for suggestions or feedback.
Criteria: A user provides input, feedback, or suggestions with justifications.
Phrase: Providing user input with justifications

17.
Concepts: proposing new features, feature request invitation
Relationship: Both concepts involve suggesting or inviting suggestions for new features.
Criteria: Designers invite users to suggest new features or improvements.
Phrase: Inviting feature requests

18.
Concepts: providing user feedback, seeking user feedback
Relationship: Both concepts involve the exchange of feedback between users and designers.
Criteria: Designers encourage users to provide feedback and suggestions, soliciting input on potential features or updates.
Phrase: Seeking user feedback

19.
Concepts: ask about user needs, inquiring about user requests
Relationship: Both concepts involve asking users about their needs or preferences.
Criteria: Designers express understanding and ask for more detailed user needs or requests.
Phrase: Inquiring about user needs
---