You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: fostering community, building community trust
- Designers foster a sense of community and build relationships.
- Designers build trust and rapport with the community.

2.
Concepts: exchanging greetings, welcoming users
- Designer exchanges greetings and responds to social cues.
- A designer welcomes users and acknowledges them in a friendly manner, demonstrating courtesy or politeness.

3.
Concepts: acknowledge statement, acknowledge communication timing
- A designer acknowledges or agrees with a previous statement.
- A designer acknowledges the timing of their communication.

4.
Concepts: assessing user needs, addressing user needs
- A designer assesses and identifies user needs.
- A designer addresses and prioritizes meeting user needs.

5.
Concepts: offering support, support user learning
- Designers offer or provide support to users.
- A designer provides guidance or support for user learning or experience.

6.
Concepts: informing design changes, considering onboarding feedback
- Designers reflect on user input, consider user experience, and infer design changes based on feedback.
- Designers consider user feedback for onboarding, tutorials, or user experience.

7.
Concepts: specifying platforms and clarifying software versions, identifying and confirming technical compatibility
- A designer specifies platforms or clarifies software versions.
- A designer identifies compatible systems, confirms software compatibility, or addresses compatibility issues.

8.
Concepts: considering practical constraints, considering technical requirements and feasibility
- Designers consider practical constraints or limitations during development.
- Designers consider technical requirements and assess technical feasibility.

9.
Concepts: resolving concerns, addressing user concerns
- Designers resolve concerns and acknowledge potential issues.
- Designers address user concerns and warn about potential issues.

10.
Concepts: reconfirming details, confirming features and clarifying testing status
- Designers reconfirm details and seek confirmation and validation.
- Designer confirms or clarifies the availability of features or testing status.

11.
Concepts: sharing expertise through professional experience
- Users share their expertise or demonstrate knowledge in a specific area by sharing their professional experience or background.
- Users contribute to community knowledge and emphasize the collaborative nature of the community.

12.
Concepts: seeking and encouraging feedback
- Designer seeks and encourages open feedback from users.
- Designers prompt users to provide feedback, suggestions, or input.
- Designers seek user input, consider user opinions, and gather user feedback.
===
Here are the definitions for each code:

---
1.
Concepts: fostering community, building community trust
Relationship: Fostering community is a means to build community trust.
Criteria: Designers take actions to create a sense of community, which in turn builds trust with the community.
Phrase: Foster community trust.

2.
Concepts: exchanging greetings, welcoming users
Relationship: Exchanging greetings is a way to welcome users.
Criteria: Designers engage in friendly interactions with users, making them feel welcome.
Phrase: Welcome users.

3.
Concepts: acknowledge statement, acknowledge communication timing
Relationship: Acknowledging a statement is closely related to acknowledging the timing of communication.
Criteria: Designers respond to users by acknowledging their statements and the timing of their communication.
Phrase: Acknowledge user input.

4.
Concepts: assessing user needs, addressing user needs
Relationship: Assessing user needs is a prerequisite to addressing them.
Criteria: Designers identify user needs and take actions to meet those needs.
Phrase: Address user needs.

5.
Concepts: offering support, support user learning
Relationship: Offering support is a means to support user learning.
Criteria: Designers provide guidance and support to facilitate user learning and experience.
Phrase: Support user learning.

6.
Concepts: informing design changes, considering onboarding feedback
Relationship: Informing design changes is a result of considering onboarding feedback.
Criteria: Designers use user feedback to inform design changes and improve onboarding experiences.
Phrase: Inform design changes.

7.
Concepts: specifying platforms and clarifying software versions, identifying and confirming technical compatibility
Relationship: Specifying platforms and clarifying software versions is necessary to identify and confirm technical compatibility.
Criteria: Designers ensure technical compatibility by specifying platforms and software versions.
Phrase: Ensure technical compatibility.

8.
Concepts: considering practical constraints, considering technical requirements and feasibility
Relationship: Considering practical constraints is closely related to considering technical requirements and feasibility.
Criteria: Designers take into account practical constraints and technical requirements when assessing feasibility.
Phrase: Consider feasibility.

9.
Concepts: resolving concerns, addressing user concerns
Relationship: Resolving concerns is a means to address user concerns.
Criteria: Designers address user concerns by resolving issues and warning about potential problems.
Phrase: Address user concerns.

10.
Concepts: reconfirming details, confirming features and clarifying testing status
Relationship: Reconfirming details is necessary to confirm features and clarify testing status.
Criteria: Designers reconfirm details to ensure features are available and testing status is clear.
Phrase: Confirm features and testing status.

11.
Concepts: sharing expertise through professional experience
Relationship: N/A
Criteria: Users share their professional experience and expertise, contributing to community knowledge.
Phrase: Share expertise.

12.
Concepts: seeking and encouraging feedback
Relationship: Seeking feedback is a means to encourage feedback.
Criteria: Designers actively seek and encourage open feedback from users.
Phrase: Encourage feedback.