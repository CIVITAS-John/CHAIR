You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (22 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
22. 
Concepts: {Repeat the input 22}
Relationship: {What is logical relationship between concepts in code 22, or N/A if not applicable}
Criteria: {Who did what, and how for code 22}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: introduce new components, announce feature expansion
- Designers explain new features being developed and introduce new components included in updates.
- Designers highlight the extent of progress made in software updates and communicate new features.

2.
Concepts: communicate ongoing work, communicate development and visual updates
- Developers share visual updates or progress on ongoing work and communicate efforts being made.
- Designers communicated internal visual and development updates to keep stakeholders informed about the software's progress and changes.

3.
Concepts: mention ongoing research, discuss feature development
- Designers discuss current research and development efforts related to the software.
- Designers discuss various aspects of feature development and their usability in the software.

4.
Concepts: preview upcoming features, plan feature development
- Designers list and preview upcoming features and confirm the schedule for updates.
- Designers outline plans for future feature development and confirm timelines for specific features.

5.
Concepts: consider technical requirements, discuss system requirements
- Designers note considerations that may affect software compatibility and performance.
- Designers discuss necessary system requirements and provide technical information regarding compatibility.

6.
Concepts: seek efficiency, suggest simplification
- The designer expresses a desire for increased efficiency in the software's design.
- A designer offers a suggestion regarding software usage and shares thoughts on simplifying the design.

7.
Concepts: explain design philosophy, explain design rationale
- Designers explain their design goals and principles to enhance user understanding.
- Users and designers provide explanations for decisions or features based on practical considerations.

8.
Concepts: feature stability, highlight feature importance
- Designer discusses the stability of a feature once it is fully developed.
- Designers discuss features that ensure long-term stability and highlight their importance.

9.
Concepts: transparent developer discussion, ensure development transparency
- The designer engages in open discussion about technical aspects of the app's functionality.
- A designer maintains transparency about the progress of software features and provides detailed information about development processes.

10.
Concepts: share technical issues, highlight challenges of outdated technology
- User mentions a technical issue related to outdated computer systems and shares relevant information.
- Users describe the limitations of the computer system used at their school and highlight technical constraints.

11.
Concepts: user experience in educational contexts, technical and infrastructural challenges in educational settings
- User experiences and challenges in using the software within educational settings.
- Users and designers discuss challenges related to technology use in educational environments.

12.
Concepts: propose design ideas, propose software enhancements
- Users and designers discuss suggestions for improving the software's features.
- Users collect and make requests for new features or improvements to the software and suggest practical use cases.

13.
Concepts: express anticipation for updates, inquire about software updates
- Users express anticipation regarding upcoming software updates or features.
- Users ask questions regarding recent updates and inquire about the timing and status of upcoming software updates.

14.
Concepts: ensure proper operation, instruction and updates
- Designers provide instructions to ensure proper use of the software.
- Designers providing updates and instructions to help users understand and use the software effectively.

15.
Concepts: inquire about user problems, engage in troubleshooting
- Designers inquire about specific problems users face with the software and their experiences while using it.
- Users engage in troubleshooting discussions regarding software compatibility while designers analyze and diagnose issues.

16.
Concepts: establish feedback loop, integrate user feedback
- Designers collect, consider, and implement user feedback in the design process.
- Designers integrate and involve users in the design process through feedback and testing.

17.
Concepts: gather user opinions, prioritize user feedback
- Designers plan to gather user opinions before proceeding with new features and projects.
- Users and developers suggest and prioritize features based on user feedback.

18.
Concepts: seek additional context, facilitate further engagement
- Designers gather context by asking users about their teaching situation and roles.
- Designers ask users about their teaching backgrounds to foster engagement and offer support.

19.
Concepts: seek clarification through follow-up, ask follow-up questions for clarity
- Designers ask follow-up questions to clarify user needs and preferences regarding their requests.
- Designers ask follow-up questions to clarify the user's classroom situation and explain the intention behind these questions.

20.
Concepts: respond to community inquiries, respond to inquiries promptly
- Designers commit to addressing user inquiries and provide necessary support.
- Designers respond quickly to user inquiries and engage in real-time communication.

21.
Concepts: confirm designer's argument, confirm understanding in discussions
- Users confirm agreement with a designer's statement or proposal.
- Designers seek agreement from users on proposed ideas and confirm collaboration during discussions.

22.
Concepts: confirm information retrieval, acknowledge receipt of information
- Users acknowledge the availability and receipt of information regarding group resources.
- Users acknowledge receipt of information or resources shared by the designer or developer.
===
---
Definitions for each code (22 in total):

1.  
Concepts: introduce new components, announce feature expansion  
Relationship: Both concepts involve communication from designers regarding new features and updates.  
Criteria: Designers explain and announce new features being developed and included in software updates.  
Phrase: Introduce and announce new features.

2.  
Concepts: communicate ongoing work, communicate development and visual updates  
Relationship: Both concepts focus on sharing progress and updates related to ongoing development.  
Criteria: Developers and designers share visual updates and communicate ongoing work efforts to stakeholders.  
Phrase: Communicate ongoing development updates.

3.  
Concepts: mention ongoing research, discuss feature development  
Relationship: Both concepts involve discussions about current research and development efforts related to the software.  
Criteria: Designers discuss ongoing research and various aspects of feature development.  
Phrase: Discuss ongoing research and feature development.

4.  
Concepts: preview upcoming features, plan feature development  
Relationship: Both concepts involve planning and previewing future features and updates.  
Criteria: Designers list and outline plans for upcoming features and confirm timelines for updates.  
Phrase: Preview and plan upcoming features.

5.  
Concepts: consider technical requirements, discuss system requirements  
Relationship: Both concepts relate to the technical aspects that affect software performance and compatibility.  
Criteria: Designers discuss necessary system requirements and considerations affecting software compatibility.  
Phrase: Discuss technical and system requirements.

6.  
Concepts: seek efficiency, suggest simplification  
Relationship: Both concepts focus on improving software design for better usability and efficiency.  
Criteria: Designers express desires for efficiency and suggest simplifications in software design.  
Phrase: Seek efficiency and suggest simplification.

7.  
Concepts: explain design philosophy, explain design rationale  
Relationship: Both concepts involve providing explanations for design decisions to enhance understanding.  
Criteria: Designers explain their design goals and rationale to users for better comprehension.  
Phrase: Explain design philosophy and rationale.

8.  
Concepts: feature stability, highlight feature importance  
Relationship: Both concepts emphasize the significance and reliability of software features.  
Criteria: Designers discuss the stability and importance of features once fully developed.  
Phrase: Highlight feature stability and importance.

9.  
Concepts: transparent developer discussion, ensure development transparency  
Relationship: Both concepts focus on maintaining transparency in the development process.  
Criteria: Designers engage in open discussions about technical aspects and maintain transparency about development progress.  
Phrase: Ensure transparency in development discussions.

10.  
Concepts: share technical issues, highlight challenges of outdated technology  
Relationship: Both concepts involve discussing technical limitations and challenges faced by users.  
Criteria: Users share technical issues related to outdated systems and describe limitations encountered.  
Phrase: Share technical challenges and issues.

11.  
Concepts: user experience in educational contexts, technical and infrastructural challenges in educational settings  
Relationship: Both concepts relate to the challenges users face in educational environments.  
Criteria: Users and designers discuss experiences and challenges related to technology use in educational settings.  
Phrase: Discuss user experiences and challenges in education.

12.  
Concepts: propose design ideas, propose software enhancements  
Relationship: Both concepts involve suggesting improvements and new features for the software.  
Criteria: Users and designers discuss and collect suggestions for enhancing software features.  
Phrase: Propose design ideas and enhancements.

13.  
Concepts: express anticipation for updates, inquire about software updates  
Relationship: Both concepts involve users' eagerness and inquiries regarding software updates.  
Criteria: Users express anticipation and ask questions about upcoming software updates.  
Phrase: Inquire and express anticipation for updates.

14.  
Concepts: ensure proper operation, instruction and updates  
Relationship: Both concepts focus on providing guidance for effective software use.  
Criteria: Designers provide instructions and updates to ensure proper software operation.  
Phrase: Ensure proper operation and provide instructions.

15.  
Concepts: inquire about user problems, engage in troubleshooting  
Relationship: Both concepts involve addressing user issues and troubleshooting discussions.  
Criteria: Designers inquire about user problems and engage in troubleshooting discussions.  
Phrase: Engage in troubleshooting and inquiry.

16.  
Concepts: establish feedback loop, integrate user feedback  
Relationship: Both concepts focus on involving users in the design process through feedback.  
Criteria: Designers collect and integrate user feedback into the design process.  
Phrase: Establish and integrate user feedback.

17.  
Concepts: gather user opinions, prioritize user feedback  
Relationship: Both concepts involve collecting and prioritizing user input for future features.  
Criteria: Designers gather and prioritize user opinions before proceeding with new projects.  
Phrase: Gather and prioritize user feedback.

18.  
Concepts: seek additional context, facilitate further engagement  
Relationship: Both concepts involve gathering context to enhance user engagement.  
Criteria: Designers gather context by asking users about their teaching situations to foster engagement.  
Phrase: Seek context and facilitate engagement.

19.  
Concepts: seek clarification through follow-up, ask follow-up questions for clarity  
Relationship: Both concepts focus on clarifying user needs through follow-up inquiries.  
Criteria: Designers ask follow-up questions to clarify user needs and preferences.  
Phrase: Seek clarification through follow-up.

20.  
Concepts: respond to community inquiries, respond to inquiries promptly  
Relationship: Both concepts emphasize timely responses to user inquiries.  
Criteria: Designers commit to addressing and responding quickly to user inquiries.  
Phrase: Respond promptly to community inquiries.

21.  
Concepts: confirm designer's argument, confirm understanding in discussions  
Relationship: Both concepts involve seeking agreement and confirming understanding during discussions.  
Criteria: Users and designers confirm agreement and understanding of proposed ideas.  
Phrase: Confirm understanding and agreement.

22.  
Concepts: confirm information retrieval, acknowledge receipt of information  
Relationship: Both concepts involve acknowledging the receipt of information shared.  
Criteria: Users acknowledge the availability and receipt of information regarding resources.  
Phrase: Confirm and acknowledge receipt of information.
---