You are an expert in thematic analysis clarifying the criteria of qualitative codes. Do not attempt to merge codes now.
Consider provided quotes, and note that each quote is independent of others.
Write clear and generalizable criteria for each code and do not introduce unnecessary details.
If necessary, refine labels to be more accurate, but do not repeat yourself.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1. 
Criteria: {Who did what, and how for code 1}
Label: {A descriptive label of code 1}
...
32.
Criteria: {Who did what, and how for code 32}
Label: {A descriptive label of code 32}
---
~~~
1.
Label: provide technical detail
Quotes:
- Designer: From the next update, dry batteries will no longer be ideal components (you can remove the internal resistance to simulate).
- Designer: Touch screens have their own on-screen keyboards.

2.
Label: inform about power supply options
Quotes:
- Designer: The student power supply supports both DC and AC and is an ideal component.

3.
Label: seek usage instructions
Quotes:
- User: How do you use the PC version?

4.
Label: provided teaching background
Quotes:
- User: I taught high school for seven years, and now I've been teaching middle school for eight years.

5.
Label: explain situation
Quotes:
- User: Dizzy, the computer system for teachers at our school is quite old.

6.
Label: designer 1 sets goal for electromagnetism
Quotes:
- Designer: Hope to figure out electromagnetism before the end of the year

7.
Label: reinforce feature explanation
Quotes:
- Designer: For example, see the circuit diagram to connect the physical diagram, or vice versa

8.
Label: highlighted educational utility
Quotes:
- Designer: For electricity, we plan to create a function for simulated experiment assessment; it will add many experimental details, such as zero adjustment (of course, only useful in specific modes, otherwise it would be cumbersome to use regularly)
- Designer: There will be: multimeter; powered solenoid; semiconductor capacitor; support for conversion to ideal ammeter (more convenient for problem-solving and middle school teaching)
- Designer: For example, you can see the corresponding circuit diagram after connecting the physical diagram, or vice versa
- Designer: For example, see the circuit diagram to connect the physical diagram, or vice versa
- Designer: With bidirectional conversion, you can directly do problems in the application

9.
Label: difficulty in development
Quotes:
- Designer: This is quite complex, so it will take more time... Hopefully, it can be released this week

10.
Label: designer 1 discusses technical requirements
Quotes:
- Designer: XP compatibility might need to be looked into later... probably need to install a virtual machine.

11.
Label: confirm compatibility
Quotes:
- Designer: 7 is okay.

12.
Label: provided workaround
Quotes:
- Designer: Last time I tried it in middle school, there's a trick where you click the link button in the top right, and when the browser pops up, it's no longer full screen... = =
- Designer: Although you can manually adjust the layout

13.
Label: acknowledge potential inconvenience
Quotes:
- Designer: Sorry for the late-night disturbance :)

14.
Label: set technical expectations
Quotes:
- Designer: Theoretically, it should be compatible (but the machine itself shouldn't be too old, probably from 2008 onwards).

15.
Label: designer 1 greets user
Quotes:
- Designer: Hello :)

16.
Label: consider hardware limitations
Quotes:
- User: It is recommended to add an exit button function to the PC version. Many regions now use all-in-one touch screen machines without physical keyboards.

17.
Label: designer 1 announces new version
Quotes:
- Designer: Hello everyone~ Version 1.01 has been released in the group files, the updates are as follows:

18.
Label: indicated successful navigation
Quotes:
- User: I saw the group files, thank you.

19.
Label: comparison
Quotes:
- User: Yes, the spirit of craftsmanship that strives for perfection ðŸ¤”

20.
Label: user 4235 requests additional features
Quotes:
- User: Can you also include mechanics experiments?

21.
Label: validated designer's example
Quotes:
- User: Yes, the common one is still the old style

22.
Label: maintained positive tone
Quotes:
- User: Okay, okay~ Thank you for your hard work.

23.
Label: user 4235 acknowledges design quality
Quotes:
- User: The 3D effect of your software is very good

24.
Label: using images to help demonstration
Quotes:
- Designer: [Image] This one, right?

25.
Label: user 4231 thanks the group
Quotes:
- User: I saw the group files, thank you.

26.
Label: solicited confirmation
Quotes:
- Designer: [Image] This one, right?

27.
Label: explain functionality
Quotes:
- Designer: The student power supply supports both DC and AC and is an ideal component.

28.
Label: acknowledge feedback
Quotes:
- Designer: Okay.
- Designer: Hmm.

29.
Label: communicate release plans
Quotes:
- Designer: There will be an update. Submitting to the app store / releasing the Android version next Monday, and releasing the Windows version over the weekend.

30.
Label: intended iterative design process
Quotes:
- Designer: Before starting mechanics, we will gather opinions again~ Otherwise, I'm afraid I won't remember everything.

31.
Label: prioritized user experience
Quotes:
- Designer: It's still better to make the auto-generated one as good as possible

32.
Label: consider technical requirements
Quotes:
- Designer: Does the class have internet?
===
Here are the definitions for each code:

---
1.
Criteria: A designer provides specific technical details about a component or feature.
Label: Provide Technical Specifications

2.
Criteria: A designer informs about available power supply options.
Label: Inform about Power Supply Options

3.
Criteria: A user asks for instructions on how to use a feature or software.
Label: Seek Usage Instructions

4.
Criteria: A user shares their teaching background or experience.
Label: Share Teaching Background

5.
Criteria: A user explains a situation or context related to the online community.
Label: Explain Situation

6.
Criteria: A designer sets a goal or target for a specific topic or feature.
Label: Set Goal for Feature Development

7.
Criteria: A designer reinforces or reiterates an explanation of a feature.
Label: Reinforce Feature Explanation

8.
Criteria: A designer highlights the educational utility or benefits of a feature.
Label: Highlight Educational Utility

9.
Criteria: A designer expresses difficulty or challenges in developing a feature.
Label: Express Development Difficulty

10.
Criteria: A designer discusses technical requirements or compatibility issues.
Label: Discuss Technical Requirements

11.
Criteria: A designer confirms compatibility with a specific system or platform.
Label: Confirm Compatibility

12.
Criteria: A designer provides a workaround or solution to a technical issue.
Label: Provide Workaround

13.
Criteria: A designer acknowledges potential inconvenience or apologizes for an issue.
Label: Acknowledge Potential Inconvenience

14.
Criteria: A designer sets technical expectations for a feature or software.
Label: Set Technical Expectations

15.
Criteria: A designer greets or addresses a user.
Label: Greet User

16.
Criteria: A user considers or mentions hardware limitations or constraints.
Label: Consider Hardware Limitations

17.
Criteria: A designer announces a new version or update of the software.
Label: Announce New Version

18.
Criteria: A user indicates successful navigation or access to a feature or resource.
Label: Indicate Successful Navigation

19.
Criteria: A user makes a comparison between two things.
Label: Make Comparison

20.
Criteria: A user requests additional features or functionalities.
Label: Request Additional Features

21.
Criteria: A user validates or confirms a designer's example or explanation.
Label: Validate Designer's Example

22.
Criteria: A user maintains a positive tone or expresses gratitude.
Label: Maintain Positive Tone

23.
Criteria: A user acknowledges or praises the design quality of the software.
Label: Acknowledge Design Quality

24.
Criteria: A designer uses images to help demonstrate or explain a concept.
Label: Use Images for Demonstration

25.
Criteria: A user thanks the group or expresses gratitude.
Label: Express Gratitude

26.
Criteria: A designer solicits confirmation or feedback from a user.
Label: Solicit Confirmation

27.
Criteria: A designer explains the functionality of a feature or component.
Label: Explain Functionality

28.
Criteria: A designer acknowledges or responds to user feedback.
Label: Acknowledge Feedback

29.
Criteria: A designer communicates plans or schedules for releasing updates or features.
Label: Communicate Release Plans

30.
Criteria: A designer intends to gather opinions or feedback in an iterative design process.
Label: Intend Iterative Design Process

31.
Criteria: A designer prioritizes user experience or ease of use.
Label: Prioritize User Experience

32.
Criteria: A designer considers technical requirements or constraints in a specific context.
Label: Consider Technical Requirements