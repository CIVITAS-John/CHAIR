You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between sub-codes. If a sub-code includes another, use the broader one. If sub-codes are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (12 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {A sentence of consolidated criteria 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
12.
Relationship: {The logical relationship between sub-codes in code 12}
Criteria: {A sentence of consolidated criteria 12}
Label: {A consolidated label of code 12}
Category: {2-4 words for code 12}
---
~~~
1. software stability, excellence in development.
- Ensuring the stability and reliability of the software through careful feature implementation.
- Involves striving for excellence, attention to detail, and appreciation for craftsmanship in software development.

2. feature communication, feature development management.
- Involves showcasing upcoming features and detailing software functionalities.
- Includes feature development sequences, enhancements, and promises for implementation.

3. user reassurance, transparent communication.
- Involves reassuring users and managing their expectations regarding updates.
- Focuses on update communication and maintaining transparency with users.

4. version updates, software updates management.
- Includes platform-specific updates and discussions on software versions.
- Involves software component updates, management, testing, and release processes.

5. learning software design, software design optimization.
- Learning and planning for software design features.
- Involves iterative design improvements, adaptation discussions, and optimization strategies.

6. issue resolution, software issue resolution.
- Resolving issues or providing solutions within the community.
- Involves identifying, troubleshooting, and sharing strategies for resolving software issues.

7. participatory design, user-centric design.
- Involving community members in the design process or decision-making.
- Involves user decision-making processes and user-oriented design in software development.

8. user engagement, positive feedback, user feedback utilization.
- Involves user requests, engagement, and feature suggestions.
- Involves responses to positive feedback, user appreciation for design, and approval of feature ideas.
- Involves gathering and utilizing user feedback, and acknowledging user input in software development.

9. wave theory, wave phenomena.
- Focuses on discussions or requests about wave superposition and various wave concepts.
- Involves discussions or requests on polarizers, single and double slits, diffraction, and interference concepts.

10. lab components, optical concepts, physics concepts.
- Encompasses discussions and plans related to Physics Lab sections and component features.
- Focuses on discussions or requests related to optical bench and optical experiment concepts.
- Involves discussions or requests related to physics concepts and demonstrations.

11. user experiences, usability discussions.
- Encompasses reflections on user experience, perspectives, and teaching profession insights.
- Encompasses discussions on touch input usability, interface design, and software usability.

12. user support, software inquiries.
- Involves user support, assistance, guidance, and manual inquiries.
- Encompasses requests and inquiries about software download, technical specifications, and usage.
===
Categories: 
* Software Development
* User Engagement
* Design Collaboration
* Physics Concepts

Definitions for each code:
1.
Relationship: Both sub-codes focus on ensuring software quality and stability through development excellence.
Criteria: Ensuring software stability and excellence in development.
Label: Software Development
Category: Software Development

2.
Relationship: Both sub-codes relate to managing and communicating software features.
Criteria: Managing feature communication and development.
Label: Software Development
Category: Software Development

3.
Relationship: Both sub-codes revolve around keeping users informed and reassured about updates.
Criteria: Reassuring users and maintaining transparent communication.
Label: User Engagement
Category: User Engagement

4.
Relationship: Both sub-codes involve managing software updates and versions.
Criteria: Managing version updates and software updates.
Label: Software Development
Category: Software Development

5.
Relationship: Both sub-codes focus on learning and optimizing software design.
Criteria: Learning software design and optimizing software design.
Label: Software Development
Category: Software Development

6.
Relationship: Both sub-codes pertain to resolving software issues within the community.
Criteria: Resolving software issues and providing solutions.
Label: Software Development
Category: Software Development

7.
Relationship: Both sub-codes involve engaging users in the design process.
Criteria: Involving users in participatory and user-centric design.
Label: Design Collaboration
Category: Design Collaboration

8.
Relationship: Both sub-codes center around user engagement and feedback utilization.
Criteria: Engaging users, utilizing feedback, and acknowledging user input.
Label: User Engagement
Category: User Engagement

9.
Relationship: Both sub-codes focus on discussions related to wave phenomena.
Criteria: Discussions on wave theory and wave phenomena.
Label: Physics Concepts
Category: Physics Concepts

10.
Relationship: Both sub-codes encompass discussions on lab components and physics concepts.
Criteria: Discussing lab components, optical concepts, and physics concepts.
Label: Physics Concepts
Category: Physics Concepts

11.
Relationship: Both sub-codes involve reflections on user experiences and usability discussions.
Criteria: Reflecting on user experiences and discussing usability.
Label: User Engagement
Category: User Engagement

12.
Relationship: Both sub-codes involve providing user support and addressing software inquiries.
Criteria: Providing user support and software inquiries.
Label: User Engagement
Category: User Engagement