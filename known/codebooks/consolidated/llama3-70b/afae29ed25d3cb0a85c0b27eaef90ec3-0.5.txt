You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (12 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
12. {Repeat the input 12}
Relationship: {The logical relationship between concepts in input 12}
Criteria: {A sentence of consolidated criteria for code 12}
Label: {A consolidated label of code 12}
Category: {2-4 words for code 12}
---
~~~
1. user background, educational background.
- References to users' professional or educational backgrounds that might influence their interaction with the app.
- Understanding participants' educational backgrounds and their impact on technology use.

2. apologies, apologies for disturbances.
- Designers or community members apologizing for disturbances or disruptions.
- The designer apologizes for any inconvenience caused by late messages.

3. soliciting user input, participatory feedback.
- Instances where designers or developers actively seek feedback, suggestions, or input from the community or stakeholders.
- Instances where designers or developers ask for user suggestions and feedback, and where users are directly involved in the design process.

4. collaborative development, collaborative design involvement.
- Collaborative efforts between designers and users in developing or improving the software.
- Instances where users are actively involved in both the decision-making and development aspects of the software.

5. positive feedback, usability and praise.
- Positive user expressions about the software's features, usability, or updates.
- Users' comments on the software's ease of use, practicality, and sharing positive experiences and feedback.

6. software release, software feature: downloading.
- Statements about downloading the Physics Lab software and the release of new versions of the software.
- Mentions of downloading or accessing Physics Lab.

7. user anticipation, anticipation and excitement, update anticipation.
- Understanding users' anticipation for updates and their reactions to the release schedule.
- Instances where users show excitement or anticipation for new updates or features.
- Community members express anticipation or inquire about upcoming updates, reflecting engagement and interest.

8. software updates, feature updates communication.
- Information, announcements, or sharing of updates, releases, or changes to the software components or functionality.
- Communications that inform the community about updates, new features, or changes in the software.

9. system compatibility, compatibility concerns.
- Instances where users discuss technical issues related to system compatibility.
- Discussions or considerations about the software's compatibility with different operating systems and hardware.

10. prioritization, development planning.
- Conversations on prioritizing specific sections of the platform for development.
- Discussions or decisions regarding planned features, capabilities, and prioritization of development tasks.

11. feature development, feature discussion.
- Discussion of new features or updates to the platform.
- Discussion points around specific features of the tool, including both existing features and those planned for future updates.

12. technical considerations, technical discussions.
- Discussions by the designer that address technical aspects or limitations of the software.
- Discussions about technical aspects of the feature development, such as optimization or component adjustments.
===
---
Categories: 
* Community Engagement
* Design and Development
* User Experience
* Technical Considerations
* Communication and Feedback

Definitions for each code:

1. user background, educational background.
Relationship: Inclusion (educational background is a type of user background)
Criteria: References to users' educational or professional backgrounds that influence their interaction with the app.
Label: User Background
Category: Community Engagement

2. apologies, apologies for disturbances.
Relationship: Parallel (both concepts are related to apologizing)
Criteria: Designers or community members apologizing for disturbances or disruptions.
Label: Apologies
Category: Communication and Feedback

3. soliciting user input, participatory feedback.
Relationship: Inclusion (participatory feedback is a type of soliciting user input)
Criteria: Instances where designers or developers actively seek feedback, suggestions, or input from the community or stakeholders.
Label: User Input
Category: Design and Development

4. collaborative development, collaborative design involvement.
Relationship: Inclusion (collaborative design involvement is a type of collaborative development)
Criteria: Collaborative efforts between designers and users in developing or improving the software.
Label: Collaborative Development
Category: Design and Development

5. positive feedback, usability and praise.
Relationship: Inclusion (usability and praise are types of positive feedback)
Criteria: Positive user expressions about the software's features, usability, or updates.
Label: Positive Feedback
Category: User Experience

6. software release, software feature: downloading.
Relationship: Parallel (both concepts are related to software releases)
Criteria: Statements about downloading the Physics Lab software and the release of new versions of the software.
Label: Software Release
Category: Technical Considerations

7. user anticipation, anticipation and excitement, update anticipation.
Relationship: Inclusion (update anticipation is a type of user anticipation)
Criteria: Understanding users' anticipation for updates and their reactions to the release schedule.
Label: User Anticipation
Category: Community Engagement

8. software updates, feature updates communication.
Relationship: Inclusion (feature updates communication is a type of software updates)
Criteria: Information, announcements, or sharing of updates, releases, or changes to the software components or functionality.
Label: Software Updates
Category: Communication and Feedback

9. system compatibility, compatibility concerns.
Relationship: Inclusion (compatibility concerns are a type of system compatibility)
Criteria: Instances where users discuss technical issues related to system compatibility.
Label: System Compatibility
Category: Technical Considerations

10. prioritization, development planning.
Relationship: Inclusion (development planning is a type of prioritization)
Criteria: Conversations on prioritizing specific sections of the platform for development.
Label: Prioritization
Category: Design and Development

11. feature development, feature discussion.
Relationship: Inclusion (feature discussion is a type of feature development)
Criteria: Discussion of new features or updates to the platform.
Label: Feature Development
Category: Design and Development

12. technical considerations, technical discussions.
Relationship: Inclusion (technical discussions are a type of technical considerations)
Criteria: Discussions by the designer that address technical aspects or limitations of the software.
Label: Technical Considerations
Category: Technical Considerations