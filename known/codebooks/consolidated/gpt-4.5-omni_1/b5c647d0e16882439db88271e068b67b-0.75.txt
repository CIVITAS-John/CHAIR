You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (49 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
49. 
Concepts: {Repeat the input 49}
Relationship: {What is logical relationship between concepts in code 49, or N/A if not applicable}
Criteria: {Who did what, and how for code 49}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: confirming user identity and role, identifying and confirming teacher roles
- Users confirm their identity or professional role.
- Users identify as teachers and confirm their professional role or make teaching-related requests.

2.
Concepts: inquiring about user roles and background, inquire about professional background
- Inquiries made about a user's role or background.
- Designers ask about the user's professional background to better understand their needs.

3.
Concepts: gather user requirements, seeking contextual information, seeking and confirming details
- Designers inquire about and gather detailed user needs and requirements.
- Designers seek contextual information from users.
- Designers seek and confirm information with users.

4.
Concepts: engage in dialogue, following up on discussions
- Users engage in a back-and-forth conversation to clarify something.
- Users follow up with additional questions and continue discussions.

5.
Concepts: providing context for needs, providing context for questions
- Users provide context or background for their needs or the community environment.
- Users provide context or background information to questions or statements.

6.
Concepts: encouraging elaboration, elaborating on suggestions
- Users elaborate on points and encourage others to provide more details.
- Users provide further suggestions or elaborate on previous ones.

7.
Concepts: justifying suggestions, explaining and providing additional reasons
- Users provide justifications and reasons for their suggestions.
- Users explain issues and offer additional reasons for queries.

8.
Concepts: request, requesting new features, request detailed features
- Making requests for specific features or demonstrations.
- Users request the addition of new features and specific experiments.
- Users make detailed and specific feature requests respectfully.

9.
Concepts: inquiring about platform information, engaging with platform development
- Users inquire about platform availability and updates.
- Users inquire about and express interest in platform development and updates.

10.
Concepts: invite feedback from group, seeking and involving community input
- Promises to involve the community or seek feedback from group members.
- Efforts made to gather community feedback and involve them in decisions.

11.
Concepts: using emojis for communication, reacting to stories and updates
- Users and designers use emojis to express emotions and reactions.
- Users and designers express reactions to stories or updates, often with emojis.

12.
Concepts: reflect on past experience, reflect on experiences
- Reflecting on or sharing past experiences and learnings.
- Designers reflect on past experiences and previous decisions related to the project.

13.
Concepts: sharing professional background, sharing teaching backgrounds and experiences
- Users share their professional or personal background.
- Users share personal teaching backgrounds and experiences.

14.
Concepts: sharing past incidents, sharing personal anecdotes
- Users recall and share past incidents or experiences.
- Users share personal stories or anecdotes related to the context.

15.
Concepts: sharing resources, promote collaborative sharing
- Users and designers share resources such as links and documents.
- Designers suggest and promote sharing resources and collaborative learning within the group.

16.
Concepts: praising and complimenting software evolution, appreciating craftsmanship and dedication
- Users praise the software and its evolution.
- Users praise the craftsmanship and effort invested in the software development.

17.
Concepts: reciprocate greeting, engaging in polite interactions
- Participants reciprocate a greeting or polite interaction.
- Users engage in polite exchanges, reflecting good etiquette.

18.
Concepts: providing positive confirmation, acknowledging receipt and understanding
- Users provide positive confirmations or acknowledgments.
- Users acknowledge receipt and confirm understanding of provided information.

19.
Concepts: agreeing with suggestions, affirming points of view
- Users agree with and support previous suggestions or statements.
- Affirmation or agreement with another user's or designer's point or statement.

20.
Concepts: discuss technical constraints, consider technical requirements
- Designers discuss technical constraints and consider hardware limitations in solutions.
- Designer considers technical requirements, like internet access, during discussions.

21.
Concepts: platform specific information, providing platform-specific updates
- Discussions that provide platform-specific information or instructions.
- Updates and communication focus on specific platforms or versions.

22.
Concepts: share design information, providing technical information
- Designers share technical details and information relevant to design with the community.
- Users provide technical information and specifications.

23.
Concepts: highlight community needs, acknowledge community needs
- Users highlight the need for specific functionalities and usability improvements.
- Acknowledging community needs and aligning software features accordingly.

24.
Concepts: suggesting educational enhancements, articulating educational needs
- Suggest/requests specific enhancements or new educational features within the software.
- Users articulate specific educational tools or functionalities they wish to see in the software that would aid in teaching.

25.
Concepts: share user reviews, sharing classroom experiences
- Users share their experiences and compare the software with other applications.
- Users discuss and share experiences of using the software in classrooms.

26.
Concepts: providing educational context, discussing school needs and context
- Users provide context about their school's resources and environment.
- Users discuss specific needs and the broader educational context of their schools.

27.
Concepts: confirming compatibility, addressing compatibility issues, inquiring about compatibility
- Users assure and confirm software compatibility with systems.
- Users address, confirm, and suggest checking system compatibility.
- Users discuss and inquire about software compatibility with specific systems.

28.
Concepts: requesting assistance, requesting technical support
- Users seek help or assistance from the community.
- Users seek technical assistance and support.

29.
Concepts: respond to feedback, address usability concerns
- Designers respond to user feedback and discuss future steps or updates.
- Designers address and consider usability concerns based on feedback.

30.
Concepts: align with user feedback, make user-driven decisions
- A designer aligns the development with user feedback.
- Designers make design decisions and reach conclusions based on user feedback.

31.
Concepts: gather user feedback, integrating user feedback
- Designers gather user input and feedback before implementing changes.
- The designers solicit, consider, and implement user feedback into the design process.

32.
Concepts: suggest alternatives, propose design solutions
- Users and designers suggest and provide alternative methods or solutions to improve functionality.
- Designers propose new design ideas and potential solutions for software improvements.

33.
Concepts: explain design principles, explain design philosophy
- Designers explain the software's usability principles and development process.
- The underlying principles and approaches guiding the design and development of the product.

34.
Concepts: diagnose problems, troubleshoot issues
- Designers address and offer diagnoses for software problems.
- Designers analyze and engage in troubleshooting technical issues.

35.
Concepts: raise design questions, encouraging open discussion, inquire about problems
- Designers raise design-related questions and discuss potential issues.
- Designers encourage users to discuss any problems they encounter openly.
- Designers ask users to specify details about the problems they encounter.

36.
Concepts: real-time communication, engage in direct communication
- Designer engages in real-time communication with users.
- Designers and users engage in direct communication to discuss features, updates, and feedback.

37.
Concepts: refine design, enhance features
- Designers discuss the need for design refinements, adaptations, and product improvements.
- Designers discuss adjustments and enhancements to improve existing features.

38.
Concepts: provide development updates, discuss feature development
- Designers discuss ongoing research and provide updates on the development status.
- Designers discuss and share information about the development and adjustments of new features.

39.
Concepts: explain feature roadmap, outline development priorities
- Designers discuss and explain the plans and priorities for feature development.
- Designers explain current development focus and outline future project tasks and priorities.

40.
Concepts: long term planning, discuss feature stability
- Designer discusses long-term planning and feature stability.
- Designers discuss the stability of features and their contribution to long-term software stability.

41.
Concepts: set user expectations, managing user expectations
- A designer sets expectations for the community regarding future updates or releases.
- Designers set timelines and manage expectations for upcoming releases.

42.
Concepts: promise future development, promising future feature implementation
- A designer mentions the possibility of developing new software or features in the future.
- Designers promise future enhancements and feature implementations.

43.
Concepts: reassuring users, answer to a question
- Designers reassure users about progress and express gratitude.
- Designers responding to user concerns or questions with reassurance about upcoming features.

44.
Concepts: confirm feature updates, assuring ongoing updates
- Designers confirm and plan feature updates and their implementation.
- Designers assure users of ongoing feature optimizations and updates.

45.
Concepts: describe update scope, describe update schedule and process, communicate update timeline
- Designers describe and share the scope and magnitude of software updates.
- Designers provide information about the schedule and process for software updates.
- Designers provide and communicate timelines for Android updates and feature releases.

46.
Concepts: share info on app release, provide review status update
- Designer shares information about the app's release status.
- Designers provide updates on the review status of the software, including iOS app reviews.

47.
Concepts: introduce new features, announcing software updates
- Designers announce and introduce new feature functions and components in the software.
- Designers announce and share updates about planned and released software components.

48.
Concepts: inquire about updates, clarify software updates
- Users inquire about the status and availability of software updates.
- Users and designers seek and provide clarification about software updates and versions.

49.
Concepts: instruction and updates, software updates and downloads
- Designers providing updates and instructions to help users understand and use the software effectively.
- A designer informs the community about software updates, new versions, or download instructions.
===
---
Definitions for each code (49 in total):
1.
Concepts: confirming user identity and role, identifying and confirming teacher roles
Relationship: Both involve users confirming and identifying their professional roles.
Criteria: Users confirm their identity or professional role, particularly as teachers, through requests or statements.
Phrase: Confirming professional identity

2.
Concepts: inquiring about user roles and background, inquire about professional background
Relationship: Both involve making inquiries to understand users' roles and backgrounds.
Criteria: Designers ask about the user's role and professional background to understand their needs.
Phrase: Inquiring about user background

3.
Concepts: gather user requirements, seeking contextual information, seeking and confirming details
Relationship: All involve designers collecting user-related information.
Criteria: Designers gather detailed user requirements, seek contextual information, and confirm details with users.
Phrase: Gathering user requirements

4.
Concepts: engage in dialogue, following up on discussions
Relationship: Both involve ongoing user interactions.
Criteria: Users engage in conversations to clarify and follow up on discussions.
Phrase: Engaging in dialogue

5.
Concepts: providing context for needs, providing context for questions
Relationship: Both involve users giving context.
Criteria: Users provide context for their needs or questions to better explain their situation.
Phrase: Providing contextual information

6.
Concepts: encouraging elaboration, elaborating on suggestions
Relationship: Both involve expanding on information or ideas.
Criteria: Users elaborate on points and encourage others to provide more details or suggestions.
Phrase: Elaborating on points

7.
Concepts: justifying suggestions, explaining and providing additional reasons
Relationship: Both involve providing reasons for suggestions or issues.
Criteria: Users justify their suggestions by explaining issues and offering additional reasons.
Phrase: Justifying suggestions

8.
Concepts: request, requesting new features, request detailed features
Relationship: All involve making requests for specific features or functionalities.
Criteria: Users make detailed and specific feature requests, including new features or demonstrations.
Phrase: Requesting detailed features

9.
Concepts: inquiring about platform information, engaging with platform development
Relationship: Both involve users seeking information about platform details and development.
Criteria: Users inquire about platform availability, updates, and express interest in development.
Phrase: Inquiring about platform development

10.
Concepts: invite feedback from group, seeking and involving community input
Relationship: Both involve collecting feedback from the community.
Criteria: Efforts are made to gather and involve community feedback in decisions.
Phrase: Inviting community feedback

11.
Concepts: using emojis for communication, reacting to stories and updates
Relationship: Both involve using emojis to express reactions.
Criteria: Users and designers use emojis to communicate emotions and reactions to stories or updates.
Phrase: Using emojis for reactions

12.
Concepts: reflect on past experience, reflect on experiences
Relationship: Both involve reflecting on previous experiences.
Criteria: Users and designers share or reflect on past experiences and learnings.
Phrase: Reflecting on experiences

13.
Concepts: sharing professional background, sharing teaching backgrounds and experiences
Relationship: Both involve sharing background information.
Criteria: Users share their professional or teaching backgrounds and related experiences.
Phrase: Sharing professional background

14.
Concepts: sharing past incidents, sharing personal anecdotes
Relationship: Both involve sharing personal past experiences.
Criteria: Users recall and share past incidents or personal anecdotes related to the context.
Phrase: Sharing personal anecdotes

15.
Concepts: sharing resources, promote collaborative sharing
Relationship: Both involve sharing resources.
Criteria: Users and designers share resources such as links and documents, promoting collaborative learning.
Phrase: Sharing resources

16.
Concepts: praising and complimenting software evolution, appreciating craftsmanship and dedication
Relationship: Both involve expressing appreciation for the software.
Criteria: Users praise the software's evolution, craftsmanship, and the effort invested in its development.
Phrase: Praising software evolution

17.
Concepts: reciprocate greeting, engaging in polite interactions
Relationship: Both involve polite exchanges.
Criteria: Participants reciprocate greetings and engage in polite interactions.
Phrase: Reciprocating greetings

18.
Concepts: providing positive confirmation, acknowledging receipt and understanding
Relationship: Both involve positive acknowledgments.
Criteria: Users provide positive confirmations and acknowledge receipt and understanding of information.
Phrase: Providing positive confirmation

19.
Concepts: agreeing with suggestions, affirming points of view
Relationship: Both involve showing agreement.
Criteria: Users agree with and affirm previous suggestions or points of view.
Phrase: Agreeing with suggestions

20.
Concepts: discuss technical constraints, consider technical requirements
Relationship: Both involve considering technical aspects.
Criteria: Designers discuss and consider technical constraints and requirements during solution discussions.
Phrase: Discussing technical constraints

21.
Concepts: platform specific information, providing platform-specific updates
Relationship: Both involve platform-specific communications.
Criteria: Discussions and updates provide platform-specific information or instructions.
Phrase: Providing platform-specific updates

22.
Concepts: share design information, providing technical information
Relationship: Both involve sharing technical details.
Criteria: Designers and users share technical information and design details with the community.
Phrase: Sharing technical information

23.
Concepts: highlight community needs, acknowledge community needs
Relationship: Both involve focusing on community needs.
Criteria: Users highlight and acknowledge the need for specific functionalities and usability improvements.
Phrase: Highlighting community needs

24.
Concepts: suggesting educational enhancements, articulating educational needs
Relationship: Both involve suggesting improvements for educational purposes.
Criteria: Users suggest and articulate specific educational enhancements and functionalities for the software.
Phrase: Suggesting educational enhancements

25.
Concepts: share user reviews, sharing classroom experiences
Relationship: Both involve sharing user experiences.
Criteria: Users share reviews and classroom experiences using the software.
Phrase: Sharing user reviews

26.
Concepts: providing educational context, discussing school needs and context
Relationship: Both involve discussing educational environments.
Criteria: Users provide context about their school's resources and discuss specific educational needs.
Phrase: Providing educational context

27.
Concepts: confirming compatibility, addressing compatibility issues, inquiring about compatibility
Relationship: All involve discussing software compatibility.
Criteria: Users address, confirm, and inquire about the software's compatibility with different systems.
Phrase: Discussing compatibility

28.
Concepts: requesting assistance, requesting technical support
Relationship: Both involve seeking help.
Criteria: Users request assistance and technical support from the community.
Phrase: Requesting assistance

29.
Concepts: respond to feedback, address usability concerns
Relationship: Both involve addressing user feedback.
Criteria: Designers respond to feedback and address usability concerns.
Phrase: Addressing usability concerns

30.
Concepts: align with user feedback, make user-driven decisions
Relationship: Both involve making decisions based on user feedback.
Criteria: Designers align development and make decisions driven by user feedback.
Phrase: Making user-driven decisions

31.
Concepts: gather user feedback, integrating user feedback
Relationship: Both involve incorporating user feedback.
Criteria: Designers gather and integrate user feedback into the design process.
Phrase: Integrating user feedback

32.
Concepts: suggest alternatives, propose design solutions
Relationship: Both involve proposing improvements.
Criteria: Users and designers suggest alternatives and propose design solutions for improvements.
Phrase: Proposing design solutions

33.
Concepts: explain design principles, explain design philosophy
Relationship: Both involve explaining the design rationale.
Criteria: Designers explain the usability principles and philosophy guiding the software's development.
Phrase: Explaining design principles

34.
Concepts: diagnose problems, troubleshoot issues
Relationship: Both involve solving software problems.
Criteria: Designers diagnose and troubleshoot technical issues in the software.
Phrase: Troubleshooting issues

35.
Concepts: raise design questions, encouraging open discussion, inquire about problems
Relationship: All involve discussing design-related issues openly.
Criteria: Designers encourage open discussion by raising questions and inquiring about user problems.
Phrase: Encouraging open discussion

36.
Concepts: real-time communication, engage in direct communication
Relationship: Both involve direct interaction.
Criteria: Designers and users engage in real-time, direct communication to discuss features and feedback.
Phrase: Engaging in real-time communication

37.
Concepts: refine design, enhance features
Relationship: Both involve improving the software.
Criteria: Designers discuss necessary refinements and enhancements to improve features.
Phrase: Enhancing features

38.
Concepts: provide development updates, discuss feature development
Relationship: Both involve updating on development progress.
Criteria: Designers provide updates and discuss the ongoing development of new features.
Phrase: Providing development updates

39.
Concepts: explain feature roadmap, outline development priorities
Relationship: Both involve explaining future development plans.
Criteria: Designers explain the feature roadmap and outline development priorities and tasks.
Phrase: Explaining feature roadmap

40.
Concepts: long term planning, discuss feature stability
Relationship: Both involve planning for software stability.
Criteria: Designers discuss long-term planning and the stability of features.
Phrase: Discussing long-term stability

41.
Concepts: set user expectations, managing user expectations
Relationship: Both involve setting realistic expectations.
Criteria: Designers set and manage user expectations regarding future updates or releases.
Phrase: Managing user expectations

42.
Concepts: promise future development, promising future feature implementation
Relationship: Both involve commitments to future developments.
Criteria: Designers promise future developments and feature implementations.
Phrase: Promising future development

43.
Concepts: reassuring users, answer to a question
Relationship: Both involve providing reassurance.
Criteria: Designers reassure users by answering questions and addressing concerns.
Phrase: Reassuring users

44.
Concepts: confirm feature updates, assuring ongoing updates
Relationship: Both involve confirming updates.
Criteria: Designers confirm and assure ongoing feature updates and optimizations.
Phrase: Confirming feature updates

45.
Concepts: describe update scope, describe update schedule and process, communicate update timeline
Relationship: All involve explaining update details.
Criteria: Designers describe the scope, schedule, process, and timeline of software updates.
Phrase: Describing update scope

46.
Concepts: share info on app release, provide review status update
Relationship: Both involve providing release information.
Criteria: Designers share information about the app's release and review status.
Phrase: Sharing release information

47.
Concepts: introduce new features, announcing software updates
Relationship: Both involve announcing new developments.
Criteria: Designers announce and introduce new features and software updates.
Phrase: Announcing new features

48.
Concepts: inquire about updates, clarify software updates
Relationship: Both involve seeking information about updates.
Criteria: Users inquire about and seek clarification regarding software update status.
Phrase: Inquiring about updates

49.
Concepts: instruction and updates, software updates and downloads
Relationship: Both involve providing update-related information.
Criteria: Designers provide instructions and updates on software versions and downloads.
Phrase: Providing update instructions
---