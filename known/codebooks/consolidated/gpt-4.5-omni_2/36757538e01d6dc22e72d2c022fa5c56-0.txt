You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (13 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
13. 
Concepts: {Repeat the input 13}
Relationship: {What is logical relationship between concepts in code 13, or N/A if not applicable}
Criteria: {Who did what, and how for code 13}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: community norms, apologizing for inconvenience
- A designer apologizes for any inconvenience caused, reflecting community norms.
- Designers or users apologize for any inconvenience caused and express politeness.

2.
Concepts: acknowledging mutual support, expressing gratitude and acknowledgment
- Users and designers express appreciation for each other's support.
- Users and designers express gratitude and acknowledgment for each other's efforts and contributions.

3.
Concepts: information seeking, requesting guidance and information
- Users asking questions to gain knowledge or resources related to the software.
- Users request guidance or specific information related to the software.

4.
Concepts: making design suggestions, proposing new features and collaboration
- Users make design suggestions, and designers invite feature requests.
- Users propose new features, suggest collaboration, and make improvement suggestions.

5.
Concepts: appreciating features, praising software usability
- Users appreciate specific features of the software.
- Users praise the software for its practicality and usability.

6.
Concepts: development update information, providing research and development updates
- Designers share detailed information about development updates.
- Designers provide status updates and describe ongoing research and development.

7.
Concepts: providing product updates, providing update information
- Designers provide information about updates or technical changes to the software.
- Designers provide information about software updates and new features.

8.
Concepts: project management, discussing development priorities
- Developers discuss project management and prioritization of tasks.
- Designers outline and discuss the prioritization of development tasks.

9.
Concepts: community cultivation, encouraging community discussion
- Designers encourage community interaction and feedback.
- Designers engage with the community and encourage discussions and problem-solving.

10.
Concepts: accepting user suggestions, acknowledgment and implementation
- Designers accept and acknowledge user suggestions and plan to implement them.
- Designers acknowledging user feedback and discussing plans to implement suggested features.

11.
Concepts: encouraging user feedback, involving users in design
- Designers encourage and solicit user feedback and interaction.
- Designers gather user feedback and involve users in the design process.

12.
Concepts: inquire about user's background, inquiring about professional background
- Developers inquire about the background or role of users to better understand their needs.
- Designers inquire about users' professional backgrounds or roles.

13.
Concepts: asking follow-up questions, requesting design clarification
- Designers ask follow-up questions to better understand user needs and clarify issues.
- Designers request clarification on users' problems or questions.
===
---
Definitions for each code (13 in total):
1.
Concepts: community norms, apologizing for inconvenience
Relationship: Apologizing for inconvenience is a reflection of community norms.
Criteria: Designers or users apologize for any inconvenience caused, reflecting the community's norms of politeness.
Phrase: Apologizing for inconvenience

2.
Concepts: acknowledging mutual support, expressing gratitude and acknowledgment
Relationship: Expressing gratitude and acknowledgment is a form of acknowledging mutual support.
Criteria: Users and designers express appreciation and gratitude for each other's support and contributions.
Phrase: Acknowledging mutual support

3.
Concepts: information seeking, requesting guidance and information
Relationship: Requesting guidance and information is a form of information seeking.
Criteria: Users ask questions to gain knowledge or resources related to the software.
Phrase: Seeking information

4.
Concepts: making design suggestions, proposing new features and collaboration
Relationship: Proposing new features and collaboration is a form of making design suggestions.
Criteria: Users propose new features, suggest collaboration, and make improvement suggestions.
Phrase: Proposing design suggestions

5.
Concepts: appreciating features, praising software usability
Relationship: Praising software usability is a form of appreciating features.
Criteria: Users appreciate specific features and praise the software for its practicality and usability.
Phrase: Praising software features

6.
Concepts: development update information, providing research and development updates
Relationship: Providing research and development updates is a form of sharing development update information.
Criteria: Designers share detailed information about development updates and ongoing research.
Phrase: Providing development updates

7.
Concepts: providing product updates, providing update information
Relationship: Providing update information is a form of providing product updates.
Criteria: Designers provide information about software updates and new features.
Phrase: Providing product updates

8.
Concepts: project management, discussing development priorities
Relationship: Discussing development priorities is a part of project management.
Criteria: Developers discuss project management and the prioritization of development tasks.
Phrase: Managing project priorities

9.
Concepts: community cultivation, encouraging community discussion
Relationship: Encouraging community discussion is a form of community cultivation.
Criteria: Designers engage with the community and encourage discussions and problem-solving.
Phrase: Cultivating community discussion

10.
Concepts: accepting user suggestions, acknowledgment and implementation
Relationship: Acknowledgment and implementation are steps in accepting user suggestions.
Criteria: Designers acknowledge user feedback and discuss plans to implement suggested features.
Phrase: Implementing user suggestions

11.
Concepts: encouraging user feedback, involving users in design
Relationship: Involving users in design is a result of encouraging user feedback.
Criteria: Designers gather user feedback and involve users in the design process.
Phrase: Involving users in design

12.
Concepts: inquire about user's background, inquiring about professional background
Relationship: Inquiring about professional background is a form of inquiring about the user's background.
Criteria: Designers inquire about users' professional backgrounds or roles to better understand their needs.
Phrase: Inquiring about user background

13.
Concepts: asking follow-up questions, requesting design clarification
Relationship: Requesting design clarification is a form of asking follow-up questions.
Criteria: Designers ask follow-up questions to better understand user needs and clarify issues.
Phrase: Clarifying design needs
---