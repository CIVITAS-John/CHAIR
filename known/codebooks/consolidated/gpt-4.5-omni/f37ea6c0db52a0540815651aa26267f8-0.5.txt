You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (14 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
14. {Repeat the input 14}
Relationship: {The logical relationship between concepts in input 14}
Criteria: {A sentence of consolidated criteria for code 14}
Label: {A consolidated label of code 14}
Category: {2-4 words for code 14}
---
~~~
1. group sharing, resource sharing.
- Participants suggest sharing resources within the group.
- Instances where participants offer to share or discuss sharing resources.

2. user gratitude, gratitude and acknowledgment.
- Expressions of appreciation or thanks from users towards the designers or the community.
- Expressions of thanks or acknowledgment from users.
- Instances where participants thank or appreciate each other for their contributions.

3. responsiveness, designer responsiveness.
- Instances where the designer responds to user requests or questions.
- Instances where the designer responds to user feedback, queries, or suggestions.

4. designer response, designer acknowledgment and response.
- Replies from the designer that acknowledge, address, or act upon user feedback.
- Replies from the designer addressing user feedback, providing updates, or explaining design choices.
- The designer's recognition and response to user feedback.

5. user feedback, user suggestions.
- Contributions from users that provide suggestions or highlight issues with the software.
- Comments or suggestions from users about the software, including requests for features or reporting issues.
- Instances where users provide feedback, ask questions, or express concerns about the software.
- Instances where users provide suggestions or feedback for software improvements.

6. user involvement, participation in development.
- Instances where users are directly involved in the design process through feedback or suggestions.
- Instances where users contribute ideas or feedback for the development process.

7. feature updates, feature announcements.
- Announcements or descriptions of new features and updates to the software.
- Instances where the designer announces new features or improvements in the software.

8. information exchange.
- Instances where participants share information or resources with others.
- Instances where users or designers share useful information or resources with the community.

9. feedback incorporation.
- How the designer incorporates user feedback into the software development process.
- Instances where community members provide input or feedback that influences design decisions.

10. usability concerns.
- Discussions about the ease of use and practical aspects of the software.
- Issues or suggestions related to the ease of use and user experience of the software.

11. user-centered design.
- Design approach that involves users in the development process to ensure the software meets their needs.
- Design decisions that prioritize user needs and preferences.

12. iterative development.
- The process of continually improving the software based on user feedback and testing.
- The process of continuously improving the software based on user feedback and testing.
- The process of continuously improving the product based on user feedback and testing.
- Instances where the designer discusses ongoing improvements and updates to the software.

13. feature requests.
- The designer invites users to suggest new features or components for the software.
- Specific functionalities or tools that users ask to be included in the software.

14. knowledge sharing.
- Instances where participants share information, tips, or resources that contribute to collective learning.
- Instances where community members share knowledge or information to support learning.
===
---
Categories: 
* Community Interaction
* User Involvement
* Feedback and Response
* Design Process

Definitions for each code (14 in total):
1. group sharing, resource sharing
Relationship: Both concepts revolve around the act of sharing within the community.
Criteria: Instances where participants suggest or offer to share resources or information within the group.
Label: Resource Sharing
Category: Community Interaction

2. user gratitude, gratitude and acknowledgment
Relationship: Both concepts involve expressions of appreciation or thanks.
Criteria: Instances where users express appreciation or thanks towards the designers or other community members.
Label: User Gratitude
Category: Community Interaction

3. responsiveness, designer responsiveness
Relationship: Both concepts involve the designer responding to user inputs.
Criteria: Instances where the designer responds to user requests, questions, or feedback.
Label: Designer Responsiveness
Category: Feedback and Response

4. designer response, designer acknowledgment and response
Relationship: Both concepts involve the designer acknowledging and responding to user feedback.
Criteria: Instances where the designer replies to user feedback, provides updates, or explains design choices.
Label: Designer Acknowledgment
Category: Feedback and Response

5. user feedback, user suggestions
Relationship: Both concepts involve users providing feedback or suggestions about the software.
Criteria: Instances where users provide feedback, suggestions, or highlight issues with the software.
Label: User Feedback
Category: User Involvement

6. user involvement, participation in development
Relationship: Both concepts involve users actively participating in the design process.
Criteria: Instances where users contribute ideas, feedback, or suggestions for the development process.
Label: User Involvement
Category: User Involvement

7. feature updates, feature announcements
Relationship: Both concepts involve announcements related to new features or updates.
Criteria: Instances where the designer announces new features or improvements in the software.
Label: Feature Announcements
Category: Design Process

8. information exchange
Relationship: This concept is similar to resource sharing but broader as it includes all types of information.
Criteria: Instances where participants share information or resources with others in the community.
Label: Information Exchange
Category: Community Interaction

9. feedback incorporation
Relationship: This concept involves the designer integrating user feedback into the development process.
Criteria: Instances where the designer incorporates user feedback into software development.
Label: Feedback Incorporation
Category: Design Process

10. usability concerns
Relationship: This concept is focused on discussions about the software's ease of use and user experience.
Criteria: Instances where users discuss the ease of use, practical aspects, or suggest improvements for the software.
Label: Usability Concerns
Category: User Involvement

11. user-centered design
Relationship: This concept involves a design approach that prioritizes user needs and preferences.
Criteria: Design decisions and approaches that involve users to ensure the software meets their needs.
Label: User-Centered Design
Category: Design Process

12. iterative development
Relationship: This concept involves the process of continually improving the software based on feedback.
Criteria: Instances where the designer discusses ongoing improvements and updates based on user feedback.
Label: Iterative Development
Category: Design Process

13. feature requests
Relationship: This concept involves users suggesting new functionalities or tools for the software.
Criteria: Instances where users request specific new features or components to be included in the software.
Label: Feature Requests
Category: User Involvement

14. knowledge sharing
Relationship: This concept involves sharing information to support collective learning within the community.
Criteria: Instances where participants share knowledge, tips, or resources that contribute to collective learning.
Label: Knowledge Sharing
Category: Community Interaction
---