You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: feature guidance, feature usage guidance
- Offering advice or instructions on how to use certain features.
- Giving guidance or instructions on how to use features or components within the software.

2.
Concepts: comparison to similar apps, positive software comparison
- User compares the app favorably against similar applications.
- Comparing the software favorably with other similar applications.

3.
Concepts: software usability, software comparison
- Users discuss how the software meets their usability needs compared to other options.
- Users compare the current software to other alternatives, highlighting differences in usability and features.

4.
Concepts: context of use, usability and context of use
- Instances where users describe the specific contexts in which they use the software.
- Discussions about how the software is used in different contexts and its usability.

5.
Concepts: positive student response, illustrate classroom success
- Users describe positive student reactions to the software when used in a classroom setting.
- User describes successful usage of the software in a classroom setting, highlighting positive outcomes.

6.
Concepts: user experience, user experience and impact
- Instances where users share their experiences or opinions about using the software.
- Users sharing their experiences and the impact of the software on their teaching or learning.

7.
Concepts: design/feature suggestion, suggest educational enhancements
- A user suggests features or functionalities that could improve the educational usability of the software.
- A user requests enhancements or expansions to the software, targeting educational purposes.

8.
Concepts: designer responsiveness
- Instances where designers respond to user queries or engage with user comments, indicating active communication between designers and users.
- Instances where designers respond to user inquiries, suggestions, or feedback.
- Instances where designers respond to user feedback or suggestions.
- Instances where designers acknowledge user feedback and discuss potential solutions or updates.
- Designers responding to user feedback and addressing their concerns or suggestions.
- Instances where designers respond to user queries or feedback, showing attentiveness to user needs.

9.
Concepts: component adjustments
- A designer discusses modifications and adjustments made to the properties and features of existing components.
- Implementing updates to components to enhance or correct their behavior.

10.
Concepts: educational background inquiry
- Inquiry to determine the educational background or teaching level of another member.
- Users or developers inquire about the background or context of the individuals in the community.

11.
Concepts: community support
- Instances where users express support, encouragement, or appreciation for the designers' efforts.
- Community members provide supportive or appreciative responses acknowledging contributions or hardships.

12.
Concepts: user engagement
- Instances where users actively participate in the conversation, showing interest or involvement in the community.
- Instances where users engage with designers through questions, feedback, or expressions of anticipation.
- Instances where users actively participate in the conversation, showing interest and involvement.
- User engaging with the community through emojis or other brief interactions.

13.
Concepts: feature appreciation
- User shows appreciation for a feature or general aspect of the software.
- Appreciating and positively evaluating software features.

14.
Concepts: technical constraints
- Instances where technical limitations or requirements are discussed.
- Instances where limitations or constraints of the software are mentioned.

15.
Concepts: user response
- Input and suggestions provided by users regarding the design and functionality of the product.
- Instances where users provide feedback or ask questions that influence the design process.
- Instances where users provide feedback or suggestions to improve the software.
- Instances where users provide suggestions or feedback on features and functionalities.
- Instances where users provide feedback or ask questions about the app's development and updates.

16.
Concepts: review status update
- Providing updates on the review status of an operating system specific application.
- Updating users on the status of a review or approval process.

17.
Concepts: user-designer interaction
- The collaborative interaction between users and designers that contributes to the design process.
- Interaction between users and designers on specific points.

18.
Concepts: resources sharing
- Instances where designers or users share resources, such as download links, development plans, or announcements.
- Information about where and how to access resources, files, or downloads related to Physics Lab.
- Instances where users or designers share files, images, or other resources with the community.

19.
Concepts: designer response
- Instances where designers respond to user feedback or suggestions.
- Instances where designers respond to user feedback or queries.
- Designers reacting to users' concerns or adding information.

20.
Concepts: development prioritization
- Instances where designers discuss the prioritization of different features or sections to be developed.
- Making decisions on the order of development priorities.

21.
Concepts: collaborative problem solving
- Moments where designers and users work together to address issues.
- Collaborative efforts between users and designers to solve issues and improve the product.
- Instances where users and designers work together to address issues or improve the software.

22.
Concepts: iterative development
- Instances where designers discuss updates, new features, or bug fixes.
- The process of repeatedly refining and improving a product based on feedback and testing.
- The process of continuously improving the product based on feedback and testing.
- Instances where the design process is described as iterative, with ongoing optimizations and updates.

23.
Concepts: promote community engagement
- Instances where members of the community actively participate in discussions, ask questions, or provide feedback.
- Instances where users or designers engage in discussions that foster community interaction and participation.
- Active participation and interaction among community members, including both users and designers.
- Efforts made by designers to actively involve and communicate with the user community.
- Facilitating and engaging in direct interaction with the community members.

24.
Concepts: encourage participatory design
- Instances where the community contributes to the design and development of the Physics Lab by providing suggestions or feedback that influence the development process.
- Instances where designers seek or consider user input in the design and development process.
- Instances where users are invited to participate in the design process or provide input.
- Instances where users and designers collaboratively discuss features and usability, reflecting a user-centered design approach.
- The involvement of users in the design and development process, contributing their insights and needs.
- Encouragement by designers for users to contribute ideas, feedback, and suggestions for the development of Physics Lab.
- Active involvement of users in the design process to ensure the product meets their needs and preferences.
- The involvement of users in the design process to ensure the product meets their needs and preferences.
- Instances where users and designers collaboratively discuss or work on design improvements.

25.
Concepts: user feedback integration
- Instances where user feedback is acknowledged and incorporated into the design process.
- Instances where user feedback is actively sought and incorporated into the design process.

26.
Concepts: feature prioritization
- Prioritizing which new features or components to develop and integrate first.
- Suggestions are made to prioritize specific areas or features over others for better refinement.

27.
Concepts: role identification
- Instances where users or designers identify their roles, which can help understand the community structure and the roles within it.
- Instances where participants identify their roles or expertise, contributing to the problem-solving process.
- Identifying roles within the community, such as designers, teachers, or other users.

28.
Concepts: feature suggestion
- Users suggest prioritizing the refinement of features rather than comprehensiveness.
- Suggestions are provided for improving features or adding new functionalities to the software.

29.
Concepts: personal interest expression
- Expressing personal interest or passion in a subject matter.
- Expressing a desire or personal interest in other potential areas of study or development.

30.
Concepts: informal communication
- Instances where the tone of the conversation is casual or informal, indicating the nature of the community's communication style.
- Casual and non-technical interactions among community members, including humor and personal remarks.

31.
Concepts: teaching experience
- Users specify their years and levels of teaching experience.
- User shares their teaching experience or educational background.

32.
Concepts: community announcement
- Group-wide notification about updates or production plans.
- Announcing updates or important information to the community.
===
---
Definitions for each code (32 in total):
1.
Concepts: feature guidance, feature usage guidance
Relationship: Synonymous repetition
Criteria: Users provide advice or instructions on how to use specific software features.
Phrase: Offering guidance on feature usage

2.
Concepts: comparison to similar apps, positive software comparison
Relationship: Both involve comparing the software favorably with others
Criteria: Users highlight the app's advantages by comparing it positively against similar applications.
Phrase: Favorably comparing the software

3.
Concepts: software usability, software comparison
Relationship: Both relate to evaluating the software's usability in comparison to other options
Criteria: Users discuss and compare the software's usability with other alternatives.
Phrase: Comparing software usability

4.
Concepts: context of use, usability and context of use
Relationship: Both involve describing how the software is used and its usability in different contexts
Criteria: Users discuss the specific contexts in which they use the software and its usability in those scenarios.
Phrase: Describing usability in context

5.
Concepts: positive student response, illustrate classroom success
Relationship: Both relate to describing positive outcomes in a classroom setting
Criteria: Users describe successful classroom usage of the software, highlighting positive student reactions.
Phrase: Highlighting classroom success

6.
Concepts: user experience, user experience and impact
Relationship: Both involve sharing personal experiences and the impact of the software
Criteria: Users share their experiences and the impact of the software on their teaching or learning.
Phrase: Sharing user experiences and impact

7.
Concepts: design/feature suggestion, suggest educational enhancements
Relationship: Both involve proposing improvements for educational purposes
Criteria: Users suggest features or functionalities to enhance the educational usability of the software.
Phrase: Suggesting educational feature enhancements

8.
Concepts: designer responsiveness
Relationship: N/A
Criteria: Designers respond to user feedback, queries, and suggestions, indicating active communication.
Phrase: Responding to user feedback

9.
Concepts: component adjustments
Relationship: N/A
Criteria: Designers discuss modifications and updates to software components to enhance or correct their behavior.
Phrase: Making component adjustments

10.
Concepts: educational background inquiry
Relationship: N/A
Criteria: Users or developers inquire about the educational background or teaching level of community members.
Phrase: Inquiring about educational background

11.
Concepts: community support
Relationship: N/A
Criteria: Community members express support, encouragement, or appreciation for the designers' efforts.
Phrase: Providing community support

12.
Concepts: user engagement
Relationship: N/A
Criteria: Users actively participate in conversations, showing interest and involvement in the community.
Phrase: Engaging in community conversations

13.
Concepts: feature appreciation
Relationship: N/A
Criteria: Users show appreciation for software features or aspects.
Phrase: Appreciating software features

14.
Concepts: technical constraints
Relationship: N/A
Criteria: Discussing limitations or constraints of the software.
Phrase: Highlighting technical constraints

15.
Concepts: user response
Relationship: N/A
Criteria: Users provide feedback, suggestions, or questions influencing the design process.
Phrase: Providing user feedback

16.
Concepts: review status update
Relationship: N/A
Criteria: Updating users on the status of a review or approval process.
Phrase: Updating review status

17.
Concepts: user-designer interaction
Relationship: N/A
Criteria: Collaborative interaction between users and designers contributing to the design process.
Phrase: Collaborating with designers

18.
Concepts: resources sharing
Relationship: N/A
Criteria: Users or designers share resources such as files, links, or announcements related to Physics Lab.
Phrase: Sharing community resources

19.
Concepts: designer response
Relationship: N/A
Criteria: Designers respond to user feedback or queries.
Phrase: Addressing user feedback

20.
Concepts: development prioritization
Relationship: N/A
Criteria: Designers discuss the prioritization of features or sections to be developed.
Phrase: Prioritizing development tasks

21.
Concepts: collaborative problem solving
Relationship: N/A
Criteria: Users and designers work together to address issues and improve the software.
Phrase: Solving problems collaboratively

22.
Concepts: iterative development
Relationship: N/A
Criteria: Designers discuss ongoing updates and improvements based on feedback and testing.
Phrase: Engaging in iterative development

23.
Concepts: promote community engagement
Relationship: N/A
Criteria: Users or designers engage in discussions to foster community participation and interaction.
Phrase: Encouraging community engagement

24.
Concepts: encourage participatory design
Relationship: N/A
Criteria: Users are invited to participate in the design process by providing feedback and suggestions.
Phrase: Inviting participatory design

25.
Concepts: user feedback integration
Relationship: N/A
Criteria: User feedback is acknowledged and incorporated into the design process.
Phrase: Integrating user feedback

26.
Concepts: feature prioritization
Relationship: N/A
Criteria: Prioritizing which features or areas to develop and refine first.
Phrase: Prioritizing features for development

27.
Concepts: role identification
Relationship: N/A
Criteria: Participants identify their roles or expertise within the community.
Phrase: Identifying roles in the community

28.
Concepts: feature suggestion
Relationship: N/A
Criteria: Users provide suggestions for improving features or adding new functionalities to the software.
Phrase: Suggesting new features

29.
Concepts: personal interest expression
Relationship: N/A
Criteria: Users express personal interest or passion in specific subject matters or development areas.
Phrase: Expressing personal interest

30.
Concepts: informal communication
Relationship: N/A
Criteria: Community members engage in casual and non-technical interactions.
Phrase: Communicating informally

31.
Concepts: teaching experience
Relationship: N/A
Criteria: Users share their years and levels of teaching experience.
Phrase: Sharing teaching experience

32.
Concepts: community announcement
Relationship: N/A
Criteria: Group-wide notifications about updates or production plans.
Phrase: Making community announcements
---