You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (19 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
19. 
Concepts: {Repeat the input 19}
Relationship: {What is logical relationship between concepts in code 19, or N/A if not applicable}
Criteria: {Who did what, and how for code 19}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: customize ai-generated code, selectively uses ai-generated code
- Users adapt, reference, and utilize AI-generated code in their own coding practices.
- Users selectively use AI-generated code, preferring to incorporate only relevant parts rather than copying directly.

2.
Concepts: ai utility, appreciate ai's usability
- Users acknowledge the utility of AI in enhancing productivity and efficiency.
- Users find the AI interface intuitive and express satisfaction with its usability and helpfulness.

3.
Concepts: recognizes ai's time-saving capabilities, acknowledges ai's time-saving potential
- Interviewees perceive that AI can save time in learning and problem-solving tasks.
- Users recognize AI's ability to save time in learning new extensions of NetLogo and in coding tasks.

4.
Concepts: value prompt feedback from ai, appreciates ai's ability to maintain task focus
- Interviewees appreciate AI's efficiency in providing quick and instant feedback on coding practices.
- Interviewees appreciate immediate access to documentation while coding, enhancing task focus.

5.
Concepts: envision collaborative feedback, suggest improvements to ai tools
- Users discuss collective knowledge sharing and the potential for user feedback to improve AI.
- Users propose a collaborative AI model and enhancements to AI tools based on user feedback.

6.
Concepts: evaluate decisions based on ai, evaluate ai outputs critically
- Users evaluate choices and make decisions based on AI-generated feedback.
- Users assess AI suggestions critically and evaluate the effectiveness of its outputs.

7.
Concepts: refine prompts for clarity, follow up with ai for clarification
- Users refine their requests and querying approach to clarify requirements for AI.
- Users follow up with additional questions to refine AI responses and demonstrate a tendency to ask for further clarification.

8.
Concepts: values flexibility, desire flexibility in ai interactions
- User values flexibility in AI responses, appreciating its capacity to deviate from conventions.
- Users express preferences for AI options that align with their experience level and desire flexibility.

9.
Concepts: standard practice, discuss help-seeking practices
- Users describe their experiences of seeking help through online communities or resources.
- Users discuss best practices for seeking help and strategies for clarity in online communities.

10.
Concepts: identify skills gaps for ai use, emphasizes the need for user expertise in ai usage
- Interviewees identify skills gaps and emphasize the importance of clear instruction writing for effective AI use.
- Interviewees discuss the necessity of user expertise to effectively utilize AI and avoid potential pitfalls.

11.
Concepts: reads through code manually, prefer hands-on debugging
- Users manually read and analyze code to troubleshoot issues independently.
- Users engage in debugging AI-generated code independently rather than relying on AI explanations.

12.
Concepts: identify ai constraints, identify coding issues
- Users identify current constraints in AI's ability to verify generated code.
- Users note issues with AI's understanding of specific coding tasks and identify problems with outdated code.

13.
Concepts: value ai's error clarification, emphasize error clarification
- Users appreciate AI's ability to clarify errors and provide clear, accessible explanations.
- Users highlight the necessity for AI to provide clear explanations and effective troubleshooting for errors.

14.
Concepts: value ai's error detection, request error detection features
- Users expect AI to detect errors and recognize its role in identifying subtle issues.
- Users call for enhanced features in AI that can identify conceptual errors in programming.

15.
Concepts: ai limitation, critique ai's limited options
- Outlines various limitations of AI, including unrealistic expectations from novices and issues with outdated functions.
- Users critique the limitations in AI options available to experienced users and the inadequacy of current implementations.

16.
Concepts: note ai getting stuck, express frustration with ai limitations
- Users express frustration with AI tools that become stuck and fail to resolve issues.
- Users express frustration with AI's inability to handle long code segments and limited problem-solving options.

17.
Concepts: suspects bug in ai, acknowledge ai's unpredictability
- Users suspect that there may be bugs in the AI's outputs based on their experiences with error messages.
- Users express concerns about AI's ability to handle errors and describe the unpredictability of its outputs.

18.
Concepts: address novice challenges, discuss novice challenges in using ai
- Users address novice challenges and reflect on the importance of developing debugging skills.
- Users discuss the challenges novices encounter in understanding and using AI for debugging.

19.
Concepts: dictate parameters to ai
- Users dictate parameters and initiate coding tasks with AI.
- Users dictate parameters and provide detailed instructions to the AI for specific requests.
===
---
Definitions for each code (19 in total):

1. 
Concepts: customize ai-generated code, selectively uses ai-generated code
Relationship: Users adapt AI-generated code to fit their needs while being selective about the parts they incorporate.
Criteria: Users customize and selectively use AI-generated code in their coding practices.
Phrase: Customizing AI-generated code.

2. 
Concepts: ai utility, appreciate ai's usability
Relationship: Users recognize the usefulness of AI while also valuing its ease of use.
Criteria: Users acknowledge the utility and usability of AI in enhancing productivity.
Phrase: Acknowledging AI's usability.

3. 
Concepts: recognizes ai's time-saving capabilities, acknowledges ai's time-saving potential
Relationship: Users perceive AI as a time-saving tool for various tasks.
Criteria: Interviewees recognize and acknowledge AI's potential to save time in learning and coding.
Phrase: Recognizing AI's time-saving potential.

4. 
Concepts: value prompt feedback from ai, appreciates ai's ability to maintain task focus
Relationship: Users value the efficiency of AI in providing feedback and enhancing focus during tasks.
Criteria: Interviewees appreciate prompt feedback and access to documentation from AI.
Phrase: Valuing prompt AI feedback.

5. 
Concepts: envision collaborative feedback, suggest improvements to ai tools
Relationship: Users see the potential for collaborative improvement of AI through feedback.
Criteria: Users envision collaborative feedback and suggest enhancements for AI tools.
Phrase: Envisioning collaborative AI feedback.

6. 
Concepts: evaluate decisions based on ai, evaluate ai outputs critically
Relationship: Users make informed decisions by critically assessing AI-generated feedback.
Criteria: Users evaluate choices based on and critically assess AI outputs.
Phrase: Evaluating AI outputs critically.

7. 
Concepts: refine prompts for clarity, follow up with ai for clarification
Relationship: Users improve communication with AI by refining prompts and seeking clarification.
Criteria: Users refine their prompts and follow up for further clarification with AI.
Phrase: Refining prompts for clarity.

8. 
Concepts: values flexibility, desire flexibility in ai interactions
Relationship: Users appreciate and seek flexibility in how AI responds to their queries.
Criteria: Users value and desire flexibility in AI interactions.
Phrase: Valuing flexibility in AI interactions.

9. 
Concepts: standard practice, discuss help-seeking practices
Relationship: Users share their help-seeking experiences and practices within communities.
Criteria: Users discuss standard help-seeking practices and experiences in online communities.
Phrase: Discussing help-seeking practices.

10. 
Concepts: identify skills gaps for ai use, emphasizes the need for user expertise in ai usage
Relationship: Users recognize the need for expertise to effectively utilize AI and identify skills gaps.
Criteria: Interviewees identify skills gaps and emphasize the need for user expertise in AI usage.
Phrase: Identifying skills gaps for AI use.

11. 
Concepts: reads through code manually, prefer hands-on debugging
Relationship: Users prefer manual troubleshooting methods over reliance on AI.
Criteria: Users read code manually and engage in hands-on debugging independently.
Phrase: Preferring hands-on debugging.

12. 
Concepts: identify ai constraints, identify coding issues
Relationship: Users recognize limitations in AI and coding issues it cannot address.
Criteria: Users identify constraints in AI and specific coding issues.
Phrase: Identifying AI constraints.

13. 
Concepts: value ai's error clarification, emphasize error clarification
Relationship: Users appreciate AI's role in clarifying errors and stress its importance.
Criteria: Users value and emphasize the need for AI to clarify errors effectively.
Phrase: Valuing AI's error clarification.

14. 
Concepts: value ai's error detection, request error detection features
Relationship: Users expect AI to detect errors and call for improved detection features.
Criteria: Users value AI's error detection capabilities and request enhanced features.
Phrase: Requesting error detection features.

15. 
Concepts: ai limitation, critique ai's limited options
Relationship: Users critique the limitations of AI in addressing their needs.
Criteria: Users outline AI's limitations and critique its available options.
Phrase: Critiquing AI's limitations.

16. 
Concepts: note ai getting stuck, express frustration with ai limitations
Relationship: Users express their frustrations regarding AI's inability to solve problems.
Criteria: Users note when AI gets stuck and express frustration about its limitations.
Phrase: Expressing frustration with AI limitations.

17. 
Concepts: suspects bug in ai, acknowledge ai's unpredictability
Relationship: Users express concerns about AI's reliability based on their experiences.
Criteria: Users suspect bugs in AI and acknowledge its unpredictability.
Phrase: Acknowledging AI's unpredictability.

18. 
Concepts: address novice challenges, discuss novice challenges in using ai
Relationship: Users reflect on the challenges faced by novices when using AI tools.
Criteria: Users address and discuss novice challenges in understanding AI.
Phrase: Discussing novice challenges in AI.

19. 
Concepts: dictate parameters to ai
Relationship: Users provide specific instructions to guide AI in their tasks.
Criteria: Users dictate parameters and provide detailed instructions for AI requests.
Phrase: Dictating parameters to AI.
---