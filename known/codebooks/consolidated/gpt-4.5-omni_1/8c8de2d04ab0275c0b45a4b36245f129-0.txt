You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (8 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
8. 
Concepts: {Repeat the input 8}
Relationship: {What is logical relationship between concepts in code 8, or N/A if not applicable}
Criteria: {Who did what, and how for code 8}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: novice challenges (negative), novice questioning challenge
- A user discusses the negative aspects of novice experiences with AI.
- Highlights the challenge novices face in asking the right questions to AI.

2.
Concepts: noting ai's limitations, doubting ai's error verification
- Users note AI's limitations, including outdated information and error handling.
- Users critique AI's limitations and express uncertainty about its error verification capabilities.

3.
Concepts: valuing ai's clear explanations, finding ai interface helpful for parameter clarification
- Users appreciate AI's clear explanations and seek its capability to clarify error codes and provide troubleshooting.
- Users appreciate the AI's ability to clarify parameters for tasks and find the interface helpful and intuitive.

4.
Concepts: implementing ai-generated code seamlessly, praising ai's troubleshooting capabilities
- Users successfully implement AI-generated code and praise its immediate functionality.
- Users express satisfaction and acknowledge AI's success in generating working code and resolving errors.

5.
Concepts: highlights time saving aspect, valuing ai's time-saving potential
- Users highlight the time-saving aspect of AI, especially for searching documentation and staying within the task.
- Users note and value AI's potential to significantly reduce the time required for tasks.

6.
Concepts: importance of expertise, highlighting expertise requirement for ai use
- A user discusses the importance of expertise in effectively using AI.
- Users emphasize the need for expertise to understand and manage AI errors.

7.
Concepts: querying ai for code elements, generating code with ai prompts
- Users search for specific syntax structures and identify missing elements in AI-generated code by querying AI.
- Users test AI with specific prompts, seek AI-generated code, and provide instructions for code generation.

8.
Concepts: requesting code verification, seeking ai assistance for troubleshooting
- Users request AI to verify code for specific issues.
- Users actively seek AI assistance for understanding and resolving coding issues.
===
---
Definitions for each code (8 in total):
1.
Concepts: novice challenges (negative), novice questioning challenge
Relationship: Both concepts relate to the difficulties faced by novices when interacting with AI.
Criteria: Novice users discuss the negative aspects of their experiences with AI, particularly the challenge of asking the right questions.
Phrase: Highlighting novice challenges

2.
Concepts: noting ai's limitations, doubting ai's error verification
Relationship: Both concepts involve users critiquing the limitations of AI, especially regarding error verification.
Criteria: Users note AI's limitations, including outdated information, and express uncertainty about its error verification capabilities.
Phrase: Critiquing AI limitations

3.
Concepts: valuing ai's clear explanations, finding ai interface helpful for parameter clarification
Relationship: Both concepts involve users appreciating the AI's ability to provide clear explanations and clarify parameters.
Criteria: Users appreciate AI's clear explanations and find the interface helpful for clarifying parameters and troubleshooting.
Phrase: Valuing AI clarity

4.
Concepts: implementing ai-generated code seamlessly, praising ai's troubleshooting capabilities
Relationship: Both concepts involve users successfully using AI-generated code and praising its troubleshooting capabilities.
Criteria: Users successfully implement AI-generated code and praise its immediate functionality and error resolution.
Phrase: Praising AI-generated code

5.
Concepts: highlights time saving aspect, valuing ai's time-saving potential
Relationship: Both concepts involve users recognizing and valuing the time-saving potential of AI.
Criteria: Users highlight and value the time-saving aspect of AI, especially for documentation searches and task efficiency.
Phrase: Valuing AI time-saving

6.
Concepts: importance of expertise, highlighting expertise requirement for ai use
Relationship: Both concepts emphasize the need for expertise to effectively use AI.
Criteria: Users discuss the importance of expertise in using AI and managing its errors.
Phrase: Emphasizing expertise need

7.
Concepts: querying ai for code elements, generating code with ai prompts
Relationship: Both concepts involve users interacting with AI to generate and refine code.
Criteria: Users query AI for specific syntax and elements, test AI with prompts, and seek AI-generated code.
Phrase: Querying AI for code

8.
Concepts: requesting code verification, seeking ai assistance for troubleshooting
Relationship: Both concepts involve users seeking AI's help for code verification and troubleshooting.
Criteria: Users request AI to verify code and actively seek its assistance for understanding and resolving coding issues.
Phrase: Seeking AI troubleshooting
---