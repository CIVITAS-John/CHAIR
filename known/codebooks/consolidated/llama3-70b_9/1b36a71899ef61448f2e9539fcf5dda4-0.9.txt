You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (16 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
16. 
Concepts: {Repeat the input 16}
Relationship: {What is logical relationship between concepts in code 16, or N/A if not applicable}
Criteria: {Who did what, and how for code 16}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: group sharing, suggest group sharing
- A designer suggests or recommends group sharing or collaboration.
- The designer suggests or promotes group sharing or collaboration.

2.
Concepts: access information, provide access information
- The designer answers a question about access to a resource or feature.
- The designer provides information about access to resources or features.

3.
Concepts: resource access, access instructions
- A designer provides information on how to access or download resources.
- A designer provides instructions on how to access or use resources.

4.
Concepts: share download link, sharing download information
- A designer shares a download link or resource with the community.
- The designer shares information about downloads, updates, or resources.

5.
Concepts: resource sharing, sharing community resources, shares information
- A designer shares resources with the community.
- A designer shares information about a download or a resource.
- A designer shares community resources or updates.
- A designer shares information or resources with the community.

6.
Concepts: download inquiry, requests download information
- User asks for download information or access
- A user inquires about download options or availability.
- User requests information about downloading or accessing the application.

7.
Concepts: resource direction, directing to resources
- Directing users to access or download specific files or resources.
- Directing users to resources, such as group files or downloads.

8.
Concepts: technical limitations, technical constraints
- Reiterating technical limitations or constraints.
- Describing technical limitations or constraints.
- Discussing limitations or constraints related to technical aspects.

9.
Concepts: reference technical constraints, highlight technical constraints
- User references technical constraints or limitations that affect the app's use.
- User highlights a technical constraint or limitation that affects the software's use.

10.
Concepts: acknowledge limitation, acknowledging limitations
- Acknowledging or mentioning limitations or constraints of a feature or tool.
- Designer acknowledges limitations or constraints, such as memory limitations.
- Designer acknowledges or explains the limitations of a particular feature or functionality.
- Acknowledgments of current limitations or constraints of the software.

11.
Concepts: acknowledges limitations, acknowledge interaction limitation
- A designer acknowledges limitations or constraints of a design or feature.
- A designer acknowledges the limitations or constraints of the software.

12.
Concepts: discuss limitations, explaining software limitations
- A designer discusses the limitations or constraints of the software.
- A designer explains the limitations of the current software version.

13.
Concepts: explain limitation, limitation of the team
- A designer explains a limitation or constraint of a design or feature.
- A designer mentions limitations or constraints faced by the team.

14.
Concepts: technical consideration, designer considers practical constraints
- Designer considers technical requirements or limitations.
- The designer considers or mentions practical constraints or limitations.

15.
Concepts: software clarification, clarify platform requirements
- The designer clarifies software limitations or constraints.
- A designer clarifies the technical requirements or limitations of the software.

16.
Concepts: hypothesizes compatibility, theorize about compatibility
- Designer hypothesizes or speculates about the compatibility of the application.
- Designer theorizes or speculates about compatibility or technical issues.
===
Here are the definitions for each code:

---
1.
Concepts: group sharing, suggest group sharing
Relationship: The two concepts are closely related, with "group sharing" being the action and "suggest group sharing" being the encouragement of that action.
Criteria: Designer suggests or promotes group sharing or collaboration.
Phrase: Suggesting group sharing.

2.
Concepts: access information, provide access information
Relationship: The two concepts are closely related, with "access information" being the information and "provide access information" being the action of giving that information.
Criteria: Designer provides information about access to resources or features.
Phrase: Providing access information.

3.
Concepts: resource access, access instructions
Relationship: The two concepts are closely related, with "resource access" being the goal and "access instructions" being the means to achieve it.
Criteria: Designer provides instructions on how to access or use resources.
Phrase: Providing access instructions.

4.
Concepts: share download link, sharing download information
Relationship: The two concepts are closely related, with "share download link" being a specific action and "sharing download information" being the broader goal.
Criteria: Designer shares information about downloads, updates, or resources.
Phrase: Sharing download information.

5.
Concepts: resource sharing, sharing community resources, shares information
Relationship: The three concepts are closely related, with "resource sharing" being the action, "sharing community resources" being a specific type of sharing, and "shares information" being a broader goal.
Criteria: Designer shares resources with the community.
Phrase: Sharing community resources.

6.
Concepts: download inquiry, requests download information
Relationship: The two concepts are closely related, with "download inquiry" being the question and "requests download information" being the request.
Criteria: User asks for download information or access.
Phrase: Requesting download information.

7.
Concepts: resource direction, directing to resources
Relationship: The two concepts are closely related, with "resource direction" being the action and "directing to resources" being the goal.
Criteria: Directing users to access or download specific files or resources.
Phrase: Directing to resources.

8.
Concepts: technical limitations, technical constraints
Relationship: The two concepts are synonymous, both referring to limitations or constraints related to technical aspects.
Criteria: Reiterating technical limitations or constraints.
Phrase: Describing technical limitations.

9.
Concepts: reference technical constraints, highlight technical constraints
Relationship: The two concepts are closely related, with "reference technical constraints" being a mention and "highlight technical constraints" being a emphasis.
Criteria: User references technical constraints or limitations that affect the app's use.
Phrase: Referencing technical constraints.

10.
Concepts: acknowledge limitation, acknowledging limitations
Relationship: The two concepts are closely related, with "acknowledge limitation" being the action and "acknowledging limitations" being the goal.
Criteria: Acknowledging or mentioning limitations or constraints of a feature or tool.
Phrase: Acknowledging limitations.

11.
Concepts: acknowledges limitations, acknowledge interaction limitation
Relationship: The two concepts are closely related, with "acknowledges limitations" being the action and "acknowledge interaction limitation" being a specific type of limitation.
Criteria: Designer acknowledges limitations or constraints of a design or feature.
Phrase: Acknowledging limitations.

12.
Concepts: discuss limitations, explaining software limitations
Relationship: The two concepts are closely related, with "discuss limitations" being the action and "explaining software limitations" being the goal.
Criteria: A designer discusses the limitations or constraints of the software.
Phrase: Discussing software limitations.

13.
Concepts: explain limitation, limitation of the team
Relationship: The two concepts are closely related, with "explain limitation" being the action and "limitation of the team" being a specific type of limitation.
Criteria: A designer explains a limitation or constraint of a design or feature.
Phrase: Explaining limitations.

14.
Concepts: technical consideration, designer considers practical constraints
Relationship: The two concepts are closely related, with "technical consideration" being the thought process and "designer considers practical constraints" being the action.
Criteria: Designer considers technical requirements or limitations.
Phrase: Considering technical constraints.

15.
Concepts: software clarification, clarify platform requirements
Relationship: The two concepts are closely related, with "software clarification" being the goal and "clarify platform requirements" being the action.
Criteria: The designer clarifies software limitations or constraints.
Phrase: Clarifying software constraints.

16.
Concepts: hypothesizes compatibility, theorize about compatibility
Relationship: The two concepts are closely related, with "hypothesizes compatibility" being a specific type of theorizing and "theorize about compatibility" being the broader goal.
Criteria: Designer hypothesizes or speculates about the compatibility of the application.
Phrase: Hypothesizing compatibility.