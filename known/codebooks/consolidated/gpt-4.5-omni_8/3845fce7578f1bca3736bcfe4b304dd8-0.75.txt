You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (64 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
64. 
Concepts: {Repeat the input 64}
Relationship: {What is logical relationship between concepts in code 64, or N/A if not applicable}
Criteria: {Who did what, and how for code 64}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: affirming user point, acknowledge designer's point
- The designer affirms or agrees with a user's point or suggestion.
- Agreeing with or acknowledging another person’s point.

2.
Concepts: acknowledge understanding, acknowledge confirmation
- When a designer acknowledges understanding or agreement.
- When a designer acknowledges or confirms a statement without adding new information.

3.
Concepts: show consideration, acknowledge potential inconvenience
- Showing consideration for others by apologizing for any inconvenience caused.
- Apologies for any disruptions or inconvenience caused, generally to be considerate of users.

4.
Concepts: apology, apology for disturbance
- The designer issues an apology for any inconvenience or disturbance caused.
- Designers apologize for any inconvenience caused to the users.

5.
Concepts: politeness, user politeness
- Participants use polite language in their communication.
- Users display politeness or courtesy in their communication.

6.
Concepts: self-help, self-sufficiency
- Indicates the user's ability to find or handle information independently.
- Indicates self-sufficiency in finding information or resources.

7.
Concepts: involving users, user involvement
- Instances where designers actively involve users in the design process.
- Instances where users are involved in the design process, either through feedback or testing.

8.
Concepts: co-designing with users, user-designer interaction
- Involving users in the design process, allowing them to contribute ideas and make decisions.
- The collaborative interaction between users and designers that contributes to the design process.

9.
Concepts: seeking community input, solicit suggestions and requirements
- Asking for feedback or opinions from the community before proceeding.
- Soliciting suggestions and requirements from the community.

10.
Concepts: feedback request, solicit suggestions, encourage feedback, suggestions of interactions, prompting user feedback
- A designer asks users to provide more suggestions.
- Designer soliciting further suggestions from users.
- A request made by a designer seeking suggestions or feedback from users.
- When a designer invites users to provide suggestions or feedback.
- A designer prompts users to provide feedback and suggestions.

11.
Concepts: feedback invitation, feedback solicitation, feature request invitation
- Designers invite users to provide feedback, suggestions, or report issues.
- Designers ask for user suggestions or feedback on the software or its features.
- Designers invite users to suggest new features or improvements.

12.
Concepts: encouraging feedback, encouragement of user feedback
- Encourages users to provide more feedback or suggestions.
- Instances where designers encourage users to provide suggestions or feedback.

13.
Concepts: inviting more questions, encourage future discussion or questions
- A designer invites users to ask more questions or raise issues.
- A designer encourages users to ask future questions and discuss issues openly.

14.
Concepts: encouraging discussion, encouraging interaction
- A designer encourages users to discuss issues or give feedback.
- A designer encourages users to suggest features and ask questions in the group.

15.
Concepts: user needs inquiry, designer inquiry, understanding user needs
- Designers inquire about the needs or preferences of users.
- Instances where designers seek input or clarification from users to better understand their needs.
- The designer inquires about specific issues users may be encountering.

16.
Concepts: user experience inquiry, gathering user feedback
- Designers seek feedback on user experiences with the software.
- A designer solicits user insights about software usage challenges.

17.
Concepts: seeking feedback, eliciting feedback
- A designer seeks feedback from users on features and components.
- A designer actively seeks feedback on specific features or components.

18.
Concepts: seeking input, gather user input
- When a designer seeks input or suggestions from users.
- A designer gathers input from users regarding specific design choices.

19.
Concepts: feedback loop, community feedback loop
- Processes where user feedback is solicited and incorporated into design decisions.
- The process of collecting, considering, and implementing user feedback.
- Instances where users provide feedback on the software and designers respond to it.

20.
Concepts: planning for iterative feedback, iterative development based on user feedback
- A designer plans to gather feedback iteratively before making changes.
- A designer discusses iterative development processes based on feedback.

21.
Concepts: expert homage, paying respect
- Users show respect to experts before making requests for features.
- A user shows respect to experts before making a feature request.

22.
Concepts: promise to improve, improvement commitment
- Designer promising to improve the software based on feedback or future plans.
- A designer commits to improving the software based on user support.

23.
Concepts: accepting suggestion, acceptance of suggestion, suggestion implementation approval
- A designer agrees to incorporate a user's suggestion in a future update.
- Designers confirm that a user's suggestion will be implemented.
- A designer agrees to implement a user's suggestion in the next update.

24.
Concepts: set user expectations, set timeline expectation, expectation management
- Designers set or manage user expectations regarding timelines or deliverables.
- A designer sets expectations regarding the timeline for feature releases.
- A designer manages user expectations regarding the scope and timeline of features.

25.
Concepts: reassuring users, reassurance
- The designer reassures users about concerns or future updates.
- Instances where designers reassure users about the progress and express gratitude or encouragement.

26.
Concepts: answer a concern, resolve user concern
- When a designer responds to a concern or assures users.
- Designer addressing and resolving a user concern.

27.
Concepts: request private message, private messaging request
- Requests that the user send a message privately to discuss specific needs.
- A designer asks a user to send a private message for further details.

28.
Concepts: designer response, respond to user feedback
- Instances where designers respond to user feedback or suggestions.
- Instances where designers respond to user feedback or queries.
- A designer responds to various user inquiries and comments.
- A designer responds to user feedback with a specific acknowledgment or action.

29.
Concepts: response to question, response to clarification
- When a designer or user responds to a question with further detail or clarification.
- Designer providing a response to a clarification question or concern.

30.
Concepts: offer solution, offer a solution
- A designer offers solutions to technical issues or questions raised by users.
- A designer offers a solution or clarification in response to a user’s query.

31.
Concepts: technical support, technical support and guidance
- Instances where designers or users provide technical assistance or address technical issues.
- Instances where designers provide technical support or information about the software.
- Instances where designers provide technical support or guidance to users.

32.
Concepts: offer help, user support
- When a designer offers help or support to users.
- Assistance and support provided by designers to help users effectively use the product.

33.
Concepts: gives an answer, explains the answer
- Providing answers to questions or clarifying doubts raised by users.
- Explanation provided by a user to answer a question or clarify a situation.

34.
Concepts: follow-up inquiry, ask follow-up questions on user requests, usage scenario inquiry
- Designers ask follow-up questions to better understand user needs.
- Designers asking users for more detailed information regarding their requests or requirements.
- Designers ask follow-up questions about usage scenarios.

35.
Concepts: request clarification, clarification request, clarification question
- Designers ask for clarification or further details about a request.
- Users or designers ask for clarification or further details about a topic.
- Designer asking users to clarify problems or issues they have encountered.

36.
Concepts: user inquiry, request for information
- Questions or requests for information made by users regarding the use or functionalities of Physics Lab.
- Instances where users ask for specific information or help regarding the use or features of Physics Lab.

37.
Concepts: feature request, feature requests for physics experiments
- Instances where users request new features or improvements for the Physics Lab tool.
- Suggestions from users about desired features or improvements for the software.
- A user makes a detailed request for new features or experiments.
- Users request the addition of features to conduct specific physics experiments.

38.
Concepts: experiment request, feature expansion request
- A user requests additional types of experiments to be included.
- Users ask for the inclusion of additional experiments or features.

39.
Concepts: user suggestion, user feedback and suggestions, suggestion and feedback
- Users provide suggestions for improving or adding to the software.
- Instances where users provide feedback or suggestions about the software.
- Users providing feedback or suggestions on features and improvements for the software.
- Users providing feedback or suggestions to improve the software.
- Users providing suggestions or feedback on the software's features or development direction.

40.
Concepts: usability improvement, usability enhancement request
- Instances where suggestions or changes are made to improve the usability of the software.
- A user proposes a specific improvement to the software related to usability.

41.
Concepts: suggest new features, propose another feature
- Users suggest new features or improvements to the software.
- Users propose additional features to enhance the software’s functionality.

42.
Concepts: feature suggestion, design suggestion, suggesting improvements
- When a user suggests a specific feature or improvement.
- Users or designers make suggestions for software improvements or features.
- Users make suggestions related to design aspects or usability improvements.
- A user suggests improvements or additional functionalities.

43.
Concepts: user requests, request specific features
- Instances where users request new features or improvements.
- Specific features or improvements requested by users.
- When a user requests specific features to be included in the software.

44.
Concepts: justify request, gives reason for it, request justification
- When a user gives reasons for requesting a specific feature or manual.
- User providing a reason or justification for a feature request or suggestion.
- A user explains the reasons behind their request for a feature.

45.
Concepts: gather context, seeking context
- Collecting contextual information from users.
- When a designer seeks contextual information from the user.

46.
Concepts: design thoughts, simplification suggestion
- A designer shares thoughts on simplifying the design of the software.
- A designer suggests making the software simpler.

47.
Concepts: feature improvement, feature simplification
- Mentions or suggestions aimed at making features or tools more efficient or user-friendly.
- Comments or suggestions aimed at making features simpler or more user-friendly.

48.
Concepts: design refinement, simplification and refinement in design
- Calls for making the design or features more straightforward or user-friendly.
- Comments that focus on the simplification and refinement of design features.

49.
Concepts: suggesting alternative solution, providing alternative suggestion
- The user suggests an alternative solution or approach to an issue.
- A user offers an alternative approach to a problem or design.

50.
Concepts: offer special tips, providing practical advice
- A designer provides specific tips and shortcuts for using the software effectively.
- A designer offers practical advice or tips for using the software.

51.
Concepts: feature guidance, giving usage instructions
- Designers provide instructions or guidance on using specific features.
- A designer provides instructions on how to use specific features.

52.
Concepts: explanation, feature explanation, explaining functionality, giving example of feature's functions
- A designer explains a feature or functionality to users.
- A designer explains the functionality of a feature in detail.
- A designer explains the functionality of a component.
- A designer gives an example of how a feature functions.

53.
Concepts: feature examples, providing feature details
- The designer gives examples of features to clarify their explanation or plans.
- A designer offers details about certain features.

54.
Concepts: feature clarification, technical clarification
- Designers clarify how an existing feature works.
- The designer offers technical clarification about a feature or component.

55.
Concepts: design principles, explain design philosophy
- Designers explain the principles or philosophy behind the design decisions.
- The underlying principles and approaches guiding the design and development of the product.

56.
Concepts: explain focus areas, design intent explanation
- Designers explain the focus areas or scope of the application.
- Designers explain the focus and scope of the app's design.

57.
Concepts: local export support, considering local export functionality
- A designer mentions the need for supporting local export.
- A designer mentions the need to support local export functionality.

58.
Concepts: align with educational needs, align with educational standards
- Designer aligning software features with educational needs or curriculum requirements.
- Aligning software features with common educational standards and practices.

59.
Concepts: context of use, usability and context of use
- Instances where users describe the specific contexts in which they use the software.
- Discussions about how the software is used in different contexts and its usability.

60.
Concepts: touch screen functionality, informing about touch screens
- The designer provides information about touch screen capabilities or limitations.
- The designer informs users about touch screen features or functions clearly.

61.
Concepts: input method discussion, soft keyboard consideration
- A designer discusses input methods and the need for a soft keyboard.
- When discussing considerations for software design, such as input methods.

62.
Concepts: frustration, user frustration
- Expressing dissatisfaction or annoyance about the system or experience.
- The user expresses frustration or dissatisfaction with a particular issue.

63.
Concepts: system limitations, system limitation explanation
- Describes limitations or issues related to the system or hardware.
- Explaining why a feature or solution cannot be implemented due to limitations of the operating system or platform.

64.
Concepts: explain limitation, explain current version's limitation
- A designer explains limitations or restrictions related to the software.
- Designers explain limitations or current constraints of the software version.
===
---
Definitions for each code (64 in total):
1.
Concepts: affirming user point, acknowledge designer's point
Relationship: Agreement or acknowledgment by the designer towards the user's suggestion or point.
Criteria: Designers affirm or agree with user suggestions or points.
Phrase: Affirm user points

2.
Concepts: acknowledge understanding, acknowledge confirmation
Relationship: Acknowledging understanding or agreement without additional input.
Criteria: Designers acknowledge understanding or agreement with user statements without adding new information.
Phrase: Acknowledge understanding

3.
Concepts: show consideration, acknowledge potential inconvenience
Relationship: Showing consideration and acknowledging inconvenience.
Criteria: Designers show consideration by apologizing for potential inconveniences caused.
Phrase: Show consideration for inconvenience

4.
Concepts: apology, apology for disturbance
Relationship: Issuing an apology for causing disturbance or inconvenience.
Criteria: Designers apologize for any inconvenience or disturbance caused to users.
Phrase: Apologize for disturbance

5.
Concepts: politeness, user politeness
Relationship: Display of politeness in communication.
Criteria: Participants use polite language in their communication.
Phrase: Display politeness

6.
Concepts: self-help, self-sufficiency
Relationship: Indicating the ability to handle tasks independently.
Criteria: Users exhibit self-sufficiency by independently finding information or resources.
Phrase: Demonstrate self-sufficiency

7.
Concepts: involving users, user involvement
Relationship: Active involvement of users by designers in the design process.
Criteria: Designers actively involve users in the design process through feedback or testing.
Phrase: Involve users in design

8.
Concepts: co-designing with users, user-designer interaction
Relationship: Collaborative interaction in the design process.
Criteria: Users and designers collaboratively interact to contribute to the design process.
Phrase: Collaborate with users

9.
Concepts: seeking community input, solicit suggestions and requirements
Relationship: Soliciting feedback from the community before proceeding.
Criteria: Designers ask for community feedback or opinions before making decisions.
Phrase: Seek community input

10.
Concepts: feedback request, solicit suggestions, encourage feedback, suggestions of interactions, prompting user feedback
Relationship: Designers requesting or encouraging feedback and suggestions.
Criteria: Designers ask users to provide suggestions or feedback.
Phrase: Request user feedback

11.
Concepts: feedback invitation, feedback solicitation, feature request invitation
Relationship: Designers inviting feedback or feature suggestions from users.
Criteria: Designers invite users to provide feedback, suggest features, or report issues.
Phrase: Solicit user feedback

12.
Concepts: encouraging feedback, encouragement of user feedback
Relationship: Encouraging users to provide feedback.
Criteria: Designers encourage users to provide feedback or suggestions.
Phrase: Encourage user feedback

13.
Concepts: inviting more questions, encourage future discussion or questions
Relationship: Designers inviting or encouraging future questions and discussions.
Criteria: Designers invite users to ask more questions or raise issues in future discussions.
Phrase: Invite user questions

14.
Concepts: encouraging discussion, encouraging interaction
Relationship: Encouragement of user discussion and interaction.
Criteria: Designers encourage users to discuss issues, suggest features, and ask questions.
Phrase: Encourage user interaction

15.
Concepts: user needs inquiry, designer inquiry, understanding user needs
Relationship: Designers inquiring to understand user needs.
Criteria: Designers inquire about user needs or preferences to better understand their requirements.
Phrase: Inquire about user needs

16.
Concepts: user experience inquiry, gathering user feedback
Relationship: Seeking user feedback on their experiences.
Criteria: Designers solicit user feedback on their experiences with the software.
Phrase: Gather user experience feedback

17.
Concepts: seeking feedback, eliciting feedback
Relationship: Actively seeking feedback from users.
Criteria: Designers actively seek feedback on features and components from users.
Phrase: Seek user feedback

18.
Concepts: seeking input, gather user input
Relationship: Gathering input or suggestions from users.
Criteria: Designers seek and gather input or suggestions from users.
Phrase: Gather user input

19.
Concepts: feedback loop, community feedback loop
Relationship: Process of collecting and incorporating user feedback.
Criteria: Designers collect, consider, and implement user feedback in the design process.
Phrase: Implement feedback loop

20.
Concepts: planning for iterative feedback, iterative development based on user feedback
Relationship: Planning iterative processes based on feedback.
Criteria: Designers plan to gather feedback iteratively and discuss iterative development processes based on user feedback.
Phrase: Plan iterative feedback

21.
Concepts: expert homage, paying respect
Relationship: Showing respect to experts before making requests.
Criteria: Users show respect to experts before making feature requests.
Phrase: Pay respect to experts

22.
Concepts: promise to improve, improvement commitment
Relationship: Commitment to improving the software.
Criteria: Designers promise to improve the software based on feedback or future plans.
Phrase: Commit to improvement

23.
Concepts: accepting suggestion, acceptance of suggestion, suggestion implementation approval
Relationship: Agreeing to incorporate user suggestions.
Criteria: Designers agree to implement user suggestions in future updates.
Phrase: Accept user suggestions

24.
Concepts: set user expectations, set timeline expectation, expectation management
Relationship: Managing user expectations regarding timelines or deliverables.
Criteria: Designers set and manage user expectations about timelines and feature releases.
Phrase: Manage user expectations

25.
Concepts: reassuring users, reassurance
Relationship: Reassuring users about concerns or future updates.
Criteria: Designers reassure users about progress and future updates.
Phrase: Reassure users

26.
Concepts: answer a concern, resolve user concern
Relationship: Addressing and resolving user concerns.
Criteria: Designers respond to and resolve user concerns.
Phrase: Address user concerns

27.
Concepts: request private message, private messaging request
Relationship: Requesting private communication for specific needs.
Criteria: Designers ask users to send private messages for further details.
Phrase: Request private message

28.
Concepts: designer response, respond to user feedback
Relationship: Responding to user feedback or queries.
Criteria: Designers respond to user feedback, inquiries, and suggestions.
Phrase: Respond to user feedback

29.
Concepts: response to question, response to clarification
Relationship: Providing responses or clarifications to questions.
Criteria: Designers respond to questions or provide clarifications.
Phrase: Provide response to questions

30.
Concepts: offer solution, offer a solution
Relationship: Offering solutions to technical issues or questions.
Criteria: Designers offer solutions or clarifications to user queries.
Phrase: Offer solutions

31.
Concepts: technical support, technical support and guidance
Relationship: Providing technical assistance or addressing issues.
Criteria: Designers provide technical support or guidance to users.
Phrase: Provide technical support

32.
Concepts: offer help, user support
Relationship: Offering help or support to users.
Criteria: Designers offer assistance and support to help users effectively use the product.
Phrase: Offer user support

33.
Concepts: gives an answer, explains the answer
Relationship: Providing and explaining answers to questions.
Criteria: Providing answers and explanations to user questions.
Phrase: Explain answers

34.
Concepts: follow-up inquiry, ask follow-up questions on user requests, usage scenario inquiry
Relationship: Asking follow-up questions for better understanding.
Criteria: Designers ask follow-up questions to understand user needs and scenarios.
Phrase: Ask follow-up questions

35.
Concepts: request clarification, clarification request, clarification question
Relationship: Asking for clarification or further details.
Criteria: Designers ask for clarification or further details about user requests or issues.
Phrase: Request clarification

36.
Concepts: user inquiry, request for information
Relationship: User questions or requests for information.
Criteria: Users ask for specific information or help regarding the use of Physics Lab.
Phrase: Make user inquiries

37.
Concepts: feature request, feature requests for physics experiments
Relationship: Requesting new features or improvements.
Criteria: Users request new features or improvements for the Physics Lab tool.
Phrase: Request new features

38.
Concepts: experiment request, feature expansion request
Relationship: Requesting additional experiments or features.
Criteria: Users request additional types of experiments or expanded features.
Phrase: Request additional experiments

39.
Concepts: user suggestion, user feedback and suggestions, suggestion and feedback
Relationship: Providing feedback or suggestions for improvement.
Criteria: Users provide feedback or suggestions for software improvements.
Phrase: Provide user suggestions

40.
Concepts: usability improvement, usability enhancement request
Relationship: Suggesting improvements for usability.
Criteria: Users suggest specific improvements to enhance the software's usability.
Phrase: Suggest usability improvements

41.
Concepts: suggest new features, propose another feature
Relationship: Suggesting new features or improvements.
Criteria: Users propose additional features or improvements to enhance functionality.
Phrase: Propose new features

42.
Concepts: feature suggestion, design suggestion, suggesting improvements
Relationship: Suggesting specific features or design improvements.
Criteria: Users suggest specific features or design improvements for the software.
Phrase: Suggest design improvements

43.
Concepts: user requests, request specific features
Relationship: Requesting specific features or improvements.
Criteria: Users request specific features or improvements for the software.
Phrase: Request specific features

44.
Concepts: justify request, gives reason for it, request justification
Relationship: Providing reasons for feature requests.
Criteria: Users give reasons or justifications for their feature requests.
Phrase: Justify feature requests

45.
Concepts: gather context, seeking context
Relationship: Collecting contextual information.
Criteria: Designers seek contextual information from users.
Phrase: Seek user context

46.
Concepts: design thoughts, simplification suggestion
Relationship: Sharing thoughts on design simplification.
Criteria: Designers share thoughts on simplifying the software design.
Phrase: Suggest design simplification

47.
Concepts: feature improvement, feature simplification
Relationship: Suggesting improvements or simplification of features.
Criteria: Users or designers suggest making features more efficient or user-friendly.
Phrase: Suggest feature improvements

48.
Concepts: design refinement, simplification and refinement in design
Relationship: Calling for simplification and refinement of design.
Criteria: Comments focus on simplifying and refining design features.
Phrase: Refine design

49.
Concepts: suggesting alternative solution, providing alternative suggestion
Relationship: Offering alternative solutions or approaches.
Criteria: Users suggest alternative solutions or approaches to issues.
Phrase: Provide alternative solutions

50.
Concepts: offer special tips, providing practical advice
Relationship: Offering practical advice or tips.
Criteria: Designers provide specific tips and practical advice for using the software.
Phrase: Offer practical tips

51.
Concepts: feature guidance, giving usage instructions
Relationship: Providing instructions or guidance on features.
Criteria: Designers provide instructions on how to use specific features.
Phrase: Provide feature guidance

52.
Concepts: explanation, feature explanation, explaining functionality, giving example of feature's functions
Relationship: Explaining features or functionalities.
Criteria: Designers explain the functionality of features with examples.
Phrase: Explain feature functionality

53.
Concepts: feature examples, providing feature details
Relationship: Providing examples to clarify features.
Criteria: Designers give examples to clarify feature explanations.
Phrase: Provide feature examples

54.
Concepts: feature clarification, technical clarification
Relationship: Clarifying technical aspects of features.
Criteria: Designers clarify how existing features work.
Phrase: Clarify technical aspects

55.
Concepts: design principles, explain design philosophy
Relationship: Explaining design principles or philosophy.
Criteria: Designers explain the principles or philosophy behind design decisions.
Phrase: Explain design principles

56.
Concepts: explain focus areas, design intent explanation
Relationship: Explaining focus areas or design intent.
Criteria: Designers explain the focus areas or scope of the application.
Phrase: Explain design intent

57.
Concepts: local export support, considering local export functionality
Relationship: Mentioning the need for local export support.
Criteria: Designers mention the need to support local export functionality.
Phrase: Consider local export support

58.
Concepts: align with educational needs, align with educational standards
Relationship: Aligning features with educational standards.
Criteria: Designers align software features with educational needs or curriculum requirements.
Phrase: Align with educational standards

59.
Concepts: context of use, usability and context of use
Relationship: Describing specific contexts of software use and usability.
Criteria: Users describe how the software is used in different contexts and discuss its usability.
Phrase: Describe context of use

60.
Concepts: touch screen functionality, informing about touch screens
Relationship: Providing information about touch screen capabilities.
Criteria: Designers inform users about touch screen features or limitations.
Phrase: Inform about touch screen functionality

61.
Concepts: input method discussion, soft keyboard consideration
Relationship: Discussing input methods and need for a soft keyboard.
Criteria: Designers discuss input methods, including the need for a soft keyboard.
Phrase: Discuss input methods

62.
Concepts: frustration, user frustration
Relationship: Expressing dissatisfaction or annoyance.
Criteria: Users express frustration or dissatisfaction with a particular issue.
Phrase: Express user frustration

63.
Concepts: system limitations, system limitation explanation
Relationship: Describing limitations related to the system or hardware.
Criteria: Designers explain system or hardware limitations affecting features.
Phrase: Explain system limitations

64.
Concepts: explain limitation, explain current version's limitation
Relationship: Explaining software limitations or restrictions.
Criteria: Designers explain limitations or constraints of the current software version.
Phrase: Explain software limitations
---