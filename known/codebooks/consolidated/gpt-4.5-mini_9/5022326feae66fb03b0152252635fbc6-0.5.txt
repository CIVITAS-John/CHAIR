You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (22 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
22. 
Concepts: {Repeat the input 22}
Relationship: {What is logical relationship between concepts in code 22, or N/A if not applicable}
Criteria: {Who did what, and how for code 22}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: address and confirm compatibility, analyze and suggest compatibility checks
- Designers provide answers to compatibility questions and assure users of the software's compatibility.
- Designers analyze compatibility issues and suggest checking system requirements.

2.
Concepts: make and articulate design decisions, plan and justify development decisions
- Designers make design decisions and articulate their principles and rationale.
- Designers engage in long-term planning and explain the benefits of features while providing rationale for development decisions.

3.
Concepts: offer solutions to issues, offer and provide user support
- Designers provide solutions to users regarding software functionalities and issues.
- Designers offer and provide technical support to users experiencing software issues.

4.
Concepts: respond, demonstrate designer responsiveness
- Designers respond to user inquiries with relevant information or updates.
- Designers respond to user inquiries and engage with feedback, showing attentiveness to user needs.

5.
Concepts: solicit and invite feedback, acknowledge and appreciate user feedback
- Designers solicit user feedback and invite suggestions for new features.
- Designers acknowledge and express gratitude for user feedback and invite further input.

6.
Concepts: share potential solutions, address and share usability solutions
- Designer shares a solution or approach based on user feedback.
- Designers address usability concerns and share workarounds with users.

7.
Concepts: gather user context, inquire about user needs
- Designers gather context by asking users about their teaching situations and challenges.
- Designers seek input and assistance from teachers regarding software content.

8.
Concepts: plan and discuss feature development, discuss future planning and design considerations
- Designers share and discuss plans for current and future feature development within the product.
- Designers and developers discuss future plans and considerations regarding software development.

9.
Concepts: communication of updates, provide platform-specific updates
- Instances where designers communicate updates, release schedules, or new features to users.
- Designers communicate platform-specific updates and information.

10.
Concepts: clarify and update testing and review statuses, describe and provide information on version updates
- Designers clarify the testing status of software versions and update users on the review and release statuses.
- Designers describe version updates and clarify their scope and type while giving additional details about the version uploaded for community use.

11.
Concepts: promise to improve, acknowledge and commit to improvements
- Designers promise improvements in response to user feedback.
- Designers acknowledge user requests and commit to their implementation.

12.
Concepts: discuss and explain design challenges, compare and elaborate on feature complexities
- Designers discuss challenges and explain complexities encountered in software development.
- Designers compare and elaborate on the complexity of different features or tasks.

13.
Concepts: detail educational benefits, explain and detail simulation enhancements
- The designer describes the educational benefits of a planned feature in the software.
- Designers explain enhancements to simulation features and detail simulated experiments for educational applications.

14.
Concepts: make community announcements, facilitate community engagement
- Designers announce future plans and engage the community for feedback.
- Designers engage with the community by asking questions and sharing updates.

15.
Concepts: share information, engage and share information
- Instances where participants share information or resources to solve a problem or answer a question.
- Users ask questions to gain knowledge and share resources related to the software.

16.
Concepts: promote collaborative learning, share resources and support knowledge exchange
- Designers promote collaborative learning through resource sharing within the community.
- Designers and users share resources and knowledge related to software development and usage.

17.
Concepts: group communication, provide and share access information
- Designers communicate updates or information within a group setting.
- Designers provide access information and share development plans in group announcements.

18.
Concepts: acknowledge and express receipt, confirm and acknowledge information finding
- Users acknowledge receipt of shared information and express acknowledgment of messages.
- A user acknowledges the receipt of information and confirms finding what they were looking for.

19.
Concepts: express and discuss school needs, mention and discuss technical challenges
- Users express the needs of their school regarding technology and describe relevant initiatives.
- Users highlight technical constraints and discuss challenges related to technology use in schools.

20.
Concepts: explain feature requests, justify and express need for documentation
- Users explain their requests and provide justifications.
- Users justify their request for the software's user manual and express the need for documentation.

21.
Concepts: usability improvement, suggest and propose design improvements
- Instances where suggestions or changes are made to improve the usability of the software.
- Designers suggest simplifications, refine the design, adjust features, and propose ideas to enhance software functionality.

22.
Concepts: elaborate on questions, further and elaborate on suggestions
- Users elaborate on questions or provide additional context in the conversation.
- Users provide further suggestions, and designers elaborate on them while encouraging discussion.
===
---
Definitions for each code (22 in total):
1.
Concepts: address and confirm compatibility, analyze and suggest compatibility checks
Relationship: Designers provide assurance and solutions regarding compatibility through analysis and suggestions.
Criteria: Designers answer compatibility questions and analyze issues while suggesting checks for system requirements.
Phrase: Confirm and analyze compatibility.

2.
Concepts: make and articulate design decisions, plan and justify development decisions
Relationship: Designers create and explain their design choices while planning for future development.
Criteria: Designers make design decisions and articulate their rationale while engaging in long-term planning.
Phrase: Articulate and plan design decisions.

3.
Concepts: offer solutions to issues, offer and provide user support
Relationship: Designers provide assistance by solving problems and offering technical support.
Criteria: Designers offer solutions to software issues and provide technical support for users.
Phrase: Provide solutions and support.

4.
Concepts: respond, demonstrate designer responsiveness
Relationship: Designers engage with users by providing timely responses and demonstrating attentiveness.
Criteria: Designers respond to inquiries with relevant information and engage with user feedback.
Phrase: Respond and engage with users.

5.
Concepts: solicit and invite feedback, acknowledge and appreciate user feedback
Relationship: Designers actively seek user input and express gratitude for their contributions.
Criteria: Designers solicit feedback and acknowledge user suggestions while inviting further input.
Phrase: Solicit and appreciate feedback.

6.
Concepts: share potential solutions, address and share usability solutions
Relationship: Designers communicate solutions based on user feedback and address usability concerns.
Criteria: Designers share solutions and workarounds for usability issues with users.
Phrase: Share and address usability solutions.

7.
Concepts: gather user context, inquire about user needs
Relationship: Designers collect information from users to understand their specific needs and contexts.
Criteria: Designers gather user context by asking about teaching situations and challenges.
Phrase: Gather and inquire about user needs.

8.
Concepts: plan and discuss feature development, discuss future planning and design considerations
Relationship: Designers share their plans and engage in discussions about future software development.
Criteria: Designers discuss current and future feature development and planning considerations.
Phrase: Plan and discuss feature development.

9.
Concepts: communication of updates, provide platform-specific updates
Relationship: Designers keep users informed about software updates and platform-specific changes.
Criteria: Designers communicate updates and release schedules to users.
Phrase: Communicate updates effectively.

10.
Concepts: clarify and update testing and review statuses, describe and provide information on version updates
Relationship: Designers provide clarity on software testing and version updates to users.
Criteria: Designers clarify testing statuses and describe version updates with additional details.
Phrase: Clarify and describe version updates.

11.
Concepts: promise to improve, acknowledge and commit to improvements
Relationship: Designers respond to user feedback with commitments to future improvements.
Criteria: Designers promise improvements based on user feedback and acknowledge requests.
Phrase: Commit to improvements.

12.
Concepts: discuss and explain design challenges, compare and elaborate on feature complexities
Relationship: Designers engage in discussions regarding challenges and complexities in development.
Criteria: Designers discuss design challenges and elaborate on feature complexities.
Phrase: Discuss and explain design challenges.

13.
Concepts: detail educational benefits, explain and detail simulation enhancements
Relationship: Designers articulate the educational value and enhancements of software features.
Criteria: Designers describe educational benefits and explain enhancements to simulation features.
Phrase: Detail and explain educational benefits.

14.
Concepts: make community announcements, facilitate community engagement
Relationship: Designers engage the community through announcements and solicit feedback.
Criteria: Designers announce future plans and engage the community for input.
Phrase: Announce and engage the community.

15.
Concepts: share information, engage and share information
Relationship: Users actively participate in sharing information and resources to aid each other.
Criteria: Users share information and resources to solve problems and answer questions.
Phrase: Share and engage information.

16.
Concepts: promote collaborative learning, share resources and support knowledge exchange
Relationship: Designers foster collaboration and resource sharing within the community.
Criteria: Designers promote collaborative learning through resource sharing.
Phrase: Promote collaboration and resource sharing.

17.
Concepts: group communication, provide and share access information
Relationship: Designers communicate updates and share access information in a group context.
Criteria: Designers provide access information and communicate updates within group settings.
Phrase: Communicate and share access information.

18.
Concepts: acknowledge and express receipt, confirm and acknowledge information finding
Relationship: Users confirm receipt of information and acknowledge messages.
Criteria: Users acknowledge receipt of shared information and confirm findings.
Phrase: Acknowledge and confirm receipt.

19.
Concepts: express and discuss school needs, mention and discuss technical challenges
Relationship: Users articulate their needs and challenges related to technology in schools.
Criteria: Users express their school needs and discuss relevant technical challenges.
Phrase: Express and discuss school needs.

20.
Concepts: explain feature requests, justify and express need for documentation
Relationship: Users articulate their requests and justify the need for documentation.
Criteria: Users explain their feature requests and express the need for user manuals.
Phrase: Explain and justify feature requests.

21.
Concepts: usability improvement, suggest and propose design improvements
Relationship: Designers receive suggestions aimed at enhancing usability and propose improvements.
Criteria: Designers suggest changes to improve usability and propose design enhancements.
Phrase: Suggest and propose usability improvements.

22.
Concepts: elaborate on questions, further and elaborate on suggestions
Relationship: Users provide additional context and suggestions, prompting further discussion.
Criteria: Users elaborate on questions and suggestions while encouraging discussion.
Phrase: Elaborate on questions and suggestions.
---