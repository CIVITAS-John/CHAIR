You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: high school teaching experience, indicating middle school teaching role
- A user mentions their teaching experience in high school or middle school.
- Statements indicate that the user is a teacher or related to teaching middle school.

2.
Concepts: establish credibility, sharing professional background
- A community member establishes their credibility by sharing their experience or background.
- Users share their professional background to establish credibility and context.

3.
Concepts: explaining question intentions, explaining planned actions
- Users or team members explain the reason behind a question or follow-up action.
- Team members provide reasons for planned actions or decisions and explain the plans or rationale behind a feature.

4.
Concepts: explain situation, providing contextual information
- A user explains a situation or context.
- Users provide context or background information when answering questions or explaining their interest or involvement.

5.
Concepts: confirming agreement, showing engagement and agreement
- Users or designers confirm or agree with a statement or question.
- Designers show engagement or agreement with a user's comment, and users acknowledge a designer's point or agree with design ideas.

6.
Concepts: agreement, confirmation/agreement of collaboration
- Users or developers express agreement with each other.
- A designer confirms or agrees to collaborate with the community.

7.
Concepts: exchanging greetings, greeting the community
- Users or designers greet each other and reciprocate greetings.
- Users or developers greet and welcome the community.

8.
Concepts: engaging in positive interactions, expressing gratitude and support
- Users interact positively and express gratitude within the community.
- Users express support, acknowledgment, appreciation, and encouragement within the community.

9.
Concepts: community response, expressing gratitude to the community
- Community members respond to each other, often with gratitude or additional information.
- Community members or team members express gratitude and close interactions with the community.

10.
Concepts: acknowledging community support, acknowledging community expertise
- Users or designers express or acknowledge community support.
- A designer or user acknowledges the expertise within the community.

11.
Concepts: providing user reviews, describing context of use, highlighting software effectiveness
- Users provide reviews and compare the software to other similar products.
- Users describe the specific contexts in which they use the software and its usability.
- Users comment on the effectiveness and practical aspects of the software in real-world settings.

12.
Concepts: practical application, discussing classroom application
- Instances where the practical application of the software in educational settings is discussed.
- Users illustrate the success and discuss the application of the software in classroom settings.

13.
Concepts: explaining team limitations, explaining technical constraints
- Designers mention the limitations or constraints of the development team and explain why certain issues cannot be resolved.
- Users or designers highlight or explain the technical constraints or limitations of the current software version.

14.
Concepts: confirming system compatibility, considering future compatibility
- Designers assure or confirm the software's compatibility with certain systems.
- Designers speculate on or consider the future compatibility of the software with different systems.

15.
Concepts: apologizing for inconvenience, acknowledge potential inconvenience
- Users or designers apologize for any inconvenience or the timing of their messages.
- Acknowledging potential inconvenience caused by the timing of messages.

16.
Concepts: mentioning technical issues, expressing frustration
- Users mention technical issues or limitations with their computer systems.
- Users express dissatisfaction or challenges with the system or technology and frustration with current limitations or issues.

17.
Concepts: reflection on experiences, sharing past experiences
- Developers reflect on their past experiences or challenges.
- A designer reflects on past experiences and shares previous solutions to issues.

18.
Concepts: show interest, inquiring about software access
- Users show interest in downloading or accessing the software.
- Users inquire about how to download or access the software.

19.
Concepts: seeking guidance, requesting user manual
- A user seeks guidance and justifies their request for a user manual.
- Users request a user manual and express the need for documentation.

20.
Concepts: inquiring about user role, clarifying user needs
- Developers inquire about the user's role and background to better understand their needs.
- Developers ask about user needs or preferences and follow up with questions to better understand specific requests.

21.
Concepts: inviting feature suggestions, soliciting suggestions and collaboration
- Designers invite users to suggest new features or improvements, and users or developers make such suggestions.
- Users or designers solicit suggestions or suggest collaboration for specific features.

22.
Concepts: requesting specific features, suggesting feature prioritization
- Users express specific needs or request specific features or functionalities to be added to the software.
- Users clarify their preferences or suggest prioritizing certain features or aspects of the software.

23.
Concepts: further suggestion, elaborating on suggestions
- A user provides a further suggestion or refinement to a previous comment.
- Users make suggestions or recommendations and elaborate on them.

24.
Concepts: elaborating on topics, encouraging user elaboration
- A designer elaborates on a topic or response, providing additional details.
- Designers encourage users to provide more details or ask questions and continue discussions in the future.

25.
Concepts: design discussion, interface layout decisions
- Discussions about design choices or feature implementations.
- Discussions about decisions related to the layout or design of the software interface.

26.
Concepts: discussing software usability, discussing user interface design
- Users or designers discuss the usability and visual and functional design of the software.
- A designer discusses aspects of the user interface and instructional design to enhance usability.

27.
Concepts: consulting the community, announcing future consultation
- Designers consult the community for opinions or advice before making decisions.
- Designers announce plans to consult the community and promise to invite feedback before starting new developments.

28.
Concepts: design refinement, planning product improvements, collaborative planning
- Designers discuss refining the design of the software.
- Designers discuss potential updates and plans for future improvements to the software.
- Designers and users collaboratively discussing and planning the development of the software.

29.
Concepts: outlining feature roadmap, planning feature expansion
- A team member lists features and outlines the sequence of tasks or features to be developed.
- A designer lists and explains features that will be added in the future and potential tasks for development.

30.
Concepts: discuss feature development, discussing ongoing research and development
- A designer discusses or shares information about current feature development efforts.
- A designer or team member describes ongoing research and development efforts related to the platform.

31.
Concepts: planning and reacting to feedback, acknowledging and planning feedback implementation
- Designers plan for iterative feedback and react to user feedback with plans for updates.
- Designers acknowledge user feedback and discuss plans to implement suggested features.

32.
Concepts: engaging in direct communication, following up on technical details
- Users and designers engage in back-and-forth dialogue to discuss features, updates, and feedback.
- Users and designers engage in follow-up discussions about technical issues or previously shared design information.
===
---
Definitions for each code (32 in total):
1.
Concepts: high school teaching experience, indicating middle school teaching role
Relationship: Both concepts relate to users sharing their teaching roles and experiences.
Criteria: A user mentions their teaching experience in high school or middle school, indicating their role as a teacher.
Phrase: Sharing teaching experience

2.
Concepts: establish credibility, sharing professional background
Relationship: Both concepts involve users sharing their professional background to establish credibility.
Criteria: A community member establishes their credibility by sharing their professional background.
Phrase: Establishing credibility through background

3.
Concepts: explaining question intentions, explaining planned actions
Relationship: Both concepts involve users explaining the reasons behind their questions or actions.
Criteria: Users or team members explain the reason behind a question or planned action.
Phrase: Explaining intentions and actions

4.
Concepts: explain situation, providing contextual information
Relationship: Both concepts involve providing context or background information.
Criteria: A user explains a situation or provides contextual information when answering questions or explaining their involvement.
Phrase: Providing context

5.
Concepts: confirming agreement, showing engagement and agreement
Relationship: Both concepts involve users or designers confirming or showing agreement.
Criteria: Users or designers confirm or agree with a statement, showing engagement.
Phrase: Confirming agreement

6.
Concepts: agreement, confirmation/agreement of collaboration
Relationship: Both concepts involve expressing agreement, particularly in a collaborative context.
Criteria: Users or developers express agreement with each other, confirming collaboration.
Phrase: Agreeing to collaborate

7.
Concepts: exchanging greetings, greeting the community
Relationship: Both concepts involve users or designers greeting each other.
Criteria: Users or designers greet each other and the community.
Phrase: Exchanging greetings

8.
Concepts: engaging in positive interactions, expressing gratitude and support
Relationship: Both concepts involve positive interactions and expressions of gratitude and support.
Criteria: Users interact positively and express gratitude and support within the community.
Phrase: Expressing gratitude and support

9.
Concepts: community response, expressing gratitude to the community
Relationship: Both concepts involve community members responding with gratitude.
Criteria: Community members respond to each other with gratitude or additional information.
Phrase: Responding with gratitude

10.
Concepts: acknowledging community support, acknowledging community expertise
Relationship: Both concepts involve acknowledging the support and expertise within the community.
Criteria: Users or designers acknowledge the support and expertise of the community.
Phrase: Acknowledging community support and expertise

11.
Concepts: providing user reviews, describing context of use, highlighting software effectiveness
Relationship: All concepts involve users reviewing the software and describing its effectiveness in specific contexts.
Criteria: Users provide reviews, describe the context of use, and highlight the software's effectiveness.
Phrase: Reviewing software effectiveness

12.
Concepts: practical application, discussing classroom application
Relationship: Both concepts involve discussing the practical application of the software in educational settings.
Criteria: Users discuss the practical application of the software in classroom settings.
Phrase: Discussing classroom application

13.
Concepts: explaining team limitations, explaining technical constraints
Relationship: Both concepts involve explaining limitations or constraints.
Criteria: Designers explain the limitations or technical constraints of the development team or software.
Phrase: Explaining limitations and constraints

14.
Concepts: confirming system compatibility, considering future compatibility
Relationship: Both concepts involve discussing the software's compatibility with systems.
Criteria: Designers confirm current system compatibility and consider future compatibility.
Phrase: Discussing system compatibility

15.
Concepts: apologizing for inconvenience, acknowledge potential inconvenience
Relationship: Both concepts involve acknowledging or apologizing for inconvenience.
Criteria: Users or designers apologize for or acknowledge potential inconvenience.
Phrase: Apologizing for inconvenience

16.
Concepts: mentioning technical issues, expressing frustration
Relationship: Both concepts involve users mentioning and expressing frustration with technical issues.
Criteria: Users mention technical issues and express frustration with current limitations.
Phrase: Expressing frustration with technical issues

17.
Concepts: reflection on experiences, sharing past experiences
Relationship: Both concepts involve reflecting on and sharing past experiences.
Criteria: Developers reflect on and share their past experiences or challenges.
Phrase: Reflecting on past experiences

18.
Concepts: show interest, inquiring about software access
Relationship: Both concepts involve users showing interest in and inquiring about software access.
Criteria: Users show interest in and inquire about how to access the software.
Phrase: Inquiring about software access

19.
Concepts: seeking guidance, requesting user manual
Relationship: Both concepts involve users seeking guidance and requesting documentation.
Criteria: Users seek guidance and request a user manual.
Phrase: Requesting guidance and documentation

20.
Concepts: inquiring about user role, clarifying user needs
Relationship: Both concepts involve developers inquiring to understand user roles and needs.
Criteria: Developers inquire about user roles and needs to better understand specific requests.
Phrase: Clarifying user needs

21.
Concepts: inviting feature suggestions, soliciting suggestions and collaboration
Relationship: Both concepts involve inviting and soliciting suggestions and collaboration.
Criteria: Designers invite users to suggest features and collaborate on improvements.
Phrase: Soliciting feature suggestions

22.
Concepts: requesting specific features, suggesting feature prioritization
Relationship: Both concepts involve users requesting and prioritizing specific features.
Criteria: Users request specific features and suggest prioritizing them.
Phrase: Requesting and prioritizing features

23.
Concepts: further suggestion, elaborating on suggestions
Relationship: Both concepts involve making and elaborating on suggestions.
Criteria: Users provide further suggestions and elaborate on previous comments.
Phrase: Elaborating on suggestions

24.
Concepts: elaborating on topics, encouraging user elaboration
Relationship: Both concepts involve elaborating on topics and encouraging further discussion.
Criteria: Designers elaborate on topics and encourage users to provide more details.
Phrase: Encouraging elaboration

25.
Concepts: design discussion, interface layout decisions
Relationship: Both concepts involve discussions about design and interface layout decisions.
Criteria: Discussions about design choices and interface layout decisions.
Phrase: Discussing design and layout

26.
Concepts: discussing software usability, discussing user interface design
Relationship: Both concepts involve discussing usability and user interface design.
Criteria: Users or designers discuss the usability and design of the software interface.
Phrase: Discussing usability and design

27.
Concepts: consulting the community, announcing future consultation
Relationship: Both concepts involve consulting the community and announcing plans for future consultation.
Criteria: Designers consult the community for opinions and announce plans for future consultation.
Phrase: Consulting the community

28.
Concepts: design refinement, planning product improvements, collaborative planning
Relationship: All concepts involve discussing design refinement and planning improvements collaboratively.
Criteria: Designers discuss refining the design and planning improvements collaboratively with users.
Phrase: Planning collaborative improvements

29.
Concepts: outlining feature roadmap, planning feature expansion
Relationship: Both concepts involve outlining and planning future feature development.
Criteria: A team member outlines the feature roadmap and plans for future feature expansion.
Phrase: Planning feature expansion

30.
Concepts: discuss feature development, discussing ongoing research and development
Relationship: Both concepts involve discussing current and ongoing development efforts.
Criteria: A designer discusses current feature development and ongoing research efforts.
Phrase: Discussing development efforts

31.
Concepts: planning and reacting to feedback, acknowledging and planning feedback implementation
Relationship: Both concepts involve planning and reacting to user feedback.
Criteria: Designers plan for and react to user feedback, discussing implementation plans.
Phrase: Planning feedback implementation

32.
Concepts: engaging in direct communication, following up on technical details
Relationship: Both concepts involve engaging in direct communication and follow-up discussions.
Criteria: Users and designers engage in direct communication and follow-up on technical details.
Phrase: Engaging in follow-up discussions
---