You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: notes ai limitations, identifies ai limitations
- Participants note and identify the current limitations and errors of AI.
- Participants identify and highlight the limitations of AI-generated code and tools.

2.
Concepts: expresses frustration with ai errors, express frustration with ai responses
- Participants express frustration and feeling stuck when encountering AI errors.
- Participants show frustration with AI repetition, expressing frustration with AI limitations and responses.

3.
Concepts: get stuck on unclear error messages, expresses frustration with error messages
- Participants get stuck due to unclear error messages, recognizing less clear error messages.
- Participants express confusion and frustration with unclear error messages.

4.
Concepts: debugs ai-generated code, engages in ai-assisted debugging
- Participants debug and manually debug AI-generated code.
- Participants engage in debugging by actively using AI feedback.

5.
Concepts: observes coding struggles, identifies coding struggles
- Participants observe and reflect on the coding struggles of novice users.
- Participants identify and highlight the struggles faced by novice users.

6.
Concepts: debugs independently, prefers self-debugging
- Participants debug and engage in self-directed debugging activities.
- Participants prefer to debug code independently without AI assistance.

7.
Concepts: recognizes ai's benefits, recognizes ai's time-saving benefits
- Participants recognize AI's benefits and potential.
- Participants recognize and value AI's time-saving potential and benefits.

8.
Concepts: finds ai helpful, values ai's assistance
- Participants find AI helpful and AI-driven interfaces helpful.
- Participants value AI's summarized and implicit assistance.

9.
Concepts: tests ai understanding, evaluates ai's understanding
- The participant tests the AI's understanding by providing specific inputs or phrases to see how it responds.
- Participants evaluate AI's understanding of specific concepts or tasks and analyze its interpretation of their requests.

10.
Concepts: suggesting ai as a peer programmer, suggesting ai-assisted collaboration
- Participants suggest and discuss AI as a peer programmer that helps with coding.
- The interviewee suggests that AI could play a similar role to peer programming in improving coding efficiency.

11.
Concepts: evaluates ai comparison, evaluates ai-generated code
- Participants compare and evaluate AI-generated code to human-generated code.
- Participants evaluate and critically assess AI-generated code output.

12.
Concepts: adapts code with ai, customizing ai-generated code
- Participants request and adapt code modifications with AI assistance.
- Participants customize and selectively implement AI-generated code.
===
Here are the definitions for each code:

---
1.
Concepts: notes ai limitations, identifies ai limitations
Relationship: The concepts are related as they both describe the act of recognizing AI limitations.
Criteria: Participants identify and note the current limitations and errors of AI.
Phrase: Identifying AI limitations.

2.
Concepts: expresses frustration with ai errors, express frustration with ai responses
Relationship: The concepts are related as they both describe the emotional response to AI errors.
Criteria: Participants express frustration with AI errors and responses.
Phrase: Expressing frustration with AI.

3.
Concepts: get stuck on unclear error messages, expresses frustration with error messages
Relationship: The concepts are related as they both describe the difficulties with unclear error messages.
Criteria: Participants get stuck and express frustration due to unclear error messages.
Phrase: Struggling with unclear error messages.

4.
Concepts: debugs ai-generated code, engages in ai-assisted debugging
Relationship: The concepts are related as they both describe the act of debugging with AI assistance.
Criteria: Participants debug and engage in debugging with AI-generated code.
Phrase: Debugging with AI assistance.

5.
Concepts: observes coding struggles, identifies coding struggles
Relationship: The concepts are related as they both describe the act of recognizing coding struggles.
Criteria: Participants observe and identify the coding struggles of novice users.
Phrase: Identifying coding struggles.

6.
Concepts: debugs independently, prefers self-debugging
Relationship: The concepts are related as they both describe the preference for independent debugging.
Criteria: Participants debug and prefer to debug code independently without AI assistance.
Phrase: Preferring independent debugging.

7.
Concepts: recognizes ai's benefits, recognizes ai's time-saving benefits
Relationship: The concepts are related as they both describe the recognition of AI's benefits.
Criteria: Participants recognize and value AI's benefits and time-saving potential.
Phrase: Recognizing AI benefits.

8.
Concepts: finds ai helpful, values ai's assistance
Relationship: The concepts are related as they both describe the positive perception of AI assistance.
Criteria: Participants find AI helpful and value its assistance.
Phrase: Valuing AI assistance.

9.
Concepts: tests ai understanding, evaluates ai's understanding
Relationship: The concepts are related as they both describe the act of assessing AI's understanding.
Criteria: Participants test and evaluate AI's understanding of specific concepts or tasks.
Phrase: Evaluating AI understanding.

10.
Concepts: suggesting ai as a peer programmer, suggesting ai-assisted collaboration
Relationship: The concepts are related as they both describe the idea of AI-assisted collaboration.
Criteria: Participants suggest AI as a peer programmer and AI-assisted collaboration.
Phrase: Suggesting AI-assisted collaboration.

11.
Concepts: evaluates ai comparison, evaluates ai-generated code
Relationship: The concepts are related as they both describe the act of evaluating AI-generated code.
Criteria: Participants compare and evaluate AI-generated code to human-generated code.
Phrase: Evaluating AI-generated code.

12.
Concepts: adapts code with ai, customizing ai-generated code
Relationship: The concepts are related as they both describe the act of modifying AI-generated code.
Criteria: Participants adapt and customize AI-generated code with AI assistance.
Phrase: Customizing AI-generated code.