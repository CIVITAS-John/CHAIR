You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (8 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
8. 
Concepts: {Repeat the input 8}
Relationship: {What is logical relationship between concepts in code 8, or N/A if not applicable}
Criteria: {Who did what, and how for code 8}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: expectation setting, manage user expectations
- A designer sets or clarifies expectations about the application or its features.
- The designer is setting or managing user expectations about the software's features, limitations, or future developments.

2.
Concepts: exploring technical solutions, exploring compatibility options
- Designers and users share potential solutions and explore theoretical possibilities or potential solutions.
- Designers explore compatibility options and theorize system compatibility to facilitate development.

3.
Concepts: planning improvements, planning for future development
- Designer or teacher plans or discusses improvements or future development.
- Designers consider future expansions and plan new functions, assessment features, and future development.

4.
Concepts: providing context for testing, informing about testing phases
- Designer provides context or background information for testing phase
- The designer informs users about the testing phase of a feature, providing guidance on how to use it, and clarifies that a feature or version is in a testing phase.

5.
Concepts: enhancing user experience, supporting user experience
- Designers improve UI, enhance user experience, and specify details.
- Designers support user experience by providing technical guidance.

6.
Concepts: sharing empathetic experiences, expressing understanding and empathy
- Designers share personal anecdotes to show empathy or understanding.
- Designers express understanding, show empathy, acceptance, and acknowledge perspective.

7.
Concepts: justifying limitations, explaining system limitations and constraints
- Designers justify limitations to facilitate understanding.
- Designers state and explain system limitations and software constraints to the community.

8.
Concepts: describing user interactions, highlighting usability and providing use cases
- Describing how users interact with the application or its features.
- Users draw attention to the ease of use or practicality of the software and provide or describe scenarios for using the software.
===
Here are the definitions for each code:

---
1.
Concepts: expectation setting, manage user expectations
Relationship: The two concepts are closely related, as setting expectations is a way to manage user expectations.
Criteria: Designers clarify or set expectations about the application or its features to manage user understanding.
Phrase: Setting user expectations

2.
Concepts: exploring technical solutions, exploring compatibility options
Relationship: The two concepts are related as exploring technical solutions involves exploring compatibility options.
Criteria: Designers and users explore potential solutions and compatibility options to facilitate development.
Phrase: Exploring technical possibilities

3.
Concepts: planning improvements, planning for future development
Relationship: The two concepts are closely related, as planning improvements is a part of planning for future development.
Criteria: Designers plan or discuss improvements or future development to enhance the application.
Phrase: Planning for future development

4.
Concepts: providing context for testing, informing about testing phases
Relationship: The two concepts are closely related, as providing context involves informing about testing phases.
Criteria: Designers provide context or background information about testing phases to guide users.
Phrase: Informing about testing phases

5.
Concepts: enhancing user experience, supporting user experience
Relationship: The two concepts are closely related, as enhancing user experience involves supporting user experience.
Criteria: Designers improve UI and provide technical guidance to support user experience.
Phrase: Enhancing user experience

6.
Concepts: sharing empathetic experiences, expressing understanding and empathy
Relationship: The two concepts are closely related, as sharing empathetic experiences involves expressing understanding and empathy.
Criteria: Designers share personal anecdotes and express understanding to show empathy.
Phrase: Expressing empathy

7.
Concepts: justifying limitations, explaining system limitations and constraints
Relationship: The two concepts are closely related, as justifying limitations involves explaining system limitations and constraints.
Criteria: Designers explain system limitations and constraints to justify them to the community.
Phrase: Explaining system limitations

8.
Concepts: describing user interactions, highlighting usability and providing use cases
Relationship: The two concepts are related, as describing user interactions involves highlighting usability and providing use cases.
Criteria: Designers and users describe how users interact with the application and highlight its usability.
Phrase: Describing user interactions