You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: explain functionality, explaining design functionality
- Designer explains how a feature or functionality works.
- Designer explains how a feature or component works or is intended to be used.

2.
Concepts: outlining features, outlining functionality
- A designer outlines or lists features or components of a project.
- A designer outlines or describes the functionality of a feature or component.

3.
Concepts: elaborating on features, providing feature details, providing feature examples
- The designer elaborates on planned features or functionalities.
- Designers provide details about features or functionalities.
- A designer provides specific examples of a feature or function.
- The designer provides an example to illustrate a feature's function or capability.

4.
Concepts: showcasing functionality, illustrates software capabilities
- A designer showcases the functionality or capabilities of a feature or tool.
- The designer showcases the software's capabilities, demonstrating its potential uses and benefits.

5.
Concepts: concept explanation, ensuring user understanding
- The designer helps users understand a concept or idea.
- Designer ensures users understand a specific concept or feature

6.
Concepts: providing contextual information, providing software usage context
- Designer provides additional information or context about the software or its features.
- Designer provides context or tips for using the software, often from personal experience.

7.
Concepts: guiding users, directing user, providing instructions
- A designer gives instructions or guidance to users.
- The designer provides instructions or directions to the user, guiding them on how to access or use the software.
- The designer provides instructions or guidance on using the software.
- Designer provides instructions for using a specific feature.

8.
Concepts: guiding user behavior, providing usage instructions, feature guidance, providing usage guidance
- The designer provides guidance on how to use a feature or component.
- The designer provides instructions or guidance on how to use a feature or update.
- The designer provides instructions or guidance on how to access a specific feature or platform.
- A designer provides guidance on using a specific feature or functionality.

9.
Concepts: providing usage tips, providing practical advice
- A person provides tips, advice, or instructions on how to use something.
- A designer provides practical advice or tips for using a feature.

10.
Concepts: explaining use case, identifying practical use cases, suggests practical use case
- A user explains a potential use case or scenario for the software.
- User identifies a practical use case or scenario for the software.
- User suggests a practical use case or scenario for the software.

11.
Concepts: comparison to similar apps, comparing with other software, comparing with other applications, compares to other tools
- User compares the software to similar applications.
- A user compares the platform with other software or tools.
- A person compares or contrasts a product or software with others.
- A user compares the application to other similar tools or software.

12.
Concepts: evaluating software, evaluates software usability
- User evaluates or comments on the software's quality or usefulness.
- Evaluating the usability, practicality, or effectiveness of the software.

13.
Concepts: solicits specific needs, gathering requirements
- Designer solicits specific needs or requirements from users.
- Designer gathers requirements or asks questions about user needs.
- Designer gathers detailed requirements from users.

14.
Concepts: explaining needs, showcasing user needs, expressing user needs, user requirements
- User explains their needs or requirements.
- User expresses a need or desire for a specific feature or functionality.
- Expressions of user needs or requirements.
- User expresses specific needs or requirements for the platform.

15.
Concepts: discuss usability, consider usability
- Discussing usability, user experience, or interface-related issues.
- Considerations or discussions about the usability or user experience of the software.

16.
Concepts: usability concerns, identifying usability issues
- Identifying usability concerns or areas for improvement
- Designer identifies or discusses potential usability issues or areas for improvement.

17.
Concepts: inquiring about pain points, probing for user difficulties
- Inquiries about users' pain points or difficulties with the software.
- Asking users about the difficulties or challenges they face while using the software.

18.
Concepts: user experience feedback, showing interest in user experience, inquiring about user issues, seeking feedback on user experience, inquiring about user experience
- Designer asks about user experience or problems encountered.
- Designer shows interest in user experience, problems, or opinions.
- The designer inquires about or asks for feedback on user experiences or issues.
- Designer seeks feedback on user experience.
- A designer inquires about a user's experience or issues.

19.
Concepts: emphasizing accessibility, promoting accessibility, advocating for accessibility
- User suggests improvement for better accessibility.
- User or designer suggests improvements to enhance accessibility or usability.
- Advocating for or suggesting improvements related to accessibility.

20.
Concepts: highlighting usability, highlighting practical application
- A person highlights or emphasizes the usability or practicality of something.
- User or designer highlights the practical application or real-world use of a feature or functionality.

21.
Concepts: convenience advocacy, advocating for user convenience
- Advocating for convenience or ease of use in a product or design.
- Advocating for user convenience or ease of use.

22.
Concepts: requesting convenience features, expresses desire for convenience
- User requests features that would enhance convenience.
- User expresses a desire for convenience or ease of use.

23.
Concepts: emphasizing convenience, promote convenience
- User emphasizes the importance of convenience in the software design.
- The quote emphasizes the importance of convenience in problem-solving.
- User promotes convenience, suggesting features that would make the software more user-friendly and efficient.

24.
Concepts: simplification, seeking efficiency, simplifies design
- Designer aims to simplify the user experience.
- Suggesting or implementing changes to reduce complexity in a product or feature.
- Designer seeks to simplify or improve the user experience.
- Designer aims to simplify the design or user experience.
- Designer suggests simplifying design elements or features.

25.
Concepts: suggesting simplification, considers simplification, expressing intent to simplify
- A designer suggests simplifying a feature or design.
- Designer considers simplifying the design or user interface.
- The designer expresses an intention to simplify the design or functionality.

26.
Concepts: promoting ease of use, design for user-friendliness
- The designer mentions efforts to make the software easy to use, providing minimal instructions or prompts.
- Designer expresses the intention to design the software to be user-friendly and self-explanatory, requiring minimal additional instructions.

27.
Concepts: ease of use, designs for intuitive use
- Designer highlights the simplicity or ease of use of a feature or function.
- The designer aims to create an intuitive user experience, minimizing the need for additional instructions or support.

28.
Concepts: intuitive design, aiming for intuitive interface
- Designing or improving user interfaces for ease of use
- A designer aims to create an intuitive or user-friendly interface.

29.
Concepts: considering user needs, considering user experience
- Designer considers or takes into account the needs of users.
- Designer considers different user needs and use cases.
- Designer considers user experience or feedback in designing features.
- Designer considers user experience in different modes or scenarios.

30.
Concepts: user-centered approach, prioritizes user-centered design
- Designer emphasizes a user-centered approach or design philosophy.
- The designer mentions designing the platform with user-centered principles in mind.

31.
Concepts: user experience, user experience management
- Focusing on user experience and usability
- Managing or optimizing user experience

32.
Concepts: mentioning manual adjustments, highlighting manual adjustment options, manual adjustment option offering
- Designers mention the option for manual adjustments or customization.
- A designer highlights the ability to manually adjust or customize something.
- The designer offers manual adjustment options for users.
===
Here are the definitions for each code:

---
1.
Concepts: explain functionality, explaining design functionality
Relationship: The concepts are related as they both involve the designer providing information about how a feature or functionality works.
Criteria: Designer explains how a feature or functionality works to users.
Phrase: Explaining functionality.

2.
Concepts: outlining features, outlining functionality
Relationship: The concepts are related as they both involve the designer providing an overview of the features or components of a project.
Criteria: Designer outlines features or functionalities of a project to users.
Phrase: Outlining features.

3.
Concepts: elaborating on features, providing feature details, providing feature examples
Relationship: The concepts are related as they all involve the designer providing additional information about features or functionalities.
Criteria: Designer provides details or examples of features or functionalities to users.
Phrase: Elaborating on features.

4.
Concepts: showcasing functionality, illustrates software capabilities
Relationship: The concepts are related as they both involve the designer demonstrating the capabilities of a feature or tool.
Criteria: Designer showcases the functionality or capabilities of a feature or tool to users.
Phrase: Showcasing functionality.

5.
Concepts: concept explanation, ensuring user understanding
Relationship: The concepts are related as they both involve the designer helping users understand a concept or idea.
Criteria: Designer ensures users understand a concept or feature by explaining it.
Phrase: Ensuring understanding.

6.
Concepts: providing contextual information, providing software usage context
Relationship: The concepts are related as they both involve the designer providing additional information about the software or its features.
Criteria: Designer provides context or tips for using the software to users.
Phrase: Providing context.

7.
Concepts: guiding users, directing user, providing instructions
Relationship: The concepts are related as they all involve the designer providing direction or guidance to users.
Criteria: Designer provides instructions or guidance to users on how to access or use the software.
Phrase: Guiding users.

8.
Concepts: guiding user behavior, providing usage instructions, feature guidance, providing usage guidance
Relationship: The concepts are related as they all involve the designer providing guidance on how to use a feature or component.
Criteria: Designer provides guidance on how to use a feature or component to users.
Phrase: Guiding user behavior.

9.
Concepts: providing usage tips, providing practical advice
Relationship: The concepts are related as they both involve the designer providing helpful advice or tips for using the software.
Criteria: Designer provides practical advice or tips for using a feature to users.
Phrase: Providing tips.

10.
Concepts: explaining use case, identifying practical use cases, suggests practical use case
Relationship: The concepts are related as they all involve the user explaining or identifying potential use cases for the software.
Criteria: User explains or identifies a practical use case or scenario for the software.
Phrase: Explaining use case.

11.
Concepts: comparison to similar apps, comparing with other software, comparing with other applications, compares to other tools
Relationship: The concepts are related as they all involve comparing the software to similar applications or tools.
Criteria: User compares the software to similar applications or tools.
Phrase: Comparing to similar apps.

12.
Concepts: evaluating software, evaluates software usability
Relationship: The concepts are related as they both involve the user evaluating the software's quality or usefulness.
Criteria: User evaluates the software's quality or usefulness.
Phrase: Evaluating software.

13.
Concepts: solicits specific needs, gathering requirements
Relationship: The concepts are related as they both involve the designer asking for or gathering information about user needs.
Criteria: Designer solicits specific needs or requirements from users.
Phrase: Soliciting needs.

14.
Concepts: explaining needs, showcasing user needs, expressing user needs, user requirements
Relationship: The concepts are related as they all involve the user explaining or expressing their needs or requirements.
Criteria: User explains or expresses their needs or requirements.
Phrase: Explaining needs.

15.
Concepts: discuss usability, consider usability
Relationship: The concepts are related as they both involve discussing or considering the usability of the software.
Criteria: Designer discusses or considers usability issues or areas for improvement.
Phrase: Discussing usability.

16.
Concepts: usability concerns, identifying usability issues
Relationship: The concepts are related as they both involve identifying areas for improvement in the software's usability.
Criteria: Designer identifies or discusses potential usability issues or areas for improvement.
Phrase: Identifying usability concerns.

17.
Concepts: inquiring about pain points, probing for user difficulties
Relationship: The concepts are related as they both involve asking about user difficulties or pain points.
Criteria: Designer inquires about user difficulties or pain points.
Phrase: Inquiring about pain points.

18.
Concepts: user experience feedback, showing interest in user experience, inquiring about user issues, seeking feedback on user experience, inquiring about user experience
Relationship: The concepts are related as they all involve the designer asking about or showing interest in user experience or issues.
Criteria: Designer asks about or shows interest in user experience or issues.
Phrase: Seeking feedback.

19.
Concepts: emphasizing accessibility, promoting accessibility, advocating for accessibility
Relationship: The concepts are related as they all involve promoting or advocating for accessibility or usability.
Criteria: User or designer advocates for or suggests improvements related to accessibility.
Phrase: Advocating for accessibility.

20.
Concepts: highlighting usability, highlighting practical application
Relationship: The concepts are related as they both involve highlighting the usability or practicality of something.
Criteria: User or designer highlights the practical application or real-world use of a feature or functionality.
Phrase: Highlighting usability.

21.
Concepts: convenience advocacy, advocating for user convenience
Relationship: The concepts are related as they both involve advocating for convenience or ease of use.
Criteria: User or designer advocates for convenience or ease of use.
Phrase: Advocating for convenience.

22.
Concepts: requesting convenience features, expresses desire for convenience
Relationship: The concepts are related as they both involve requesting or expressing a desire for convenience features.
Criteria: User requests features that would enhance convenience.
Phrase: Requesting convenience features.

23.
Concepts: emphasizing convenience, promote convenience
Relationship: The concepts are related as they both involve emphasizing or promoting convenience.
Criteria: User emphasizes the importance of convenience in the software design.
Phrase: Emphasizing convenience.

24.
Concepts: simplification, seeking efficiency, simplifies design
Relationship: The concepts are related as they all involve simplifying the user experience or design.
Criteria: Designer aims to simplify the user experience or design.
Phrase: Simplifying design.

25.
Concepts: suggesting simplification, considers simplification, expressing intent to simplify
Relationship: The concepts are related as they all involve suggesting or considering simplification.
Criteria: Designer suggests or considers simplifying a feature or design.
Phrase: Suggesting simplification.

26.
Concepts: promoting ease of use, design for user-friendliness
Relationship: The concepts are related as they both involve designing for ease of use or user-friendliness.
Criteria: Designer promotes ease of use or designs for user-friendliness.
Phrase: Promoting ease of use.

27.
Concepts: ease of use, designs for intuitive use
Relationship: The concepts are related as they both involve designing for ease of use or intuitive use.
Criteria: Designer designs for ease of use or intuitive use.
Phrase: Designing for ease of use.

28.
Concepts: intuitive design, aiming for intuitive interface
Relationship: The concepts are related as they both involve designing for intuitive use or interface.
Criteria: Designer aims for an intuitive interface or design.
Phrase: Aiming for intuitive design.

29.
Concepts: considering user needs, considering user experience
Relationship: The concepts are related as they both involve considering user needs or experience.
Criteria: Designer considers user needs or experience in designing features.
Phrase: Considering user needs.

30.
Concepts: user-centered approach, prioritizes user-centered design
Relationship: The concepts are related as they both involve prioritizing a user-centered approach or design philosophy.
Criteria: Designer prioritizes a user-centered approach or design philosophy.
Phrase: Prioritizing user-centered design.

31.
Concepts: user experience, user experience management
Relationship: The concepts are related as they both involve focusing on user experience or managing it.
Criteria: Designer focuses on user experience or manages it.
Phrase: Managing user experience.

32.
Concepts: mentioning manual adjustments, highlighting manual adjustment options, manual adjustment option offering
Relationship: The concepts are related as they all involve mentioning or highlighting manual adjustment options.
Criteria: Designer mentions or highlights manual adjustment options for users.
Phrase: Offering manual adjustments.