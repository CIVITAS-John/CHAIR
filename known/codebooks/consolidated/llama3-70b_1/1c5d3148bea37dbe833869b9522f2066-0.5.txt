You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (5 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
5. 
Concepts: {Repeat the input 5}
Relationship: {What is logical relationship between concepts in code 5, or N/A if not applicable}
Criteria: {Who did what, and how for code 5}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: expressing frustration with ai limitations, expressing frustration with ai performance
- Users experience and express frustration with AI limitations.
- Users experience frustration with AI performance and inadequate feedback.

2.
Concepts: evaluating ai output, critically evaluating ai output
- Users evaluate AI output for its usefulness.
- Users critically evaluate AI output.

3.
Concepts: emphasizing clear instructions, emphasize writing clear instructions
- Users emphasize the importance of clear instructions and communication when working with AI-driven interfaces.
- Users emphasize the importance of writing clear instructions for AI to follow in their work.

4.
Concepts: valuing code clarity, values maintainable code
- Users value code clarity and simplicity.
- Users value easy-to-maintain code.

5.
Concepts: adapting code with ai, customizing ai-generated code
- Using LLM-driven interfaces to adapt code to personal ideas.
- Users customize and adapt AI-generated code.
===
Here are the definitions for each code:

---
1.
Concepts: expressing frustration with ai limitations, expressing frustration with ai performance
Relationship: The two concepts are closely related, as users' frustration with AI limitations can lead to frustration with AI performance.
Criteria: Users experience and express frustration with AI limitations and performance.
Phrase: Expressing frustration with AI capabilities.

2.
Concepts: evaluating ai output, critically evaluating ai output
Relationship: The two concepts are complementary, as evaluating AI output involves critically assessing its usefulness.
Criteria: Users critically assess AI output for its usefulness.
Phrase: Evaluating AI output critically.

3.
Concepts: emphasizing clear instructions, emphasize writing clear instructions
Relationship: The two concepts are closely related, as emphasizing clear instructions involves writing clear instructions for AI to follow.
Criteria: Users emphasize the importance of clear instructions and communication when working with AI-driven interfaces.
Phrase: Emphasizing clear communication with AI.

4.
Concepts: valuing code clarity, values maintainable code
Relationship: The two concepts are related, as valuing code clarity can lead to valuing maintainable code.
Criteria: Users value code clarity and maintainability.
Phrase: Valuing code quality.

5.
Concepts: adapting code with ai, customizing ai-generated code
Relationship: The two concepts are complementary, as adapting code with AI involves customizing AI-generated code.
Criteria: Users adapt and customize AI-generated code to fit their needs.
Phrase: Adapting AI-generated code.