You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (4 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
4. 
Concepts: {Repeat the input 4}
Relationship: {What is logical relationship between concepts in code 4, or N/A if not applicable}
Criteria: {Who did what, and how for code 4}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: future plans, discuss future plans
- Discussions about potential future developments and directions for the product.
- Designers disclose future software plans that may impact design choices.

2.
Concepts: involve community feedback, community needs acknowledgment
- A designer actively seeks and plans to incorporate community feedback into design solutions.
- A designer recognizes the community's needs and comments on future project directions based on feedback.

3.
Concepts: clarify version type, clarify version information
- Designers clearly specify the type of version they are referencing to avoid confusion.
- Designers provide clarification and details relevant to specific software versions.

4.
Concepts: make feature requests, highlight feature needs for usability
- Users make detailed requests and propose additional features to enhance the software's functionality.
- Users identify specific feature suggestions aimed at enhancing usability within the software.
===
---
Definitions for each code (4 in total):
1. 
Concepts: future plans, discuss future plans
Relationship: The concepts are linked by the act of discussing potential developments, with designers sharing insights into plans that can influence the product's design.
Criteria: Designers share and discuss potential future developments and how these may influence design choices for the product.
Phrase: Discuss future plans.

2. 
Concepts: involve community feedback, community needs acknowledgment
Relationship: The concepts are interrelated as they both emphasize the importance of engaging with the community to understand and integrate their needs into design processes.
Criteria: Designers actively seek community feedback and recognize their needs when planning future project directions based on that feedback.
Phrase: Incorporate community feedback.

3. 
Concepts: clarify version type, clarify version information
Relationship: The concepts are directly connected, as clarifying the version type helps illuminate specific version information to prevent confusion among users.
Criteria: Designers provide clear specifications and details about the software version they are referencing to ensure user understanding.
Phrase: Clarify version information.

4. 
Concepts: make feature requests, highlight feature needs for usability
Relationship: The concepts are linked through users taking action to express their needs for enhancements, focusing on both making requests and identifying usability improvements.
Criteria: Users articulate detailed feature requests and highlight specific needs for improvements to enhance the softwareâ€™s usability.
Phrase: Make feature requests. 
---