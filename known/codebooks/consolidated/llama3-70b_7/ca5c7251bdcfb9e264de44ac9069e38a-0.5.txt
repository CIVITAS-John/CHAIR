You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (10 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
10. 
Concepts: {Repeat the input 10}
Relationship: {What is logical relationship between concepts in code 10, or N/A if not applicable}
Criteria: {Who did what, and how for code 10}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: seeking clarification, provides clarification
- Designer seeks clarification.
- Designer provides clarification by giving additional information.

2.
Concepts: seeking usage support, seeking technical help
- Users request support or guidance for using the software.
- Users seek technical help or support from the community or designers.

3.
Concepts: providing context for user expertise, providing context for technical issues
- Context is provided about a user's expertise or experience.
- Users provide context or explanations for technical issues or challenges.

4.
Concepts: encouraging dialogue, engaging in discussions and continuing technical conversations
- Users encourage further discussion and continue dialogue.
- Users engage in discussions and continue technical conversations.

5.
Concepts: invites feature suggestions, advises on feature development
- Designer invites user suggestions and is open to feature suggestions.
- A user advises on feature development or provides guidance and contributes to product development with ideas or requests.

6.
Concepts: clarifying software needs and user preferences, identifying and emphasizing functional requirements
- Users or designers clarify software needs or user preferences.
- Users identify or emphasize specific functional requirements.

7.
Concepts: advising on development approach, advising on gradual and iterative development
- Users provide development strategy advice by advising on development approach.
- Users advise on taking a gradual or iterative approach to development.

8.
Concepts: simulation guidance, providing usage guidance
- Providing tips or guidance on using the software or its features.
- Designers provide special tips and guidance on using the software.

9.
Concepts: praising software features, praises software effectiveness
- Users praise and appreciate software features.
- User praises software effectiveness and notes its positive reception by students.

10.
Concepts: informing about new features
- Designers inform the online community about new features or concepts in a way that generates interest.
- Designers preview, explain, and reiterate software functionality explanations.
===
Here are the definitions for each code:

---
1.
Concepts: seeking clarification, provides clarification
Relationship: The designer seeks clarification and then provides clarification by giving additional information, indicating a reciprocal process.
Criteria: Designer seeks and provides clarification by giving additional information.
Phrase: Seek and provide clarification.

2.
Concepts: seeking usage support, seeking technical help
Relationship: Users seek support and help, which are related but distinct concepts, indicating a range of needs.
Criteria: Users request support or guidance for using the software and seek technical help.
Phrase: Seek support and help.

3.
Concepts: providing context for user expertise, providing context for technical issues
Relationship: Providing context is a common thread between these two concepts, highlighting the importance of context in understanding users' expertise and technical issues.
Criteria: Context is provided about a user's expertise or experience and for technical issues or challenges.
Phrase: Provide context for understanding.

4.
Concepts: encouraging dialogue, engaging in discussions and continuing technical conversations
Relationship: Encouraging dialogue and engaging in discussions are closely related, and both lead to continuing technical conversations.
Criteria: Users encourage further discussion, engage in discussions, and continue technical conversations.
Phrase: Encourage and engage in discussions.

5.
Concepts: invites feature suggestions, advises on feature development
Relationship: Inviting suggestions and advising on development are both forms of user involvement in the development process.
Criteria: Designer invites user suggestions and advises on feature development.
Phrase: Invite and advise on development.

6.
Concepts: clarifying software needs and user preferences, identifying and emphasizing functional requirements
Relationship: Clarifying needs and preferences leads to identifying and emphasizing functional requirements.
Criteria: Users or designers clarify software needs or user preferences and identify or emphasize specific functional requirements.
Phrase: Clarify and identify requirements.

7.
Concepts: advising on development approach, advising on gradual and iterative development
Relationship: Advising on development approach is a broader concept that encompasses advising on gradual and iterative development.
Criteria: Users provide development strategy advice by advising on development approach and gradual or iterative development.
Phrase: Advise on development approach.

8.
Concepts: simulation guidance, providing usage guidance
Relationship: Simulation guidance is a specific type of usage guidance, indicating a range of guidance types.
Criteria: Providing tips or guidance on using the software or its features.
Phrase: Provide usage guidance.

9.
Concepts: praising software features, praises software effectiveness
Relationship: Praising features and effectiveness are related but distinct concepts, indicating a range of positive reactions.
Criteria: Users praise and appreciate software features and praise software effectiveness.
Phrase: Praise software features and effectiveness.

10.
Concepts: informing about new features
Relationship: N/A
Criteria: Designers inform the online community about new features or concepts in a way that generates interest.
Phrase: Inform about new features.