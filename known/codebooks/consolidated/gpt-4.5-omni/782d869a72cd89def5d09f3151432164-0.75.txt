You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (29 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
29. 
Concepts: {Repeat the input 29}
Relationship: {What is logical relationship between concepts in code 29, or N/A if not applicable}
Criteria: {Who did what, and how for code 29}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: emoji response, use non verbal communication
- Nonverbal or emoji responses from users.
- Use of emojis or other non-verbal forms of communication by users.

2.
Concepts: research and development, mention ongoing research
- Discussing ongoing research and development efforts.
- Team members mention ongoing research or development efforts.

3.
Concepts: open communication, encouraging interaction
- Team members encourage open communication and feedback from users.
- Team members encourage user interaction and feedback.

4.
Concepts: seeking feedback, user experience feedback
- Team members seek user feedback on features or plans.
- Team members request feedback on user experiences.

5.
Concepts: offer solution, problem solving
- Team members provide solutions or suggestions to address user issues.
- Team members offer solutions or invite users to report problems.

6.
Concepts: suggest group sharing, collaborative learning
- A designer suggests sharing resources or information within the group.
- Designer encourages or mentions group sharing for collaborative learning.

7.
Concepts: community building, community interaction
- Users and designers engaging in friendly or community-building interactions.
- Instances of interaction that foster a sense of community among users and designers.

8.
Concepts: soliciting suggestions, request for suggestions
- Actively requesting input or ideas from community members.
- Soliciting suggestions from the community for improvements.

9.
Concepts: inviting participation, encouraging participation
- Inviting members to contribute to discussions or provide feedback.
- Encouraging members to engage more actively in providing input.

10.
Concepts: welcome, greet the community, greet community
- Designer welcomes the user to the community.
- A user greets the community.
- A user or designer greets the community.

11.
Concepts: collaborative problem solving
- Moments where designers and users work together to address issues.
- Collaborative efforts between users and designers to solve issues and improve the product.
- Instances where users and designers work together to address issues or improve the software.

12.
Concepts: resources sharing
- Instances where designers or users share resources, such as download links, development plans, or announcements.
- Information about where and how to access resources, files, or downloads related to Physics Lab.
- Instances where users or designers share files, images, or other resources with the community.

13.
Concepts: feature examples
- The designer gives specific examples or details about a feature or functionality being developed.
- Giving examples to illustrate how a feature functions.

14.
Concepts: user feedback integration
- Instances where user feedback is acknowledged and incorporated into the design process.
- Instances where user feedback is actively sought and incorporated into the design process.

15.
Concepts: encourage participatory design
- Instances where the community contributes to the design and development of the Physics Lab by providing suggestions or feedback that influence the development process.
- Instances where designers seek or consider user input in the design and development process.
- Instances where users are invited to participate in the design process or provide input.
- Instances where users and designers collaboratively discuss features and usability, reflecting a user-centered design approach.
- The involvement of users in the design and development process, contributing their insights and needs.
- Encouragement by designers for users to contribute ideas, feedback, and suggestions for the development of Physics Lab.
- Active involvement of users in the design process to ensure the product meets their needs and preferences.
- The involvement of users in the design process to ensure the product meets their needs and preferences.
- Instances where users and designers collaboratively discuss or work on design improvements.

16.
Concepts: technical inquiry
- Instances where users ask technical questions about the platform, indicating areas of user interest or potential issues.
- Asking technical questions related to the software's usage.

17.
Concepts: user engagement
- Instances where users actively participate in the conversation, showing interest or involvement in the community.
- Instances where users engage with designers through questions, feedback, or expressions of anticipation.
- Instances where users actively participate in the conversation, showing interest and involvement.

18.
Concepts: iterative development
- Instances where designers discuss updates, new features, or bug fixes.
- The process of repeatedly refining and improving a product based on feedback and testing.
- The process of continuously improving the product based on feedback and testing.
- Instances where the design process is described as iterative, with ongoing optimizations and updates.
- Developing and refining the software based on user feedback.

19.
Concepts: manage expectations
- Who did what, and how for code 51
- Designer manages user expectations regarding feature addition.

20.
Concepts: designer response
- Instances where designers respond to user feedback or suggestions.
- Instances where designers respond to user feedback or queries.

21.
Concepts: promote community engagement
- Instances where members of the community actively participate in discussions, ask questions, or provide feedback.
- Instances where users or designers engage in discussions that foster community interaction and participation.
- Active participation and interaction among community members, including both users and designers.
- Efforts made by designers to actively involve and communicate with the user community.
- Engaging with community members through questions or comments.

22.
Concepts: usability improvement
- Instances where suggestions or changes are made to improve the usability of the software.
- Efforts to improve or clarify how the software is used to ensure user-friendliness.

23.
Concepts: informal communication
- Instances where the tone of the conversation is casual or informal, indicating the nature of the community's communication style.
- Casual and non-technical interactions among community members, including humor and personal remarks.
- Demonstrating the informal or casual tone of communication.

24.
Concepts: commitment to improvement
- Designer commits to improving the software based on user feedback.
- Promising to improve based on feedback and support.

25.
Concepts: designer responsiveness
- Instances where designers respond to user queries or engage with user comments, indicating active communication between designers and users.
- Instances where designers respond to user inquiries, suggestions, or feedback.
- Instances where designers respond to user feedback or suggestions.
- Instances where designers acknowledge user feedback and discuss potential solutions or updates.
- Designers responding to user feedback and addressing their concerns or suggestions.
- Instances where designers respond to user queries or feedback, showing attentiveness to user needs.

26.
Concepts: update inquiry
- Who did what, and how for code 49
- Inquiring about new updates or changes to the software.

27.
Concepts: user response
- Input and suggestions provided by users regarding the design and functionality of the product.
- Instances where users provide feedback or ask questions that influence the design process.
- Instances where users provide feedback or suggestions to improve the software.
- Instances where users provide suggestions or feedback on features and functionalities.
- Instances where users provide feedback or ask questions about the app's development and updates.

28.
Concepts: role identification
- Instances where users or designers identify their roles, which can help understand the community structure and the roles within it.
- Instances where participants identify their roles or expertise, contributing to the problem-solving process.
- Identifying roles within the community, such as designers, teachers, or other users.

29.
Concepts: frustration
- A user or designer expressing dissatisfaction or difficulty with a system or process.
- The designer expresses frustration with limitations related to image or file uploads.
===
---
Definitions for each code (29 in total):
1.
Concepts: emoji response, use non verbal communication
Relationship: Both involve non-verbal forms of communication by users.
Criteria: Users utilize emojis or other non-verbal methods to communicate in the online community.
Phrase: Using non-verbal communication

2.
Concepts: research and development, mention ongoing research
Relationship: Both involve discussing ongoing efforts related to research and development.
Criteria: Team members discuss or mention ongoing research and development efforts.
Phrase: Mentioning ongoing research

3.
Concepts: open communication, encouraging interaction
Relationship: Both involve promoting communication and interaction within the community.
Criteria: Team members encourage open communication and user interaction.
Phrase: Encouraging open communication

4.
Concepts: seeking feedback, user experience feedback
Relationship: Both involve seeking feedback from users.
Criteria: Team members seek feedback from users on features or their experiences.
Phrase: Seeking user feedback

5.
Concepts: offer solution, problem solving
Relationship: Both involve addressing user issues through solutions.
Criteria: Team members provide solutions or invitations for users to report problems.
Phrase: Offering solutions to problems

6.
Concepts: suggest group sharing, collaborative learning
Relationship: Both involve encouraging group activities for learning.
Criteria: A designer suggests or encourages sharing resources for collaborative learning.
Phrase: Suggesting group sharing

7.
Concepts: community building, community interaction
Relationship: Both involve interactions that enhance the sense of community.
Criteria: Users and designers engage in interactions that foster community building.
Phrase: Engaging in community-building interactions

8.
Concepts: soliciting suggestions, request for suggestions
Relationship: Both involve requesting input from community members.
Criteria: Actively requesting suggestions from the community for improvements.
Phrase: Soliciting community suggestions

9.
Concepts: inviting participation, encouraging participation
Relationship: Both involve promoting active involvement from community members.
Criteria: Inviting or encouraging members to participate in discussions or provide feedback.
Phrase: Encouraging member participation

10.
Concepts: welcome, greet the community, greet community
Relationship: Both involve greeting or welcoming the community.
Criteria: A user or designer greets or welcomes the community.
Phrase: Greeting the community

11.
Concepts: collaborative problem solving
Relationship: Both involve collaborative efforts to solve issues.
Criteria: Users and designers work together to address issues or improve the software.
Phrase: Collaborating on problem-solving

12.
Concepts: resources sharing
Relationship: Both involve sharing resources within the community.
Criteria: Designers or users share resources like files, links, or announcements with the community.
Phrase: Sharing resources

13.
Concepts: feature examples
Relationship: Both involve explaining features with examples.
Criteria: Designers provide specific examples or details about a feature.
Phrase: Providing feature examples

14.
Concepts: user feedback integration
Relationship: Both involve integrating user feedback into the design process.
Criteria: User feedback is acknowledged and incorporated into the design process.
Phrase: Integrating user feedback

15.
Concepts: encourage participatory design
Relationship: Both involve user participation in the design and development process.
Criteria: Users are encouraged to contribute ideas and feedback to influence the development of Physics Lab.
Phrase: Encouraging participatory design

16.
Concepts: technical inquiry
Relationship: Both involve users asking technical questions.
Criteria: Users ask technical questions about the platform.
Phrase: Asking technical questions

17.
Concepts: user engagement
Relationship: Both involve active participation by users.
Criteria: Users actively participate in conversations, showing interest and involvement.
Phrase: Engaging users

18.
Concepts: iterative development
Relationship: Both involve continuous improvement based on feedback.
Criteria: Designers discuss updates and refinements based on user feedback and testing.
Phrase: Discussing iterative development

19.
Concepts: manage expectations
Relationship: N/A
Criteria: A designer manages user expectations regarding feature additions.
Phrase: Managing user expectations

20.
Concepts: designer response
Relationship: Both involve designers responding to users.
Criteria: Designers respond to user feedback or queries.
Phrase: Responding to user feedback

21.
Concepts: promote community engagement
Relationship: Both involve promoting interaction and participation within the community.
Criteria: Efforts made by designers or users to foster community interaction and participation.
Phrase: Promoting community engagement

22.
Concepts: usability improvement
Relationship: Both involve making changes to improve usability.
Criteria: Suggestions or changes are made to improve software usability.
Phrase: Improving usability

23.
Concepts: informal communication
Relationship: Both involve casual communication styles.
Criteria: Instances of casual or informal tone in community interactions.
Phrase: Engaging in informal communication

24.
Concepts: commitment to improvement
Relationship: Both involve commitments to improve the software.
Criteria: Designer commits to making improvements based on user feedback.
Phrase: Committing to improvements

25.
Concepts: designer responsiveness
Relationship: Both involve designers responding to user inputs.
Criteria: Designers respond to user queries, feedback, or suggestions.
Phrase: Being responsive to users

26.
Concepts: update inquiry
Relationship: N/A
Criteria: Users inquire about new updates or changes to the software.
Phrase: Inquiring about updates

27.
Concepts: user response
Relationship: Both involve users providing feedback or suggestions.
Criteria: Users provide feedback, suggestions, or questions that influence the design process.
Phrase: Providing user feedback

28.
Concepts: role identification
Relationship: Both involve identifying roles within the community.
Criteria: Users or designers identify their roles or expertise within the community.
Phrase: Identifying roles

29.
Concepts: frustration
Relationship: Both involve expressions of dissatisfaction.
Criteria: A user or designer expresses frustration with a system or process.
Phrase: Expressing frustration
---