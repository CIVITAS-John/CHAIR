You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: procedural details, outlining procedural steps
- Designer provides specific details about the development process or procedural steps.
- A designer or developer explains or outlines the steps to be taken for a specific task or process.

2.
Concepts: explained process, discussing development process, development process
- The designer explains a process or provides an update on the software's development.
- A designer discusses or explains the development process or approach.
- A designer or developer explains the process or reasoning behind a design decision or feature.

3.
Concepts: clarify testing phase, explain testing phase
- A designer clarifies the testing phase or process.
- The designer explains the testing phase or process.

4.
Concepts: plan simulated experiment assessment, detailing simulated experiment assessment
- The designer plans or discusses a detailed simulated experiment assessment.
- A designer provides details about a specific feature or functionality of the simulated experiment assessment.

5.
Concepts: offer practical advice, share practical insights
- Designer offers practical advice or tips.
- Designer shares practical experience or tips.

6.
Concepts: offer special tips, provide practical tips
- Designer offers special tips or shortcuts for using the software.
- Designer provides practical tips for navigating the software.

7.
Concepts: technical information, providing technical information
- Designer 2 provides technical information or answers a question.
- User or designer provides technical information about the platform.

8.
Concepts: technical detail, addressing technical concerns, providing technical insight
- The designer provides detailed technical information.
- Designer addresses technical concerns by providing specific information or explanations.
- Designer provides technical insight or explanation.
- A designer provides technical insight or explanation about the software's functionality.

9.
Concepts: technical discourse, explaining technical artifacts
- The designer engages in technical discussions or explanations with users.
- Designer explains technical aspects of the software.

10.
Concepts: provide feature example, give examples of features
- The designer provides an example of a feature or its application.
- Designers providing examples or illustrations of features or functionality.

11.
Concepts: visual reference, provided visual example, visual reference provision
- Designer provides a visual reference or example.
- The designer provides a visual example or illustration.
- A designer provides visual references or examples to facilitate understanding.

12.
Concepts: provide ideal component, inform about ideal components
- Designer 1 provides or mentions an ideal component.
- A designer informs users about ideal components or resources.

13.
Concepts: use feedback-based prompts, designer mentions feedback-based prompts
- The designer mentions feedback-based prompts or instructions to facilitate user understanding.
- Designers mentioning feedback-based prompts or guidance for users.

14.
Concepts: feature function explanation, introduce feature functions
- A designer gives an example of a feature's functions.
- Designer introduces or explains the functions of a feature.

15.
Concepts: explaining functionality, explain application functionality
- A designer explains the functionality or features of a component or tool.
- The designer explains how a feature or functionality works.

16.
Concepts: provide explanation, explaining features, designer explains feature, feature explanation, explaining feature specifics, explain feature functionality
- Designer provides an explanation for a feature or functionality.
- A designer explains the details of a specific feature or function.
- The designer explains the functionality or purpose of a feature in the software.
- The designer explains or describes a new feature, component, or functionality.
- A designer explains or highlights the behavior of a specific feature.
- A designer explains the specifics of a feature or update.
- Designer explains the functionality of a specific feature.

17.
Concepts: detail feature, feature details
- Designer provides details about a specific feature.
- Designer provides detailed information about a feature or component.

18.
Concepts: describe feature or component, explaining component features
- The designer describes or explains a specific feature or component.
- Designers or users mention or explain the capabilities or features of a specific component or tool.

19.
Concepts: capability demonstration, illustrate practical functionality of the software
- A designer demonstrates or showcases the software's capabilities.
- Designer illustrates the practical functionality of the software.

20.
Concepts: provide software availability information, providing clarity on version availability
- Designer provides direct information about software availability.
- A designer provides clarity on the availability of different versions of the software.

21.
Concepts: clarifying options, clarify software capabilities
- A designer clarifies or explains options, choices, or possibilities related to the software or its features.
- A designer explains or clarifies the capabilities or features of a software or product.

22.
Concepts: explaining existing features, inform about existing features
- Designer explains an existing feature or functionality.
- A designer informs users about existing features or functionalities.

23.
Concepts: clarifies version details, clarifying version release, software version clarification, clarify version being discussed, clarifying version information, version clarification
- Designer clarifies details about a specific version.
- Designer clarifies the release or version of the platform.
- Designer provides additional information about a software version.
- Designer clarifies the version of the software being discussed.
- A designer clarifies version information or differences.
- The designer clarifies details about a specific version of the platform.

24.
Concepts: platform clarification, clarifying platform specifics
- Clarifying or specifying platform or version information
- Clarifying platform-specific details or differences

25.
Concepts: clarifying features, clarifying version
- Clarifying a feature or functionality.
- Clarifying the type or version of a feature or tool.

26.
Concepts: design clarification, clarifying technical details
- Designer clarifies specific design aspects to facilitate better understanding.
- A designer clarifies a technical detail or concept.

27.
Concepts: confirming design elements, confirming understanding of design elements
- The designer confirms understanding of design elements by asking for clarification.
- Designers seek confirmation or clarification about design elements or features from the community.
- A user confirms or acknowledges a design element or feature.

28.
Concepts: clarifies consultation, seeking design clarification, clarification request, clarification seeking
- Designer clarifies or seeks clarification on a specific point.
- Designer seeks clarification on design specifics.
- A designer asks for clarification or more information about an issue.
- A designer seeks clarification or asks questions to ensure understanding.
- Seeks clarification or guidance on using a software or system

29.
Concepts: clarifying platform requirements, clarifying technical requirements, clarifying technical specifications
- Clarifying platform requirements or technical specifications.
- Designer clarifies technical requirements or specifications for the software.
- Designers clarify or explain technical specifications, limitations, or capabilities of the platform or its components.

30.
Concepts: functionality clarification, user interaction clarification
- Designer clarifies the functionality or purpose of a feature or component.
- Designer clarifies how users can interact with a feature or component.

31.
Concepts: expressing comprehension, demonstrating understanding
- Designer expresses comprehension or understanding.
- A designer demonstrates understanding of a concept or issue.

32.
Concepts: promote understanding, facilitating user understanding, enhancing user understanding, enhancing understanding
- A designer explains or clarifies a concept to promote understanding.
- Designer facilitates user understanding of a concept or feature.
- Designer enhances user understanding of a concept or feature.
- The designer clarifies or enhances understanding of a concept or feature.
===
Here are the definitions for each code:

---
1.
Concepts: procedural details, outlining procedural steps
Relationship: The concepts are related in that they both describe the provision of specific information about a process or task.
Criteria: A designer provides specific details about a process or task.
Phrase: Outlining procedural steps.

2.
Concepts: explained process, discussing development process, development process
Relationship: The concepts are related in that they all describe the explanation or discussion of a process or approach.
Criteria: A designer explains or discusses a process or approach.
Phrase: Explaining development process.

3.
Concepts: clarify testing phase, explain testing phase
Relationship: The concepts are related in that they both describe the clarification or explanation of a specific phase.
Criteria: A designer clarifies or explains the testing phase.
Phrase: Clarifying testing phase.

4.
Concepts: plan simulated experiment assessment, detailing simulated experiment assessment
Relationship: The concepts are related in that they both describe the planning or detailing of a specific assessment.
Criteria: A designer plans or details a simulated experiment assessment.
Phrase: Planning simulated experiment assessment.

5.
Concepts: offer practical advice, share practical insights
Relationship: The concepts are related in that they both describe the provision of helpful information or guidance.
Criteria: A designer offers practical advice or shares practical insights.
Phrase: Offering practical advice.

6.
Concepts: offer special tips, provide practical tips
Relationship: The concepts are related in that they both describe the provision of helpful information or guidance.
Criteria: A designer offers special tips or provides practical tips.
Phrase: Providing practical tips.

7.
Concepts: technical information, providing technical information
Relationship: The concepts are related in that they both describe the provision of technical information.
Criteria: A designer provides technical information.
Phrase: Providing technical information.

8.
Concepts: technical detail, addressing technical concerns, providing technical insight
Relationship: The concepts are related in that they all describe the provision of detailed technical information.
Criteria: A designer provides technical details or addresses technical concerns.
Phrase: Providing technical insight.

9.
Concepts: technical discourse, explaining technical artifacts
Relationship: The concepts are related in that they both describe the explanation or discussion of technical aspects.
Criteria: A designer engages in technical discourse or explains technical artifacts.
Phrase: Engaging in technical discourse.

10.
Concepts: provide feature example, give examples of features
Relationship: The concepts are related in that they both describe the provision of examples.
Criteria: A designer provides examples of features.
Phrase: Providing feature examples.

11.
Concepts: visual reference, provided visual example, visual reference provision
Relationship: The concepts are related in that they all describe the provision of visual aids.
Criteria: A designer provides visual references or examples.
Phrase: Providing visual references.

12.
Concepts: provide ideal component, inform about ideal components
Relationship: The concepts are related in that they both describe the provision of information about ideal components.
Criteria: A designer provides information about ideal components.
Phrase: Providing ideal components.

13.
Concepts: use feedback-based prompts, designer mentions feedback-based prompts
Relationship: The concepts are related in that they both describe the use or mention of feedback-based prompts.
Criteria: A designer uses or mentions feedback-based prompts.
Phrase: Using feedback-based prompts.

14.
Concepts: feature function explanation, introduce feature functions
Relationship: The concepts are related in that they both describe the explanation or introduction of feature functions.
Criteria: A designer explains or introduces feature functions.
Phrase: Explaining feature functions.

15.
Concepts: explaining functionality, explain application functionality
Relationship: The concepts are related in that they both describe the explanation of functionality.
Criteria: A designer explains functionality or features.
Phrase: Explaining functionality.

16.
Concepts: provide explanation, explaining features, designer explains feature, feature explanation, explaining feature specifics, explain feature functionality
Relationship: The concepts are related in that they all describe the provision of explanations.
Criteria: A designer provides explanations of features or functionality.
Phrase: Providing feature explanations.

17.
Concepts: detail feature, feature details
Relationship: The concepts are related in that they both describe the provision of detailed information about a feature.
Criteria: A designer provides detailed information about a feature.
Phrase: Providing feature details.

18.
Concepts: describe feature or component, explaining component features
Relationship: The concepts are related in that they both describe the description or explanation of a feature or component.
Criteria: A designer describes or explains a feature or component.
Phrase: Describing features or components.

19.
Concepts: capability demonstration, illustrate practical functionality of the software
Relationship: The concepts are related in that they both describe the demonstration or illustration of software capabilities.
Criteria: A designer demonstrates or illustrates software capabilities.
Phrase: Demonstrating software capabilities.

20.
Concepts: provide software availability information, providing clarity on version availability
Relationship: The concepts are related in that they both describe the provision of information about software availability.
Criteria: A designer provides information about software availability.
Phrase: Providing software availability information.

21.
Concepts: clarifying options, clarify software capabilities
Relationship: The concepts are related in that they both describe the clarification of options or capabilities.
Criteria: A designer clarifies options or software capabilities.
Phrase: Clarifying software capabilities.

22.
Concepts: explaining existing features, inform about existing features
Relationship: The concepts are related in that they both describe the explanation or provision of information about existing features.
Criteria: A designer explains or informs about existing features.
Phrase: Explaining existing features.

23.
Concepts: clarifies version details, clarifying version release, software version clarification, clarify version being discussed, clarifying version information, version clarification
Relationship: The concepts are related in that they all describe the clarification of version-related information.
Criteria: A designer clarifies version-related information.
Phrase: Clarifying version details.

24.
Concepts: platform clarification, clarifying platform specifics
Relationship: The concepts are related in that they both describe the clarification of platform-related information.
Criteria: A designer clarifies platform-related information.
Phrase: Clarifying platform specifics.

25.
Concepts: clarifying features, clarifying version
Relationship: The concepts are related in that they both describe the clarification of features or versions.
Criteria: A designer clarifies features or versions.
Phrase: Clarifying features or versions.

26.
Concepts: design clarification, clarifying technical details
Relationship: The concepts are related in that they both describe the clarification of design or technical aspects.
Criteria: A designer clarifies design or technical aspects.
Phrase: Clarifying design or technical details.

27.
Concepts: confirming design elements, confirming understanding of design elements
Relationship: The concepts are related in that they both describe the confirmation of understanding or design elements.
Criteria: A designer confirms understanding of design elements.
Phrase: Confirming design elements.

28.
Concepts: clarifies consultation, seeking design clarification, clarification request, clarification seeking
Relationship: The concepts are related in that they all describe the clarification or seeking of clarification.
Criteria: A designer clarifies or seeks clarification.
Phrase: Seeking clarification.

29.
Concepts: clarifying platform requirements, clarifying technical requirements, clarifying technical specifications
Relationship: The concepts are related in that they all describe the clarification of requirements or specifications.
Criteria: A designer clarifies platform requirements or technical specifications.
Phrase: Clarifying technical requirements.

30.
Concepts: functionality clarification, user interaction clarification
Relationship: The concepts are related in that they both describe the clarification of functionality or user interaction.
Criteria: A designer clarifies functionality or user interaction.
Phrase: Clarifying functionality or user interaction.

31.
Concepts: expressing comprehension, demonstrating understanding
Relationship: The concepts are related in that they both describe the expression or demonstration of understanding.
Criteria: A designer expresses or demonstrates understanding.
Phrase: Expressing comprehension.

32.
Concepts: promote understanding, facilitating user understanding, enhancing user understanding, enhancing understanding
Relationship: The concepts are related in that they all describe the promotion or facilitation of understanding.
Criteria: A designer promotes or facilitates understanding.
Phrase: Promoting understanding.