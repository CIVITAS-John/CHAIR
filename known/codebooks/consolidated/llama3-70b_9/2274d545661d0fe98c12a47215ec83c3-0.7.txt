You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (24 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
24. 
Concepts: {Repeat the input 24}
Relationship: {What is logical relationship between concepts in code 24, or N/A if not applicable}
Criteria: {Who did what, and how for code 24}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: seeking to improve educational utility, seeking enhancements for learning experiences
- A user seeks to improve the educational utility or value of the Physics Lab software.
- A user or designer seeks to enhance or improve the learning experiences provided by the Physics Lab software.

2.
Concepts: suggested development approach, advise on development approach
- Suggestions or advice on how to approach development or improvement
- Advice or guidance on how to approach development, often based on experience or expertise.

3.
Concepts: development advice, user development advice, development suggestion
- User advises on refinement or development approach.
- User advises on development approach or prioritization.
- User suggests a focused development approach.

4.
Concepts: encourage systematic development, suggest methodical approach
- User suggests a systematic approach to development.
- User suggests a methodical or systematic approach to development or feature implementation.

5.
Concepts: demonstrating interest, express interest in using the software, expressing interest in learning
- A user demonstrates interest or curiosity about the software or its development.
- Showing interest in using the software or exploring its features.
- User expresses interest in learning more about the software or tools

6.
Concepts: express interest, expressing interest in features, feature interest
- A user or designer expresses interest in a specific topic or feature.
- Users express interest in specific features or functionalities of the software.
- User expresses interest in a specific feature, functionality, or aspect of the software.

7.
Concepts: engage community interest, engaging with software development interest
- Designers and users generate interest and excitement about the software and its development.
- Users engage with the community's interest in software development.

8.
Concepts: expressing interest, active engagement
- A user expresses interest or enthusiasm for updates.
- A user demonstrates active engagement or interest in updates or developments.

9.
Concepts: usability advocacy, user experience advocacy
- User advocates for usability improvements.
- A user advocates for an enhanced user experience.

10.
Concepts: advocate for better design, advocating for user-centered design, advocate for user-driven design, advocating for user-centric design
- A user or designer advocates for better design practices or approaches.
- A user advocates for design adjustments that prioritize user needs.
- User suggests or advocates for a design idea or feature that benefits the user experience.
- User advocates for design choices based on user experience.

11.
Concepts: advocate for user-friendly tools, advocating for user-friendly resources
- Advocating for user-friendly tools or features.
- Users advocate for user-friendly resources or materials.

12.
Concepts: advocate for user needs, advocate for practical features
- A user advocates for a feature that meets their needs, citing benefits for their use case.
- User suggests a practical feature for the platform, specifying its potential benefits.

13.
Concepts: share classroom success, sharing positive classroom experiences, positive classroom experience
- User shares successful classroom experience
- User shares a positive experience using the software in a classroom.
- User shares positive experience or outcome using the software.

14.
Concepts: highlighting user experiences, highlighting user engagement
- Users highlight their experiences.
- Highlighting user engagement or success with a product or feature.

15.
Concepts: expressed student engagement, software impact on student engagement
- User expresses student engagement or positive reactions to the software.
- Users highlight the impact of the software on student engagement.

16.
Concepts: emphasizing user guidance, emphasizing documentation
- A user emphasizes the importance of user guidance or support.
- A user emphasizes the importance of documentation or user manuals.

17.
Concepts: practical suggestion, suggesting practical use cases
- A user identifies a practical need or suggests a solution.
- Users suggest practical use cases.

18.
Concepts: highlight usability need, pointing out practical needs
- A user highlights a usability need or suggests an improvement to the software.
- A user points out a practical need or requirement for the software.

19.
Concepts: providing reassurance, reassure about software usability
- A user provides reassurance about compatibility.
- A user provides reassurance about software usability.

20.
Concepts: highlighting convenience, emphasizing convenience
- A user highlights the convenience of a feature.
- A user emphasizes the importance of convenience or ease of use.

21.
Concepts: practicality, practical utility
- User highlights the practicality or usability of a software or tool.
- A user highlights the practicality or usefulness of the software.
- User emphasizes the practical utility or benefits of a feature or functionality.

22.
Concepts: feature planning, planning feature development
- A designer plans to create a new feature or function.
- A designer plans or outlines the development of new features.

23.
Concepts: outlining planned features, list planned features and components
- A designer outlines planned features or functionalities of the software.
- The designer lists or outlines the features, components, or updates planned for the software.

24.
Concepts: update preview, previewing future updates, previewing upcoming updates
- The designer provides a preview of upcoming updates or features.
- Designer previews or announces upcoming updates or features.
- Designer previews upcoming software updates.
===
Here are the definitions for each code:

---
1.
Concepts: seeking to improve educational utility, seeking enhancements for learning experiences
Relationship: The concepts are related in that improving educational utility is a means to enhance learning experiences.
Criteria: Users or designers aim to improve the educational value of the Physics Lab software to enhance learning experiences.
Phrase: Seeking to enhance learning experiences.

2.
Concepts: suggested development approach, advise on development approach
Relationship: The concepts are related in that suggesting a development approach implies advising on how to approach development.
Criteria: Users or designers provide advice or guidance on how to approach development or improvement of the Physics Lab software.
Phrase: Advising on development approach.

3.
Concepts: development advice, user development advice, development suggestion
Relationship: The concepts are related in that user advice is a type of development suggestion.
Criteria: Users provide advice or suggestions on refinement or development approach for the Physics Lab software.
Phrase: Providing development advice.

4.
Concepts: encourage systematic development, suggest methodical approach
Relationship: The concepts are related in that encouraging systematic development implies suggesting a methodical approach.
Criteria: Users suggest a systematic or methodical approach to development or feature implementation in the Physics Lab software.
Phrase: Suggesting a methodical approach.

5.
Concepts: demonstrating interest, express interest in using the software, expressing interest in learning
Relationship: The concepts are related in that demonstrating interest implies expressing interest in using the software or learning more about it.
Criteria: Users demonstrate interest or curiosity about the Physics Lab software or its development.
Phrase: Expressing interest in the software.

6.
Concepts: express interest, expressing interest in features, feature interest
Relationship: The concepts are related in that expressing interest implies interest in specific features or functionalities.
Criteria: Users express interest in specific features or functionalities of the Physics Lab software.
Phrase: Expressing interest in features.

7.
Concepts: engage community interest, engaging with software development interest
Relationship: The concepts are related in that engaging community interest implies engaging with interest in software development.
Criteria: Designers and users generate interest and excitement about the Physics Lab software and its development.
Phrase: Engaging community interest.

8.
Concepts: expressing interest, active engagement
Relationship: The concepts are related in that expressing interest implies active engagement or enthusiasm.
Criteria: Users express interest or enthusiasm for updates or developments in the Physics Lab software.
Phrase: Expressing interest in updates.

9.
Concepts: usability advocacy, user experience advocacy
Relationship: The concepts are related in that advocating for usability implies advocating for an enhanced user experience.
Criteria: Users advocate for usability improvements or an enhanced user experience in the Physics Lab software.
Phrase: Advocating for usability.

10.
Concepts: advocate for better design, advocating for user-centered design, advocate for user-driven design, advocating for user-centric design
Relationship: The concepts are related in that advocating for better design implies advocating for user-centered or user-driven design approaches.
Criteria: Users or designers advocate for design practices or approaches that prioritize user needs in the Physics Lab software.
Phrase: Advocating for user-centered design.

11.
Concepts: advocate for user-friendly tools, advocating for user-friendly resources
Relationship: The concepts are related in that advocating for user-friendly tools implies advocating for user-friendly resources.
Criteria: Users advocate for user-friendly tools or resources in the Physics Lab software.
Phrase: Advocating for user-friendly tools.

12.
Concepts: advocate for user needs, advocate for practical features
Relationship: The concepts are related in that advocating for user needs implies advocating for practical features that meet those needs.
Criteria: Users advocate for features that meet their needs, citing benefits for their use case in the Physics Lab software.
Phrase: Advocating for user needs.

13.
Concepts: share classroom success, sharing positive classroom experiences, positive classroom experience
Relationship: The concepts are related in that sharing classroom success implies sharing positive experiences.
Criteria: Users share successful classroom experiences or positive outcomes using the Physics Lab software.
Phrase: Sharing classroom success.

14.
Concepts: highlighting user experiences, highlighting user engagement
Relationship: The concepts are related in that highlighting user experiences implies highlighting engagement or success with a product or feature.
Criteria: Users highlight their experiences or engagement with the Physics Lab software.
Phrase: Highlighting user experiences.

15.
Concepts: expressed student engagement, software impact on student engagement
Relationship: The concepts are related in that expressed student engagement implies highlighting the impact of the software on student engagement.
Criteria: Users express student engagement or positive reactions to the Physics Lab software.
Phrase: Expressing student engagement.

16.
Concepts: emphasizing user guidance, emphasizing documentation
Relationship: The concepts are related in that emphasizing user guidance implies emphasizing the importance of documentation or user manuals.
Criteria: Users emphasize the importance of user guidance or support in the Physics Lab software.
Phrase: Emphasizing user guidance.

17.
Concepts: practical suggestion, suggesting practical use cases
Relationship: The concepts are related in that practical suggestions imply suggesting practical use cases.
Criteria: Users identify practical needs or suggest solutions for the Physics Lab software.
Phrase: Suggesting practical use cases.

18.
Concepts: highlight usability need, pointing out practical needs
Relationship: The concepts are related in that highlighting usability needs implies pointing out practical needs or requirements.
Criteria: Users highlight usability needs or suggest improvements to the Physics Lab software.
Phrase: Highlighting usability needs.

19.
Concepts: providing reassurance, reassure about software usability
Relationship: The concepts are related in that providing reassurance implies reassuring about software usability.
Criteria: Users provide reassurance about compatibility or software usability in the Physics Lab software.
Phrase: Providing reassurance.

20.
Concepts: highlighting convenience, emphasizing convenience
Relationship: The concepts are related in that highlighting convenience implies emphasizing the importance of convenience or ease of use.
Criteria: Users highlight the convenience of a feature or emphasize the importance of convenience in the Physics Lab software.
Phrase: Highlighting convenience.

21.
Concepts: practicality, practical utility
Relationship: The concepts are related in that practicality implies practical utility or usefulness.
Criteria: Users highlight the practicality or usability of the Physics Lab software or tools.
Phrase: Highlighting practicality.

22.
Concepts: feature planning, planning feature development
Relationship: The concepts are related in that feature planning implies planning development of new features.
Criteria: Designers plan to create new features or functions in the Physics Lab software.
Phrase: Planning feature development.

23.
Concepts: outlining planned features, list planned features and components
Relationship: The concepts are related in that outlining planned features implies listing features, components, or updates planned for the software.
Criteria: Designers outline planned features or functionalities of the Physics Lab software.
Phrase: Outlining planned features.

24.
Concepts: update preview, previewing future updates, previewing upcoming updates
Relationship: The concepts are related in that update preview implies previewing future or upcoming updates.
Criteria: Designers provide a preview of upcoming updates or features in the Physics Lab software.
Phrase: Previewing upcoming updates.