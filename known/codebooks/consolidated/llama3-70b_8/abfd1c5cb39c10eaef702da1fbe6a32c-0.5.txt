You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: clarify user interactions, clarifying user experience
- Designer clarifies user interactions
- Designer clarifies or explains a user experience or feature

2.
Concepts: promote understanding, promoting understanding
- Designer promotes understanding or explains a concept or feature.
- Designer promotes understanding of feature significance or importance

3.
Concepts: providing explanations, clarify design aspects
- A designer provides an explanation or clarification about a feature or concept.
- Users explain the answer to a question or provide context.
- A designer clarifies or explains a specific design aspect to facilitate understanding.

4.
Concepts: facilitating user understanding, promote understanding of user interface
- The designer explains or clarifies a concept to facilitate user understanding.
- Designers provide explanations or clarifications about the user interface.

5.
Concepts: enhances user understanding, enhancing user awareness
- A designer enhances user understanding of software capabilities.
- A designer enhances or raises awareness about the capabilities or features of the software.

6.
Concepts: catering to user needs, accommodates user needs
- Designer caters to user needs and preferences.
- A designer shows willingness to accommodate user needs or requests.

7.
Concepts: balance user needs, balancing user needs
- Balancing competing user needs or demands.
- A designer balances or considers different needs or perspectives from users.

8.
Concepts: supported user needs, acknowledge user need, recognizing user needs
- Designer acknowledges or supports user needs.
- Designer acknowledges a user's need or request.
- A designer recognizes or acknowledges user requirements or needs.

9.
Concepts: address user needs, emphasizing user needs, identify user needs for functionality
- The designer addresses user needs or requirements.
- Designer emphasizes user requirements or needs
- Designer identifies user needs for specific functionality or features.

10.
Concepts: aligning with user needs, aligning software with user needs
- Designer aligns with user needs or requirements
- A designer aligns the software's capabilities with the needs or requirements of the users.

11.
Concepts: addresses user concerns, responding to user concerns, designer addresses user concern
- A designer addresses or responds to user concerns or worries.
- The designer responds to a user's question or concern.
- Designer addresses or responds to a user's concern.

12.
Concepts: concern resolution, respond to mitigate concern
- Designer addresses a user's concern or worry.
- Designer responds to mitigate user concerns or worries.

13.
Concepts: addressing usability concerns, addresses functionality concerns
- The designer addresses a usability concern or issue.
- A designer addresses a user's concern about software functionality.

14.
Concepts: consider accessibility, considering accessibility
- A designer considers accessibility in software development.
- Designer considers or discusses accessibility features for diverse users.

15.
Concepts: acknowledge user sentiments, acknowledges user experience, acknowledging user experience
- The designer acknowledges or responds to a user's sentiment or emotion.
- Designer acknowledges or shows empathy towards a user's experience.
- A designer or developer acknowledges a user's experience or concern.

16.
Concepts: addresses user challenges, address potential user challenges, show concern for user challenges
- A designer addresses potential user challenges with software.
- The designer addresses or anticipates potential challenges or difficulties users may face when using the software.
- Designer shows concern for users' difficulties or challenges.

17.
Concepts: anticipate user needs, anticipates user issues
- Designer anticipates user needs by considering potential technical issues.
- Designer anticipates potential user experience issues or problems.

18.
Concepts: highlight simple addition of components, emphasize simplicity in component addition
- Designer highlights the simplicity of adding components or features.
- Designer emphasizes the importance of simplicity in adding components.

19.
Concepts: strive for clarity in functionality, pursuing clarity and simplicity
- Designer strives for simplicity and clarity in design.
- Designer aims to simplify or clarify the design or functionality of the platform.

20.
Concepts: suggest simplification, suggest simplification of design, suggests simplification
- Designer suggests simplifying a feature or process.
- A person suggests simplifying a design or process.
- A designer suggests simplifying a process or feature.

21.
Concepts: promote usability, simplify user experience, simplify design for usability
- Designer aims to simplify the design or functionality.
- A designer aims to simplify the user experience or workflow.
- Designer suggests simplifying design elements to improve usability.

22.
Concepts: enhancing user experience, enhance user experience
- Enhancing user experience through design changes.
- A designer enhances the user experience through new features and updates.
- Enhancing user experience with clear instructions

23.
Concepts: seek efficiency, aiming for usability
- Designer seeks to simplify or improve the efficiency of the software.
- A designer aims to improve usability or simplicity of the software.

24.
Concepts: usability focus, emphasizing usability, emphasize user-friendly design, user-friendly design
- The designer emphasizes usability in the design process.
- The designer prioritizes usability, simplicity, or ease of use in software design.
- A designer emphasizes the importance of usability in software design.
- Designer emphasizes the importance of user-friendly design or accessibility.
- Designer emphasizes the importance of user-friendly design.

25.
Concepts: aims for intuitive design, emphasizing intuitive design
- Designer aims to create an intuitive design that is easy to use.
- A designer emphasizes the importance of intuitive design principles.

26.
Concepts: maintains user focus, maintain focus on user needs
- Designer prioritizes the user's needs or experience.
- The designer maintains focus on user needs and requirements.

27.
Concepts: emphasize user experience, highlight user-centered design, prioritize user experience in design decisions
- Designer emphasizes the importance of user experience in design decisions.
- Designer prioritizes user-centered design principles.
- Designer prioritizes user experience in design decisions.

28.
Concepts: long-term benefit explanation, emphasizing long-term value, highlighting long-term benefits, described feature's long-term benefits, discussed long-term benefits
- Designer explains the long-term benefits of a feature.
- A designer highlights the long-term benefits of a feature or design decision.
- A designer highlights the long-term benefits of a feature.
- A person explains the long-term benefits of a feature or functionality.
- Designer discusses the long-term benefits of a feature or application.

29.
Concepts: promote stability in design, promote long-term stability and usability
- Designer prioritizes design features for long-term stability.
- Designer prioritizes long-term stability and usability of a feature.

30.
Concepts: emphasize feature utility, emphasizing importance of features
- Emphasizing the utility or benefits of a feature.
- Emphasizing the importance of a specific feature or functionality.

31.
Concepts: highlight feature importance, emphasize key features
- Designer highlights the importance of a specific feature.
- A designer highlights the importance or relevance of a specific feature or functionality.

32.
Concepts: enhancing relevance, enhancing relevance of designs
- Designer seeks to improve software relevance
- Designer aims to enhance the relevance or applicability of the platform to real-world scenarios.
===
Here are the definitions for each code:

---
1.
Concepts: clarify user interactions, clarifying user experience
Relationship: The concepts are related as the designer clarifies user interactions to improve user experience.
Criteria: Designer clarifies user interactions to facilitate understanding.
Phrase: Clarifying user interactions.

2.
Concepts: promote understanding, promoting understanding
Relationship: The concepts are related as promoting understanding is the goal of clarifying user interactions.
Criteria: Designer promotes understanding of features or concepts.
Phrase: Promoting understanding.

3.
Concepts: providing explanations, clarify design aspects
Relationship: Providing explanations is a way to clarify design aspects.
Criteria: Designer provides explanations to facilitate user understanding.
Phrase: Providing explanations.

4.
Concepts: facilitating user understanding, promote understanding of user interface
Relationship: Facilitating user understanding is the goal of promoting understanding of the user interface.
Criteria: Designer explains or clarifies concepts to facilitate user understanding.
Phrase: Facilitating user understanding.

5.
Concepts: enhances user understanding, enhancing user awareness
Relationship: Enhancing user understanding leads to enhancing user awareness.
Criteria: Designer enhances user understanding of software capabilities.
Phrase: Enhancing user understanding.

6.
Concepts: catering to user needs, accommodates user needs
Relationship: Catering to user needs involves accommodating their needs.
Criteria: Designer caters to user needs and preferences.
Phrase: Catering to user needs.

7.
Concepts: balance user needs, balancing user needs
Relationship: Balancing user needs involves considering competing demands.
Criteria: Designer balances competing user needs or demands.
Phrase: Balancing user needs.

8.
Concepts: supported user needs, acknowledge user need, recognizing user needs
Relationship: Supporting user needs involves acknowledging and recognizing them.
Criteria: Designer acknowledges or supports user needs.
Phrase: Supporting user needs.

9.
Concepts: address user needs, emphasizing user needs, identify user needs for functionality
Relationship: Addressing user needs involves emphasizing and identifying them.
Criteria: Designer addresses user needs or requirements.
Phrase: Addressing user needs.

10.
Concepts: aligning with user needs, aligning software with user needs
Relationship: Aligning with user needs involves aligning the software with their needs.
Criteria: Designer aligns with user needs or requirements.
Phrase: Aligning with user needs.

11.
Concepts: addresses user concerns, responding to user concerns, designer addresses user concern
Relationship: Addressing user concerns involves responding to them.
Criteria: Designer addresses or responds to user concerns or worries.
Phrase: Addressing user concerns.

12.
Concepts: concern resolution, respond to mitigate concern
Relationship: Concern resolution involves responding to mitigate concerns.
Criteria: Designer addresses a user's concern or worry.
Phrase: Resolving concerns.

13.
Concepts: addressing usability concerns, addresses functionality concerns
Relationship: Addressing usability concerns involves addressing functionality concerns.
Criteria: Designer addresses a usability concern or issue.
Phrase: Addressing usability concerns.

14.
Concepts: consider accessibility, considering accessibility
Relationship: Considering accessibility is a way to cater to diverse users.
Criteria: Designer considers accessibility in software development.
Phrase: Considering accessibility.

15.
Concepts: acknowledge user sentiments, acknowledges user experience, acknowledging user experience
Relationship: Acknowledging user sentiments involves acknowledging their experience.
Criteria: Designer acknowledges or responds to a user's sentiment or emotion.
Phrase: Acknowledging user sentiments.

16.
Concepts: addresses user challenges, address potential user challenges, show concern for user challenges
Relationship: Addressing user challenges involves addressing potential challenges.
Criteria: Designer addresses potential user challenges with software.
Phrase: Addressing user challenges.

17.
Concepts: anticipate user needs, anticipates user issues
Relationship: Anticipating user needs involves anticipating potential issues.
Criteria: Designer anticipates user needs by considering potential technical issues.
Phrase: Anticipating user needs.

18.
Concepts: highlight simple addition of components, emphasize simplicity in component addition
Relationship: Highlighting simplicity involves emphasizing simplicity in component addition.
Criteria: Designer highlights the simplicity of adding components or features.
Phrase: Highlighting simplicity.

19.
Concepts: strive for clarity in functionality, pursuing clarity and simplicity
Relationship: Striving for clarity involves pursuing simplicity.
Criteria: Designer strives for simplicity and clarity in design.
Phrase: Striving for clarity.

20.
Concepts: suggest simplification, suggest simplification of design, suggests simplification
Relationship: Suggesting simplification involves suggesting simplification of design.
Criteria: Designer suggests simplifying a feature or process.
Phrase: Suggesting simplification.

21.
Concepts: promote usability, simplify user experience, simplify design for usability
Relationship: Promoting usability involves simplifying the user experience.
Criteria: Designer aims to simplify the design or functionality.
Phrase: Promoting usability.

22.
Concepts: enhancing user experience, enhance user experience
Relationship: Enhancing user experience involves making design changes.
Criteria: Enhancing user experience through design changes.
Phrase: Enhancing user experience.

23.
Concepts: seek efficiency, aiming for usability
Relationship: Seeking efficiency involves aiming for usability.
Criteria: Designer seeks to simplify or improve the efficiency of the software.
Phrase: Seeking efficiency.

24.
Concepts: usability focus, emphasizing usability, emphasize user-friendly design, user-friendly design
Relationship: Focusing on usability involves emphasizing user-friendly design.
Criteria: Designer emphasizes usability in the design process.
Phrase: Focusing on usability.

25.
Concepts: aims for intuitive design, emphasizing intuitive design
Relationship: Aiming for intuitive design involves emphasizing intuitive design principles.
Criteria: Designer aims to create an intuitive design that is easy to use.
Phrase: Aiming for intuitive design.

26.
Concepts: maintains user focus, maintain focus on user needs
Relationship: Maintaining user focus involves prioritizing user needs.
Criteria: Designer prioritizes the user's needs or experience.
Phrase: Maintaining user focus.

27.
Concepts: emphasize user experience, highlight user-centered design, prioritize user experience in design decisions
Relationship: Emphasizing user experience involves prioritizing user-centered design.
Criteria: Designer emphasizes the importance of user experience in design decisions.
Phrase: Emphasizing user experience.

28.
Concepts: long-term benefit explanation, emphasizing long-term value, highlighting long-term benefits, described feature's long-term benefits, discussed long-term benefits
Relationship: Explaining long-term benefits involves emphasizing long-term value.
Criteria: Designer explains the long-term benefits of a feature.
Phrase: Explaining long-term benefits.

29.
Concepts: promote stability in design, promote long-term stability and usability
Relationship: Promoting stability involves promoting long-term usability.
Criteria: Designer prioritizes design features for long-term stability.
Phrase: Promoting stability.

30.
Concepts: emphasize feature utility, emphasizing importance of features
Relationship: Emphasizing feature utility involves emphasizing the importance of features.
Criteria: Emphasizing the utility or benefits of a feature.
Phrase: Emphasizing feature utility.

31.
Concepts: highlight feature importance, emphasize key features
Relationship: Highlighting feature importance involves emphasizing key features.
Criteria: Designer highlights the importance of a specific feature.
Phrase: Highlighting feature importance.

32.
Concepts: enhancing relevance, enhancing relevance of designs
Relationship: Enhancing relevance involves improving software relevance.
Criteria: Designer seeks to improve software relevance.
Phrase: Enhancing relevance.

Let me know if you need any further assistance!