You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: supporting educational use, enhancing educational value
- A designer supports or promotes educational use or demonstrates educational relevance.
- A designer aims to enhance educational value, highlights educational tools, or explains educational benefits.

2.
Concepts: question, asking a question
- Asking a question or seeking clarification about a topic.
- Asking a question about the app or its functionality.

3.
Concepts: requesting software usage guidance, requests documentation
- Users ask about how to use specific features or products, seeking instructions or guidance.
- Users express their need for documentation or user manual, requesting a user manual, documentation, or guidance for using software and instructional materials.

4.
Concepts: expressing needs, reiterates need
- A user clarifies needs or expresses needs.
- A user restates or rephrases a request or question, reiterating their need.

5.
Concepts: theorizing about compatibility, clarifying software compatibility
- Designers theorize about software compatibility and express theoretical compatibility.
- A designer clarifies compatibility issues, discusses software compatibility, or identifies compatible systems.

6.
Concepts: exploring compatibility options, considering software compatibility
- User explores compatibility options for the application.
- A user suggests compatibility checks, expresses concern, or recognizes hardware diversity and considers compatibility.

7.
Concepts: requesting multi-platform support, expressing interest in multi-platform access
- User requests support for multiple platforms (e.g., PC, interactive whiteboard).
- A user expresses interest in multiple platforms or multi-device access.

8.
Concepts: discussing offline functionality, requesting offline capabilities and suggesting local export support
- A user discusses offline functionality or recognizes the need for offline functionality.
- User emphasizes the need for offline capabilities, suggesting the need for local export support or offline functionality.

9.
Concepts: expressing interest, suggesting platform expansion
- Users express interest in the software's development or updates.
- Users express interest in platform development or updates.

10.
Concepts: explains situation, providing context for involvement
- User explains a situation or context.
- A user provides context or background information for their question or comment, providing context or background information about their involvement.

11.
Concepts: clarifying visual details, clarifies issues
- A user clarifies visual details or elaborates and clarifies.
- A designer clarifies or elaborates on a topic or issue, providing additional information or clarification.

12.
Concepts: explaining technical limitations, setting limitations and considering constraints
- Designers explain technical limitations, explaining limitations or constraints of the current version.
- The designer sets limitations or conditions for compatibility or functionality, considering practical constraints or limitations, mentioning or considering limitations or constraints related to hardware.

13.
Concepts: expressing remorse for inconvenience, expressing concern and frustration
- A user or designer expresses regret or remorse for inconvenience or potential disruptions.
- A user expresses worry or concern about an issue or problem with the software, frustration or annoyance is expressed by a user or designer.

14.
Concepts: probing for user difficulties, discussing usability issues
- A designer probes or asks about user difficulties or challenges.
- Designers discuss usability or user experience issues, discussing or inquiring about input methods or user interface, highlighting challenges or difficulties in designing the user interface.

15.
Concepts: encouraging problem reporting, reporting usability concerns
- A designer encourages users to report problems or issues.
- Designers confirm a usability issue by reporting or identifying a usability issue or concern, warning users about potential issues.

16.
Concepts: providing software context, explaining user control options
- Designers provide explanations to promote understanding of the software, describing components or parts of the software.
- Designers explain or describe user control options, highlighting specific functionality or features in the software.

17.
Concepts: clarifying feature use, guiding users on features
- A designer provides clear explanations of feature use and functionality.
- A designer offers guidance or advice on accessing specific platform features.

18.
Concepts: promoting accessibility, improving usability
- A designer promotes accessibility, suggesting features or improvements to aid users with disabilities.
- Designers improve usability or enhance user experience with new tools, providing guidance or support to enhance user experience.

19.
Concepts: supporting user needs, addressing user needs
- Designers support or align with user needs.
- Designers address user needs, implementing changes or new features.

20.
Concepts: labeling ideal component, highlighting ideal components
- Developer labels a component as ideal or optimal.
- Designer highlights ideal components or features by introducing a new ideal component, highlighting its features.

21.
Concepts: promoting new features, demonstrating features
- Designers promote and introduce new features.
- Designers demonstrate features or provide examples.

22.
Concepts: updating users, informing about status updates
- A designer provides an update or notification, and users feel comfortable responding with feedback or suggestions by providing updates and seeking feedback or response.
- Designer informs users about the review status, submission status, or update status to the online community.

23.
Concepts: reporting bug fixes, detailing new components
- Designers report bug fixes and detail software updates.
- Designers detail new components, adjustments, and features by providing details about new components, features, and bug fixes.

24.
Concepts: seeking updates, requesting updates
- User seeks updates or information about recent developments.
- A user requests updates or inquires about experiment inclusion.

25.
Concepts: planning update schedules, planning design phases
- Designer provides a detailed plan or schedule for upcoming updates to the online community.
- Designer sequences or prioritizes design phases or tasks and plans feature development to the online community.

26.
Concepts: demonstrating transparency, promoting or maintaining transparency
- Designers demonstrate transparency or engage in open discussion.
- A designer promotes or maintains transparency in communication.

27.
Concepts: demonstrating courtesy, maintains community etiquette
- Users or designers demonstrate courtesy in communication, showing respect for the designer's time or effort.
- A designer shows consideration for community members by apologizing or being mindful of others.

28.
Concepts: committing to updates, continuous improvement commitment
- Designers commit to implementing features or updates by expressing commitment to continuous improvement.
- Committing to continuous improvement based on user feedback

29.
Concepts: commits to community consultation, announcing future consultation plans
- A designer announces plans to consult with users or the community.
- Designer announces future consultation or collaboration to the online community.

30.
Concepts: proposing design changes, inferring design change requirement
- A designer proposes an idea or suggestion by proposing a design change or improvement.
- Designer infers or identifies a requirement for design change.

31.
Concepts: considers potential solutions, sharing design thoughts
- Designers consider or share potential solutions by reflecting on or considering development advice.
- Designers share their thoughts or ideas about the design or development process, reflecting on past experiences or sharing lessons learned.

32.
Concepts: soliciting user input, accepting user input
- Designers seek user input or feedback.
- A designer accepts user suggestions or feedback.
===
Here are the definitions for each code:

---
1.
Concepts: supporting educational use, enhancing educational value
Relationship: The concepts are related as they both focus on the educational aspects of the online community.
Criteria: A designer supports or promotes educational use or demonstrates educational relevance, aiming to enhance educational value.
Phrase: Supporting educational use and enhancing educational value.

2.
Concepts: question, asking a question
Relationship: The concepts are synonymous, both referring to the act of inquiring about something.
Criteria: A user asks a question or seeks clarification about a topic or the app's functionality.
Phrase: Asking a question.

3.
Concepts: requesting software usage guidance, requests documentation
Relationship: The concepts are related as they both involve seeking help or resources for using the software.
Criteria: A user asks about how to use specific features or products, seeking instructions or guidance, and expresses a need for documentation or user manual.
Phrase: Requesting software usage guidance.

4.
Concepts: expressing needs, reiterates need
Relationship: The concepts are related as they both involve clarifying or rephrasing a request or question.
Criteria: A user clarifies needs or expresses needs, restating or rephrasing a request or question.
Phrase: Expressing needs.

5.
Concepts: theorizing about compatibility, clarifying software compatibility
Relationship: The concepts are related as they both involve discussing software compatibility.
Criteria: A designer theorizes about software compatibility, clarifying compatibility issues, discussing software compatibility, or identifying compatible systems.
Phrase: Theorizing about compatibility.

6.
Concepts: exploring compatibility options, considering software compatibility
Relationship: The concepts are related as they both involve considering software compatibility.
Criteria: A user explores compatibility options for the application, suggesting compatibility checks, expressing concern, or recognizing hardware diversity and considering compatibility.
Phrase: Exploring compatibility options.

7.
Concepts: requesting multi-platform support, expressing interest in multi-platform access
Relationship: The concepts are related as they both involve requesting or expressing interest in accessing the software on multiple platforms.
Criteria: A user requests support for multiple platforms or expresses interest in multiple platforms or multi-device access.
Phrase: Requesting multi-platform support.

8.
Concepts: discussing offline functionality, requesting offline capabilities and suggesting local export support
Relationship: The concepts are related as they both involve discussing or requesting offline capabilities.
Criteria: A user discusses offline functionality or recognizes the need for offline functionality, emphasizing the need for offline capabilities, suggesting the need for local export support or offline functionality.
Phrase: Discussing offline functionality.

9.
Concepts: expressing interest, suggesting platform expansion
Relationship: The concepts are related as they both involve expressing interest in the software's development or updates.
Criteria: A user expresses interest in the software's development or updates, suggesting platform development or updates.
Phrase: Expressing interest.

10.
Concepts: explains situation, providing context for involvement
Relationship: The concepts are related as they both involve providing context or background information.
Criteria: A user explains a situation or context, providing context or background information for their question or comment.
Phrase: Explaining a situation.

11.
Concepts: clarifying visual details, clarifies issues
Relationship: The concepts are related as they both involve providing additional information or clarification.
Criteria: A user clarifies visual details or elaborates and clarifies, and a designer clarifies or elaborates on a topic or issue.
Phrase: Clarifying visual details.

12.
Concepts: explaining technical limitations, setting limitations and considering constraints
Relationship: The concepts are related as they both involve discussing or considering limitations or constraints.
Criteria: A designer explains technical limitations, setting limitations or conditions for compatibility or functionality, considering practical constraints or limitations.
Phrase: Explaining technical limitations.

13.
Concepts: expressing remorse for inconvenience, expressing concern and frustration
Relationship: The concepts are related as they both involve expressing negative emotions.
Criteria: A user or designer expresses regret or remorse for inconvenience or potential disruptions, worry or concern about an issue or problem with the software.
Phrase: Expressing remorse.

14.
Concepts: probing for user difficulties, discussing usability issues
Relationship: The concepts are related as they both involve discussing or inquiring about user difficulties or challenges.
Criteria: A designer probes or asks about user difficulties or challenges, discussing usability or user experience issues.
Phrase: Probing for user difficulties.

15.
Concepts: encouraging problem reporting, reporting usability concerns
Relationship: The concepts are related as they both involve reporting or encouraging the reporting of issues.
Criteria: A designer encourages users to report problems or issues, confirming a usability issue by reporting or identifying a usability issue or concern.
Phrase: Encouraging problem reporting.

16.
Concepts: providing software context, explaining user control options
Relationship: The concepts are related as they both involve providing explanations or descriptions.
Criteria: Designers provide explanations to promote understanding of the software, describing components or parts of the software, explaining or describing user control options.
Phrase: Providing software context.

17.
Concepts: clarifying feature use, guiding users on features
Relationship: The concepts are related as they both involve providing guidance or explanations.
Criteria: A designer provides clear explanations of feature use and functionality, offering guidance or advice on accessing specific platform features.
Phrase: Clarifying feature use.

18.
Concepts: promoting accessibility, improving usability
Relationship: The concepts are related as they both involve improving the user experience.
Criteria: A designer promotes accessibility, suggesting features or improvements to aid users with disabilities, improving usability or enhancing user experience.
Phrase: Promoting accessibility.

19.
Concepts: supporting user needs, addressing user needs
Relationship: The concepts are related as they both involve supporting or addressing user needs.
Criteria: Designers support or align with user needs, addressing user needs, implementing changes or new features.
Phrase: Supporting user needs.

20.
Concepts: labeling ideal component, highlighting ideal components
Relationship: The concepts are related as they both involve identifying or highlighting ideal components.
Criteria: A developer labels a component as ideal or optimal, highlighting ideal components or features by introducing a new ideal component.
Phrase: Labeling ideal components.

21.
Concepts: promoting new features, demonstrating features
Relationship: The concepts are related as they both involve introducing or showcasing new features.
Criteria: Designers promote and introduce new features, demonstrating features or providing examples.
Phrase: Promoting new features.

22.
Concepts: updating users, informing about status updates
Relationship: The concepts are related as they both involve providing updates or notifications.
Criteria: A designer provides an update or notification, informing users about the review status, submission status, or update status.
Phrase: Updating users.

23.
Concepts: reporting bug fixes, detailing new components
Relationship: The concepts are related as they both involve reporting or detailing updates.
Criteria: Designers report bug fixes and detail software updates, detailing new components, adjustments, and features.
Phrase: Reporting bug fixes.

24.
Concepts: seeking updates, requesting updates
Relationship: The concepts are related as they both involve seeking or requesting updates.
Criteria: A user seeks updates or information about recent developments, requesting updates or inquiring about experiment inclusion.
Phrase: Seeking updates.

25.
Concepts: planning update schedules, planning design phases
Relationship: The concepts are related as they both involve planning or scheduling updates or design phases.
Criteria: A designer provides a detailed plan or schedule for upcoming updates, sequencing or prioritizing design phases or tasks.
Phrase: Planning update schedules.

26.
Concepts: demonstrating transparency, promoting or maintaining transparency
Relationship: The concepts are related as they both involve demonstrating or promoting transparency.
Criteria: Designers demonstrate transparency or engage in open discussion, promoting or maintaining transparency in communication.
Phrase: Demonstrating transparency.

27.
Concepts: demonstrating courtesy, maintains community etiquette
Relationship: The concepts are related as they both involve demonstrating respect or consideration.
Criteria: Users or designers demonstrate courtesy in communication, showing respect for the designer's time or effort, apologizing or being mindful of others.
Phrase: Demonstrating courtesy.

28.
Concepts: committing to updates, continuous improvement commitment
Relationship: The concepts are related as they both involve committing to updates or continuous improvement.
Criteria: Designers commit to implementing features or updates, expressing commitment to continuous improvement.
Phrase: Committing to updates.

29.
Concepts: commits to community consultation, announcing future consultation plans
Relationship: The concepts are related as they both involve committing to or announcing plans for community consultation.
Criteria: A designer announces plans to consult with users or the community, committing to future consultation or collaboration.
Phrase: Committing to community consultation.

30.
Concepts: proposing design changes, inferring design change requirement
Relationship: The concepts are related as they both involve proposing or identifying a need for design changes.
Criteria: A designer proposes an idea or suggestion, inferring or identifying a requirement for design change.
Phrase: Proposing design changes.

31.
Concepts: considers potential solutions, sharing design thoughts
Relationship: The concepts are related as they both involve considering or sharing ideas.
Criteria: Designers consider or share potential solutions, reflecting on or considering development advice, sharing thoughts or ideas about the design or development process.
Phrase: Considering potential solutions.

32.
Concepts: soliciting user input, accepting user input
Relationship: The concepts are related as they both involve seeking or accepting user input or feedback.
Criteria: Designers seek user input or feedback, accepting user suggestions or feedback.
Phrase: Soliciting user input.