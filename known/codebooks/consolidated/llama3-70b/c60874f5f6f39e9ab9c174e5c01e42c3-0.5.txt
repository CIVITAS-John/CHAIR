You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (21 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
21. 
Concepts: {Repeat the input 21}
Relationship: {What is logical relationship between concepts in code 21, or N/A if not applicable}
Criteria: {Who did what, and how for code 21}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: establish development timelines, setting development goals and timelines
- Designers set development timelines and deadlines.
- Designer discusses or sets development goals, setting a timeline goal for figuring out a specific concept or feature.

2.
Concepts: providing a development roadmap, providing development information
- Designer outlines a roadmap or plan for future development or updates.
- Designer provides information about the software development process or timeline.

3.
Concepts: managing community expectations, managing expectations and sharing vision
- A designer sets community expectations by providing updates or timelines.
- The designer manages expectations while sharing their vision for advanced features.

4.
Concepts: addressing and catering to user needs, anticipating and identifying user needs
- Designer addresses and caters to user needs.
- Designer anticipates and identifies user needs.

5.
Concepts: explore future directions, share research goals and updates
- Designers discuss further interests and explore future directions.
- Designers share information about the research direction and describe ongoing research.

6.
Concepts: considering future compatibility, discussing compatibility and addressing issues
- Future compatibility is considered or discussed.
- Designers discuss compatibility with older systems, addressing compatibility issues and planning for future compatibility.

7.
Concepts: highlights educational tools, demonstrate features and provide illustrative examples
- A designer highlights or showcases educational tools or features.
- Designer demonstrates features and provides illustrative examples.

8.
Concepts: informing about features and introducing new ones, introducing new components and highlighting features
- Designer informs about features and provides feature details, listing and introducing new features.
- Designers introduce new components and announce ideal components, highlighting component features.

9.
Concepts: justifying effort, justifies design choices
- Designer justifies the effort or time invested in a task.
- Designers justify design choices.

10.
Concepts: shares knowledge, sharing and providing information
- Users share knowledge or information relevant to design or development.
- Users share or provide information about specific topics or issues.

11.
Concepts: apologizing for interruption, apologizing for inconvenience and acknowledging disturbance
- The user or designer apologizes for interrupting the conversation.
- Designers show consideration and apologize for inconvenience, acknowledging potential disturbance or inconvenience.

12.
Concepts: affirm user input, confirming feature implementation
- Designers affirm user input and validate plans.
- Designers confirm implementation and agree to add features based on user needs.

13.
Concepts: acknowledging help, acknowledges community expertise
- Users acknowledge help and appreciate community support.
- User acknowledges the expertise or knowledge of others in the community.

14.
Concepts: praising software features, highlighting positive aspects
- Users express satisfaction with the software's features.
- A user highlights a positive aspect of the online community's software.

15.
Concepts: moral support, expressing support and acknowledging progress
- Expressing support or appreciation for the development process or team.
- Users express support and praise ideas, acknowledging progress and encouraging further development.

16.
Concepts: engaging with platform development, engaging with platform usage and functionality
- Users demonstrate interest and investment in the software's development and engage with developers.
- Users engage with platform usage or functionality, and technically explore the software's capabilities.

17.
Concepts: request educational features, propose educational enhancements
- Users request educational features and suggest content.
- A user proposes specific features or demonstrations that enhance the educational experience in the Physics Lab.

18.
Concepts: propose software enhancements, contributing to product development
- Users and designers suggest expanding software capabilities and propose detailed technical enhancements.
- Users suggest improvements and engage in conversations about enhancing the software, providing strategic feedback and ideas.

19.
Concepts: providing detailed feedback, providing justified feedback
- Users provide detailed feedback on the platform or specific features.
- Users provide strategic or constructive feedback with justification or explanation.

20.
Concepts: sharing outdated technology experiences, expressing frustration with outdated systems and limitations
- Users share information about outdated computer systems or technology in schools, highlighting the need for updated technology.
- Users describe or express frustration with outdated technology or systems, and express frustration about current or platform limitations.

21.
Concepts: providing context, demonstrating expertise through context
- Users provide context or information about their environment or situation.
- Users demonstrate expertise by providing context about their background and engaging with the community.
===
Here are the definitions for each code:

---
1.
Concepts: establish development timelines, setting development goals and timelines
Relationship: The concepts are closely related as they both involve planning and setting targets for development.
Criteria: Designers set and share development goals and timelines with the community.
Phrase: Establishing development plans

2.
Concepts: providing a development roadmap, providing development information
Relationship: The concepts are related as they both involve sharing information about the development process.
Criteria: Designers provide information about the development roadmap and process to the community.
Phrase: Sharing development information

3.
Concepts: managing community expectations, managing expectations and sharing vision
Relationship: The concepts are related as they both involve setting and managing expectations within the community.
Criteria: Designers manage community expectations by sharing their vision and development plans.
Phrase: Managing community expectations

4.
Concepts: addressing and catering to user needs, anticipating and identifying user needs
Relationship: The concepts are closely related as they both involve understanding and meeting user needs.
Criteria: Designers address and cater to user needs by anticipating and identifying them.
Phrase: Addressing user needs

5.
Concepts: explore future directions, share research goals and updates
Relationship: The concepts are related as they both involve discussing future plans and goals.
Criteria: Designers explore future directions and share research goals and updates with the community.
Phrase: Exploring future directions

6.
Concepts: considering future compatibility, discussing compatibility and addressing issues
Relationship: The concepts are related as they both involve planning for future compatibility.
Criteria: Designers consider and discuss future compatibility, addressing potential issues.
Phrase: Ensuring future compatibility

7.
Concepts: highlights educational tools, demonstrate features and provide illustrative examples
Relationship: The concepts are related as they both involve showcasing educational tools and features.
Criteria: Designers highlight educational tools and demonstrate features, providing illustrative examples.
Phrase: Showcasing educational tools

8.
Concepts: informing about features and introducing new ones, introducing new components and highlighting features
Relationship: The concepts are related as they both involve sharing information about new features and components.
Criteria: Designers inform about new features and introduce new components, highlighting their features.
Phrase: Introducing new features

9.
Concepts: justifying effort, justifies design choices
Relationship: The concepts are related as they both involve explaining and justifying design decisions.
Criteria: Designers justify the effort and time invested in a task, explaining their design choices.
Phrase: Justifying design decisions

10.
Concepts: shares knowledge, sharing and providing information
Relationship: The concepts are closely related as they both involve sharing information and knowledge.
Criteria: Users share knowledge and information relevant to design or development.
Phrase: Sharing knowledge

11.
Concepts: apologizing for interruption, apologizing for inconvenience and acknowledging disturbance
Relationship: The concepts are related as they both involve expressing regret for causing inconvenience.
Criteria: Users or designers apologize for interrupting the conversation or causing inconvenience.
Phrase: Apologizing for inconvenience

12.
Concepts: affirm user input, confirming feature implementation
Relationship: The concepts are related as they both involve validating user input and confirming implementation.
Criteria: Designers affirm user input and confirm feature implementation.
Phrase: Confirming user input

13.
Concepts: acknowledging help, acknowledges community expertise
Relationship: The concepts are related as they both involve recognizing and appreciating help from others.
Criteria: Users acknowledge help and appreciate community expertise.
Phrase: Acknowledging community expertise

14.
Concepts: praising software features, highlighting positive aspects
Relationship: The concepts are related as they both involve expressing satisfaction with the software.
Criteria: Users praise software features and highlight positive aspects.
Phrase: Praising software features

15.
Concepts: moral support, expressing support and acknowledging progress
Relationship: The concepts are related as they both involve expressing support and encouragement.
Criteria: Users express moral support and acknowledge progress, encouraging further development.
Phrase: Expressing moral support

16.
Concepts: engaging with platform development, engaging with platform usage and functionality
Relationship: The concepts are related as they both involve interacting with the platform.
Criteria: Users engage with platform development and explore its functionality.
Phrase: Engaging with the platform

17.
Concepts: request educational features, propose educational enhancements
Relationship: The concepts are related as they both involve suggesting new educational features.
Criteria: Users request educational features and propose enhancements.
Phrase: Requesting educational features

18.
Concepts: propose software enhancements, contributing to product development
Relationship: The concepts are related as they both involve suggesting improvements to the software.
Criteria: Users propose software enhancements and contribute to product development.
Phrase: Proposing software enhancements

19.
Concepts: providing detailed feedback, providing justified feedback
Relationship: The concepts are related as they both involve providing constructive feedback.
Criteria: Users provide detailed and justified feedback on the platform or features.
Phrase: Providing detailed feedback

20.
Concepts: sharing outdated technology experiences, expressing frustration with outdated systems and limitations
Relationship: The concepts are related as they both involve discussing outdated technology.
Criteria: Users share information about outdated technology and express frustration with limitations.
Phrase: Sharing outdated technology experiences

21.
Concepts: providing context, demonstrating expertise through context
Relationship: The concepts are related as they both involve providing information about one's background or situation.
Criteria: Users provide context and demonstrate expertise through sharing their background or situation.
Phrase: Providing context