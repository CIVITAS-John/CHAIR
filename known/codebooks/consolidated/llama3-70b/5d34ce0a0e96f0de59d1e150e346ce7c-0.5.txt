You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. If a sub-code includes another, use the broader one. If sub-codes are parallel, write one that covers both.
Write clear and generalizable labels and criteria for each code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization (e.g. "social interaction" instead of "interaction", "communication approach" instead of "communication").
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (7 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {Consolidated criteria of code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
7.
Relationship: {The logical relationship between sub-codes in code 7}
Criteria: {Consolidated criteria of code 7}
Label: {A consolidated label of code 7}
Category: {2-4 words for code 7}
---
~~~
1. iterative development, feedback-driven iteration.
- The Developer continuously updating and improving the software based on user feedback and community input.
- Incorporation of community feedback into design and development, adaptation and iteration of software design.

2. software updates, component changes and software features.
- Mentions of changes or updates to the software's features or functionality.
- Announcements regarding changes in components and updates to the software features.

3. update announcement, updates and improvements.
- Communication from the designers announcing upcoming changes or updates to the software.
- Information shared by designers about updates or potential improvements to the software.

4. software access, software availability.
- Interaction related to downloading and accessing the Physics Lab software.
- Instances where users ask about accessing or downloading the Physics Lab software.

5. response to user feedback, designer responsiveness.
- Designer's reactions and adjustments based on user feedback.
- Designer's openness to user feedback and willingness to incorporate it, and responses to user feedback

6. positive feedback, positive sentiment.
- Positive remarks or praises about the software’s performance or impact.
- Instances where users express excitement, enthusiasm, or positive emotions about the software or updates.

7. resource sharing, knowledge sharing.
- Sharing of resources or information within the community.
- Sharing knowledge or information among community members.
===
Here is the output in the required format:

---
Categories: 
* Community Engagement
* Software Development
* Communication Approach
* Resource Sharing

Definitions for each code:

1.
Relationship: Inclusive (iterative development includes feedback-driven iteration)
Criteria: Continuous improvement of software based on user feedback and community input
Label: Iterative Development
Category: Software Development

2.
Relationship: Parallel (software updates and component changes are separate aspects)
Criteria: Changes or updates to software features or functionality
Label: Software Updates
Category: Software Development

3.
Relationship: Inclusive (update announcement includes updates and improvements)
Criteria: Communication about upcoming changes or updates to the software
Label: Update Announcements
Category: Communication Approach

4.
Relationship: Parallel (software access and software availability are separate aspects)
Criteria: Interaction related to downloading and accessing the Physics Lab software
Label: Software Access
Category: Community Engagement

5.
Relationship: Inclusive (response to user feedback includes designer responsiveness)
Criteria: Designer's reactions and adjustments based on user feedback
Label: Responsive Design
Category: Software Development

6.
Relationship: Inclusive (positive feedback includes positive sentiment)
Criteria: Positive remarks or praises about the software’s performance or impact
Label: Positive Feedback
Category: Community Engagement

7.
Relationship: Inclusive (resource sharing includes knowledge sharing)
Criteria: Sharing of resources or information within the community
Label: Resource Sharing
Category: Resource Sharing