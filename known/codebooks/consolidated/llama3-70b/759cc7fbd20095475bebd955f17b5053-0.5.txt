You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (26 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
26. {Repeat the input 26}
Relationship: {The logical relationship between concepts in input 26}
Criteria: {A sentence of consolidated criteria for code 26}
Label: {A consolidated label of code 26}
Category: {2-4 words for code 26}
---
~~~
1. community influence, community-influenced updates
- The community's role in the software's evolution and their influence on the design process.
- Updates or changes made to the tool that are influenced by community feedback or needs.

2. community-driven development, strategies for community engagement
- The community's active involvement in shaping the development of physics experiments and demonstrations.
- The strategies used by the designer to engage with the Physics Lab community and incorporate their feedback.

3. seeking input, call for feedback
- Gathering opinions and seeking input from the community.
- Requests for feedback, suggestions, or input from community members.

4. emotional expression, emoticon exchange
- Use of emojis to express emotions or reactions.
- Community members exchanging emojis or using them to convey emotions.

5. encouragement, user gratitude
- Instances where users or the designer express appreciation or encouragement.
- Expressions of appreciation or thanks towards the designers or community.

6. greetings and salutations, welcoming and inclusion
- Instances of community members greeting each other or the Designer.
- Instances where users or the designer explicitly welcome or include others in the conversation.

7. group sharing, file sharing
- Statements about sharing information within the group.
- Members sharing or requesting access to files or resources within the group.

8. resource sharing, information exchange
- Instances where participants offer to share or discuss sharing resources.
- Instances where participants share information or resources with others.

9. version release, component update
- Updates and announcements about the software version.
- Information or announcements about updates or changes to software components or functionality.

10. platform capabilities, platform clarification
- References to specific features or capabilities of the platform.
- Seeking clarification or information about the platform's features or capabilities.

11. feature planning, feature development, feature discussion
- Discussions around planned software features and capabilities.
- Discussion of new features or updates to the platform.
- Discussion points around specific features of the tool, including both existing features and those planned for future updates.

12. scaffolding, conceptual understanding
- Supports and guidance provided by the software to help students navigate and understand the physics concepts.
- Features or affordances of the software that aim to facilitate conceptual understanding of physics principles.

13. active learning, engagement with software
- Aspects of the software that encourage active learning, experimentation, or hands-on engagement with physics concepts.
- Examining how participants interact with the simulation software to enhance learning outcomes.

14. learning support, pedagogical approach
- Discussions that address the software's ability to support learning and educational activities.
- Discussions that relate to the educational or pedagogical aspects of the Physics Lab software.

15. user anticipation, anticipation and excitement
- Understanding users' anticipation for updates and their reactions to the release schedule.
- Instances where users show excitement or anticipation for new updates or features.

16. user influence, design suggestions
- Examples showing the influence of user feedback on the design process or decisions.
- Suggestions from users or discussions that could influence future design decisions.

17. designer communication, designer-community interaction
- Exploring how the designer communicates with the community, shares information, and responds to user inquiries.
- The back-and-forth communication and collaboration between the designer and the community members.

18. progress updates, platform updates
- Designer providing updates on the development process.
- The designer's communication about upcoming changes and improvements to the platform.

19. designer's role, feedback incorporation
- The designer's involvement in responding to user feedback and improving the software.
- The designer incorporates user feedback into the software development process.

20. designer's openness to feedback, feedback and iteration
- Designer soliciting input and responding to user feedback.
- The exchange of feedback between users and the designer, and the designer's responsiveness to that feedback.

21. implementing user feedback, responsive design changes
- Changes or updates in the software that reflect user suggestions or needs.
- Changes made to the software based on user feedback, reflecting a responsive and adaptive design process.

22. responsiveness, developer responsiveness
- Discussions that demonstrate the responsiveness of the designers or developers to user feedback and needs.
- How the developer responds to user requests or questions, indicating their engagement and responsiveness to community needs.

23. facilitation, proactive support
- Actions taken by the designer to guide the conversation and provide support.
- Instances where the Designer initiates help or guidance.

24. collaborative design, collaborative development
- Interactions where designers actively seek and respond to user feedback.
- Elements in the conversation that show a collaborative approach to software development, involving users in the design process.

25. learning experience, knowledge acquisition
- Understanding how users interact with the tool and engage with new features.
- Observing how users acquire knowledge about the tool's functionalities and how the designer communicates updates.

26. user response and planning, engagement with learning needs
- Understanding how the designer responds to user requests and plans the development of the platform based on user inputs.
- Analyzing how the designer responds to user requests and incorporates educational content into the platform.
===
Here are the categorized codes with definitions, relationships, criteria, labels, and categories:

---
Categories:
* Community Engagement
* Software Development
* Learning Experience
* Communication and Feedback
* Design and Development

Definitions for each code:

1. community influence, community-influenced updates
Relationship: Inclusion
Criteria: Updates or changes made to the tool that are influenced by community feedback or needs.
Label: Community-Influenced Updates
Category: Community Engagement

2. community-driven development, strategies for community engagement
Relationship: Inclusion
Criteria: The community's active involvement in shaping the development of physics experiments and demonstrations.
Label: Community-Driven Development
Category: Community Engagement

3. seeking input, call for feedback
Relationship: Parallel
Criteria: Gathering opinions and seeking input from the community.
Label: Seeking Input
Category: Communication and Feedback

4. emotional expression, emoticon exchange
Relationship: Parallel
Criteria: Use of emojis to express emotions or reactions.
Label: Emotional Expression
Category: Communication and Feedback

5. encouragement, user gratitude
Relationship: Inclusion
Criteria: Instances where users or the designer express appreciation or encouragement.
Label: Encouragement
Category: Communication and Feedback

6. greetings and salutations, welcoming and inclusion
Relationship: Inclusion
Criteria: Instances of community members greeting each other or the Designer.
Label: Greetings and Salutations
Category: Communication and Feedback

7. group sharing, file sharing
Relationship: Inclusion
Criteria: Statements about sharing information within the group.
Label: Group Sharing
Category: Community Engagement

8. resource sharing, information exchange
Relationship: Inclusion
Criteria: Instances where participants offer to share or discuss sharing resources.
Label: Resource Sharing
Category: Community Engagement

9. version release, component update
Relationship: Inclusion
Criteria: Updates and announcements about the software version.
Label: Version Release
Category: Software Development

10. platform capabilities, platform clarification
Relationship: Inclusion
Criteria: References to specific features or capabilities of the platform.
Label: Platform Capabilities
Category: Software Development

11. feature planning, feature development, feature discussion
Relationship: Inclusion
Criteria: Discussions around planned software features and capabilities.
Label: Feature Planning
Category: Software Development

12. scaffolding, conceptual understanding
Relationship: Inclusion
Criteria: Supports and guidance provided by the software to help students navigate and understand the physics concepts.
Label: Scaffolding
Category: Learning Experience

13. active learning, engagement with software
Relationship: Inclusion
Criteria: Aspects of the software that encourage active learning, experimentation, or hands-on engagement with physics concepts.
Label: Active Learning
Category: Learning Experience

14. learning support, pedagogical approach
Relationship: Inclusion
Criteria: Discussions that address the software's ability to support learning and educational activities.
Label: Learning Support
Category: Learning Experience

15. user anticipation, anticipation and excitement
Relationship: Inclusion
Criteria: Understanding users' anticipation for updates and their reactions to the release schedule.
Label: User Anticipation
Category: Community Engagement

16. user influence, design suggestions
Relationship: Inclusion
Criteria: Examples showing the influence of user feedback on the design process or decisions.
Label: User Influence
Category: Communication and Feedback

17. designer communication, designer-community interaction
Relationship: Inclusion
Criteria: Exploring how the designer communicates with the community, shares information, and responds to user inquiries.
Label: Designer Communication
Category: Communication and Feedback

18. progress updates, platform updates
Relationship: Inclusion
Criteria: Designer providing updates on the development process.
Label: Progress Updates
Category: Software Development

19. designer's role, feedback incorporation
Relationship: Inclusion
Criteria: The designer's involvement in responding to user feedback and improving the software.
Label: Designer's Role
Category: Communication and Feedback

20. designer's openness to feedback, feedback and iteration
Relationship: Inclusion
Criteria: Designer soliciting input and responding to user feedback.
Label: Designer's Openness
Category: Communication and Feedback

21. implementing user feedback, responsive design changes
Relationship: Inclusion
Criteria: Changes or updates in the software that reflect user suggestions or needs.
Label: Implementing Feedback
Category: Software Development

22. responsiveness, developer responsiveness
Relationship: Inclusion
Criteria: Discussions that demonstrate the responsiveness of the designers or developers to user feedback and needs.
Label: Responsiveness
Category: Communication and Feedback

23. facilitation, proactive support
Relationship: Inclusion
Criteria: Actions taken by the designer to guide the conversation and provide support.
Label: Facilitation
Category: Communication and Feedback

24. collaborative design, collaborative development
Relationship: Inclusion
Criteria: Interactions where designers actively seek and respond to user feedback.
Label: Collaborative Design
Category: Software Development

25. learning experience, knowledge acquisition
Relationship: Inclusion
Criteria: Understanding how users interact with the tool and engage with new features.
Label: Learning Experience
Category: Learning Experience

26. user response and planning, engagement with learning needs
Relationship: Inclusion
Criteria: Understanding how the designer responds to user requests and plans the development of the platform based on user inputs.
Label: User Response
Category: Learning Experience