You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (14 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
14. 
Concepts: {Repeat the input 14}
Relationship: {What is logical relationship between concepts in code 14, or N/A if not applicable}
Criteria: {Who did what, and how for code 14}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: announce updates, announce component updates
- Designers announce new features, updates, or bug fixes based on user input.
- Designers announce changes to specific components in the software and inform users of updates.

2.
Concepts: communicate updates, provide progress updates
- Designers communicate updates and timelines for software releases to users.
- Designers communicate updates regarding the software's release status and expected timelines.

3.
Concepts: maintain transparency, ensure development transparency
- A designer emphasizes the importance of keeping users informed about development progress.
- Instances where designers provide detailed information about development processes and challenges keep the community informed.

4.
Concepts: reassure users, mitigate user concerns
- A designer reassures users about the progress and availability of features in response to their questions.
- Designers address user concerns by reassuring them about ongoing improvements and responding to alleviate their worries.

5.
Concepts: explain features, explain feature importance
- Designers provide explanations of software features, enhancing user understanding and usability.
- Designers discuss and explain the significance of certain features for the software's usability.

6.
Concepts: problem solving, inquire about problems
- Designer encourages users to report problems encountered during use.
- Designers ask users to specify any problems they have encountered while using the software.

7.
Concepts: invite user feedback, feature request invitation, solicit user suggestions
- Designers invite users to provide feedback and suggestions for future updates.
- Designers invite users to suggest new features or improvements.
- A designer invites users to share their suggestions or requirements for the software.

8.
Concepts: address user requests, accept user suggestions
- Users request specific features or improvements to enhance the product.
- Designers agree to implement user requests in future updates.

9.
Concepts: apologize for timing, apologize for disturbances
- A designer expresses regret for disturbing users at an inconvenient time.
- Designers apologize for any disturbances or inconveniences caused to users.

10.
Concepts: respond to user inquiries, respond to initial question
- A designer answers a user's question about software limitations to provide clarification.
- The designer responds to a user's initial inquiry, providing information about compatibility issues.

11.
Concepts: share past incidents, users share and explain past experiences
- Users share past incidents that have impacted the software's use in educational settings.
- Users share experiences or answers related to past incidents affecting the software's use and provide explanations regarding those incidents.

12.
Concepts: seek confirmation, express agreement
- Users and designers confirm understanding or agreement in the conversation.
- Users and designers express agreement on various points during discussions.

13.
Concepts: share resources, suggest group sharing of resources
- Designers share resources or important information with the community.
- Designers propose the idea of sharing resources or information among community members.

14.
Concepts: seek clarification
- Participants seek clarification on specific points or details during discussions.
- A designer seeks clarification on a specific detail related to the software.
===
---
Definitions for each code (14 in total):
1.
Concepts: announce updates, announce component updates
Relationship: Both concepts involve designers communicating changes to users, focusing on overall updates and specific components.
Criteria: Designers announce new features and specific component changes to inform users based on their input.
Phrase: Announce software updates.

2.
Concepts: communicate updates, provide progress updates
Relationship: Both concepts involve designers sharing information about the status and timelines of software releases.
Criteria: Designers communicate updates and expected timelines for software releases to users.
Phrase: Communicate software progress.

3.
Concepts: maintain transparency, ensure development transparency
Relationship: Both concepts emphasize the importance of keeping users informed about the development process.
Criteria: Designers maintain transparency by providing detailed information about development progress and challenges.
Phrase: Ensure development transparency.

4.
Concepts: reassure users, mitigate user concerns
Relationship: Both concepts involve designers addressing user worries and providing reassurance about software improvements.
Criteria: Designers reassure users about progress and address concerns to alleviate worries.
Phrase: Reassure and mitigate concerns.

5.
Concepts: explain features, explain feature importance
Relationship: Both concepts focus on enhancing user understanding of software features and their significance.
Criteria: Designers explain software features and their importance to enhance usability.
Phrase: Explain software features.

6.
Concepts: problem solving, inquire about problems
Relationship: Both concepts involve designers encouraging users to report issues and seeking details about problems.
Criteria: Designers encourage users to report problems and inquire about specific issues encountered.
Phrase: Inquire about user problems.

7.
Concepts: invite user feedback, feature request invitation, solicit user suggestions
Relationship: All concepts focus on designers actively seeking input from users regarding future updates and features.
Criteria: Designers invite users to provide feedback and suggest new features or improvements.
Phrase: Invite user feedback.

8.
Concepts: address user requests, accept user suggestions
Relationship: Both concepts involve users making requests and designers agreeing to implement those suggestions.
Criteria: Users request features, and designers agree to implement these suggestions in future updates.
Phrase: Address and accept requests.

9.
Concepts: apologize for timing, apologize for disturbances
Relationship: Both concepts involve designers expressing regret for any inconvenience caused to users.
Criteria: Designers apologize for disturbing users at inconvenient times or causing disturbances.
Phrase: Apologize for disturbances.

10.
Concepts: respond to user inquiries, respond to initial question
Relationship: Both concepts involve designers providing answers to user questions for clarification.
Criteria: Designers respond to user inquiries and provide clarification on software limitations and compatibility issues.
Phrase: Respond to user inquiries.

11.
Concepts: share past incidents, users share and explain past experiences
Relationship: Both concepts involve users discussing past experiences that affected software use.
Criteria: Users share past incidents and explain their impact on software use in educational settings.
Phrase: Share past experiences.

12.
Concepts: seek confirmation, express agreement
Relationship: Both concepts involve mutual understanding and agreement between users and designers.
Criteria: Users and designers confirm understanding and express agreement during discussions.
Phrase: Seek confirmation and agreement.

13.
Concepts: share resources, suggest group sharing of resources
Relationship: Both concepts involve designers providing resources and promoting sharing among community members.
Criteria: Designers share important resources and propose group sharing among community members.
Phrase: Share and suggest resources.

14.
Concepts: seek clarification
Relationship: Both concepts involve participants asking for more information or details during discussions.
Criteria: Participants seek clarification on specific points or details related to the software.
Phrase: Seek clarification.
---