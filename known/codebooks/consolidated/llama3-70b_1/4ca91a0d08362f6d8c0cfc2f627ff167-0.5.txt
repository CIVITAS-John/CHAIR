You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (28 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
28. 
Concepts: {Repeat the input 28}
Relationship: {What is logical relationship between concepts in code 28, or N/A if not applicable}
Criteria: {Who did what, and how for code 28}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: sequencing design phases and prioritizing tasks, prioritizing development goals and emphasizing prioritization
- Designers sequence design phases, allocate resources, and prioritize tasks.
- Designers prioritize development goals and emphasize prioritization.

2.
Concepts: making promises, promising future development and updates
- Designers promise to improve or make changes, promise or assure users that an update is ongoing or in progress, and promise to realize or implement a requested feature or improvement.
- Designers promise future improvements and announce future developments and updates.

3.
Concepts: signaling progress, indicating ongoing work
- Designer signals progress in software development.
- Designers acknowledge ongoing work on a specific feature or task and indicate that work is ongoing.

4.
Concepts: listing and promoting new features, explaining new features and improvements
- Designers list and describe new features or updates and promote new features.
- Designers explain new features or updates and highlight technical improvements.

5.
Concepts: sharing update information with users, maintains open communication about updates
- Designers share information about app releases and inform users about updates and new versions.
- The designer keeps users informed about updates and initiates communication about changes.

6.
Concepts: confirming and informing about update schedules, providing update information and explaining complexity
- Designers confirm the update schedule and inform about update schedules and provide information about update frequency.
- Designers provide information about the complexity or timeline of an update or task and explain a complex task or feature.

7.
Concepts: providing community updates, makes public and developer announcements
- The designer shares community updates, news, or announcements.
- The designer makes public announcements and developer announcements.

8.
Concepts: sharing updates in group files, sharing information and encouraging sharing
- Designer shares updates or releases in a group file or forum.
- Users or designers share information and encourage designers to share information or updates.

9.
Concepts: proposing dual solution, offering alternative solutions and suggesting alternatives, design compromise suggestions
- A designer proposes a dual solution or approach to a problem.
- Designers offer alternative solutions and suggest alternative solutions.
- The designer proposes a compromise between different design choices.

10.
Concepts: exploring technical solutions and sharing workarounds, provide temporary solutions and workarounds
- Designers explore technical solutions and share workarounds and technical solutions.
- Designers provide temporary solutions or workarounds for known issues or limitations, and provide solutions to problems or workarounds.

11.
Concepts: providing technical specifications, assessing technical feasibility and design implications
- Designers provide technical specifications or details and confirm technical compatibility to provide technical assurance.
- Designers assess technical feasibility and evaluate design implications and usability.

12.
Concepts: planning and discussing future development, discussing design and making development decisions
- Designers plan for future improvements and discuss future development possibilities.
- Designers discuss design or development plans and make a decision or outline a plan for development.

13.
Concepts: discussing software features and design elements, sharing design thoughts and iterating on design
- Designers discuss software features and usability, and design elements and input methods.
- Designers share their thoughts or ideas about the design process and discuss or describe the iterative design process.

14.
Concepts: offering support for different platforms, requesting multi-platform support
- Offers or discussions of support for different platforms or devices
- Users request multi-platform support and access, and express interest in cross-platform functionality.

15.
Concepts: communicate technical limitations, acknowledging constraints and considering limitations
- Designers communicate technical limitations or constraints directly, explaining the limitations of a solution.
- Designers acknowledge constraints and consider technical limitations and constraints.

16.
Concepts: encouraging users to report problems, expressing concerns and reporting technical issues
- Encouraging users to report problems or issues directly.
- Users express concerns and frustration, and report technical issues and difficulties.

17.
Concepts: building community atmosphere, fostering a positive atmosphere
- The designer provides information that aims to create a welcoming or accessible community atmosphere.
- Designers foster a positive and friendly atmosphere, building community rapport and fostering positivity.

18.
Concepts: maintaining community engagement, committing to community involvement to ensure their involvement
- Designers are actively involved in the community, providing community support, participating, and maintaining community engagement and interaction.
- Designers commit to involving the community to ensure their involvement.

19.
Concepts: cultivating community, expressing community enthusiasm
- The code captures instances where designers cultivate or encourage community engagement or participation.
- Designers express community enthusiasm, indicating community spirit and collaboration.

20.
Concepts: promoting iterative refinement, promoting collaborative development
- Users promote iterative refinement approaches by advising on incremental development and refinement.
- Users promote collaborative development by providing development advice and suggestions.

21.
Concepts: encouraging further development, requesting software improvements
- A user encourages the designer to continue improving the software.
- Users express needs for software improvement and expansion by requesting new features and responding to requests.

22.
Concepts: promising user involvement and committing to user input, fostering involvement and inviting user participation
- Designers promise to involve users in the development process and commit to incorporating user input to value their opinions.
- Users engage with the development process to contribute to it, and designers invite users to participate in the development process and foster a positive relationship.

23.
Concepts: emphasizing user convenience, prioritize user experience and cater to user needs
- Designers prioritize ease of use or user experience when designing features or solving problems.
- Designers prioritize or cater to user needs or preferences, emphasizing the importance of user experience.

24.
Concepts: considering user interaction flow, considering user experience and design options
- Considering or discussing user interaction flow or experience.
- Designers discuss or consider different user modes or scenarios, taking into account user experience, and weigh or consider different design options.

25.
Concepts: expresses gratitude, acknowledging consideration and appreciating feedback
- Users or designers express gratitude or appreciation for support, feedback, or resources.
- A designer acknowledges consideration and expresses gratitude for user feedback.

26.
Concepts: expressing praise for an idea or feature, appreciating development efforts
- Users express praise to appreciate an idea or feature.
- Users express appreciation for the developer's efforts, and express praise or admiration for the application or its developers.

27.
Concepts: express emotions, using emojis
- Users convey emotions or sentiments through words or emojis.
- Users use emojis to express emotions or reactions, and use emojis to engage with others or add tone to their message.

28.
Concepts: establishing a personal connection
- Users or designers establish a personal connection or common ground.
- Users share images and personal interests or experiences.
===
Here are the definitions for each code:

---
1.
Concepts: sequencing design phases and prioritizing tasks, prioritizing development goals and emphasizing prioritization
Relationship: The concepts are related as they both involve prioritization and planning in the design process.
Criteria: Designers prioritize tasks and goals, allocating resources and emphasizing importance.
Phrase: Prioritizing development goals and tasks.

2.
Concepts: making promises, promising future development and updates
Relationship: The concepts are related as they both involve making commitments to users about future improvements.
Criteria: Designers make promises to users about future developments and updates.
Phrase: Making promises about future development.

3.
Concepts: signaling progress, indicating ongoing work
Relationship: The concepts are related as they both involve communicating the status of ongoing work.
Criteria: Designers signal progress and indicate ongoing work on features or tasks.
Phrase: Signaling progress and ongoing work.

4.
Concepts: listing and promoting new features, explaining new features and improvements
Relationship: The concepts are related as they both involve communicating new features and updates to users.
Criteria: Designers list and explain new features, promoting updates and improvements.
Phrase: Promoting and explaining new features.

5.
Concepts: sharing update information with users, maintains open communication about updates
Relationship: The concepts are related as they both involve keeping users informed about updates.
Criteria: Designers share information about updates, maintaining open communication with users.
Phrase: Sharing update information with users.

6.
Concepts: confirming and informing about update schedules, providing update information and explaining complexity
Relationship: The concepts are related as they both involve providing information about updates and schedules.
Criteria: Designers confirm update schedules, providing information and explaining complexity.
Phrase: Confirming and explaining update schedules.

7.
Concepts: providing community updates, makes public and developer announcements
Relationship: The concepts are related as they both involve sharing updates and announcements with the community.
Criteria: Designers provide community updates, making public and developer announcements.
Phrase: Providing community updates and announcements.

8.
Concepts: sharing updates in group files, sharing information and encouraging sharing
Relationship: The concepts are related as they both involve sharing information and updates within the community.
Criteria: Designers share updates in group files, encouraging information sharing.
Phrase: Sharing updates and encouraging information sharing.

9.
Concepts: proposing dual solution, offering alternative solutions and suggesting alternatives, design compromise suggestions
Relationship: The concepts are related as they all involve offering alternative solutions or compromises.
Criteria: Designers propose dual solutions, offering alternative solutions and suggesting compromises.
Phrase: Proposing alternative solutions and compromises.

10.
Concepts: exploring technical solutions and sharing workarounds, provide temporary solutions and workarounds
Relationship: The concepts are related as they both involve finding temporary solutions to problems.
Criteria: Designers explore technical solutions, sharing workarounds and temporary solutions.
Phrase: Exploring technical solutions and workarounds.

11.
Concepts: providing technical specifications, assessing technical feasibility and design implications
Relationship: The concepts are related as they both involve evaluating technical feasibility and design implications.
Criteria: Designers provide technical specifications, assessing feasibility and design implications.
Phrase: Providing technical specifications and assessing feasibility.

12.
Concepts: planning and discussing future development, discussing design and making development decisions
Relationship: The concepts are related as they both involve planning and discussing future development.
Criteria: Designers plan and discuss future development, making decisions about design and development.
Phrase: Planning and discussing future development.

13.
Concepts: discussing software features and design elements, sharing design thoughts and iterating on design
Relationship: The concepts are related as they both involve discussing and refining design elements.
Criteria: Designers discuss software features, sharing design thoughts and iterating on design.
Phrase: Discussing and refining design elements.

14.
Concepts: offering support for different platforms, requesting multi-platform support
Relationship: The concepts are related as they both involve supporting multiple platforms.
Criteria: Designers offer support for different platforms, responding to user requests for multi-platform support.
Phrase: Offering multi-platform support.

15.
Concepts: communicate technical limitations, acknowledging constraints and considering limitations
Relationship: The concepts are related as they both involve acknowledging and working within technical limitations.
Criteria: Designers communicate technical limitations, acknowledging constraints and considering limitations.
Phrase: Communicating technical limitations and constraints.

16.
Concepts: encouraging users to report problems, expressing concerns and reporting technical issues
Relationship: The concepts are related as they both involve reporting and addressing technical issues.
Criteria: Designers encourage users to report problems, expressing concerns and addressing technical issues.
Phrase: Encouraging users to report technical issues.

17.
Concepts: building community atmosphere, fostering a positive atmosphere
Relationship: The concepts are related as they both involve creating a welcoming community environment.
Criteria: Designers build community atmosphere, fostering a positive and friendly environment.
Phrase: Building a positive community atmosphere.

18.
Concepts: maintaining community engagement, committing to community involvement to ensure their involvement
Relationship: The concepts are related as they both involve engaging with the community and ensuring their involvement.
Criteria: Designers maintain community engagement, committing to involving users in the development process.
Phrase: Maintaining community engagement and involvement.

19.
Concepts: cultivating community, expressing community enthusiasm
Relationship: The concepts are related as they both involve fostering community engagement and enthusiasm.
Criteria: Designers cultivate community, expressing enthusiasm and encouraging participation.
Phrase: Cultivating community enthusiasm and participation.

20.
Concepts: promoting iterative refinement, promoting collaborative development
Relationship: The concepts are related as they both involve promoting iterative refinement and collaborative development.
Criteria: Designers promote iterative refinement, encouraging collaborative development and user input.
Phrase: Promoting iterative refinement and collaborative development.

21.
Concepts: encouraging further development, requesting software improvements
Relationship: The concepts are related as they both involve encouraging and requesting improvements to the software.
Criteria: Users encourage further development, requesting software improvements and new features.
Phrase: Encouraging further development and improvements.

22.
Concepts: promising user involvement and committing to user input, fostering involvement and inviting user participation
Relationship: The concepts are related as they both involve promising and committing to user involvement in the development process.
Criteria: Designers promise user involvement, committing to incorporating user input and fostering participation.
Phrase: Promising user involvement and participation.

23.
Concepts: emphasizing user convenience, prioritize user experience and cater to user needs
Relationship: The concepts are related as they both involve prioritizing user experience and convenience.
Criteria: Designers prioritize user convenience, emphasizing user experience and catering to user needs.
Phrase: Prioritizing user convenience and experience.

24.
Concepts: considering user interaction flow, considering user experience and design options
Relationship: The concepts are related as they both involve considering user experience and design options.
Criteria: Designers consider user interaction flow, weighing design options and prioritizing user experience.
Phrase: Considering user interaction flow and design options.

25.
Concepts: expresses gratitude, acknowledging consideration and appreciating feedback
Relationship: The concepts are related as they both involve expressing appreciation and gratitude.
Criteria: Users and designers express gratitude, acknowledging consideration and appreciating feedback.
Phrase: Expressing gratitude and appreciation.

26.
Concepts: expressing praise for an idea or feature, appreciating development efforts
Relationship: The concepts are related as they both involve expressing praise and appreciation.
Criteria: Users express praise for ideas and features, appreciating development efforts.
Phrase: Expressing praise and appreciation.

27.
Concepts: express emotions, using emojis
Relationship: The concepts are related as they both involve conveying emotions and sentiments.
Criteria: Users convey emotions and sentiments, using emojis to express themselves.
Phrase: Expressing emotions and sentiments.

28.
Concepts: establishing a personal connection
Relationship: N/A
Criteria: Users and designers establish a personal connection, sharing personal interests and experiences.
Phrase: Establishing a personal connection.