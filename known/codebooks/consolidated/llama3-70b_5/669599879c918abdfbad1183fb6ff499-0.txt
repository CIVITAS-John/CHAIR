You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (10 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
10. 
Concepts: {Repeat the input 10}
Relationship: {What is logical relationship between concepts in code 10, or N/A if not applicable}
Criteria: {Who did what, and how for code 10}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: share potential solutions, suggesting alternative solutions
- A designer shares potential solutions, ideas, or approaches to a problem or feature.
- Users or designers suggest an alternative solution or approach.

2.
Concepts: diagnosing a problem, inquiring about problems
- Designer provides a diagnosis for a problem.
- Designers inquire about problems or issues users have encountered.

3.
Concepts: bug fixes, listing feature updates and bug fixes
- A designer lists or discusses bug fixes, patches, or resolutions to issues in Physics Lab.
- A designer lists or summarizes the new features, updates, and bug fixes in the software.

4.
Concepts: committing to solution, commit to improvement
- Designer commits to providing a solution or fixing an issue.
- A designer commits to improving the software, addressing user concerns, or incorporating feedback.

5.
Concepts: addressing concerns, raising concerns
- Designer addresses usability issues or concerns.
- The designer raises a related issue or concern about the software.

6.
Concepts: affirming points, reassuring users
- Designer acknowledges or agrees with a user's point or concern.
- A designer reassures users that their concerns will be addressed or that a solution is forthcoming.

7.
Concepts: download instructions, providing download information
- Designers provide instructions on how to download the software.
- Designer provides information about where to download a file or resource.

8.
Concepts: balance user needs, catering to user needs
- Designer aims to balance or accommodate different user needs.
- A designer prioritizes catering to user needs in the design or development process.

9.
Concepts: align with user needs, align with educational needs
- A designer aligns with user needs, preferences, or expectations in the development of Physics Lab.
- The designer aligns the software with educational needs or requirements.

10.
Concepts: manual adjustment, suggest manual adjustments
- A designer mentions the possibility of manual adjustments or customization options in the software.
- Designer or user suggests making manual adjustments to a system or process.
===
Here are the definitions for each code:

---
1.
Concepts: share potential solutions, suggesting alternative solutions
Relationship: The concepts are related as they both involve designers and users generating and exploring possible solutions to problems or features.
Criteria: Designers and users share and suggest potential solutions to problems or features.
Phrase: Explore alternative solutions.

2.
Concepts: diagnosing a problem, inquiring about problems
Relationship: The concepts are related as they both involve designers identifying and understanding problems or issues.
Criteria: Designers diagnose and inquire about problems or issues users have encountered.
Phrase: Identify problems.

3.
Concepts: bug fixes, listing feature updates and bug fixes
Relationship: The concepts are related as they both involve designers providing information about resolving issues and improving the software.
Criteria: Designers list and discuss bug fixes, patches, and new features in the software.
Phrase: Document updates.

4.
Concepts: committing to solution, commit to improvement
Relationship: The concepts are related as they both involve designers making a commitment to address user concerns and improve the software.
Criteria: Designers commit to providing solutions and improving the software.
Phrase: Commit to improvement.

5.
Concepts: addressing concerns, raising concerns
Relationship: The concepts are related as they both involve designers acknowledging and responding to user concerns.
Criteria: Designers address and raise concerns about the software.
Phrase: Address concerns.

6.
Concepts: affirming points, reassuring users
Relationship: The concepts are related as they both involve designers acknowledging and validating user perspectives.
Criteria: Designers affirm points and reassure users that their concerns will be addressed.
Phrase: Reassure users.

7.
Concepts: download instructions, providing download information
Relationship: The concepts are related as they both involve designers providing information about accessing resources.
Criteria: Designers provide instructions and information about downloading resources.
Phrase: Provide download information.

8.
Concepts: balance user needs, catering to user needs
Relationship: The concepts are related as they both involve designers prioritizing user needs in the design process.
Criteria: Designers balance and cater to different user needs.
Phrase: Prioritize user needs.

9.
Concepts: align with user needs, align with educational needs
Relationship: The concepts are related as they both involve designers aligning the software with user and educational requirements.
Criteria: Designers align the software with user and educational needs.
Phrase: Align with needs.

10.
Concepts: manual adjustment, suggest manual adjustments
Relationship: The concepts are related as they both involve designers and users exploring customization options.
Criteria: Designers and users suggest and mention manual adjustments to the software.
Phrase: Suggest customization options.