You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: promise to improve, improvement commitment
- Designer expresses gratitude and commitment to improvement.
- A designer expresses their commitment to improving the software or user experience.

2.
Concepts: example of feature, give examples of feature
- Providing concrete examples of a feature's functions or applications.
- Designer provides examples or demonstrations of a feature or update.

3.
Concepts: feature explanation, explaining functionality, introduce feature functions
- Designer explains a feature or how it works.
- Designer explains the functionality or purpose of a specific feature or tool.
- The designer introduces or explains a feature's functions or capabilities.

4.
Concepts: explain bidirectional conversion, reiterate bidirectional conversion
- Designer explains the concept or functionality of bidirectional conversion.
- Designer reiterates or clarifies the concept of bidirectional conversion.

5.
Concepts: technical clarification, provide technical information
- When a designer provides technical clarification or explanations about a feature or product.
- When a designer provides technical information or specifications about a feature or product.

6.
Concepts: download instructions, provide download information
- Designers provide instructions on how to download the software.
- A designer provides information about where to download a file or software.

7.
Concepts: sending resources, resources sharing
- When a designer shares resources, links, or documents with the community.
- Instances where designers or users share resources, such as download links, development plans, or announcements.
- Information about where and how to access resources, files, or downloads related to Physics Lab.
- Instances where users or designers share files, images, or other resources with the community.

8.
Concepts: help offering, personalized assistance
- The designer offers assistance or support to a user.
- A designer offers personalized assistance or support to a user.

9.
Concepts: technical support, technical support and guidance
- Instances where designers or users provide technical assistance or address technical issues.
- Instances where designers provide technical support or information about the software.
- Instances where designers provide technical support or guidance to users.

10.
Concepts: usage instruction, usage instructions
- Designer provides specific instructions or demonstrations on how to use a feature.
- Designer provides instructions on how to use a specific feature or functionality.

11.
Concepts: user tips, practical advice
- A user offers helpful tips, advice, or guidance for using the software effectively.
- Designer or user provides practical advice or tips for using the software or community.

12.
Concepts: involving users, user involvement
- Instances where designers actively involve users in the design process.
- Instances where users are involved in the design process, either through feedback or testing.

13.
Concepts: co-designing with users, user-designer interaction
- Involving users in the design process, allowing them to contribute ideas and make decisions.
- The collaborative interaction between users and designers that contributes to the design process.

14.
Concepts: discuss input methods, input method discussion
- A designer or user discusses input methods or possibilities.
- A designer discusses or inquires about input methods or user interface features.

15.
Concepts: simulation details, simulated experiment, detail simulated experiment assessment
- Designer explains the details of a simulation or experimental process.
- Designer discusses or explains the concept of simulated experiments or assessments.
- Designer describes or explains a specific feature or experiment.

16.
Concepts: elaboration, elaboration of suggestion
- When a designer provides additional details or context to an existing concept or idea.
- The designer provides more detail or elaboration on a suggestion or idea.

17.
Concepts: reflecting on experiences, reflect on past experience
- Designer reflects on past experiences or shares anecdotal evidence.
- Designers reflecting on their past experiences or sharing anecdotes.

18.
Concepts: design refinement, simplification and refinement in design
- Designers refine or improve design elements.
- Pursuing simplification, refinement, or optimization in design

19.
Concepts: design adaptation, feature adjustment
- The designer adapts or adjusts design elements based on feedback.
- When a designer adjusts or revises a feature or product based on feedback or testing.

20.
Concepts: manual editing, manual adjustment
- Designer mentions allowing manual editing of a feature or function.
- A designer discusses the ability to manually adjust or customize the software.

21.
Concepts: user feedback integration
- Instances where user feedback is acknowledged and incorporated into the design process.
- Instances where user feedback is actively sought and incorporated into the design process.

22.
Concepts: system limitations
- A user mentions limitations or constraints of a system or tool.
- Code refers to instances where the designer explains why a feature or functionality cannot be implemented due to system limitations.

23.
Concepts: promote community engagement
- Instances where members of the community actively participate in discussions, ask questions, or provide feedback.
- Instances where users or designers engage in discussions that foster community interaction and participation.
- Active participation and interaction among community members, including both users and designers.
- Efforts made by designers to actively involve and communicate with the user community.

24.
Concepts: iterative development
- Instances where designers discuss updates, new features, or bug fixes.
- The process of repeatedly refining and improving a product based on feedback and testing.
- The process of continuously improving the product based on feedback and testing.
- Instances where the design process is described as iterative, with ongoing optimizations and updates.
- Designer mentions iterative development or updates based on user feedback or suggestions.

25.
Concepts: encourage participatory design
- Instances where the community contributes to the design and development of the Physics Lab by providing suggestions or feedback that influence the development process.
- Instances where designers seek or consider user input in the design and development process.
- Instances where users are invited to participate in the design process or provide input.
- Instances where users and designers collaboratively discuss features and usability, reflecting a user-centered design approach.
- The involvement of users in the design and development process, contributing their insights and needs.
- Encouragement by designers for users to contribute ideas, feedback, and suggestions for the development of Physics Lab.
- Active involvement of users in the design process to ensure the product meets their needs and preferences.
- The involvement of users in the design process to ensure the product meets their needs and preferences.
- Instances where users and designers collaboratively discuss or work on design improvements.

26.
Concepts: role identification
- Instances where users or designers identify their roles, which can help understand the community structure and the roles within it.
- Instances where participants identify their roles or expertise, contributing to the problem-solving process.
- Identifying roles within the community, such as designers, teachers, or other users.

27.
Concepts: user engagement
- Instances where users actively participate in the conversation, showing interest or involvement in the community.
- Instances where users engage with designers through questions, feedback, or expressions of anticipation.
- Instances where users actively participate in the conversation, showing interest and involvement.

28.
Concepts: development transparency
- Instances where designers provide detailed information about development processes, challenges, and progress.
- Keeping the community informed about the development process and upcoming changes.

29.
Concepts: technical constraints
- Instances where technical limitations or requirements are discussed.
- Instances where limitations or constraints of the software are mentioned.

30.
Concepts: informal communication
- Instances where the tone of the conversation is casual or informal, indicating the nature of the community's communication style.
- Casual and non-technical interactions among community members, including humor and personal remarks.

31.
Concepts: community interaction
- Instances of interaction that foster a sense of community among users and designers.
- A designer initiates or maintains a conversation, encouraging community interaction.

32.
Concepts: designer responsiveness
- Instances where designers respond to user queries or engage with user comments, indicating active communication between designers and users.
- Instances where designers respond to user inquiries, suggestions, or feedback.
- Instances where designers respond to user feedback or suggestions.
- Instances where designers acknowledge user feedback and discuss potential solutions or updates.
- Designers responding to user feedback and addressing their concerns or suggestions.
- Instances where designers respond to user queries or feedback, showing attentiveness to user needs.
===
Here are the definitions for each code:

1.
Concepts: promise to improve, improvement commitment
Relationship: The designer's promise to improve implies a commitment to take action.
Criteria: Designers express gratitude and commit to improving the software or user experience.
Phrase: Commit to improve.

2.
Concepts: example of feature, give examples of feature
Relationship: Providing examples of a feature illustrates its functions or applications.
Criteria: Designers provide concrete examples or demonstrations of a feature or update.
Phrase: Provide feature examples.

3.
Concepts: feature explanation, explaining functionality, introduce feature functions
Relationship: Explaining a feature's functionality introduces its capabilities.
Criteria: Designers explain a feature or how it works, introducing its functions or capabilities.
Phrase: Explain feature functionality.

4.
Concepts: explain bidirectional conversion, reiterate bidirectional conversion
Relationship: Explaining bidirectional conversion implies reiterating its concept.
Criteria: Designers explain the concept or functionality of bidirectional conversion.
Phrase: Explain bidirectional conversion.

5.
Concepts: technical clarification, provide technical information
Relationship: Providing technical clarification implies providing technical information.
Criteria: Designers provide technical clarification or explanations about a feature or product.
Phrase: Clarify technical details.

6.
Concepts: download instructions, provide download information
Relationship: Providing download instructions implies providing information about downloads.
Criteria: Designers provide instructions on how to download the software.
Phrase: Provide download instructions.

7.
Concepts: sending resources, resources sharing
Relationship: Sending resources implies sharing them with the community.
Criteria: Designers share resources, links, or documents with the community.
Phrase: Share resources.

8.
Concepts: help offering, personalized assistance
Relationship: Offering help implies providing personalized assistance.
Criteria: Designers offer assistance or support to a user.
Phrase: Offer personalized assistance.

9.
Concepts: technical support, technical support and guidance
Relationship: Providing technical support implies providing guidance.
Criteria: Designers provide technical support or guidance to users.
Phrase: Provide technical support.

10.
Concepts: usage instruction, usage instructions
Relationship: Providing usage instructions implies demonstrating how to use a feature.
Criteria: Designers provide specific instructions or demonstrations on how to use a feature.
Phrase: Provide usage instructions.

11.
Concepts: user tips, practical advice
Relationship: Providing user tips implies offering practical advice.
Criteria: Users or designers provide practical advice or tips for using the software effectively.
Phrase: Offer practical advice.

12.
Concepts: involving users, user involvement
Relationship: Involving users implies actively engaging them in the design process.
Criteria: Designers actively involve users in the design process.
Phrase: Involve users in design.

13.
Concepts: co-designing with users, user-designer interaction
Relationship: Co-designing with users implies collaborative interaction.
Criteria: Designers involve users in the design process, allowing them to contribute ideas and make decisions.
Phrase: Co-design with users.

14.
Concepts: discuss input methods, input method discussion
Relationship: Discussing input methods implies exploring possibilities.
Criteria: Designers discuss input methods or possibilities with users.
Phrase: Discuss input methods.

15.
Concepts: simulation details, simulated experiment, detail simulated experiment assessment
Relationship: Explaining simulation details implies describing experimental processes.
Criteria: Designers explain the details of a simulation or experimental process.
Phrase: Explain simulation details.

16.
Concepts: elaboration, elaboration of suggestion
Relationship: Elaborating on a suggestion implies providing additional context.
Criteria: Designers provide additional details or context to an existing concept or idea.
Phrase: Elaborate on suggestions.

17.
Concepts: reflecting on experiences, reflect on past experience
Relationship: Reflecting on experiences implies sharing anecdotal evidence.
Criteria: Designers reflect on past experiences or share anecdotes.
Phrase: Reflect on experiences.

18.
Concepts: design refinement, simplification and refinement in design
Relationship: Refining designs implies simplifying and optimizing.
Criteria: Designers refine or improve design elements.
Phrase: Refine design elements.

19.
Concepts: design adaptation, feature adjustment
Relationship: Adapting designs implies adjusting features based on feedback.
Criteria: Designers adapt or adjust design elements based on feedback.
Phrase: Adapt design elements.

20.
Concepts: manual editing, manual adjustment
Relationship: Allowing manual editing implies providing customization options.
Criteria: Designers discuss the ability to manually adjust or customize the software.
Phrase: Allow manual editing.

21.
Concepts: user feedback integration
Relationship: Integrating user feedback implies acknowledging and incorporating it.
Criteria: Designers acknowledge and incorporate user feedback into the design process.
Phrase: Integrate user feedback.

22.
Concepts: system limitations
Relationship: Discussing system limitations implies explaining constraints.
Criteria: A user mentions limitations or constraints of a system or tool.
Phrase: Explain system limitations.

23.
Concepts: promote community engagement
Relationship: Promoting engagement implies fostering community interaction.
Criteria: Designers promote community engagement through active participation and interaction.
Phrase: Promote community engagement.

24.
Concepts: iterative development
Relationship: Iterative development implies refining and improving based on feedback.
Criteria: Designers discuss updates, new features, or bug fixes in an iterative development process.
Phrase: Implement iterative development.

25.
Concepts: encourage participatory design
Relationship: Encouraging participatory design implies involving users in the design process.
Criteria: Designers encourage users to contribute ideas, feedback, and suggestions for development.
Phrase: Encourage participatory design.

26.
Concepts: role identification
Relationship: Identifying roles implies understanding community structure.
Criteria: Users or designers identify their roles, contributing to the problem-solving process.
Phrase: Identify roles.

27.
Concepts: user engagement
Relationship: Engaging users implies participating in conversations.
Criteria: Users actively participate in the conversation, showing interest and involvement.
Phrase: Engage users.

28.
Concepts: development transparency
Relationship: Providing development transparency implies keeping the community informed.
Criteria: Designers provide detailed information about development processes and progress.
Phrase: Provide development transparency.

29.
Concepts: technical constraints
Relationship: Discussing technical constraints implies explaining limitations.
Criteria: Technical limitations or requirements are discussed.
Phrase: Explain technical constraints.

30.
Concepts: informal communication
Relationship: Informal communication implies a casual tone.
Criteria: The tone of the conversation is casual or informal, indicating the nature of the community's communication style.
Phrase: Engage in informal communication.

31.
Concepts: community interaction
Relationship: Community interaction implies fostering a sense of community.
Criteria: Designers initiate or maintain conversations, encouraging community interaction.
Phrase: Foster community interaction.

32.
Concepts: designer responsiveness
Relationship: Designer responsiveness implies engaging with user feedback.
Criteria: Designers respond to user queries, engage with user comments, and address concerns.
Phrase: Respond to user feedback.