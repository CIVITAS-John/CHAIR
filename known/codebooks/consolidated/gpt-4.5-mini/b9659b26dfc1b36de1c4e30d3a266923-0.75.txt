You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: announce updates based on feedback, introduce and announce new features
- Designers announce new features and updates that are influenced by user feedback to improve the software.
- Designers announce expansions in features and provide explanations for new components available in software updates.

2.
Concepts: engage in collaborative planning, discuss and adapt design for usability
- Designers and users collaboratively discuss and plan the development of the software.
- Designers discuss the visual and functional aspects of the software and adapt designs to enhance usability and functionality for users.

3.
Concepts: prioritize user feedback, optimizing software features
- A developer indicates prioritization of features based on user feedback and designers prioritize user feedback and requests in future updates.
- A designer emphasizes the importance of optimizing features to enhance user satisfaction and a developer suggests improvements to features to enhance user experience.

4.
Concepts: justify user suggestions with rationale, justify design choices and principles
- Users and designers explain decisions and rationales behind feature requests or improvements.
- Designers make design decisions and provide reasoning behind their choices while explaining guiding principles and clarifying the rationale for user-friendly design choices.

5.
Concepts: clarify version details and limitations, articulate and analyze compatibility specifications
- Designers specify software version details and communicate the intended purposes and limitations during testing.
- Designers explain compatibility requirements and analyze issues to deliver technical specifications for the software.

6.
Concepts: ask clarifying questions, seek clarification on specifications
- Users and designers ask questions to gain clarity on updates and the software's functionality.
- Designers seek clarification on technical specifications or input methods within the software.

7.
Concepts: consult and discuss educational needs, highlight and address educational needs
- Designers request feedback from teachers about content features and discuss their specific software needs.
- Users express their needs regarding software capabilities in relation to their educational environment.

8.
Concepts: provide context on resources, discuss and share user experiences
- Users share information about their educational environment and related challenges.
- Users share insights and challenges regarding how the software is applied in educational settings.

9.
Concepts: user expression, express feelings through communication
- Users express themselves using emojis or textual symbols without further context.
- Users express emotions and articulate feelings in their communications using emojis.

10.
Concepts: provide community feedback, establish a community feedback loop
- Users provide feedback and suggestions to improve the product, indicating an iterative feedback process.
- Processes where user feedback is solicited and incorporated into design decisions.

11.
Concepts: facilitate dialogue on usability, provide comparative feedback on usability
- Users engage in back-and-forth exchanges to clarify experiences and preferences about usability.
- Users describe software use in various contexts and provide comparative feedback.

12.
Concepts: suggest improvements for usability, exchange suggestions for improvements
- Instances where suggestions are made to improve usability and users propose new features for enhancement.
- Users offer additional suggestions and designers elaborate on proposals for software improvements.
===
---
Definitions for each code (12 in total):
1.
Concepts: announce updates based on feedback, introduce and announce new features  
Relationship: The concepts are related as both involve designers communicating changes and enhancements based on user input.  
Criteria: Designers announce updates and new features influenced by user feedback to improve the software.  
Phrase: Announce updates and new features.

2.
Concepts: engage in collaborative planning, discuss and adapt design for usability  
Relationship: The concepts are interconnected as they both emphasize interaction between designers and users to improve the software's design.  
Criteria: Designers and users collaboratively discuss and adapt the software's design for enhanced usability.  
Phrase: Engage in collaborative design.

3.
Concepts: prioritize user feedback, optimizing software features  
Relationship: The concepts are related because both involve prioritizing user input to improve software functionality.  
Criteria: Developers and designers prioritize user feedback to optimize software features for user satisfaction.  
Phrase: Prioritize user feedback.

4.
Concepts: justify user suggestions with rationale, justify design choices and principles  
Relationship: The concepts are logically connected as both involve providing reasoning behind decisions made by users and designers.  
Criteria: Users and designers explain the rationale behind feature requests and design choices for user-friendly outcomes.  
Phrase: Justify suggestions and design choices.

5.
Concepts: clarify version details and limitations, articulate and analyze compatibility specifications  
Relationship: The concepts are related as they both involve communication of technical specifications and limitations of the software.  
Criteria: Designers clarify software version details and analyze compatibility issues for users.  
Phrase: Clarify technical specifications.

6.
Concepts: ask clarifying questions, seek clarification on specifications  
Relationship: The concepts are interconnected as they both involve a process of inquiry to gain understanding.  
Criteria: Users and designers ask and seek clarification on software updates and technical specifications.  
Phrase: Seek clarification.

7.
Concepts: consult and discuss educational needs, highlight and address educational needs  
Relationship: The concepts are logically related as they both emphasize the importance of understanding user needs in an educational context.  
Criteria: Designers consult with users to discuss and address their specific educational needs related to software capabilities.  
Phrase: Discuss educational needs.

8.
Concepts: provide context on resources, discuss and share user experiences  
Relationship: The concepts are connected as they both involve sharing information that contextualizes user experiences.  
Criteria: Users share insights and challenges regarding their educational contexts and how the software is applied.  
Phrase: Share user experiences.

9.
Concepts: user expression, express feelings through communication  
Relationship: The concepts are related as they both pertain to the way users communicate their emotions.  
Criteria: Users express their feelings and emotions through various communication styles, including emojis.  
Phrase: Express feelings.

10.
Concepts: provide community feedback, establish a community feedback loop  
Relationship: The concepts are interconnected as they involve a two-way process of feedback between users and developers.  
Criteria: Users provide feedback and suggestions, establishing an iterative community feedback loop for product improvement.  
Phrase: Provide community feedback.

11.
Concepts: facilitate dialogue on usability, provide comparative feedback on usability  
Relationship: The concepts are related as both involve user engagement in discussing and evaluating software usability.  
Criteria: Users engage in dialogue to clarify and provide comparative feedback on software usability experiences.  
Phrase: Facilitate usability dialogue.

12.
Concepts: suggest improvements for usability, exchange suggestions for improvements  
Relationship: The concepts are logically connected as they both emphasize the interaction between users and designers in improving usability.  
Criteria: Users suggest improvements and propose new features, while designers elaborate on these proposals for better software usability.  
Phrase: Suggest usability improvements.
---