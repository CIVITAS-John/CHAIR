You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: prioritizing pc version, acknowledges priority for pc updates
- A designer prioritizes the PC version of the software over other versions.
- A designer acknowledges or prioritizes updates for a specific platform.

2.
Concepts: emphasizing categorization, communicating priority of topics
- A designer or user emphasizes the importance of categorization and prioritization.
- A designer communicates the priority of one topic over another.

3.
Concepts: prioritizing feedback, suggesting prioritization
- Prioritizing user feedback or suggestions in the development process.
- Users or designers suggest a prioritization strategy for tasks or features.

4.
Concepts: development prioritization, prioritizing development areas
- Prioritizes tasks or development goals
- The designer prioritizes development areas or tasks, often due to resource constraints.

5.
Concepts: mentioning delays, explaining delays
- Designer mentions or delays tasks due to priorities.
- Designer explains delays in the development process.

6.
Concepts: managing timelines, sharing update timelines, provides detailed update plans
- Designers manage or set timelines for updates or releases.
- Designers share or confirm update timelines or schedules.
- A designer provides detailed plans or timelines for updates or releases.

7.
Concepts: expresses release timeline, providing a development timeline
- Designer expresses timeline or schedule for software release
- Designers indicate or provide timelines for feature development.

8.
Concepts: defining project scope, communicating project scope and timeline
- Designer defines and manages the project scope.
- Designer communicates project scope and timeline to stakeholders.

9.
Concepts: hints at future projects, indicating future plans
- Designer hints at potential future projects or developments
- The designer indicates that something will happen or be included in the future.

10.
Concepts: considers future development, considers future expansions
- Developer considers future opportunities or possibilities
- A designer considers or discusses potential future expansions or developments.

11.
Concepts: planning future updates, planning future engagement
- Planning or discussing future updates or developments
- Designers discuss plans for future engagement or possibilities.

12.
Concepts: describing plans, setting future plans
- Designer describes plans or ideas for new features.
- Designer sets, outlines, and plans future development or updates.

13.
Concepts: feature roadmap, detailing planned features, listing upcoming features and support
- Designer lists or discusses upcoming features or updates for the software.
- Descriptions or details about planned features or updates.
- The designer lists upcoming features, components, or support for teaching.

14.
Concepts: upcoming features, explaining new features
- Designer details upcoming features or updates for the simulation.
- Designer explains new features and their development status.

15.
Concepts: building anticipation, anticipating updates, promoting anticipation
- Building anticipation or excitement for new features.
- User expresses expectation for future updates or developments.
- The speaker promotes anticipation or excitement for upcoming updates.

16.
Concepts: development strategy suggestions, promoting categorization and refinement
- User suggests focusing on categorization and refinement.
- User suggests categorization and refinement of features.

17.
Concepts: advocating for incremental development, advocating for gradual categorization
- User advises taking a gradual approach to development.
- User suggests categorizing or breaking down tasks gradually.

18.
Concepts: advising on incremental development, advising on development approach
- User advises on incremental development and refinement.
- A user advises on the development approach or strategy, often suggesting a step-by-step or categorized approach.

19.
Concepts: explain development plans, explaining development priorities
- Explaining the plans or goals for the software development.
- Explaining the priorities or rationale behind the development process.

20.
Concepts: active development, ongoing development
- Indicating that development is ongoing or in progress.
- Acknowledging ongoing work or development on a specific part of the platform

21.
Concepts: engage visually, fostering user engagement, facilitating further engagement
- Designer engages users with visual aids.
- A designer encourages user engagement and interaction, fostering a supportive environment.
- Designer facilitates further engagement or interaction.

22.
Concepts: engaging socially, maintaining interaction
- Designer initiates or maintains social interaction.
- Designer maintains a friendly and interactive tone.

23.
Concepts: facilitating communication, fostering open communication
- A designer facilitates communication or sharing among users.
- Designers foster open communication or feedback with users.

24.
Concepts: inclusive decision-making, ensuring collective decision-making
- Designer mentions consulting everyone in the group when ready to start.
- The designer ensures collective decision-making or involvement in the development process.

25.
Concepts: valuing community input, valuing and committing to user input
- A designer values or seeks input from the community.
- A designer values and commits to user input.

26.
Concepts: invite open feedback, creating a supportive environment
- Designer invites users to report problems directly and openly.
- Designers create a supportive environment, encouraging users to report problems or provide feedback.

27.
Concepts: balancing user needs, balancing design and user input
- A designer weighs or balances the needs of different users.
- User suggests a balance between designer-led development and user input.

28.
Concepts: balancing complexity and usability, balancing comprehensiveness and ease of use
- Designer balances complexity with usability.
- Designer mentions potential trade-offs in software development.

29.
Concepts: improves user experience, specifying details for user experience
- A designer improves and prioritizes user experience.
- Designer specifies details for enhanced user experience.

30.
Concepts: aims for usability, user-centric design, promoting ease of use
- A designer aims for usability and designs for intuitiveness.
- Designer expresses the intention to design user-friendly and self-explanatory software.
- A designer promotes ease of use and user experience.

31.
Concepts: shows consideration, considering user time
- A designer shows consideration for users.
- A designer shows consideration for users' time or schedules.

32.
Concepts: user needs consideration, considering user experience
- Considering different user needs, use cases, or scenarios.
- Considering the user experience and designing features that are user-friendly.
===
Here are the definitions for each code:

---
1.
Concepts: prioritizing pc version, acknowledges priority for pc updates
Relationship: The concepts are related as they both involve prioritization of the PC version.
Criteria: A designer prioritizes the PC version and acknowledges or prioritizes updates for a specific platform.
Phrase: Prioritizing PC version updates.

2.
Concepts: emphasizing categorization, communicating priority of topics
Relationship: The concepts are related as they both involve communication of priorities.
Criteria: A designer or user emphasizes categorization and communicates the priority of one topic over another.
Phrase: Communicating categorization priorities.

3.
Concepts: prioritizing feedback, suggesting prioritization
Relationship: The concepts are related as they both involve prioritization of user feedback.
Criteria: Users or designers prioritize user feedback and suggest a prioritization strategy for tasks or features.
Phrase: Prioritizing user feedback.

4.
Concepts: development prioritization, prioritizing development areas
Relationship: The concepts are related as they both involve prioritization of development tasks.
Criteria: The designer prioritizes tasks or development goals, often due to resource constraints.
Phrase: Prioritizing development tasks.

5.
Concepts: mentioning delays, explaining delays
Relationship: The concepts are related as they both involve explanations of delays.
Criteria: Designer mentions or delays tasks due to priorities and explains delays in the development process.
Phrase: Explaining development delays.

6.
Concepts: managing timelines, sharing update timelines, provides detailed update plans
Relationship: The concepts are related as they all involve management and communication of timelines.
Criteria: Designers manage or set timelines for updates or releases, share or confirm update timelines, and provide detailed plans for updates or releases.
Phrase: Managing and sharing update timelines.

7.
Concepts: expresses release timeline, providing a development timeline
Relationship: The concepts are related as they both involve communication of timelines.
Criteria: Designer expresses timeline or schedule for software release and indicates timelines for feature development.
Phrase: Expressing development timelines.

8.
Concepts: defining project scope, communicating project scope and timeline
Relationship: The concepts are related as they both involve communication of project scope and timeline.
Criteria: Designer defines and manages the project scope and communicates project scope and timeline to stakeholders.
Phrase: Defining and communicating project scope.

9.
Concepts: hints at future projects, indicating future plans
Relationship: The concepts are related as they both involve hints or indications of future developments.
Criteria: Designer hints at potential future projects or developments and indicates that something will happen or be included in the future.
Phrase: Hinting at future projects.

10.
Concepts: considers future development, considers future expansions
Relationship: The concepts are related as they both involve consideration of future possibilities.
Criteria: Developer considers future opportunities or possibilities and discusses potential future expansions or developments.
Phrase: Considering future developments.

11.
Concepts: planning future updates, planning future engagement
Relationship: The concepts are related as they both involve planning for future activities.
Criteria: Planning or discussing future updates or developments and discussing plans for future engagement or possibilities.
Phrase: Planning future updates and engagement.

12.
Concepts: describing plans, setting future plans
Relationship: The concepts are related as they both involve description and planning of future activities.
Criteria: Designer describes plans or ideas for new features and sets, outlines, and plans future development or updates.
Phrase: Describing and planning future updates.

13.
Concepts: feature roadmap, detailing planned features, listing upcoming features and support
Relationship: The concepts are related as they all involve communication of planned features.
Criteria: Designer lists or discusses upcoming features or updates for the software, describes planned features, and lists upcoming features, components, or support for teaching.
Phrase: Communicating feature roadmaps.

14.
Concepts: upcoming features, explaining new features
Relationship: The concepts are related as they both involve communication of new features.
Criteria: Designer details upcoming features or updates for the simulation and explains new features and their development status.
Phrase: Explaining upcoming features.

15.
Concepts: building anticipation, anticipating updates, promoting anticipation
Relationship: The concepts are related as they all involve building or promoting anticipation for future updates.
Criteria: Building anticipation or excitement for new features, user expresses expectation for future updates or developments, and promoting anticipation or excitement for upcoming updates.
Phrase: Building anticipation for updates.

16.
Concepts: development strategy suggestions, promoting categorization and refinement
Relationship: The concepts are related as they both involve suggestions for development strategy.
Criteria: User suggests focusing on categorization and refinement and suggests categorization and refinement of features.
Phrase: Suggesting development strategies.

17.
Concepts: advocating for incremental development, advocating for gradual categorization
Relationship: The concepts are related as they both involve advocacy for incremental development.
Criteria: User advises taking a gradual approach to development and suggests categorizing or breaking down tasks gradually.
Phrase: Advocating for incremental development.

18.
Concepts: advising on incremental development, advising on development approach
Relationship: The concepts are related as they both involve advice on development approach.
Criteria: User advises on incremental development and refinement and advises on the development approach or strategy, often suggesting a step-by-step or categorized approach.
Phrase: Advising on development approach.

19.
Concepts: explain development plans, explaining development priorities
Relationship: The concepts are related as they both involve explanation of development plans and priorities.
Criteria: Explaining the plans or goals for the software development and explaining the priorities or rationale behind the development process.
Phrase: Explaining development plans and priorities.

20.
Concepts: active development, ongoing development
Relationship: The concepts are related as they both involve indication of ongoing development.
Criteria: Indicating that development is ongoing or in progress and acknowledging ongoing work or development on a specific part of the platform.
Phrase: Indicating ongoing development.

21.
Concepts: engage visually, fostering user engagement, facilitating further engagement
Relationship: The concepts are related as they all involve engagement and interaction with users.
Criteria: Designer engages users with visual aids, encourages user engagement and interaction, and facilitates further engagement or interaction.
Phrase: Fostering user engagement.

22.
Concepts: engaging socially, maintaining interaction
Relationship: The concepts are related as they both involve social interaction.
Criteria: Designer initiates or maintains social interaction and maintains a friendly and interactive tone.
Phrase: Engaging socially.

23.
Concepts: facilitating communication, fostering open communication
Relationship: The concepts are related as they both involve facilitation of communication.
Criteria: A designer facilitates communication or sharing among users and fosters open communication or feedback with users.
Phrase: Facilitating open communication.

24.
Concepts: inclusive decision-making, ensuring collective decision-making
Relationship: The concepts are related as they both involve collective decision-making.
Criteria: Designer mentions consulting everyone in the group when ready to start and ensures collective decision-making or involvement in the development process.
Phrase: Ensuring collective decision-making.

25.
Concepts: valuing community input, valuing and committing to user input
Relationship: The concepts are related as they both involve valuing user input.
Criteria: A designer values or seeks input from the community and values and commits to user input.
Phrase: Valuing user input.

26.
Concepts: invite open feedback, creating a supportive environment
Relationship: The concepts are related as they both involve creation of a supportive environment.
Criteria: Designer invites users to report problems directly and openly and creates a supportive environment, encouraging users to report problems or provide feedback.
Phrase: Inviting open feedback.

27.
Concepts: balancing user needs, balancing design and user input
Relationship: The concepts are related as they both involve balancing different needs.
Criteria: A designer weighs or balances the needs of different users and suggests a balance between designer-led development and user input.
Phrase: Balancing user needs.

28.
Concepts: balancing complexity and usability, balancing comprehensiveness and ease of use
Relationship: The concepts are related as they both involve balancing different aspects of software development.
Criteria: Designer balances complexity with usability and mentions potential trade-offs in software development.
Phrase: Balancing complexity and usability.

29.
Concepts: improves user experience, specifying details for user experience
Relationship: The concepts are related as they both involve improvement of user experience.
Criteria: A designer improves and prioritizes user experience and specifies details for enhanced user experience.
Phrase: Improving user experience.

30.
Concepts: aims for usability, user-centric design, promoting ease of use
Relationship: The concepts are related as they all involve user-centric design.
Criteria: A designer aims for usability and designs for intuitiveness, expresses the intention to design user-friendly and self-explanatory software, and promotes ease of use and user experience.
Phrase: Aiming for usability.

31.
Concepts: shows consideration, considering user time
Relationship: The concepts are related as they both involve consideration of users.
Criteria: A designer shows consideration for users and shows consideration for users' time or schedules.
Phrase: Showing consideration for users.

32.
Concepts: user needs consideration, considering user experience
Relationship: The concepts are related as they both involve consideration of user needs and experience.
Criteria: Considering different user needs, use cases, or scenarios and considering the user experience and designing features that are user-friendly.
Phrase: Considering user needs and experience.