You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: seeking user guidance, ask about user needs
- Designers request guidance and plan for future feedback and user input.
- Designers ask users about their needs or requirements, gathering detailed information.

2.
Concepts: offering solutions, share design ideas
- Designers offer solutions or alternatives to problems or issues.
- A designer shares potential solutions or ideas for a problem or issue.

3.
Concepts: plans future design, sharing development plans
- Designers plan future design and discuss project management.
- Designers share future plans and development roadmaps.

4.
Concepts: outlining development priorities, development prioritization
- Designers outline feature roadmaps and development priorities.
- Instances where designers discuss the prioritization of different features or sections to be developed.

5.
Concepts: transparent design discussion, maintain development transparency
- Transparent discussion among developers about design decisions or issues.
- Designers provide detailed information about development processes, challenges, and progress.

6.
Concepts: expressing software enthusiasm, appreciating design craftsmanship
- Users express engagement and satisfaction with the software.
- Users acknowledge or appreciate the craftsmanship or visual design of the software.

7.
Concepts: confirm identity, confirming teacher identity
- A user confirms their identity or role.
- Users or designers confirm or acknowledge users' roles as teachers.

8.
Concepts: seek guidance, requesting assistance
- A user seeks guidance or asks for direction.
- Users request help and documentation.

9.
Concepts: providing context, providing explanations
- Users provide context and background information.
- Users provide explanations and context.

10.
Concepts: explaining limitations, discusses platform limitations
- Designers explain system and software limitations and complexity.
- Designers discuss or acknowledge limitations due to platform constraints and express frustration.

11.
Concepts: inquiring about the platform, inquiring about software access
- Users ask about the platform and inquire about its features.
- Users seek information about the software by inquiring about accessing specific features or resources.

12.
Concepts: seek clarification
- Users ask questions to seek information or clarification.
- Designers follow up on earlier information and request further clarification.
===
Here are the definitions for each code:

---
1.
Concepts: seeking user guidance, ask about user needs
Relationship: Designers actively seek user input to understand their needs.
Criteria: Designers request guidance to understand user needs and plan for future feedback.
Phrase: Requesting user input.

2.
Concepts: offering solutions, share design ideas
Relationship: Designers provide potential solutions and ideas to address user needs.
Criteria: Designers offer solutions and share design ideas to address user needs.
Phrase: Offering design solutions.

3.
Concepts: plans future design, sharing development plans
Relationship: Designers plan and share future design developments with users.
Criteria: Designers plan and share future design developments with users.
Phrase: Sharing development plans.

4.
Concepts: outlining development priorities, development prioritization
Relationship: Designers prioritize development tasks based on user needs and requirements.
Criteria: Designers outline development priorities based on user needs and requirements.
Phrase: Prioritizing development tasks.

5.
Concepts: transparent design discussion, maintain development transparency
Relationship: Designers engage in open and transparent discussions about design decisions and processes.
Criteria: Designers maintain transparency in design discussions and development processes.
Phrase: Maintaining design transparency.

6.
Concepts: expressing software enthusiasm, appreciating design craftsmanship
Relationship: Users express satisfaction and appreciation for the software's design and functionality.
Criteria: Users express enthusiasm and appreciation for the software's design and functionality.
Phrase: Expressing software enthusiasm.

7.
Concepts: confirm identity, confirming teacher identity
Relationship: Users confirm their role or identity to establish credibility and context.
Criteria: Users confirm their identity or role to establish credibility and context.
Phrase: Confirming user identity.

8.
Concepts: seek guidance, requesting assistance
Relationship: Users request help and direction from designers or peers.
Criteria: Users request guidance and assistance to overcome challenges.
Phrase: Requesting guidance.

9.
Concepts: providing context, providing explanations
Relationship: Users provide additional information to clarify their needs or concerns.
Criteria: Users provide context and explanations to clarify their needs or concerns.
Phrase: Providing context.

10.
Concepts: explaining limitations, discusses platform limitations
Relationship: Designers acknowledge and explain technical limitations and constraints.
Criteria: Designers explain platform limitations and express frustration.
Phrase: Explaining platform limitations.

11.
Concepts: inquiring about the platform, inquiring about software access
Relationship: Users seek information about the platform's features and functionality.
Criteria: Users inquire about the platform's features and access to specific resources.
Phrase: Inquiring about platform features.

12.
Concepts: seek clarification
Relationship: Users or designers request additional information to clarify earlier discussions.
Criteria: Users or designers seek clarification to ensure understanding.
Phrase: Seeking clarification.