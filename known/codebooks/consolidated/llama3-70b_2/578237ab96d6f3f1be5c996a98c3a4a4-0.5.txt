You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (31 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
31. 
Concepts: {Repeat the input 31}
Relationship: {What is logical relationship between concepts in code 31, or N/A if not applicable}
Criteria: {Who did what, and how for code 31}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: evaluating software usability, sharing software reviews or experiences
- User provides feedback on the usability of the software.
- Users share their review or opinion about the software.

2.
Concepts: acknowledge resolution, acknowledge clarifications
- A user acknowledges resolution of an issue.
- Users acknowledge and confirm understanding of clarifications or updates.

3.
Concepts: express appreciation, acknowledging progress
- Users express appreciation for resources.
- Users express satisfaction with progress and acknowledge the value of their input.

4.
Concepts: enthusiasm, express enthusiasm
- The designer or user expresses enthusiasm or appreciation for the project or its features.
- Users express enthusiasm or anticipation for features.

5.
Concepts: seek support, seek guidance
- Users request support or assistance with the simulation or technical issues.
- Users express confusion, uncertainty, or a need for help, guidance, or support with using the software.

6.
Concepts: express needs, express hopes for feature
- Users express a need or desire for a specific feature or functionality.
- A user expresses hopes or wishes for a feature or functionality.

7.
Concepts: provide school context, explain institutional context
- Users provide context about school resources or focus.
- Users provide institutional context or explain institutional goals.

8.
Concepts: explain system requirements, explain current version limitations
- Designers explain software limitations or inform users about system requirements.
- Designers explain current version limitations or mention development limitations.

9.
Concepts: describe technical constraints, environmental constraints
- Users describe technical constraints or classroom limitations.
- A user explains a limitation or challenge they face in using the platform due to external circumstances.

10.
Concepts: platform dependencies, specify software compatibility
- Designers manage or discuss platform dependencies or compatibility.
- Designers confirm system compatibility or specify software compatibility.

11.
Concepts: inquire about problems, diagnosing and solving problems
- Designers inquire about specific problems or issues users encountered.
- Designers analyze or troubleshoot a problem or issue and explore technical solutions.

12.
Concepts: clarify feature functionality, demonstrating feature functionality and capabilities
- Designers clarify features by explaining their behavior or functionality and system capabilities.
- Designers demonstrate feature functionality and highlight simulation capabilities.

13.
Concepts: considering user context, providing user context
- Designers consider the user's context or situation and user interaction flow.
- Designers provide user context by offering contextual information to facilitate exploration or understanding.

14.
Concepts: prioritizing practicality, emphasizing convenience
- A designer prioritizes practicality or functionality.
- Designers emphasize convenience and simplify design for efficiency.

15.
Concepts: justifying focus, justifying effort
- A designer justifies the focus on foundational features.
- Designers justify their effort and development priorities.

16.
Concepts: balancing user needs, aligning with user needs
- Designers balance user needs and design and user input.
- Designers align with or understand user needs and plan for features that cater to users' needs.

17.
Concepts: sharing information, providing community updates
- Sharing information or providing updates to the community.
- Designers share updates or news with the community.

18.
Concepts: promoting transparency, maintaining transparency
- Promoting transparency in the development process or updates.
- Designers engage in open and transparent discussion about the software's development and maintain transparency about the development process.

19.
Concepts: design discussion, discussing future expansions, discussing advanced development plans
- Designer engages in discussion about design or development plans.
- Designers discuss future expansions, suggest developments, and express interests.
- Designers discuss advanced or future development plans and plan for the development of advanced simulation features.

20.
Concepts: planning future engagement, planning and discussing future developments with users
- Designers plan for future user engagement or feedback and plan for iterative feedback or discussion.
- Designers plan and discuss features or updates with users.

21.
Concepts: explaining plans, outlining development priorities
- Designers explain plans and announce development plans for the software.
- Designer outlines development priorities or plans for future updates, including the development roadmap, updates, features, or timelines.

22.
Concepts: suggesting design improvements, considering alternative solutions
- Designers suggest design improvements or alternative solutions.
- Designers express openness to alternative solutions or approaches.

23.
Concepts: request clarification, clarifying intentions
- A designer asks for clarification or more information about a request.
- Designer explains the intention behind a follow-up question or request.

24.
Concepts: clarify design choices, following up on previous discussions
- Designers seek confirmation or clarification on design preferences.
- Designers follow up on previous discussions and seek design clarification.

25.
Concepts: providing answers and design support, providing detailed and indirect answers
- Designers provide answers, design support, and concise support.
- Designers provide detailed and indirect answers.

26.
Concepts: offering immediate assistance, providing technical support
- Designers offer immediate assistance or support.
- Designers provide technical support and offer personalized support.

27.
Concepts: highlighting collaboration, cultivating community involvement
- Designers highlight community involvement and collaboration.
- Designers cultivate community involvement and ensure collective decision making.

28.
Concepts: encouraging dialogue, showing engagement and active listening, engaging in dialogue
- Designers encourage dialogue and invite more questions.
- Designers show engagement and active listening.
- Designers engage in dialogue and initiate interactions with users.

29.
Concepts: engage with development, inviting user participation
- Users engage with the development process or express interest in ongoing development or updates.
- The speaker invites or encourages users to participate in the development process, provide feedback, or contribute to the community.

30.
Concepts: consider new features, suggesting new experiments
- Designers consider incorporating new features or experiments based on user needs.
- Designers suggest or propose new experiment types or features for the online community.

31.
Concepts: communicating design priorities
- Designers communicate priorities and allocate resources for software development.
- Designers explain the focus or direction of the software development.
===
Here are the definitions for each code:

---
1.
Concepts: evaluating software usability, sharing software reviews or experiences
Relationship: Users share their reviews or opinions about the software, which involves evaluating its usability.
Criteria: Users provide feedback on the usability of the software by sharing their reviews or experiences.
Phrase: Share software reviews and experiences.

2.
Concepts: acknowledge resolution, acknowledge clarifications
Relationship: Users acknowledge resolution of an issue, which involves understanding clarifications or updates.
Criteria: Users acknowledge and confirm understanding of clarifications or updates.
Phrase: Acknowledge issue resolution and clarifications.

3.
Concepts: express appreciation, acknowledging progress
Relationship: Users express appreciation for resources, which involves acknowledging progress and the value of their input.
Criteria: Users express appreciation for resources and acknowledge progress and the value of their input.
Phrase: Express appreciation and acknowledge progress.

4.
Concepts: enthusiasm, express enthusiasm
Relationship: Designers or users express enthusiasm or appreciation for the project or its features.
Criteria: Designers or users express enthusiasm or appreciation for the project or its features.
Phrase: Express enthusiasm for the project.

5.
Concepts: seek support, seek guidance
Relationship: Users request support or assistance, which involves seeking guidance with using the software.
Criteria: Users request support or assistance with the simulation or technical issues.
Phrase: Seek support and guidance.

6.
Concepts: express needs, express hopes for feature
Relationship: Users express a need or desire for a specific feature or functionality, which involves hoping for its implementation.
Criteria: Users express a need or desire for a specific feature or functionality.
Phrase: Express needs and hopes for features.

7.
Concepts: provide school context, explain institutional context
Relationship: Users provide context about school resources or focus, which involves explaining institutional goals.
Criteria: Users provide context about school resources or focus and explain institutional goals.
Phrase: Provide school and institutional context.

8.
Concepts: explain system requirements, explain current version limitations
Relationship: Designers explain software limitations or system requirements, which involves explaining current version limitations.
Criteria: Designers explain software limitations or system requirements and current version limitations.
Phrase: Explain system requirements and limitations.

9.
Concepts: describe technical constraints, environmental constraints
Relationship: Users describe technical constraints or classroom limitations, which involves explaining external circumstances.
Criteria: Users describe technical constraints or classroom limitations and explain external circumstances.
Phrase: Describe technical and environmental constraints.

10.
Concepts: platform dependencies, specify software compatibility
Relationship: Designers manage or discuss platform dependencies, which involves specifying software compatibility.
Criteria: Designers manage or discuss platform dependencies and specify software compatibility.
Phrase: Manage platform dependencies and compatibility.

11.
Concepts: inquire about problems, diagnosing and solving problems
Relationship: Designers inquire about specific problems or issues, which involves diagnosing and solving them.
Criteria: Designers inquire about specific problems or issues and diagnose and solve them.
Phrase: Diagnose and solve problems.

12.
Concepts: clarify feature functionality, demonstrating feature functionality and capabilities
Relationship: Designers clarify features by explaining their behavior or functionality, which involves demonstrating system capabilities.
Criteria: Designers clarify features by explaining their behavior or functionality and demonstrate system capabilities.
Phrase: Clarify and demonstrate feature functionality.

13.
Concepts: considering user context, providing user context
Relationship: Designers consider the user's context or situation, which involves providing contextual information.
Criteria: Designers consider the user's context or situation and provide contextual information.
Phrase: Consider and provide user context.

14.
Concepts: prioritizing practicality, emphasizing convenience
Relationship: Designers prioritize practicality or functionality, which involves emphasizing convenience.
Criteria: Designers prioritize practicality or functionality and emphasize convenience.
Phrase: Prioritize practicality and convenience.

15.
Concepts: justifying focus, justifying effort
Relationship: Designers justify the focus on foundational features, which involves justifying their effort and development priorities.
Criteria: Designers justify the focus on foundational features and justify their effort and development priorities.
Phrase: Justify focus and effort.

16.
Concepts: balancing user needs, aligning with user needs
Relationship: Designers balance user needs and design, which involves aligning with user needs.
Criteria: Designers balance user needs and design and align with user needs.
Phrase: Balance and align with user needs.

17.
Concepts: sharing information, providing community updates
Relationship: Designers share information or provide updates to the community.
Criteria: Designers share information or provide updates to the community.
Phrase: Share information and updates.

18.
Concepts: promoting transparency, maintaining transparency
Relationship: Designers promote transparency in the development process, which involves maintaining transparency.
Criteria: Designers promote transparency in the development process and maintain transparency.
Phrase: Promote and maintain transparency.

19.
Concepts: design discussion, discussing future expansions, discussing advanced development plans
Relationship: Designers engage in discussion about design or development plans, which involves discussing future expansions and advanced development plans.
Criteria: Designers engage in discussion about design or development plans and discuss future expansions and advanced development plans.
Phrase: Discuss design and development plans.

20.
Concepts: planning future engagement, planning and discussing future developments with users
Relationship: Designers plan for future user engagement, which involves planning and discussing features or updates with users.
Criteria: Designers plan for future user engagement and discuss features or updates with users.
Phrase: Plan and discuss future developments.

21.
Concepts: explaining plans, outlining development priorities
Relationship: Designers explain plans and announce development plans, which involves outlining development priorities.
Criteria: Designers explain plans and announce development plans and outline development priorities.
Phrase: Explain and outline development plans.

22.
Concepts: suggesting design improvements, considering alternative solutions
Relationship: Designers suggest design improvements, which involves considering alternative solutions.
Criteria: Designers suggest design improvements and consider alternative solutions.
Phrase: Suggest design improvements and alternatives.

23.
Concepts: request clarification, clarifying intentions
Relationship: Designers ask for clarification or more information, which involves explaining the intention behind the request.
Criteria: Designers ask for clarification or more information and explain the intention behind the request.
Phrase: Request clarification and explain intentions.

24.
Concepts: clarify design choices, following up on previous discussions
Relationship: Designers seek confirmation or clarification on design preferences, which involves following up on previous discussions.
Criteria: Designers seek confirmation or clarification on design preferences and follow up on previous discussions.
Phrase: Clarify design choices and follow up.

25.
Concepts: providing answers and design support, providing detailed and indirect answers
Relationship: Designers provide answers and design support, which involves providing detailed and indirect answers.
Criteria: Designers provide answers and design support and provide detailed and indirect answers.
Phrase: Provide answers and design support.

26.
Concepts: offering immediate assistance, providing technical support
Relationship: Designers offer immediate assistance or support, which involves providing technical support.
Criteria: Designers offer immediate assistance or support and provide technical support.
Phrase: Offer immediate assistance and support.

27.
Concepts: highlighting collaboration, cultivating community involvement
Relationship: Designers highlight community involvement and collaboration, which involves cultivating collective decision making.
Criteria: Designers highlight community involvement and collaboration and cultivate collective decision making.
Phrase: Highlight collaboration and community involvement.

28.
Concepts: encouraging dialogue, showing engagement and active listening, engaging in dialogue
Relationship: Designers encourage dialogue, which involves showing engagement and active listening and engaging in dialogue.
Criteria: Designers encourage dialogue and show engagement and active listening and engage in dialogue.
Phrase: Encourage and engage in dialogue.

29.
Concepts: engage with development, inviting user participation
Relationship: Users engage with the development process, which involves inviting user participation.
Criteria: Users engage with the development process and invite user participation.
Phrase: Engage with development and invite participation.

30.
Concepts: consider new features, suggesting new experiments
Relationship: Designers consider incorporating new features or experiments, which involves suggesting new experiment types or features.
Criteria: Designers consider incorporating new features or experiments and suggest new experiment types or features.
Phrase: Consider and suggest new features and experiments.

31.
Concepts: communicating design priorities
Relationship: Designers communicate priorities, which involves allocating resources for software development.
Criteria: Designers communicate priorities and allocate resources for software development.
Phrase: Communicate design priorities.