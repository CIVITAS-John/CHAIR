You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: offering guidance, providing user guidance
- User offers guidance or direction, direction or guidance is provided to a user.
- Providing instructions or guidance on how to use a feature

2.
Concepts: seek usage guidance, asking for usage guidance
- Users ask for guidance or support for using the software.
- User asks a question about how to use a specific feature or component of the simulation.
- Users seek guidance or inquire about the PC version.

3.
Concepts: answer a concern, responding to user questions
- Addressing or responding to a concern or worry raised by a user
- Responding to user inquiries or questions.

4.
Concepts: initiate interaction, participating in community, engaging with the community for assistance
- A user initiates interaction or conversation with others in the community.
- A user participates in the community or responds to a question.
- User engages with the community to seek assistance, ask questions, or clarify information.

5.
Concepts: initiating discussion, encourage open dialogue
- Initiating or encouraging discussion or feedback.
- A user encourages open dialogue or feedback for problem-solving.

6.
Concepts: problem solving, troubleshooting
- A user attempts to solve a problem or offer a solution.
- A user engages in troubleshooting or offers technical assistance.

7.
Concepts: technical question, asking about app functionality
- User asks a technical question about the software or its functionality.
- A user asks a question about the app or its functionality.

8.
Concepts: platform accessibility, inquiring about platform compatibility, asking platform questions
- Users inquire about platform accessibility.
- Users inquire about the platform or system compatibility of the software.
- Asking questions about platform availability or access.

9.
Concepts: requesting resources, expressing need for help
- Users ask for resources or support.
- Expressions of need or request for help from users.

10.
Concepts: policy explanations, providing rationales
- Explaining a reason or policy behind a particular action or decision.
- Providing a reason or explanation for a particular decision or action.

11.
Concepts: reason for suggestion, explaining reasons for request
- Reasons or justifications provided for suggesting new features or changes.
- A user explains the reasons or motivations behind a request or suggestion.

12.
Concepts: providing feature details, addressing functionality
- Detailed descriptions or explanations of software features.
- Discussions or explanations about specific functionality or features of the software.

13.
Concepts: providing technical clarification, clarifying platform differences
- Clarifying or explaining technical aspects or behaviors of the software.
- Clarifications or explanations about differences between software versions or platforms.

14.
Concepts: clarifying testing phase, providing context for testing phase
- Clarifying the purpose or limitations of a feature or version.
- Providing context or explanations for the testing phase.

15.
Concepts: contextualization, contextual information, providing context
- Providing context or background information
- Providing context or background information about using the software in a specific setting.
- User provides context or background information about their environment.

16.
Concepts: provide context for inquiry, providing context for need
- A user explains the context or reason behind their question or issue.
- A user provides context or explains the need for a particular feature or functionality.

17.
Concepts: offering additional reason, provide additional context
- User offers an additional reason or explanation.
- Users provide additional context or clarification to a question or topic.

18.
Concepts: comparing to other tools, compare software to others
- A user compares the Physics Lab to other similar tools or software.
- A user compares the software to other similar products or tools.

19.
Concepts: product gap, identifying gaps in tools
- Users identify gaps or limitations in the current software.
- Identifying gaps or limitations in existing tools or resources.

20.
Concepts: usability challenges, explaining development challenges, highlighting ui challenges
- Revealing potential challenges or difficulties with using a particular tool or feature.
- Designer explains development challenges or difficulties, explains the complexity or challenges of developing a feature.
- Designer highlights user interface challenges or limitations, highlights a challenge or difficulty in implementing a feature or design.

21.
Concepts: concern or suggestion, raises related issue
- Raising a concern or potential issue
- A designer raises a related issue or concern that needs to be addressed.

22.
Concepts: highlighting usability need, highlighting accessibility concerns
- Highlighting a need or requirement for a feature or improvement
- Concerns or suggestions about accessibility features or issues.

23.
Concepts: expressing confusion, expressing frustration, expressing concern
- User expresses confusion or uncertainty about how to use the software.
- Users or designers express frustration or difficulty with the software or development process.
- User expresses concern, anxiety, or uncertainty about the software or its development.

24.
Concepts: expressing uncertainty, expressing contemplation
- Designers express uncertainty or hesitation about certain decisions or features.
- The designer expresses contemplation or uncertainty about a particular issue or topic.

25.
Concepts: resolution, acknowledging resolution
- Resolutions or conclusions to issues or problems discussed in the community.
- The speaker acknowledges a resolution or solution.

26.
Concepts: self-solved, self-resolution, self-help
- User resolves their own issue or question
- Responding to one's own question or providing a solution to a personal issue.
- Taking initiative to find solutions or help oneself.

27.
Concepts: exploring technical solutions, exploring collaborative possibilities
- Exploring or discussing technical solutions or possibilities.
- Exploration or discussion of collaborative features or possibilities.

28.
Concepts: solution consideration, considering alternatives
- Considering or exploring potential solutions or approaches to a problem.
- Considering multiple perspectives or options for a particular issue.

29.
Concepts: suggest alternatives, exploring alternative solutions
- Users provide alternative suggestions or solutions.
- User or designer offers or seeks alternative solutions or options.

30.
Concepts: enabling problem-solving, promoting problem-solving
- Enabling problem-solving or learning through the application
- Designers promote problem-solving within the application.

31.
Concepts: problem-solving feature, emphasizes convenience in problem solving
- Highlighting the software's problem-solving capabilities.
- Emphasizing the convenience or benefits of a feature for problem-solving

32.
Concepts: proposing compromise, proposing a dual solution
- A designer proposes a compromise or alternative solution.
- Designer proposes a dual solution or alternative to a problem or issue.
===
Here are the definitions for each code:

---
1.
Concepts: offering guidance, providing user guidance
Relationship: Guidance is provided to users, who may be seeking direction or instructions.
Criteria: Users provide direction or guidance to other users on how to use a feature.
Phrase: Providing user guidance.

2.
Concepts: seek usage guidance, asking for usage guidance
Relationship: Users ask for guidance or support, and others provide it.
Criteria: Users ask for guidance or support on how to use a specific feature or component of the simulation.
Phrase: Seeking usage guidance.

3.
Concepts: answer a concern, responding to user questions
Relationship: Concerns or questions are addressed or responded to.
Criteria: Users respond to user inquiries or questions, addressing concerns or worries.
Phrase: Responding to user concerns.

4.
Concepts: initiate interaction, participating in community, engaging with the community for assistance
Relationship: Users initiate interaction, participate, or engage with the community to seek assistance or ask questions.
Criteria: Users initiate interaction or conversation with others in the community to seek assistance, ask questions, or clarify information.
Phrase: Initiating community interaction.

5.
Concepts: initiating discussion, encourage open dialogue
Relationship: Discussion or feedback is encouraged or initiated.
Criteria: Users encourage open dialogue or feedback for problem-solving or discussion.
Phrase: Encouraging open dialogue.

6.
Concepts: problem solving, troubleshooting
Relationship: Problems are solved or technical assistance is offered.
Criteria: Users attempt to solve a problem or offer a solution, engaging in troubleshooting or technical assistance.
Phrase: Solving problems.

7.
Concepts: technical question, asking about app functionality
Relationship: Technical questions are asked and answered.
Criteria: Users ask technical questions about the software or its functionality.
Phrase: Asking technical questions.

8.
Concepts: platform accessibility, inquiring about platform compatibility, asking platform questions
Relationship: Platform accessibility and compatibility are inquired about.
Criteria: Users inquire about platform accessibility, compatibility, or availability.
Phrase: Inquiring about platform accessibility.

9.
Concepts: requesting resources, expressing need for help
Relationship: Resources or support are requested or expressed.
Criteria: Users ask for resources or support, expressing a need for help.
Phrase: Requesting resources.

10.
Concepts: policy explanations, providing rationales
Relationship: Reasons or policies are explained or provided.
Criteria: Users explain a reason or policy behind a particular action or decision.
Phrase: Providing policy explanations.

11.
Concepts: reason for suggestion, explaining reasons for request
Relationship: Reasons or justifications are provided for suggestions or requests.
Criteria: Users explain the reasons or motivations behind a request or suggestion.
Phrase: Explaining reasons.

12.
Concepts: providing feature details, addressing functionality
Relationship: Feature details or explanations are provided.
Criteria: Users provide detailed descriptions or explanations of software features.
Phrase: Providing feature details.

13.
Concepts: providing technical clarification, clarifying platform differences
Relationship: Technical aspects or behaviors are clarified.
Criteria: Users clarify or explain technical aspects or behaviors of the software.
Phrase: Providing technical clarification.

14.
Concepts: clarifying testing phase, providing context for testing phase
Relationship: Context or explanations are provided for the testing phase.
Criteria: Users clarify the purpose or limitations of a feature or version, providing context for the testing phase.
Phrase: Clarifying testing phase.

15.
Concepts: contextualization, contextual information, providing context
Relationship: Context or background information is provided.
Criteria: Users provide context or background information about using the software in a specific setting.
Phrase: Providing context.

16.
Concepts: provide context for inquiry, providing context for need
Relationship: Context or reasons are provided for a question or issue.
Criteria: Users explain the context or reason behind their question or issue.
Phrase: Providing context for inquiry.

17.
Concepts: offering additional reason, provide additional context
Relationship: Additional reasons or context are provided.
Criteria: Users offer an additional reason or explanation, providing additional context or clarification.
Phrase: Offering additional context.

18.
Concepts: comparing to other tools, compare software to others
Relationship: Software is compared to other similar tools or software.
Criteria: Users compare the Physics Lab to other similar tools or software.
Phrase: Comparing to other tools.

19.
Concepts: product gap, identifying gaps in tools
Relationship: Gaps or limitations are identified in the software.
Criteria: Users identify gaps or limitations in the current software.
Phrase: Identifying product gaps.

20.
Concepts: usability challenges, explaining development challenges, highlighting ui challenges
Relationship: Challenges or difficulties are revealed or explained.
Criteria: Users reveal potential challenges or difficulties with using a particular tool or feature, or designers explain development challenges.
Phrase: Highlighting usability challenges.

21.
Concepts: concern or suggestion, raises related issue
Relationship: Concerns or issues are raised or addressed.
Criteria: Users raise a concern or potential issue that needs to be addressed.
Phrase: Raising concerns.

22.
Concepts: highlighting usability need, highlighting accessibility concerns
Relationship: Needs or concerns are highlighted or emphasized.
Criteria: Users highlight a need or requirement for a feature or improvement, or concerns about accessibility features or issues.
Phrase: Highlighting usability needs.

23.
Concepts: expressing confusion, expressing frustration, expressing concern
Relationship: Emotions or concerns are expressed.
Criteria: Users express confusion, frustration, or concern about the software or its development.
Phrase: Expressing emotions.

24.
Concepts: expressing uncertainty, expressing contemplation
Relationship: Uncertainty or contemplation is expressed.
Criteria: Designers express uncertainty or hesitation about certain decisions or features.
Phrase: Expressing uncertainty.

25.
Concepts: resolution, acknowledging resolution
Relationship: Resolutions or conclusions are acknowledged.
Criteria: Resolutions or conclusions to issues or problems discussed in the community are acknowledged.
Phrase: Acknowledging resolution.

26.
Concepts: self-solved, self-resolution, self-help
Relationship: Users resolve their own issues or questions.
Criteria: Users resolve their own issue or question, taking initiative to find solutions or help themselves.
Phrase: Self-solving.

27.
Concepts: exploring technical solutions, exploring collaborative possibilities
Relationship: Technical solutions or possibilities are explored.
Criteria: Users explore or discuss technical solutions or possibilities, or collaborative features or possibilities.
Phrase: Exploring technical solutions.

28.
Concepts: solution consideration, considering alternatives
Relationship: Solutions or approaches are considered.
Criteria: Users consider or explore potential solutions or approaches to a problem.
Phrase: Considering solutions.

29.
Concepts: suggest alternatives, exploring alternative solutions
Relationship: Alternative solutions or suggestions are provided.
Criteria: Users provide alternative suggestions or solutions, or seek alternative solutions or options.
Phrase: Suggesting alternatives.

30.
Concepts: enabling problem-solving, promoting problem-solving
Relationship: Problem-solving is enabled or promoted.
Criteria: Designers enable problem-solving or learning through the application, promoting problem-solving within the application.
Phrase: Enabling problem-solving.

31.
Concepts: problem-solving feature, emphasizes convenience in problem solving
Relationship: Problem-solving capabilities are highlighted.
Criteria: The software's problem-solving capabilities are highlighted, emphasizing the convenience or benefits of a feature for problem-solving.
Phrase: Highlighting problem-solving features.

32.
Concepts: proposing compromise, proposing a dual solution
Relationship: Compromises or alternative solutions are proposed.
Criteria: Designers propose a compromise or alternative solution to a problem or issue.
Phrase: Proposing compromises.