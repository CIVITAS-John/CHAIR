You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (10 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
10. 
Concepts: {Repeat the input 10}
Relationship: {What is logical relationship between concepts in code 10, or N/A if not applicable}
Criteria: {Who did what, and how for code 10}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: asking questions, respond to questions
- Participants ask questions or follow-up questions to gather detailed information.
- Participants engage in answering and responding to questions from others.

2.
Concepts: ask for feedback, requesting community input
- Designers invite community members to provide feedback or input.
- Participants request or seek input and feedback from the community.

3.
Concepts: welcoming new participants, exchange community greetings
- Community members greet new participants with introductions and welcomes.
- Participants exchange and reciprocate friendly greetings within the community.

4.
Concepts: collaborative planning, planning future development
- Designers and users collaboratively discussing and planning the development of the software.
- Participants discuss plans and potential future software development directions.

5.
Concepts: invite to co-design, propose and solicit feature requests
- Designers invite users to collaborate and contribute to the design process.
- Participants propose ideas for additional software features, and designers invite users to collaborate on new features or experiments.

6.
Concepts: simplify design, feature simplification
- Designers suggest or discuss efforts to simplify software design and features.
- The suggestion or action to simplify features for better usability.

7.
Concepts: teacher appreciation, acknowledging contributions
- Expressing gratitude to the community or specific users for their support or contributions.
- Users acknowledge and express gratitude for efforts and contributions made.

8.
Concepts: highlighting educational needs, discuss school initiatives
- Users discuss and highlight needs specific to school or educational initiatives.
- Users provide context about the community or mention initiatives or projects related to their schools.

9.
Concepts: explaining software functionality, providing software usage instructions
- Designers explain specific components and provide examples of software features.
- Designers offered clear explanations and guidance on how to use various software features and provided updates to support effective usage.

10.
Concepts: announcing new features, announce software updates
- Designers inform the community about new feature releases or updates.
- Developers officially announce new versions, features, and release timelines.
===
---
Definitions for each code (10 in total):
1.
Concepts: asking questions, respond to questions
Relationship: Mutual interaction and exchange of information through querying.
Criteria: Participants interact by asking and responding to questions to gather and provide detailed information within the community.
Phrase: Engaging in inquiry and response

2.
Concepts: ask for feedback, requesting community input
Relationship: Solicitation of opinions and input from community members to inform decisions.
Criteria: Participants request feedback and input from the community to gain diverse perspectives and contributions.
Phrase: Soliciting feedback and input

3.
Concepts: welcoming new participants, exchange community greetings
Relationship: Initiation and maintenance of a welcoming community environment.
Criteria: Community members greet and welcome new participants and engage in friendly exchanges to foster a sense of belonging.
Phrase: Fostering community through greetings

4.
Concepts: collaborative planning, planning future development
Relationship: Joint efforts in determining future directions and development.
Criteria: Designers and users collaboratively discuss and plan the future development of the software.
Phrase: Collaborating on future planning

5.
Concepts: invite to co-design, propose and solicit feature requests
Relationship: Co-creation through joint proposal and development of software features.
Criteria: Designers invite users to collaborate on the design process and participants propose and solicit ideas for new features.
Phrase: Co-creating features

6.
Concepts: simplify design, feature simplification
Relationship: Active efforts to improve usability by reducing complexity.
Criteria: Designers discuss and suggest simplifications of software design and features to enhance usability.
Phrase: Simplifying software design

7.
Concepts: teacher appreciation, acknowledging contributions
Relationship: Recognition and gratitude for efforts and support.
Criteria: Users express gratitude and acknowledge the contributions and efforts made by community members.
Phrase: Expressing appreciation and recognition

8.
Concepts: highlighting educational needs, discuss school initiatives
Relationship: Emphasis on educational contexts and community-driven projects.
Criteria: Users discuss educational needs and initiatives specific to schools, providing relevant context and mentioning related projects.
Phrase: Discussing educational needs and initiatives

9.
Concepts: explaining software functionality, providing software usage instructions
Relationship: Informative guidance on software use and features.
Criteria: Designers explain software functionality and offer clear usage instructions to support effective software utilization.
Phrase: Providing usage guidance

10.
Concepts: announcing new features, announce software updates
Relationship: Communication of progress and feature availability.
Criteria: Designers inform the community about the release of new features and updates, including details and timelines.
Phrase: Announcing updates and new features
---