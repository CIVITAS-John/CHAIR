You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: educational benefits, promote educational value
- A designer explains the educational benefits or value of software features.
- The designer highlights the educational value or potential of the software.

2.
Concepts: comparative evaluation, comparative analysis, comparing user experiences, compare software usability
- User compares the software with other applications.
- A user compares or contrasts the software with other tools or resources.
- A user compares their experience with the software.
- Comparing the usability of different software

3.
Concepts: comparing to similar apps, compare user experiences with other tools
- A user compares the platform to similar apps or software.
- User compares the software with other tools, highlighting its practicality.

4.
Concepts: describing use cases, suggesting practical use cases
- A user describes a specific use case or scenario for a feature or functionality.
- A user suggests a practical use case for a feature.

5.
Concepts: educational practicality emphasis, emphasizing practical applications
- A user or designer emphasizes the practicality or usefulness of a feature in educational settings.
- A user emphasizes the practical applications of a feature or functionality in an educational setting.

6.
Concepts: practical utility, user highlights practical application, highlight practicality
- A user emphasizes the practical utility of a feature or functionality.
- User highlights the practical application or benefit of a feature.
- User highlights the practicality or usefulness of the software.
- A user highlights the practicality or usefulness of the software.

7.
Concepts: sharing classroom success, share positive teaching experiences
- A user shares a success story or positive experience using the platform in a classroom setting.
- User shares a positive experience or outcome from using the product in a teaching setting.

8.
Concepts: sharing classroom experiences, described classroom experience
- Sharing of experiences or stories about using the platform in the classroom
- User shares their personal experience, story, or anecdote about using the platform or feature.

9.
Concepts: praise software effectiveness, expressing user satisfaction
- User praises the effectiveness or quality of the Physics Lab software.
- A user expresses satisfaction or praise for the Physics Lab software, highlighting its practicality or user-friendliness.

10.
Concepts: impact on student engagement, expressed student engagement
- A user highlights the positive impact of the software on student engagement or learning.
- A user expresses enthusiasm or positive feedback about the software's impact on students.

11.
Concepts: providing context, provide context for need
- The user provides context for their request or suggestion.
- User provides context for their question.
- User provides context or explains the need for a feature or development.

12.
Concepts: contextualizing responses, providing context for engagement
- User provides context or background information.
- A user provides context or information that facilitates engagement or discussion.

13.
Concepts: context sharing, share contextual information
- User shares context or experience related to the topic or discussion.
- User shares contextual information about their situation or environment.

14.
Concepts: provide context, provided additional context
- Providing context or background information about a specific situation.
- Provision of additional context or information

15.
Concepts: school context, contextualizing software constraints, educational context
- A user highlights the context of using the software in a school setting.
- A user contextualizes software usage constraints in an educational setting.
- A user considers the educational context or application of the software.

16.
Concepts: context, explain educational environment
- Users provide information about their educational context, environment, or background.
- User explains their educational environment or context.

17.
Concepts: explaining lack of internet access, user 4232 explains lack of internet
- A user explains the lack of internet access in a specific context.
- User explains or shares their situation or constraints (e.g., lack of internet access).

18.
Concepts: network restriction explanation, provide context for internet restrictions
- A user explains or justifies network restrictions or limitations in educational settings.
- User provides context or explains constraints related to internet access.

19.
Concepts: describing institutional limitations, reflects on institutional constraints
- A user describes institutional limitations or constraints.
- User reflects on institutional constraints or limitations.

20.
Concepts: emphasize institutional policy, explaining institutional policy
- User references institutional policies or rules.
- User explains an institutional policy or restriction.

21.
Concepts: identify software gaps, highlight gaps in existing software, identified product gap
- A user identifies gaps or limitations in the current software.
- User highlights limitations or gaps in existing software offerings.
- A user identifies a gap or limitation in the software's current features or functionality.

22.
Concepts: identifying gaps in functionality, highlight gaps in current resources
- Identifying a specific need or limitation in the current system
- Identification of gaps or limitations in current resources or features.

23.
Concepts: explain user constraints, describing technology constraints
- Explaining or describing the constraints or limitations faced by users.
- A user explains the constraints on technology use in a specific context.

24.
Concepts: technical limitation, technical constraints
- A user describes a technical limitation or constraint that affects their use of a tool.
- A user explains a technical limitation or constraint.
- A user highlights technical limitations or constraints that affect the use of a tool or feature.
- A user references technical constraints or limitations.

25.
Concepts: identify barriers, identifying barriers to software adoption
- Identifying barriers or limitations in using the software.
- User highlights potential obstacles or limitations that may hinder software use.

26.
Concepts: highlight user challenges, highlight technical challenges
- Users or designers highlight challenges or difficulties faced by users.
- The user highlights technical challenges or limitations.

27.
Concepts: critique of outdated technology, description of outdated technology, expressing frustration with outdated technology
- User expresses dissatisfaction with outdated technology
- A user describes an outdated technology or system.
- A user expresses frustration or dissatisfaction with outdated technology or systems.

28.
Concepts: highlighting outdated systems, highlight outdated technology
- User highlights outdated systems or infrastructure.
- User highlights outdated technology or infrastructure.

29.
Concepts: technical discussion, discuss technical requirements
- Users engage in a discussion about technical specifications or software requirements.
- A designer discusses or explains technical requirements or considerations for the software.

30.
Concepts: memory concerns, expressing concern over memory retention
- A designer expresses concern about memory or storage.
- A designer expresses concern over remembering user suggestions.

31.
Concepts: security concern, network security concerns, security concerns
- User expresses concern about security or safety issues.
- A user raises concerns or mentions restrictions related to network security.
- A user expresses concern or highlights the importance of secure environments.

32.
Concepts: express dissatisfaction, frustration expression, expressing frustration humorously
- Designer expresses dissatisfaction or frustration.
- A designer expresses frustration or disappointment with current limitations.
- Designer expresses frustration or humorously comments on an issue.
===
Here are the definitions for each code:

---
1.
Concepts: educational benefits, promote educational value
Relationship: The concepts are related as they both highlight the educational benefits of the software features.
Criteria: A designer explains or highlights the educational benefits or value of software features.
Phrase: Explaining educational benefits

2.
Concepts: comparative evaluation, comparative analysis, comparing user experiences, compare software usability
Relationship: The concepts are related as they all involve comparing the software with other applications or tools.
Criteria: A user compares the software with other applications, tools, or resources to evaluate its usability.
Phrase: Comparing software usability

3.
Concepts: comparing to similar apps, compare user experiences with other tools
Relationship: The concepts are related as they both involve comparing the platform with similar apps or tools.
Criteria: A user compares the platform with similar apps or tools to evaluate its practicality.
Phrase: Comparing with similar apps

4.
Concepts: describing use cases, suggesting practical use cases
Relationship: The concepts are related as they both involve describing or suggesting practical uses of the software.
Criteria: A user describes or suggests practical use cases for a feature or functionality.
Phrase: Describing use cases

5.
Concepts: educational practicality emphasis, emphasizing practical applications
Relationship: The concepts are related as they both emphasize the practicality of the software in educational settings.
Criteria: A user or designer emphasizes the practicality or usefulness of a feature in educational settings.
Phrase: Emphasizing practical applications

6.
Concepts: practical utility, user highlights practical application, highlight practicality
Relationship: The concepts are related as they all highlight the practical utility or application of the software.
Criteria: A user highlights the practical utility or application of a feature or functionality.
Phrase: Highlighting practical utility

7.
Concepts: sharing classroom success, share positive teaching experiences
Relationship: The concepts are related as they both involve sharing positive experiences of using the platform in a classroom setting.
Criteria: A user shares a success story or positive experience using the platform in a classroom setting.
Phrase: Sharing classroom success

8.
Concepts: sharing classroom experiences, described classroom experience
Relationship: The concepts are related as they both involve sharing experiences or stories about using the platform in the classroom.
Criteria: A user shares their personal experience or story about using the platform or feature in a classroom setting.
Phrase: Sharing classroom experiences

9.
Concepts: praise software effectiveness, expressing user satisfaction
Relationship: The concepts are related as they both involve expressing positive feedback about the software.
Criteria: A user praises the effectiveness or quality of the Physics Lab software.
Phrase: Expressing user satisfaction

10.
Concepts: impact on student engagement, expressed student engagement
Relationship: The concepts are related as they both involve highlighting the positive impact of the software on student engagement.
Criteria: A user highlights the positive impact of the software on student engagement or learning.
Phrase: Highlighting student engagement

11.
Concepts: providing context, provide context for need
Relationship: The concepts are related as they both involve providing context for a request or suggestion.
Criteria: A user provides context for their request or suggestion.
Phrase: Providing context

12.
Concepts: contextualizing responses, providing context for engagement
Relationship: The concepts are related as they both involve providing context to facilitate engagement or discussion.
Criteria: A user provides context or background information to facilitate engagement or discussion.
Phrase: Contextualizing responses

13.
Concepts: context sharing, share contextual information
Relationship: The concepts are related as they both involve sharing context or experience related to the topic or discussion.
Criteria: A user shares context or experience related to the topic or discussion.
Phrase: Sharing context

14.
Concepts: provide context, provided additional context
Relationship: The concepts are related as they both involve providing additional context or background information.
Criteria: A user provides additional context or background information about a specific situation.
Phrase: Providing additional context

15.
Concepts: school context, contextualizing software constraints, educational context
Relationship: The concepts are related as they all involve considering the educational context or application of the software.
Criteria: A user highlights the context of using the software in a school setting, considering constraints or limitations.
Phrase: Contextualizing software constraints

16.
Concepts: context, explain educational environment
Relationship: The concepts are related as they both involve providing information about the educational context or environment.
Criteria: A user explains their educational environment or context.
Phrase: Explaining educational environment

17.
Concepts: explaining lack of internet access, user 4232 explains lack of internet
Relationship: The concepts are related as they both involve explaining the lack of internet access in a specific context.
Criteria: A user explains the lack of internet access in a specific context.
Phrase: Explaining lack of internet access

18.
Concepts: network restriction explanation, provide context for internet restrictions
Relationship: The concepts are related as they both involve explaining or providing context for internet restrictions.
Criteria: A user explains or provides context for internet restrictions in educational settings.
Phrase: Explaining network restrictions

19.
Concepts: describing institutional limitations, reflects on institutional constraints
Relationship: The concepts are related as they both involve describing or reflecting on institutional limitations or constraints.
Criteria: A user describes or reflects on institutional limitations or constraints.
Phrase: Describing institutional limitations

20.
Concepts: emphasize institutional policy, explaining institutional policy
Relationship: The concepts are related as they both involve emphasizing or explaining institutional policies or rules.
Criteria: A user emphasizes or explains an institutional policy or rule.
Phrase: Explaining institutional policy

21.
Concepts: identify software gaps, highlight gaps in existing software, identified product gap
Relationship: The concepts are related as they all involve identifying gaps or limitations in the current software.
Criteria: A user identifies gaps or limitations in the current software or features.
Phrase: Identifying software gaps

22.
Concepts: identifying gaps in functionality, highlight gaps in current resources
Relationship: The concepts are related as they both involve identifying gaps or limitations in current resources or features.
Criteria: A user identifies gaps or limitations in current resources or features.
Phrase: Identifying gaps in functionality

23.
Concepts: explain user constraints, describing technology constraints
Relationship: The concepts are related as they both involve explaining or describing constraints or limitations faced by users.
Criteria: A user explains or describes constraints or limitations faced by users.
Phrase: Explaining user constraints

24.
Concepts: technical limitation, technical constraints
Relationship: The concepts are related as they both involve describing technical limitations or constraints.
Criteria: A user describes technical limitations or constraints that affect their use of a tool.
Phrase: Describing technical limitations

25.
Concepts: identify barriers, identifying barriers to software adoption
Relationship: The concepts are related as they both involve identifying barriers or limitations to using the software.
Criteria: A user identifies barriers or limitations to using the software.
Phrase: Identifying barriers to adoption

26.
Concepts: highlight user challenges, highlight technical challenges
Relationship: The concepts are related as they both involve highlighting challenges or difficulties faced by users.
Criteria: A user highlights challenges or difficulties faced by users.
Phrase: Highlighting user challenges

27.
Concepts: critique of outdated technology, description of outdated technology, expressing frustration with outdated technology
Relationship: The concepts are related as they all involve expressing dissatisfaction with outdated technology.
Criteria: A user expresses dissatisfaction with outdated technology or systems.
Phrase: Critiquing outdated technology

28.
Concepts: highlighting outdated systems, highlight outdated technology
Relationship: The concepts are related as they both involve highlighting outdated systems or infrastructure.
Criteria: A user highlights outdated systems or infrastructure.
Phrase: Highlighting outdated systems

29.
Concepts: technical discussion, discuss technical requirements
Relationship: The concepts are related as they both involve discussing technical specifications or software requirements.
Criteria: A user or designer engages in a discussion about technical specifications or software requirements.
Phrase: Discussing technical requirements

30.
Concepts: memory concerns, expressing concern over memory retention
Relationship: The concepts are related as they both involve expressing concern about memory or storage.
Criteria: A designer expresses concern about memory or storage.
Phrase: Expressing memory concerns

31.
Concepts: security concern, network security concerns, security concerns
Relationship: The concepts are related as they all involve expressing concern about security or safety issues.
Criteria: A user expresses concern about security or safety issues.
Phrase: Expressing security concerns

32.
Concepts: express dissatisfaction, frustration expression, expressing frustration humorously
Relationship: The concepts are related as they all involve expressing dissatisfaction or frustration.
Criteria: A designer expresses dissatisfaction or frustration.
Phrase: Expressing frustration