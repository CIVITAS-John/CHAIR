You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (44 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
44. 
Concepts: {Repeat the input 44}
Relationship: {What is logical relationship between concepts in code 44, or N/A if not applicable}
Criteria: {Who did what, and how for code 44}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: outline development priorities, discuss development prioritization
- Users or designers outline the sequence of features to be developed and the development priorities.
- Designers and users discuss the prioritization of development tasks and project management.

2.
Concepts: explain delays, explaining feature development
- Developers or designers explain reasons for delays in updates or feature completion.
- Designers explain the complexity of a feature and provide a timeline for its development.

3.
Concepts: discuss update plans, announcing and discussing planned updates
- Users or designers discuss plans for future updates and explain the rationale behind features or decisions.
- Designers discuss, confirm, or announce plans for future updates or features.

4.
Concepts: instruction and updates, providing version information
- Designers providing updates and instructions to help users understand and use the software effectively.
- Designers provide information, details, and clarifications about software versions.

5.
Concepts: detailing updates and tips, detail bug fixes and features
- Designers offer special tips and details about new features and updates.
- Designers detail specific bug fixes and new features in an update.

6.
Concepts: share development updates, communicate development plans
- Designers share visual updates, development plans, or detailed development updates with the community.
- Users or designers communicate progress and share information about future development plans.

7.
Concepts: tacit disagreement, indirectly rejecting suggestions
- A designer expresses tacit disagreement or a differing opinion.
- Designers implicitly or indirectly reject a suggestion or request.

8.
Concepts: discussing design support, providing technical information
- Designers ask and answer questions related to design support.
- Designers discuss technical considerations and provide technical information.

9.
Concepts: problem inquiry, inquire about user problems
- A participant inquires about specific problems encountered by others.
- Designers ask users about specific problems they encountered to understand their needs.

10.
Concepts: committing to improvement, commit to providing a solution
- Designers promise and commit to improving the software based on user feedback.
- Designers commit to providing a solution or follow-up.

11.
Concepts: reassure users, answer to a question
- Designers reassure users about the progress and express gratitude or encouragement.
- A designer responds to a user's question, providing reassurance or information about ongoing work.

12.
Concepts: providing explanations, explaining functionality
- Users and designers provide explanations and clarifications on topics.
- Designers address and explain the functionality of features and components.

13.
Concepts: elaborating on topics, providing detailed information
- Designers elaborate on specific topics or features.
- Designers add specific information and provide detailed answers to user queries.

14.
Concepts: following up on requests, encouraging discussions
- Designers ask follow-up questions to clarify user requests.
- Designers follow up on discussions and encourage future questions.

15.
Concepts: considering compatibility, confirm system compatibility
- Designers speculate and consider future compatibility with different systems.
- Designers assure or confirm the software's compatibility with various systems.

16.
Concepts: discussing user interface, designing interface layout
- Designers discuss input methods and the usability of the user interface.
- Designers discuss the visual and functional aspects of the interface layout.

17.
Concepts: questioning identity, inquiring about user roles
- Designers question the identity or role of a user.
- Designers inquire about users' roles and backgrounds.

18.
Concepts: share teaching experience, share professional background
- Users establish their credibility by sharing their teaching experience and background.
- Users share their professional background to establish credibility and context.

19.
Concepts: confirm teacher identity, confirm professional identity
- Users confirm their role as teachers and designers confirm users' professional backgrounds.
- Users confirm their professional roles or identities and inquire about others' professional roles or identities.

20.
Concepts: share personal stories, share user experiences
- Users share personal anecdotes or stories related to the software or educational setting.
- Users share past incidents or experiences related to the software and its impact on their teaching or learning.

21.
Concepts: school needs, express user needs
- Users discuss the needs and requirements of their schools.
- Users indicate potential needs or requirements related to the software or the educational environment.

22.
Concepts: network policies, discuss internet access issues
- Discussions about network policies and restrictions in educational settings.
- Users mention restrictions on internet access in schools and explain reasons for lack of internet access in classrooms.

23.
Concepts: discuss educational alignment, discuss classroom application
- Users discuss how the software aligns with educational needs and standards.
- Users discuss the application of the software in the classroom and its practical use in educational settings.

24.
Concepts: request user manual, request usage documentation
- Users reiterate the need for a user manual and justify their request.
- Users request a user manual or other documentation and guidance for using specific features or versions of the software.

25.
Concepts: resource request, request user assistance
- A user requests resources or information about the platform.
- Users seek help or assistance and request information.

26.
Concepts: ask a question, information seeking
- Users ask questions about various aspects of the software or its use.
- Users asking questions to gain knowledge or resources related to the software.

27.
Concepts: seek version clarification, inquire about software access
- Users ask for clarification about the version of the software and where to find specific platform versions.
- Users ask how to access a specific version of the software, and designers or users provide information on how to access or download it.

28.
Concepts: provide reasons, explain rationale
- Users confirm a reason or explanation and provide reasons for planned actions or decisions.
- Users and designers provide rationales for certain actions or decisions and explain the principles behind design decisions.

29.
Concepts: context provision, provide contextual information
- Providing context for a specific situation or decision.
- Users provide context about their environment or situation and explain the background reasons for their needs or questions.

30.
Concepts: physics concepts, request new features
- A user requests the addition of specific physics concepts or demonstrations.
- Users request new features or improvements for the Physics Lab tool and additional experiments.

31.
Concepts: use informal expressions, use non-verbal communication
- Users engage with the community using emojis or informal language to express themselves.
- Users communicate or express themselves using emojis or other non-verbal forms.

32.
Concepts: expressive, express enthusiasm
- A user or designer uses expressive language or emojis to convey emotions.
- Users or designers express enthusiasm or amusement, often with emojis.

33.
Concepts: express user appreciation, express community gratitude
- Users express gratitude for assistance or support.
- Users express support, acknowledgment, gratitude, and encouragement to the community.

34.
Concepts: self-solved, acknowledge self-sufficiency
- A user acknowledges finding a solution independently.
- Users express gratitude for resources or information they found independently and acknowledge their self-sufficiency.

35.
Concepts: acknowledge receipt, acknowledge resolution
- Users acknowledge receipt or understanding of information or instructions and responses.
- Users acknowledge that they have received or accessed shared resources and that an issue has been resolved.

36.
Concepts: encourage user feedback, encouraging user participation
- Encouraging users to provide feedback and suggestions.
- Designers encourage user interaction, participation, and feedback.

37.
Concepts: suggestion solicitation, suggest new features
- Soliciting suggestions or requirements from users.
- Designers invite users to suggest new features or improvements, and users or developers make specific or detailed requests.

38.
Concepts: provide feedback and suggestions, suggest usability improvements
- Users provide feedback or suggestions to improve the software.
- Users provide suggestions or changes to improve the usability of the software and offer alternative suggestions.

39.
Concepts: community feedback, provide specific feedback
- Users providing feedback and suggestions to improve the product.
- Users provide specific feedback on features and suggestions with justifications.

40.
Concepts: encourage community discussion, encouraging open communication
- A designer encourages open discussion and problem-solving within the community.
- Designers encourage open communication and express openness to alternative solutions.

41.
Concepts: co-designing with users, involving users in design
- Designers offer opportunities for users to participate in the design process.
- Designers gather user input and involve users in the design process.

42.
Concepts: cultivating community, engaging with the community
- Designers encourage community participation and interaction.
- Designers engage with the community through various interactions.

43.
Concepts: building community rapport, maintain community interaction
- Designers engage in casual conversation to build rapport and contribute to community building.
- Designers maintain interaction with the community through greetings or casual messages.

44.
Concepts: show consideration, display politeness
- A designer shows consideration for the community, often apologizing for disturbances.
- Users or designers use polite language and express apologies for potential interruptions or inconveniences.
===
---
Definitions for each code (44 in total):
1.
Concepts: outline development priorities, discuss development prioritization
Relationship: Both concepts involve planning and prioritizing development tasks.
Criteria: Users or designers outline and discuss the sequence and prioritization of development tasks.
Phrase: Prioritizing development tasks

2.
Concepts: explain delays, explaining feature development
Relationship: Both concepts involve providing explanations related to development timelines.
Criteria: Developers or designers explain reasons for delays and the complexity of feature development.
Phrase: Explaining development timelines

3.
Concepts: discuss update plans, announcing and discussing planned updates
Relationship: Both concepts involve communication about future updates.
Criteria: Users or designers discuss and announce plans for future updates and their rationale.
Phrase: Communicating update plans

4.
Concepts: instruction and updates, providing version information
Relationship: Both concepts involve providing information to help users understand and use the software.
Criteria: Designers provide updates, instructions, and version information to users.
Phrase: Providing software information

5.
Concepts: detailing updates and tips, detail bug fixes and features
Relationship: Both concepts involve providing detailed information about updates.
Criteria: Designers offer tips and details about new features, updates, and bug fixes.
Phrase: Detailing software updates

6.
Concepts: share development updates, communicate development plans
Relationship: Both concepts involve sharing information about development progress.
Criteria: Designers share updates and communicate development plans with the community.
Phrase: Sharing development progress

7.
Concepts: tacit disagreement, indirectly rejecting suggestions
Relationship: Both concepts involve expressing disagreement or rejection indirectly.
Criteria: Designers express tacit disagreement or indirectly reject suggestions.
Phrase: Indirectly rejecting suggestions

8.
Concepts: discussing design support, providing technical information
Relationship: Both concepts involve providing support and technical information.
Criteria: Designers discuss design support and provide technical information.
Phrase: Providing design support

9.
Concepts: problem inquiry, inquire about user problems
Relationship: Both concepts involve inquiring about user problems.
Criteria: Participants inquire about specific problems encountered by users.
Phrase: Inquiring about user issues

10.
Concepts: committing to improvement, commit to providing a solution
Relationship: Both concepts involve a commitment to improving the software.
Criteria: Designers commit to improving the software and providing solutions based on user feedback.
Phrase: Committing to software improvement

11.
Concepts: reassure users, answer to a question
Relationship: Both concepts involve providing reassurance and answers to users.
Criteria: Designers reassure users and answer their questions about ongoing work.
Phrase: Reassuring and informing users

12.
Concepts: providing explanations, explaining functionality
Relationship: Both concepts involve providing explanations.
Criteria: Users and designers provide explanations and clarify the functionality of features.
Phrase: Explaining software functionality

13.
Concepts: elaborating on topics, providing detailed information
Relationship: Both concepts involve providing detailed information.
Criteria: Designers elaborate on topics and provide detailed answers to user queries.
Phrase: Providing detailed explanations

14.
Concepts: following up on requests, encouraging discussions
Relationship: Both concepts involve follow-up and encouragement of discussions.
Criteria: Designers follow up on user requests and encourage further discussions.
Phrase: Encouraging user engagement

15.
Concepts: considering compatibility, confirm system compatibility
Relationship: Both concepts involve addressing system compatibility.
Criteria: Designers consider and confirm the software's compatibility with various systems.
Phrase: Addressing system compatibility

16.
Concepts: discussing user interface, designing interface layout
Relationship: Both concepts involve discussions about the user interface.
Criteria: Designers discuss and design the visual and functional aspects of the interface layout.
Phrase: Designing user interface

17.
Concepts: questioning identity, inquiring about user roles
Relationship: Both concepts involve inquiring about user identity or roles.
Criteria: Designers question and inquire about users' roles and backgrounds.
Phrase: Inquiring about user identity

18.
Concepts: share teaching experience, share professional background
Relationship: Both concepts involve sharing professional experiences.
Criteria: Users share their teaching experience and professional background to establish credibility.
Phrase: Sharing professional experience

19.
Concepts: confirm teacher identity, confirm professional identity
Relationship: Both concepts involve confirming professional roles.
Criteria: Users confirm their professional roles and inquire about others' professional identities.
Phrase: Confirming professional identity

20.
Concepts: share personal stories, share user experiences
Relationship: Both concepts involve sharing personal experiences.
Criteria: Users share personal anecdotes and experiences related to the software.
Phrase: Sharing personal experiences

21.
Concepts: school needs, express user needs
Relationship: Both concepts involve expressing needs related to the educational environment.
Criteria: Users discuss and express the needs and requirements of their schools.
Phrase: Expressing educational needs

22.
Concepts: network policies, discuss internet access issues
Relationship: Both concepts involve discussing network and internet access issues.
Criteria: Users discuss network policies and internet access issues in educational settings.
Phrase: Discussing network issues

23.
Concepts: discuss educational alignment, discuss classroom application
Relationship: Both concepts involve discussing the software's application in education.
Criteria: Users discuss how the software aligns with educational needs and its classroom application.
Phrase: Discussing educational application

24.
Concepts: request user manual, request usage documentation
Relationship: Both concepts involve requesting documentation.
Criteria: Users request a user manual or documentation for using the software.
Phrase: Requesting user documentation

25.
Concepts: resource request, request user assistance
Relationship: Both concepts involve requesting help or resources.
Criteria: Users request resources or assistance related to the software.
Phrase: Requesting user assistance

26.
Concepts: ask a question, information seeking
Relationship: Both concepts involve seeking information.
Criteria: Users ask questions to gain knowledge or resources related to the software.
Phrase: Seeking information

27.
Concepts: seek version clarification, inquire about software access
Relationship: Both concepts involve inquiring about software versions and access.
Criteria: Users seek clarification about software versions and how to access them.
Phrase: Inquiring about software versions

28.
Concepts: provide reasons, explain rationale
Relationship: Both concepts involve providing explanations for actions or decisions.
Criteria: Users and designers provide reasons and rationales for certain actions or decisions.
Phrase: Explaining decision rationale

29.
Concepts: context provision, provide contextual information
Relationship: Both concepts involve providing context for understanding.
Criteria: Users provide context about their environment or situation to explain their needs or questions.
Phrase: Providing contextual information

30.
Concepts: physics concepts, request new features
Relationship: Both concepts involve requesting additions to the software.
Criteria: Users request the addition of specific physics concepts or new features.
Phrase: Requesting new features

31.
Concepts: use informal expressions, use non-verbal communication
Relationship: Both concepts involve informal or non-verbal communication.
Criteria: Users use informal language or non-verbal communication like emojis to express themselves.
Phrase: Using informal communication

32.
Concepts: expressive, express enthusiasm
Relationship: Both concepts involve expressing emotions.
Criteria: Users or designers use expressive language or emojis to convey enthusiasm.
Phrase: Expressing enthusiasm

33.
Concepts: express user appreciation, express community gratitude
Relationship: Both concepts involve expressing gratitude.
Criteria: Users express appreciation and gratitude for assistance or support within the community.
Phrase: Expressing gratitude

34.
Concepts: self-solved, acknowledge self-sufficiency
Relationship: Both concepts involve acknowledging independent problem-solving.
Criteria: Users acknowledge finding solutions independently and express gratitude for available resources.
Phrase: Acknowledging self-sufficiency

35.
Concepts: acknowledge receipt, acknowledge resolution
Relationship: Both concepts involve acknowledging receipt or resolution of information.
Criteria: Users acknowledge receipt of information or resolution of issues.
Phrase: Acknowledging receipt and resolution

36.
Concepts: encourage user feedback, encouraging user participation
Relationship: Both concepts involve encouraging user interaction.
Criteria: Designers encourage users to provide feedback and participate in discussions.
Phrase: Encouraging user participation

37.
Concepts: suggestion solicitation, suggest new features
Relationship: Both concepts involve soliciting or making suggestions.
Criteria: Designers invite users to suggest new features or improvements.
Phrase: Soliciting suggestions

38.
Concepts: provide feedback and suggestions, suggest usability improvements
Relationship: Both concepts involve providing feedback for improvement.
Criteria: Users provide feedback and suggestions to improve the software's usability.
Phrase: Suggesting usability improvements

39.
Concepts: community feedback, provide specific feedback
Relationship: Both concepts involve providing feedback to the community.
Criteria: Users provide specific feedback and suggestions to improve the product.
Phrase: Providing community feedback

40.
Concepts: encourage community discussion, encouraging open communication
Relationship: Both concepts involve encouraging open communication within the community.
Criteria: Designers encourage open discussion and communication within the community.
Phrase: Encouraging open communication

41.
Concepts: co-designing with users, involving users in design
Relationship: Both concepts involve user participation in the design process.
Criteria: Designers involve users in the design process and gather their input.
Phrase: Involving users in design

42.
Concepts: cultivating community, engaging with the community
Relationship: Both concepts involve fostering community interaction.
Criteria: Designers encourage and engage with the community through various interactions.
Phrase: Engaging with the community

43.
Concepts: building community rapport, maintain community interaction
Relationship: Both concepts involve maintaining and building community relationships.
Criteria: Designers build rapport and maintain interaction with the community through casual conversation.
Phrase: Building community rapport

44.
Concepts: show consideration, display politeness
Relationship: Both concepts involve showing politeness and consideration.
Criteria: Users or designers show consideration and use polite language, often apologizing for disturbances.
Phrase: Displaying politeness
---