You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: highlighting practical constraints, highlighting technical constraints, highlight practical constraints
- User highlights practical constraints or limitations.
- User highlights technical constraints or limitations.
- A user highlights practical constraints or limitations of using the software.

2.
Concepts: explaining limitations, explaining limitations due to past experience
- A user explains limitations or constraints in their environment.
- Designer explains a limitation or restriction of a feature or functionality.
- User explains a limitation or constraint due to past experiences.

3.
Concepts: acknowledge limitations, limitation acknowledgement, acknowledging limitations
- Designer acknowledges limitations or potential issues with the software.
- Designer acknowledges a limitation or constraint of the software.
- Designer acknowledges limitations or issues with a specific feature or algorithm.
- Designer acknowledges a potential issue or limitation.
- The designer acknowledges limitations or constraints in their work.
- A designer acknowledges current limitations or challenges.
- A designer acknowledges a limitation or issue with the software's functionality.

4.
Concepts: explaining school policies, explaining school internet restrictions
- A user explains common school policies regarding network access.
- User explains common school internet restrictions or limitations.

5.
Concepts: explain common school policy, explaining school policy
- User explains a common school policy or constraint.
- A user explains or mentions a school policy related to the online community.

6.
Concepts: explaining restrictions, providing reason for restriction
- Users provide explanations or context for specific restrictions or limitations.
- A reason or explanation is provided for a restriction or limitation.

7.
Concepts: describing outdated systems, frustration with outdated tech
- User describes outdated systems or technology.
- A user expresses frustration with outdated technology or systems.

8.
Concepts: classroom limitations, elaborates on classroom technology limitations
- User shares limitations of using software in classroom
- A user elaborates on the limitations or constraints of using technology in the classroom.

9.
Concepts: internet access limitation, reporting limited internet access
- User explains the lack of internet access in their school or classroom.
- Stating the lack of internet access in classrooms or schools.

10.
Concepts: proposing dual approach, proposing a dual solution
- Designer proposes a dual approach or solution to a problem or feature.
- Designer proposes a solution that combines multiple approaches.

11.
Concepts: alternative solution, proposing compromise
- Suggesting a compromise or alternative solution
- A designer or user offers an alternative solution or workaround.
- The designer proposes a compromise or alternative solution.
- A designer proposes a compromise in design choices.

12.
Concepts: offering alternative, alternative suggestion, suggesting alternatives, suggests alternative solution, suggesting alternative solutions, offering alternative solutions
- User suggests an alternative solution or approach.
- User suggests an alternative approach or solution.
- A user suggests alternative designs or solutions.
- A user suggests an alternative solution or approach to a problem.
- A user suggests an alternative system or solution.
- User suggests an alternative system or approach.
- User suggests an alternative system or compatibility option.
- Suggesting alternative solutions or approaches to a problem.
- A user offers or seeks alternative solutions or workarounds.

13.
Concepts: suggest solution, share potential solutions, proposes solution
- User suggests a potential solution to a problem.
- User shares potential solutions to a problem or issue.
- The user proposes or suggests a solution to a problem or issue.

14.
Concepts: shares workaround, sharing workaround
- A designer shares a temporary solution or workaround for a known issue.
- The designer shares a workaround or solution for a specific issue.
- A designer shares a workaround for a specific issue (e.g., full screen).

15.
Concepts: workaround suggestion, offering workaround solutions, offering workarounds
- Designer suggests a potential workaround or solution.
- Designer provides a workaround solution to a problem or limitation.
- A designer offers a workaround or solution to a user's problem or issue.

16.
Concepts: identifying product gaps, identifying gaps in software
- User identifies a gap or limitation in the current software or market.
- Identifying gaps or limitations in existing software or tools.

17.
Concepts: addressing usability, identifying usability issues, designer raises usability concern, usability discussion
- A designer addresses usability or user experience concerns.
- The designer identifies or discusses potential usability issues in the system.
- Designers raise concerns or questions about usability or user experience.
- The designer discusses usability or user experience issues.

18.
Concepts: highlighting usability needs, identifying usability challenges
- User highlights the need for improved usability.
- User points out potential usability issues or challenges.

19.
Concepts: ui challenges, highlighting challenges
- A designer highlights a challenge or issue related to the user interface.
- The designer highlights a challenge or limitation of the software.

20.
Concepts: enabling problem-solving, describing problem-solving functionality
- A designer enables or facilitates problem-solving within the software.
- The designer describes problem-solving functionality or features.

21.
Concepts: provide solution, offering solutions, designer suggests solution
- Designer provides a solution or answer to a user's question or problem.
- The designer offers solutions or workarounds to users' problems or technical issues.
- The designer offers a solution to a problem or issue.
- A designer suggests a solution to a user's problem or issue.

22.
Concepts: resolving concerns, answer a concern, addressing user concerns, mitigating concerns
- Designer resolves a user's concern or issue.
- Designer addresses a concern or worry expressed by a user.
- Designer addresses or responds to user concerns.
- The designer responds to mitigate a user's concern or issue.

23.
Concepts: ascertain user issues, inquiring about user experience
- Designer ascertains user issues or problems with the software.
- The designer inquires about users' experiences or problems with the software.

24.
Concepts: probing for user difficulties, inquire about specific problems
- A designer inquires about user difficulties or challenges.
- Designer inquires about specific problems or issues users encountered.

25.
Concepts: problem analysis, problem diagnosis
- Designer analyzes a problem or issue
- Designer offers a diagnosis for a problem

26.
Concepts: apology/acknowledgment, apology or acknowledgement
- Acknowledging potential inconvenience or apologizing for disruptions.
- Acknowledging or apologizing for disruptions or inconvenience.

27.
Concepts: apology for delays, apologizing for timing
- A designer apologizes for delays or issues.
- A designer apologizes for a timing issue or inconvenience.

28.
Concepts: apology for disturbance, apologizing for disturbance, apologizing for inconvenience
- Designer apologizes for a disturbance or inconvenience.
- The designer apologizes for any disturbance or inconvenience caused.
- Designer apologizes for inconvenience or disturbance.

29.
Concepts: acknowledge potential disturbance, acknowledges potential inconvenience
- Designer acknowledges potential disturbance or inconvenience.
- The designer acknowledges potential inconvenience or apologizes for any disturbance caused.

30.
Concepts: feature complexity, comparing feature complexities
- A designer compares the complexity of different features or updates.
- A designer compares the complexities of different features or components.

31.
Concepts: explaining development complexity, explaining development challenges
- Explaining the complexity or challenges of a development process.
- The designer explains the challenges or complexities of development.

32.
Concepts: communicate update complexity, designer explains complexity of updates
- Designer communicates the complexity of updates and expected release timeline.
- Designer explains the complexity of updates or new features.
===
Here are the definitions for each code:

---
1.
Concepts: highlighting practical constraints, highlighting technical constraints, highlight practical constraints
Relationship: The concepts are related as they all involve highlighting constraints or limitations.
Criteria: A user highlights constraints or limitations of using the software.
Phrase: Highlighting constraints

2.
Concepts: explaining limitations, explaining limitations due to past experience
Relationship: The concepts are related as they both involve explaining limitations, with one being due to past experience.
Criteria: A user or designer explains limitations or constraints in their environment.
Phrase: Explaining limitations

3.
Concepts: acknowledge limitations, limitation acknowledgement, acknowledging limitations
Relationship: The concepts are related as they all involve acknowledging limitations.
Criteria: A designer acknowledges limitations or potential issues with the software.
Phrase: Acknowledging limitations

4.
Concepts: explaining school policies, explaining school internet restrictions
Relationship: The concepts are related as they both involve explaining school policies or restrictions.
Criteria: A user explains common school policies or internet restrictions.
Phrase: Explaining school policies

5.
Concepts: explain common school policy, explaining school policy
Relationship: The concepts are related as they both involve explaining school policies.
Criteria: A user explains a common school policy or constraint.
Phrase: Explaining school policy

6.
Concepts: explaining restrictions, providing reason for restriction
Relationship: The concepts are related as they both involve explaining or providing reasons for restrictions.
Criteria: Users provide explanations or context for specific restrictions or limitations.
Phrase: Explaining restrictions

7.
Concepts: describing outdated systems, frustration with outdated tech
Relationship: The concepts are related as they both involve outdated systems or technology.
Criteria: A user describes or expresses frustration with outdated technology or systems.
Phrase: Describing outdated systems

8.
Concepts: classroom limitations, elaborates on classroom technology limitations
Relationship: The concepts are related as they both involve limitations of using technology in the classroom.
Criteria: A user shares limitations of using software in the classroom.
Phrase: Elaborating on classroom limitations

9.
Concepts: internet access limitation, reporting limited internet access
Relationship: The concepts are related as they both involve limitations of internet access.
Criteria: A user explains the lack of internet access in their school or classroom.
Phrase: Reporting internet access limitations

10.
Concepts: proposing dual approach, proposing a dual solution
Relationship: The concepts are related as they both involve proposing a dual approach or solution.
Criteria: A designer proposes a dual approach or solution to a problem or feature.
Phrase: Proposing a dual approach

11.
Concepts: alternative solution, proposing compromise
Relationship: The concepts are related as they both involve proposing alternative solutions or compromises.
Criteria: A designer or user offers an alternative solution or workaround.
Phrase: Proposing alternative solutions

12.
Concepts: offering alternative, alternative suggestion, suggesting alternatives, suggests alternative solution, suggesting alternative solutions, offering alternative solutions
Relationship: The concepts are related as they all involve offering or suggesting alternative solutions.
Criteria: A user suggests an alternative solution or approach.
Phrase: Suggesting alternative solutions

13.
Concepts: suggest solution, share potential solutions, proposes solution
Relationship: The concepts are related as they all involve suggesting or proposing solutions.
Criteria: A user suggests a potential solution to a problem.
Phrase: Proposing solutions

14.
Concepts: shares workaround, sharing workaround
Relationship: The concepts are related as they both involve sharing a temporary solution or workaround.
Criteria: A designer shares a temporary solution or workaround for a known issue.
Phrase: Sharing workarounds

15.
Concepts: workaround suggestion, offering workaround solutions, offering workarounds
Relationship: The concepts are related as they all involve suggesting or offering workarounds.
Criteria: A designer suggests a potential workaround or solution.
Phrase: Offering workarounds

16.
Concepts: identifying product gaps, identifying gaps in software
Relationship: The concepts are related as they both involve identifying gaps or limitations.
Criteria: A user identifies a gap or limitation in the current software or market.
Phrase: Identifying gaps

17.
Concepts: addressing usability, identifying usability issues, designer raises usability concern, usability discussion
Relationship: The concepts are related as they all involve addressing or discussing usability issues.
Criteria: A designer addresses usability or user experience concerns.
Phrase: Addressing usability

18.
Concepts: highlighting usability needs, identifying usability challenges
Relationship: The concepts are related as they both involve highlighting or identifying usability needs or challenges.
Criteria: A user highlights the need for improved usability.
Phrase: Highlighting usability needs

19.
Concepts: ui challenges, highlighting challenges
Relationship: The concepts are related as they both involve highlighting challenges or issues.
Criteria: A designer highlights a challenge or issue related to the user interface.
Phrase: Highlighting UI challenges

20.
Concepts: enabling problem-solving, describing problem-solving functionality
Relationship: The concepts are related as they both involve enabling or describing problem-solving functionality.
Criteria: A designer enables or facilitates problem-solving within the software.
Phrase: Enabling problem-solving

21.
Concepts: provide solution, offering solutions, designer suggests solution
Relationship: The concepts are related as they all involve providing or offering solutions.
Criteria: A designer provides a solution or answer to a user's question or problem.
Phrase: Providing solutions

22.
Concepts: resolving concerns, answer a concern, addressing user concerns, mitigating concerns
Relationship: The concepts are related as they all involve resolving or addressing user concerns.
Criteria: A designer resolves a user's concern or issue.
Phrase: Resolving concerns

23.
Concepts: ascertain user issues, inquiring about user experience
Relationship: The concepts are related as they both involve ascertaining or inquiring about user issues or experiences.
Criteria: A designer ascertains user issues or problems with the software.
Phrase: Ascertain user issues

24.
Concepts: probing for user difficulties, inquire about specific problems
Relationship: The concepts are related as they both involve probing or inquiring about user difficulties or problems.
Criteria: A designer inquires about user difficulties or challenges.
Phrase: Probing for user difficulties

25.
Concepts: problem analysis, problem diagnosis
Relationship: The concepts are related as they both involve analyzing or diagnosing problems.
Criteria: A designer analyzes a problem or issue.
Phrase: Analyzing problems

26.
Concepts: apology/acknowledgment, apology or acknowledgement
Relationship: The concepts are related as they both involve apologizing or acknowledging potential inconvenience or disruptions.
Criteria: Acknowledging potential inconvenience or apologizing for disruptions.
Phrase: Apologizing or acknowledging

27.
Concepts: apology for delays, apologizing for timing
Relationship: The concepts are related as they both involve apologizing for delays or timing issues.
Criteria: A designer apologizes for delays or issues.
Phrase: Apologizing for delays

28.
Concepts: apology for disturbance, apologizing for disturbance, apologizing for inconvenience
Relationship: The concepts are related as they all involve apologizing for disturbance, inconvenience, or disruptions.
Criteria: A designer apologizes for a disturbance or inconvenience.
Phrase: Apologizing for disturbance

29.
Concepts: acknowledge potential disturbance, acknowledges potential inconvenience
Relationship: The concepts are related as they both involve acknowledging potential disturbance or inconvenience.
Criteria: A designer acknowledges potential disturbance or inconvenience.
Phrase: Acknowledging potential disturbance

30.
Concepts: feature complexity, comparing feature complexities
Relationship: The concepts are related as they both involve comparing or discussing the complexity of features.
Criteria: A designer compares the complexity of different features or updates.
Phrase: Comparing feature complexities

31.
Concepts: explaining development complexity, explaining development challenges
Relationship: The concepts are related as they both involve explaining the complexity or challenges of development.
Criteria: Explaining the complexity or challenges of a development process.
Phrase: Explaining development complexity

32.
Concepts: communicate update complexity, designer explains complexity of updates
Relationship: The concepts are related as they both involve communicating or explaining the complexity of updates.
Criteria: A designer communicates the complexity of updates and expected release timeline.
Phrase: Communicating update complexity