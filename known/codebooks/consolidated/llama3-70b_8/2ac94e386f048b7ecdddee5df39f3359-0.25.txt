You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (13 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
13. 
Concepts: {Repeat the input 13}
Relationship: {What is logical relationship between concepts in code 13, or N/A if not applicable}
Criteria: {Who did what, and how for code 13}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: previewing updates, update in progress
- A designer previews an upcoming update or release.
- The designer assures the community that an update is in progress or being worked on.

2.
Concepts: confirming future features, promise future development
- Designers confirm or promise a future feature or update.
- A designer promises to develop an app or a feature in the future.

3.
Concepts: elaborating on features, provide feature examples
- Providing additional explanations or details about a feature or functionality.
- A developer provides examples or illustrations of a feature or functionality.

4.
Concepts: providing user guidance, providing feature guidance
- Providing guidance, instructions, or tutorials on how to use a feature or software.
- A message provides guidance or instructions on how to use a specific feature or function.

5.
Concepts: instruction and updates, providing usage instructions
- Designers providing updates and instructions to help users understand and use the software effectively.
- A designer mentions feedback-based prompts or instructions for using the software.

6.
Concepts: explaining design goals, explaining development plans
- The designer explains the design goals or philosophy.
- Designers explain plans, goals, or objectives.

7.
Concepts: expressing concern, expressing frustration
- Users express concern or uncertainty about a feature or functionality.
- Users express frustration or dissatisfaction with current limitations.

8.
Concepts: asking questions, inquiring about usage
- Users ask questions about the software or its features.
- Users ask about how to use a specific feature or functionality.

9.
Concepts: agreeing on design, seeking consensus and validating user requests
- Designers and users agree on design and confirm collaboration.
- Designers seek agreement from users and confirm their requests to implement user suggestions.

10.
Concepts: collaborative planning, planning feature development
- Designers and users collaboratively discussing and planning the development of the software.
- Designers discuss or plan the development of a feature or functionality.

11.
Concepts: sharing images, sharing resources
- Users or designers share images or files within the online community.
- Designers or users share resources and provide access to information within the online community.

12.
Concepts: soliciting community input, solicit suggestions and requirements
- Designers seek input or opinions from the community or users.
- A person solicits or asks for suggestions or requirements from the community.

13.
Concepts: encouraging discussion, encourage in-group discussion
- Designers encourage users to discuss topics, ask questions, or provide feedback.
- Encouraging discussion or feedback within a group or community.
===
Here are the definitions for each code:

---
1.
Concepts: previewing updates, update in progress
Relationship: The designer's actions are connected, as previewing updates implies that an update is in progress.
Criteria: Designers preview and assure the community about upcoming updates.
Phrase: Previewing and assuring updates.

2.
Concepts: confirming future features, promise future development
Relationship: The concepts are closely related, as confirming future features implies a promise of development.
Criteria: Designers confirm and promise future features or updates.
Phrase: Confirming and promising features.

3.
Concepts: elaborating on features, provide feature examples
Relationship: The concepts are complementary, as elaborating on features involves providing examples.
Criteria: Designers elaborate on features by providing examples or illustrations.
Phrase: Elaborating on features.

4.
Concepts: providing user guidance, providing feature guidance
Relationship: The concepts are synonymous, as providing user guidance involves providing feature guidance.
Criteria: Designers provide guidance on using features or software.
Phrase: Providing guidance.

5.
Concepts: instruction and updates, providing usage instructions
Relationship: The concepts are closely related, as instructions are often provided through updates.
Criteria: Designers provide updates and instructions for using software effectively.
Phrase: Providing instructions and updates.

6.
Concepts: explaining design goals, explaining development plans
Relationship: The concepts are complementary, as design goals inform development plans.
Criteria: Designers explain design goals and development plans.
Phrase: Explaining design goals and plans.

7.
Concepts: expressing concern, expressing frustration
Relationship: The concepts are related, as concern can lead to frustration.
Criteria: Users express concern or frustration about features or limitations.
Phrase: Expressing concern and frustration.

8.
Concepts: asking questions, inquiring about usage
Relationship: The concepts are synonymous, as asking questions involves inquiring about usage.
Criteria: Users ask questions about software or features.
Phrase: Asking questions.

9.
Concepts: agreeing on design, seeking consensus and validating user requests
Relationship: The concepts are complementary, as agreement involves seeking consensus and validation.
Criteria: Designers agree with users and validate their requests.
Phrase: Agreeing on design and validating requests.

10.
Concepts: collaborative planning, planning feature development
Relationship: The concepts are closely related, as collaborative planning involves planning feature development.
Criteria: Designers and users collaboratively plan feature development.
Phrase: Collaboratively planning development.

11.
Concepts: sharing images, sharing resources
Relationship: The concepts are related, as sharing images can be a form of sharing resources.
Criteria: Users or designers share images, files, or resources within the community.
Phrase: Sharing resources.

12.
Concepts: soliciting community input, solicit suggestions and requirements
Relationship: The concepts are synonymous, as soliciting community input involves soliciting suggestions and requirements.
Criteria: Designers solicit input, opinions, or suggestions from the community.
Phrase: Soliciting community input.

13.
Concepts: encouraging discussion, encourage in-group discussion
Relationship: The concepts are synonymous, as encouraging discussion involves encouraging in-group discussion.
Criteria: Designers encourage users to discuss topics, ask questions, or provide feedback.
Phrase: Encouraging discussion.