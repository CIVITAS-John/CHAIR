You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (21 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
21. 
Concepts: {Repeat the input 21}
Relationship: {What is logical relationship between concepts in code 21, or N/A if not applicable}
Criteria: {Who did what, and how for code 21}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: promise improvements and updates, highlight updates and improvements
- A designer promises ongoing improvements and future updates.
- A designer highlights the frequency and details of updates and improvements.

2.
Concepts: outlining software updates, providing update timelines
- A designer outlines the process and timing of software updates and provides information about software updates and download links.
- A designer confirms a feature or update and its timeline and provides specific dates and timelines for future updates or releases.

3.
Concepts: transparent developer discussion, ensuring development transparency
- Discussing development details transparently with the community.
- Designers provide detailed information about development processes and progress.

4.
Concepts: announcing feature updates, announcing new features and versions
- Designers announce new features, updates, or bug fixes to the community based on user input.
- Designers announce and communicate new features and the release of new software versions to the community.

5.
Concepts: communicating updates to users, communicating development progress
- A designer communicates updates and timelines to users and engages them with information about an update.
- The designer communicates the development process and priorities and informs users about development plans and provides updates on software development progress.

6.
Concepts: project management, prioritize development tasks
- Discussing project management or development priorities.
- Participants discuss and outline the prioritization of development tasks and features.

7.
Concepts: explaining design philosophy, explaining design rationale
- Discussing the principles and philosophy guiding the software's design and development.
- A designer explains the rationale behind a decision or approach and the intention behind the app's design focus.

8.
Concepts: visual and functional design, considering usability and technical aspects
- Discussions about the visual and functional aspects of the software.
- Users and designers consider the usability and design of the software and designers consider technical aspects and requirements.

9.
Concepts: suggesting alternatives, suggest solutions and alternatives
- Users suggest alternative solutions or systems.
- Designers suggest solutions and mention the possibility of using alternatives.

10.
Concepts: teaching, guide feature usage
- A designer provides instructions or guidance on how to use a feature.
- A designer provides guidance and explanations on how to use new features correctly.

11.
Concepts: address usability concerns, mitigating user concerns
- A designer acknowledges potential issues and addresses usability concerns.
- A designer reassures a user about a concern or upcoming feature and provides a response to mitigate a user's concern.

12.
Concepts: enthusiasm, express approval
- Users or designers express enthusiasm or positive sentiment.
- Users engage in positive interactions and express approval of features.

13.
Concepts: praise software, commenting on usability and giving positive feedback
- Users praise the software for its effectiveness and practicality.
- Users comment on the ease of use and express appreciation for the software's features.

14.
Concepts: suggest collaboration and request features, engaging in collaborative feature development
- Users suggest collaboration and request the addition of new features.
- Users suggest improvements and propose new features, while others respond to these suggestions and proposals.

15.
Concepts: seek user input, responding to user questions
- Designers ask users about their needs and specific design-related questions.
- Designers respond to users' initial questions and ask follow-up questions to clarify usage scenarios.

16.
Concepts: fostering open dialogue, inviting feedback and feature requests
- Designers encourage open communication and feedback from users and engage in direct interactions to discuss features, updates, and feedback.
- Designers request suggestions and invite users to provide feedback or suggest new features.

17.
Concepts: expressing agreement, confirm understanding
- Users express agreement or concurrence with statements or ideas.
- Users confirm understanding and agree with previous statements or responses.

18.
Concepts: confirming teacher identity, identifying as a teacher
- A designer confirms the identity or role of a user.
- A user responds to a question or prompt, indicating their role as a teacher.

19.
Concepts: request information, request user resources
- Users request information or help regarding the use or features of Physics Lab.
- Users request and inquire about the need for user manuals or information.

20.
Concepts: inquire about pc version, inquire about software access and usage
- Users inquire about how to use the PC version of the software.
- Users inquire about accessing, downloading, and using the software.

21.
Concepts: access information, provide access instructions
- A designer provides access information to users.
- Designers provide instructions and solutions for downloading and accessing the software.
===
---
Definitions for each code (21 in total):
1.
Concepts: promise improvements and updates, highlight updates and improvements
Relationship: Both concepts involve a designer communicating about updates and improvements.
Criteria: A designer promises ongoing improvements and future updates while highlighting the frequency and details of these updates.
Phrase: Promising and highlighting updates

2.
Concepts: outlining software updates, providing update timelines
Relationship: Both concepts involve a designer detailing the process and timing of software updates.
Criteria: A designer outlines the process and timing of software updates, confirming features and providing specific dates and timelines for future updates.
Phrase: Outlining and timing updates

3.
Concepts: transparent developer discussion, ensuring development transparency
Relationship: Both concepts involve providing detailed information about the development process.
Criteria: Designers discuss development details transparently with the community, ensuring development transparency.
Phrase: Ensuring development transparency

4.
Concepts: announcing feature updates, announcing new features and versions
Relationship: Both concepts involve designers communicating new features and updates to the community.
Criteria: Designers announce new features, updates, or bug fixes and communicate the release of new software versions to the community.
Phrase: Announcing new features and updates

5.
Concepts: communicating updates to users, communicating development progress
Relationship: Both concepts involve a designer informing users about updates and development progress.
Criteria: A designer communicates updates, timelines, and development progress to users, engaging them with information about the development process and priorities.
Phrase: Communicating updates and progress

6.
Concepts: project management, prioritize development tasks
Relationship: Both concepts involve discussing the management and prioritization of development tasks.
Criteria: Participants discuss project management and outline the prioritization of development tasks and features.
Phrase: Prioritizing development tasks

7.
Concepts: explaining design philosophy, explaining design rationale
Relationship: Both concepts involve discussing the principles and reasoning behind the software's design.
Criteria: A designer explains the principles, philosophy, and rationale guiding the software's design and development.
Phrase: Explaining design principles

8.
Concepts: visual and functional design, considering usability and technical aspects
Relationship: Both concepts involve discussions about the design and usability of the software.
Criteria: Users and designers discuss the visual and functional aspects of the software, considering usability and technical requirements.
Phrase: Discussing design and usability

9.
Concepts: suggesting alternatives, suggest solutions and alternatives
Relationship: Both concepts involve proposing alternative solutions or systems.
Criteria: Users and designers suggest alternative solutions or systems and mention the possibility of using alternatives.
Phrase: Proposing alternatives

10.
Concepts: teaching, guide feature usage
Relationship: Both concepts involve providing instructions or guidance on using features.
Criteria: A designer provides instructions and guidance on how to use features correctly.
Phrase: Guiding feature usage

11.
Concepts: address usability concerns, mitigating user concerns
Relationship: Both concepts involve addressing and mitigating user concerns.
Criteria: A designer acknowledges potential issues, addresses usability concerns, and reassures users about upcoming features.
Phrase: Addressing and mitigating concerns

12.
Concepts: enthusiasm, express approval
Relationship: Both concepts involve expressing positive sentiment.
Criteria: Users or designers express enthusiasm and approval of features.
Phrase: Expressing enthusiasm and approval

13.
Concepts: praise software, commenting on usability and giving positive feedback
Relationship: Both concepts involve users providing positive feedback about the software.
Criteria: Users praise the software for its effectiveness and ease of use, providing positive feedback.
Phrase: Praising software

14.
Concepts: suggest collaboration and request features, engaging in collaborative feature development
Relationship: Both concepts involve users suggesting and collaborating on new features.
Criteria: Users suggest improvements, propose new features, and engage in collaborative feature development.
Phrase: Collaborating on feature development

15.
Concepts: seek user input, responding to user questions
Relationship: Both concepts involve designers interacting with users to gather input and respond to questions.
Criteria: Designers ask users about their needs, respond to questions, and seek clarification on usage scenarios.
Phrase: Seeking and responding to user input

16.
Concepts: fostering open dialogue, inviting feedback and feature requests
Relationship: Both concepts involve encouraging open communication and feedback from users.
Criteria: Designers encourage open dialogue, request suggestions, and invite users to provide feedback or suggest new features.
Phrase: Inviting feedback and dialogue

17.
Concepts: expressing agreement, confirm understanding
Relationship: Both concepts involve users expressing agreement and confirming understanding.
Criteria: Users express agreement with statements or ideas and confirm their understanding.
Phrase: Confirming agreement and understanding

18.
Concepts: confirming teacher identity, identifying as a teacher
Relationship: Both concepts involve identifying the role of a user as a teacher.
Criteria: A user confirms their identity or role as a teacher in response to a question or prompt.
Phrase: Identifying as a teacher

19.
Concepts: request information, request user resources
Relationship: Both concepts involve users requesting information or resources.
Criteria: Users request information or help regarding the use or features of Physics Lab and inquire about user manuals or resources.
Phrase: Requesting information and resources

20.
Concepts: inquire about pc version, inquire about software access and usage
Relationship: Both concepts involve users inquiring about accessing and using the software.
Criteria: Users inquire about how to access, download, and use the PC version of the software.
Phrase: Inquiring about software access

21.
Concepts: access information, provide access instructions
Relationship: Both concepts involve providing information and instructions for accessing the software.
Criteria: Designers provide access information and instructions for downloading and using the software.
Phrase: Providing access instructions
---