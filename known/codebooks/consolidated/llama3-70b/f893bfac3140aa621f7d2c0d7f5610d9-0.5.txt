You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between sub-codes. If a sub-code includes another, use the broader one. If sub-codes are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (7 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {A sentence of consolidated criteria 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
7.
Relationship: {The logical relationship between sub-codes in code 7}
Criteria: {A sentence of consolidated criteria 7}
Label: {A consolidated label of code 7}
Category: {2-4 words for code 7}
---
~~~
1. community satisfaction, gratitude expression.
- Expressions of satisfaction or pleasure from community members.
- Expressing gratitude, appreciation, or positive acknowledgment within the community.

2. circuit diagrams, electrical section.
- Discussion of circuit diagrams or electrical circuits.
- Discussion of the electrical section or component.

3. teaching experiences, teaching insights.
- Sharing personal teaching experiences or discussing collaborative learning approaches.
- Involves discussions related to the teaching profession or experiences, providing the viewpoint of teachers or educators.

4. simulation enhancement, educational tool enhancement.
- Enhancing simulation and educational tools to improve learning outcomes.
- Tools used for educational purposes and their enhancements.

5. image sharing, visual communication.
- Sharing or discussing images, including visuals, screenshots, or updates.
- Visual updates or statements shared in the community

6. feature stability, long-term stability.
- Features designed to ensure stability or reduce the need for frequent updates.
- Highlighting features that contribute to the long-term stability of the system.

7. software testing, user testing.
- Testing software functionality or features.
- Testing phases for new features or versions, often involving user participation.
===
Here is the output format with the requested information:

---
Categories: 
* Community Building
* Domain Knowledge
* Pedagogy
* Tool Development
* Communication
* System Design
* Quality Assurance

Definitions for each code:

1.
Relationship: Parallel sub-codes
Criteria: Expressions of satisfaction, gratitude, or positive acknowledgment within the community.
Label: Community Appreciation
Category: Community Building

2.
Relationship: Inclusive sub-code (electrical section is a part of circuit diagrams)
Criteria: Discussions related to circuit diagrams, electrical circuits, or components.
Label: Electrical Discussions
Category: Domain Knowledge

3.
Relationship: Parallel sub-codes
Criteria: Sharing teaching experiences, discussing collaborative learning approaches, or providing teaching insights.
Label: Teaching Reflections
Category: Pedagogy

4.
Relationship: Parallel sub-codes
Criteria: Enhancing simulation and educational tools to improve learning outcomes.
Label: Educational Tool Development
Category: Tool Development

5.
Relationship: Parallel sub-codes
Criteria: Sharing or discussing images, visuals, screenshots, or updates.
Label: Visual Sharing
Category: Communication

6.
Relationship: Inclusive sub-code (long-term stability is a result of feature stability)
Criteria: Designing features for stability and reducing the need for frequent updates.
Label: System Stability
Category: System Design

7.
Relationship: Parallel sub-codes
Criteria: Testing software functionality, features, or versions, often involving user participation.
Label: User-Centered Testing
Category: Quality Assurance