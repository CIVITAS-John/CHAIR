You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (5 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
5. 
Concepts: {Repeat the input 5}
Relationship: {What is logical relationship between concepts in code 5, or N/A if not applicable}
Criteria: {Who did what, and how for code 5}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: arguing for ai efficiency, highlight ai's time-saving benefits
- Participants argue that AI can save people's time and increase efficiency.
- Participants describe AI as time-saving and highlight its benefits.

2.
Concepts: sample use case, describes typical use cases
- Provides a sample use case for AI-assisted coding.
- Participants describe a common use case or scenario where they would use the AI-driven interface.

3.
Concepts: reflect on novice users' struggles, addressing novice challenges
- Participants reflect on novice users' struggles and challenges.
- Participants highlight challenges faced by novices in seeking help and address novice challenges.

4.
Concepts: evaluate ai-generated code, analyzes code with ai for error detection and debugging
- Participants evaluate AI-generated code in detail and use it for code analysis.
- Participants analyze code with AI, identify and debug errors, and evaluate AI-generated code.

5.
Concepts: seeks ai-generated code, uses ai-generated code for reference
- Participants seek AI-generated code and query AI for code structures.
- Participants use AI-generated code and compare it with their own code.
===
Here are the definitions for each code:

---
1.
Concepts: arguing for ai efficiency, highlight ai's time-saving benefits
Relationship: The concepts are logically related as they both emphasize the benefits of AI in terms of time-saving and efficiency.
Criteria: Participants argue that AI can save people's time and increase efficiency by highlighting its benefits.
Phrase: Advocating for AI-driven efficiency.

2.
Concepts: sample use case, describes typical use cases
Relationship: The concepts are logically related as they both provide examples of how AI-driven interfaces can be used in real-world scenarios.
Criteria: Participants provide a sample use case or describe a typical scenario where they would use the AI-driven interface.
Phrase: Illustrating AI-driven use cases.

3.
Concepts: reflect on novice users' struggles, addressing novice challenges
Relationship: The concepts are logically related as they both focus on the challenges faced by novice users and how to address them.
Criteria: Participants reflect on novice users' struggles and challenges, and address them by providing solutions.
Phrase: Addressing novice user challenges.

4.
Concepts: evaluate ai-generated code, analyzes code with ai for error detection and debugging
Relationship: The concepts are logically related as they both involve evaluating and analyzing code generated by AI for errors and debugging.
Criteria: Participants evaluate AI-generated code in detail, analyze it with AI for error detection, and debug it.
Phrase: Evaluating AI-generated code for errors.

5.
Concepts: seeks ai-generated code, uses ai-generated code for reference
Relationship: The concepts are logically related as they both involve seeking and using AI-generated code as a reference or guide.
Criteria: Participants seek AI-generated code and use it as a reference, comparing it with their own code.
Phrase: Seeking AI-generated code for reference.