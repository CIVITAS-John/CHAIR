You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (29 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
29. 
Concepts: {Repeat the input 29}
Relationship: {What is logical relationship between concepts in code 29, or N/A if not applicable}
Criteria: {Who did what, and how for code 29}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: understanding user needs, acknowledging user needs and context
- Designers show empathy and interest in user experience by understanding and identifying user needs and pain points.
- Designers acknowledge and respond to user needs and context.

2.
Concepts: clarifying system compatibility, considering and providing technical details
- Designers clarify and confirm technical requirements and system compatibility.
- A designer considers technical requirements and provides technical specifications.

3.
Concepts: engaging in design dialogue, asking and discussing design questions
- Users and designers engage in dialogue and share information and experiences about design elements.
- A designer asks questions and discusses design approaches and user prompts.

4.
Concepts: raising concerns and issues, addressing usability and accessibility concerns
- A designer raises concerns or issues related to design, functionality, or new features, and warns about potential problems.
- Designers discuss usability issues and user challenges, identifying and highlighting concerns.

5.
Concepts: recognizing limitations, explaining and justifying limitations
- Designers acknowledge and recognize limitations in their statements, algorithms, or software.
- A user or designer explains and justifies the limitations of the system, software, or free experiments.

6.
Concepts: suggesting alternatives, share potential solutions
- Designers make suggestions and provide alternative solutions or designs.
- A designer shares potential design solutions to improve user experience.

7.
Concepts: justifying design decisions, explaining design decisions
- Designers explain and justify their design and development decisions.
- A designer explains design decisions and their long-term impact on the software.

8.
Concepts: providing user guidance, preventing misunderstandings
- Designers guide user understanding by providing instructions and explanations.
- A designer provides information to prevent misunderstandings.

9.
Concepts: sharing visual updates, sharing visual examples
- Designers encourage sharing and provide visual updates to the community.
- Designers emphasize visual representations and share visual examples.

10.
Concepts: offering ongoing technical support, seeking and offering technical assistance
- A designer offers ongoing and technical support or resources to users.
- Designers seek technical assistance and offer help with platform features.

11.
Concepts: providing update timelines, establishing development timelines
- Designers provide and manage timelines for update releases.
- Designers set, provide, and establish timelines for complex development tasks.

12.
Concepts: promoting new features, introducing new features
- A designer promotes, outlines, previews, and highlights the contents of future updates.
- Designers introduce and explain new features, components, and elements of the software.

13.
Concepts: consulting community, committing to community consultation
- A designer consults the community about design preferences.
- A designer commits to consulting the community and announces engagement plans before starting developments.

14.
Concepts: promoting group sharing, encouraging interaction and engagement
- Users promote group sharing to foster connections and indicate a community platform.
- Users encourage interaction and engagement by prompting feedback and sharing within the group.

15.
Concepts: facilitating community interaction, engaging in community participation
- Users facilitate communication and promote community interaction and involvement.
- Users participate in and engage in discussions and activities within the community.

16.
Concepts: expressive communication, express emotions with emojis
- A user or designer expressing themselves using emojis or casual language.
- A user uses emojis to convey feelings or enthusiasm non-verbally.

17.
Concepts: express positive feedback, sharing positive feedback
- Users react positively and express satisfaction with updates or features.
- Users share positive feedback and appreciation for software features and development progress.

18.
Concepts: acknowledging help, appreciate support from users
- Users acknowledge help and show appreciation for assistance or efforts.
- Appreciating support from users.

19.
Concepts: sharing personal anecdotes, sharing humorous anecdotes
- Users share anecdotal experiences related to software use or policies.
- A user shares humorous anecdotes to build rapport within the community.

20.
Concepts: providing school context, providing context for design constraints
- Users provide context about their school's policies, initiatives, or technology experiences and focus on information-based education.
- Participants provide context or background information for inquiries or statements.
- Users provide context about school resources and design constraints due to school policies.

21.
Concepts: highlighting educational value, detailing educational benefits
- Someone describes the educational relevance and effectiveness of the application.
- Designers explain how features facilitate learning and detail their educational benefits.

22.
Concepts: consulting teachers, commitment to accuracy
- Designers seek input and suggestions from teachers about educational standards and needs.
- Designers consult with teachers to ensure accuracy in educational content.

23.
Concepts: inquiring about user background, gathering user environment information
- Designers inquire about users' professional identity, background, and teaching level.
- A designer gathers context about the user's teaching environment by seeking information about their class environment.

24.
Concepts: requesting further suggestions, requesting additional features
- Requesting more suggestions from users for improvements or features.
- Users suggest and request new features to expand software capabilities.

25.
Concepts: promoting usability, enhancing user experience
- Promoting usability and ease of use while addressing usability concerns.
- Discussing features that enhance user experience.

26.
Concepts: requesting user documentation, emphasizing institutional needs
- Users justify and request a user manual or documentation for additional guidance.
- Users explain institutional needs and emphasize the need for resources like user manuals.

27.
Concepts: expressing interest in software, requesting download instructions
- Users express interest in downloading or using the software.
- A user shows interest by asking about the download process and requests instructions and inquires about the download location for the software.

28.
Concepts: managing user expectations
- A designer manages user expectations by explaining the focus and limitations of the software.
- Designers provide transparent communication and manage user expectations about feature complexity and timelines.

29.
Concepts: updating the community
- A designer announces and provides updates on the software's status and availability.
- Designers make announcements to inform the community about new software releases.
===
---
Definitions for each code (29 in total):
1.
Concepts: understanding user needs, acknowledging user needs and context
Relationship: Sequential, where understanding leads to acknowledgment and response.
Criteria: Designers show empathy and interest in user experience by understanding and identifying user needs and pain points, and then acknowledging and responding to user needs and context.
Phrase: Understanding and acknowledging user needs

2.
Concepts: clarifying system compatibility, considering and providing technical details
Relationship: Complementary, where clarification is supported by technical details.
Criteria: Designers clarify and confirm technical requirements and system compatibility, while also considering and providing technical specifications.
Phrase: Clarifying and providing technical details

3.
Concepts: engaging in design dialogue, asking and discussing design questions
Relationship: Interactive, where dialogue involves asking and discussing.
Criteria: Users and designers engage in dialogue and share information and experiences about design elements, with designers asking questions and discussing design approaches and user prompts.
Phrase: Engaging in design dialogue

4.
Concepts: raising concerns and issues, addressing usability and accessibility concerns
Relationship: Problem-solving, where raising concerns leads to addressing them.
Criteria: Designers raise concerns or issues related to design, functionality, or new features, and discuss usability issues and user challenges to identify and highlight concerns.
Phrase: Raising and addressing concerns

5.
Concepts: recognizing limitations, explaining and justifying limitations
Relationship: Explanatory, where recognition leads to explanation and justification.
Criteria: Designers acknowledge and recognize limitations in their statements, algorithms, or software, and explain and justify these limitations.
Phrase: Recognizing and justifying limitations

6.
Concepts: suggesting alternatives, share potential solutions
Relationship: Solution-oriented, where suggestions lead to shared solutions.
Criteria: Designers make suggestions and provide alternative solutions or designs to improve user experience.
Phrase: Suggesting and sharing alternatives

7.
Concepts: justifying design decisions, explaining design decisions
Relationship: Explanatory, where justification involves explanation.
Criteria: Designers explain and justify their design and development decisions, including their long-term impact on the software.
Phrase: Justifying and explaining design decisions

8.
Concepts: providing user guidance, preventing misunderstandings
Relationship: Preventive, where guidance aims to prevent misunderstandings.
Criteria: Designers guide user understanding by providing instructions and explanations to prevent misunderstandings.
Phrase: Providing guidance to prevent misunderstandings

9.
Concepts: sharing visual updates, sharing visual examples
Relationship: Illustrative, where updates and examples are shared visually.
Criteria: Designers encourage sharing and provide visual updates to the community, emphasizing visual representations and sharing visual examples.
Phrase: Sharing visual updates and examples

10.
Concepts: offering ongoing technical support, seeking and offering technical assistance
Relationship: Supportive, where ongoing support includes seeking and offering assistance.
Criteria: Designers offer ongoing technical support or resources to users, and seek technical assistance when needed.
Phrase: Offering and seeking technical support

11.
Concepts: providing update timelines, establishing development timelines
Relationship: Temporal, where providing timelines involves establishing them.
Criteria: Designers provide and manage timelines for update releases and establish timelines for complex development tasks.
Phrase: Providing and establishing timelines

12.
Concepts: promoting new features, introducing new features
Relationship: Promotional, where promotion involves introduction.
Criteria: Designers promote, outline, preview, and highlight the contents of future updates, and introduce and explain new features, components, and elements of the software.
Phrase: Promoting and introducing new features

13.
Concepts: consulting community, committing to community consultation
Relationship: Participatory, where consultation involves commitment.
Criteria: Designers consult the community about design preferences and commit to consulting the community, announcing engagement plans before starting developments.
Phrase: Consulting and committing to community consultation

14.
Concepts: promoting group sharing, encouraging interaction and engagement
Relationship: Interactive, where sharing promotes interaction and engagement.
Criteria: Users promote group sharing to foster connections and encourage interaction and engagement by prompting feedback and sharing within the group.
Phrase: Promoting sharing and engagement

15.
Concepts: facilitating community interaction, engaging in community participation
Relationship: Participatory, where facilitation leads to engagement.
Criteria: Users facilitate communication and promote community interaction and involvement, participating in discussions and activities within the community.
Phrase: Facilitating and engaging in community interaction

16.
Concepts: expressive communication, express emotions with emojis
Relationship: Expressive, where communication involves emotional expression.
Criteria: Users or designers express themselves using emojis or casual language to convey feelings or enthusiasm non-verbally.
Phrase: Expressing emotions with emojis

17.
Concepts: express positive feedback, sharing positive feedback
Relationship: Affirmative, where expression involves sharing.
Criteria: Users react positively and express satisfaction with updates or features, sharing positive feedback and appreciation for software features and development progress.
Phrase: Expressing and sharing positive feedback

18.
Concepts: acknowledging help, appreciate support from users
Relationship: Appreciative, where acknowledgment involves appreciation.
Criteria: Users acknowledge help and show appreciation for assistance or efforts from other users.
Phrase: Acknowledging and appreciating support

19.
Concepts: sharing personal anecdotes, sharing humorous anecdotes
Relationship: Narrative, where sharing involves personal and humorous anecdotes.
Criteria: Users share anecdotal experiences related to software use or policies, including humorous anecdotes to build rapport within the community.
Phrase: Sharing personal and humorous anecdotes

20.
Concepts: providing school context, providing context for design constraints
Relationship: Contextual, where providing context involves detailing constraints.
Criteria: Users provide context about their school's policies, initiatives, or technology experiences, and detail design constraints due to school policies.
Phrase: Providing school and design context

21.
Concepts: highlighting educational value, detailing educational benefits
Relationship: Explanatory, where highlighting involves detailing benefits.
Criteria: Designers describe the educational relevance and effectiveness of the application, explaining how features facilitate learning and detailing their educational benefits.
Phrase: Highlighting and detailing educational value

22.
Concepts: consulting teachers, commitment to accuracy
Relationship: Consultative, where consulting ensures accuracy.
Criteria: Designers seek input and suggestions from teachers about educational standards and needs, committing to accuracy in educational content.
Phrase: Consulting teachers for accuracy

23.
Concepts: inquiring about user background, gathering user environment information
Relationship: Investigative, where inquiry involves gathering information.
Criteria: Designers inquire about users' professional identity, background, and teaching level, gathering context about the user's teaching environment.
Phrase: Inquiring and gathering user background

24.
Concepts: requesting further suggestions, requesting additional features
Relationship: Solicitative, where requesting involves seeking suggestions and features.
Criteria: Designers request more suggestions from users for improvements or features, and users suggest and request new features to expand software capabilities.
Phrase: Requesting suggestions and features

25.
Concepts: promoting usability, enhancing user experience
Relationship: Enhancing, where promoting usability involves enhancing experience.
Criteria: Designers promote usability and ease of use while addressing usability concerns, discussing features that enhance user experience.
Phrase: Promoting usability and enhancing experience

26.
Concepts: requesting user documentation, emphasizing institutional needs
Relationship: Justificatory, where requesting documentation involves emphasizing needs.
Criteria: Users justify and request a user manual or documentation for additional guidance, explaining institutional needs and emphasizing the need for resources like user manuals.
Phrase: Requesting documentation and emphasizing needs

27.
Concepts: expressing interest in software, requesting download instructions
Relationship: Inquisitive, where expressing interest involves requesting instructions.
Criteria: Users express interest in downloading or using the software, asking about the download process and requesting instructions.
Phrase: Expressing interest and requesting instructions

28.
Concepts: managing user expectations
Relationship: N/A
Criteria: Designers manage user expectations by explaining the focus and limitations of the software, providing transparent communication about feature complexity and timelines.
Phrase: Managing user expectations

29.
Concepts: updating the community
Relationship: N/A
Criteria: Designers announce and provide updates on the software's status and availability, informing the community about new software releases.
Phrase: Updating the community
---