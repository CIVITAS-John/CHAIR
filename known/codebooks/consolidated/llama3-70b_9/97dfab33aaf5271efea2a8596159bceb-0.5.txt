You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (29 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
29. 
Concepts: {Repeat the input 29}
Relationship: {What is logical relationship between concepts in code 29, or N/A if not applicable}
Criteria: {Who did what, and how for code 29}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: providing review updates, sharing update status
- Designers provide updates on review process.
- Designer shares updates on the status of the app store review process.

2.
Concepts: provide development updates, share development information
- Designers provide updates and highlight development progress.
- Designers share development plans and updates with users.

3.
Concepts: provide update plans, sharing release plans
- Designers provide update plans and plan future feature updates.
- Designer shares release plans or schedules for updates or new features.

4.
Concepts: introduce new features, explain new features
- Designer introduces new features or design elements.
- Designers explain and highlight new features or components to users.

5.
Concepts: announce updates and features, update and announce software features
- Designers announce feature updates and new features.
- Designers update software features and announce updates.

6.
Concepts: promise improvements, promise future updates and development
- Designers promise to improve and make future improvements.
- Designers promise future updates and development.

7.
Concepts: explain limitations, informing technical limitations
- Designers explain system, software, or design limitations to users.
- The designer informs users about technical limitations or compatibility issues.

8.
Concepts: offering solutions, proposing solutions
- Designers and users offer solutions to problems or issues.
- Designers propose solutions and design ideas to users.

9.
Concepts: identify and discuss usability issues, highlight and reveal usability challenges
- Designers identify and discuss usability issues.
- Designers highlight and reveal usability challenges.

10.
Concepts: inquire about user issues, inquiring about user needs
- Designers inquire about user problems and issues.
- Designers ask questions about user requests and needs.

11.
Concepts: clarify system requirements, clarifying system capabilities
- Designer explains system or technical requirements to users.
- Designer clarifies the capabilities of the software or system.

12.
Concepts: providing reasons, justify design decisions
- Designers provide and confirm reasons or explanations to users.
- Designers justify and explain design decisions to users.

13.
Concepts: foster user engagement, maintaining engagement
- Designer fosters or encourages user engagement and interaction.
- Designer responds or engages with users to maintain interest or interaction.

14.
Concepts: initiate dialogue, design dialogue
- Designer initiates dialogue or discussion with users.
- Engaging in a conversation or dialogue about design, development, or features.

15.
Concepts: responding to user feedback, accepting and responding to user requests
- Designers respond to user feedback and provide feedback.
- Designers accept and respond to user requests and feedback.

16.
Concepts: facilitate access, facilitating access
- Designer provides software or community access facilitation.
- The designer facilitates access to resources, such as downloads or group files.

17.
Concepts: image sharing, share visual content
- A designer or user shares an image.
- Designers share visual content or references with users.

18.
Concepts: indicating understanding, confirming understanding
- Users indicate understanding.
- A user confirms understanding or comprehension of a concept or idea.

19.
Concepts: provide community support, acknowledging community support
- Designer provides community support and encourages engagement.
- Designer acknowledges and expresses gratitude for community support.

20.
Concepts: apologize for disturbances, apologize for potential interruption
- Designers apologize for potential disturbances.
- Designer or user apologizes for potential interruption or inconvenience.

21.
Concepts: expressing gratitude for support, expressing gratitude and commitment to improvement
- Users and designers express gratitude for support and feedback.
- Designer expresses gratitude for user support and commits to improvement.

22.
Concepts: share positive experience, expressing software satisfaction
- User shares a positive experience with the software.
- Users express satisfaction with the software and its progress.

23.
Concepts: appreciating features, praising software design
- Users appreciate and praise features or ideas.
- Users praise software design and features.

24.
Concepts: making a request, proposing features
- Users make requests for new features.
- Users propose and suggest new features.

25.
Concepts: sharing teaching experience, demonstrating extensive teaching experience
- Users share teaching experience or background.
- User shares extensive teaching experience or background.

26.
Concepts: expressive, expressing emotions
- Use of emotive language, emojis, or tone to convey emotions or personality.
- Expressing emotion or sentiment through text or emojis.

27.
Concepts: using emojis, reacting with emojis
- Users use emojis to engage with others or add tone to their message.
- A user reacts with multiple emojis to convey emotion or tone.

28.
Concepts: requesting help, asking for resources or support
- Users request help or guidance.
- User asks for resources or support.

29.
Concepts: providing context, providing context for need
- Users provide context.
- A user provides context or justification for a specific need or request.
===
Here are the definitions for each code:

---
1.
Concepts: providing review updates, sharing update status
Relationship: Providing review updates implies sharing the current status of the review process.
Criteria: Designers share updates on the review process with users.
Phrase: Share review updates.

2.
Concepts: provide development updates, share development information
Relationship: Providing development updates involves sharing information about the development process.
Criteria: Designers share development progress and plans with users.
Phrase: Share development updates.

3.
Concepts: provide update plans, sharing release plans
Relationship: Providing update plans involves sharing release schedules for updates or new features.
Criteria: Designers share plans and schedules for updates or new features with users.
Phrase: Share update plans.

4.
Concepts: introduce new features, explain new features
Relationship: Introducing new features implies explaining their functionality.
Criteria: Designers introduce and explain new features to users.
Phrase: Introduce new features.

5.
Concepts: announce updates and features, update and announce software features
Relationship: Announcing updates and features involves updating software features and making announcements.
Criteria: Designers announce and update software features.
Phrase: Announce updates.

6.
Concepts: promise improvements, promise future updates and development
Relationship: Promising improvements implies committing to future updates and development.
Criteria: Designers promise to improve and make future updates.
Phrase: Promise improvements.

7.
Concepts: explain limitations, informing technical limitations
Relationship: Explaining limitations involves informing users about technical limitations.
Criteria: Designers explain technical limitations to users.
Phrase: Explain limitations.

8.
Concepts: offering solutions, proposing solutions
Relationship: Offering solutions involves proposing design ideas or solutions to problems.
Criteria: Designers and users offer solutions to problems.
Phrase: Offer solutions.

9.
Concepts: identify and discuss usability issues, highlight and reveal usability challenges
Relationship: Identifying usability issues involves discussing and highlighting challenges.
Criteria: Designers identify and discuss usability challenges with users.
Phrase: Identify usability issues.

10.
Concepts: inquire about user issues, inquiring about user needs
Relationship: Inquiring about user issues involves asking about user needs and requests.
Criteria: Designers ask about user needs and requests.
Phrase: Inquire about user needs.

11.
Concepts: clarify system requirements, clarifying system capabilities
Relationship: Clarifying system requirements involves explaining system capabilities.
Criteria: Designers explain system requirements and capabilities to users.
Phrase: Clarify system requirements.

12.
Concepts: providing reasons, justify design decisions
Relationship: Providing reasons involves justifying design decisions.
Criteria: Designers provide reasons and justify design decisions to users.
Phrase: Justify design decisions.

13.
Concepts: foster user engagement, maintaining engagement
Relationship: Fostering user engagement involves maintaining interest and interaction.
Criteria: Designers foster and maintain user engagement.
Phrase: Foster engagement.

14.
Concepts: initiate dialogue, design dialogue
Relationship: Initiating dialogue involves engaging in a conversation about design or development.
Criteria: Designers initiate and engage in dialogue with users.
Phrase: Initiate dialogue.

15.
Concepts: responding to user feedback, accepting and responding to user requests
Relationship: Responding to user feedback involves accepting and responding to user requests.
Criteria: Designers respond to user feedback and requests.
Phrase: Respond to feedback.

16.
Concepts: facilitate access, facilitating access
Relationship: Facilitating access involves providing access to resources.
Criteria: Designers facilitate access to resources for users.
Phrase: Facilitate access.

17.
Concepts: image sharing, share visual content
Relationship: Image sharing involves sharing visual content.
Criteria: Designers and users share visual content.
Phrase: Share images.

18.
Concepts: indicating understanding, confirming understanding
Relationship: Indicating understanding involves confirming comprehension.
Criteria: Users indicate and confirm understanding of concepts or ideas.
Phrase: Indicate understanding.

19.
Concepts: provide community support, acknowledging community support
Relationship: Providing community support involves acknowledging user support.
Criteria: Designers provide and acknowledge community support.
Phrase: Provide community support.

20.
Concepts: apologize for disturbances, apologize for potential interruption
Relationship: Apologizing for disturbances involves apologizing for potential interruptions.
Criteria: Designers apologize for potential disturbances or interruptions.
Phrase: Apologize for disturbances.

21.
Concepts: expressing gratitude for support, expressing gratitude and commitment to improvement
Relationship: Expressing gratitude involves committing to improvement.
Criteria: Designers and users express gratitude and commit to improvement.
Phrase: Express gratitude.

22.
Concepts: share positive experience, expressing software satisfaction
Relationship: Sharing positive experiences involves expressing satisfaction with the software.
Criteria: Users share positive experiences and express satisfaction with the software.
Phrase: Share positive experiences.

23.
Concepts: appreciating features, praising software design
Relationship: Appreciating features involves praising software design.
Criteria: Users appreciate and praise software features and design.
Phrase: Appreciate features.

24.
Concepts: making a request, proposing features
Relationship: Making a request involves proposing new features.
Criteria: Users make requests and propose new features.
Phrase: Make requests.

25.
Concepts: sharing teaching experience, demonstrating extensive teaching experience
Relationship: Sharing teaching experience involves demonstrating expertise.
Criteria: Users share teaching experience and demonstrate expertise.
Phrase: Share teaching experience.

26.
Concepts: expressive, expressing emotions
Relationship: Being expressive involves conveying emotions or personality.
Criteria: Users express emotions or personality through language or tone.
Phrase: Express emotions.

27.
Concepts: using emojis, reacting with emojis
Relationship: Using emojis involves reacting with emojis to convey emotion or tone.
Criteria: Users use emojis to engage with others or add tone to their message.
Phrase: Use emojis.

28.
Concepts: requesting help, asking for resources or support
Relationship: Requesting help involves asking for resources or support.
Criteria: Users request help or resources.
Phrase: Request help.

29.
Concepts: providing context, providing context for need
Relationship: Providing context involves providing justification for a need or request.
Criteria: Users provide context for their needs or requests.
Phrase: Provide context.