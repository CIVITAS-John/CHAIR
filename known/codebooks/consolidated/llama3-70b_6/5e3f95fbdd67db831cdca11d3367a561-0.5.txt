You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (19 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
19. 
Concepts: {Repeat the input 19}
Relationship: {What is logical relationship between concepts in code 19, or N/A if not applicable}
Criteria: {Who did what, and how for code 19}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: announcing progress, responding to progress
- Designers announce progress and signal ongoing work.
- Designers respond to progress and provide update status.

2.
Concepts: communicating across platforms, initiating and maintaining communication
- Designers communicate across platforms and share update timelines.
- A designer initiates communication about a change or update, maintaining frequent communication or updates.

3.
Concepts: app release update, announcing releases
- A designer shares information about the release of an app.
- Designers announce releases and updates and share release notes.

4.
Concepts: explain current focus, explaining development priorities
- Designer explains current focus or priorities.
- Designers explain the software's main focus, goals, or priorities, prioritizing features and design requirements.

5.
Concepts: promising future features, promising to improve
- Designers promise and confirm future features and updates.
- The designer promises to improve the software or its features, and the designer discusses or plans to improve the user interface of the software.

6.
Concepts: emphasizing system requirements, ensure software compatibility
- A designer emphasizes the need for modern machines to run the software smoothly.
- Designers consider system compatibility and requirements, ensuring software compatibility, and providing compatibility information.

7.
Concepts: seeking solutions, seek alternative solutions
- Designers seek solutions and offer solutions.
- Designers seek alternative solutions and are open to new ideas and opportunities.

8.
Concepts: explore ideas, exploring opportunities
- Designers explore ideas and solutions, considering multiple perspectives.
- Designers explore opportunities and community possibilities.

9.
Concepts: facilitating communication, highlighting collaboration
- Designers facilitate communication and promote group sharing.
- Designers highlight the collaborative aspect or importance of shared work.

10.
Concepts: balancing design and development, balancing realism and usability
- Designers balance design and development with user input.
- Designers balance realism with usability or complexity with usability in the software's design.

11.
Concepts: responding to advice, fulfilling user requests
- Designers respond to user advice or feedback and adapt to suggestions, and designers agree to implement user suggestions or requests.
- Designer fulfills a user request or implements a feature based on user feedback, and designer considers user suggestions and requests and considers incorporating user feedback to improve the software.

12.
Concepts: introduce customization options, highlighting manual options
- Designers provide layout adjustment options and introduce customization options.
- Offers or discussions about manual adjustment options or customization and a designer or developer highlights manual adjustment options for a feature.

13.
Concepts: appreciating design philosophy, appreciating the designer's vision
- Users appreciate the design philosophy and express enthusiasm.
- A user shows appreciation for the designer's vision or idea.

14.
Concepts: resource request, requesting software resources
- Requesting resources or materials
- Users request software resources and specific versions.

15.
Concepts: fostering community through input, seeking consensus and ensuring collective input
- Designers gather opinions and encourage participation to foster community.
- Designers seek consensus or ensure collective input from the community.

16.
Concepts: acknowledge designer's point, acknowledging feedback and support
- Users acknowledge the designer's point or perspective.
- Designers acknowledge user feedback and support.

17.
Concepts: sharing past incidents
- Users share past incidents and common experiences.
- Designers share personal experiences and feedback.

18.
Concepts: expressing optimism
- Users express optimism and praise software usability.
- Designers express enthusiasm for updates.

19.
Concepts: engaging in dialogue
- Designers engage in dialogue and initiate discussions.
- Designers engage with users and value user input in development.
===
Here are the definitions for each code:

---
1.
Concepts: announcing progress, responding to progress
Relationship: Causality (announcing progress leads to responding to progress)
Criteria: Designers share and update their work status.
Phrase: Share progress updates

2.
Concepts: communicating across platforms, initiating and maintaining communication
Relationship: Means-End (communicating across platforms is a means to initiate and maintain communication)
Criteria: Designers use multiple platforms to initiate and maintain communication.
Phrase: Initiate cross-platform communication

3.
Concepts: app release update, announcing releases
Relationship: Synonymy (app release update and announcing releases are similar concepts)
Criteria: Designers share information about new app releases and updates.
Phrase: Announce app releases

4.
Concepts: explain current focus, explaining development priorities
Relationship: Elaboration (explaining current focus elaborates on development priorities)
Criteria: Designers explain their current priorities and focus areas.
Phrase: Explain development priorities

5.
Concepts: promising future features, promising to improve
Relationship: Synonymy (promising future features and promising to improve are similar concepts)
Criteria: Designers make promises about future improvements and features.
Phrase: Promise future improvements

6.
Concepts: emphasizing system requirements, ensure software compatibility
Relationship: Means-End (emphasizing system requirements is a means to ensure software compatibility)
Criteria: Designers consider system requirements to ensure software compatibility.
Phrase: Ensure software compatibility

7.
Concepts: seeking solutions, seek alternative solutions
Relationship: Synonymy (seeking solutions and seeking alternative solutions are similar concepts)
Criteria: Designers look for solutions and alternative approaches.
Phrase: Seek solutions

8.
Concepts: explore ideas, exploring opportunities
Relationship: Synonymy (explore ideas and exploring opportunities are similar concepts)
Criteria: Designers explore new ideas and opportunities.
Phrase: Explore new ideas

9.
Concepts: facilitating communication, highlighting collaboration
Relationship: Means-End (facilitating communication is a means to highlight collaboration)
Criteria: Designers facilitate communication to promote collaboration.
Phrase: Facilitate collaborative communication

10.
Concepts: balancing design and development, balancing realism and usability
Relationship: Analogy (balancing design and development is analogous to balancing realism and usability)
Criteria: Designers balance competing factors in software design.
Phrase: Balance design factors

11.
Concepts: responding to advice, fulfilling user requests
Relationship: Means-End (responding to advice is a means to fulfill user requests)
Criteria: Designers respond to user feedback and implement user requests.
Phrase: Respond to user feedback

12.
Concepts: introduce customization options, highlighting manual options
Relationship: Elaboration (introduce customization options elaborates on highlighting manual options)
Criteria: Designers provide customization options and highlight manual adjustments.
Phrase: Introduce customization options

13.
Concepts: appreciating design philosophy, appreciating the designer's vision
Relationship: Synonymy (appreciating design philosophy and appreciating the designer's vision are similar concepts)
Criteria: Users appreciate the design approach and vision.
Phrase: Appreciate design philosophy

14.
Concepts: resource request, requesting software resources
Relationship: Synonymy (resource request and requesting software resources are similar concepts)
Criteria: Users request specific resources or materials.
Phrase: Request software resources

15.
Concepts: fostering community through input, seeking consensus and ensuring collective input
Relationship: Means-End (fostering community through input is a means to seek consensus and ensure collective input)
Criteria: Designers gather input to foster community and ensure collective input.
Phrase: Foster community input

16.
Concepts: acknowledge designer's point, acknowledging feedback and support
Relationship: Synonymy (acknowledge designer's point and acknowledging feedback and support are similar concepts)
Criteria: Users acknowledge designer feedback and support.
Phrase: Acknowledge designer feedback

17.
Concepts: sharing past incidents
Relationship: N/A
Criteria: Users share past experiences and common incidents.
Phrase: Share past experiences

18.
Concepts: expressing optimism
Relationship: N/A
Criteria: Users express positive sentiments about software usability.
Phrase: Express optimism

19.
Concepts: engaging in dialogue
Relationship: N/A
Criteria: Designers engage with users in discussions.
Phrase: Engage in dialogue