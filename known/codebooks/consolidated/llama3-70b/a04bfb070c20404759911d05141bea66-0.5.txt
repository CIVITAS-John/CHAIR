You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another and please do not merge them.
Determine the logical relationship between concepts within each code, such as inclusion, parallel, or intersection.
Write clear and generalizable criteria for each code and do not introduce unnecessary details. Then, write an accurate label for the combined concept.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (8 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Label: {A consolidated label of code 1}
...
8. 
Concepts: {Repeat the input 8}
Relationship: {What is logical relationship between concepts in code 8, or N/A if not applicable}
Criteria: {Who did what, and how for code 8}
Label: {A consolidated label of code 8}
---
~~~
1.
Concepts: community greetings, social greeting
- Addressing a greeting to the entire online community
- Users greet or welcome each other, or respond to greetings in the online community.

2.
Concepts: casual interactions, informal communication tone
- Engaging in informal communication to build rapport or community
- Use of casual or friendly language to foster a relaxed communication environment.

3.
Concepts: school computer issues, share info about school tech
- Discussing technical issues with school computers
- User shares information about their school's computer systems or technology.

4.
Concepts: addressing compatibility issues, limitation addressing and system compatibility discussion
- Acknowledging the need to address compatibility issues and suggesting solutions.
- Users or designers explain why a limitation can be addressed or overcome, discussing compatible systems or solutions.

5.
Concepts: feature explanation and highlighting, feature confirmation and highlighting
- Designers explain a specific feature or functionality of the software, highlighting a specific feature or update.
- Designers confirm or reiterate a feature or functionality, highlighting innovative features or capabilities.

6.
Concepts: user-centric design, emphasizing intuitive use
- Designing an interface that is easy to use and supports learning
- Designing software in a way that minimizes the need for additional instructions, aiming for intuitive user experiences.

7.
Concepts: software usability evaluation., accessibility and user experience
- Evaluating the usability of the software.
- Exploration of accessibility features and user experience considerations in software design

8.
Concepts: resource sharing
- Designers and users share resources, such as development plans and PC download addresses.
- User or designer shares resources or provides access to information, or designers provide download links or access to resources, or encourage collaborative use or sharing of resources.
===
Here are the definitions for each code:

---
1.
Concepts: community greetings, social greeting
Relationship: Inclusion (community greetings include social greetings)
Criteria: Users address greetings to the entire online community or greet/respond to each other.
Label: Community Building Greetings

2.
Concepts: casual interactions, informal communication tone
Relationship: Parallel (both concepts describe relaxed communication)
Criteria: Users engage in informal communication to build rapport or community using casual language.
Label: Informal Communication

3.
Concepts: school computer issues, share info about school tech
Relationship: Inclusion (sharing info about school tech includes discussing computer issues)
Criteria: Users discuss technical issues with school computers or share information about their school's technology.
Label: School Technology Discussion

4.
Concepts: addressing compatibility issues, limitation addressing and system compatibility discussion
Relationship: Intersection (both concepts involve discussing solutions to compatibility issues)
Criteria: Users or designers acknowledge and suggest solutions to compatibility issues, explaining compatible systems or solutions.
Label: Compatibility Issue Resolution

5.
Concepts: feature explanation and highlighting, feature confirmation and highlighting
Relationship: Inclusion (feature confirmation includes explaining and highlighting features)
Criteria: Designers explain, confirm, or highlight specific features or functionalities of the software.
Label: Feature Explanation and Highlighting

6.
Concepts: user-centric design, emphasizing intuitive use
Relationship: Inclusion (emphasizing intuitive use is a part of user-centric design)
Criteria: Designers create an interface that is easy to use and supports learning, minimizing the need for additional instructions.
Label: User-Centric Design

7.
Concepts: software usability evaluation., accessibility and user experience
Relationship: Intersection (both concepts involve evaluating and improving user experience)
Criteria: Users or designers evaluate the usability of the software, exploring accessibility features and user experience considerations.
Label: Software Usability and Accessibility Evaluation

8.
Concepts: resource sharing
Relationship: N/A (single concept)
Criteria: Designers and users share resources, such as development plans and PC download addresses, or provide access to information.
Label: Resource Sharing