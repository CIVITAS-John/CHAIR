You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (17 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
17. 
Concepts: {Repeat the input 17}
Relationship: {What is logical relationship between concepts in code 17, or N/A if not applicable}
Criteria: {Who did what, and how for code 17}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: gathering user context, assessing and considering user needs
- Designers gather context and consider user needs.
- Designers assess or discuss user needs or requirements, or acknowledge and consider users' needs and requirements.

2.
Concepts: exploring and identifying technical requirements, gathering requirements.
let me know if you need any further assistance!
- Designers inquire about technical requirements or constraints and set or explain technical requirements for the application.
- Designers gather requirements or information from users to inform design decisions.

3.
Concepts: involving users, ensuring user involvement and using a participatory approach
- Actively involving users in the development process.
- A designer ensures user involvement and uses a participatory design approach.

4.
Concepts: user interface discussion, exploring options and considering alternative designs
- Designers consider or discuss user interface improvements or changes.
- Designers explore options and consider possibilities to improve the user experience, or consider alternative designs or approaches to improve the user experience.

5.
Concepts: preparing for updates, planning for improvements
- Designers prepare users for upcoming updates or changes and plan for future updates or developments.
- Designers plan or consider improvements or future developments and propose future development or updates for the software.

6.
Concepts: building excitement, builds anticipation
- Generates excitement or anticipation for new features or updates.
- A designer generates excitement or anticipation for a feature or update.

7.
Concepts: listing updates, describing new features and component additions, announcing feature updates
- Designers list or outline updates or new features and highlight changes.
- Designer describes new features, components, and bug fixes in version 1.01.
- Designers announce or discuss updates to components or features.

8.
Concepts: announcing software releases, provide software updates information
- Designers announce the release of a new version or update of the software.
- Designers provide information about upcoming software updates or releases.

9.
Concepts: set expectations, sets realistic expectations
- Designers set expectations or provide a timeline for a specific feature or development.
- A designer sets realistic expectations for when a feature or update will be released.

10.
Concepts: prioritizing tasks, setting the agenda
- Designers prioritize or organize tasks or features and communicate the priority of one topic over another.
- Designers set an agenda, outline plans, or prioritize tasks and define the scope of development, goals, or priorities.

11.
Concepts: addressing compatibility issues, verifying technical details and platform compatibility
- Designers clarify compatibility, provide compatibility information, and address issues.
- Designers verify or confirm system compatibility or technical specifications and confirm that the software is compatible with a specific platform.

12.
Concepts: explaining software limitations, explaining technical constraints and limitations
- Designers discuss and explain the limitations of a feature or functionality.
- Designers explain constraints or limitations and explain technical requirements or limitations, or clarify the capabilities or limitations of the system.

13.
Concepts: addressing limitations, considering hardware limitations
- User or designer explains why a limitation is addressable or can be overcome.
- A user or designer mentions limitations or constraints related to hardware or technology.

14.
Concepts: providing school context, addressing educational needs and demonstrating familiarity
- Designers provide school context, mention school needs, and highlight educational needs.
- Designers address specific educational needs, and designers demonstrate familiarity with educational settings.

15.
Concepts: validating explanation, providing examples for clarification.
let me know if you'd like me to revise anything!
- A user validates or confirms a designer's explanation.
- Designers or users provide examples or illustrations to clarify a concept or feature.

16.
Concepts: explaining device features and technical details, providing software specifications and version information
- Designers provide information about device-specific features and provide details about a feature, including technical specifications.
- Designers specify or clarify the version or type of software being referred to and provide detailed information about the product's version, features, or updates.

17.
Concepts: soliciting user feedback
- Designers seek feedback or input from the community.
- Designers seek feedback or input on a specific feature or issue, and users provide justified feedback.
===
Here are the definitions for each code:

---
1.
Concepts: gathering user context, assessing and considering user needs
Relationship: The concepts are related as designers gather user context to assess and consider user needs.
Criteria: Designers gather user context to understand and address user needs.
Phrase: Gathering user needs and context.

2.
Concepts: exploring and identifying technical requirements, gathering requirements
Relationship: The concepts are related as designers explore technical requirements to gather necessary information.
Criteria: Designers explore technical requirements to gather necessary information for development.
Phrase: Identifying technical requirements.

3.
Concepts: involving users, ensuring user involvement and using a participatory approach
Relationship: The concepts are related as designers involve users to ensure their participation in the development process.
Criteria: Designers involve users in the development process to ensure their needs are met.
Phrase: Involving users in design.

4.
Concepts: user interface discussion, exploring options and considering alternative designs
Relationship: The concepts are related as designers discuss user interface options to explore alternative designs.
Criteria: Designers discuss user interface options to explore alternative designs for improvement.
Phrase: Exploring user interface options.

5.
Concepts: preparing for updates, planning for improvements
Relationship: The concepts are related as designers prepare for updates by planning for improvements.
Criteria: Designers prepare for updates by planning for improvements to the software.
Phrase: Planning for updates and improvements.

6.
Concepts: building excitement, builds anticipation
Relationship: The concepts are related as designers build excitement to create anticipation.
Criteria: Designers build excitement to create anticipation for new features or updates.
Phrase: Building anticipation.

7.
Concepts: listing updates, describing new features and component additions, announcing feature updates
Relationship: The concepts are related as designers list updates to describe new features and announce updates.
Criteria: Designers list updates to describe new features and announce updates to the community.
Phrase: Announcing feature updates.

8.
Concepts: announcing software releases, provide software updates information
Relationship: The concepts are related as designers announce software releases to provide update information.
Criteria: Designers announce software releases to provide update information to the community.
Phrase: Announcing software releases.

9.
Concepts: set expectations, sets realistic expectations
Relationship: The concepts are related as designers set expectations to ensure they are realistic.
Criteria: Designers set realistic expectations for feature releases or updates.
Phrase: Setting realistic expectations.

10.
Concepts: prioritizing tasks, setting the agenda
Relationship: The concepts are related as designers prioritize tasks to set the agenda.
Criteria: Designers prioritize tasks to set the agenda for development.
Phrase: Prioritizing tasks and setting the agenda.

11.
Concepts: addressing compatibility issues, verifying technical details and platform compatibility
Relationship: The concepts are related as designers address compatibility issues by verifying technical details.
Criteria: Designers address compatibility issues by verifying technical details and platform compatibility.
Phrase: Addressing compatibility issues.

12.
Concepts: explaining software limitations, explaining technical constraints and limitations
Relationship: The concepts are related as designers explain software limitations to highlight technical constraints.
Criteria: Designers explain software limitations and technical constraints to set realistic expectations.
Phrase: Explaining software limitations.

13.
Concepts: addressing limitations, considering hardware limitations
Relationship: The concepts are related as designers address limitations by considering hardware limitations.
Criteria: Designers address limitations by considering hardware limitations and technical constraints.
Phrase: Addressing limitations.

14.
Concepts: providing school context, addressing educational needs and demonstrating familiarity
Relationship: The concepts are related as designers provide school context to address educational needs and demonstrate familiarity.
Criteria: Designers provide school context to address educational needs and demonstrate familiarity with educational settings.
Phrase: Addressing educational needs.

15.
Concepts: validating explanation, providing examples for clarification
Relationship: The concepts are related as designers validate explanations by providing examples for clarification.
Criteria: Designers validate explanations by providing examples for clarification and understanding.
Phrase: Validating explanations.

16.
Concepts: explaining device features and technical details, providing software specifications and version information
Relationship: The concepts are related as designers explain device features to provide technical details and specifications.
Criteria: Designers explain device features and provide technical details and specifications to clarify the product.
Phrase: Explaining device features.

17.
Concepts: soliciting user feedback
Relationship: N/A
Criteria: Designers solicit feedback from users to improve the product.
Phrase: Soliciting user feedback.