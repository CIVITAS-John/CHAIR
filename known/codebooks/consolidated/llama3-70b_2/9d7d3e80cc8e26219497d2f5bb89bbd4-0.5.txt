You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: explaining functionality, designer explains feature, explaining feature specifics
- Designer explains the functionality of a feature.
- A designer explains a feature or functionality.
- Designer explains specific features or functionalities.

2.
Concepts: feature explanation, describe feature or component, design feature explanation
- Designer details a feature
- The designer explains a specific feature or functionality.
- A designer describes or explains a new feature or component.
- Designer describes a feature or component in detail.
- Designer provides specific details about a feature or functionality.

3.
Concepts: complexity comparison, feature complexity comparison
- A designer compares the complexity of different features or tasks.
- Designer compares the complexity of different features.

4.
Concepts: explaining complexity, communicate project complexity
- The designer explains complexity or challenges.
- Designer explains the complexity or challenges of implementing certain features.

5.
Concepts: complexity description, explain complexity of updates, express complexity of updates
- A designer describes the complexity of an update or feature.
- The designer explains the complexity of updates or new features.
- Designer expresses the complexity or challenges of implementing updates.

6.
Concepts: testing status, clarifying testing phase
- A designer clarifies the status of a feature or component being tested.
- A designer clarifies the testing phase of a feature.

7.
Concepts: development explanations, development process discussion
- The designer explains the development process or technical details.
- A designer discusses or explains the development process or approach.

8.
Concepts: explaining processes, communicate procedural steps, clarify process
- The designer explains a process or procedure.
- A designer explains or outlines procedural steps or processes.
- The designer clarifies a process or provides step-by-step instructions.

9.
Concepts: explaining feature importance
- A designer explains the importance or significance of a feature or component.
- A designer explains the importance or benefits of a specific feature or component in the Physics Lab software.

10.
Concepts: resource sharing
- Access to resources or materials is facilitated or provided.
- A designer shares resources, updates, or information with the community.

11.
Concepts: exploration encouragement
- Encouraging users to explore software features or capabilities
- Designer encourages users to explore new features.

12.
Concepts: highlighting component features
- Designers mention or highlight the capabilities or features of a component.
- A designer highlights a feature or component of the Physics Lab software, explaining its capabilities or benefits.

13.
Concepts: acknowledgement
- User or designer acknowledges or responds to a request or statement.
- A designer responds with a non-committal acknowledgement.
- User provides a brief acknowledgement or affirmation.

14.
Concepts: supporting user engagement
- Providing resources or support to encourage user engagement
- The designer supports or acknowledges a user's engagement with the software.

15.
Concepts: confirming updates
- Confirming updates or changes to the system
- A designer confirms or announces an update or new feature.

16.
Concepts: communicating project timelines
- Communicating project timelines or milestones
- A designer communicates a project timeline, including priorities or phases.

17.
Concepts: brief response
- No elaboration or brief response is provided.
- User provides a brief response.

18.
Concepts: maintaining user interest
- The designer maintains user interest in updates or new features.
- The designer provides updates or information to maintain user interest.

19.
Concepts: change preparation
- Designer prepares users for changes
- Designer prepares users for significant changes or updates to the platform.
- A designer prepares the community for upcoming changes or updates.

20.
Concepts: showing understanding
- Showing understanding or empathy
- Expressing understanding, agreement, or acknowledgement.

21.
Concepts: community consultation
- Designer engages with the community to gather opinions or feedback.
- Designer consults with the community or seeks input on a specific topic or decision.

22.
Concepts: sharing teaching experience
- User shares their teaching experience, providing context for their suggestions and feedback.
- User shares teaching experience.
- A user shares their personal experience and background in teaching.

23.
Concepts: assess user environment
- Assessing the user's environment or system requirements.
- Designer assesses the user's environment or setup for using the software.

24.
Concepts: delay explanation
- A designer explains or justifies a delay in development or release.
- A designer explains or justifies a delay or setback in the software development process.

25.
Concepts: knowledge sharing
- Designer shares knowledge or information
- User contributes to knowledge sharing or discussion.

26.
Concepts: downplaying formality
- Designer downplays the need for formality in communication.
- Designer downplays formality in communication.

27.
Concepts: institutional context
- The user highlights the institutional context for using the software.
- User shares experience or context related to institutional settings, such as schools.

28.
Concepts: initial greeting
- A community member initiates a greeting or introduction.
- User greets the online community.
- Users or designers greet the community or welcome others.

29.
Concepts: agree with focus
- A user agrees with a focus or idea.
- User agrees with focus areas.

30.
Concepts: seeking guidance
- Users seek guidance or direction from the community or designers.
- A user seeks guidance on how to use a tool or software.
- User seeks guidance or clarification on how to use the software.
- The user seeks guidance or instructions for using the software.
- A user seeks guidance or asks for help in accessing materials or resources.
- A user asks a question about how to use the software, seeking learning or guidance.
- A user inquires about how to use a feature or functionality.

31.
Concepts: providing feature details
- Providing details about new or upcoming features
- Designer provides detailed information about platform features.

32.
Concepts: managing expectations
- The designer manages or sets expectations for the software or its development.
- Designer sets realistic expectations for the software's functionality or limitations.
- A designer sets realistic expectations or clarifies limitations.
- Designer sets realistic expectations or manages user expectations.
===
Here are the definitions for each code:

---
1.
Concepts: explaining functionality, designer explains feature, explaining feature specifics
Relationship: The concepts are related as the designer explains the functionality of a feature, including specific details.
Criteria: A designer explains the functionality of a feature, including specific details.
Phrase: Explaining feature functionality.

2.
Concepts: feature explanation, describe feature or component, design feature explanation
Relationship: The concepts are related as the designer provides detailed explanations of a feature or component.
Criteria: A designer provides a detailed explanation of a feature or component.
Phrase: Explaining feature details.

3.
Concepts: complexity comparison, feature complexity comparison
Relationship: The concepts are related as the designer compares the complexity of different features or tasks.
Criteria: A designer compares the complexity of different features or tasks.
Phrase: Comparing feature complexities.

4.
Concepts: explaining complexity, communicate project complexity
Relationship: The concepts are related as the designer explains the complexity or challenges of a project.
Criteria: A designer explains the complexity or challenges of a project.
Phrase: Explaining project complexity.

5.
Concepts: complexity description, explain complexity of updates, express complexity of updates
Relationship: The concepts are related as the designer describes the complexity of an update or feature.
Criteria: A designer describes the complexity of an update or feature.
Phrase: Describing update complexity.

6.
Concepts: testing status, clarifying testing phase
Relationship: The concepts are related as the designer clarifies the status of a feature or component being tested.
Criteria: A designer clarifies the status of a feature or component being tested.
Phrase: Clarifying testing status.

7.
Concepts: development explanations, development process discussion
Relationship: The concepts are related as the designer explains the development process or technical details.
Criteria: A designer explains the development process or technical details.
Phrase: Explaining development process.

8.
Concepts: explaining processes, communicate procedural steps, clarify process
Relationship: The concepts are related as the designer explains a process or procedure.
Criteria: A designer explains a process or procedure.
Phrase: Explaining procedural steps.

9.
Concepts: explaining feature importance
Relationship: N/A
Criteria: A designer explains the importance or significance of a feature or component.
Phrase: Explaining feature importance.

10.
Concepts: resource sharing
Relationship: N/A
Criteria: A designer shares resources, updates, or information with the community.
Phrase: Sharing resources.

11.
Concepts: exploration encouragement
Relationship: N/A
Criteria: A designer encourages users to explore software features or capabilities.
Phrase: Encouraging exploration.

12.
Concepts: highlighting component features
Relationship: N/A
Criteria: A designer highlights a feature or component of the Physics Lab software, explaining its capabilities or benefits.
Phrase: Highlighting component features.

13.
Concepts: acknowledgement
Relationship: N/A
Criteria: A user or designer acknowledges or responds to a request or statement.
Phrase: Providing acknowledgement.

14.
Concepts: supporting user engagement
Relationship: N/A
Criteria: A designer supports or acknowledges a user's engagement with the software.
Phrase: Supporting user engagement.

15.
Concepts: confirming updates
Relationship: N/A
Criteria: A designer confirms or announces an update or new feature.
Phrase: Confirming updates.

16.
Concepts: communicating project timelines
Relationship: N/A
Criteria: A designer communicates a project timeline, including priorities or phases.
Phrase: Communicating project timelines.

17.
Concepts: brief response
Relationship: N/A
Criteria: A user provides a brief response.
Phrase: Providing brief response.

18.
Concepts: maintaining user interest
Relationship: N/A
Criteria: A designer maintains user interest in updates or new features.
Phrase: Maintaining user interest.

19.
Concepts: change preparation
Relationship: N/A
Criteria: A designer prepares users for changes or updates to the platform.
Phrase: Preparing for changes.

20.
Concepts: showing understanding
Relationship: N/A
Criteria: A designer shows understanding or empathy.
Phrase: Showing understanding.

21.
Concepts: community consultation
Relationship: N/A
Criteria: A designer engages with the community to gather opinions or feedback.
Phrase: Consulting with community.

22.
Concepts: sharing teaching experience
Relationship: N/A
Criteria: A user shares their teaching experience, providing context for their suggestions and feedback.
Phrase: Sharing teaching experience.

23.
Concepts: assess user environment
Relationship: N/A
Criteria: A designer assesses the user's environment or system requirements.
Phrase: Assessing user environment.

24.
Concepts: delay explanation
Relationship: N/A
Criteria: A designer explains or justifies a delay in development or release.
Phrase: Explaining delays.

25.
Concepts: knowledge sharing
Relationship: N/A
Criteria: A designer shares knowledge or information.
Phrase: Sharing knowledge.

26.
Concepts: downplaying formality
Relationship: N/A
Criteria: A designer downplays the need for formality in communication.
Phrase: Downplaying formality.

27.
Concepts: institutional context
Relationship: N/A
Criteria: A user shares experience or context related to institutional settings, such as schools.
Phrase: Sharing institutional context.

28.
Concepts: initial greeting
Relationship: N/A
Criteria: A community member initiates a greeting or introduction.
Phrase: Initiating greetings.

29.
Concepts: agree with focus
Relationship: N/A
Criteria: A user agrees with a focus or idea.
Phrase: Agreeing with focus.

30.
Concepts: seeking guidance
Relationship: N/A
Criteria: A user seeks guidance or direction from the community or designers.
Phrase: Seeking guidance.

31.
Concepts: providing feature details
Relationship: N/A
Criteria: A designer provides detailed information about platform features.
Phrase: Providing feature details.

32.
Concepts: managing expectations
Relationship: N/A
Criteria: A designer manages or sets expectations for the software or its development.
Phrase: Managing expectations.