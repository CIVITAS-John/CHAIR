You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (15 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
15. 
Concepts: {Repeat the input 15}
Relationship: {What is logical relationship between concepts in code 15, or N/A if not applicable}
Criteria: {Who did what, and how for code 15}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: seeking community input, plan and announce feedback collection
- Requesting opinions or feedback from the community before making decisions.
- Individuals announce plans to gather feedback or consult the community in future developments.

2.
Concepts: ask a question about the app, seek information through inquiries
- Asking specific questions about the software or its features.
- Users ask questions to obtain information or clarification about the software.

3.
Concepts: user reactions, use emojis to express emotions
- Instances where users express their reactions to updates or announcements, often using emojis.
- Users express emotions and reactions using emojis or other non-verbal forms of communication.

4.
Concepts: previewing updates, informing about feature updates
- Previewing upcoming features or updates planned for future releases.
- Providing information about changes or new features in upcoming updates.

5.
Concepts: encouraging discussions, discussing design decisions
- Designers encourage group discussions and open communication to foster user feedback.
- Designers discuss design decisions, user interface aspects, and address usability concerns.

6.
Concepts: maintaining transparency, ensuring development transparency
- Designers maintain transparency about the complexity and timeline of tasks.
- Designers provide detailed and transparent discussions about development processes and challenges.

7.
Concepts: providing user support, seeking and providing technical assistance
- Designers provide technical support and assistance to users.
- Designers seek technical assistance and users provide answers related to design support.

8.
Concepts: integrating user feedback, establish a feedback loop
- User feedback is acknowledged, sought, and incorporated into the design process.
- Users provide feedback that designers collect, consider, and implement into design decisions.

9.
Concepts: talk about limitation of the solution, explaining software limitations
- Designers mention the limitations of a proposed solution.
- Users or developers explain technical limitations and constraints of the system or software.

10.
Concepts: sharing user tips, sharing usability workarounds
- Users and developers share tips, tricks, and knowledge about software capabilities.
- Developers share workarounds or solutions to usability problems.

11.
Concepts: highlight ideal use, discussing usability
- Community members highlight specific components or features of the software as ideal for certain uses.
- Users and community members discuss and highlight the software's usability, practicality, and flexibility.

12.
Concepts: sharing development plans, explaining development focus
- Designers share detailed plans and information about ongoing and future developments.
- Designers explain focus areas and current priorities in the development process.

13.
Concepts: planning feature development, discussing feature development
- Designers list planned features and discuss development plans for future updates.
- Designers share and discuss design ideas and plans for feature development.

14.
Concepts: express enthusiasm and admiration, appreciate and respond positively
- Users express enthusiasm, admiration, and compliment the software or the efforts of its creators.
- Users express appreciation for developer plans or progress, and developers appreciate user support.

15.
Concepts: justify feature requests, explaining intentions
- Users provide context and reasoning to justify their feature requests.
- Users or developers explain the intention and reasoning behind their questions or requests.
===
---
Definitions for each code (15 in total):

1.
Concepts: seeking community input, plan and announce feedback collection
Relationship: Both involve engaging the community before making decisions.
Criteria: Individuals request opinions from the community and announce plans to gather feedback for future developments.
Phrase: Seeking community input

2.
Concepts: ask a question about the app, seek information through inquiries
Relationship: Both involve seeking specific information or clarification.
Criteria: Users ask questions to obtain information or clarification about the software.
Phrase: Asking app-related questions

3.
Concepts: user reactions, use emojis to express emotions
Relationship: Both involve expressing reactions or emotions.
Criteria: Users express their reactions and emotions to updates or announcements using emojis.
Phrase: Expressing user reactions through emojis

4.
Concepts: previewing updates, informing about feature updates
Relationship: Both involve communicating information about future changes.
Criteria: Designers preview and inform users about upcoming features or updates.
Phrase: Previewing feature updates

5.
Concepts: encouraging discussions, discussing design decisions
Relationship: Both involve collaborative discussions about design.
Criteria: Designers encourage discussions and communicate design decisions and usability concerns with users.
Phrase: Encouraging design discussions

6.
Concepts: maintaining transparency, ensuring development transparency
Relationship: Both involve clear communication about development processes.
Criteria: Designers provide detailed and transparent information about the development processes and challenges.
Phrase: Maintaining development transparency

7.
Concepts: providing user support, seeking and providing technical assistance
Relationship: Both involve the exchange of technical assistance.
Criteria: Designers and users seek and provide technical assistance related to the software.
Phrase: Providing technical support

8.
Concepts: integrating user feedback, establish a feedback loop
Relationship: Both involve the collection and incorporation of user feedback.
Criteria: Designers acknowledge, collect, consider, and implement user feedback into design decisions.
Phrase: Integrating user feedback

9.
Concepts: talk about limitation of the solution, explaining software limitations
Relationship: Both involve discussing constraints or limitations.
Criteria: Designers and users explain the limitations and constraints of the software or proposed solutions.
Phrase: Explaining software limitations

10.
Concepts: sharing user tips, sharing usability workarounds
Relationship: Both involve sharing practical advice or solutions.
Criteria: Users and developers share tips, tricks, and workarounds to improve software usability.
Phrase: Sharing usability tips

11.
Concepts: highlight ideal use, discussing usability
Relationship: Both involve discussing the practical use of the software.
Criteria: Community members highlight and discuss the software's ideal uses and usability.
Phrase: Discussing software usability

12.
Concepts: sharing development plans, explaining development focus
Relationship: Both involve communicating future development priorities.
Criteria: Designers share and explain detailed plans and focus areas for ongoing and future development.
Phrase: Sharing development plans

13.
Concepts: planning feature development, discussing feature development
Relationship: Both involve planning and discussing future features.
Criteria: Designers list and discuss planned features and development plans for future updates.
Phrase: Planning feature development

14.
Concepts: express enthusiasm and admiration, appreciate and respond positively
Relationship: Both involve positive feedback and appreciation.
Criteria: Users express enthusiasm and appreciation for the software, and developers respond positively to user support.
Phrase: Expressing user appreciation

15.
Concepts: justify feature requests, explaining intentions
Relationship: Both involve providing context for requests or questions.
Criteria: Users and developers provide context and reasoning to justify feature requests or explain intentions behind their questions.
Phrase: Justifying feature requests
---