You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (43 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
43. 
Concepts: {Repeat the input 43}
Relationship: {What is logical relationship between concepts in code 43, or N/A if not applicable}
Criteria: {Who did what, and how for code 43}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: sharing teaching experience, sharing teaching background
- Users share their teaching experience or background.
- A user provides their teaching background and experience.

2.
Concepts: sharing classroom success, sharing classroom experiences
- A user shares a positive experience of using the software in a classroom setting.
- A user shares their positive classroom experience with the platform.

3.
Concepts: inquiring about software access, inquiring about download information
- Users ask how to access or download the software.
- Users inquire about where to download the software.

4.
Concepts: seeking usage instructions, ask a question about how to use
- Users inquire about how to use a specific version of the software.
- Users ask questions about how to use specific features of the software.

5.
Concepts: using emojis, expressing emotions
- Users communicate or express emotions and reactions using emojis.
- Using expressive language or emojis to convey emotion.

6.
Concepts: apology, apologizing for disturbance
- A designer apologizes for causing a disturbance.
- Designers or users apologize for any inconvenience or interruptions caused.

7.
Concepts: providing confirmation, confirm understanding
- Users or designers confirm or acknowledge information.
- Users confirm their understanding or agreement with statements.

8.
Concepts: providing context, explaining context
- Users provide context to their questions or responses.
- A user provides context or explains the reason behind their question or interest.

9.
Concepts: user satisfaction, appreciating features
- Users express satisfaction with the platform's practicality and features.
- Users express appreciation for specific features of the platform.

10.
Concepts: expressing community support, acknowledging community support
- Users or designers express support or appreciation for the community's efforts.
- Users or designers acknowledge and thank the community for their support.

11.
Concepts: acknowledging and expressing gratitude, expressing gratitude and acknowledgment
- Users or designers acknowledge efforts and express gratitude.
- Users or designers express gratitude and acknowledgment for contributions.

12.
Concepts: compliment, expressing appreciation
- Users give compliments or positive feedback.
- Expressions of thanks or appreciation from users.

13.
Concepts: welcome, greeting the community
- Designers greet or welcome users to the community or conversation.
- Users or designers greet the community.

14.
Concepts: inquiring about updates, inquiring about update status, inquiring about update timelines
- Users inquire about recent or upcoming updates.
- Users inquire about the status or updates of specific platform versions.
- Users inquire about the timing of upcoming software updates.

15.
Concepts: clarifying version type, clarifying versions
- Clarification of the type or version of the software.
- Users ask for clarification about the platform or version of the software.

16.
Concepts: component adjustments, listing feature updates and bug fixes
- A designer details changes to component properties, including new features and bug fixes.
- A designer lists new features, components, adjustments, and bug fixes in the software.

17.
Concepts: announcing planned updates, announcing upcoming updates
- Designers announce plans for future updates or features.
- Designers confirm or announce upcoming updates or features.

18.
Concepts: announcing updates, making update announcements
- Designers provide updates or announcements about the software.
- A designer makes an announcement about updates or resources.

19.
Concepts: providing software updates, software updates and downloads, informing about updates
- A designer provides updates about the software versions and new features.
- A designer informs users about software updates and download availability.
- A designer notifies users about the release or availability of a new software version and its updates.

20.
Concepts: new feature explanation, explaining upcoming features
- Explaining new features and their development status.
- Listing or explaining features that will be added in future updates.

21.
Concepts: announcing feature updates, announcing version updates
- Information about new features and updates being added to the product.
- Announcing new versions, features, and updates in specific software versions.

22.
Concepts: planning future updates, confirming future features
- A team member discusses plans for future updates or features.
- A team member confirms that a future feature will be included.

23.
Concepts: previewing updates, intro to update content
- A designer provides a preview of upcoming features or updates.
- A designer introduces the content of an upcoming update.

24.
Concepts: communicate release plans, providing release schedules
- A designer communicates plans for future releases.
- A designer provides a schedule or timeline for the release of updates.

25.
Concepts: sharing development updates, communicating development progress
- A designer shares detailed information about current feature development.
- Designers communicate progress, plans, and timelines for feature development.

26.
Concepts: discussing future planning, sharing future development plans, outlining future design plans
- A designer discusses future plans, features, or development efforts.
- A designer shares plans for future development, including features and compatibility.
- A designer outlines plans for future design or feature enhancements.

27.
Concepts: responding to users, responding to user feedback
- Instances where designers respond to user queries or feedback.
- Designers respond to user feedback or suggestions.

28.
Concepts: asking follow-up inquiries, asking follow-up questions
- Designers ask follow-up questions to clarify user needs.
- Developers ask follow-up questions to better understand user needs or usage scenarios.

29.
Concepts: seeking clarification, providing clarification
- Designers or users seek clarification on specific points.
- A designer provides an explanation or technical clarification about a feature.

30.
Concepts: involving users in design, interacting with users
- Designers actively involve users in the design process.
- The collaborative interaction between users and designers that contributes to the design process.

31.
Concepts: encouraging open communication, encouraging interaction and discussion
- Designers encourage open communication and feedback from users.
- Designers encourage user interaction and future discussions.

32.
Concepts: soliciting user feedback, encouraging user feedback
- Designers seek or prompt feedback on specific features or updates.
- Eliciting feedback or suggestions from the community.
- Designers encourage users to provide feedback and suggestions.

33.
Concepts: seeking user input, requesting user input, inquiring user input for future iterations
- Designers seek input or suggestions from users.
- Designers request input or feedback from users.
- A designer asks for user input for future iterations.

34.
Concepts: accepting user suggestions, suggesting improvements and features
- Developers accept suggestions or requests from users.
- Users or developers make suggestions for improvements or new features.

35.
Concepts: providing user suggestions, providing user feedback, providing feedback and suggestions
- Users provide suggestions for improving the software.
- Instances where users provide feedback or suggestions to improve the software.
- Users provide feedback or suggestions on the software's features or development.

36.
Concepts: confirming compatibility, compatibility assurance
- A designer confirms the software's compatibility with a specific system.
- A designer assures compatibility of the software with older hardware or systems.

37.
Concepts: explaining limitations, explain current version's limitation
- A designer explains the limitations of a feature or proposed solution.
- A designer explains the limitations of the current version of the software.

38.
Concepts: problem inquiry, inquiring about specific problems
- A team member asks about specific problems encountered by users.
- Designers ask users about specific issues they encountered.

39.
Concepts: proposing design idea, proposing solutions
- Designers propose new design ideas or features.
- A designer proposes or shares potential solutions to a problem.

40.
Concepts: explaining functionality, explaining feature functions
- A designer describes the functionality of a specific component.
- A designer explains the functionality of a feature with examples.

41.
Concepts: design thoughts, suggesting simplification
- A designer shares their thoughts on simplifying a design or feature.
- A designer suggests simplifying a feature or process.

42.
Concepts: feedback with justifications, proposing features with reasons
- A user provides feedback or suggestions with justifications.
- Users provide reasons for suggestions or propose additional features.

43.
Concepts: ease of use, discussing usability
- Discussions related to the ease of use and user-friendliness of the software.
- Discussing the usability or user-friendliness of the software.
===
---
Definitions for each code (43 in total):
1.
Concepts: sharing teaching experience, sharing teaching background
Relationship: Both involve users providing information about their teaching history.
Criteria: Users share their teaching experience and background.
Phrase: Sharing teaching background

2.
Concepts: sharing classroom success, sharing classroom experiences
Relationship: Both involve users sharing positive experiences in a classroom setting.
Criteria: Users share positive classroom experiences using the platform.
Phrase: Sharing classroom success

3.
Concepts: inquiring about software access, inquiring about download information
Relationship: Both involve users asking how to obtain the software.
Criteria: Users inquire about how to access or download the software.
Phrase: Inquiring about software access

4.
Concepts: seeking usage instructions, ask a question about how to use
Relationship: Both involve users asking for guidance on using the software.
Criteria: Users ask questions about how to use specific features or versions of the software.
Phrase: Seeking usage instructions

5.
Concepts: using emojis, expressing emotions
Relationship: Both involve users expressing emotions through emojis or language.
Criteria: Users express emotions and reactions using emojis.
Phrase: Using emojis

6.
Concepts: apology, apologizing for disturbance
Relationship: Both involve users or designers apologizing for causing inconvenience.
Criteria: Users or designers apologize for any inconvenience or interruptions caused.
Phrase: Apologizing for disturbance

7.
Concepts: providing confirmation, confirm understanding
Relationship: Both involve users or designers confirming information or understanding.
Criteria: Users or designers confirm or acknowledge information and understanding.
Phrase: Providing confirmation

8.
Concepts: providing context, explaining context
Relationship: Both involve users giving background information for clarity.
Criteria: Users provide context or explain the reason behind their questions or responses.
Phrase: Providing context

9.
Concepts: user satisfaction, appreciating features
Relationship: Both involve users expressing positive feedback about the platform.
Criteria: Users express satisfaction and appreciation for the platform's features.
Phrase: Expressing user satisfaction

10.
Concepts: expressing community support, acknowledging community support
Relationship: Both involve users or designers showing appreciation for community efforts.
Criteria: Users or designers express and acknowledge support for the community.
Phrase: Expressing community support

11.
Concepts: acknowledging and expressing gratitude, expressing gratitude and acknowledgment
Relationship: Both involve users or designers showing gratitude for contributions.
Criteria: Users or designers express gratitude and acknowledgment for contributions.
Phrase: Expressing gratitude

12.
Concepts: compliment, expressing appreciation
Relationship: Both involve users giving positive feedback.
Criteria: Users give compliments or express appreciation.
Phrase: Giving compliments

13.
Concepts: welcome, greeting the community
Relationship: Both involve users or designers greeting others.
Criteria: Users or designers greet or welcome the community.
Phrase: Greeting the community

14.
Concepts: inquiring about updates, inquiring about update status, inquiring about update timelines
Relationship: All involve users asking about the status or timing of updates.
Criteria: Users inquire about the status, timing, or details of software updates.
Phrase: Inquiring about updates

15.
Concepts: clarifying version type, clarifying versions
Relationship: Both involve users seeking clarification about software versions.
Criteria: Users ask for clarification about the type or version of the software.
Phrase: Clarifying versions

16.
Concepts: component adjustments, listing feature updates and bug fixes
Relationship: Both involve detailing changes and improvements in the software.
Criteria: Designers list new features, adjustments, and bug fixes in the software.
Phrase: Listing feature updates

17.
Concepts: announcing planned updates, announcing upcoming updates
Relationship: Both involve designers informing users about future updates.
Criteria: Designers announce plans for future updates or features.
Phrase: Announcing planned updates

18.
Concepts: announcing updates, making update announcements
Relationship: Both involve designers providing information about software updates.
Criteria: Designers make announcements about software updates or resources.
Phrase: Announcing updates

19.
Concepts: providing software updates, software updates and downloads, informing about updates
Relationship: All involve designers informing users about software updates and availability.
Criteria: Designers inform users about software updates and download availability.
Phrase: Providing software updates

20.
Concepts: new feature explanation, explaining upcoming features
Relationship: Both involve explaining new or upcoming features.
Criteria: Designers explain new features and their development status.
Phrase: Explaining new features

21.
Concepts: announcing feature updates, announcing version updates
Relationship: Both involve announcing new features or software versions.
Criteria: Designers announce new versions, features, and updates.
Phrase: Announcing feature updates

22.
Concepts: planning future updates, confirming future features
Relationship: Both involve discussing or confirming future updates or features.
Criteria: Team members discuss or confirm plans for future updates or features.
Phrase: Planning future updates

23.
Concepts: previewing updates, intro to update content
Relationship: Both involve providing a preview or introduction to upcoming updates.
Criteria: Designers provide a preview or introduction to the content of upcoming updates.
Phrase: Previewing updates

24.
Concepts: communicate release plans, providing release schedules
Relationship: Both involve informing users about release plans or schedules.
Criteria: Designers communicate plans and schedules for future releases.
Phrase: Communicating release plans

25.
Concepts: sharing development updates, communicating development progress
Relationship: Both involve providing information about the progress of feature development.
Criteria: Designers share detailed information about current feature development and progress.
Phrase: Sharing development updates

26.
Concepts: discussing future planning, sharing future development plans, outlining future design plans
Relationship: All involve discussing or sharing plans for future development.
Criteria: Designers discuss and share plans for future development and design enhancements.
Phrase: Discussing future planning

27.
Concepts: responding to users, responding to user feedback
Relationship: Both involve designers addressing user queries or feedback.
Criteria: Designers respond to user queries or feedback.
Phrase: Responding to users

28.
Concepts: asking follow-up inquiries, asking follow-up questions
Relationship: Both involve designers asking additional questions for clarification.
Criteria: Designers ask follow-up questions to clarify user needs or scenarios.
Phrase: Asking follow-up inquiries

29.
Concepts: seeking clarification, providing clarification
Relationship: Both involve seeking or providing explanations for better understanding.
Criteria: Designers or users seek or provide clarification on specific points.
Phrase: Seeking clarification

30.
Concepts: involving users in design, interacting with users
Relationship: Both involve user participation in the design process.
Criteria: Designers actively involve users in the design process through interaction.
Phrase: Involving users in design

31.
Concepts: encouraging open communication, encouraging interaction and discussion
Relationship: Both involve promoting communication and interaction among users.
Criteria: Designers encourage open communication and interaction among users.
Phrase: Encouraging open communication

32.
Concepts: soliciting user feedback, encouraging user feedback
Relationship: Both involve prompting users to provide feedback.
Criteria: Designers solicit and encourage users to provide feedback and suggestions.
Phrase: Soliciting user feedback

33.
Concepts: seeking user input, requesting user input, inquiring user input for future iterations
Relationship: All involve designers asking for user input for future improvements.
Criteria: Designers seek and request user input for future iterations.
Phrase: Seeking user input

34.
Concepts: accepting user suggestions, suggesting improvements and features
Relationship: Both involve considering user suggestions for improvements.
Criteria: Developers accept and consider user suggestions for improvements and features.
Phrase: Accepting user suggestions

35.
Concepts: providing user suggestions, providing user feedback, providing feedback and suggestions
Relationship: All involve users giving feedback or suggestions for improvement.
Criteria: Users provide feedback and suggestions to improve the software.
Phrase: Providing user suggestions

36.
Concepts: confirming compatibility, compatibility assurance
Relationship: Both involve ensuring the software works with specific systems.
Criteria: Designers confirm the software's compatibility with specific systems.
Phrase: Confirming compatibility

37.
Concepts: explaining limitations, explain current version's limitation
Relationship: Both involve detailing the limitations of the software.
Criteria: Designers explain the limitations of a feature or the current software version.
Phrase: Explaining limitations

38.
Concepts: problem inquiry, inquiring about specific problems
Relationship: Both involve asking about issues users encounter.
Criteria: Designers ask users about specific problems they have encountered.
Phrase: Inquiring about specific problems

39.
Concepts: proposing design idea, proposing solutions
Relationship: Both involve suggesting new ideas or solutions.
Criteria: Designers propose new design ideas or solutions to problems.
Phrase: Proposing design ideas

40.
Concepts: explaining functionality, explaining feature functions
Relationship: Both involve describing how features work.
Criteria: Designers explain the functionality of specific features or components.
Phrase: Explaining functionality

41.
Concepts: design thoughts, suggesting simplification
Relationship: Both involve sharing ideas to simplify design or features.
Criteria: Designers share thoughts and suggest simplifications for designs or features.
Phrase: Suggesting simplification

42.
Concepts: feedback with justifications, proposing features with reasons
Relationship: Both involve providing reasons for feedback or suggestions.
Criteria: Users provide feedback or propose features with justifications.
Phrase: Providing feedback with justifications

43.
Concepts: ease of use, discussing usability
Relationship: Both involve discussing the user-friendliness of the software.
Criteria: Users discuss the ease of use and usability of the software.
Phrase: Discussing usability
---