You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (17 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
17. 
Concepts: {Repeat the input 17}
Relationship: {What is logical relationship between concepts in code 17, or N/A if not applicable}
Criteria: {Who did what, and how for code 17}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: consider user context, consider user experience
- Designers consider the user context or background when making design decisions.
- Designers consider the user experience and design implications of their decisions.

2.
Concepts: providing access, guiding access
- Designer facilitates user access to resources.
- A designer guides users on accessing specific platform features or resources.

3.
Concepts: offering guidance, offering special tips
- Designer offers guidance or instructions on using the software.
- A designer offers special tips or instructions for using the software.

4.
Concepts: probing user roles, probing user identity
- Designers probe users about their profession or role.
- Designer asks questions to understand the user's role or identity.

5.
Concepts: inquiring about user experience, seeking feedback on user experience
- Designer inquires about user issues or experiences.
- Designers seek feedback on users' experiences with the software.

6.
Concepts: affirming user's point, acknowledging user input
- A designer affirms or acknowledges a user's point or suggestion.
- Designer acknowledges or responds to user input or suggestions.

7.
Concepts: explaining benefits, detailing educational benefits
- Designer explains or highlights the benefits of a feature.
- The designer explains the educational benefits or value of a feature or experiment.

8.
Concepts: clarifying documentation needs, expressing need for documentation
- Clarifying or requesting documentation or user manuals.
- Users express a need for documentation or user manuals.

9.
Concepts: seeking alternative solutions, suggesting alternatives
- A user seeks alternative solutions or workarounds.
- Users suggest alternative solutions, workarounds, or approaches to a problem or feature.

10.
Concepts: highlighting challenges, explaining development challenges
- A user or designer mentions or discusses challenges, obstacles, or difficulties faced during development or use.
- Designer explains the challenges or complexities of development.

11.
Concepts: explaining limitations, limitation acknowledgment
- Designer explains current limitations of the software or design.
- Designer acknowledges limitations or issues with a feature or algorithm.

12.
Concepts: clarifying compatibility, providing system requirements
- Designer clarifies compatibility issues or system requirements.
- Designer informs users about system requirements or compatibility.

13.
Concepts: discussing compatibility, considering system compatibility for older systems
- Designer suggests checking or discusses compatibility with different platforms or systems.
- A designer considers or discusses compatibility issues with older systems.

14.
Concepts: incorporating user feedback
- The designer considers incorporating user feedback into the design, such as incorporating both left and right sides.
- Designer considers, takes, or responds to user feedback or suggestions.

15.
Concepts: provide feedback
- Sharing opinions, thoughts, or experiences about the software, providing user feedback.
- Designer solicits user feedback or input.

16.
Concepts: explaining school policy
- The speaker explains a school's policy or rule related to technology or network usage.
- Users explain common school policies or practices.

17.
Concepts: engaging with the community
- Designers maintain frequent communication or updates with the community.
- Designer encourages discussion or invites participation from the community.
- Designer facilitates engagement, fosters community involvement, or envisions community engagement.
===
Here are the definitions for each code:

---
1.
Concepts: consider user context, consider user experience
Relationship: The designer considers both the user's background and experience to inform design decisions.
Criteria: Designers consider users' context and experience when making design decisions.
Phrase: Considering user context and experience.

2.
Concepts: providing access, guiding access
Relationship: Providing access implies guiding users on how to access resources.
Criteria: Designers facilitate and guide users' access to resources.
Phrase: Facilitating access to resources.

3.
Concepts: offering guidance, offering special tips
Relationship: Offering guidance and special tips are both forms of instructional support.
Criteria: Designers offer guidance and special tips for using the software.
Phrase: Offering instructional support.

4.
Concepts: probing user roles, probing user identity
Relationship: Probing user roles and identity are both forms of user inquiry.
Criteria: Designers probe users about their roles and identities.
Phrase: Probing user information.

5.
Concepts: inquiring about user experience, seeking feedback on user experience
Relationship: Inquiring about user experience and seeking feedback are both forms of user feedback solicitation.
Criteria: Designers inquire about and seek feedback on users' experiences.
Phrase: Soliciting user feedback.

6.
Concepts: affirming user's point, acknowledging user input
Relationship: Affirming and acknowledging user input are both forms of user validation.
Criteria: Designers affirm and acknowledge user input and suggestions.
Phrase: Validating user input.

7.
Concepts: explaining benefits, detailing educational benefits
Relationship: Explaining benefits and educational benefits are both forms of benefit explanation.
Criteria: Designers explain the benefits and educational value of features.
Phrase: Explaining benefits and value.

8.
Concepts: clarifying documentation needs, expressing need for documentation
Relationship: Clarifying documentation needs and expressing needs are both forms of documentation requests.
Criteria: Designers clarify and express needs for documentation.
Phrase: Requesting documentation.

9.
Concepts: seeking alternative solutions, suggesting alternatives
Relationship: Seeking and suggesting alternatives are both forms of problem-solving.
Criteria: Users seek and suggest alternative solutions or workarounds.
Phrase: Seeking alternative solutions.

10.
Concepts: highlighting challenges, explaining development challenges
Relationship: Highlighting and explaining challenges are both forms of challenge discussion.
Criteria: Designers highlight and explain development challenges.
Phrase: Discussing development challenges.

11.
Concepts: explaining limitations, limitation acknowledgment
Relationship: Explaining and acknowledging limitations are both forms of limitation disclosure.
Criteria: Designers explain and acknowledge limitations or issues.
Phrase: Disclosing limitations.

12.
Concepts: clarifying compatibility, providing system requirements
Relationship: Clarifying compatibility and providing system requirements are both forms of compatibility explanation.
Criteria: Designers clarify compatibility and provide system requirements.
Phrase: Explaining compatibility and requirements.

13.
Concepts: discussing compatibility, considering system compatibility for older systems
Relationship: Discussing and considering compatibility are both forms of compatibility consideration.
Criteria: Designers discuss and consider compatibility with different platforms or systems.
Phrase: Considering compatibility.

14.
Concepts: incorporating user feedback
Relationship: N/A
Criteria: Designers incorporate user feedback into the design.
Phrase: Incorporating user feedback.

15.
Concepts: provide feedback
Relationship: N/A
Criteria: Users provide feedback or input about the software.
Phrase: Providing feedback.

16.
Concepts: explaining school policy
Relationship: N/A
Criteria: Speakers explain school policies or rules related to technology or network usage.
Phrase: Explaining school policies.

17.
Concepts: engaging with the community
Relationship: Engaging with the community implies maintaining communication, encouraging discussion, and facilitating engagement.
Criteria: Designers engage with the community through communication, discussion, and facilitation.
Phrase: Engaging with the community.