You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: sharing past incidents, sharing reflective classroom experiences
- Users relate or share past incidents or experiences related to the Physics Lab online community.
- Users share reflective thoughts or opinions about the Physics Lab in a classroom or educational setting.

2.
Concepts: acknowledging community expertise, acknowledging experts
- A recognition or acknowledgment of community expertise or knowledge.
- Users pay homage or show respect to experts in the field by acknowledging their expertise or contributions in the online community.

3.
Concepts: providing contextual information, provides context for user expertise
- Users provide context about their involvement or situation.
- Providing context about users' expertise, experience, or background.

4.
Concepts: uses emoticon, expressive language
- The speaker is using an emoticon to convey a tone or emotion.
- A statement or message that uses emotive language or emojis.

5.
Concepts: advocating for quality, valuing design quality
- Designers emphasize or strive for quality or excellence.
- Users value or emphasize the importance of design quality.

6.
Concepts: expressing gratitude and commitment, expressing gratitude or appreciation
- Designer expresses gratitude and commits to improving the application.
- Users or designers explicitly convey gratitude or appreciation towards others.

7.
Concepts: acknowledging progress, reacting positively to progress
- Users acknowledge progress, appreciate updates, and praise development.
- Reacting positively to the progress or development of the software.

8.
Concepts: sharing limitations, explaining technology limitations
- User shares experience or reason for limited access.
- Users explain limitations in classroom technology or connectivity issues.

9.
Concepts: clarifying limitations, addressing limitations
- Designers clarify limitations or system capabilities.
- User or designer explains why a limitation can be addressed or overcome.

10.
Concepts: identifying gaps, highlighting software limitations and institutional constraints
- User identifies gaps or limitations in existing software or tools.
- A designer highlights software limitations or institutional constraints that affect the software's use.

11.
Concepts: explaining requests, explain intention
- User explains the reasons behind their request.
- A user explains the intention or context behind their question or statement.

12.
Concepts: asking questions, seeking information
- User asks questions and seeks specific information.
- User seeks information or clarification on a specific topic.

13.
Concepts: requesting new features, expressing feature requests for convenience
- Users express desire or interest in specific features or functionalities.
- User expresses hopes for convenient features or teacher-friendly functionality, and designer considers it.

14.
Concepts: user investment, expressing interest in software development
- Users show investment or interest in the software's development.
- Users express interest in using or accessing the platform and its development updates.

15.
Concepts: engaging with suggestions, sharing potential solutions
- Users engage with a suggestion or idea, or suggest collaboration.
- User shares potential solutions or ideas for the platform.

16.
Concepts: contributing to development, expressing needs for product enhancement
- Users contribute to product development with ideas or requests.
- Users express needs for software improvement and engage in discussions for product enhancement.

17.
Concepts: providing feedback, providing detailed feedback
- User provides feedback, suggestions, or opinions on the software or its features.
- A user provides detailed feedback or suggestions.

18.
Concepts: requesting multi-platform support, requesting cross-platform access
- Requesting support or availability for multiple platforms.
- Users request access to the platform on multiple devices and express interest in platform accessibility.

19.
Concepts: explain feature use, explaining tool features
- Designers explain how to use a feature and its purpose.
- Informing users about existing features or functionalities.

20.
Concepts: providing software context, suggesting practical applications
- Designer provides context about software use or functionality.
- Designers suggest practical applications or uses for the software.

21.
Concepts: support educational use, demonstrating educational relevance
- Designer supports educational use of the software.
- Designers imply or suggest the potential effectiveness or impact of the software as an educational tool.

22.
Concepts: explaining technical complexity, explaining development complexity
- A designer explains complex technical concepts and provides technical explanations.
- Designers explain the complexity or challenges of an upcoming release or update.

23.
Concepts: explaining development process, demonstrating transparency
- Designer explains the development process or methodology.
- Designer demonstrates transparency and shares information about the development process.

24.
Concepts: clarifying features and design choices, promoting and ensuring mutual understanding
- A designer clarifies features or design choices and educates users.
- A designer promotes understanding and ensures mutual understanding through explanations or clarifications.

25.
Concepts: discuss feature development, discuss future directions
- Designers discuss further interests or potential features, and consider feature development.
- Designers discuss or consider future plans or expansions, and inquire about expanding to other domains.

26.
Concepts: outline future plans, plan for improvements
- Designers outline future plans or capabilities, and demonstrate long-term thinking or planning.
- Designers plan or discuss future updates or developments, and detail planned features or functionalities.

27.
Concepts: informing about development plans, notifying of consultation plans
- Designer informs users about a development plan or resource.
- Designer notifies the community of consultation plans and announces the consultation.

28.
Concepts: seeking consensus, managing project scope and engaging in collaborative decision-making
- Designers seek consensus and facilitate collective decision-making.
- Designer manages project scope, plans to gather more opinions, and engages in collaborative decision-making.

29.
Concepts: providing design input, supporting design ideas
- Users provide input or suggest design choices.
- Users support design ideas and validate designers' plans.

30.
Concepts: outlines focus areas, explain focus areas
- Designer outlines the focus on electricity and mechanics.
- Designers explain focus areas or priorities, and explain their current focus or priority.

31.
Concepts: share update previews, announce update availability
- Designers provide previews of upcoming updates or features, including visual updates.
- Designers introduce or preview the content of an update or new release.

32.
Concepts: explain changes, updating simulation components
- Designers inform users about changes in the simulation.
- Designer modifies or updates simulation components based on user feedback.
===
Here are the definitions for each code:

---
1.
Concepts: sharing past incidents, sharing reflective classroom experiences
Relationship: Users share personal experiences and thoughts about the Physics Lab online community.
Criteria: Users share past incidents or reflective thoughts about the Physics Lab in a classroom or educational setting.
Phrase: Sharing reflective experiences

2.
Concepts: acknowledging community expertise, acknowledging experts
Relationship: Users recognize and respect the expertise of others in the online community.
Criteria: Users acknowledge community expertise or knowledge and show respect to experts in the field.
Phrase: Acknowledging expertise

3.
Concepts: providing contextual information, provides context for user expertise
Relationship: Users provide background information about themselves or their situation.
Criteria: Users provide context about their involvement or situation and expertise, experience, or background.
Phrase: Providing context

4.
Concepts: uses emoticon, expressive language
Relationship: Users convey emotions or tone through language or emojis.
Criteria: Users use emoticons or emotive language to convey a tone or emotion.
Phrase: Expressing emotion

5.
Concepts: advocating for quality, valuing design quality
Relationship: Designers and users emphasize the importance of quality in design.
Criteria: Designers and users value or emphasize the importance of design quality.
Phrase: Valuing quality

6.
Concepts: expressing gratitude and commitment, expressing gratitude or appreciation
Relationship: Designers and users express appreciation and commitment to improving the application.
Criteria: Designers and users explicitly convey gratitude or appreciation towards others.
Phrase: Expressing gratitude

7.
Concepts: acknowledging progress, reacting positively to progress
Relationship: Users acknowledge and appreciate progress or development.
Criteria: Users acknowledge progress, appreciate updates, and praise development.
Phrase: Acknowledging progress

8.
Concepts: sharing limitations, explaining technology limitations
Relationship: Users share experiences or reasons for limited access.
Criteria: Users share experiences or reasons for limited access and explain limitations in classroom technology or connectivity issues.
Phrase: Sharing limitations

9.
Concepts: clarifying limitations, addressing limitations
Relationship: Designers clarify limitations or system capabilities.
Criteria: Designers clarify limitations or system capabilities and explain why a limitation can be addressed or overcome.
Phrase: Clarifying limitations

10.
Concepts: identifying gaps, highlighting software limitations and institutional constraints
Relationship: Users and designers identify gaps or limitations in existing software or tools.
Criteria: Users and designers identify gaps or limitations in existing software or tools and highlight software limitations or institutional constraints.
Phrase: Identifying gaps

11.
Concepts: explaining requests, explain intention
Relationship: Users explain the reasons behind their requests.
Criteria: Users explain the reasons behind their requests and explain the intention or context behind their question or statement.
Phrase: Explaining requests

12.
Concepts: asking questions, seeking information
Relationship: Users seek specific information or clarification.
Criteria: Users ask questions and seek specific information or clarification on a specific topic.
Phrase: Asking questions

13.
Concepts: requesting new features, expressing feature requests for convenience
Relationship: Users express desire or interest in specific features or functionalities.
Criteria: Users express desire or interest in specific features or functionalities and express hopes for convenient features or teacher-friendly functionality.
Phrase: Requesting features

14.
Concepts: user investment, expressing interest in software development
Relationship: Users show investment or interest in the software's development.
Criteria: Users show investment or interest in the software's development and express interest in using or accessing the platform and its development updates.
Phrase: Expressing interest

15.
Concepts: engaging with suggestions, sharing potential solutions
Relationship: Users engage with suggestions or ideas and share potential solutions.
Criteria: Users engage with suggestions or ideas and share potential solutions or ideas for the platform.
Phrase: Engaging with suggestions

16.
Concepts: contributing to development, expressing needs for product enhancement
Relationship: Users contribute to product development with ideas or requests.
Criteria: Users contribute to product development with ideas or requests and express needs for software improvement and engage in discussions for product enhancement.
Phrase: Contributing to development

17.
Concepts: providing feedback, providing detailed feedback
Relationship: Users provide feedback, suggestions, or opinions on the software or its features.
Criteria: Users provide feedback, suggestions, or opinions on the software or its features and provide detailed feedback or suggestions.
Phrase: Providing feedback

18.
Concepts: requesting multi-platform support, requesting cross-platform access
Relationship: Users request support or availability for multiple platforms.
Criteria: Users request support or availability for multiple platforms and express interest in platform accessibility.
Phrase: Requesting multi-platform support

19.
Concepts: explain feature use, explaining tool features
Relationship: Designers explain how to use a feature and its purpose.
Criteria: Designers explain how to use a feature and its purpose and inform users about existing features or functionalities.
Phrase: Explaining feature use

20.
Concepts: providing software context, suggesting practical applications
Relationship: Designers provide context about software use or functionality.
Criteria: Designers provide context about software use or functionality and suggest practical applications or uses for the software.
Phrase: Providing software context

21.
Concepts: support educational use, demonstrating educational relevance
Relationship: Designers support educational use of the software.
Criteria: Designers support educational use of the software and imply or suggest the potential effectiveness or impact of the software as an educational tool.
Phrase: Supporting educational use

22.
Concepts: explaining technical complexity, explaining development complexity
Relationship: Designers explain complex technical concepts and provide technical explanations.
Criteria: Designers explain complex technical concepts and provide technical explanations and explain the complexity or challenges of an upcoming release or update.
Phrase: Explaining technical complexity

23.
Concepts: explaining development process, demonstrating transparency
Relationship: Designers explain the development process or methodology.
Criteria: Designers explain the development process or methodology and demonstrate transparency and share information about the development process.
Phrase: Explaining development process

24.
Concepts: clarifying features and design choices, promoting and ensuring mutual understanding
Relationship: Designers clarify features or design choices and educate users.
Criteria: Designers clarify features or design choices and educate users and promote understanding and ensure mutual understanding through explanations or clarifications.
Phrase: Clarifying features

25.
Concepts: discuss feature development, discuss future directions
Relationship: Designers discuss further interests or potential features and consider feature development.
Criteria: Designers discuss further interests or potential features and consider feature development and discuss or consider future plans or expansions.
Phrase: Discussing feature development

26.
Concepts: outline future plans, plan for improvements
Relationship: Designers outline future plans or capabilities and demonstrate long-term thinking or planning.
Criteria: Designers outline future plans or capabilities and plan for improvements and detail planned features or functionalities.
Phrase: Outlining future plans

27.
Concepts: informing about development plans, notifying of consultation plans
Relationship: Designers inform users about a development plan or resource.
Criteria: Designers inform users about a development plan or resource and notify the community of consultation plans and announce the consultation.
Phrase: Informing about development plans

28.
Concepts: seeking consensus, managing project scope and engaging in collaborative decision-making
Relationship: Designers seek consensus and facilitate collective decision-making.
Criteria: Designers seek consensus and facilitate collective decision-making and manage project scope, plan to gather more opinions, and engage in collaborative decision-making.
Phrase: Seeking consensus

29.
Concepts: providing design input, supporting design ideas
Relationship: Users provide input or suggest design choices and support design ideas.
Criteria: Users provide input or suggest design choices and support design ideas and validate designers' plans.
Phrase: Providing design input

30.
Concepts: outlines focus areas, explain focus areas
Relationship: Designers outline the focus on electricity and mechanics.
Criteria: Designers outline the focus on electricity and mechanics and explain focus areas or priorities and explain their current focus or priority.
Phrase: Outlining focus areas

31.
Concepts: share update previews, announce update availability
Relationship: Designers provide previews of upcoming updates or features.
Criteria: Designers provide previews of upcoming updates or features and introduce or preview the content of an update or new release.
Phrase: Sharing update previews

32.
Concepts: explain changes, updating simulation components
Relationship: Designers inform users about changes in the simulation.
Criteria: Designers inform users about changes in the simulation and modify or update simulation components based on user feedback.
Phrase: Explaining changes