You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: design philosophy, design principles
- A designer explains their design philosophy or approach.
- Explaining the design philosophy or approach behind the product.
- Designer explains or discusses the underlying principles or philosophy behind the design.

2.
Concepts: provide rationale, rationale explanation
- A user provides a rationale or explanation for a statement or action.
- The rationale or reason behind a decision or action is explained.

3.
Concepts: explain design choice, gave rationale for development decision
- Designer explains the reasoning behind a design choice or decision.
- The designer explains the rationale or reasoning behind a development decision.

4.
Concepts: providing reason, acknowledging reason
- A designer provides a reason or justification for their actions.
- A designer confirms or acknowledges a reason or statement.

5.
Concepts: address ambiguity, addressed ambiguity
- A designer addresses ambiguity or clarifies a point.
- The designer addresses ambiguity or clarifies a point.

6.
Concepts: clarifying features, clarified functionality
- A designer clarifies the features or functionality of a design.
- The designer clarifies the functionality of a component or feature.

7.
Concepts: clarification, technical clarification
- A designer clarifies a point or provides additional information.
- The designer clarifies or explains a technical detail or concept.

8.
Concepts: clarifies version type, clarified version information
- The designer clarifies the type of version being referred to.
- Designer 1 clarifies version information or differences.

9.
Concepts: technical consideration, consider technical requirements, discuss technical requirements
- Designer considers or discusses potential technical solutions.
- A designer considers technical requirements or constraints in a specific context.
- A designer discusses technical requirements or compatibility issues.

10.
Concepts: providing transparency, maintain transparency
- The designer provides transparent information about the development process, timelines, or challenges.
- The designer maintains transparency by sharing information about the development process, updates, or plans.

11.
Concepts: comparing complexities, feature complexity comparisons
- The designer compares the complexities of different features or updates.
- Comparisons of feature complexity or difficulty from designers or developers.

12.
Concepts: explaining complexity, designer explains complexity
- A designer explains the complexity of a design or feature.
- The designer explains the complexity of updates or features, providing insight into the development process.

13.
Concepts: reflect on experiences, reflected on past experience
- Designer reflects on past experiences or lessons learned.
- The designer reflects on past experiences or events related to the app or its development.

14.
Concepts: design thoughts, development insights
- A designer shares their thoughts or ideas about the design or development process.
- A designer shares insights or behind-the-scenes information about the development process.

15.
Concepts: bidirectional conversion benefits, explain bidirectional conversion
- Designer explains the benefits of bidirectional conversion.
- Explaining the functionality or benefits of bidirectional conversion.
- The designer explains a specific feature or functionality, such as bidirectional conversion.

16.
Concepts: explain design goals, explained app design intention
- A designer explains the design goals or intentions behind a feature or process.
- The designer explains the intention or goal behind the design of the app.

17.
Concepts: clarifying purpose, explains the need
- Designer clarifies the purpose or intention behind a feature.
- The designer explains the need or purpose behind a particular feature or development.

18.
Concepts: feature example, provided examples, feature examples, give an example of the feature's functions
- Designer provides an example of a feature or functionality.
- The designer provides examples to illustrate a point or functionality.
- The designer provides examples or illustrations of a feature or functionality.
- A designer provides an example or illustration to explain the function or use of a feature.

19.
Concepts: feature explanation, explain functionality, providing explanations, provided detailed explanation
- Designer explains the functionality or purpose of a feature.
- A designer provides detailed information or explanations about a feature or functionality.
- A designer explains the design or functionality of a specific feature or experiment.
- A designer explains the functionality of a feature or component.
- Providing an explanation for a feature, functionality, or design decision.
- Designer provides a detailed explanation of a feature or concept.

20.
Concepts: educational emphasis, educational utility
- Highlighting the educational value or potential of a feature or tool
- Highlighting the educational value or utility of the software or its components.

21.
Concepts: highlight educational utility, detailing educational benefits
- A designer highlights the educational utility or benefits of a feature.
- The designer explains the educational benefits or advantages of a specific feature or update.

22.
Concepts: component features, highlighting component capabilities
- Designer highlights a feature or component's capabilities.
- The designer supports or highlights the capabilities of a specific component or feature.

23.
Concepts: clarifying feature functionality, device functionality clarification
- The designer clarifies the functionality of a feature, such as touch screens.
- Designer clarifies the functionality of a feature on a specific device (e.g., touch screen).

24.
Concepts: provide information, touch screen capabilities
- Designer provides information about touch screens.
- Designer informs about touch screen capabilities.

25.
Concepts: instructions, gave usage instructions, providing instructions
- A designer provides instructions or guidance on using a specific feature or functionality.
- The designer provides instructions or guidance on how to use the app or its features.
- The designer provides instructions or guidance on how to use the app or a specific feature.
- Providing specific instructions or guidance on how to use a feature.

26.
Concepts: resource sharing
- Sharing resources, such as plans, addresses, or files, with the community
- A designer shares a link to download a resource, such as an update or user manual.

27.
Concepts: addressed specific user
- The designer addresses a specific user or responds to their message.
- The designer addresses a specific user or responds to their question.

28.
Concepts: potential issue acknowledgement
- Designer acknowledges a potential issue or limitation.
- Designer acknowledges potential issue with XP compatibility.

29.
Concepts: community engagement
- A community member or designer engages with others in the online community, exchanging information or ideas.
- A user engages with the community, asking questions or responding to others.
- Designer engages with the community by sharing updates, features, and timelines.
- Engagements in community discussions or debates from users.

30.
Concepts: technical inquiry
- User asks a question about technical aspects of the software.
- A question is asked about the technical conditions or requirements.

31.
Concepts: practical advice
- Designer provides practical advice or tips.
- A designer provides practical advice or tips related to the product or service.

32.
Concepts: providing additional information
- A designer adds more specific information or criteria to an answer.
- Provision of additional information or details about a feature or functionality.
===
Here are the definitions for each code:

---
1.
Concepts: design philosophy, design principles
Relationship: The concepts are related as a design philosophy guides the development of design principles.
Criteria: A designer explains their design approach or underlying principles.
Phrase: Explaining design philosophy

2.
Concepts: provide rationale, rationale explanation
Relationship: The concepts are related as providing a rationale involves explaining the reason behind a decision or action.
Criteria: A user explains the reason behind a statement or action.
Phrase: Providing rationale

3.
Concepts: explain design choice, gave rationale for development decision
Relationship: The concepts are related as explaining a design choice involves providing a rationale for a development decision.
Criteria: A designer explains the reasoning behind a design choice or decision.
Phrase: Explaining design choices

4.
Concepts: providing reason, acknowledging reason
Relationship: The concepts are related as providing a reason involves acknowledging the reason behind an action.
Criteria: A designer provides a reason or justification for their actions.
Phrase: Providing reasons

5.
Concepts: address ambiguity, addressed ambiguity
Relationship: The concepts are related as addressing ambiguity involves clarifying a point to remove confusion.
Criteria: A designer addresses ambiguity or clarifies a point.
Phrase: Addressing ambiguity

6.
Concepts: clarifying features, clarified functionality
Relationship: The concepts are related as clarifying features involves explaining their functionality.
Criteria: A designer clarifies the features or functionality of a design.
Phrase: Clarifying features

7.
Concepts: clarification, technical clarification
Relationship: The concepts are related as clarification involves providing additional information to explain a technical point.
Criteria: A designer clarifies a point or provides additional information.
Phrase: Providing clarification

8.
Concepts: clarifies version type, clarified version information
Relationship: The concepts are related as clarifying version type involves providing information about the version.
Criteria: A designer clarifies the type of version being referred to.
Phrase: Clarifying version information

9.
Concepts: technical consideration, consider technical requirements, discuss technical requirements
Relationship: The concepts are related as considering technical requirements involves discussing potential technical solutions.
Criteria: A designer considers technical requirements or constraints in a specific context.
Phrase: Considering technical requirements

10.
Concepts: providing transparency, maintain transparency
Relationship: The concepts are related as providing transparency involves maintaining openness about the development process.
Criteria: A designer provides transparent information about the development process, timelines, or challenges.
Phrase: Providing transparency

11.
Concepts: comparing complexities, feature complexity comparisons
Relationship: The concepts are related as comparing complexities involves evaluating the difficulty of different features or updates.
Criteria: A designer compares the complexities of different features or updates.
Phrase: Comparing complexities

12.
Concepts: explaining complexity, designer explains complexity
Relationship: The concepts are related as explaining complexity involves providing insight into the development process.
Criteria: A designer explains the complexity of a design or feature.
Phrase: Explaining complexity

13.
Concepts: reflect on experiences, reflected on past experience
Relationship: The concepts are related as reflecting on experiences involves sharing lessons learned from past events.
Criteria: A designer reflects on past experiences or lessons learned.
Phrase: Reflecting on experiences

14.
Concepts: design thoughts, development insights
Relationship: The concepts are related as sharing design thoughts involves providing insights into the development process.
Criteria: A designer shares their thoughts or ideas about the design or development process.
Phrase: Sharing design thoughts

15.
Concepts: bidirectional conversion benefits, explain bidirectional conversion
Relationship: The concepts are related as explaining bidirectional conversion involves highlighting its benefits.
Criteria: A designer explains the benefits of bidirectional conversion.
Phrase: Explaining bidirectional conversion

16.
Concepts: explain design goals, explained app design intention
Relationship: The concepts are related as explaining design goals involves sharing the intention behind a feature or process.
Criteria: A designer explains the design goals or intentions behind a feature or process.
Phrase: Explaining design goals

17.
Concepts: clarifying purpose, explains the need
Relationship: The concepts are related as clarifying purpose involves explaining the need or intention behind a feature.
Criteria: A designer clarifies the purpose or intention behind a feature.
Phrase: Clarifying purpose

18.
Concepts: feature example, provided examples, feature examples, give an example of the feature's functions
Relationship: The concepts are related as providing examples involves illustrating a point or functionality.
Criteria: A designer provides an example of a feature or functionality.
Phrase: Providing examples

19.
Concepts: feature explanation, explain functionality, providing explanations, provided detailed explanation
Relationship: The concepts are related as explaining a feature involves providing detailed information about its functionality.
Criteria: A designer explains the functionality or purpose of a feature.
Phrase: Explaining features

20.
Concepts: educational emphasis, educational utility
Relationship: The concepts are related as highlighting educational value involves emphasizing the utility of a feature or tool.
Criteria: A designer highlights the educational value or potential of a feature or tool.
Phrase: Highlighting educational value

21.
Concepts: highlight educational utility, detailing educational benefits
Relationship: The concepts are related as highlighting educational utility involves explaining the benefits of a feature or update.
Criteria: A designer highlights the educational utility or benefits of a feature.
Phrase: Highlighting educational utility

22.
Concepts: component features, highlighting component capabilities
Relationship: The concepts are related as highlighting component features involves explaining their capabilities.
Criteria: A designer highlights a feature or component's capabilities.
Phrase: Highlighting component features

23.
Concepts: clarifying feature functionality, device functionality clarification
Relationship: The concepts are related as clarifying feature functionality involves explaining how a feature works on a specific device.
Criteria: A designer clarifies the functionality of a feature on a specific device.
Phrase: Clarifying feature functionality

24.
Concepts: provide information, touch screen capabilities
Relationship: The concepts are related as providing information involves explaining the capabilities of a feature, such as touch screens.
Criteria: A designer provides information about touch screens.
Phrase: Providing information

25.
Concepts: instructions, gave usage instructions, providing instructions
Relationship: The concepts are related as providing instructions involves guiding users on how to use a feature or functionality.
Criteria: A designer provides instructions or guidance on using a specific feature or functionality.
Phrase: Providing instructions

26.
Concepts: resource sharing
Relationship: N/A
Criteria: A designer shares resources, such as plans, addresses, or files, with the community.
Phrase: Sharing resources

27.
Concepts: addressed specific user
Relationship: N/A
Criteria: A designer addresses a specific user or responds to their message.
Phrase: Addressing users

28.
Concepts: potential issue acknowledgement
Relationship: N/A
Criteria: A designer acknowledges a potential issue or limitation.
Phrase: Acknowledging issues

29.
Concepts: community engagement
Relationship: N/A
Criteria: A community member or designer engages with others in the online community, exchanging information or ideas.
Phrase: Engaging with the community

30.
Concepts: technical inquiry
Relationship: N/A
Criteria: A user asks a question about technical aspects of the software.
Phrase: Asking technical questions

31.
Concepts: practical advice
Relationship: N/A
Criteria: A designer provides practical advice or tips.
Phrase: Providing practical advice

32.
Concepts: providing additional information
Relationship: N/A
Criteria: A designer adds more specific information or criteria to an answer.
Phrase: Providing additional information