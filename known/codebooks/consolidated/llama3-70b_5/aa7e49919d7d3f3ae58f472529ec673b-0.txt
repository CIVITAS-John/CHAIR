You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (11 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
11. 
Concepts: {Repeat the input 11}
Relationship: {What is logical relationship between concepts in code 11, or N/A if not applicable}
Criteria: {Who did what, and how for code 11}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: acknowledging potential issues and design limitations, discussing system limitations and considering technical constraints
- Designers acknowledge potential issues and recognize design limitations.
- Designers discuss system limitations and consider technical constraints.

2.
Concepts: seek consensus, consult the community
- A designer seeks consensus or agreement from the community on a particular issue or feature.
- A designer or developer consults the community for opinions or feedback.

3.
Concepts: propose design ideas, seeking interaction suggestions
- Designers propose design ideas, accept suggestions, and request feedback from users.
- Designers seek suggestions for interactions or suggest collaboration.

4.
Concepts: discuss software updates, engaging users with updates
- Designers discuss software updates and manage version releases with users.
- Users are engaged with updates, new releases, or changes to the software.

5.
Concepts: share development updates, providing update notifications
- Designers share updates about development progress, release process, and schedules with users.
- Designers notify users of updates, provide progress updates, or highlight update frequency.

6.
Concepts: collaborative planning, sharing development plans and planning for the future
- Designers and users collaboratively discussing and planning the development of the software.
- Designers share development plans and plan for future design and development.

7.
Concepts: troubleshooting issues, collaborating on problem-solving
- Designers identify and address usability issues and troubleshoot problems.
- Designers and users work together to address issues and improve the product.

8.
Concepts: inform about ideal components, explain design principles
- The designer informs users about ideal components or their properties.
- Designers explain design principles, intentions, feature importance, and component functionality to users.

9.
Concepts: explain development plans, explaining development decisions
- Designers explain plans, project focus, and development plans to users.
- Designers explain the rationale or justification behind a development decision.

10.
Concepts: express praise, expressing enthusiasm
- Users express praise and admiration for simulation effects or features.
- Users express enthusiasm or appreciation for the visual design or aesthetic.

11.
Concepts: welcoming users, user interaction and gratitude
- Designers greet or welcome users, or respond to greetings.
- A user interacts with the designer and expresses gratitude.
===
Here are the definitions for each code:

---
1.
Concepts: acknowledging potential issues and design limitations, discussing system limitations and considering technical constraints
Relationship: The concepts are related as they all involve designers recognizing and addressing potential problems or limitations in the system.
Criteria: Designers acknowledge and discuss potential issues, limitations, and technical constraints.
Phrase: Acknowledge and discuss limitations.

2.
Concepts: seek consensus, consult the community
Relationship: The concepts are related as they both involve designers seeking input or feedback from the community.
Criteria: Designers seek consensus or consult the community for opinions or feedback.
Phrase: Seek community input.

3.
Concepts: propose design ideas, seeking interaction suggestions
Relationship: The concepts are related as they both involve designers seeking feedback or input from users on design ideas or interactions.
Criteria: Designers propose ideas and seek suggestions or feedback from users.
Phrase: Propose and seek feedback.

4.
Concepts: discuss software updates, engaging users with updates
Relationship: The concepts are related as they both involve designers communicating with users about software updates.
Criteria: Designers discuss and engage users with software updates.
Phrase: Discuss updates with users.

5.
Concepts: share development updates, providing update notifications
Relationship: The concepts are related as they both involve designers sharing information about development progress with users.
Criteria: Designers share updates and notify users of progress.
Phrase: Share development updates.

6.
Concepts: collaborative planning, sharing development plans and planning for the future
Relationship: The concepts are related as they both involve designers working with users to plan and develop the software.
Criteria: Designers collaborate with users and share development plans.
Phrase: Collaborate on development plans.

7.
Concepts: troubleshooting issues, collaborating on problem-solving
Relationship: The concepts are related as they both involve designers working with users to identify and address problems.
Criteria: Designers troubleshoot and collaborate with users to solve problems.
Phrase: Troubleshoot with users.

8.
Concepts: inform about ideal components, explain design principles
Relationship: The concepts are related as they both involve designers educating users about design elements or principles.
Criteria: Designers inform users about ideal components and explain design principles.
Phrase: Inform about design elements.

9.
Concepts: explain development plans, explaining development decisions
Relationship: The concepts are related as they both involve designers providing explanations or justifications for development plans or decisions.
Criteria: Designers explain plans and justify development decisions.
Phrase: Explain development decisions.

10.
Concepts: express praise, expressing enthusiasm
Relationship: The concepts are related as they both involve users expressing positive emotions towards the software.
Criteria: Users express praise and enthusiasm for the software.
Phrase: Express praise and enthusiasm.

11.
Concepts: welcoming users, user interaction and gratitude
Relationship: The concepts are related as they both involve designers and users interacting in a positive and respectful manner.
Criteria: Designers welcome users and users express gratitude.
Phrase: Welcome and express gratitude.