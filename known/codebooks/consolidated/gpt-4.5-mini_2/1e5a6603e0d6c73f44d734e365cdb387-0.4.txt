You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (27 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
27. 
Concepts: {Repeat the input 27}
Relationship: {What is logical relationship between concepts in code 27, or N/A if not applicable}
Criteria: {Who did what, and how for code 27}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: personal interest, express personal interest
- Designer shares their personal interests related to the subject matter of the community.
- A designer shares their personal interest in a related subject area.

2.
Concepts: group sharing, suggest group sharing
- A designer mentions the concept of sharing resources within the community.
- Designers suggest collaborative sharing of resources or information among community members.

3.
Concepts: feedback loop, community feedback loop
- Processes where user feedback is solicited and incorporated into design decisions.
- The process of collecting, considering, and implementing user feedback.
- Instances where users provide feedback on the software and designers respond to it.

4.
Concepts: invite feedback, elicit feedback, encouraging feedback, solicit suggestions
- Designer invites users to provide feedback and suggestions for future updates.
- A designer invites users to share additional feature requests for future updates.
- The designer invites users to provide more suggestions for improvement.
- The designer invites users to provide additional suggestions for improvements.

5.
Concepts: suggestions of interactions, solicit suggestions and requirements
- The designer encourages users to share their suggestions or requirements for the software.
- A designer invites users to share their suggestions and requirements.

6.
Concepts: encourage feedback, encouragement of user feedback, encouraging interaction
- The designer actively solicits input and suggestions from users to improve the project.
- Instances where designers encourage users to provide suggestions or feedback.
- A designer encourages users to engage and provide feedback on features.

7.
Concepts: seeking input, feedback solicitation, inquiring user input for future iterations
- Designers actively seek suggestions or feedback from community members to improve the software.
- Designers solicit feedback or suggestions from users regarding features or improvements for the software.
- Designers invite users to provide input for future software iterations.

8.
Concepts: gather user feedback, user experience feedback
- A designer asks users about their experiences to improve the product.
- Designer asks users for feedback on their experiences with the software.

9.
Concepts: seeking feedback, user feedback request, prompting user feedback
- A designer prompts users for feedback on features and improvements.
- Designer requests feedback or suggestions from users.
- A designer prompts users for feedback and suggestions.

10.
Concepts: plan for iterative feedback, iterative development based on user feedback
- A designer plans to gather user opinions before starting new development.
- A designer outlines plans for updates based on user feedback.

11.
Concepts: feedback, reaction to feedback, taking feedback
- The designer indicates that feedback will be prioritized in the development process.
- The designer reacts to user feedback by indicating future updates and priorities.
- A designer indicates that user feedback will be incorporated in the next update.

12.
Concepts: promise future consultation, announce future consultation
- The designer commits to consulting the community before starting new development phases.
- Designers indicate plans to consult with the community before making decisions, emphasizing inclusivity.

13.
Concepts: opinion gathering, seeking community input
- Designers plan to gather user opinions before proceeding with new developments, ensuring community involvement.
- Designer actively seeks feedback or opinions from the community before proceeding.

14.
Concepts: user input, gather user input
- Designer indicates plans to gather user opinions before proceeding.
- A designer gathers user input on specific design elements.

15.
Concepts: student engagement, describe students' positive responses in class, illustrate classroom success, share positive feedback, sharing classroom experiences
- User shares positive feedback about the software's impact on students.
- A user describes positive reactions from students regarding the software's effectiveness in class.
- Users share positive experiences of using the software in educational settings.
- A user shares positive feedback about the software's effectiveness in a classroom setting.
- A user shares a positive experience using the software in a classroom setting.

16.
Concepts: comparison to similar apps, comparison with other applications, compare with other software
- A user compares the software favorably to similar applications.
- A user compares the software favorably against other applications.
- A user compares the application favorably to other software, highlighting its practicality.

17.
Concepts: comparison, comparative feedback
- A user makes a comparison related to the software or its features.
- Users provide feedback comparing the software's practicality to other software.

18.
Concepts: user reviews, software usability, highlight practicality, usability and practicality
- User provides a positive review of the software's practicality.
- User praises the software for its practicality and ease of use compared to other software.
- User expresses satisfaction with the software's practicality compared to others.
- User comments on the ease of use and practicality of the software.

19.
Concepts: compliment on the 3d effect, compliment software's 3d effect
- A user compliments the quality of the 3D effects in the software.
- A user compliments the quality of the 3D effect in the software.

20.
Concepts: user satisfaction, user satisfaction with software features
- Users express satisfaction with the software's functionality and design.
- Users express satisfaction with the software's functionality and usability.

21.
Concepts: appreciation of features, feature appreciation
- Users express appreciation for specific features of the software.
- Users express positive sentiments about the development and features of the software.

22.
Concepts: positive, praise software, positive feedback
- Users express positive feedback about the software's functionality and design.
- Users provide positive feedback about the software's effectiveness and usability, often comparing it favorably to other options.
- Users express satisfaction and appreciation for the software's performance and features.

23.
Concepts: update confirmation, confirm update completion
- User confirms that they have completed an update.
- User confirms that they have completed an update to the software.

24.
Concepts: user acknowledgment, expressing acknowledgement
- A user acknowledges a previous statement or update with a simple response.
- A user acknowledges a statement or request with a simple affirmative response.

25.
Concepts: short response, positive response
- A user provides a brief affirmative response.
- Users provide affirmative responses to inquiries or statements.

26.
Concepts: acceptance of request, accepting suggestion, agree to implement suggestion, accepting the suggestion
- Designer agrees to incorporate a user's request in a future update.
- A designer agrees to implement a user suggestion in the next software update.
- Designer agrees to implement a user's suggestion in future updates.
- Designer acknowledges and agrees to implement a user's suggestion.

27.
Concepts: promise to improve, designer acknowledgment
- The designer expresses gratitude for user support and commits to future improvements.
- A designer acknowledges user requests and commits to future updates.
===
---
Definitions for each code (27 in total):
1.
Concepts: personal interest, express personal interest  
Relationship: The concepts are related as the designer's expression of personal interest reflects their individual engagement with the community's subject matter.  
Criteria: A designer shares their personal interests related to the subject matter of the community.  
Phrase: Share personal interests.

2.
Concepts: group sharing, suggest group sharing  
Relationship: The concepts are interconnected as they both emphasize the importance of collective resource sharing among community members.  
Criteria: Designers suggest collaborative sharing of resources or information within the community.  
Phrase: Suggest group sharing.

3.
Concepts: feedback loop, community feedback loop  
Relationship: The concepts are related as they describe a cyclical process where user feedback informs design decisions and improvements.  
Criteria: Processes where user feedback is solicited and incorporated into design decisions.  
Phrase: Establish feedback loop.

4.
Concepts: invite feedback, elicit feedback, encouraging feedback, solicit suggestions  
Relationship: The concepts are related as they all involve the designer's proactive approach to gathering user input for enhancements.  
Criteria: A designer invites users to provide feedback and suggestions for future updates.  
Phrase: Invite user feedback.

5.
Concepts: suggestions of interactions, solicit suggestions and requirements  
Relationship: The concepts are connected as they both focus on encouraging users to communicate their needs and preferences for the software.  
Criteria: A designer encourages users to share their suggestions or requirements for the software.  
Phrase: Solicit user suggestions.

6.
Concepts: encourage feedback, encouragement of user feedback, encouraging interaction  
Relationship: The concepts are related as they emphasize the designer's role in fostering an environment where users feel comfortable providing input.  
Criteria: The designer actively solicits input and suggestions from users to improve the project.  
Phrase: Encourage user feedback.

7.
Concepts: seeking input, feedback solicitation, inquiring user input for future iterations  
Relationship: The concepts are interconnected as they all pertain to the designer's efforts to gather user insights for future software improvements.  
Criteria: Designers actively seek suggestions or feedback from community members to improve the software.  
Phrase: Seek user input.

8.
Concepts: gather user feedback, user experience feedback  
Relationship: The concepts are related as they both focus on collecting users' experiences to inform product improvements.  
Criteria: A designer asks users about their experiences to improve the product.  
Phrase: Gather user feedback.

9.
Concepts: seeking feedback, user feedback request, prompting user feedback  
Relationship: The concepts are connected as they all involve the designer's initiative to encourage users to share their thoughts.  
Criteria: A designer prompts users for feedback on features and improvements.  
Phrase: Prompt user feedback.

10.
Concepts: plan for iterative feedback, iterative development based on user feedback  
Relationship: The concepts are related as they describe the designer's strategy to incorporate user feedback into ongoing development processes.  
Criteria: A designer plans to gather user opinions before starting new development.  
Phrase: Plan for iterative feedback.

11.
Concepts: feedback, reaction to feedback, taking feedback  
Relationship: The concepts are interconnected as they illustrate the designer's responsiveness to user feedback in shaping future updates.  
Criteria: The designer indicates that feedback will be prioritized in the development process.  
Phrase: React to feedback.

12.
Concepts: promise future consultation, announce future consultation  
Relationship: The concepts are related as they both emphasize the designer's commitment to involving the community in future development decisions.  
Criteria: The designer commits to consulting the community before starting new development phases.  
Phrase: Promise future consultation.

13.
Concepts: opinion gathering, seeking community input  
Relationship: The concepts are connected as they both focus on the designer's efforts to engage the community in the development process.  
Criteria: Designers plan to gather user opinions before proceeding with new developments.  
Phrase: Gather community input.

14.
Concepts: user input, gather user input  
Relationship: The concepts are related as they both emphasize the importance of collecting user opinions to inform design decisions.  
Criteria: A designer gathers user input on specific design elements.  
Phrase: Gather user input.

15.
Concepts: student engagement, describe students' positive responses in class, illustrate classroom success, share positive feedback, sharing classroom experiences  
Relationship: The concepts are interconnected as they all reflect the positive impact of the software on students' learning experiences.  
Criteria: Users share positive feedback about the software's impact on students.  
Phrase: Share classroom experiences.

16.
Concepts: comparison to similar apps, comparison with other applications, compare with other software  
Relationship: The concepts are related as they involve users evaluating the software in relation to other similar products.  
Criteria: A user compares the software favorably to similar applications.  
Phrase: Compare with similar applications.

17.
Concepts: comparison, comparative feedback  
Relationship: The concepts are connected as they both involve users providing evaluative feedback regarding the software's performance.  
Criteria: A user makes a comparison related to the software or its features.  
Phrase: Provide comparative feedback.

18.
Concepts: user reviews, software usability, highlight practicality, usability and practicality  
Relationship: The concepts are related as they all focus on users' evaluations of the software's effectiveness and ease of use.  
Criteria: User provides a positive review of the software's practicality.  
Phrase: Highlight software usability.

19.
Concepts: compliment on the 3d effect, compliment software's 3d effect  
Relationship: The concepts are connected as they both express users' appreciation for the software's visual features.  
Criteria: A user compliments the quality of the 3D effects in the software.  
Phrase: Compliment 3D effects.

20.
Concepts: user satisfaction, user satisfaction with software features  
Relationship: The concepts are related as they both reflect users' overall contentment with the software's functionality.  
Criteria: Users express satisfaction with the software's functionality and design.  
Phrase: Express user satisfaction.

21.
Concepts: appreciation of features, feature appreciation  
Relationship: The concepts are interconnected as they both involve users recognizing and valuing specific aspects of the software.  
Criteria: Users express appreciation for specific features of the software.  
Phrase: Appreciate software features.

22.
Concepts: positive, praise software, positive feedback  
Relationship: The concepts are related as they all involve users expressing favorable opinions about the software's performance.  
Criteria: Users express positive feedback about the software's functionality and design.  
Phrase: Provide positive feedback.

23.
Concepts: update confirmation, confirm update completion  
Relationship: The concepts are connected as they both indicate users' acknowledgment of completed updates.  
Criteria: User confirms that they have completed an update to the software.  
Phrase: Confirm update completion.

24.
Concepts: user acknowledgment, expressing acknowledgement  
Relationship: The concepts are related as they both involve users recognizing and responding to statements or requests.  
Criteria: A user acknowledges a previous statement or update with a simple response.  
Phrase: Express acknowledgment.

25.
Concepts: short response, positive response  
Relationship: The concepts are interconnected as they both reflect users providing brief affirmative feedback.  
Criteria: A user provides a brief affirmative response.  
Phrase: Provide short response.

26.
Concepts: acceptance of request, accepting suggestion, agree to implement suggestion, accepting the suggestion  
Relationship: The concepts are related as they all involve the designer's agreement to incorporate user suggestions into future updates.  
Criteria: Designer agrees to incorporate a user's request in a future update.  
Phrase: Accept user suggestions.

27.
Concepts: promise to improve, designer acknowledgment  
Relationship: The concepts are connected as they both emphasize the designer's commitment to enhancing the software in response to user feedback.  
Criteria: The designer expresses gratitude for user support and commits to future improvements.  
Phrase: Promise to improve.  
---