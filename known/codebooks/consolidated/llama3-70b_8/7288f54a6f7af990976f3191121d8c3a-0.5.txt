You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: clarify version information, explaining current version, specifying version details
- A designer provides notes or information about version updates.
- A designer explains the current version or functionality of the software.
- A designer specifies details about a particular version of the software.

2.
Concepts: explaining limitations, highlighting technical constraints
- A user explains limitations or constraints they are facing.
- Users highlight technical limitations or constraints.

3.
Concepts: justifying limitations, explaining reasoning
- Justifying limitations or constraints
- Users explain reasons or context for certain restrictions or limitations.

4.
Concepts: acknowledge limitations, clarify system capabilities
- Designer acknowledges a limitation of the software.
- Designer clarifies limitations of the software.

5.
Concepts: solution limitation, system limitation explanation
- Discussing limitations or constraints of a solution
- Explanations of system limitations or constraints.

6.
Concepts: memory constraints, expressing concern about memory, acknowledging limitations of memory
- Expression of concern or limitation due to memory constraints.
- A designer expresses concern about memory or storage limitations.
- A designer acknowledges limitations of memory or resources.

7.
Concepts: considering user context and limitations, considering internet limitations and security
- The designer considers user context and limitations (e.g., internet availability).
- Designer considers limited internet access and security measures.

8.
Concepts: implementation constraints, considering practical constraints
- Considering constraints or limitations that may impact software development.
- A designer considers practical constraints or limitations.

9.
Concepts: specifying platform, identifying user platform
- Designer specifies the platform being referred to.
- User identifies their platform or device.

10.
Concepts: offering cross-platform support, multiple platform availability
- Designer offers support for different platforms.
- A designer mentions the availability of the software on multiple platforms.

11.
Concepts: consider system compatibility, discusses system compatibility
- A designer considers the compatibility of the software with older systems.
- Designer discusses compatibility or migration from older systems to modern devices.

12.
Concepts: software compatibility, system requirements and compatibility
- A designer mentions the software's compatibility with machines from 2008 onwards.
- A designer emphasizes the need for modern machines to run the software smoothly.

13.
Concepts: confirms compatibility, informing about compatibility
- Designer confirms compatibility with specific devices or operating systems.
- Designers inform users about software compatibility or system requirements.

14.
Concepts: sets hardware expectations, states theoretical compatibility, setting compatibility conditions
- The designer sets expectations for hardware compatibility.
- Designer makes statements about theoretical compatibility requirements for the software.
- Designer sets conditions or limitations for compatibility.

15.
Concepts: addressing compatibility issues, exploring compatibility options
- Addressing compatibility issues or limitations
- Exploring compatibility options or discussing technical requirements.

16.
Concepts: expressing compatibility hopes, speculating on compatibility
- User expresses hope or expectation for software compatibility.
- Speculating or discussing the potential compatibility of the software with different platforms or devices.

17.
Concepts: discussing hardware compatibility, hardware compatibility suggestions
- User suggests or discusses the need for compatibility with diverse hardware environments.
- A user suggests a feature improvement considering the limitations of specific hardware.

18.
Concepts: seek download instructions, instructing on downloading
- Users seek instructions on how to download the software.
- Designers instruct on how to download a specific version of the software.

19.
Concepts: seek support, request resources, requesting tutorials
- Users seek support or assistance with using the software.
- Users request documentation or user manuals to support their use of the software.
- Users request tutorials or information on how to use the software.

20.
Concepts: seeking guidance, requesting instructions
- Users seek guidance or clarification on using the platform or its features.
- Users request instructions or guidance on how to perform a task.

21.
Concepts: demonstrating self-reliance, self-initiated problem-solving
- Users demonstrate self-reliance and problem-solving skills.
- User takes initiative to find a solution or help themselves.

22.
Concepts: self-answer, resolving own queries
- Responding to one's own question or providing an answer to a previously asked question.
- Users indicate that they have found a solution or answer on their own.

23.
Concepts: directing to resources, providing resource access
- Designer directs users to a group announcement or resource.
- The designer directs users to access group files.

24.
Concepts: accessing group files, seeking resource access
- User finds or accesses information from group files.
- Users request or access group files or resources.

25.
Concepts: confirms discovery, confirming resource access
- User confirms discovery of download information or resources.
- A user confirms finding or accessing specific information or resources.

26.
Concepts: finding information, locating resources independently
- A user finds information or resources.
- A user takes initiative to locate resources or information independently.

27.
Concepts: explaining feature requests, providing justification
- User explains reasons for requesting a feature.
- Users provide reasons or justifications for their suggestions or requests.

28.
Concepts: explaining situation, describes use case scenario
- User explains their situation or context.
- User explains or describes a use case scenario.

29.
Concepts: explaining the need, needs clarification, expressing user needs
- A user or designer explains the need for something.
- A user clarifies their needs or requirements for the software.
- Users express their needs or requirements for the software.

30.
Concepts: no elaboration, reveals user background and potential use case (refined to "minimal user input")
- A user or designer provides minimal or no additional information.
- A user provides minimal or no information about themselves or their intentions.

31.
Concepts: user background probes, seeking user background
- Probes or questions about users' professions or backgrounds.
- Designers inquire about user's background or experience.

32.
Concepts: provide context, providing user background
- Users provide context about their backgrounds or experiences that influence their needs.
- User provides background information about themselves.
===
Here are the definitions for each code:

---
1.
Concepts: clarify version information, explaining current version, specifying version details
Relationship: The concepts are related as they all involve providing information about the software's version.
Criteria: A designer provides notes or information about version updates, explains the current version or functionality of the software, and specifies details about a particular version of the software.
Phrase: Providing version information.

2.
Concepts: explaining limitations, highlighting technical constraints
Relationship: The concepts are related as they both involve discussing limitations or constraints.
Criteria: A user explains limitations or constraints they are facing, and users highlight technical limitations or constraints.
Phrase: Explaining limitations.

3.
Concepts: justifying limitations, explaining reasoning
Relationship: The concepts are related as they both involve providing reasons or explanations for limitations.
Criteria: Justifying limitations or constraints, and users explain reasons or context for certain restrictions or limitations.
Phrase: Justifying limitations.

4.
Concepts: acknowledge limitations, clarify system capabilities
Relationship: The concepts are related as they both involve recognizing or explaining limitations.
Criteria: Designer acknowledges a limitation of the software, and designer clarifies limitations of the software.
Phrase: Acknowledging limitations.

5.
Concepts: solution limitation, system limitation explanation
Relationship: The concepts are related as they both involve discussing limitations or constraints.
Criteria: Discussing limitations or constraints of a solution, and explanations of system limitations or constraints.
Phrase: Explaining system limitations.

6.
Concepts: memory constraints, expressing concern about memory, acknowledging limitations of memory
Relationship: The concepts are related as they all involve discussing memory limitations.
Criteria: Expression of concern or limitation due to memory constraints, a designer expresses concern about memory or storage limitations, and a designer acknowledges limitations of memory or resources.
Phrase: Expressing memory concerns.

7.
Concepts: considering user context and limitations, considering internet limitations and security
Relationship: The concepts are related as they both involve considering limitations or constraints.
Criteria: The designer considers user context and limitations, and designer considers limited internet access and security measures.
Phrase: Considering user context.

8.
Concepts: implementation constraints, considering practical constraints
Relationship: The concepts are related as they both involve considering limitations or constraints.
Criteria: Considering constraints or limitations that may impact software development, and a designer considers practical constraints or limitations.
Phrase: Considering implementation constraints.

9.
Concepts: specifying platform, identifying user platform
Relationship: The concepts are related as they both involve specifying or identifying a platform.
Criteria: Designer specifies the platform being referred to, and user identifies their platform or device.
Phrase: Specifying platform.

10.
Concepts: offering cross-platform support, multiple platform availability
Relationship: The concepts are related as they both involve discussing platform availability.
Criteria: Designer offers support for different platforms, and a designer mentions the availability of the software on multiple platforms.
Phrase: Offering cross-platform support.

11.
Concepts: consider system compatibility, discusses system compatibility
Relationship: The concepts are related as they both involve discussing system compatibility.
Criteria: A designer considers the compatibility of the software with older systems, and designer discusses compatibility or migration from older systems to modern devices.
Phrase: Discussing system compatibility.

12.
Concepts: software compatibility, system requirements and compatibility
Relationship: The concepts are related as they both involve discussing software compatibility.
Criteria: A designer mentions the software's compatibility with machines from 2008 onwards, and a designer emphasizes the need for modern machines to run the software smoothly.
Phrase: Discussing software compatibility.

13.
Concepts: confirms compatibility, informing about compatibility
Relationship: The concepts are related as they both involve confirming or informing about compatibility.
Criteria: Designer confirms compatibility with specific devices or operating systems, and designers inform users about software compatibility or system requirements.
Phrase: Confirming compatibility.

14.
Concepts: sets hardware expectations, states theoretical compatibility, setting compatibility conditions
Relationship: The concepts are related as they all involve discussing or setting expectations for compatibility.
Criteria: The designer sets expectations for hardware compatibility, designer makes statements about theoretical compatibility requirements for the software, and designer sets conditions or limitations for compatibility.
Phrase: Setting compatibility expectations.

15.
Concepts: addressing compatibility issues, exploring compatibility options
Relationship: The concepts are related as they both involve discussing or exploring compatibility.
Criteria: Addressing compatibility issues or limitations, and exploring compatibility options or discussing technical requirements.
Phrase: Addressing compatibility issues.

16.
Concepts: expressing compatibility hopes, speculating on compatibility
Relationship: The concepts are related as they both involve expressing hopes or speculating about compatibility.
Criteria: User expresses hope or expectation for software compatibility, and speculating or discussing the potential compatibility of the software with different platforms or devices.
Phrase: Expressing compatibility hopes.

17.
Concepts: discussing hardware compatibility, hardware compatibility suggestions
Relationship: The concepts are related as they both involve discussing or suggesting hardware compatibility.
Criteria: User suggests or discusses the need for compatibility with diverse hardware environments, and a user suggests a feature improvement considering the limitations of specific hardware.
Phrase: Discussing hardware compatibility.

18.
Concepts: seek download instructions, instructing on downloading
Relationship: The concepts are related as they both involve seeking or providing instructions for downloading.
Criteria: Users seek instructions on how to download the software, and designers instruct on how to download a specific version of the software.
Phrase: Seeking download instructions.

19.
Concepts: seek support, request resources, requesting tutorials
Relationship: The concepts are related as they all involve seeking help or resources.
Criteria: Users seek support or assistance with using the software, users request documentation or user manuals to support their use of the software, and users request tutorials or information on how to use the software.
Phrase: Seeking support.

20.
Concepts: seeking guidance, requesting instructions
Relationship: The concepts are related as they both involve seeking help or guidance.
Criteria: Users seek guidance or clarification on using the platform or its features, and users request instructions or guidance on how to perform a task.
Phrase: Seeking guidance.

21.
Concepts: demonstrating self-reliance, self-initiated problem-solving
Relationship: The concepts are related as they both involve taking initiative to solve problems.
Criteria: Users demonstrate self-reliance and problem-solving skills, and user takes initiative to find a solution or help themselves.
Phrase: Demonstrating self-reliance.

22.
Concepts: self-answer, resolving own queries
Relationship: The concepts are related as they both involve finding answers or solutions independently.
Criteria: Responding to one's own question or providing an answer to a previously asked question, and users indicate that they have found a solution or answer on their own.
Phrase: Self-answering.

23.
Concepts: directing to resources, providing resource access
Relationship: The concepts are related as they both involve directing or providing access to resources.
Criteria: Designer directs users to a group announcement or resource, and the designer directs users to access group files.
Phrase: Directing to resources.

24.
Concepts: accessing group files, seeking resource access
Relationship: The concepts are related as they both involve accessing or seeking access to resources.
Criteria: User finds or accesses information from group files, and users request or access group files or resources.
Phrase: Accessing group files.

25.
Concepts: confirms discovery, confirming resource access
Relationship: The concepts are related as they both involve confirming access to resources.
Criteria: User confirms discovery of download information or resources, and a user confirms finding or accessing specific information or resources.
Phrase: Confirming resource access.

26.
Concepts: finding information, locating resources independently
Relationship: The concepts are related as they both involve finding or locating resources.
Criteria: A user finds information or resources, and a user takes initiative to locate resources or information independently.
Phrase: Finding information.

27.
Concepts: explaining feature requests, providing justification
Relationship: The concepts are related as they both involve explaining or justifying requests.
Criteria: User explains reasons for requesting a feature, and users provide reasons or justifications for their suggestions or requests.
Phrase: Explaining feature requests.

28.
Concepts: explaining situation, describes use case scenario
Relationship: The concepts are related as they both involve explaining or describing a situation or scenario.
Criteria: User explains their situation or context, and user explains or describes a use case scenario.
Phrase: Explaining situation.

29.
Concepts: explaining the need, needs clarification, expressing user needs
Relationship: The concepts are related as they all involve explaining or clarifying needs.
Criteria: A user or designer explains the need for something, a user clarifies their needs or requirements for the software, and users express their needs or requirements for the software.
Phrase: Explaining user needs.

30.
Concepts: no elaboration, reveals user background and potential use case (refined to "minimal user input")
Relationship: The concepts are related as they both involve providing minimal information.
Criteria: A user or designer provides minimal or no additional information, and a user provides minimal or no information about themselves or their intentions.
Phrase: Providing minimal information.

31.
Concepts: user background probes, seeking user background
Relationship: The concepts are related as they both involve inquiring about user background.
Criteria: Probes or questions about users' professions or backgrounds, and designers inquire about user's background or experience.
Phrase: Seeking user background.

32.
Concepts: provide context, providing user background
Relationship: The concepts are related as they both involve providing context or background information.
Criteria: Users provide context about their backgrounds or experiences that influence their needs, and user provides background information about themselves.
Phrase: Providing user background.