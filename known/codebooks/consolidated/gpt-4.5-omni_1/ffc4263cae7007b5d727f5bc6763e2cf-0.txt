You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (57 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
57. 
Concepts: {Repeat the input 57}
Relationship: {What is logical relationship between concepts in code 57, or N/A if not applicable}
Criteria: {Who did what, and how for code 57}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: classroom setup inquiry, internet availability inquiry
- Developers inquire about the classroom setup, particularly internet availability.
- Inquiring about the availability of internet in classrooms.

2.
Concepts: middle school, high school teaching experience
- User provides information about their teaching experience.
- A user mentions their teaching experience in high school or middle school.

3.
Concepts: teaching experience, share teaching experience
- A user shares their teaching experience.
- A participant shares their teaching experience or background.

4.
Concepts: introduce teacher identity, provide background information
- A user introduces their teaching experience and grade level.
- User provides background information about their teaching experience.

5.
Concepts: question about identity, ask about user's professional background
- A designer inquires about the professional background or role of a user.
- A designer asks about a user's professional background.

6.
Concepts: comparison to similar apps, comparison with other applications
- A user compares the software favorably to other similar applications.
- User compares the software favorably to other applications.

7.
Concepts: comparative feedback, software comparison
- Users provide feedback by comparing the software to other similar tools.
- Users compare the software to other similar tools, highlighting its advantages or disadvantages.

8.
Concepts: praise software, usability and practicality
- A user praises the software for its practicality or effectiveness.
- User comments on the ease of use and practicality of the software.

9.
Concepts: positive, user satisfaction, share positive feedback, positive feedback
- User expresses positive feedback about the software.
- A user expresses satisfaction with the software.
- A participant shares positive feedback about the software.
- Users provide positive feedback or praise for the software.

10.
Concepts: user reviews, software effectiveness
- A user provides a review or opinion about the software.
- A user comments on the effectiveness or impact of the software.

11.
Concepts: craftsmanship, acknowledge craftsmanship
- A user appreciates the craftsmanship and attention to detail.
- A user acknowledges the craftsmanship or quality of the software.

12.
Concepts: compliment on 3d effect, compliment software's 3d effect
- Complimenting the software's 3D effects.
- A participant compliments the software's 3D effect.

13.
Concepts: feature appreciation, appreciation of features
- Users express appreciation for specific features or ideas.
- A user appreciates specific features of the software.

14.
Concepts: context of use, usability and context of use
- Instances where users describe the specific contexts in which they use the software.
- Discussions about how the software is used in different contexts and its usability.

15.
Concepts: usability discussion, software usability
- Discussing the usability of features or components.
- Users discuss the practical usability and functionality of the software.

16.
Concepts: usability needs, user needs
- Users highlight specific usability needs or suggestions for the software.
- Users express specific needs or requirements related to the software or the educational environment.

17.
Concepts: past incident, share past incident
- A user shares a past incident or experience.
- A user shares a past incident or experience related to the software or its use.

18.
Concepts: student engagement, student reactions
- A user shares positive feedback about student engagement with the software.
- Users describe positive reactions from students when using the software in class.

19.
Concepts: user experience, user experience and impact
- Instances where users share their experiences or opinions about using the software.
- Users sharing their experiences and the impact of the software on their teaching or learning.

20.
Concepts: download inquiry, ask for download information
- A participant inquires about where to download the software.
- A participant asks for information on where to download the software.

21.
Concepts: platform-specific information, platform-specific communication
- Providing information specific to different platforms.
- Providing information specific to the platform being discussed.

22.
Concepts: clarify version type, update clarification
- A designer clarifies the type or version of the software being discussed.
- A designer clarifies which version of the software is being discussed or updated.

23.
Concepts: version details, software version information
- Providing detailed information about software versions.
- Informing about the status of a software version.

24.
Concepts: pc version, pc version inquiry
- A user asks about the PC version of the software.
- Inquiring about the usage of the PC version.

25.
Concepts: usage inquiry, ask a question about how to use
- Users inquire about how to use specific versions of the software.
- A user asks how to use a specific version of the software.

26.
Concepts: update inquiry, inquire updates, asking for update
- A participant inquires about upcoming updates.
- A user inquires about recent updates or changes.
- A user asks if there have been any recent updates.

27.
Concepts: user inquiry, request for information
- Questions or requests for information made by users regarding the use or functionalities of Physics Lab.
- Instances where users ask for specific information or help regarding the use or features of Physics Lab.

28.
Concepts: feature request, feature requests for physics experiments
- Instances where users request new features or improvements for the Physics Lab tool.
- Suggestions from users about desired features or improvements for the software.
- A user requests specific features for physics experiments.

29.
Concepts: expand platform scope, request additional experiments
- A user requests the inclusion of additional experiments or features.
- Users request additional experiments or features.

30.
Concepts: request, detailed feature request, request specific features
- A user makes a specific request for new features or demonstrations.
- A user makes a detailed request for specific features or functionalities.
- A user requests specific features or functionalities to be added to the software.

31.
Concepts: express need for help, technical support request
- A user expresses a need for help with using the software.
- A user requests help or instructions on how to use a specific version of the software.

32.
Concepts: documentation need, usage support request
- Users express the need for documentation or user manuals.
- Users expressing the need for a user manual or usage support.

33.
Concepts: seek guidance, seek usage instructions
- A user seeks guidance or information, such as asking for a user manual.
- Users seek instructions on how to use the software.

34.
Concepts: question, ask a question
- Users and designers ask questions about various aspects of the software.
- Users ask questions about various aspects of the software or its use.

35.
Concepts: user inquiry response, user concern resolution
- Responding to user inquiries or concerns.
- Resolving user concerns or questions.

36.
Concepts: feature prioritization
- A designer prioritizes features and updates based on user needs and feedback.
- Users suggest prioritizing certain features or aspects of the software.

37.
Concepts: user background inquiry
- A participant inquires about another participant's teaching background.
- Inquiries about the background or role of users within the community.

38.
Concepts: iterative development
- Instances where designers discuss updates, new features, or bug fixes.
- The process of repeatedly refining and improving a product based on feedback and testing.
- The process of continuously improving the product based on feedback and testing.
- Instances where the design process is described as iterative, with ongoing optimizations and updates.
- A designer discusses iterative development based on user feedback.

39.
Concepts: collaborative problem solving
- Moments where designers and users work together to address issues.
- Collaborative efforts between users and designers to solve issues and improve the product.
- Instances where users and designers work together to address issues or improve the software.

40.
Concepts: designer responsiveness
- Instances where designers respond to user queries or engage with user comments, indicating active communication between designers and users.
- Instances where designers respond to user inquiries, suggestions, or feedback.
- Instances where designers respond to user feedback or suggestions.
- Instances where designers acknowledge user feedback and discuss potential solutions or updates.
- Designers responding to user feedback and addressing their concerns or suggestions.
- Instances where designers respond to user queries or feedback, showing attentiveness to user needs.

41.
Concepts: user feedback integration
- Instances where user feedback is acknowledged and incorporated into the design process.
- Instances where user feedback is actively sought and incorporated into the design process.

42.
Concepts: acknowledgment
- Users acknowledge previous messages or efforts.
- Users acknowledging or agreeing with statements.

43.
Concepts: user requests
- Instances where users request new features or improvements.
- Specific features or improvements requested by users.

44.
Concepts: manage expectations
- A participant manages expectations regarding features or updates.
- Designer manages user expectations regarding feature requests.

45.
Concepts: user engagement
- Instances where users actively participate in the conversation, showing interest or involvement in the community.
- Instances where users engage with designers through questions, feedback, or expressions of anticipation.
- Instances where users actively participate in the conversation, showing interest and involvement.

46.
Concepts: educational context
- Discussions related to the educational context, such as school systems or teaching environments.
- Users provide context about their educational environment or institution.

47.
Concepts: update status inquiry
- User inquires about the status of software updates.
- Users inquire about the status of updates, particularly for specific platforms.

48.
Concepts: encourage participatory design
- Instances where the community contributes to the design and development of the Physics Lab by providing suggestions or feedback that influence the development process.
- Instances where designers seek or consider user input in the design and development process.
- Instances where users are invited to participate in the design process or provide input.
- Instances where users and designers collaboratively discuss features and usability, reflecting a user-centered design approach.
- The involvement of users in the design and development process, contributing their insights and needs.
- Encouragement by designers for users to contribute ideas, feedback, and suggestions for the development of Physics Lab.
- Active involvement of users in the design process to ensure the product meets their needs and preferences.
- The involvement of users in the design process to ensure the product meets their needs and preferences.
- Instances where users and designers collaboratively discuss or work on design improvements.

49.
Concepts: informal communication
- Instances where the tone of the conversation is casual or informal, indicating the nature of the community's communication style.
- Casual and non-technical interactions among community members, including humor and personal remarks.

50.
Concepts: technical inquiry
- Instances where users ask technical questions about the platform, indicating areas of user interest or potential issues.
- Asking technical questions or seeking help.

51.
Concepts: resources sharing
- Instances where designers or users share resources, such as download links, development plans, or announcements.
- Information about where and how to access resources, files, or downloads related to Physics Lab.
- Instances where users or designers share files, images, or other resources with the community.

52.
Concepts: user response
- Input and suggestions provided by users regarding the design and functionality of the product.
- Instances where users provide feedback or ask questions that influence the design process.
- Instances where users provide feedback or suggestions to improve the software.
- Instances where users provide suggestions or feedback on features and functionalities.
- Instances where users provide feedback or ask questions about the app's development and updates.

53.
Concepts: promote community engagement
- Instances where members of the community actively participate in discussions, ask questions, or provide feedback.
- Instances where users or designers engage in discussions that foster community interaction and participation.
- Active participation and interaction among community members, including both users and designers.
- Efforts made by designers to actively involve and communicate with the user community.

54.
Concepts: future development plans
- Sharing information about future development plans.
- Outlining future development priorities.

55.
Concepts: role identification
- Instances where users or designers identify their roles, which can help understand the community structure and the roles within it.
- Instances where participants identify their roles or expertise, contributing to the problem-solving process.
- Identifying roles within the community, such as designers, teachers, or other users.

56.
Concepts: development transparency
- Instances where designers provide detailed information about development processes, challenges, and progress.
- Keeping the community informed about the development process and upcoming changes.

57.
Concepts: user-designer interaction
- The collaborative interaction between users and designers that contributes to the design process.
- Interaction between users and designers about specific features or issues.
===
---
Definitions for each code (57 in total):
1.
Concepts: classroom setup inquiry, internet availability inquiry
Relationship: Both concepts involve inquiries about the classroom environment.
Criteria: Developers inquire about the classroom setup, particularly the availability of internet.
Phrase: Inquire about classroom setup

2.
Concepts: middle school, high school teaching experience
Relationship: Both concepts pertain to teaching experience at different educational levels.
Criteria: A user provides information about their teaching experience in middle school or high school.
Phrase: Share teaching experience

3.
Concepts: teaching experience, share teaching experience
Relationship: Both concepts involve sharing information about teaching experience.
Criteria: A participant shares their teaching experience or background.
Phrase: Share teaching experience

4.
Concepts: introduce teacher identity, provide background information
Relationship: Both concepts involve providing personal teaching background information.
Criteria: A user introduces their teaching experience and grade level.
Phrase: Introduce teaching background

5.
Concepts: question about identity, ask about user's professional background
Relationship: Both concepts involve inquiring about a user's professional background.
Criteria: A designer asks about a user's professional background.
Phrase: Inquire about professional background

6.
Concepts: comparison to similar apps, comparison with other applications
Relationship: Both concepts involve comparing the software to other applications.
Criteria: A user compares the software favorably to other similar applications.
Phrase: Compare to other applications

7.
Concepts: comparative feedback, software comparison
Relationship: Both concepts involve providing feedback through comparison.
Criteria: Users compare the software to other similar tools, highlighting its advantages or disadvantages.
Phrase: Provide comparative feedback

8.
Concepts: praise software, usability and practicality
Relationship: Both concepts involve positive feedback about the software's usability.
Criteria: A user comments on the ease of use and practicality of the software.
Phrase: Praise software usability

9.
Concepts: positive, user satisfaction, share positive feedback, positive feedback
Relationship: All concepts involve expressing positive feedback about the software.
Criteria: Users provide positive feedback or praise for the software.
Phrase: Share positive feedback

10.
Concepts: user reviews, software effectiveness
Relationship: Both concepts involve user opinions about the software's effectiveness.
Criteria: A user comments on the effectiveness or impact of the software.
Phrase: Provide user review

11.
Concepts: craftsmanship, acknowledge craftsmanship
Relationship: Both concepts involve recognizing the quality of the software.
Criteria: A user acknowledges the craftsmanship or quality of the software.
Phrase: Acknowledge craftsmanship

12.
Concepts: compliment on 3d effect, compliment software's 3d effect
Relationship: Both concepts involve praising the software's 3D effects.
Criteria: A participant compliments the software's 3D effect.
Phrase: Compliment 3D effect

13.
Concepts: feature appreciation, appreciation of features
Relationship: Both concepts involve expressing appreciation for specific features.
Criteria: A user appreciates specific features of the software.
Phrase: Appreciate features

14.
Concepts: context of use, usability and context of use
Relationship: Both concepts involve discussing the context in which the software is used.
Criteria: Discussions about how the software is used in different contexts and its usability.
Phrase: Discuss context of use

15.
Concepts: usability discussion, software usability
Relationship: Both concepts involve discussing the software's usability.
Criteria: Users discuss the practical usability and functionality of the software.
Phrase: Discuss software usability

16.
Concepts: usability needs, user needs
Relationship: Both concepts involve expressing specific needs related to the software.
Criteria: Users express specific needs or requirements related to the software or the educational environment.
Phrase: Express usability needs

17.
Concepts: past incident, share past incident
Relationship: Both concepts involve sharing past experiences.
Criteria: A user shares a past incident or experience related to the software or its use.
Phrase: Share past incident

18.
Concepts: student engagement, student reactions
Relationship: Both concepts involve student interactions with the software.
Criteria: Users describe positive reactions from students when using the software in class.
Phrase: Describe student engagement

19.
Concepts: user experience, user experience and impact
Relationship: Both concepts involve sharing user experiences and their impact.
Criteria: Users share their experiences and the impact of the software on their teaching or learning.
Phrase: Share user experience

20.
Concepts: download inquiry, ask for download information
Relationship: Both concepts involve inquiring about downloading the software.
Criteria: A participant asks for information on where to download the software.
Phrase: Inquire about download

21.
Concepts: platform-specific information, platform-specific communication
Relationship: Both concepts involve providing information specific to different platforms.
Criteria: Providing information specific to the platform being discussed.
Phrase: Provide platform-specific information

22.
Concepts: clarify version type, update clarification
Relationship: Both concepts involve clarifying details about software versions.
Criteria: A designer clarifies which version of the software is being discussed or updated.
Phrase: Clarify version type

23.
Concepts: version details, software version information
Relationship: Both concepts involve providing detailed information about software versions.
Criteria: Informing about the status of a software version.
Phrase: Provide version details

24.
Concepts: pc version, pc version inquiry
Relationship: Both concepts involve inquiries about the PC version of the software.
Criteria: A user asks about the PC version of the software.
Phrase: Inquire about PC version

25.
Concepts: usage inquiry, ask a question about how to use
Relationship: Both concepts involve asking questions about how to use the software.
Criteria: A user asks how to use a specific version of the software.
Phrase: Inquire about usage

26.
Concepts: update inquiry, inquire updates, asking for update
Relationship: All concepts involve inquiring about software updates.
Criteria: A user inquires about recent updates or changes.
Phrase: Inquire about updates

27.
Concepts: user inquiry, request for information
Relationship: Both concepts involve users asking for information.
Criteria: Instances where users ask for specific information or help regarding the use or features of Physics Lab.
Phrase: Make user inquiry

28.
Concepts: feature request, feature requests for physics experiments
Relationship: Both concepts involve users requesting new features.
Criteria: Instances where users request new features or improvements for the Physics Lab tool.
Phrase: Request new features

29.
Concepts: expand platform scope, request additional experiments
Relationship: Both concepts involve users requesting additional content.
Criteria: Users request additional experiments or features.
Phrase: Request additional experiments

30.
Concepts: request, detailed feature request, request specific features
Relationship: All concepts involve making specific requests for new features.
Criteria: A user makes a detailed request for specific features or functionalities.
Phrase: Make detailed feature request

31.
Concepts: express need for help, technical support request
Relationship: Both concepts involve requesting help with the software.
Criteria: A user requests help or instructions on how to use a specific version of the software.
Phrase: Request technical support

32.
Concepts: documentation need, usage support request
Relationship: Both concepts involve expressing the need for documentation or support.
Criteria: Users express the need for a user manual or usage support.
Phrase: Request documentation

33.
Concepts: seek guidance, seek usage instructions
Relationship: Both concepts involve seeking guidance or instructions.
Criteria: Users seek instructions on how to use the software.
Phrase: Seek usage guidance

34.
Concepts: question, ask a question
Relationship: Both concepts involve asking questions.
Criteria: Users ask questions about various aspects of the software or its use.
Phrase: Ask a question

35.
Concepts: user inquiry response, user concern resolution
Relationship: Both concepts involve responding to user inquiries or concerns.
Criteria: Resolving user concerns or questions.
Phrase: Respond to user inquiry

36.
Concepts: feature prioritization
Relationship: N/A
Criteria: Users suggest prioritizing certain features or aspects of the software.
Phrase: Prioritize features

37.
Concepts: user background inquiry
Relationship: N/A
Criteria: Inquiries about the background or role of users within the community.
Phrase: Inquire about user background

38.
Concepts: iterative development
Relationship: N/A
Criteria: The process of continuously improving the product based on feedback and testing.
Phrase: Discuss iterative development

39.
Concepts: collaborative problem solving
Relationship: N/A
Criteria: Collaborative efforts between users and designers to solve issues and improve the product.
Phrase: Engage in collaborative problem solving

40.
Concepts: designer responsiveness
Relationship: N/A
Criteria: Designers responding to user feedback and addressing their concerns or suggestions.
Phrase: Demonstrate designer responsiveness

41.
Concepts: user feedback integration
Relationship: N/A
Criteria: Instances where user feedback is actively sought and incorporated into the design process.
Phrase: Integrate user feedback

42.
Concepts: acknowledgment
Relationship: N/A
Criteria: Users acknowledging or agreeing with statements.
Phrase: Acknowledge statements

43.
Concepts: user requests
Relationship: N/A
Criteria: Specific features or improvements requested by users.
Phrase: Make user requests

44.
Concepts: manage expectations
Relationship: N/A
Criteria: Designer manages user expectations regarding feature requests.
Phrase: Manage user expectations

45.
Concepts: user engagement
Relationship: N/A
Criteria: Instances where users actively participate in the conversation, showing interest and involvement.
Phrase: Demonstrate user engagement

46.
Concepts: educational context
Relationship: N/A
Criteria: Users provide context about their educational environment or institution.
Phrase: Provide educational context

47.
Concepts: update status inquiry
Relationship: N/A
Criteria: Users inquire about the status of updates, particularly for specific platforms.
Phrase: Inquire about update status

48.
Concepts: encourage participatory design
Relationship: N/A
Criteria: Encouragement by designers for users to contribute ideas, feedback, and suggestions for the development of Physics Lab.
Phrase: Encourage participatory design

49.
Concepts: informal communication
Relationship: N/A
Criteria: Casual and non-technical interactions among community members, including humor and personal remarks.
Phrase: Engage in informal communication

50.
Concepts: technical inquiry
Relationship: N/A
Criteria: Asking technical questions or seeking help.
Phrase: Make technical inquiry

51.
Concepts: resources sharing
Relationship: N/A
Criteria: Instances where users or designers share files, images, or other resources with the community.
Phrase: Share resources

52.
Concepts: user response
Relationship: N/A
Criteria: Instances where users provide feedback or suggestions to improve the software.
Phrase: Provide user response

53.
Concepts: promote community engagement
Relationship: N/A
Criteria: Active participation and interaction among community members, including both users and designers.
Phrase: Promote community engagement

54.
Concepts: future development plans
Relationship: N/A
Criteria: Sharing information about future development plans.
Phrase: Share future development plans

55.
Concepts: role identification
Relationship: N/A
Criteria: Identifying roles within the community, such as designers, teachers, or other users.
Phrase: Identify roles

56.
Concepts: development transparency
Relationship: N/A
Criteria: Keeping the community informed about the development process and upcoming changes.
Phrase: Ensure development transparency

57.
Concepts: user-designer interaction
Relationship: N/A
Criteria: Interaction between users and designers about specific features or issues.
Phrase: Facilitate user-designer interaction
---