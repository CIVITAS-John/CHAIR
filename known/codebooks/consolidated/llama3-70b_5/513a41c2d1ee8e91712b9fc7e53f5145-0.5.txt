You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: recount past experiences, reference to past incident
- User recounts a past experience or incident.
- A user references a past incident or experience.

2.
Concepts: educational alignment, educational goal alignment
- Linking a feature or functionality to educational goals
- Linking the software or tool to broader educational goals or objectives.

3.
Concepts: aligns updates with educational needs, aligning updates with educational needs
- Designer aligns updates or features with educational needs or goals.
- Designer outlines updates that align with educational needs.

4.
Concepts: aligning with educational needs, connect functionality to educational needs
- Designer aligns the software with educational needs and goals.
- Designer connects functionality to educational needs or goals.

5.
Concepts: alignment with educational materials, ensure relevance to educational materials
- A designer prioritizes aligning a software or feature with existing educational materials or standards.
- Designer ensures that the software aligns with educational materials or standards.

6.
Concepts: aligning with curriculum, prioritizing educational alignment, aligning with educational standards
- Designer aligns with curriculum or educational standards.
- A designer prioritizes alignment with educational standards or curriculum.
- A designer aligns with educational standards or practices.

7.
Concepts: emphasizing secure environments, emphasizing safety importance
- Emphasizing the importance of secure or safe environments.
- Highlighting the importance of safety or security in educational settings.

8.
Concepts: specifying educational needs, expressing detailed educational needs
- User specifies educational needs or requirements.
- A user provides detailed and specific educational needs or requirements.

9.
Concepts: learning needs, articulate teaching needs, express educational need
- Users articulate specific needs or requirements for learning experiences.
- A user articulates a specific need or requirement for teaching or educational purposes.
- A user expresses an educational need or requirement.

10.
Concepts: community need, user 4235 identifies need
- User expresses a need or desire for a specific feature or functionality.
- User 4235 identifies a need or requests a feature in the online community.

11.
Concepts: inferred user needs, anticipate user needs
- Inferring or anticipating user needs
- Anticipating or considering user needs or requirements

12.
Concepts: user needs expression, expressing user requirements, user need identification
- Expression of user needs or requirements.
- A user expresses a specific requirement or need.
- A user's needs or requirements are highlighted.

13.
Concepts: institutional changes, highlight institutional developments
- Users highlight or discuss institutional changes or developments.
- User highlights institutional developments or initiatives.

14.
Concepts: describe institutional limitations, reflecting on institutional constraints
- A user or designer describes or mentions institutional limitations or constraints.
- User reflects on institutional constraints or limitations.

15.
Concepts: explain common practice, school policy explanation, school practice explanations
- User explains a common practice or policy in educational settings.
- A user explains a common policy or practice in their school or educational environment.
- A user explains a common practice or experience in schools.

16.
Concepts: describe school context, educational context, highlighted school context
- User describes their school context
- A user describes the educational environment or setting.
- User considers the educational context or application of the software.
- A user mentions their school or educational context.

17.
Concepts: circuit diagram knowledge, circuit diagram knowledge contribution
- User affirms community knowledge about circuit diagram styles.
- User contributes knowledge about circuit diagram styles.

18.
Concepts: enhance user understanding, facilitate user understanding
- Providing additional information to enhance user understanding.
- Explaining or clarifying a concept to facilitate user understanding.

19.
Concepts: contextualizing software use, highlight institutional context for software use
- User provides context for software use
- A user highlights the institutional context in which the software is being used.

20.
Concepts: contextualize user needs, informing design with user context
- User shares their needs or requirements, often related to their context or environment.
- A user provides information about their environment to inform design decisions.

21.
Concepts: provide context, contextualizing response, provide context for request
- User provides context for their situation
- User provides context or background information for a response.
- A user provides context for their request or need.

22.
Concepts: context establishment, provision of context for engagement
- A user establishes a context for further interaction or discussion.
- A user provides context for their engagement or participation.

23.
Concepts: suggested feature, suggest additional functionality, express feature requests, feature suggestion, suggest feature
- A user suggests a new feature or functionality for the software.
- A user suggests or recommends additional functionality or features for a software or tool.
- A user expresses a specific feature request or suggests a new functionality for the software.
- User provides a suggestion or idea for improving the software or its features.
- A user suggests adding a specific feature or functionality to the software.

24.
Concepts: suggest new feature, feature suggestions, user feature suggestions, proposing usability features, propose new feature
- User suggests a new feature or functionality.
- A user suggests new features or experiments, such as mechanical waves and vibrations.
- User suggests new features or design improvements
- A user suggests new features or functionalities.
- A user proposes features to enhance usability or convenience.
- A user suggests or proposes a new feature or functionality.

25.
Concepts: recommending features, recommend adding feature
- A user recommends additional functionality or features (recommending additional functionality).
- A user recommends or suggests adding a feature or functionality for usability or convenience.

26.
Concepts: suggesting refinements, encouraging refinement
- User suggests refinement or improvement.
- A user encourages thoughtful refinement of the platform.

27.
Concepts: encourage development, encourage iterative refinement
- A user encourages further development or improvement of the software.
- A user encourages iterative refinement or incremental improvement of the software.

28.
Concepts: suggestions, user design suggestions, design improvement suggestions
- Users or designers provide suggestions or ideas.
- A user provides suggestions for design improvements.
- A user considers design improvement or suggests alternatives.

29.
Concepts: suggest improvement, suggesting improvements, user feedback and suggestions
- A user suggests improvements or new features for the software.
- A user suggests an improvement or modification to the software or platform.
- A user provides suggestions, recommendations, or requests for new features or improvements to the software.
- A user provides feedback or suggestions for the software.

30.
Concepts: request educational tools, requesting educational content
- User requests specific educational tools or features.
- A user requests specific educational content or features to be added to a software or resource.

31.
Concepts: suggest educational features, suggest educational enhancements
- A user suggests or requests new educational features or experiments.
- Users suggest improvements or additions to educational content.

32.
Concepts: seeks to improve educational utility, seeks learning experience enhancements
- Seeks to improve the educational utility or value of the software.
- Seeks or suggests enhancements to the learning experience or educational utility of the software.
===
Here are the definitions for each code:

---
1.
Concepts: recount past experiences, reference to past incident
Relationship: The concepts are related as they both involve looking back at previous events or experiences.
Criteria: A user recounts or references a past experience or incident.
Phrase: Recounting past experiences.

2.
Concepts: educational alignment, educational goal alignment
Relationship: The concepts are related as they both involve linking the software or tool to broader educational objectives.
Criteria: A designer links a feature or functionality to educational goals or objectives.
Phrase: Aligning with educational goals.

3.
Concepts: aligns updates with educational needs, aligning updates with educational needs
Relationship: The concepts are related as they both involve ensuring that updates meet educational requirements.
Criteria: A designer aligns updates or features with educational needs or goals.
Phrase: Aligning updates with educational needs.

4.
Concepts: aligning with educational needs, connect functionality to educational needs
Relationship: The concepts are related as they both involve connecting the software to educational requirements.
Criteria: A designer aligns the software with educational needs and goals.
Phrase: Connecting functionality to educational needs.

5.
Concepts: alignment with educational materials, ensure relevance to educational materials
Relationship: The concepts are related as they both involve ensuring the software aligns with existing educational resources.
Criteria: A designer prioritizes aligning the software with educational materials or standards.
Phrase: Ensuring relevance to educational materials.

6.
Concepts: aligning with curriculum, prioritizing educational alignment, aligning with educational standards
Relationship: The concepts are related as they all involve aligning the software with educational frameworks or standards.
Criteria: A designer aligns with curriculum or educational standards.
Phrase: Aligning with curriculum or standards.

7.
Concepts: emphasizing secure environments, emphasizing safety importance
Relationship: The concepts are related as they both involve highlighting the importance of safety and security.
Criteria: Emphasizing the importance of secure or safe environments.
Phrase: Emphasizing safety importance.

8.
Concepts: specifying educational needs, expressing detailed educational needs
Relationship: The concepts are related as they both involve clearly articulating educational requirements.
Criteria: A user specifies educational needs or requirements.
Phrase: Specifying educational needs.

9.
Concepts: learning needs, articulate teaching needs, express educational need
Relationship: The concepts are related as they all involve expressing specific needs or requirements for educational purposes.
Criteria: A user articulates specific needs or requirements for learning experiences.
Phrase: Expressing educational needs.

10.
Concepts: community need, user 4235 identifies need
Relationship: The concepts are related as they both involve identifying or expressing a need within the online community.
Criteria: A user expresses a need or desire for a specific feature or functionality.
Phrase: Identifying community needs.

11.
Concepts: inferred user needs, anticipate user needs
Relationship: The concepts are related as they both involve considering or anticipating user requirements.
Criteria: Inferring or anticipating user needs or requirements.
Phrase: Anticipating user needs.

12.
Concepts: user needs expression, expressing user requirements, user need identification
Relationship: The concepts are related as they all involve expressing or identifying user needs or requirements.
Criteria: A user expresses a specific requirement or need.
Phrase: Expressing user needs.

13.
Concepts: institutional changes, highlight institutional developments
Relationship: The concepts are related as they both involve discussing or highlighting changes or developments within educational institutions.
Criteria: Users highlight or discuss institutional changes or developments.
Phrase: Highlighting institutional developments.

14.
Concepts: describe institutional limitations, reflecting on institutional constraints
Relationship: The concepts are related as they both involve discussing or considering limitations or constraints within educational institutions.
Criteria: A user or designer describes or mentions institutional limitations or constraints.
Phrase: Describing institutional limitations.

15.
Concepts: explain common practice, school policy explanation, school practice explanations
Relationship: The concepts are related as they all involve explaining or discussing common practices or policies within educational settings.
Criteria: A user explains a common practice or policy in educational settings.
Phrase: Explaining common practices.

16.
Concepts: describe school context, educational context, highlighted school context
Relationship: The concepts are related as they all involve describing or highlighting the educational environment or setting.
Criteria: A user describes their school context or environment.
Phrase: Describing school context.

17.
Concepts: circuit diagram knowledge, circuit diagram knowledge contribution
Relationship: The concepts are related as they both involve sharing or contributing knowledge about circuit diagrams.
Criteria: User affirms community knowledge about circuit diagram styles.
Phrase: Contributing circuit diagram knowledge.

18.
Concepts: enhance user understanding, facilitate user understanding
Relationship: The concepts are related as they both involve providing additional information to clarify or explain concepts.
Criteria: Providing additional information to enhance user understanding.
Phrase: Enhancing user understanding.

19.
Concepts: contextualizing software use, highlight institutional context for software use
Relationship: The concepts are related as they both involve providing context for software use within educational institutions.
Criteria: A user provides context for software use.
Phrase: Contextualizing software use.

20.
Concepts: contextualize user needs, informing design with user context
Relationship: The concepts are related as they both involve considering user context to inform design decisions.
Criteria: A user shares their needs or requirements, often related to their context or environment.
Phrase: Contextualizing user needs.

21.
Concepts: provide context, contextualizing response, provide context for request
Relationship: The concepts are related as they all involve providing context or background information.
Criteria: A user provides context for their situation or request.
Phrase: Providing context.

22.
Concepts: context establishment, provision of context for engagement
Relationship: The concepts are related as they both involve establishing a context for further interaction or discussion.
Criteria: A user establishes a context for further interaction or discussion.
Phrase: Establishing context.

23.
Concepts: suggested feature, suggest additional functionality, express feature requests, feature suggestion, suggest feature
Relationship: The concepts are related as they all involve suggesting or requesting new features or functionalities.
Criteria: A user suggests a new feature or functionality for the software.
Phrase: Suggesting features.

24.
Concepts: suggest new feature, feature suggestions, user feature suggestions, proposing usability features, propose new feature
Relationship: The concepts are related as they all involve suggesting or proposing new features or functionalities.
Criteria: A user suggests a new feature or functionality.
Phrase: Proposing new features.

25.
Concepts: recommending features, recommend adding feature
Relationship: The concepts are related as they both involve recommending or suggesting additional features.
Criteria: A user recommends additional functionality or features.
Phrase: Recommending features.

26.
Concepts: suggesting refinements, encouraging refinement
Relationship: The concepts are related as they both involve suggesting or encouraging improvements.
Criteria: A user suggests refinement or improvement.
Phrase: Suggesting refinements.

27.
Concepts: encourage development, encourage iterative refinement
Relationship: The concepts are related as they both involve encouraging further development or improvement.
Criteria: A user encourages further development or improvement of the software.
Phrase: Encouraging development.

28.
Concepts: suggestions, user design suggestions, design improvement suggestions
Relationship: The concepts are related as they all involve providing suggestions or ideas for improvement.
Criteria: A user provides suggestions for design improvements.
Phrase: Providing suggestions.

29.
Concepts: suggest improvement, suggesting improvements, user feedback and suggestions
Relationship: The concepts are related as they all involve suggesting or providing feedback for improvement.
Criteria: A user suggests improvements or new features for the software.
Phrase: Suggesting improvements.

30.
Concepts: request educational tools, requesting educational content
Relationship: The concepts are related as they both involve requesting specific educational resources or features.
Criteria: A user requests specific educational tools or features.
Phrase: Requesting educational tools.

31.
Concepts: suggest educational features, suggest educational enhancements
Relationship: The concepts are related as they both involve suggesting or requesting new educational features or experiments.
Criteria: A user suggests or requests new educational features or experiments.
Phrase: Suggesting educational features.

32.
Concepts: seeks to improve educational utility, seeks learning experience enhancements
Relationship: The concepts are related as they both involve seeking to improve the educational value or experience.
Criteria: Seeks to improve the educational utility or value of the software.
Phrase: Seeking educational utility improvements.