You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (14 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
14. 
Concepts: {Repeat the input 14}
Relationship: {What is logical relationship between concepts in code 14, or N/A if not applicable}
Criteria: {Who did what, and how for code 14}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: communicating with emojis, engage and react with emojis
- Users communicate emotions and reactions using emojis and other non-verbal forms.
- Users use emojis to engage with the community and react to content emotionally or humorously.

2.
Concepts: sharing information for design, sharing contextual backgrounds
- A person shares contextual information to inform design decisions or discussions.
- Participants provide context and share personal or professional experiences to explain broader needs.

3.
Concepts: asking questions, responding to questions
- Community members pose questions to each other.
- Members respond to community questions or inquiries.

4.
Concepts: reflect on educational experiences, share classroom experiences and successes
- Participants reflect on their experiences using the software in educational settings.
- Users share experiences and success stories related to classroom use of the software, highlighting beneficial features and discussing educational needs.

5.
Concepts: request usage guidance, offering guidance on feature usage
- Users request guidance and instructions on using specific features or versions of the software.
- Users provide advice or instructions on how to use specific software features.

6.
Concepts: asking technical questions, identify and inquire about technical issues
- Users pose technical questions related to the platform.
- Users identify technical issues, highlighting constraints, and participants inquire about specifics.

7.
Concepts: inquiring about updates, engage with development process
- Users express anticipations and inquire about upcoming software updates.
- A user expresses interest or engagement in the software development process, typically by asking about updates.

8.
Concepts: show interest in technical details, clarifying and seeking version details
- User shows interest in knowing specific technical details or versions of the software.
- Users ask and clarify information regarding specific software versions.

9.
Concepts: explaining team limitations, discuss feature complexity
- Designers explain the limitations or constraints they face in software development.
- Designers explain and discuss the complexities of development and the time required for software features.

10.
Concepts: mention feedback-based prompts, encourage and prioritize feedback
- Designer references user feedback as the basis for including prompts or instructions in the software.
- Designers encourage detailed suggestions and feedback, prioritizing user input for future updates.

11.
Concepts: involving users in design, incorporating user feedback
- Designers actively involve users in the design process through feedback or testing.
- Designers integrated user feedback into the design process through established feedback mechanisms.

12.
Concepts: collaborative planning, collaborating and inviting suggestions
- Designers and users collaboratively discussing and planning the development of the software.
- Designers and users collaborate and exchange suggestions for development.

13.
Concepts: discuss and describe updates, announce and update on development
- Designers outline planned updates and future changes, describing their scope and details.
- Designers share details about development plans, new features, current status, and future plans of the software.

14.
Concepts: describe ongoing r&d efforts, discussing future development plans
- Designers discuss ongoing research and development efforts related to new functionalities in the software.
- Designers discuss future developments, goals, and plans for the software.
===
---
Definitions for each code (14 in total):
1.
Concepts: communicating with emojis, engage and react with emojis
Relationship: Both concepts involve using emojis as a form of non-verbal communication.
Criteria: Users communicate and engage through emojis to express emotions or reactions.
Phrase: Communicate through emoji reactions

2.
Concepts: sharing information for design, sharing contextual backgrounds
Relationship: Both concepts involve sharing information relevant to design decisions.
Criteria: Participants share contextual and design-relevant information to inform discussions.
Phrase: Share contextual design information

3.
Concepts: asking questions, responding to questions
Relationship: The concepts encompass the processes of inquiry and response within the community.
Criteria: Community members exchange knowledge by asking and answering questions.
Phrase: Exchange knowledge through Q&A

4.
Concepts: reflect on educational experiences, share classroom experiences and successes
Relationship: Both concepts involve sharing experiences related to using the software in educational contexts.
Criteria: Users reflect on and share their educational and classroom experiences with the software.
Phrase: Share educational experiences

5.
Concepts: request usage guidance, offering guidance on feature usage
Relationship: The concepts involve seeking and providing instructions on software use.
Criteria: Users request and provide guidance on using software features.
Phrase: Exchange usage guidance

6.
Concepts: asking technical questions, identify and inquire about technical issues
Relationship: Both concepts relate to discussing technical aspects and problems of the platform.
Criteria: Users address and discuss technical questions and issues within the community.
Phrase: Discuss technical issues

7.
Concepts: inquiring about updates, engage with development process
Relationship: Both concepts involve user interest in the development and updates of the software.
Criteria: Users inquire about and show engagement in ongoing software updates.
Phrase: Inquire about software updates

8.
Concepts: show interest in technical details, clarifying and seeking version details
Relationship: Both concepts involve seeking and providing specific technical or version-related information.
Criteria: Users seek and clarify details about software versions and technical specifics.
Phrase: Seek technical version details

9.
Concepts: explaining team limitations, discuss feature complexity
Relationship: Both concepts focus on communicating constraints and complexities in development.
Criteria: Designers explain limitations and discuss the complexity of developing software features.
Phrase: Explain development constraints

10.
Concepts: mention feedback-based prompts, encourage and prioritize feedback
Relationship: Both concepts involve incorporating and encouraging user feedback in the development process.
Criteria: Designers reference user feedback as important and encourage it for future improvements.
Phrase: Prioritize user feedback

11.
Concepts: involving users in design, incorporating user feedback
Relationship: Both concepts focus on integrating user input into the design process.
Criteria: Designers engage users in the design process and incorporate their feedback.
Phrase: Integrate user feedback

12.
Concepts: collaborative planning, collaborating and inviting suggestions
Relationship: Both concepts involve collaborative efforts between designers and users.
Criteria: Designers and users plan and collaborate on software development.
Phrase: Collaborate on development planning

13.
Concepts: discuss and describe updates, announce and update on development
Relationship: Both concepts involve communicating information about updates and development.
Criteria: Designers describe and announce updates and share development progress.
Phrase: Announce software updates

14.
Concepts: describe ongoing r&d efforts, discussing future development plans
Relationship: Both concepts relate to future-focused research and development efforts.
Criteria: Designers discuss ongoing R&D efforts and future development plans for the software.
Phrase: Discuss future R&D plans
---