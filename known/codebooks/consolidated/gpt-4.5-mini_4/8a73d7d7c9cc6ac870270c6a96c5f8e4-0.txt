You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (18 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
18. 
Concepts: {Repeat the input 18}
Relationship: {What is logical relationship between concepts in code 18, or N/A if not applicable}
Criteria: {Who did what, and how for code 18}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: ensure proper operation, provide usage instructions
- Designers provide instructions to ensure users can operate the software correctly.
- A designer provides detailed guidance and instructions on using software features effectively.

2.
Concepts: align development with user needs, address usability and functionality
- The designer aligns feature development with user needs and feedback to enhance usability.
- Designers address usability and functionality concerns to meet user needs in software development.

3.
Concepts: offer user support, offer ongoing support to users
- Designers provide technical support and assistance to users in need.
- Designers encourage users to report any problems encountered.

4.
Concepts: propose design suggestions, suggest product improvement
- Users and designers discuss suggestions for enhancing software features.
- Designers mention potential future updates and planned improvements to the software.

5.
Concepts: gather user input for development, ask for help and promise consultation
- Designers express intent to collect user opinions before new development phases.
- Designers indicate a willingness to seek user input for future development stages.

6.
Concepts: seek and confirm consensus, confirm mutual understanding
- The designer seeks and confirms agreement or consensus on proposed ideas or solutions.
- The designer expresses and confirms understanding of a user's needs and requests.

7.
Concepts: seek confirmation, acknowledge and confirm feature needs
- The designer seeks confirmation from users regarding a specific item.
- The designer acknowledges the necessity for a feature and confirms its implementation based on user feedback.

8.
Concepts: clarify user inquiries, validate and clarify user requests
- The designer provides indirect responses and prompts users for clarification to better understand their questions.
- The designer validates user requests and poses follow-up questions to confirm their needs.

9.
Concepts: list new features, provide detailed version updates
- Designers provide a list of upcoming features and bug fixes in the software update.
- Designers provide detailed notes about version updates, including new features and changes.

10.
Concepts: share future directions, share personal interests
- Designer discusses personal interests or potential future projects.
- Designer shares their personal interests related to the community.

11.
Concepts: collaborative learning, acknowledging community expertise
- Designers promote collaborative learning and sharing of knowledge within the community.
- Designer and users discuss educational standards and practices in the community.

12.
Concepts: acknowledge help and resources, demonstrate self-help through resource utilization
- Users express gratitude for help or acknowledge the resources shared by others.
- Users express gratitude for accessing group files, demonstrating self-help through resource utilization.

13.
Concepts: communicate with emojis, use emoji for engagement
- Users utilize non-verbal forms of communication in discussions.
- User uses an emoji to engage with the community while asking a question.

14.
Concepts: suggest new features, suggest and request features
- Users provide feedback and suggestions for software improvements.
- Users suggest features that would enhance convenience and expand software capabilities.

15.
Concepts: highlight ideal use, explain feature importance and benefits
- Designers describe components or features that are ideal for educational use, emphasizing their effectiveness.
- Designers explain the significance of features and highlight their educational benefits.

16.
Concepts: personal anecdote, share contextual experiences in education
- User shares a personal experience related to the software's use in their educational context.
- Users provide context about their experiences and challenges related to education and software use.

17.
Concepts: highlight educational needs, express and address user needs
- A user highlights specific educational needs related to the software's functionality.
- Users express specific needs and requests related to the application in an educational context.

18.
Concepts: pose platform questions, express concern and inquire about updates
- Users and designers ask questions related to software updates and features.
- Users express concern and inquire about the status or timing of software updates.
===
---
Definitions for each code (18 in total):
1. 
Concepts: ensure proper operation, provide usage instructions  
Relationship: The concepts are interrelated as providing usage instructions is essential for ensuring proper operation of the software.  
Criteria: Designers provide instructions to ensure users can operate the software correctly and effectively.  
Phrase: Ensure proper operation through usage instructions.  

2. 
Concepts: align development with user needs, address usability and functionality  
Relationship: The concepts are connected as aligning development with user needs directly impacts usability and functionality.  
Criteria: Designers align feature development with user needs and address usability concerns to enhance software functionality.  
Phrase: Align development with user needs.  

3. 
Concepts: offer user support, offer ongoing support to users  
Relationship: The concepts are related as offering user support implies a commitment to ongoing assistance.  
Criteria: Designers provide technical support and encourage users to report any problems encountered for ongoing assistance.  
Phrase: Offer ongoing user support.  

4. 
Concepts: propose design suggestions, suggest product improvement  
Relationship: The concepts are linked as proposing design suggestions is a method of suggesting product improvements.  
Criteria: Users and designers discuss suggestions for enhancing software features and potential improvements.  
Phrase: Propose design suggestions for improvement.  

5. 
Concepts: gather user input for development, ask for help and promise consultation  
Relationship: The concepts are related as gathering user input involves asking for help and promising consultation.  
Criteria: Designers express intent to collect user opinions and seek input for future development stages.  
Phrase: Gather user input for development.  

6. 
Concepts: seek and confirm consensus, confirm mutual understanding  
Relationship: The concepts are interconnected as seeking consensus requires confirming mutual understanding.  
Criteria: The designer seeks and confirms agreement on proposed ideas while expressing understanding of user needs.  
Phrase: Seek and confirm consensus.  

7. 
Concepts: seek confirmation, acknowledge and confirm feature needs  
Relationship: The concepts are related as seeking confirmation involves acknowledging feature needs.  
Criteria: The designer seeks confirmation from users regarding specific features and acknowledges their necessity based on feedback.  
Phrase: Seek and confirm feature needs.  

8. 
Concepts: clarify user inquiries, validate and clarify user requests  
Relationship: The concepts are linked as clarifying inquiries is part of validating user requests.  
Criteria: The designer provides responses and prompts users for clarification to better understand their needs.  
Phrase: Clarify and validate user inquiries.  

9. 
Concepts: list new features, provide detailed version updates  
Relationship: The concepts are related as listing new features is part of providing detailed version updates.  
Criteria: Designers provide a list of upcoming features and detailed notes about version updates, including changes.  
Phrase: List new features in updates.  

10. 
Concepts: share future directions, share personal interests  
Relationship: The concepts are connected as sharing personal interests can inform discussions about future directions.  
Criteria: Designers discuss personal interests and potential future projects related to the community.  
Phrase: Share future directions and interests.  

11. 
Concepts: collaborative learning, acknowledging community expertise  
Relationship: The concepts are interrelated as collaborative learning involves recognizing the expertise within the community.  
Criteria: Designers promote collaborative learning and acknowledge the sharing of knowledge within the community.  
Phrase: Promote collaborative learning.  

12. 
Concepts: acknowledge help and resources, demonstrate self-help through resource utilization  
Relationship: The concepts are linked as acknowledging help involves recognizing the use of shared resources for self-help.  
Criteria: Users express gratitude for help and demonstrate self-help through accessing shared resources.  
Phrase: Acknowledge help and resources.  

13. 
Concepts: communicate with emojis, use emoji for engagement  
Relationship: The concepts are related as using emojis is a form of non-verbal communication that enhances engagement.  
Criteria: Users utilize emojis in discussions to engage with the community while asking questions.  
Phrase: Communicate and engage with emojis.  

14. 
Concepts: suggest new features, suggest and request features  
Relationship: The concepts are interconnected as suggesting new features often involves making requests for enhancements.  
Criteria: Users provide feedback and suggestions for software improvements and request features that enhance convenience.  
Phrase: Suggest new features and requests.  

15. 
Concepts: highlight ideal use, explain feature importance and benefits  
Relationship: The concepts are related as highlighting ideal use involves explaining the importance and benefits of features.  
Criteria: Designers describe components that are ideal for educational use and explain their significance.  
Phrase: Highlight ideal use and benefits.  

16. 
Concepts: personal anecdote, share contextual experiences in education  
Relationship: The concepts are linked as sharing personal anecdotes provides context to educational experiences.  
Criteria: Users share personal experiences related to the software's use in their educational context.  
Phrase: Share personal anecdotes in education.  

17. 
Concepts: highlight educational needs, express and address user needs  
Relationship: The concepts are interrelated as highlighting educational needs involves expressing and addressing user needs.  
Criteria: A user highlights specific educational needs related to software functionality and expresses requests.  
Phrase: Highlight and address educational needs.  

18. 
Concepts: pose platform questions, express concern and inquire about updates  
Relationship: The concepts are connected as posing questions often involves expressing concern about updates.  
Criteria: Users and designers ask questions related to software updates and express concerns about their status.  
Phrase: Pose questions about updates.  
---