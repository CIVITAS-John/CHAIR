You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (13 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
13. 
Concepts: {Repeat the input 13}
Relationship: {What is logical relationship between concepts in code 13, or N/A if not applicable}
Criteria: {Who did what, and how for code 13}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: request usage support, seek technical support, express need for documentation
- Users seek guidance or request help on how to use the software.
- Users ask technical questions or seek specific information and assistance related to the software.
- Users express their needs or request specific documentation or manuals related to the software.

2.
Concepts: inquiry, seek information through questions
- Users ask questions to seek information or clarification.
- Users ask questions to gain knowledge or resources related to the software.

3.
Concepts: inquire about software access, request resources or download information
- Users inquire about how to access or download the software.
- Users request resources or information about downloading the platform.

4.
Concepts: justify request, justifying feature requests
- A user justifies a request by providing context or reasoning.
- Users provide context and justifications for their feature requests based on feedback.

5.
Concepts: plan to gather feedback, announce future feedback plans
- Individuals plan to gather opinions or feedback before starting new developments.
- Community members announce plans to gather feedback or consult the group in the future.

6.
Concepts: solicit community suggestions, consulting the community
- Designers request feedback or suggestions from the community.
- Developers seek input or feedback from the community regarding design or functionality decisions.

7.
Concepts: acknowledgment and support, acknowledge understanding and needs
- Instances where support and acknowledgment are expressed within the community.
- Community members acknowledge understanding of points made by others or recognize community needs.

8.
Concepts: express enthusiasm and admiration, compliment and acknowledge efforts
- Users express enthusiasm or admiration for the software or community members.
- Users compliment the softwareâ€™s performance or features and acknowledge the craftsmanship involved.

9.
Concepts: apologize for inconveniences, acknowledging and apologizing for inconvenient timing
- Designers or users apologize for disturbances or interruptions caused.
- Developers apologized for the inconvenient timing of messages and acknowledged any resulting inconvenience.

10.
Concepts: acknowledge and respect experts, expert acknowledgement and request
- Individuals show respect or admiration towards experts or contributors.
- User pays respect to experts and makes a feature request.

11.
Concepts: humor, react with emojis or laughter
- Instances where users or designers make jokes, use emojis related to humor, or convey lightheartedness.
- Designers react to user stories or humorous comments with emojis or textual laughter.

12.
Concepts: express emotions with emojis, use non verbal communication
- Users use emojis to express emotions or reactions.
- Use of emojis or other non-verbal forms of communication by users.

13.
Concepts: announcing updates
- Developers informed the community about new versions, updates, and bug fixes.
- Designers inform users about changes, updates, or release schedules.
- Designers or community members make announcements about updates, plans, or downloadable resources.
===
---
Definitions for each code (13 in total):

1.
Concepts: request usage support, seek technical support, express need for documentation
Relationship: Users actively seek various forms of assistance related to the software.
Criteria: Users request guidance, technical support, or specific documentation regarding software usage.
Phrase: Seek assistance for software usage

2.
Concepts: inquiry, seek information through questions
Relationship: Users engage in questioning to obtain information or clarification.
Criteria: Users ask questions to obtain information or clarification about the software.
Phrase: Seek information through inquiries

3.
Concepts: inquire about software access, request resources or download information
Relationship: Users seek to obtain access or download-related information.
Criteria: Users inquire about accessing or downloading the software and request related resources.
Phrase: Request access and download information

4.
Concepts: justify request, justifying feature requests
Relationship: Users provide context and reasoning to support their requests.
Criteria: Users provide context and reasoning to justify their feature requests.
Phrase: Justify feature requests

5.
Concepts: plan to gather feedback, announce future feedback plans
Relationship: Individuals indicate intentions to collect feedback from the community.
Criteria: Individuals announce plans to gather feedback or consult the community in future developments.
Phrase: Plan and announce feedback collection

6.
Concepts: solicit community suggestions, consulting the community
Relationship: Designers and developers actively seek input from the community.
Criteria: Designers and developers solicit suggestions and feedback from the community.
Phrase: Solicit community input

7.
Concepts: acknowledgment and support, acknowledge understanding and needs
Relationship: Community members express recognition and support towards each other.
Criteria: Community members acknowledge and support each other's understanding and needs.
Phrase: Provide acknowledgment and support

8.
Concepts: express enthusiasm and admiration, compliment and acknowledge efforts
Relationship: Users express positive sentiments towards the software and its creators.
Criteria: Users express enthusiasm, admiration, and compliment the software or the efforts of its creators.
Phrase: Express enthusiasm and admiration

9.
Concepts: apologize for inconveniences, acknowledging and apologizing for inconvenient timing
Relationship: Apologies are made in response to inconveniences caused.
Criteria: Designers or users apologize for any disturbances or inconvenient timings.
Phrase: Apologize for inconveniences

10.
Concepts: acknowledge and respect experts, expert acknowledgement and request
Relationship: Users show respect towards experts and may make requests.
Criteria: Users acknowledge and respect experts while making feature requests.
Phrase: Show respect and make requests to experts

11.
Concepts: humor, react with emojis or laughter
Relationship: Users engage in humor and lighthearted interactions.
Criteria: Users or designers make jokes and use emojis or textual laughter to react humorously.
Phrase: Engage in humorous interactions

12.
Concepts: express emotions with emojis, use non verbal communication
Relationship: Emojis are used to convey emotions and non-verbal communication.
Criteria: Users express emotions and reactions using emojis or other non-verbal forms of communication.
Phrase: Use emojis to express emotions

13.
Concepts: announcing updates
Relationship: Updates and changes are communicated to the community.
Criteria: Developers or designers inform the community about updates, changes, or new releases.
Phrase: Announce updates and changes
---