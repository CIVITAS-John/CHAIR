You are an expert in thematic analysis clarifying the criteria of qualitative codes. Do not attempt to merge codes now.
Consider provided quotes, and note that each quote is independent of others.
Write clear and generalizable criteria for each code and do not introduce unnecessary details.
If necessary, refine labels to be more accurate, but do not repeat yourself.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1. 
Criteria: {Who did what, and how for code 1}
Label: {A descriptive label of code 1}
...
32.
Criteria: {Who did what, and how for code 32}
Label: {A descriptive label of code 32}
---
~~~
1.
Label: confirm common style
Quotes:
- User: Yes, the common one is still the old style

2.
Label: acknowledge user sentiments
Quotes:
- Designer: ðŸ˜‚

3.
Label: express hope for timely release
Quotes:
- Designer: This is quite complex, so it will take more time... Hopefully, it can be released this week

4.
Label: engage with the community for assistance
Quotes:
- User: How to download?

5.
Label: express emotion with emoji
Quotes:
- User: [Emoji][Emoji]

6.
Label: emphasized importance of auto generated quality
Quotes:
- Designer: It's still better to make the auto-generated one as good as possible

7.
Label: provide access to resources
Quotes:
- Designer: Hello everyone~ The development plan and PC download address are in the group announcement.
- Designer: You can download Windows in the group files.

8.
Label: articulate focus areas
Quotes:
- Designer: Physics mainly focuses on electricity and mechanics; other directions don't have much room for free experiments before high school. In the future, we might do some demonstration experiments based on everyone's needs, but it won't be as open as electricity

9.
Label: appreciation
Quotes:
- User: Okay, okay~ Thank you for your hard work.
- User: [Emoji][Emoji]
- User: [Emoji]

10.
Label: express interest in using the software
Quotes:
- User: How to download?

11.
Label: express curiosity
Quotes:
- Designer: Haha. Are you a middle school or high school teacher?
- User: Are there any other updates recently?
- User: How to download?

12.
Label: announce component update
Quotes:
- Designer: From the next update, dry batteries will no longer be ideal components (you can remove the internal resistance to simulate).

13.
Label: request inclusion of mechanics
Quotes:
- User: Can you also include mechanics experiments?

14.
Label: communicate expected updates
Quotes:
- Designer: The Android version is expected to update tonight

15.
Label: ensure user contributions are remembered
Quotes:
- Designer: Before starting mechanics, we will gather opinions again~ Otherwise, I'm afraid I won't remember everything.

16.
Label: difficulty in development
Quotes:
- Designer: This is quite complex, so it will take more time... Hopefully, it can be released this week

17.
Label: expand software utility
Quotes:
- User: Can you also include mechanics experiments?

18.
Label: prioritize user feedback
Quotes:
- Designer: Hmm... I'll add it in the next update. PC updates are usually the fastest, so there will probably be another round this weekend.

19.
Label: foster participatory design approach
Quotes:
- Designer: Okay. Please give more suggestions!

20.
Label: initiate new topic
Quotes:
- User: How to download?

21.
Label: answer to a question
Quotes:
- Designer: Don't worry, don't worry, it will come, just optimizing the circuit diagram one last time.

22.
Label: assess user identity and role within the community
Quotes:
- Designer: I'll upload one now... Are you a teacher?

23.
Label: acknowledged experts
Quotes:
- User: First, let's pay homage to the experts, then I'll make a small request. Could you create a dynamic demonstration of mechanical waves and mechanical vibrations, such as the propagation of transverse and longitudinal waves, wave superposition, diffraction, and interference? Also, for optical experiments, it would be great to have optical benches, single slits, double slits, and polarizers to demonstrate optical experiments.

24.
Label: maintain open communication with the community
Quotes:
- Designer: Okay.

25.
Label: reiterate the need for user support
Quotes:
- User: Need the user manual for this software

26.
Label: highlight potential barriers to software use
Quotes:
- User: Generally not. Ever since an adult image popped up during a major city-level open class, the school has disabled the network on classroom computers [Emoji].
- User: Dizzy, the computer system for teachers at our school is quite old.

27.
Label: acknowledge design quality
Quotes:
- User: The 3D effect of your software is very good

28.
Label: aligned updates with educational needs
Quotes:
- Designer: There will be: multimeter; powered solenoid; semiconductor capacitor; support for conversion to ideal ammeter (more convenient for problem-solving and middle school teaching)

29.
Label: enhance understanding of user interaction
Quotes:
- Designer: Touch screens have their own on-screen keyboards.

30.
Label: advocate for structured refinement
Quotes:
- User: Don't aim for completeness, it should be categorized and refined one by one

31.
Label: set realistic expectations for functionality
Quotes:
- Designer: This version of the circuit diagram is for testing only... You can drag the Editor because the auto-layout algorithm is not very stable and may produce some odd results

32.
Label: provide future plans
Quotes:
- Designer: We will also update the multimeter and powered solenoid this week. If there are any other features, characteristics, or electronic components you hope to include in the production plan, please leave a message in the group, and we will consider it as much as possible. The previously mentioned feature of saving experiments to the cloud/local is also in the plan. Thank you, everyone!
- Designer: Physics mainly focuses on electricity and mechanics; other directions don't have much room for free experiments before high school. In the future, we might do some demonstration experiments based on everyone's needs, but it won't be as open as electricity
- Designer: For electricity, we plan to create a function for simulated experiment assessment; it will add many experimental details, such as zero adjustment (of course, only useful in specific modes, otherwise it would be cumbersome to use regularly)
- Designer: Hmm... We will probably prioritize completing the electrical section first, then magnetism, and then other parts.
- Designer: Of course, manual editing will also be allowed, but it might be a bit later
===
Here are the definitions for each code:

---
1. Criteria: A user confirms or agrees with a common style or approach.
Label: Confirm common style

2. Criteria: A designer acknowledges or responds to user sentiments or emotions.
Label: Acknowledge user sentiments

3. Criteria: A designer expresses hope or optimism about a timely release of a feature or update.
Label: Express hope for timely release

4. Criteria: A user requests assistance or guidance from the community or designer.
Label: Seek community assistance

5. Criteria: A user expresses emotion or sentiment using an emoji.
Label: Express emotion with emoji

6. Criteria: A designer emphasizes the importance of auto-generated quality in the software.
Label: Emphasize auto-generated quality

7. Criteria: A designer provides access to resources, such as files or announcements.
Label: Provide access to resources

8. Criteria: A designer articulates the focus areas or priorities of the software development.
Label: Articulate focus areas

9. Criteria: A user expresses gratitude or appreciation for the designer's work.
Label: Express appreciation

10. Criteria: A user expresses interest in using the software or a specific feature.
Label: Express interest in using software

11. Criteria: A user or designer expresses curiosity or asks a question.
Label: Express curiosity

12. Criteria: A designer announces an update or change to a software component.
Label: Announce component update

13. Criteria: A user requests the inclusion of a specific feature or experiment (mechanics).
Label: Request feature inclusion

14. Criteria: A designer communicates expected updates or timelines.
Label: Communicate expected updates

15. Criteria: A designer ensures that user contributions or opinions are remembered or considered.
Label: Ensure user contributions remembered

16. Criteria: A designer expresses difficulty or challenge in developing a feature or update.
Label: Express development difficulty

17. Criteria: A user or designer suggests expanding the software's utility or functionality.
Label: Suggest expanding software utility

18. Criteria: A designer prioritizes user feedback or suggestions.
Label: Prioritize user feedback

19. Criteria: A designer fosters a participatory design approach, encouraging user input.
Label: Foster participatory design

20. Criteria: A user initiates a new topic or discussion.
Label: Initiate new topic

21. Criteria: A designer responds to a user's question or inquiry.
Label: Respond to user inquiry

22. Criteria: A designer assesses or inquires about a user's identity or role within the community.
Label: Assess user identity

23. Criteria: A user acknowledges or pays homage to experts or authorities in the field.
Label: Acknowledge experts

24. Criteria: A designer maintains open communication with the community, responding to users.
Label: Maintain open communication

25. Criteria: A user reiterates the need for user support or resources.
Label: Reiterate need for user support

26. Criteria: A user highlights potential barriers to using the software, such as technical issues.
Label: Highlight potential barriers

27. Criteria: A user acknowledges or praises the design quality of the software.
Label: Acknowledge design quality

28. Criteria: A designer aligns updates or features with educational needs or goals.
Label: Align updates with educational needs

29. Criteria: A designer seeks to enhance understanding of user interaction or behavior.
Label: Enhance understanding of user interaction

30. Criteria: A user advocates for a structured refinement or development approach.
Label: Advocate for structured refinement

31. Criteria: A designer sets realistic expectations for the software's functionality or performance.
Label: Set realistic expectations

32. Criteria: A designer provides future plans or roadmaps for the software's development.
Label: Provide future plans