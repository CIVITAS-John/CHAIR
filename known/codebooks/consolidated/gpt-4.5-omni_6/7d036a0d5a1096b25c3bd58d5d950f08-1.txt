You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (59 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
59. 
Concepts: {Repeat the input 59}
Relationship: {What is logical relationship between concepts in code 59, or N/A if not applicable}
Criteria: {Who did what, and how for code 59}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: explain limitation, explain current versionâ€™s limitation
- The designer clarifies limitations of software features.
- Designers explaining the limitations or temporary issues with the current software version.

2.
Concepts: discuss technical constraints, address hardware limitations
- Someone highlights technical constraints or common issues that affect the usability of the software.
- Someone considers and discusses hardware limitations and their impact on functionality, highlighting the need for specific functions due to hardware constraints.

3.
Concepts: outdated technology, highlight outdated technology
- Users referencing outdated technology within their educational settings.
- Pointing out the use of outdated or old technology.

4.
Concepts: platform limitation, system limitations
- Discussing limitations of the software concerning older platforms.
- A user mentions limitations or issues related to the age or condition of the computer systems they are using.

5.
Concepts: expert recognition, showing respect to experts
- Recognition of users as experts and solicitations of specific, detailed feature requests.
- Users show respect to experts when making advanced feature or experiment requests.

6.
Concepts: provide specific feedback, mention feedback-based prompts
- Users provide specific directions or feedback.
- Notifying users that certain prompts or instructions will be added based on previous feedback.

7.
Concepts: express user needs, make detailed feature request, explain reasons for the request
- Users articulate specific needs or expectations from the software.
- Users making detailed and specific feature requests.
- Users explain their needs and reasons for requesting certain features.

8.
Concepts: request additional experiments, request features for physics experiments
- Users request the addition of specific types of experiments or features.
- Users request new features or improvements specific to physics experiments within the software.

9.
Concepts: subject expansion, expand platform scope
- Exploring the possibility of expanding the software to cover additional subjects.
- User requests expansion of the software's experimental scope to include new subjects or topics.

10.
Concepts: platform specification, platform-specific communication
- Person specifies the platform about which they are inquiring or referring to.
- Discussions specific to the features or communication within a given platform.

11.
Concepts: show interest, expression of interest
- User expresses interest in accessing or using the software.
- Expressing personal interest in a subject area or potential software feature.

12.
Concepts: suggest an alternative solution, encourage suggestions for interaction
- A participant suggests an alternative solution or method to improve usability or functionality.
- A participant encourages others to provide feedback or suggests ways to improve user interaction.

13.
Concepts: open to alternatives, alternative offering/seeking
- Demonstrating openness to alternative solutions or feedback-based design changes.
- Person suggests or seeks alternatives to existing or proposed ideas.

14.
Concepts: opinion gathering, future consultation promise, announce future consultation
- Announcements about future opinion collection before starting new features.
- Promise to gather opinions or feedback before starting new work.
- Statements about future consultations or plans for gathering user input.

15.
Concepts: design decision, interface layout decisions
- Discussions surrounding specific design decisions.
- Decisions or preferences shared about the interface layout.

16.
Concepts: reflect on past experience, reflection on experiences
- Reflecting on previous experiences or attempts to solve a problem.
- Designer reflects on their previous experience related to user scenarios or software use.

17.
Concepts: personal interest, express personal interest, share potential future direction
- Designer shares personal interests related to the broader subject of the software.
- Designers share their own interests or how it might align with the project.
- Designer shares potential future directions or their own interests related to the software subject.

18.
Concepts: offering co-designing, co-designing with users
- Instances where individuals invite others to participate in the software's design process.
- Involving users in the design process, allowing them to contribute ideas and make decisions.

19.
Concepts: direct communication, engage in user-designer interaction
- Direct interactions between designers and users to discuss features, updates, and feedback.
- Conversations displaying collaborative interaction between users and designers.

20.
Concepts: open communication, offer ongoing support
- Designer encourages open communication, inviting users to share problems and suggestions.
- The designer offers continuous support and invites users to mention issues directly.

21.
Concepts: reaction to feedback, appreciation of feedback, acknowledgment and implementation
- Designers reacting to user feedback and discussing updates.
- Designers expressing gratitude for feedback and suggesting it will be considered in future updates.
- Designers acknowledging user feedback and discussing plans to implement suggested features.

22.
Concepts: accepting the suggestion, implementing user suggestions
- Designer indicates acceptance of a user's suggestion or request.
- Designers agree to implement user suggestions in future updates.

23.
Concepts: discuss feature improvements, give an opinion on future improvement
- A participant discusses improvements or adjustments needed for existing features.
- Designer shares their opinion on improving a feature for better outcome.

24.
Concepts: justify suggestions, suggest practical use case
- A user provides justifications for their suggestions or changes to the software.
- Suggesting practical use cases or improvements for the software.

25.
Concepts: promise to improve, commit to improvement
- Promising to enhance or improve based on feedback.
- Showing a commitment to make ongoing improvements to the software.

26.
Concepts: plan for iterative feedback, iterative development based on user feedback
- Planning to seek user feedback before proceeding with significant updates.
- Indicating that software development decisions are being made in response to user feedback.

27.
Concepts: internal update, instruction and updates
- Designer provides internal update information about the software's components or upcoming changes.
- Designers providing updates and instructions to help users understand and use the software effectively.

28.
Concepts: explaining feature functionality, explaining new software features
- Designers explain or introduce specific software functions or features and illustrate how they function.
- Designers describe upcoming improvements or changes and explain the new or upcoming features of the software.

29.
Concepts: providing feature previews, give an intro to the update content
- Designers share visual or textual previews of new features and updates.
- Designers introducing the content of upcoming updates or new features.

30.
Concepts: product iteration, new version release announcement
- Announcing the release and details of a new product version.
- A participant announces the release of a new version of the software.

31.
Concepts: announcement of plans, announce upcoming updates
- Notifications about future plans or upcoming features shared with the community.
- Notifying users about upcoming updates and inviting feature requests.

32.
Concepts: new components, bug fixes and improvements, version update notes, listing features and bug fixes
- Listing new features, components, and bug fixes in an update.
- Person lists specific fixes and improvements that have been made in the latest update.
- Designers releasing detailed notes on the features and fixes in a new update.
- Designers list new features and bug fixes in each software update.

33.
Concepts: expressing anticipation for updates, asking about software updates
- Users express anticipation for future software updates.
- Users inquire about the nature, existence, and timelines of recent or upcoming updates.

34.
Concepts: update status inquiry, inquire about android update status
- Inquiring about the update status of a specific platform version.
- User inquires about the status or timing of an Android software update.

35.
Concepts: testing phase, clarify testing status
- Indicating the current phase of testing for a specific version.
- Clarifying the status or purpose of a version or feature under testing.

36.
Concepts: ios review status update, update on review status
- A participant provides an update on the status of the iOS app review process.
- Updates on the status of reviews, particularly mentioning the Apple Store and other platforms.

37.
Concepts: request acceptance, confirm future feature
- Person confirms they will implement a requested feature or update in the future.
- A participant confirms that a feature will be available in the future but notes it will take some time.

38.
Concepts: reassure users, update reassurance
- Designers reassure users about progress and express gratitude or encouragement regarding upcoming features or improvements.
- Person reassures the community about the delivery of updates or improvements while specifying they are being optimized.

39.
Concepts: express hope for progress, setting future feature expectations, promise that the update is ongoing
- Designer expresses their hopes or expectations for future development or feature completion.
- Designers promise to add or refine features in future updates and indicate future improvements.
- Designers promising that the development or update process is ongoing.

40.
Concepts: ongoing work communication, progress and plans communication
- Providing information about the work currently being done or in progress.
- Communicating about ongoing research, progress, and future plans.

41.
Concepts: research and development, current development efforts
- Details about ongoing research or development efforts related to the software.
- Person mentions ongoing research or work on existing software functionalities.

42.
Concepts: provide future plans, development goals
- Outlining future plans and priorities for software development.
- Stating long-term objectives and ambitions regarding the development of the software.

43.
Concepts: future planning, future design plan, future development planning
- Discussing potential compatibility or planning for future development.
- Outlining plans and intentions for future design developments.
- Person mentions plans or prospects for future development and enhancements.

44.
Concepts: feature roadmap, outlining development priorities
- A participant (likely a designer) discusses the sequence or priority of features to be developed for the Physics Lab.
- Designers discuss the order and priority of software development tasks.

45.
Concepts: project management, project planning
- Designer outlines the planned progression or stages of project development.
- Designer shares details about project planning and future steps related to feature development.

46.
Concepts: explain complexity, difficulty in development
- Explanations discussing the complexity and time needed for certain tasks.
- A participant acknowledges the complexity of a task and explains the additional time required for its completion.

47.
Concepts: highlight long-term benefits, long-term stability features
- Highlighting the long-term benefits and stability of certain features.
- Person describes features that contribute to the long-term stability and reliability of the software.

48.
Concepts: feature importance explanation, feature stability importance
- Person explains the critical importance and benefits of certain features.
- Person discusses the importance and impact of feature stability on overall usability.

49.
Concepts: simulated experiment, detail simulated experiment assessment
- Describing the features or details of planned simulated experiments within the software.
- Detailed plans of simulated experiment assessment features.

50.
Concepts: simulation accuracy, explain simulation detail
- Information about changes to improve simulation accuracy in future updates.
- Explaining specific changes or adjustments in the simulation details for accuracy.

51.
Concepts: introduce new component, component integration
- Describing or introducing a new component within the software.
- Mentioning the process or ease of integrating new components into the software.

52.
Concepts: feature list, provide feature details
- A participant lists features and components included in the software.
- Detailing the features or components included in the software.

53.
Concepts: feature examples, list upcoming features, specific feature updates
- Providing specific examples of planned or proposed features.
- Listing future features that will be available in upcoming versions.
- Person details specific features or updates planned for future versions.

54.
Concepts: feature expansion, plan feature development
- Indicating the expansion or enhancement of existing features.
- Indicating future development or addition of features.

55.
Concepts: design refinement, simplification and refinement in design
- Refining or simplifying the design for better usability.
- Users and designers discussing the importance of simplifying and refining the design.

56.
Concepts: seek efficiency, design thoughts
- The designer emphasizes the need for simplicity.
- The designer shares thoughts about making design simpler.

57.
Concepts: design rationale, explaining design goals
- Designers explaining the rationale behind design features to reduce additional instructions.
- Explanations highlighting the design goals to simplify or enhance user experience.

58.
Concepts: usability, address usability
- Statements highlighting efforts to enhance or simplify the software's usability.
- Efforts to address usability issues and improve user experience.

59.
Concepts: local export necessity, consider local export functionality
- Noting the necessary support for exporting data locally.
- Considering the inclusion of a feature that allows users to export data locally.
===
---
Definitions for each code (59 in total):

1.
Concepts: explain limitation, explain current versionâ€™s limitation
Relationship: Designer clarifies issues pertaining to software limitations.
Criteria: The designer clarifies limitations or temporary issues with the current version of the software.
Phrase: Explaining software limitations

2.
Concepts: discuss technical constraints, address hardware limitations
Relationship: Both concepts involve the user's interface with inadequate resources affecting software use.
Criteria: Someone highlights technical and hardware constraints, discussing how these affect software functionality.
Phrase: Discussing technical barriers

3.
Concepts: outdated technology, highlight outdated technology
Relationship: Both concepts refer to identifying older technology in use.
Criteria: Users reference the presence and impact of outdated technology in educational settings.
Phrase: Highlighting outdated technology

4.
Concepts: platform limitation, system limitations
Relationship: Both concepts pertain to the constraints due to platform or system requirements.
Criteria: A user discusses software limitations resulting from older platforms or system conditions.
Phrase: Discussing system limitations

5.
Concepts: expert recognition, showing respect to experts
Relationship: Both concepts involve acknowledging the role and expertise of users.
Criteria: Users recognize and show respect to experts while soliciting detailed feature requests.
Phrase: Recognizing user expertise

6.
Concepts: provide specific feedback, mention feedback-based prompts
Relationship: Both concepts involve incorporating user feedback.
Criteria: Users provide specific feedback or are notified of changes based on prior feedback.
Phrase: Providing feedback

7.
Concepts: express user needs, make detailed feature request, explain reasons for the request
Relationship: Combined expression of needs and reasons driving the feature request.
Criteria: Users articulate specific needs, make detailed requests, and explain their reasons for requesting particular features.
Phrase: Requesting features with rationale

8.
Concepts: request additional experiments, request features for physics experiments
Relationship: Both concepts involve user requests specific to experiment functionalities.
Criteria: Users request additional features or improvements specific to physics experiments.
Phrase: Requesting experiment features

9.
Concepts: subject expansion, expand platform scope
Relationship: Both concepts involve broadening the range of subjects the software covers.
Criteria: Users explore or request the expansion of the software's scope to new subjects or experiment topics.
Phrase: Requesting subject expansion

10.
Concepts: platform specification, platform-specific communication
Relationship: Both concepts involve discussions specific to particular platforms.
Criteria: A person specifies and discusses issues or features related to a particular platform.
Phrase: Discussing platform specifics

11.
Concepts: show interest, expression of interest
Relationship: Both concepts involve user interest in software or subject matter.
Criteria: Users express their interest in using the software or in specific features.
Phrase: Expressing interest

12.
Concepts: suggest an alternative solution, encourage suggestions for interaction
Relationship: Both concepts involve offering and promoting alternative solutions or methods.
Criteria: A participant suggests alternatives and encourages others to provide similar feedback or suggestions.
Phrase: Suggesting alternatives

13.
Concepts: open to alternatives, alternative offering/seeking
Relationship: Both concepts involve the openness to alternative ideas.
Criteria: A person shows openness to alternative solutions and seeks or offers new ideas.
Phrase: Seeking and offering alternatives

14.
Concepts: opinion gathering, future consultation promise, announce future consultation
Relationship: Announcements relate to collecting future user opinions.
Criteria: Announcements or promises to gather opinions and engage in consultation before starting new features.
Phrase: Announcing future consultations

15.
Concepts: design decision, interface layout decisions
Relationship: Both concepts involve decisions regarding design and interface layout.
Criteria: Discussions and preferences shared about design decisions, particularly the interface layout.
Phrase: Making design decisions

16.
Concepts: reflect on past experience, reflection on experiences
Relationship: Both concepts involve reflecting on previous experiences.
Criteria: Reflecting on past experiences or attempts to solve software-related issues.
Phrase: Reflecting on past experiences

17.
Concepts: personal interest, express personal interest, share potential future direction
Relationship: Both concepts involve sharing personal interests that align with future project directions.
Criteria: A designer shares their personal interests and potential future directions for the software.
Phrase: Sharing personal interests

18.
Concepts: offering co-designing, co-designing with users
Relationship: Both concepts involve inviting users to participate in the design process.
Criteria: Instances where individuals invite others to co-design and contribute ideas to the software.
Phrase: Inviting co-designing

19.
Concepts: direct communication, engage in user-designer interaction
Relationship: Both concepts involve direct interactions between users and designers.
Criteria: Engaging in direct communication between users and designers to discuss features and updates.
Phrase: Engaging in user-designer interaction

20.
Concepts: open communication, offer ongoing support
Relationship: Both concepts emphasize continuous and open communication.
Criteria: The designer promotes open communication and support, inviting users to share their issues directly.
Phrase: Promoting open communication

21.
Concepts: reaction to feedback, appreciation of feedback, acknowledgment and implementation
Relationship: Both concepts involve responding positively to user feedback.
Criteria: Designers acknowledge feedback, express appreciation, and discuss implementation plans.
Phrase: Responding to feedback

22.
Concepts: accepting the suggestion, implementing user suggestions
Relationship: Both concepts involve designers accepting and implementing user suggestions.
Criteria: Designers indicate acceptance of user suggestions and agree to implement them in future updates.
Phrase: Accepting and implementing suggestions

23.
Concepts: discuss feature improvements, give an opinion on future improvement
Relationship: Both concepts refer to updates and enhancements to features.
Criteria: Participants discuss necessary feature improvements and share their opinions on potential updates.
Phrase: Discussing feature improvements

24.
Concepts: justify suggestions, suggest practical use case
Relationship: Both concepts involve justifying suggestions with practical examples.
Criteria: A user justifies their suggestions by providing practical use cases or improvements for the software.
Phrase: Justifying suggestions with use cases

25.
Concepts: promise to improve, commit to improvement
Relationship: Both concepts involve commitments to enhancing the software.
Criteria: Promising and committing to ongoing software improvements based on feedback.
Phrase: Committing to improvements

26.
Concepts: plan for iterative feedback, iterative development based on user feedback
Relationship: Both concepts highlight relying on iterative user feedback for development.
Criteria: Planning and implementing an iterative development approach based on user feedback.
Phrase: Planning iterative development

27.
Concepts: internal update, instruction and updates
Relationship: Both concepts involve providing updates and instructions.
Criteria: Designers provide updates about the software's components and offer usage instructions.
Phrase: Providing software updates

28.
Concepts: explaining feature functionality, explaining new software features
Relationship: Both concepts involve clarifying how software features work.
Criteria: Designers explain and introduce specific software functionalities and upcoming features.
Phrase: Explaining feature functionality

29.
Concepts: providing feature previews, give an intro to the update content
Relationship: Both concepts involve presenting previews of new features.
Criteria: Designers share visual or textual previews and introductory content related to updates.
Phrase: Providing feature previews

30.
Concepts: product iteration, new version release announcement
Relationship: Both concepts refer to the announcement of new software releases.
Criteria: Announcing and detailing the release of new software versions.
Phrase: Announcing new version releases

31.
Concepts: announcement of plans, announce upcoming updates
Relationship: Both concepts involve sharing future plans and updates.
Criteria: Notifications about upcoming updates and inviting user input are shared with the community.
Phrase: Announcing upcoming updates

32.
Concepts: new components, bug fixes and improvements, version update notes, listing features and bug fixes
Relationship: All concepts are related to detailing new updates and fixes.
Criteria: Designers list and describe new features, components, and fixes in software updates.
Phrase: Listing update details

33.
Concepts: expressing anticipation for updates, asking about software updates
Relationship: Both concepts involve usersâ€™ interest in future updates.
Criteria: Users inquire about and express anticipation for upcoming software updates.
Phrase: Inquiring about updates

34.
Concepts: update status inquiry, inquire about android update status
Relationship: Both concepts involve questions about specific platform updates.
Criteria: Users inquire about the status or timing of the Android software update.
Phrase: Inquiring about update status

35.
Concepts: testing phase, clarify testing status
Relationship: Both concepts pertain to the current phase and status in testing.
Criteria: Indicating or clarifying the testing phase and status of a specific software version.
Phrase: Clarifying testing status

36.
Concepts: ios review status update, update on review status
Relationship: Both concepts involve providing updates on software reviews.
Criteria: Updates on the status of the iOS app review process are provided.
Phrase: Updating review status

37.
Concepts: request acceptance, confirm future feature
Relationship: Both concepts entail confirming future implementation of features.
Criteria: Person confirms they will implement a requested feature or update it in the future.
Phrase: Accepting and confirming requests

38.
Concepts: reassure users, update reassurance
Relationship: Both concepts involve reassuring the community regarding updates or issues.
Criteria: Designers reassure users about ongoing progress and upcoming improvements.
Phrase: Reassuring users about updates

39.
Concepts: express hope for progress, setting future feature expectations, promise that the update is ongoing
Relationship: Both concepts involve communicating future expectations and ongoing progress.
Criteria: Designers express hope and set expectations about continued development and feature improvements.
Phrase: Setting future expectations

40.
Concepts: ongoing work communication, progress and plans communication
Relationship: Both concepts focus on discussing ongoing work and future plans.
Criteria: Providing information about ongoing research, progress, and future plans.
Phrase: Communicating ongoing progress

41.
Concepts: research and development, current development efforts
Relationship: Both concepts reference ongoing research and development activities.
Criteria: Details about ongoing research and current development efforts are provided.
Phrase: Describing ongoing development

42.
Concepts: provide future plans, development goals
Relationship: Both concepts involve stating future plans and development goals.
Criteria: Outlining future plans, goals, and priorities for software development.
Phrase: Outlining future development goals

43.
Concepts: future planning, future design plan, future development planning
Relationship: All concepts are about planning for future software developments.
Criteria: Discussing plans and intentions for future design and development.
Phrase: Planning future development

44.
Concepts: feature roadmap, outlining development priorities
Relationship: Both concepts involve the sequence and priority for developing features.
Criteria: Designers outline the sequence and priority of software development tasks.
Phrase: Outlining development priorities

45.
Concepts: project management, project planning
Relationship: Both concepts involve planning and managing software development projects.
Criteria: Designer outlines the planned progression and future steps of development projects.
Phrase: Managing project plans

46.
Concepts: explain complexity, difficulty in development
Relationship: Both concepts address the complexity and effort required for certain tasks.
Criteria: Explanations discuss the complexity and time needed to complete certain development tasks.
Phrase: Explaining development complexity

47.
Concepts: highlight long-term benefits, long-term stability features
Relationship: Both concepts highlight long-term advantages of software features.
Criteria: Highlighting the long-term benefits and stability provided by certain features.
Phrase: Highlighting long-term benefits

48.
Concepts: feature importance explanation, feature stability importance
Relationship: Both concepts pertain to the importance of feature stability.
Criteria: Explanations focus on the critical importance and benefits of stable software features.
Phrase: Explaining feature importance

49.
Concepts: simulated experiment, detail simulated experiment assessment
Relationship: Both concepts relate to the planning and evaluation of simulated experiments.
Criteria: Describing features and details of planned simulated experiments within the software.
Phrase: Detailing simulated experiments

50.
Concepts: simulation accuracy, explain simulation detail
Relationship: Both concepts address the accuracy and detail of simulations.
Criteria: Information about changes to improve simulation accuracy and specific adjustments is provided.
Phrase: Improving simulation accuracy

51.
Concepts: introduce new component, component integration
Relationship: Both concepts involve introducing and integrating new components.
Criteria: Describing the introduction and integration of new components in the software.
Phrase: Introducing new components

52.
Concepts: feature list, provide feature details
Relationship: Both concepts involve listing and detailing the features of the software.
Criteria: Listing and detailing the features and components included in the software.
Phrase: Listing features

53.
Concepts: feature examples, list upcoming features, specific feature updates
Relationship: All concepts pertain to providing information on planned or future features.
Criteria: Providing specific examples of planned or proposed features for upcoming versions.
Phrase: Listing upcoming features

54.
Concepts: feature expansion, plan feature development
Relationship: Both concepts involve planning to expand or enhance features.
Criteria: Indicating plans to expand existing features or develop new ones.
Phrase: Planning feature expansion

55.
Concepts: design refinement, simplification and refinement in design
Relationship: Both concepts involve refining design to improve usability.
Criteria: Discussing the importance of refining and simplifying the design for better usability.
Phrase: Refining design

56.
Concepts: seek efficiency, design thoughts
Relationship: Both concepts involve thoughts on making design simpler and more efficient.
Criteria: The designer emphasizes and shares thoughts on simplifying the design for efficiency.
Phrase: Simplifying design

57.
Concepts: design rationale, explaining design goals
Relationship: Both concepts involve explaining the thought process behind design features.
Criteria: Designers explain the rationale behind design goals aimed at enhancing user experience.
Phrase: Explaining design rationale

58.
Concepts: usability, address usability
Relationship: Both concepts pertain to efforts to enhance usability.
Criteria: Highlighting efforts to address and improve the software's usability.
Phrase: Addressing usability

59.
Concepts: local export necessity, consider local export functionality
Relationship: Both concepts involve addressing the need for local data export functionality.
Criteria: Considering and noting the necessity of including local data export support.
Phrase: Considering local export functionality
---