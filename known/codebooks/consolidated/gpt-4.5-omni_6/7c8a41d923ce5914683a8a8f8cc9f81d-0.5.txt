You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: seek clarification, seeking additional clarification
- Participants ask clarifying questions or provide clarification in response.
- Participants ask for additional information or clarification regarding user requests or usage scenarios.

2.
Concepts: show consideration for users, expressing politeness and apologies
- Designer shows consideration for users by apologizing for a disturbance.
- Designers express politeness or acknowledge potential inconvenience by apologizing to users.

3.
Concepts: context, providing contextual information
- Providing background information or context relevant to the discussion.
- Users provide context or background information to explain a situation.

4.
Concepts: announcing new features, announcing software releases
- Designers announce new features or updates and provide relevant information.
- Designers announce and provide details about software updates and new features.

5.
Concepts: technical detail, detailing update notes
- Designer provides detailed technical updates and changes in the application.
- A designer provides detailed notes on version updates, new features, and component adjustments.

6.
Concepts: discussing feature development, share information about current feature development
- Discussing features or aspects of the software design.
- A participant shares information about the development of current features.

7.
Concepts: discussing future plans, discussing project planning
- Discussing future updates or potential developments for the product.
- Discussing plans for future projects or updates.

8.
Concepts: confirm compatibility, addressing system compatibility
- A designer confirms compatibility with a specific system or platform.
- A designer discusses system requirements or suggests checking system compatibility.

9.
Concepts: inquiring about pc version, inquire about platform availability
- A user asks how to use or access the PC version of the software.
- A user inquires about the availability of a PC version of the software.

10.
Concepts: user manual inquiry, seeking user guidance
- Users inquiring about the availability of a user manual.
- User seeks guidance or expresses the need for a user manual or usage support.

11.
Concepts: suggesting improvements, feature request invitation
- Users or designers provide suggestions for improvements or new features.
- Designers invite users to suggest new features or improvements.

12.
Concepts: provide positive feedback, providing positive feedback
- Users appreciate and provide positive feedback on ideas or features.
- Users express satisfaction and provide positive feedback on the software's usability and features.
===
---
Definitions for each code (12 in total):
1.
Concepts: seek clarification, seeking additional clarification
Relationship: Both involve participants asking for or providing further information.
Criteria: Participants ask for or provide additional information or clarification regarding user requests or usage scenarios.
Phrase: Seeking clarification

2.
Concepts: show consideration for users, expressing politeness and apologies
Relationship: Both involve designers showing politeness and consideration by apologizing.
Criteria: Designers show consideration for users by apologizing for disturbances or potential inconveniences.
Phrase: Expressing politeness and apologies

3.
Concepts: context, providing contextual information
Relationship: Both involve providing background information relevant to the discussion.
Criteria: Users provide background information or context to explain a situation.
Phrase: Providing contextual information

4.
Concepts: announcing new features, announcing software releases
Relationship: Both involve designers announcing and detailing new features or updates.
Criteria: Designers announce new features or updates and provide relevant information.
Phrase: Announcing new features

5.
Concepts: technical detail, detailing update notes
Relationship: Both involve providing detailed notes on technical updates and changes.
Criteria: Designers provide detailed notes on version updates, new features, and component adjustments.
Phrase: Detailing update notes

6.
Concepts: discussing feature development, share information about current feature development
Relationship: Both involve discussing and sharing information about software design and feature development.
Criteria: Participants discuss features or aspects of the software design and share information about current feature development.
Phrase: Discussing feature development

7.
Concepts: discussing future plans, discussing project planning
Relationship: Both involve discussing future updates, developments, or project plans.
Criteria: Participants discuss future updates or potential developments for the product and plans for future projects.
Phrase: Discussing future plans

8.
Concepts: confirm compatibility, addressing system compatibility
Relationship: Both involve confirming or discussing system compatibility.
Criteria: Designers confirm compatibility with specific systems or platforms and discuss system requirements.
Phrase: Confirming compatibility

9.
Concepts: inquiring about pc version, inquire about platform availability
Relationship: Both involve users inquiring about the availability or usage of a PC version.
Criteria: Users ask about the availability or how to access the PC version of the software.
Phrase: Inquiring about platform availability

10.
Concepts: user manual inquiry, seeking user guidance
Relationship: Both involve users seeking guidance or information about a user manual.
Criteria: Users inquire about the availability of a user manual or express the need for usage support.
Phrase: Seeking user guidance

11.
Concepts: suggesting improvements, feature request invitation
Relationship: Both involve suggesting or inviting suggestions for new features or improvements.
Criteria: Users or designers provide suggestions for improvements or new features, and designers invite such suggestions.
Phrase: Suggesting improvements

12.
Concepts: provide positive feedback, providing positive feedback
Relationship: Both involve users expressing satisfaction and providing positive feedback.
Criteria: Users appreciate and provide positive feedback on the software's usability and features.
Phrase: Providing positive feedback
---