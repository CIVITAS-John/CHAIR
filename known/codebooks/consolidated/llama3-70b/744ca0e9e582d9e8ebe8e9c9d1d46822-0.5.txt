You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. If a sub-code includes another, use the broader one. If sub-codes are parallel, write one that covers both.
Write clear and generalizable labels and criteria for each code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization (e.g. "social interaction" instead of "interaction", "communication approach" instead of "communication").
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (32 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {Consolidated criteria of code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
32.
Relationship: {The logical relationship between sub-codes in code 32}
Criteria: {Consolidated criteria of code 32}
Label: {A consolidated label of code 32}
Category: {2-4 words for code 32}
---
~~~
1. share info on app release, announcement about new version release.
- Sharing information about the release or availability of the app
- Announcing or releasing a new version of the app

2. announcement, community updates.
- Making an announcement or sharing news
- Updates shared within the community about ongoing projects, new resources, or significant events.

3. give a timeline, give a timeline of feature development, development timeline communication.
- Providing a timeline for a task or update.
- Providing a timeline or estimate for feature development or completion.
- Communication regarding expected timeframes for development tasks or updates.

4. share update timeline, sharing development updates, update communication details.
- Sharing information about the timeline for updates or releases
- Any mention of sharing information about changes or updates to the software or development process
- Detailed communication regarding the timing and content of software updates.

5. promising it will realize, promise to make the feature on a later time.
- Promising to realize a feature.
- Promising to implement a feature or functionality in the future.

6. promise to improve, promise a future perfection of a feature.
- Committing to improve or enhance the app
- Committing to perfect or improve a feature

7. give an opinion on why still makes the future perfection, give reasons for why the future perfection is not necessarily needed.
- Expressing an opinion or perspective on the importance of a feature
- Providing reasons or justifications for not needing a feature

8. talk about limitation of the solution, talk about why limitation is addressable.
- Discussing limitations of a solution.
- Discussing why a limitation is addressable.

9. share potential solutions, problem solving communication.
- Offering potential solutions or ideas for a problem or issue.
- Communication strategies used by users to solve problems or share solutions.

10. offer a solution, workaround solution.
- Offering a solution or workaround
- Creative or alternative solutions proposed by users to overcome limitations or issues.

11. self-solved, self answer.
- Resolving one's own issue
- Answering one's own question

12. confirm the diagnose, offers a diagnose for the problem.
- Confirming or validating a diagnosis or solution.
- Statements that provide a diagnosis or identification of a problem.

13. technology usage limitations, educational environment challenges.
- Explicit constraints on technology usage within educational settings, affecting instructional methods.
- Identification of challenges and barriers in educational settings that affect the use of technology.

14. theoretical compatibility, compatibility considerations.
- Statements about theoretical compatibility of the software with certain systems or conditions.
- Considerations related to ensuring software compatibility with various systems and requirements.

15. feature confirmation and relevance, interface and technical clarifications.
- Confirmation and reassurance regarding the relevance and implementation of software features.
- Technical clarifications provided regarding software interfaces and compatibility issues.

16. technical user support, technical and troubleshooting inquiry.
- Provision of targeted support and assistance in response to technical challenges faced by users.
- Technical inquiries and troubleshooting within the community

17. ask a question about the app, ask a question about how to use.
- Asking a question about the app or software
- Asking how to use a feature or functionality

18. explain version type, version clarification.
- Explaining or clarifying the type or version of the app
- Refers to providing details about the current state or iteration of a digital artifact, such as a software or platform.

19. demonstrating features, introduce feature functions.
- Providing examples or demonstrations of a feature's functionality
- Mentioning a specific feature or function of the app

20. product feature details, feature usage and explanation.
- Detailed descriptions of software features, including technical specifications and functionalities.
- Detailed explanation and discussion on the utility and application of specific software features.

21. feature list and introduction, give an intro to the update content.
- Detailed introduction of new or revised features in software updates.
- Introducing or outlining the content of an update or new feature.

22. designer support, designer responsiveness.
- Support or assistance requests directed specifically at designers.
- Timely and effective response to user needs and feedback by designers.

23. design decision, user feedback on design.
- Decision-making process in the design or configuration of a feature.
- User feedback specifically related to design choices, reflecting personal preferences.

24. future feature planning, feature sequencing and prioritization.
- Planning and consideration for the development of future software features and enhancements.
- Strategic planning and prioritization of software development tasks based on user needs and business goals.

25. educational tool enhancement, educational application of features.
- Features and enhancements aimed at improving educational tools
- Consideration of how software features can be effectively utilized within educational contexts.

26. design and accessibility improvements, expansion and alternative suggestions.
- Proposals for improving software design and accessibility based on user feedback and needs.
- Proposals for expanding or altering software features to enhance functionality or user experience.

27. feature simplification, feature enhancement and optimization.
- Efforts to simplify features to improve usability, sometimes through the addition of new elements.
- Enhancements and refinements made to software features to optimize performance and user experience.

28. resources sharing, community resource support.
- Sharing of resources or information within the community.
- Activities involving the distribution, sharing, and supportive use of digital resources within the community.

29. visual communication, emotive visual communication.
- Use of visual elements like images to communicate and share information within the community.
- Use of non-verbal symbols such as emojis to express emotions or emphasize communication.

30. confirming teacher identity, introduce teacher identity with grade-level and number of years.
- Confirming or identifying oneself as a teacher or educator.
- Introducing oneself as a teacher, including grade level and years of experience.

31. name a specific person, community role.
- Addressing a specific person in the community
- Identifications or references to the roles individuals play within the community, whether explicitly stated or implied.

32. professional background sharing, personal and professional inquiries.
- Sharing of personal and professional experiences to strengthen community bonds.
- Inquiries into personal or professional backgrounds to better understand and engage with community members.
===
Here is the output format with categories, definitions, and codes:

---
Categories:
* Community Engagement
* Feature Development
* Technical Support
* Design and Accessibility
* Educational Application
* Resource Sharing
* Identity and Roles
* Communication Approach

Definitions for each code:

1.
Relationship: Parallel sub-codes
Criteria: Sharing information about app releases or updates
Label: Sharing App Updates
Category: Community Engagement

2.
Relationship: Parallel sub-codes
Criteria: Sharing community updates or announcements
Label: Community Announcements
Category: Community Engagement

3.
Relationship: Broader sub-code
Criteria: Providing timelines for tasks or updates
Label: Development Timelines
Category: Feature Development

4.
Relationship: Parallel sub-codes
Criteria: Sharing information about update timelines
Label: Update Timelines
Category: Feature Development

5.
Relationship: Parallel sub-codes
Criteria: Promising to realize a feature in the future
Label: Future Feature Promises
Category: Feature Development

6.
Relationship: Parallel sub-codes
Criteria: Committing to improve or perfect a feature
Label: Feature Improvement Promises
Category: Feature Development

7.
Relationship: Parallel sub-codes
Criteria: Expressing opinions on feature importance
Label: Feature Importance Opinions
Category: Feature Development

8.
Relationship: Parallel sub-codes
Criteria: Discussing limitations and addressability
Label: Solution Limitations
Category: Technical Support

9.
Relationship: Parallel sub-codes
Criteria: Offering potential solutions or ideas
Label: Problem-Solving Communication
Category: Technical Support

10.
Relationship: Parallel sub-codes
Criteria: Offering solutions or workarounds
Label: Solution Offers
Category: Technical Support

11.
Relationship: Parallel sub-codes
Criteria: Resolving one's own issue
Label: Self-Solved Issues
Category: Technical Support

12.
Relationship: Parallel sub-codes
Criteria: Confirming or validating a diagnosis
Label: Diagnosis Confirmation
Category: Technical Support

13.
Relationship: Parallel sub-codes
Criteria: Discussing educational environment challenges
Label: Educational Environment Challenges
Category: Educational Application

14.
Relationship: Parallel sub-codes
Criteria: Discussing theoretical compatibility
Label: Theoretical Compatibility
Category: Design and Accessibility

15.
Relationship: Parallel sub-codes
Criteria: Providing feature confirmations and technical clarifications
Label: Feature Confirmations
Category: Design and Accessibility

16.
Relationship: Parallel sub-codes
Criteria: Providing technical support and troubleshooting
Label: Technical Support Requests
Category: Technical Support

17.
Relationship: Parallel sub-codes
Criteria: Asking questions about the app
Label: App Inquiries
Category: Technical Support

18.
Relationship: Parallel sub-codes
Criteria: Explaining or clarifying version types
Label: Version Clarifications
Category: Design and Accessibility

19.
Relationship: Parallel sub-codes
Criteria: Demonstrating features and introducing feature functions
Label: Feature Demonstrations
Category: Design and Accessibility

20.
Relationship: Parallel sub-codes
Criteria: Providing detailed feature explanations
Label: Feature Details
Category: Design and Accessibility

21.
Relationship: Parallel sub-codes
Criteria: Introducing new or revised features
Label: Feature Introductions
Category: Feature Development

22.
Relationship: Parallel sub-codes
Criteria: Requesting designer support
Label: Designer Support Requests
Category: Design and Accessibility

23.
Relationship: Parallel sub-codes
Criteria: Providing user feedback on design
Label: Design Feedback
Category: Design and Accessibility

24.
Relationship: Parallel sub-codes
Criteria: Planning for future feature development
Label: Future Feature Planning
Category: Feature Development

25.
Relationship: Parallel sub-codes
Criteria: Enhancing educational tools
Label: Educational Tool Enhancements
Category: Educational Application

26.
Relationship: Parallel sub-codes
Criteria: Proposing design and accessibility improvements
Label: Design Improvement Proposals
Category: Design and Accessibility

27.
Relationship: Parallel sub-codes
Criteria: Simplifying and optimizing features
Label: Feature Simplification
Category: Design and Accessibility

28.
Relationship: Parallel sub-codes
Criteria: Sharing resources within the community
Label: Resource Sharing
Category: Resource Sharing

29.
Relationship: Parallel sub-codes
Criteria: Using visual communication
Label: Visual Communication
Category: Communication Approach

30.
Relationship: Parallel sub-codes
Criteria: Confirming teacher identity
Label: Teacher Identity
Category: Identity and Roles

31.
Relationship: Parallel sub-codes
Criteria: Addressing a specific person in the community
Label: Community Roles
Category: Identity and Roles

32.
Relationship: Parallel sub-codes
Criteria: Sharing professional backgrounds
Label: Professional Background Sharing
Category: Identity and Roles