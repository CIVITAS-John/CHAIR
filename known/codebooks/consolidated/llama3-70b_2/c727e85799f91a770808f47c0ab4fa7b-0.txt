You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (15 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
15. 
Concepts: {Repeat the input 15}
Relationship: {What is logical relationship between concepts in code 15, or N/A if not applicable}
Criteria: {Who did what, and how for code 15}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: user engagement
- Instances where users actively participate in the conversation, showing interest or involvement in the community.
- Instances where users engage with designers through questions, feedback, or expressions of anticipation.
- Instances where users actively participate in the conversation, showing interest and involvement.

2.
Concepts: iterative development
- Instances where designers discuss updates, new features, or bug fixes.
- The process of repeatedly refining and improving a product based on feedback and testing.
- The process of continuously improving the product based on feedback and testing.
- Instances where the design process is described as iterative, with ongoing optimizations and updates.

3.
Concepts: informal communication
- Instances where the tone of the conversation is casual or informal, indicating the nature of the community's communication style.
- Casual and non-technical interactions among community members, including humor and personal remarks.
- The designer uses a casual, informal tone in their communication.

4.
Concepts: designer responsiveness
- Instances where designers respond to user queries or engage with user comments, indicating active communication between designers and users.
- Instances where designers respond to user inquiries, suggestions, or feedback.
- Instances where designers respond to user feedback or suggestions.
- Instances where designers acknowledge user feedback and discuss potential solutions or updates.
- Designers responding to user feedback and addressing their concerns or suggestions.
- Instances where designers respond to user queries or feedback, showing attentiveness to user needs.

5.
Concepts: development transparency
- Instances where designers provide detailed information about development processes, challenges, and progress.
- Keeping the community informed about the development process and upcoming changes.

6.
Concepts: role identification
- Instances where users or designers identify their roles, which can help understand the community structure and the roles within it.
- Instances where participants identify their roles or expertise, contributing to the problem-solving process.
- Identifying roles within the community, such as designers, teachers, or other users.

7.
Concepts: collaborative problem solving
- Moments where designers and users work together to address issues.
- Collaborative efforts between users and designers to solve issues and improve the product.
- Instances where users and designers work together to address issues or improve the software.

8.
Concepts: user response
- Input and suggestions provided by users regarding the design and functionality of the product.
- Instances where users provide feedback or ask questions that influence the design process.
- Instances where users provide feedback or suggestions to improve the software.
- Instances where users provide suggestions or feedback on features and functionalities.
- Instances where users provide feedback or ask questions about the app's development and updates.

9.
Concepts: resources sharing
- Instances where designers or users share resources, such as download links, development plans, or announcements.
- Information about where and how to access resources, files, or downloads related to Physics Lab.
- Instances where users or designers share files, images, or other resources with the community.

10.
Concepts: engage with community
- Instances where members of the community actively participate in discussions, ask questions, or provide feedback.
- Instances where users or designers engage in discussions that foster community interaction and participation.
- Active participation and interaction among community members, including both users and designers.
- Efforts made by designers to actively involve and communicate with the user community.

11.
Concepts: promote participatory design
- Instances where the community contributes to the design and development of the Physics Lab by providing suggestions or feedback that influence the development process.
- Instances where designers seek or consider user input in the design and development process.
- Instances where users are invited to participate in the design process or provide input.
- Instances where users and designers collaboratively discuss features and usability, reflecting a user-centered design approach.
- The involvement of users in the design and development process, contributing their insights and needs.
- Encouragement by designers for users to contribute ideas, feedback, and suggestions for the development of Physics Lab.
- Active involvement of users in the design process to ensure the product meets their needs and preferences.
- The involvement of users in the design process to ensure the product meets their needs and preferences.
- Instances where users and designers collaboratively discuss or work on design improvements.

12.
Concepts: feature update
- Instances where designers announce new features, updates, or bug fixes based on user input.
- Information about new features and updates being added to the product.

13.
Concepts: technical constraints
- Instances where technical limitations or requirements are discussed.
- Instances where limitations or constraints of the software are mentioned.

14.
Concepts: user feedback integration
- Instances where user feedback is acknowledged and incorporated into the design process.
- Instances where user feedback is actively sought and incorporated into the design process.

15.
Concepts: practical application
- Instances where the practical application of the software in educational settings is discussed.
- Highlighting the practical applications or benefits of a particular feature or aspect of the Physics Lab software.
===
Here are the definitions for each code:

---
1.
Concepts: user engagement
Relationship: The concepts are related as they all describe instances of users actively participating in the community, showing interest, and involvement.
Criteria: Users actively participate in the conversation, showing interest and involvement in the community.
Phrase: Engaging with the community.

2.
Concepts: iterative development
Relationship: The concepts are related as they all describe the process of refining and improving a product based on feedback and testing.
Criteria: Designers repeatedly refine and improve the product based on feedback and testing.
Phrase: Refining the product iteratively.

3.
Concepts: informal communication
Relationship: The concepts are related as they all describe the casual and non-technical tone of the conversation in the community.
Criteria: The tone of the conversation is casual or informal, indicating the nature of the community's communication style.
Phrase: Communicating informally.

4.
Concepts: designer responsiveness
Relationship: The concepts are related as they all describe instances of designers responding to user queries, comments, or feedback.
Criteria: Designers respond to user queries, comments, or feedback, indicating active communication between designers and users.
Phrase: Responding to users.

5.
Concepts: development transparency
Relationship: The concepts are related as they both describe instances of designers providing information about the development process.
Criteria: Designers provide detailed information about development processes, challenges, and progress.
Phrase: Providing development updates.

6.
Concepts: role identification
Relationship: The concepts are related as they all describe instances of users or designers identifying their roles in the community.
Criteria: Users or designers identify their roles, which can help understand the community structure and the roles within it.
Phrase: Identifying roles.

7.
Concepts: collaborative problem solving
Relationship: The concepts are related as they all describe instances of designers and users working together to address issues.
Criteria: Designers and users work together to address issues and improve the product.
Phrase: Collaborating on solutions.

8.
Concepts: user response
Relationship: The concepts are related as they all describe instances of users providing input, suggestions, or feedback regarding the design and functionality of the product.
Criteria: Users provide input, suggestions, or feedback regarding the design and functionality of the product.
Phrase: Providing user feedback.

9.
Concepts: resources sharing
Relationship: The concepts are related as they all describe instances of designers or users sharing resources with the community.
Criteria: Designers or users share resources, such as download links, development plans, or announcements.
Phrase: Sharing resources.

10.
Concepts: engage with community
Relationship: The concepts are related as they all describe instances of members actively participating in discussions, asking questions, or providing feedback.
Criteria: Members of the community actively participate in discussions, ask questions, or provide feedback.
Phrase: Engaging with the community.

11.
Concepts: promote participatory design
Relationship: The concepts are related as they all describe instances of users contributing to the design and development process.
Criteria: The community contributes to the design and development process by providing suggestions or feedback that influence the development process.
Phrase: Promoting participatory design.

12.
Concepts: feature update
Relationship: The concepts are related as they both describe instances of designers announcing new features, updates, or bug fixes.
Criteria: Designers announce new features, updates, or bug fixes based on user input.
Phrase: Announcing feature updates.

13.
Concepts: technical constraints
Relationship: The concepts are related as they both describe instances of technical limitations or requirements being discussed.
Criteria: Technical limitations or requirements are discussed.
Phrase: Discussing technical constraints.

14.
Concepts: user feedback integration
Relationship: The concepts are related as they both describe instances of user feedback being acknowledged and incorporated into the design process.
Criteria: User feedback is acknowledged and incorporated into the design process.
Phrase: Integrating user feedback.

15.
Concepts: practical application
Relationship: The concepts are related as they both describe instances of the practical application of the software in educational settings being discussed.
Criteria: The practical application of the software in educational settings is discussed.
Phrase: Discussing practical applications.