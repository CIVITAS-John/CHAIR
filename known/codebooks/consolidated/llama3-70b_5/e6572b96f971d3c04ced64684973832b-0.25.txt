You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (7 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
7. 
Concepts: {Repeat the input 7}
Relationship: {What is logical relationship between concepts in code 7, or N/A if not applicable}
Criteria: {Who did what, and how for code 7}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: identify user needs, show interest in user context
- Designers identify user needs or inquire about user backgrounds.
- Designers show interest in users' context, such as their profession or level of teaching.

2.
Concepts: gratitude, expressing gratitude for resolution
- Expressing gratitude or appreciation for the software or its developers.
- Users express gratitude or appreciation for a solution or update.

3.
Concepts: express appreciation, acknowledge assistance
- Users or designers express appreciation or provide positive feedback.
- A user expresses gratitude or thanks to another user or the designer.

4.
Concepts: providing feature guidance, instruction and updates
- Designers provide guidance or instructions on how to use the software.
- Designers providing updates and instructions to help users understand and use the software effectively.

5.
Concepts: teaching, provide examples
- Designer provides instructional or explanatory content.
- Designers provide examples or visual aids to demonstrate concepts.

6.
Concepts: share user experiences, sharing past experiences
- Users share experiences or support each other in using the software.
- Users share past experiences or incidents related to the platform.

7.
Concepts: proposing features, suggesting interactions
- A new feature or functionality is suggested or proposed.
- Suggestions or ideas are solicited for interactions or features within the software.
===
Here are the definitions for each code:

---
1.
Concepts: identify user needs, show interest in user context
Relationship: Designers' interest in user context is a means to identify user needs.
Criteria: Designers inquire about user backgrounds to understand their needs.
Phrase: Inquiring about user context to identify needs.

2.
Concepts: gratitude, expressing gratitude for resolution
Relationship: Expressing gratitude is a response to a resolved issue.
Criteria: Users express gratitude when their issues are resolved.
Phrase: Expressing gratitude for resolution.

3.
Concepts: express appreciation, acknowledge assistance
Relationship: Expressing appreciation is a way to acknowledge assistance.
Criteria: Users express appreciation when they receive help.
Phrase: Acknowledging assistance with appreciation.

4.
Concepts: providing feature guidance, instruction and updates
Relationship: Guidance and updates are means to provide instruction.
Criteria: Designers provide guidance and updates to facilitate software use.
Phrase: Providing guidance and updates.

5.
Concepts: teaching, provide examples
Relationship: Providing examples is a means of teaching.
Criteria: Designers provide examples to facilitate understanding.
Phrase: Teaching through examples.

6.
Concepts: share user experiences, sharing past experiences
Relationship: Sharing past experiences is a way to share user experiences.
Criteria: Users share experiences to support each other.
Phrase: Sharing user experiences.

7.
Concepts: proposing features, suggesting interactions
Relationship: Proposing features and suggesting interactions are means to improve the software.
Criteria: Users and designers propose features and suggest interactions to enhance the software.
Phrase: Proposing features and interactions.