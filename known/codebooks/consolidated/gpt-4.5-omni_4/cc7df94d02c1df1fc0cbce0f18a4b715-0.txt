You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (20 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
20. 
Concepts: {Repeat the input 20}
Relationship: {What is logical relationship between concepts in code 20, or N/A if not applicable}
Criteria: {Who did what, and how for code 20}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: list upcoming features, announcing planned updates
- Designers list features included in updates or planned for future releases.
- Designers share information about planned updates and development plans.

2.
Concepts: announcing feature updates, announcing software updates
- Designers announce new features, updates, or component changes.
- Designers announce new features, version releases, and software updates.

3.
Concepts: informing about updates, communication of updates
- Designers notify the community about updates or new releases.
- Instances where designers communicate updates, release schedules, or new features to users.

4.
Concepts: sharing progress updates, providing development updates
- Designers share updates on the progress of software development.
- Designers provide updates on the current status and future plans for the software.

5.
Concepts: explaining limitations, addressing technical limitations
- Designers explain current limitations or issues with a feature or system.
- Designers address and discuss technical limitations of the software.

6.
Concepts: visual and functional design, discussing design and usability
- Discussions about the visual and functional aspects of the software.
- Designers discuss the usability and design aspects of the software.

7.
Concepts: discussing feature improvements, update on feature development
- Designers discuss improvements and development of features.
- Designers provide updates on the progress of feature development or research.

8.
Concepts: future planning, discussing future plans
- Designers discuss future planning or compatibility considerations.
- Designers discuss plans for future projects or updates.

9.
Concepts: understanding user needs, inquiring about user context
- Designers try to understand and inquire about user needs and issues.
- Designers inquire about users' backgrounds and needs.

10.
Concepts: responding to user feedback, acknowledging user feedback
- Designers respond to user feedback and queries.
- Designers acknowledge user feedback and requests.

11.
Concepts: encouraging user feedback, requesting user feedback
- Designers invite and encourage users to provide feedback.
- Designers request feedback, and users provide feedback or suggestions.

12.
Concepts: suggesting new features, provide design suggestions
- Users or designers suggest new features and provide feedback.
- Users suggest specific design or feature improvements.

13.
Concepts: express support for designers, appreciating designers' efforts
- Users express support, encouragement, or appreciation for the designers' efforts.
- Users acknowledge and appreciate the designers' efforts and craftsmanship.

14.
Concepts: welcome, greeting community members
- Designers welcome users to the community.
- Users or designers greet and welcome others in the community.

15.
Concepts: acknowledging user input, confirm understanding or agreement
- Users acknowledge or show understanding of another's input or statement.
- Users confirm understanding or agreement with previous statements or instructions.

16.
Concepts: asking usage questions, request information about software use
- Users inquire about how to use specific features or versions of the software.
- Users ask questions or request information about the use or functionalities of Physics Lab.

17.
Concepts: feature explanation, explaining new features
- Designers explain the features or functionalities of the software to the community.
- Designers explain and introduce new features and their functions.

18.
Concepts: share teaching experiences, sharing positive classroom experiences
- Users share personal teaching experiences.
- Users share their positive classroom experiences and describe students' positive responses.

19.
Concepts: evaluate software usability, providing comparative feedback
- Users comment on the ease of use and practicality of the software.
- Users provide comparative feedback about the software's practicality.

20.
Concepts: praise software, expressing satisfaction with software
- A user praises the software for its practicality and features.
- Users compliment the software, appreciate its features, and express satisfaction.
===
---
Definitions for each code (20 in total):
1.
Concepts: list upcoming features, announcing planned updates
Relationship: Both concepts involve sharing future plans for the software.
Criteria: Designers share information about features included in updates or planned for future releases.
Phrase: Announcing planned updates

2.
Concepts: announcing feature updates, announcing software updates
Relationship: Both concepts involve communicating new changes or additions to the software.
Criteria: Designers announce new features, version releases, and software updates.
Phrase: Announcing software updates

3.
Concepts: informing about updates, communication of updates
Relationship: Both concepts involve notifying the community about changes or new releases.
Criteria: Designers notify the community about updates, release schedules, or new features.
Phrase: Communicating updates

4.
Concepts: sharing progress updates, providing development updates
Relationship: Both concepts involve sharing the current status and future plans of the software development.
Criteria: Designers provide updates on the progress and future plans of software development.
Phrase: Providing development updates

5.
Concepts: explaining limitations, addressing technical limitations
Relationship: Both concepts involve discussing the constraints or issues within the software.
Criteria: Designers explain and discuss current limitations or issues with the software.
Phrase: Addressing technical limitations

6.
Concepts: visual and functional design, discussing design and usability
Relationship: Both concepts involve discussions about the software's design and usability.
Criteria: Designers discuss the visual, functional aspects, and usability of the software.
Phrase: Discussing design and usability

7.
Concepts: discussing feature improvements, update on feature development
Relationship: Both concepts involve conversations about the enhancement and progress of features.
Criteria: Designers discuss improvements and provide updates on the development of features.
Phrase: Discussing feature improvements

8.
Concepts: future planning, discussing future plans
Relationship: Both concepts involve conversations about future projects or updates.
Criteria: Designers discuss plans for future projects, updates, or compatibility considerations.
Phrase: Discussing future plans

9.
Concepts: understanding user needs, inquiring about user context
Relationship: Both concepts involve efforts to understand users' needs and contexts.
Criteria: Designers inquire about and try to understand users' needs and backgrounds.
Phrase: Understanding user needs

10.
Concepts: responding to user feedback, acknowledging user feedback
Relationship: Both concepts involve interactions with user feedback.
Criteria: Designers respond to and acknowledge user feedback and queries.
Phrase: Acknowledging user feedback

11.
Concepts: encouraging user feedback, requesting user feedback
Relationship: Both concepts involve soliciting feedback from users.
Criteria: Designers invite and encourage users to provide feedback.
Phrase: Requesting user feedback

12.
Concepts: suggesting new features, provide design suggestions
Relationship: Both concepts involve proposing new ideas or improvements.
Criteria: Users or designers suggest new features and provide design feedback.
Phrase: Suggesting new features

13.
Concepts: express support for designers, appreciating designers' efforts
Relationship: Both concepts involve users showing support or appreciation for designers.
Criteria: Users express support, encouragement, or appreciation for the designers' efforts.
Phrase: Appreciating designers' efforts

14.
Concepts: welcome, greeting community members
Relationship: Both concepts involve welcoming or greeting members of the community.
Criteria: Users or designers greet and welcome others in the community.
Phrase: Greeting community members

15.
Concepts: acknowledging user input, confirm understanding or agreement
Relationship: Both concepts involve recognizing or agreeing with others' contributions.
Criteria: Users acknowledge or confirm understanding of another's input or statement.
Phrase: Acknowledging user input

16.
Concepts: asking usage questions, request information about software use
Relationship: Both concepts involve inquiring about how to use the software.
Criteria: Users ask questions or request information about the use or functionalities of Physics Lab.
Phrase: Asking usage questions

17.
Concepts: feature explanation, explaining new features
Relationship: Both concepts involve describing the functionalities of the software.
Criteria: Designers explain and introduce new features and their functions to the community.
Phrase: Explaining new features

18.
Concepts: share teaching experiences, sharing positive classroom experiences
Relationship: Both concepts involve sharing personal and positive experiences in teaching.
Criteria: Users share their personal and positive classroom experiences.
Phrase: Sharing teaching experiences

19.
Concepts: evaluate software usability, providing comparative feedback
Relationship: Both concepts involve assessing the software's practicality and ease of use.
Criteria: Users comment on the ease of use and provide comparative feedback about the software's practicality.
Phrase: Evaluating software usability

20.
Concepts: praise software, expressing satisfaction with software
Relationship: Both concepts involve expressing positive sentiments about the software.
Criteria: Users compliment the software, appreciate its features, and express satisfaction.
Phrase: Praising software
---