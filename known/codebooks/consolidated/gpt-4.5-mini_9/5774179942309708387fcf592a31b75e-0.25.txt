You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (17 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
17. 
Concepts: {Repeat the input 17}
Relationship: {What is logical relationship between concepts in code 17, or N/A if not applicable}
Criteria: {Who did what, and how for code 17}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: explain technical details, explaining feature functionality
- The designer shares technical details about the software's features and components.
- The designer provides explanations and examples regarding the software's functionalities.

2.
Concepts: technical clarification, providing clarification
- Designer clarifies technical aspects related to touch screen functionality.
- Designers clarify technical aspects and respond to users' clarification questions.

3.
Concepts: explaining the need, discussing feature development
- Designer explains the ongoing work related to a specific feature in development.
- The designer provides specific examples and discusses various aspects of ongoing feature development.

4.
Concepts: announce future plans, sharing development plans
- Designers communicate plans for future updates and invite community input on desired features.
- Information shared by designers about upcoming features or updates and future development plans.

5.
Concepts: development goals, providing future plans
- The designer outlines specific objectives and goals for future development related to the software.
- Designers outline and provide future plans or considerations for software development.

6.
Concepts: plan future update, outlining future updates
- The designer outlines plans for future updates to the application based on user feedback.
- A designer outlines future updates, explains upcoming features, and lists planned enhancements for the software.

7.
Concepts: announce new features, announcing software releases
- A designer announces new features and updates in a version release note.
- The designer informs and announces the release of a new software version, detailing updates and changes.

8.
Concepts: platform question, ask technical questions
- Users ask specific questions regarding the platform's features and updates.
- Users ask various technical questions about the platform and its usage.

9.
Concepts: inquiring about updates, inquire about platform development
- Users inquire about recent updates and the schedule for upcoming software updates.
- A user inquires about recent updates, indicating interest in the software's ongoing development.

10.
Concepts: commenting on usability, highlight software practicality, expressing user satisfaction
- Users comment on the practicality and effectiveness of the software's features.
- Users provide positive reviews highlighting the software's practicality.
- Users express satisfaction and appreciation for the software's practicality and features.

11.
Concepts: involve users in design, solicit user feedback
- Instances where designers actively involve users in the design process through feedback or testing.
- Designers invite users to provide feedback or suggestions for improvements, indicating a commitment to user involvement.

12.
Concepts: gathering user opinions, seeking community input
- A designer expresses the intention to gather user opinions before proceeding with development.
- A designer actively seeks feedback or opinions from the community before proceeding with a project.

13.
Concepts: acknowledging user feedback, acknowledge need for feature
- The designer acknowledges user feedback and affirms points made by users.
- The designer acknowledges the necessity for a specific feature based on user feedback.

14.
Concepts: gather context, inquiring about user identity
- A designer gathers context by asking users about their teaching situations.
- A designer inquires about the teaching background of a user to understand their needs.

15.
Concepts: user interaction, discussing usability concerns
- The designer engages in dialogue with users, discussing specific aspects of the application.
- A user and designer discuss usability considerations and concerns related to the software's interface.

16.
Concepts: requesting clarification, asking follow-up questions
- Users and designers seek clarification and confirmation on previous statements or information.
- Users or designers engage in dialogue to clarify or confirm information regarding previous discussions.

17.
Concepts: responding to user feedback
- Designers actively respond to user inquiries, feedback, and suggestions, demonstrating attentiveness to user needs.
- The designer indicates that feedback will be taken into account for future development.
===
---
Definitions for each code (17 in total):
1.
Concepts: explain technical details, explaining feature functionality  
Relationship: The designer shares detailed information about features while providing practical examples of their functionality.  
Criteria: The designer shares technical details about the software's features and provides explanations and examples regarding its functionalities.  
Phrase: Explaining technical features.

2.
Concepts: technical clarification, providing clarification  
Relationship: Designers clarify technical aspects and respond to user inquiries for better understanding.  
Criteria: Designers clarify technical aspects related to touch screen functionality and respond to users' clarification questions.  
Phrase: Providing technical clarification.

3.
Concepts: explaining the need, discussing feature development  
Relationship: The designer discusses ongoing development while explaining the necessity of specific features.  
Criteria: The designer explains ongoing work related to a specific feature in development and discusses various aspects of that development.  
Phrase: Discussing feature development.

4.
Concepts: announce future plans, sharing development plans  
Relationship: Designers communicate future plans while inviting community input on desired features.  
Criteria: Designers communicate plans for future updates and share information about upcoming features or updates.  
Phrase: Announcing future plans.

5.
Concepts: development goals, providing future plans  
Relationship: The designer outlines specific objectives while providing future plans for software development.  
Criteria: The designer outlines specific objectives for future development and provides considerations for that development.  
Phrase: Outlining development goals.

6.
Concepts: plan future update, outlining future updates  
Relationship: The designer outlines future updates based on user feedback while explaining upcoming features.  
Criteria: The designer outlines plans for future updates to the application based on user feedback and explains upcoming features.  
Phrase: Planning future updates.

7.
Concepts: announce new features, announcing software releases  
Relationship: The designer informs users about new features while detailing updates in release notes.  
Criteria: A designer announces new features and informs users about the release of a new software version, detailing updates and changes.  
Phrase: Announcing new features.

8.
Concepts: platform question, ask technical questions  
Relationship: Users ask specific questions regarding the platform's features and technical aspects.  
Criteria: Users ask specific questions regarding the platform's features and various technical questions about its usage.  
Phrase: Asking platform questions.

9.
Concepts: inquiring about updates, inquire about platform development  
Relationship: Users show interest in software updates and ongoing development by asking questions.  
Criteria: Users inquire about recent updates and the schedule for upcoming software updates, indicating interest in ongoing development.  
Phrase: Inquiring about updates.

10.
Concepts: commenting on usability, highlight software practicality, expressing user satisfaction  
Relationship: Users provide feedback on the software's practicality and express satisfaction with its features.  
Criteria: Users comment on the practicality and effectiveness of the software's features, providing positive reviews and expressing satisfaction.  
Phrase: Commenting on usability.

11.
Concepts: involve users in design, solicit user feedback  
Relationship: Designers actively involve users in the design process by seeking feedback and suggestions.  
Criteria: Designers actively involve users in the design process through feedback or testing and invite suggestions for improvements.  
Phrase: Involving users in design.

12.
Concepts: gathering user opinions, seeking community input  
Relationship: Designers express intentions to gather user opinions before proceeding with development.  
Criteria: A designer expresses the intention to gather user opinions and actively seeks feedback from the community before proceeding with a project.  
Phrase: Gathering user opinions.

13.
Concepts: acknowledging user feedback, acknowledge need for feature  
Relationship: The designer acknowledges user feedback and recognizes the necessity for specific features.  
Criteria: The designer acknowledges user feedback and affirms points made by users regarding the necessity for specific features.  
Phrase: Acknowledging user feedback.

14.
Concepts: gather context, inquiring about user identity  
Relationship: A designer gathers context by asking users about their teaching situations to understand their needs.  
Criteria: A designer gathers context by asking users about their teaching situations and inquiring about their teaching background.  
Phrase: Gathering context.

15.
Concepts: user interaction, discussing usability concerns  
Relationship: The designer engages in dialogue with users to discuss usability concerns related to the software.  
Criteria: The designer engages in dialogue with users, discussing specific aspects of the application and usability considerations.  
Phrase: Discussing usability concerns.

16.
Concepts: requesting clarification, asking follow-up questions  
Relationship: Users and designers engage in dialogue to clarify or confirm previous statements.  
Criteria: Users and designers seek clarification and confirmation on previous statements or engage in dialogue to clarify information.  
Phrase: Requesting clarification.

17.
Concepts: responding to user feedback  
Relationship: Designers actively respond to user inquiries and feedback, demonstrating attentiveness to user needs.  
Criteria: Designers actively respond to user inquiries and feedback, indicating that suggestions will be considered for future development.  
Phrase: Responding to user feedback.
---