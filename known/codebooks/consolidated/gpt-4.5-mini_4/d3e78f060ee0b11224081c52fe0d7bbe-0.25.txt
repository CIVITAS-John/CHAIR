You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (47 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
47. 
Concepts: {Repeat the input 47}
Relationship: {What is logical relationship between concepts in code 47, or N/A if not applicable}
Criteria: {Who did what, and how for code 47}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: invite user feedback, encourage user interaction
- Designers invite users to provide feedback and suggest new features or improvements.
- Designers encourage users to provide detailed feedback and engage in discussions.

2.
Concepts: gather user feedback, gather user responses
- Designers gather user input on specific features and ask about their experiences with the software.
- Users provide feedback and suggestions that impact the design process and software improvements.

3.
Concepts: affirm points made, show engagement
- A designer acknowledges a user's point or opinion during a discussion.
- The designer shows engagement through affirmations, indicating active participation in discussions.

4.
Concepts: downplay formality, facilitate informal interactions
- A designer encourages open communication and informal interaction within the group.
- The designer and users engage in informal interactions, creating a relaxed community atmosphere.

5.
Concepts: seeking context, inquire about user backgrounds
- Designers ask for context to better understand user experiences and challenges.
- Designers inquire about users' roles and backgrounds to understand their perspectives.

6.
Concepts: explaining design goals, address usability concerns
- Designers explain their design goals to ensure user-friendliness and accessibility.
- Designers address usability concerns and explain the rationale behind design choices.

7.
Concepts: community answer, provide solutions
- A designer provides answers to community questions regarding software compatibility.
- The designer provides solutions to compatibility issues, offering practical advice to users.

8.
Concepts: promote open communication, inquire about user problems
- Designers encourage users to share their problems openly to foster discussion.
- Users raise issues related to design or functionality, and designers encourage reporting problems.

9.
Concepts: propose potential solutions, commit to providing a solution
- Designers share potential solutions and work with users to identify and resolve issues.
- Designers express commitment to addressing user needs and providing solutions.

10.
Concepts: share future development plans, discuss potential future directions
- Designers share plans for future design initiatives and development areas of focus.
- Designers discuss potential future interests or projects that may influence development.

11.
Concepts: plan software updates, share update timelines
- Designers discuss the planning and scheduling of future updates for the software.
- Designers provide timelines for upcoming updates and share plans for future development.

12.
Concepts: simulation accuracy, detail simulation enhancements
- Designers discuss the accuracy of simulations and how updates will affect this aspect.
- Designers discuss enhancements made to simulation capabilities and explain how features will function.

13.
Concepts: list upcoming features, give examples of feature
- Designers list upcoming features that will be included in the software.
- A designer provides specific examples of features being developed or planned.

14.
Concepts: explain upcoming features, provide a detailed overview of updates
- Information shared by designers about upcoming features or updates.
- Designers provide a comprehensive overview of new features and updates, outlining what users can expect.

15.
Concepts: provide access information, provide detailed access information
- A designer provides access information regarding development plans and download links in a group announcement.
- Designers provide information about accessing resources and specific answers regarding software access.

16.
Concepts: outline project planning, outline development priorities
- Designers outline plans for gathering input and prioritizing different sections of the project.
- Designers discuss and outline priorities for development, indicating the order of addressing features.

17.
Concepts: outline feature roadmap, designers outline development timelines
- Designers outline the sequence of features to be developed and specific objectives for future development.
- Designers outline timelines for the development of specific features or experiments.

18.
Concepts: confirm delayed feature implementation, gives a semi-promise of its completion date
- Designers provide vague timelines for implementing features and confirm delays.
- A designer gives a tentative completion date for a complex feature under development.

19.
Concepts: design challenges, explain development delays
- Issues and obstacles faced by designers during the development process.
- Designers explain reasons for delays based on complexity and describe challenges in development.

20.
Concepts: inquire about compatibility, express hope for compatibility
- A user provides specific information regarding compatibility with the software.
- A user expresses hope that their system will be compatible with the software.

21.
Concepts: discuss technical limitations, acknowledge limitations
- Designers provide technical specifications or limitations of the software.
- The designer explains the limitations of the software or its functionalities, setting realistic expectations.

22.
Concepts: make suggestions, proposing design idea
- A designer offers a suggestion for using the software in a particular way.
- Designers suggest enhancements or additional functionalities that could improve the software's performance.

23.
Concepts: share practical tips, share usability workarounds
- The designer shares tips or shortcuts related to software usage, aiming to improve user experience.
- A designer shares a workaround based on their experience to address usability issues encountered by users.

24.
Concepts: discuss user interface usability, discuss interface layout decisions
- Designers discuss issues related to the user interface to enhance usability and facilitate interaction.
- Users discuss decisions regarding the layout of the software interface and clarify usability preferences.

25.
Concepts: design discussion, reflect on educational context
- A designer discusses various aspects of design and development in relation to educational needs.
- Designers discuss the educational context of the software and reflect on past experiences.

26.
Concepts: discuss feature adjustments, emphasize feature improvement
- Designers discuss adjustments needed for specific software features and modifications made to components.
- Designers emphasize the importance of improving and optimizing specific features in the software.

27.
Concepts: user guidance, provide usage instructions
- A designer provides detailed guidance on new features and functionalities of the software.
- Designers provide instructions or guidance on how to use specific features or components of the software.

28.
Concepts: clarify testing status, clarify version details
- Designers indicate that a version is in the testing phase and clarify its purpose.
- Designers clarify the type of version available and which version is being discussed.

29.
Concepts: context, internet restriction
- Users provide context about their school's technology and internet policies.
- Users discuss restrictions imposed by schools on internet access in classrooms.

30.
Concepts: user experience in educational contexts, discuss user experiences
- User experiences and challenges in using the software within educational settings.
- Users share past incidents and explain their impact on software use in educational settings, while also discussing their experiences and opinions about using the software.

31.
Concepts: ask questions, new user interaction
- Users ask questions related to the software's features or updates.
- Users engage with the community by asking questions about the software.

32.
Concepts: express concern, inquire about updates
- Users express concern about the status of software updates.
- Users inquire about the timing of upcoming software updates or new features to stay informed.

33.
Concepts: seek resources, community resource
- Users inquire about resources related to the software, such as manuals or downloads.
- Users request or share resources that support the use of the software within the community.

34.
Concepts: request assistance, request guidance
- Users request assistance with downloading the software.
- Users seek assistance or clarification on how to access or use the software, expressing their need for help.

35.
Concepts: share teaching experience, share user background
- A user shares their teaching experience, contributing to the community's understanding of user backgrounds.
- Information provided by users about their professional or personal background, which helps in understanding the community's composition.

36.
Concepts: confirm user identity, confirm professional role
- A user confirms their identity or role in response to a question.
- A user confirms their professional role in response to an inquiry.

37.
Concepts: identify as a teacher, professional engagement
- A user confirms their role as a teacher.
- Users affirm their professional identity or role within the educational community.

38.
Concepts: use non verbal communication, use emojis to express emotions
- Use of emojis or other non-verbal forms of communication by users.
- A user includes an emoji in their message, indicating emotion or tone.

39.
Concepts: provide positive responses, engage in positive interactions
- Users provide affirmative responses to inquiries or statements made by others.
- Users respond to community discussions, sharing experiences or gratitude.

40.
Concepts: agree with suggestions, confirm user needs
- Users express agreement with suggestions made by others.
- Users confirm or agree with statements or questions posed by others in the community.

41.
Concepts: acknowledge resolution, acknowledge receipt of information
- User acknowledges receipt of information or files.
- A user acknowledges receipt of information shared in the group.

42.
Concepts: seek clarification, engage in troubleshooting
- Participants seek clarification on specific points or details related to the software.
- Participants engage in a dialogue to clarify or confirm details about software compatibility or functionality.

43.
Concepts: gather community input, consulting community
- Designers plan to gather user opinions and promise future consultations before new developments.
- Designers and users engage in discussions to gather opinions or preferences from the community regarding design choices.

44.
Concepts: engage with the community, foster community interaction
- Users ask questions and receive answers from designers or community members, fostering engagement.
- Community members actively participate in discussions, ask questions, and provide feedback, while designers engage with users to enhance interaction.

45.
Concepts: recognize experts, acknowledging community expertise
- A user acknowledges the expertise of others before making a feature request.
- Designers and users acknowledge the expertise of community members in discussions.

46.
Concepts: express approval, respond to developer's earlier information on feature development
- A user expresses positive feedback regarding the development plans of the software.
- Users respond positively to information shared by developers regarding feature development.

47.
Concepts: express acknowledgment
- Users express gratitude or acknowledgment for the contributions of others in the community.
- Users and designers express gratitude for the software and support received.
===
---
Definitions for each code (47 in total):
1.
Concepts: invite user feedback, encourage user interaction
Relationship: Designers actively seek user input and promote engagement in discussions.
Criteria: Designers invite users to provide feedback and encourage interaction through discussions.
Phrase: Inviting and encouraging user feedback.

2.
Concepts: gather user feedback, gather user responses
Relationship: Designers collect user input to inform design decisions and improvements.
Criteria: Designers gather user input on features and users provide feedback impacting design.
Phrase: Gathering user feedback and responses.

3.
Concepts: affirm points made, show engagement
Relationship: Designers validate user contributions and demonstrate active participation in discussions.
Criteria: A designer acknowledges user opinions and shows engagement through affirmations.
Phrase: Affirming and engaging with users.

4.
Concepts: downplay formality, facilitate informal interactions
Relationship: Designers create a relaxed environment that encourages open communication.
Criteria: A designer encourages informal interactions to foster a relaxed community atmosphere.
Phrase: Facilitating informal interactions.

5.
Concepts: seeking context, inquire about user backgrounds
Relationship: Designers seek to understand user experiences by gathering contextual information.
Criteria: Designers ask for context and inquire about users' roles to understand perspectives.
Phrase: Seeking context and user backgrounds.

6.
Concepts: explaining design goals, address usability concerns
Relationship: Designers communicate their objectives and address user concerns regarding usability.
Criteria: Designers explain design goals and address usability concerns to ensure accessibility.
Phrase: Explaining design goals and usability concerns.

7.
Concepts: community answer, provide solutions
Relationship: Designers respond to community inquiries and offer practical solutions to issues.
Criteria: A designer provides answers and solutions to community questions about compatibility.
Phrase: Providing community answers and solutions.

8.
Concepts: promote open communication, inquire about user problems
Relationship: Designers encourage users to share issues to foster a collaborative environment.
Criteria: Designers promote open communication and encourage users to report problems.
Phrase: Promoting communication and inquiring about problems.

9.
Concepts: propose potential solutions, commit to providing a solution
Relationship: Designers collaborate with users to identify and resolve issues effectively.
Criteria: Designers propose solutions and express commitment to addressing user needs.
Phrase: Proposing and committing to solutions.

10.
Concepts: share future development plans, discuss potential future directions
Relationship: Designers inform users about upcoming initiatives and solicit input on future projects.
Criteria: Designers share future development plans and discuss potential directions.
Phrase: Sharing and discussing future plans.

11.
Concepts: plan software updates, share update timelines
Relationship: Designers outline their strategies for future updates and communicate timelines.
Criteria: Designers discuss planning and share timelines for upcoming software updates.
Phrase: Planning and sharing update timelines.

12.
Concepts: simulation accuracy, detail simulation enhancements
Relationship: Designers assess and communicate improvements to simulation capabilities.
Criteria: Designers discuss simulation accuracy and detail enhancements made to capabilities.
Phrase: Detailing simulation enhancements and accuracy.

13.
Concepts: list upcoming features, give examples of feature
Relationship: Designers provide information about new features being developed.
Criteria: Designers list upcoming features and provide specific examples of developments.
Phrase: Listing and giving examples of features.

14.
Concepts: explain upcoming features, provide a detailed overview of updates
Relationship: Designers communicate comprehensive information about new features to users.
Criteria: Designers explain upcoming features and provide an overview of updates.
Phrase: Explaining and providing updates on features.

15.
Concepts: provide access information, provide detailed access information
Relationship: Designers share essential information regarding software access and resources.
Criteria: A designer provides access information and detailed answers regarding software access.
Phrase: Providing access information.

16.
Concepts: outline project planning, outline development priorities
Relationship: Designers establish a framework for project input and prioritize development tasks.
Criteria: Designers outline project planning and development priorities for the software.
Phrase: Outlining project planning and priorities.

17.
Concepts: outline feature roadmap, designers outline development timelines
Relationship: Designers create a structured plan for feature development and timelines.
Criteria: Designers outline the feature roadmap and development timelines.
Phrase: Outlining feature roadmap and timelines.

18.
Concepts: confirm delayed feature implementation, gives a semi-promise of its completion date
Relationship: Designers communicate delays and provide tentative timelines for features.
Criteria: Designers confirm delays and give a semi-promise for feature completion dates.
Phrase: Confirming delays and providing timelines.

19.
Concepts: design challenges, explain development delays
Relationship: Designers articulate obstacles faced during the development process.
Criteria: Designers explain design challenges and reasons for development delays.
Phrase: Explaining challenges and delays.

20.
Concepts: inquire about compatibility, express hope for compatibility
Relationship: Users seek information about software compatibility with their systems.
Criteria: A user inquires about compatibility and expresses hope for it.
Phrase: Inquiring and expressing hope for compatibility.

21.
Concepts: discuss technical limitations, acknowledge limitations
Relationship: Designers set realistic expectations regarding software capabilities.
Criteria: Designers discuss technical limitations and acknowledge software functionalities.
Phrase: Discussing and acknowledging limitations.

22.
Concepts: make suggestions, proposing design idea
Relationship: Designers contribute ideas to enhance software functionality.
Criteria: A designer makes suggestions and proposes design ideas for improvement.
Phrase: Making suggestions and proposing ideas.

23.
Concepts: share practical tips, share usability workarounds
Relationship: Designers provide helpful information to improve user experience.
Criteria: The designer shares practical tips and usability workarounds for users.
Phrase: Sharing tips and workarounds.

24.
Concepts: discuss user interface usability, discuss interface layout decisions
Relationship: Designers and users collaborate to enhance interface usability.
Criteria: Designers discuss usability issues and interface layout decisions with users.
Phrase: Discussing usability and layout decisions.

25.
Concepts: design discussion, reflect on educational context
Relationship: Designers consider educational needs in their design discussions.
Criteria: A designer discusses design aspects in relation to educational contexts.
Phrase: Reflecting on educational context in design discussions.

26.
Concepts: discuss feature adjustments, emphasize feature improvement
Relationship: Designers focus on refining software features for better performance.
Criteria: Designers discuss adjustments and emphasize the importance of feature improvement.
Phrase: Discussing adjustments and improvements.

27.
Concepts: user guidance, provide usage instructions
Relationship: Designers offer support to help users navigate software features.
Criteria: A designer provides guidance and instructions on using software features.
Phrase: Providing user guidance and instructions.

28.
Concepts: clarify testing status, clarify version details
Relationship: Designers communicate the status and details of software versions.
Criteria: Designers clarify testing status and version details for users.
Phrase: Clarifying testing status and version details.

29.
Concepts: context, internet restriction
Relationship: Users provide background information about technology access limitations.
Criteria: Users discuss their school's internet restrictions and provide context.
Phrase: Providing context about restrictions.

30.
Concepts: user experience in educational contexts, discuss user experiences
Relationship: Users share experiences that inform the community about software use.
Criteria: Users discuss their experiences and challenges in educational settings.
Phrase: Discussing user experiences in education.

31.
Concepts: ask questions, new user interaction
Relationship: Users engage with the community by seeking information.
Criteria: Users ask questions related to software features and engage with the community.
Phrase: Asking questions and interacting.

32.
Concepts: express concern, inquire about updates
Relationship: Users seek information regarding the status of software updates.
Criteria: Users express concern and inquire about the timing of updates.
Phrase: Expressing concern and inquiring about updates.

33.
Concepts: seek resources, community resource
Relationship: Users request and share resources that support software use.
Criteria: Users inquire about and share resources related to the software.
Phrase: Seeking and sharing resources.

34.
Concepts: request assistance, request guidance
Relationship: Users seek help to navigate software usage.
Criteria: Users request assistance and guidance on software access and usage.
Phrase: Requesting assistance and guidance.

35.
Concepts: share teaching experience, share user background
Relationship: Users contribute personal experiences to enrich community understanding.
Criteria: A user shares their teaching experience and background with the community.
Phrase: Sharing teaching experiences and backgrounds.

36.
Concepts: confirm user identity, confirm professional role
Relationship: Users validate their identities and roles within the community.
Criteria: A user confirms their identity and professional role in response to inquiries.
Phrase: Confirming identity and role.

37.
Concepts: identify as a teacher, professional engagement
Relationship: Users affirm their roles within the educational community.
Criteria: A user identifies as a teacher and engages professionally within the community.
Phrase: Identifying as a teacher and engaging.

38.
Concepts: use non verbal communication, use emojis to express emotions
Relationship: Users utilize non-verbal cues to convey emotions in communication.
Criteria: Users use emojis and non-verbal communication to express emotions.
Phrase: Using non-verbal communication and emojis.

39.
Concepts: provide positive responses, engage in positive interactions
Relationship: Users foster a supportive environment through affirmative communication.
Criteria: Users provide positive responses and engage in constructive interactions.
Phrase: Providing positive responses and engaging.

40.
Concepts: agree with suggestions, confirm user needs
Relationship: Users validate suggestions and express their needs within the community.
Criteria: Users agree with suggestions and confirm their needs in discussions.
Phrase: Agreeing with suggestions and confirming needs.

41.
Concepts: acknowledge resolution, acknowledge receipt of information
Relationship: Users confirm understanding and receipt of shared information.
Criteria: Users acknowledge receipt of information or files shared in the group.
Phrase: Acknowledging resolution and receipt.

42.
Concepts: seek clarification, engage in troubleshooting
Relationship: Participants work collaboratively to clarify software-related issues.
Criteria: Participants seek clarification and engage in troubleshooting discussions.
Phrase: Seeking clarification and troubleshooting.

43.
Concepts: gather community input, consulting community
Relationship: Designers actively involve the community in decision-making processes.
Criteria: Designers gather community input and consult users before new developments.
Phrase: Gathering input and consulting the community.

44.
Concepts: engage with the community, foster community interaction
Relationship: Users and designers collaborate to enhance community engagement.
Criteria: Users engage with the community and designers foster interaction through discussions.
Phrase: Engaging and fostering community interaction.

45.
Concepts: recognize experts, acknowledging community expertise
Relationship: Users and designers acknowledge the skills and knowledge of community members.
Criteria: A user recognizes the expertise of others and designers acknowledge community expertise.
Phrase: Recognizing and acknowledging expertise.

46.
Concepts: express approval, respond to developer's earlier information on feature development
Relationship: Users provide feedback that reflects their support for development plans.
Criteria: A user expresses approval and responds positively to developers' information.
Phrase: Expressing approval and responding.

47.
Concepts: express acknowledgment
Relationship: Users show appreciation for contributions made by others in the community.
Criteria: Users express gratitude and acknowledgment for support received.
Phrase: Expressing acknowledgment and gratitude.
---