You are an expert in thematic analysis clarifying the criteria of qualitative codes. Do not attempt to merge codes now.
Consider provided quotes, and note that each quote is independent of others.
Write clear and generalizable criteria for each code and do not introduce unnecessary details.
If necessary, refine labels to be more accurate, but do not repeat yourself.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1. 
Criteria: {Who did what, and how for code 1}
Label: {A descriptive label of code 1}
...
32.
Criteria: {Who did what, and how for code 32}
Label: {A descriptive label of code 32}
---
~~~
1.
Label: provide android update timeline
Quotes:
- Designer: The Android version is expected to update tonight

2.
Label: building anticipation for new features
Quotes:
- Designer: The update is quite large...

3.
Label: indicating responsiveness to user feedback
Quotes:
- Designer: Hmm... I'll add it in the next update. PC updates are usually the fastest, so there will probably be another round this weekend.

4.
Label: managing complexity
Quotes:
- Designer: Before starting mechanics, we will gather opinions again~ Otherwise, I'm afraid I won't remember everything.

5.
Label: expressing the intention to design the software to be user friendly and self explanatory
Quotes:
- Designer: We try to design it so that it can be used without additional instructions, or we will provide some prompts when you open it for the first time based on feedback

6.
Label: considers incorporating both left and right sides based on user feedback
Quotes:
- Designer: So, use both?

7.
Label: sharing identity per request
Quotes:
- User: I taught high school for seven years, and now I've been teaching middle school for eight years.

8.
Label: proposing simulated experiment assessment
Quotes:
- Designer: For electricity, we plan to create a function for simulated experiment assessment; it will add many experimental details, such as zero adjustment (of course, only useful in specific modes, otherwise it would be cumbersome to use regularly)

9.
Label: simplifying design
Quotes:
- Designer: Make it simpler...

10.
Label: providing real world context
Quotes:
- User: Yes, the common one is still the old style

11.
Label: seeking solutions
Quotes:
- Designer: @Morning Tea Moonlight How can I upload a high-definition, uncensored version of this crappy avatar?

12.
Label: inquires about user 4232's teaching level
Quotes:
- Designer: Haha. Are you a middle school or high school teacher?

13.
Label: sharing progress
Quotes:
- Designer: The Apple Store is still reviewing, let's upload the PC version first
- Designer: [Image] Updates in preparation
- Designer: We are working on this part
- Designer: iOS is waiting for review~

14.
Label: identifying user's platform
Quotes:
- User: PC version?

15.
Label: considering user needs
Quotes:
- Designer: Does the class have internet?

16.
Label: user 4234 acknowledges craftsmanship and pursuit of perfection
Quotes:
- User: Yes, the spirit of craftsmanship that strives for perfection ðŸ¤”

17.
Label: directing
Quotes:
- Designer: Hello everyone~ The development plan and PC download address are in the group announcement.

18.
Label: catering to user needs
Quotes:
- Designer: It's still better to make the auto-generated one as good as possible

19.
Label: appreciate support from users
Quotes:
- Designer: Thank you all for your support. We will do better!

20.
Label: ask followup question on user request
Quotes:
- Designer: Oh, please message me privately and tell me what you roughly need

21.
Label: share potential future direction
Quotes:
- Designer: I myself have some interest in chemistry

22.
Label: demonstrating user engagement and anticipation
Quotes:
- User: Will there be an update this week? [Emoji]

23.
Label: advises manual adjustments due to auto layout algorithm instability
Quotes:
- Designer: This version of the circuit diagram is for testing only... You can drag the Editor because the auto-layout algorithm is not very stable and may produce some odd results

24.
Label: align with user needs
Quotes:
- Designer: For electricity, we plan to create a function for simulated experiment assessment; it will add many experimental details, such as zero adjustment (of course, only useful in specific modes, otherwise it would be cumbersome to use regularly)
- Designer: For example, you can see the corresponding circuit diagram after connecting the physical diagram, or vice versa
- Designer: Actually, we are researching the bidirectional conversion between physical diagrams and circuit diagrams
- Designer: For example, see the circuit diagram to connect the physical diagram, or vice versa
- Designer: With bidirectional conversion, you can directly do problems in the application

25.
Label: setting standards
Quotes:
- Designer: It's still better to make the auto-generated one as good as possible

26.
Label: expressing approval of the designer's idea
Quotes:
- User: This idea is really good

27.
Label: uncertainty
Quotes:
- User: Excuse me.

28.
Label: confirming update receipt
Quotes:
- User: Updated

29.
Label: as highlighted by user 4232's appreciation of the software's practicality
Quotes:
- Designer: No need to be polite, if you encounter any problems during use, you can directly mention them in the group.

30.
Label: advocating for user convenience
Quotes:
- User: It is recommended to add an exit button function to the PC version. Many regions now use all-in-one touch screen machines without physical keyboards.

31.
Label: followup on gradelevel
Quotes:
- Designer: Haha. Are you a middle school or high school teacher?

32.
Label: expressing enthusiasm non verbally
Quotes:
- User: [Emoji][Emoji]
===
Here are the definitions for each code:

---
1.
Criteria: A designer mentions a specific timeline for an Android update.
Label: Providing Update Timeline

2.
Criteria: A designer creates anticipation for upcoming features or changes.
Label: Building Anticipation

3.
Criteria: A designer responds to user feedback and indicates willingness to incorporate it.
Label: Responsiveness to Feedback

4.
Criteria: A designer acknowledges the complexity of a task or process.
Label: Managing Complexity

5.
Criteria: A designer expresses the intention to design software that is user-friendly and easy to understand.
Label: User-Centered Design

6.
Criteria: A designer considers incorporating user feedback to improve the software.
Label: Incorporating User Feedback

7.
Criteria: A user shares personal or professional information about themselves.
Label: Sharing Identity

8.
Criteria: A designer proposes a new feature or functionality for the software.
Label: Proposing New Features

9.
Criteria: A designer aims to simplify the design or functionality of the software.
Label: Simplifying Design

10.
Criteria: A user provides real-world context or examples related to the software.
Label: Providing Real-World Context

11.
Criteria: A designer seeks solutions to a problem or challenge.
Label: Seeking Solutions

12.
Criteria: A designer inquires about a user's background or profession.
Label: Inquiring about User Background

13.
Criteria: A designer shares updates or progress on the software development.
Label: Sharing Progress

14.
Criteria: A user inquires about or mentions a specific platform (e.g., PC, iOS).
Label: Identifying Platform

15.
Criteria: A designer considers the needs and requirements of users.
Label: Considering User Needs

16.
Criteria: A user expresses appreciation for the designer's attention to detail.
Label: Appreciating Craftsmanship

17.
Criteria: A designer provides directions or instructions to users.
Label: Directing Users

18.
Criteria: A designer prioritizes catering to user needs and requirements.
Label: Catering to User Needs

19.
Criteria: A designer expresses gratitude for user support.
Label: Appreciating User Support

20.
Criteria: A designer asks follow-up questions to clarify user requests.
Label: Clarifying User Requests

21.
Criteria: A designer shares potential future directions or ideas for the software.
Label: Sharing Future Directions

22.
Criteria: A user demonstrates engagement and anticipation for updates or features.
Label: Demonstrating User Engagement

23.
Criteria: A designer advises users on manual adjustments or workarounds.
Label: Providing Workarounds

24.
Criteria: A designer aligns the software with user needs and requirements.
Label: Aligning with User Needs

25.
Criteria: A designer sets standards or expectations for the software.
Label: Setting Standards

26.
Criteria: A user expresses approval or agreement with a designer's idea.
Label: Approving Designer's Idea

27.
Criteria: A user expresses uncertainty or confusion about something.
Label: Expressing Uncertainty

28.
Criteria: A user confirms receipt of an update or change.
Label: Confirming Update Receipt

29.
Criteria: A user appreciates the practicality or usefulness of the software.
Label: Appreciating Practicality

30.
Criteria: A user advocates for changes or improvements to the software.
Label: Advocating for User Convenience

31.
Criteria: A designer follows up on a user's background or profession.
Label: Following up on User Background

32.
Criteria: A user expresses enthusiasm or excitement non-verbally (e.g., using emojis).
Label: Expressing Enthusiasm