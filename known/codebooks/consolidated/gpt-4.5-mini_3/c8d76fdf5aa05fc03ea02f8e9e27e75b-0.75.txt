You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (20 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
20. 
Concepts: {Repeat the input 20}
Relationship: {What is logical relationship between concepts in code 20, or N/A if not applicable}
Criteria: {Who did what, and how for code 20}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: ask follow-up questions, ask clarification questions
- Designers ask follow-up questions and explain their intentions.
- Designers ask questions and respond to user inquiries.

2.
Concepts: inquire about user needs, trying to understand the needs
- Designers inquire about user needs and seek consultation.
- The designer inquires about the user's challenges or issues to better understand user needs.

3.
Concepts: ask about user background, inquire about identity
- Designers inquire about users' backgrounds.
- Designers inquire about users' roles or identities to contextualize interactions.

4.
Concepts: request technical assistance, provide technical support
- Users request assistance for technical problems.
- Instances where designers or users provide technical assistance or address technical issues.

5.
Concepts: acknowledge user feedback, acknowledge user experience
- Designers acknowledge user feedback during interactions.
- Designers acknowledge and validate users' experiences or challenges with the software.

6.
Concepts: suggest design ideas, accept user suggestions
- Designers proposed methods or modifications based on user needs.
- Designers accept and acknowledge requests for improvements.

7.
Concepts: invite user feedback, invite feature requests
- Designers invite and encourage user feedback.
- Designers invite and solicit user input for feature requests.

8.
Concepts: designer confirmation, confirm feature implementation
- Designers confirm the existence or implementation of features in the software.
- Designers confirm future implementations of features.

9.
Concepts: provide update overviews, announce software updates
- Designers provide detailed announcements about software updates.
- Designers announce software and component updates to keep users informed.

10.
Concepts: announce new features, announce version updates
- Designers announce new features and their releases.
- Designers announce version details and inform the community about new version availability.

11.
Concepts: update the community, share product updates
- Designers announce updates and encourage community feedback.
- Designers share product and development updates with the community.

12.
Concepts: announce anticipated updates, communicate upcoming features
- Designers confirm and announce updates, inviting user feedback on desired features.
- Designers share planned updates and explain future updates to inform the community.

13.
Concepts: share feature previews, list upcoming features
- Designers provide previews of upcoming features and updates.
- Designers list upcoming features and describe potential updates.

14.
Concepts: explain new features, explain software features
- Designers explain and exemplify new features.
- Designers explain and address specific software functionalities.

15.
Concepts: explain design rationale, give rationale to development decision
- Designers explain the reasons for their design decisions.
- Designer justifies development decisions by explaining their impact.

16.
Concepts: propose software enhancements, suggest usability improvements
- Users propose enhancements for existing features.
- Users propose modifications for better usability.

17.
Concepts: share positive feedback, express user satisfaction
- Users shared positive comments about the software's performance.
- Users express appreciation for the software's effectiveness.

18.
Concepts: show designer engagement, encourage community participation
- The designer engages with the community, showing active participation and contribution.
- Designers encourage community participation and interaction.

19.
Concepts: community building, acknowledge community support
- Users and designers express gratitude or camaraderie, contributing to community building.
- Users and designers acknowledge and express gratitude for community support.

20.
Concepts: use emojis, emoji
- Users use non-verbal communication methods such as emojis.
- A user utilizes an emoji in their communication, adding a visual element to their message.
===
---
Definitions for each code (20 in total):
1. 
Concepts: ask follow-up questions, ask clarification questions  
Relationship: Both concepts involve designers actively engaging in dialogue to clarify and elaborate on previous interactions.  
Criteria: Designers ask follow-up and clarification questions to ensure understanding and communicate their intentions effectively.  
Phrase: Engaging in clarifying dialogue  

2. 
Concepts: inquire about user needs, trying to understand the needs  
Relationship: Both concepts emphasize the designer's role in seeking information about user needs to tailor their approach.  
Criteria: Designers inquire about user needs and seek consultation to gain a deeper understanding of user challenges.  
Phrase: Understanding user needs  

3. 
Concepts: ask about user background, inquire about identity  
Relationship: Both concepts relate to gathering contextual information about users that can inform design decisions.  
Criteria: Designers inquire about users' backgrounds and identities to create more relevant and personalized interactions.  
Phrase: Contextualizing user interactions  

4. 
Concepts: request technical assistance, provide technical support  
Relationship: Both concepts involve a two-way interaction where users seek help and designers offer solutions for technical issues.  
Criteria: Users request technical assistance, and designers provide support to address and resolve technical problems.  
Phrase: Addressing technical issues  

5. 
Concepts: acknowledge user feedback, acknowledge user experience  
Relationship: Both concepts highlight the importance of recognizing user input and validating their experiences throughout interactions.  
Criteria: Designers acknowledge user feedback and validate their experiences to foster a supportive environment.  
Phrase: Validating user experiences  

6. 
Concepts: suggest design ideas, accept user suggestions  
Relationship: Both concepts illustrate a collaborative process where ideas are shared and considered for improvement.  
Criteria: Designers suggest design ideas and accept user suggestions to enhance the software based on feedback.  
Phrase: Collaborating on design improvements  

7. 
Concepts: invite user feedback, invite feature requests  
Relationship: Both concepts focus on actively seeking input from users to guide product development.  
Criteria: Designers invite user feedback and solicit feature requests to incorporate user preferences into the design process.  
Phrase: Encouraging user input  

8. 
Concepts: designer confirmation, confirm feature implementation  
Relationship: Both concepts involve the designer communicating about features and their status to the community.  
Criteria: Designers confirm existing features and future implementations to keep users informed about the software's capabilities.  
Phrase: Communicating feature status  

9. 
Concepts: provide update overviews, announce software updates  
Relationship: Both concepts pertain to informing the community about changes and enhancements to the software.  
Criteria: Designers provide detailed updates and announce software changes to ensure users are aware of new developments.  
Phrase: Informing users of updates  

10. 
Concepts: announce new features, announce version updates  
Relationship: Both concepts involve informing the community about enhancements in the software.  
Criteria: Designers announce new features and version updates to keep users informed about improvements and releases.  
Phrase: Informing about new releases  

11. 
Concepts: update the community, share product updates  
Relationship: Both concepts emphasize the importance of maintaining communication with the community regarding product developments.  
Criteria: Designers announce updates and share product developments to encourage community feedback and engagement.  
Phrase: Sharing product developments  

12. 
Concepts: announce anticipated updates, communicate upcoming features  
Relationship: Both concepts focus on sharing future plans with the community to generate interest and feedback.  
Criteria: Designers announce anticipated updates and communicate upcoming features to keep users informed about potential changes.  
Phrase: Communicating future updates  

13. 
Concepts: share feature previews, list upcoming features  
Relationship: Both concepts involve providing insights into future software capabilities.  
Criteria: Designers provide previews of upcoming features and list potential updates to prepare the community for changes.  
Phrase: Previewing upcoming features  

14. 
Concepts: explain new features, explain software features  
Relationship: Both concepts focus on educating users about the functionalities of the software.  
Criteria: Designers explain new features and specific software functionalities to enhance user understanding.  
Phrase: Educating about features  

15. 
Concepts: explain design rationale, give rationale to development decision  
Relationship: Both concepts relate to providing reasoning behind design choices and development paths.  
Criteria: Designers explain the rationale for their design decisions and justify development choices to clarify their impact.  
Phrase: Justifying design choices  

16. 
Concepts: propose software enhancements, suggest usability improvements  
Relationship: Both concepts involve users actively contributing ideas to improve the software's performance.  
Criteria: Users propose software enhancements and suggest usability improvements to enhance the overall user experience.  
Phrase: Proposing enhancements  

17. 
Concepts: share positive feedback, express user satisfaction  
Relationship: Both concepts emphasize the users’ positive experiences and appreciation for the software.  
Criteria: Users share positive feedback and express satisfaction to convey their approval of the software's effectiveness.  
Phrase: Expressing satisfaction  

18. 
Concepts: show designer engagement, encourage community participation  
Relationship: Both concepts highlight the importance of active involvement from designers to foster community bonds.  
Criteria: Designers engage with the community and encourage participation to build a collaborative environment.  
Phrase: Fostering community engagement  

19. 
Concepts: community building, acknowledge community support  
Relationship: Both concepts focus on creating a supportive environment through mutual appreciation among community members.  
Criteria: Users and designers acknowledge community support and express gratitude to foster community building.  
Phrase: Fostering community bonds  

20. 
Concepts: use emojis, emoji  
Relationship: Both concepts involve the use of visual elements to enhance communication within the community.  
Criteria: Users utilize emojis in their communication to add a visual element and express emotions.  
Phrase: Enhancing communication with emojis  
---