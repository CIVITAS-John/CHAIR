You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (13 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
13. 
Concepts: {Repeat the input 13}
Relationship: {What is logical relationship between concepts in code 13, or N/A if not applicable}
Criteria: {Who did what, and how for code 13}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: gratitude to the community, expressing gratitude
- A team member expresses gratitude to the community.
- Community members express appreciation and encouragement, responding to each other with gratitude or acknowledgment.

2.
Concepts: providing user feedback, provide feedback and suggestions
- Users provide specific feedback and communicate issues or suggestions regarding the design and functionality of the product.
- Users provide feedback or suggestions on features and improvements for the software.

3.
Concepts: suggesting new features, requesting usability features
- Users suggest new features and express appreciation for specific features.
- Users highlight their usability needs and request specific features or improvements.

4.
Concepts: seeking information, seeking clarification
- Users ask questions to seek information or clarification about the software.
- Users or developers ask for or provide clarification about encountered problems.

5.
Concepts: providing resources, sharing resources
- Designers send resources to the community and direct users to relevant resources.
- Designers or users share resources such as download links, development plans, or announcements and provide information on how to access or download them.

6.
Concepts: future consultation promise, suggesting future designs
- Designer promises to seek further consultation before starting new tasks.
- Designers propose new design ideas and gather opinions to plan for feedback before starting new projects.

7.
Concepts: discussing feature development, discussing software improvements
- Designers discuss the development and improvement of features.
- Developers and designers discuss improvements or changes to the software and its design.

8.
Concepts: acting on user feedback, responding to user feedback
- Designers acknowledge feedback and discuss plans or commit to making improvements based on user feedback.
- Designers respond to user feedback, queries, or suggestions, showing attentiveness to user needs.

9.
Concepts: collecting feedback, integrate user feedback
- Designers gather and solicit user input and feedback.
- Designers solicit user feedback and incorporate it into design decisions.

10.
Concepts: subject focus, discussing limitations
- A designer explains the primary focus of the platform and its limitations.
- Designers highlight and consider limitations of the platform or hardware.

11.
Concepts: offering solutions, providing support
- A designer offers solutions or assistance to users' technical issues or questions.
- Designers offer help or assistance to users to effectively use the product and provide technical support or guidance to address technical issues.

12.
Concepts: sharing technical details, providing detailed information
- Users or designers provide specific technical information and explanations.
- Designers or users elaborate on topics and provide additional information.

13.
Concepts: highlighting usability, describe context of use and usability
- Users comment on the ease of use and practicality of the software.
- Users describe the specific contexts in which they use the software and its usability.
===
---
Definitions for each code (13 in total):
1.
Concepts: gratitude to the community, expressing gratitude
Relationship: Both concepts involve expressing appreciation within the community.
Criteria: Community members express gratitude and appreciation towards each other.
Phrase: Expressing gratitude

2.
Concepts: providing user feedback, provide feedback and suggestions
Relationship: Both concepts involve users giving feedback and suggestions about the product.
Criteria: Users provide specific feedback and suggestions regarding the design and functionality of the product.
Phrase: Providing feedback

3.
Concepts: suggesting new features, requesting usability features
Relationship: Both concepts involve users suggesting or requesting new features based on usability needs.
Criteria: Users suggest new features and request specific usability improvements.
Phrase: Suggesting features

4.
Concepts: seeking information, seeking clarification
Relationship: Both concepts involve users seeking information or clarification about the software.
Criteria: Users ask questions to seek information or clarification about the software.
Phrase: Seeking information

5.
Concepts: providing resources, sharing resources
Relationship: Both concepts involve sharing or providing resources to the community.
Criteria: Designers or users share and direct others to relevant resources such as download links or development plans.
Phrase: Sharing resources

6.
Concepts: future consultation promise, suggesting future designs
Relationship: Both concepts involve planning and seeking input for future designs.
Criteria: Designers promise to consult the community and propose new design ideas for feedback before starting new projects.
Phrase: Planning future designs

7.
Concepts: discussing feature development, discussing software improvements
Relationship: Both concepts involve discussions about developing and improving software features.
Criteria: Designers and developers discuss the development and improvement of software features.
Phrase: Discussing improvements

8.
Concepts: acting on user feedback, responding to user feedback
Relationship: Both concepts involve designers responding to and acting on user feedback.
Criteria: Designers acknowledge and respond to user feedback, committing to making improvements based on it.
Phrase: Responding to feedback

9.
Concepts: collecting feedback, integrate user feedback
Relationship: Both concepts involve gathering and incorporating user feedback into design decisions.
Criteria: Designers solicit and integrate user feedback into design decisions.
Phrase: Integrating feedback

10.
Concepts: subject focus, discussing limitations
Relationship: Both concepts involve discussing the focus and limitations of the platform.
Criteria: Designers explain the primary focus and limitations of the platform.
Phrase: Discussing limitations

11.
Concepts: offering solutions, providing support
Relationship: Both concepts involve offering assistance and support to users.
Criteria: Designers offer solutions and technical support to users' issues or questions.
Phrase: Providing support

12.
Concepts: sharing technical details, providing detailed information
Relationship: Both concepts involve providing detailed technical information.
Criteria: Users or designers provide specific technical information and elaborate on topics.
Phrase: Providing technical details

13.
Concepts: highlighting usability, describe context of use and usability
Relationship: Both concepts involve discussing the usability and context of using the software.
Criteria: Users comment on the ease of use and describe the specific contexts in which they use the software.
Phrase: Highlighting usability
---