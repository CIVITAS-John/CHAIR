You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (8 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
8. {Repeat the input 8}
Relationship: {The logical relationship between concepts in input 8}
Criteria: {A sentence of consolidated criteria for code 8}
Label: {A consolidated label of code 8}
Category: {2-4 words for code 8}
---
~~~
1. user response and planning, engagement with learning needs.
- Understanding how the designer responds to user requests and plans the development of the platform based on user inputs.
- Analyzing how the designer responds to user requests and incorporates educational content into the platform.

2. teaching experience, educational background.
- Discussion or mention of users' teaching backgrounds.
- Understanding the participants' teaching experience and how it influences their use of educational technology.

3. feature updates, changes in lab components.
- Announcements or updates regarding changes to the Physics Lab software.
- Discussion surrounding updates, features, and components of the software.
- Announcements or discussions regarding updates to lab components.

4. feature requests.
- Users requesting new features or updates.
- Discussing desired features like export functions and their importance for user experience.

5. prioritization of content.
- Examining how the designer plans to prioritize different sections of educational content on the platform.
- Discussions related to prioritizing certain sections of the physics lab for development.

6. community involvement in decision-making.
- Assessing how the designer involves the community in decision-making processes and prioritization of content development.
- Conversations highlighting the involvement of community members in decision-making processes and platform development.

7. user feedback.
- Users providing feedback or suggestions for improvements to Physics Lab.
- Users providing feedback and suggestions for improvements.
- Considering how user suggestions and requests shape the development and implementation of educational software.
- Interactions where users provide feedback or suggestions for the software's development.
- Analyzing users' feedback on the editor's auto-layout algorithm and how they perceive the tool's usability.

8. software updates.
- Users adapting to changes in the software and discussing the implications.
- Designer announcements regarding software updates, new features, adjustments, and bug fixes.
===
Categories: 
* User Engagement
* Educational Background
* Software Development
* Community Participation
* User Feedback

Definitions for each code (8 in total):
1. User response and planning, engagement with learning needs.
Relationship: User responses and planning based on user inputs and educational content incorporation.
Criteria: Understanding designer responses to user requests, planning platform development, and educational content integration.
Label: User Engagement
Category: User Engagement

2. Teaching experience, educational background.
Relationship: Teaching experience influencing educational technology use.
Criteria: Mention or discussion of participants' teaching backgrounds and experience.
Label: Educational Background
Category: Educational Background

3. Feature updates, changes in lab components.
Relationship: Announcements and discussions on software updates and lab component changes.
Criteria: Updates, features, and components changes in Physics Lab software.
Label: Software Development
Category: Software Development

4. Feature requests.
Relationship: User requests for new features and updates.
Criteria: Users requesting new features like export functions for better user experience.
Label: Software Development
Category: Software Development

5. Prioritization of content.
Relationship: Planning and prioritizing educational content sections.
Criteria: Planning to prioritize different educational content sections on the platform.
Label: User Engagement
Category: User Engagement

6. Community involvement in decision-making.
Relationship: Community participation in decision-making and content prioritization.
Criteria: Involvement of community members in decision-making processes and platform development.
Label: Community Participation
Category: Community Participation

7. User feedback.
Relationship: User suggestions shaping software development.
Criteria: Users providing feedback, suggestions, and shaping software development and implementation.
Label: User Feedback
Category: User Feedback

8. Software updates.
Relationship: Users adapting to software changes and updates.
Criteria: Designer announcements, software updates, new features, adjustments, and bug fixes.
Label: Software Development
Category: Software Development