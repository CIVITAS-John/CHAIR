You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (24 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
24. 
Concepts: {Repeat the input 24}
Relationship: {What is logical relationship between concepts in code 24, or N/A if not applicable}
Criteria: {Who did what, and how for code 24}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: request for technical support, requesting technical assistance
- User requests technical support or guidance for a specific issue.
- Technical assistance or guidance is requested to resolve an issue.
- A user asks for guidance on uploading a specific type of avatar.

2.
Concepts: system compatibility concerns, expressing concern about system compatibility
- Considering or discussing system compatibility issues for older systems.
- Users express concerns about system compatibility.

3.
Concepts: suggests system compatibility, mentioning operating system compatibility
- The user suggests or implies that a specific system or configuration should be compatible with the software.
- A user mentions compatibility or suitability of a specific operating system.

4.
Concepts: clarifying compatibility, system compatibility clarification
- Information is provided about the compatibility of the software with different systems or devices.
- Clarifying system compatibility or requirements for a product or tool.

5.
Concepts: clarifying platform compatibility, answer about compatibility
- Designer clarifies platform compatibility.
- A designer answers a question about compatibility with a specific system or platform.

6.
Concepts: confirming system compatibility, confirming platform compatibility
- Designers verify if the software is compatible with specific systems or versions.
- Designers confirm the compatibility of the platform with specific systems.

7.
Concepts: compatibility confirmation, confirming technical compatibility
- Designer confirms compatibility or functionality of a feature.
- The designer confirms technical compatibility or specifications.

8.
Concepts: theorizing compatibility, theoretical compatibility
- Designers theorize or speculate about the compatibility of Physics Lab with different systems or devices.
- A designer states that the Physics Lab software is theoretically compatible with certain systems or devices.

9.
Concepts: discussing compatibility, theoretical system compatibility
- Designer suggests or discusses checking the compatibility of the system with different devices or platforms.
- Designer discusses the theoretical compatibility of the system with different devices or platforms.

10.
Concepts: explains limitations, explain current version's limitation
- The speaker explains the limitations, constraints, or difficulties of implementing a feature or functionality.
- The speaker explains the limitations or constraints of the current version or feature.

11.
Concepts: technical constraint explanation, explaining technical limitations
- User explains a technical constraint or limitation.
- A user or designer explains technical limitations or constraints.

12.
Concepts: sharing design constraints, explaining design constraint
- User shares context about design constraints.
- User explains reason for design constraint.

13.
Concepts: design constraints, revealing design constraints
- Designer mentions a specific design constraint or limitation.
- A designer reveals constraints or limitations in the design process.

14.
Concepts: discusses limitations, explaining current limitations of software
- The designer or user discusses the limitations of the software or solution.
- Designer explains the current limitations of the software.

15.
Concepts: explain limitation, design constraint explanation, justifying limitations
- The designer explains the limitations or constraints of the software or a feature.
- Designers explain limitations or constraints of the software.
- Designer explains or justifies the limitations of a feature or resource.

16.
Concepts: sets boundaries, establishing technical limitations
- The designer sets boundaries, clarifies limitations, or provides context for what can or cannot be done.
- Designer specifies technical limitations or constraints.

17.
Concepts: acknowledge limitations, acknowledging technical limitations, considering limitations, limitation acknowledgment
- Designer acknowledges limitations
- Designer acknowledges or addresses a potential issue or limitation with the platform.
- The designer acknowledges limitations or potential issues with the design.
- Designer acknowledges limitations or weaknesses of a feature or tool.
- A designer acknowledges the limitations or constraints of a technical aspect.
- The designer expresses consideration or awareness of potential issues or limitations.
- A designer acknowledges limitations or constraints, such as memory limitations.

18.
Concepts: complexity explanation, explaining development complexity, explaining development challenges
- Designer explains the complexity of a feature or functionality.
- Explaining the complexity or challenges of developing specific software features.
- Designer explains or discusses the challenges or difficulties in developing a feature or functionality.

19.
Concepts: challenge highlighting, technical challenge highlight
- User highlights challenges or difficulties.
- A user highlights technical challenges or difficulties.

20.
Concepts: design challenges, highlights challenge
- Designer shares challenges or difficulties encountered during the design process.
- Designer highlights a specific challenge or limitation they are facing.

21.
Concepts: frustration, frustration expression, expresses frustration
- User or designer expresses frustration, dissatisfaction, or annoyance.
- Expressing frustration or annoyance with limitations or constraints.
- Designer expresses frustration or annoyance with limitations

22.
Concepts: product gap identification, identifying gap in existing tools
- User identifies a gap or limitation in the product.
- A user identifies a gap or limitation in existing tools or software.

23.
Concepts: highlighting software limitations, highlighting limitations
- A user highlights the limitations or shortcomings of the software.
- A user highlights limitations or restrictions, such as school network restrictions, that affect their use of the software.

24.
Concepts: indirect reject, implicit rejection
- The designer implies or explicitly states that certain tasks or features will not be prioritized or implemented.
- The designer implies or explicitly states that certain tasks or features will not be implemented, often with a tone of uncertainty or hesitation.
===
Here are the definitions for each code:

---
1.
Concepts: request for technical support, requesting technical assistance
Relationship: The concepts are related as they both describe a user's need for help with a specific issue.
Criteria: A user requests technical support or guidance to resolve an issue.
Phrase: Request technical assistance.

2.
Concepts: system compatibility concerns, expressing concern about system compatibility
Relationship: The concepts are related as they both describe a user's worry about a system's compatibility.
Criteria: A user expresses concern about system compatibility.
Phrase: Express system compatibility concerns.

3.
Concepts: suggests system compatibility, mentioning operating system compatibility
Relationship: The concepts are related as they both describe a user's suggestion or implication of compatibility.
Criteria: A user suggests or implies system compatibility.
Phrase: Suggest system compatibility.

4.
Concepts: clarifying compatibility, system compatibility clarification
Relationship: The concepts are related as they both describe providing information about system compatibility.
Criteria: Information is provided about system compatibility.
Phrase: Clarify system compatibility.

5.
Concepts: clarifying platform compatibility, answer about compatibility
Relationship: The concepts are related as they both describe a designer's response to a compatibility question.
Criteria: A designer clarifies platform compatibility.
Phrase: Clarify platform compatibility.

6.
Concepts: confirming system compatibility, confirming platform compatibility
Relationship: The concepts are related as they both describe a designer's verification of system compatibility.
Criteria: Designers confirm system compatibility.
Phrase: Confirm system compatibility.

7.
Concepts: compatibility confirmation, confirming technical compatibility
Relationship: The concepts are related as they both describe a designer's confirmation of compatibility.
Criteria: A designer confirms technical compatibility.
Phrase: Confirm technical compatibility.

8.
Concepts: theorizing compatibility, theoretical compatibility
Relationship: The concepts are related as they both describe a designer's speculation about compatibility.
Criteria: A designer theorizes about compatibility.
Phrase: Theorize about compatibility.

9.
Concepts: discussing compatibility, theoretical system compatibility
Relationship: The concepts are related as they both describe a designer's discussion about theoretical compatibility.
Criteria: A designer discusses theoretical system compatibility.
Phrase: Discuss theoretical compatibility.

10.
Concepts: explains limitations, explain current version's limitation
Relationship: The concepts are related as they both describe a speaker's explanation of limitations.
Criteria: A speaker explains limitations or constraints.
Phrase: Explain limitations.

11.
Concepts: technical constraint explanation, explaining technical limitations
Relationship: The concepts are related as they both describe a user or designer's explanation of technical limitations.
Criteria: A user or designer explains technical limitations.
Phrase: Explain technical limitations.

12.
Concepts: sharing design constraints, explaining design constraint
Relationship: The concepts are related as they both describe a user's sharing of design constraints.
Criteria: A user shares design constraints.
Phrase: Share design constraints.

13.
Concepts: design constraints, revealing design constraints
Relationship: The concepts are related as they both describe a designer's mention of design constraints.
Criteria: A designer reveals design constraints.
Phrase: Reveal design constraints.

14.
Concepts: discusses limitations, explaining current limitations of software
Relationship: The concepts are related as they both describe a designer or user's discussion of limitations.
Criteria: A designer or user discusses software limitations.
Phrase: Discuss software limitations.

15.
Concepts: explain limitation, design constraint explanation, justifying limitations
Relationship: The concepts are related as they all describe a designer's explanation or justification of limitations.
Criteria: A designer explains or justifies limitations.
Phrase: Explain limitations.

16.
Concepts: sets boundaries, establishing technical limitations
Relationship: The concepts are related as they both describe a designer's establishment of technical boundaries.
Criteria: A designer sets technical boundaries.
Phrase: Set technical boundaries.

17.
Concepts: acknowledge limitations, acknowledging technical limitations, considering limitations, limitation acknowledgment
Relationship: The concepts are related as they all describe a designer's acknowledgment of limitations.
Criteria: A designer acknowledges limitations.
Phrase: Acknowledge limitations.

18.
Concepts: complexity explanation, explaining development complexity, explaining development challenges
Relationship: The concepts are related as they all describe a designer's explanation of complexity or challenges.
Criteria: A designer explains development complexity or challenges.
Phrase: Explain development complexity.

19.
Concepts: challenge highlighting, technical challenge highlight
Relationship: The concepts are related as they both describe a user's highlighting of challenges.
Criteria: A user highlights technical challenges.
Phrase: Highlight technical challenges.

20.
Concepts: design challenges, highlights challenge
Relationship: The concepts are related as they both describe a designer's sharing of challenges.
Criteria: A designer shares design challenges.
Phrase: Share design challenges.

21.
Concepts: frustration, frustration expression, expresses frustration
Relationship: The concepts are related as they all describe a user or designer's expression of frustration.
Criteria: A user or designer expresses frustration.
Phrase: Express frustration.

22.
Concepts: product gap identification, identifying gap in existing tools
Relationship: The concepts are related as they both describe a user's identification of a gap or limitation.
Criteria: A user identifies a gap or limitation in a product.
Phrase: Identify product gap.

23.
Concepts: highlighting software limitations, highlighting limitations
Relationship: The concepts are related as they both describe a user's highlighting of software limitations.
Criteria: A user highlights software limitations.
Phrase: Highlight software limitations.

24.
Concepts: indirect reject, implicit rejection
Relationship: The concepts are related as they both describe a designer's implication that a feature will not be implemented.
Criteria: A designer implies rejection of a feature.
Phrase: Imply rejection.