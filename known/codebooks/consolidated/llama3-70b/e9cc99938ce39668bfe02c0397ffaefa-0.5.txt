You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another and please do not merge them.
Determine the logical relationship between concepts within each code, such as inclusion, parallel, or intersection.
Write clear and generalizable criteria for each code and do not introduce unnecessary details. Then, write an accurate label for the combined concept.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (10 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Label: {A consolidated label of code 1}
...
10. 
Concepts: {Repeat the input 10}
Relationship: {What is logical relationship between concepts in code 10, or N/A if not applicable}
Criteria: {Who did what, and how for code 10}
Label: {A consolidated label of code 10}
---
~~~
1.
Concepts: update sharing, development status
- Designers share updates about the development process.
- Instances where Designer-1 shares information about the development process or status.

2.
Concepts: planned updates, update announcements
- Information shared by designers about upcoming features or updates.
- Designers provide information about upcoming updates and new features.

3.
Concepts: compatibility concerns, software and system compatibility, compatibility and accessibility
- Discussions related to software compatibility with different systems or devices.
- Designers consider software compatibility, and users discuss compatibility issues.
- Discussions or decisions related to the software's compatibility with different operating systems, hardware, or accessibility considerations.

4.
Concepts: teacher feedback, teacher's first-hand experience
- Teachers share their experience and feedback on using the software in class.
- The teacher sharing their experience of using the app in class, providing valuable feedback to the designers.

5.
Concepts: co-creation, co-design approach
- Designers and users work together to shape the final product, with users playing an active role in the design decisions.
- Designers involve users in the development process, seeking input to shape the platform.

6.
Concepts: user feedback, design feedback
- Users provide feedback, suggestions, or report issues with the software.
- Users provide feedback or suggestions on the software's design or functionality.

7.
Concepts: designer engagement, user engagement strategies
- Designers' efforts to engage with users, respond to their questions, and encourage participation.
- Designers engage users, respond to questions, incorporate feedback, and involve users in the design process.

8.
Concepts: user support, positive reinforcement
- Users express appreciation for the designers' work and efforts.
- Users expressing approval or appreciation for the designers' ideas or work.

9.
Concepts: designer's responsiveness
- Designers acknowledge and respond to user requests or feedback.
- Designers respond to user inquiries, provide information, or acknowledge feedback.

10.
Concepts: usability feedback
- Feedback related to the ease of use and functionality of the platform.
- Comments and suggestions related to the software's usability and functionality.
===
Here are the definitions for each code:

---
1.
Concepts: update sharing, development status
Relationship: Inclusion (update sharing is a way to share development status)
Criteria: Designers share information about the development process or status.
Label: Development Updates

2.
Concepts: planned updates, update announcements
Relationship: Parallel (both concepts refer to sharing information about upcoming updates)
Criteria: Designers provide information about upcoming updates and new features.
Label: Update Announcements

3.
Concepts: compatibility concerns, software and system compatibility, compatibility and accessibility
Relationship: Inclusion (software and system compatibility is a type of compatibility concern)
Criteria: Discussions related to software compatibility with different systems or devices.
Label: Compatibility Concerns

4.
Concepts: teacher feedback, teacher's first-hand experience
Relationship: Inclusion (teacher's first-hand experience is a type of feedback)
Criteria: Teachers share their experience and feedback on using the software in class.
Label: Teacher Feedback

5.
Concepts: co-creation, co-design approach
Relationship: Inclusion (co-design approach is a type of co-creation)
Criteria: Designers involve users in the development process, seeking input to shape the platform.
Label: Co-Creation

6.
Concepts: user feedback, design feedback
Relationship: Inclusion (design feedback is a type of user feedback)
Criteria: Users provide feedback, suggestions, or report issues with the software.
Label: User Feedback

7.
Concepts: designer engagement, user engagement strategies
Relationship: Inclusion (user engagement strategies are a way to achieve designer engagement)
Criteria: Designers engage users, respond to their questions, and encourage participation.
Label: Designer Engagement

8.
Concepts: user support, positive reinforcement
Relationship: Inclusion (positive reinforcement is a type of user support)
Criteria: Users express appreciation for the designers' work and efforts.
Label: User Support

9.
Concepts: designer's responsiveness
Relationship: N/A
Criteria: Designers respond to user requests or feedback.
Label: Designer Responsiveness

10.
Concepts: usability feedback
Relationship: N/A
Criteria: Feedback related to the ease of use and functionality of the platform.
Label: Usability Feedback