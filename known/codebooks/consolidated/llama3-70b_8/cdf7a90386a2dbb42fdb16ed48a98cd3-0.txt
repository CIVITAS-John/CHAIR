You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: feature discussion, design discussion
- Designer discusses or debates the implementation of a feature or function.
- Designer discusses or debates the design or implementation of a feature or function.

2.
Concepts: feature development, feature implementation
- Designer discusses the development or planning of a feature or function.
- The designer discusses implementing a feature or functionality.

3.
Concepts: input methods, soft keyboard consideration
- A designer considers or discusses input methods or interfaces for a simulation or feature.
- A designer considers the use of soft keyboards or input methods in a simulation or feature.

4.
Concepts: consider usability, consider user experience
- User or designer considers the usability or user experience of a feature or function.
- The designer considers or discusses user experience or usability.

5.
Concepts: explain bidirectional conversion feature, reiterate bidirectional conversion feature
- The designer explains a feature that allows for bidirectional conversion between two formats.
- The designer reiterates or explains a feature that allows for bidirectional conversion.

6.
Concepts: local export necessity, acknowledge need for local export
- The designer recognizes the need for a local export feature.
- The designer acknowledges the need for a local export feature.

7.
Concepts: adapt design plan, design adaptation
- A designer adapts or adjusts their design plan based on user feedback.
- The designer adapts or modifies a design element in response to user feedback or needs.

8.
Concepts: feature simplification, suggesting simplification
- A designer or developer suggests simplifying a feature or process.
- A designer suggests simplifying a process or feature.

9.
Concepts: design refinement, simplification and refinement in design
- Refining or simplifying design elements or features.
- The designer prioritizes simplifying or refining a design or feature.

10.
Concepts: improving the product, feature optimization
- A designer discusses improving or enhancing the software.
- A designer or developer discusses optimizing or refining a feature or component.

11.
Concepts: problem solving, engage in problem solving
- Designer addresses or troubleshoots a problem or issue.
- The designer engages with users to identify and solve problems.

12.
Concepts: suggest alternative system, offering/seeking alternative
- Suggesting alternative systems or solutions.
- Suggestions or offers of alternative solutions or workarounds.

13.
Concepts: suggesting solutions, share potential solutions
- Suggesting potential solutions to a problem or issue.
- Designer proposes or suggests potential solutions to a problem or issue.

14.
Concepts: offering solution, solution offering
- Designer offers a solution or workaround to a problem.
- Offering a solution or workaround to a problem or issue, often through a technical fix or alternative approach.

15.
Concepts: usability workaround, provide workaround
- The designer provides a workaround for a usability issue.
- Provision of temporary solutions or workarounds to address user issues or limitations.

16.
Concepts: explain current limitations, talk about limitation of the solution
- Designer explains current limitations or constraints of the app.
- A designer or developer discusses the limitations or constraints of the software or solution.

17.
Concepts: recognize limitation, recognize technical limitation
- A limitation or constraint of the software is acknowledged.
- A technical limitation or constraint is acknowledged.

18.
Concepts: design challenges, difficulty in development
- Issues and obstacles faced by designers during the development process.
- Designer expresses difficulty or challenges in development.

19.
Concepts: apologizing for delay, apologizing for timing
- A designer apologizes for a late response or message.
- A designer apologizes for sending a message at an inconvenient time.

20.
Concepts: apology for disturbance, apology for interruption
- Designers apologize for any inconvenience caused to the users.
- A designer or developer apologizes for an interruption or inconvenience.

21.
Concepts: implicit rejection, indirect rejection
- The designer implies that a request or suggestion might not be feasible.
- The designer indirectly rejects or postpones a request or idea, often citing priorities or limitations.

22.
Concepts: frustration, user frustration
- Expressing frustration or annoyance, often in response to a technical issue or limitation.
- A user expresses frustration or dissatisfaction with the current system or software.

23.
Concepts: limitation acknowledgment, acknowledge potential issue
- A designer or developer acknowledges limitations or potential issues with a feature or software.
- A designer acknowledges a potential issue or problem with a feature or implementation.

24.
Concepts: software compliment, user satisfaction
- A user compliments or praises the Physics Lab software.
- A user expresses satisfaction or praise for the Physics Lab software.

25.
Concepts: compliment software, provide positive feedback
- The user compliments or praises the Physics Lab online community or its features.
- The user provides positive feedback or praise for the Physics Lab online community or its features.

26.
Concepts: user appreciation, appreciation for response
- Expressions of thanks or appreciation from users.
- A user expresses gratitude or acknowledgment for a response or solution.

27.
Concepts: express approval, express approval or acknowledgment
- A user expresses approval or appreciation for an idea or feature.
- A user expresses approval or acknowledgment through an emoji or brief response.

28.
Concepts: express satisfaction, user satisfaction with software features
- Satisfaction or appreciation is expressed for the software.
- Users express satisfaction or praise for specific software features or the overall software.

29.
Concepts: positive, praise software, compliment
- A user expresses a positive sentiment or opinion about the software.
- Users praise or express admiration for the software.
- User expresses praise or admiration for the software or designers.

30.
Concepts: feature appreciation, appreciation of features, compliment on software feature
- Expressing appreciation or admiration for a feature or idea.
- A user expresses appreciation or admiration for a specific feature.
- Expressing admiration or praise for a specific feature or aspect of the software.

31.
Concepts: community building, gratitude to the community, building community rapport
- The designer or user engages in community-building activities or expresses gratitude.
- Designer expresses gratitude towards the community.
- A designer builds rapport with the community by expressing gratitude or appreciation.

32.
Concepts: encouragement, community support
- A user offers encouragement or support to the designer or community.
- Instances where users express support, encouragement, or appreciation for the designers' efforts.
===
Here are the definitions for each code:

---
1.
Concepts: feature discussion, design discussion
Relationship: The concepts are related as they both involve discussing or debating the implementation or design of a feature or function.
Criteria: Designer discusses or debates the implementation or design of a feature or function.
Phrase: Discussing feature design.

2.
Concepts: feature development, feature implementation
Relationship: The concepts are related as they both involve planning or executing the development of a feature or function.
Criteria: Designer plans or executes the development of a feature or function.
Phrase: Developing features.

3.
Concepts: input methods, soft keyboard consideration
Relationship: The concepts are related as they both involve considering or discussing input methods or interfaces for a simulation or feature.
Criteria: Designer considers input methods or interfaces for a simulation or feature.
Phrase: Considering input methods.

4.
Concepts: consider usability, consider user experience
Relationship: The concepts are related as they both involve considering the usability or user experience of a feature or function.
Criteria: User or designer considers the usability or user experience of a feature or function.
Phrase: Considering usability.

5.
Concepts: explain bidirectional conversion feature, reiterate bidirectional conversion feature
Relationship: The concepts are related as they both involve explaining or reiterating a feature that allows for bidirectional conversion between two formats.
Criteria: Designer explains a feature that allows for bidirectional conversion between two formats.
Phrase: Explaining bidirectional conversion.

6.
Concepts: local export necessity, acknowledge need for local export
Relationship: The concepts are related as they both involve recognizing or acknowledging the need for a local export feature.
Criteria: Designer recognizes the need for a local export feature.
Phrase: Acknowledging local export need.

7.
Concepts: adapt design plan, design adaptation
Relationship: The concepts are related as they both involve adapting or adjusting a design plan based on user feedback.
Criteria: Designer adapts design plan based on user feedback.
Phrase: Adapting design plans.

8.
Concepts: feature simplification, suggesting simplification
Relationship: The concepts are related as they both involve suggesting or simplifying a feature or process.
Criteria: Designer suggests simplifying a feature or process.
Phrase: Suggesting simplification.

9.
Concepts: design refinement, simplification and refinement in design
Relationship: The concepts are related as they both involve refining or simplifying design elements or features.
Criteria: Designer refines or simplifies design elements or features.
Phrase: Refining design.

10.
Concepts: improving the product, feature optimization
Relationship: The concepts are related as they both involve improving or enhancing the software.
Criteria: Designer discusses improving or enhancing the software.
Phrase: Optimizing features.

11.
Concepts: problem solving, engage in problem solving
Relationship: The concepts are related as they both involve addressing or troubleshooting a problem or issue.
Criteria: Designer addresses or troubleshoots a problem or issue.
Phrase: Solving problems.

12.
Concepts: suggest alternative system, offering/seeking alternative
Relationship: The concepts are related as they both involve suggesting or offering alternative systems or solutions.
Criteria: Designer suggests alternative systems or solutions.
Phrase: Suggesting alternatives.

13.
Concepts: suggesting solutions, share potential solutions
Relationship: The concepts are related as they both involve suggesting or proposing potential solutions to a problem or issue.
Criteria: Designer suggests potential solutions to a problem or issue.
Phrase: Suggesting solutions.

14.
Concepts: offering solution, solution offering
Relationship: The concepts are related as they both involve offering a solution or workaround to a problem.
Criteria: Designer offers a solution or workaround to a problem.
Phrase: Offering solutions.

15.
Concepts: usability workaround, provide workaround
Relationship: The concepts are related as they both involve providing a temporary solution or workaround to address user issues or limitations.
Criteria: Designer provides a workaround for a usability issue.
Phrase: Providing workarounds.

16.
Concepts: explain current limitations, talk about limitation of the solution
Relationship: The concepts are related as they both involve explaining or discussing the limitations or constraints of the app.
Criteria: Designer explains current limitations or constraints of the app.
Phrase: Explaining limitations.

17.
Concepts: recognize limitation, recognize technical limitation
Relationship: The concepts are related as they both involve acknowledging or recognizing limitations or constraints of the software.
Criteria: Designer acknowledges limitations or constraints of the software.
Phrase: Recognizing limitations.

18.
Concepts: design challenges, difficulty in development
Relationship: The concepts are related as they both involve facing issues or obstacles during the development process.
Criteria: Designer faces issues or obstacles during development.
Phrase: Facing development challenges.

19.
Concepts: apologizing for delay, apologizing for timing
Relationship: The concepts are related as they both involve apologizing for a late response or message.
Criteria: Designer apologizes for a late response or message.
Phrase: Apologizing for delay.

20.
Concepts: apology for disturbance, apology for interruption
Relationship: The concepts are related as they both involve apologizing for any inconvenience caused to the users.
Criteria: Designer apologizes for an interruption or inconvenience.
Phrase: Apologizing for disturbance.

21.
Concepts: implicit rejection, indirect rejection
Relationship: The concepts are related as they both involve implying or indirectly rejecting a request or suggestion.
Criteria: Designer implies or indirectly rejects a request or idea.
Phrase: Implicitly rejecting.

22.
Concepts: frustration, user frustration
Relationship: The concepts are related as they both involve expressing frustration or annoyance.
Criteria: User expresses frustration or dissatisfaction with the current system or software.
Phrase: Expressing frustration.

23.
Concepts: limitation acknowledgment, acknowledge potential issue
Relationship: The concepts are related as they both involve acknowledging limitations or potential issues with a feature or software.
Criteria: Designer acknowledges limitations or potential issues with a feature or software.
Phrase: Acknowledging limitations.

24.
Concepts: software compliment, user satisfaction
Relationship: The concepts are related as they both involve complimenting or praising the Physics Lab software.
Criteria: User compliments or praises the Physics Lab software.
Phrase: Complimenting software.

25.
Concepts: compliment software, provide positive feedback
Relationship: The concepts are related as they both involve complimenting or praising the Physics Lab online community or its features.
Criteria: User compliments or praises the Physics Lab online community or its features.
Phrase: Providing positive feedback.

26.
Concepts: user appreciation, appreciation for response
Relationship: The concepts are related as they both involve expressing thanks or appreciation.
Criteria: User expresses gratitude or acknowledgment for a response or solution.
Phrase: Expressing appreciation.

27.
Concepts: express approval, express approval or acknowledgment
Relationship: The concepts are related as they both involve expressing approval or appreciation for an idea or feature.
Criteria: User expresses approval or appreciation for an idea or feature.
Phrase: Expressing approval.

28.
Concepts: express satisfaction, user satisfaction with software features
Relationship: The concepts are related as they both involve expressing satisfaction or praise for the software.
Criteria: User expresses satisfaction or praise for specific software features or the overall software.
Phrase: Expressing satisfaction.

29.
Concepts: positive, praise software, compliment
Relationship: The concepts are related as they both involve expressing a positive sentiment or opinion about the software.
Criteria: User expresses a positive sentiment or opinion about the software.
Phrase: Expressing positivity.

30.
Concepts: feature appreciation, appreciation of features, compliment on software feature
Relationship: The concepts are related as they both involve expressing appreciation or admiration for a feature or idea.
Criteria: User expresses appreciation or admiration for a specific feature.
Phrase: Appreciating features.

31.
Concepts: community building, gratitude to the community, building community rapport
Relationship: The concepts are related as they both involve engaging in community-building activities or expressing gratitude.
Criteria: Designer engages in community-building activities or expresses gratitude.
Phrase: Building community rapport.

32.
Concepts: encouragement, community support
Relationship: The concepts are related as they both involve offering encouragement or support to the designer or community.
Criteria: User offers encouragement or support to the designer or community.
Phrase: Offering encouragement.