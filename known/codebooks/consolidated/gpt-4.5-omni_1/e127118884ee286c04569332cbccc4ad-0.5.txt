You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (60 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
60. 
Concepts: {Repeat the input 60}
Relationship: {What is logical relationship between concepts in code 60, or N/A if not applicable}
Criteria: {Who did what, and how for code 60}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: subject focus, explain focus areas
- A designer discusses the focus of the physics content and potential future directions.
- A designer explains the main focus areas of the software and potential future expansions.

2.
Concepts: user interface, instructional design
- The designer discusses aspects of the user interface.
- A designer discusses the instructional design approach to make the software user-friendly.

3.
Concepts: intention explanation, follow-up question intention
- Users and designers explain the intention behind their questions or statements.
- Designers explain the intention behind their follow-up questions.

4.
Concepts: explaining design goals, explain intention of the app design
- A designer explains the goals behind the design.
- A developer explains the design intentions or focus areas of the application.

5.
Concepts: design principles, explain design philosophy
- A designer discusses the principles guiding the design of the software.
- The underlying principles and approaches guiding the design and development of the product.

6.
Concepts: describing usability features, explaining development rationale
- Designers describe and explain usability features or design considerations of the app.
- Designers explain the rationale behind design choices for usability or development decisions.

7.
Concepts: provide information, providing technical details
- A designer provides information about the software or hardware.
- Designers explain technical aspects of the software and provide detailed technical updates.

8.
Concepts: provide technical clarification, providing version clarification
- The designer offers technical explanations or clarifications.
- Designers explain the type and details of the version being discussed.

9.
Concepts: elaboration, elaboration of response
- A designer elaborates on a previous point.
- A designer elaborates on a response to explain complexity or delays.

10.
Concepts: indirect answer, detailed answer
- A designer provides an indirect answer to a user's question.
- A designer provides a detailed and specific answer to a user question.

11.
Concepts: potential update, suggest checking compatibility of the system
- A designer mentions the potential need to check system compatibility for updates.
- A designer suggests checking system compatibility or using a virtual machine.

12.
Concepts: consideration, compatibility solution suggestion
- A designer considers potential future actions to address compatibility issues.
- A designer suggests a potential solution to a compatibility issue.

13.
Concepts: compatibility discussion, discussing system compatibility, compatibility assurance
- Discussion about the software's compatibility with different operating systems.
- Designers discuss the system requirements for compatibility with users.
- A designer discusses the compatibility of the software with different machine models.

14.
Concepts: system compatibility information, providing compatibility information
- A user provides specific information about system compatibility.
- Designers confirm compatibility with specific systems or versions.

15.
Concepts: technical considerations, consider implementation context
- Designers consider technical aspects, such as compatibility and internet access.
- Designers consider the context of implementation, such as internet availability.

16.
Concepts: acknowledging limitations, explaining feature limitations, discussing technical constraints
- Designers acknowledge potential issues or limitations related to compatibility.
- Designers explain the current limitations of a feature or the platform.
- Designers address technical or usability limitations of the software.

17.
Concepts: answering a concern, give response to mitigate the concern
- A designer addresses a user's concern or worry.
- A developer responds to a user's concern with a mitigating solution.

18.
Concepts: share workaround, providing workarounds
- The designer shares a workaround for a known issue.
- Designers provide alternative methods or workarounds for issues faced by users.

19.
Concepts: user tips, provide practical advice
- A designer provides tips or information about new features and updates.
- The designer provides practical advice or a tip for using the software.

20.
Concepts: consider user experience, prioritize user experience
- A designer considers user experience in the design.
- A developer prioritizes user experience in the design or improvement of the software.

21.
Concepts: implicit rejection, indirect reject
- A designer implicitly rejects a request or suggestion.
- A designer indirectly rejects a suggestion by explaining current priorities.

22.
Concepts: confirms that reason, designer confirmation
- A designer confirms the reason behind a decision.
- The designer provides a reassuring confirmation in response to a query.

23.
Concepts: manual editing, manual adjustment
- A designer mentions that manual editing will be available in the future.
- A designer mentions the ability to manually adjust settings or layouts.

24.
Concepts: touch screen consideration, touch screen functionality, addressing usability concerns
- User recommends design considerations for touch screen devices.
- The designer discusses the functionality or limitations of touch screens.
- Designers address usability concerns related to touch screens.

25.
Concepts: input methods, soft keyboard consideration
- Designers discuss input methods and the need for soft keyboards.
- Designers consider the need for soft keyboards in certain contexts.

26.
Concepts: design thoughts, suggest feature simplification
- A designer shares their thoughts on making the design simpler.
- The designer suggests simplifying a feature or process.

27.
Concepts: feature adjustment, feature optimization
- A designer discusses necessary adjustments to features.
- A designer discusses optimizing a feature before release.

28.
Concepts: emphasize quality, catering to user needs
- A designer emphasizes the importance of quality in auto-generated features.
- A participant discusses the importance of making an auto-generated feature as good as possible to meet user needs.

29.
Concepts: invite feedback, soliciting user feedback
- A developer invites users to give feedback, suggestions, or report issues.
- Designers encourage users to provide feedback and ask for specific feedback or clarifications.

30.
Concepts: offering co-designing, co-designing with users
- A designer offers to involve the community in the design process.
- Designers and users collaborate in the design process, contributing ideas and making decisions.

31.
Concepts: share potential solutions, collaborating on problem solving
- Designers sharing potential solutions or improvements based on user feedback.
- Designers and users work together to address issues and improve the product.

32.
Concepts: seek consensus, agreeing with suggestions
- Designers seek consensus or agreement on proposed solutions.
- Users or designers agree with suggestions made by others.

33.
Concepts: designer acknowledgment, acknowledgment and implementation
- A designer acknowledges a suggestion and plans to implement it in a future update.
- Designers acknowledging user feedback and discussing plans to implement suggested features.

34.
Concepts: plan to gather feedback, promise to invite feedback
- Designers plan to gather feedback before starting a new project phase.
- The designer promises to seek feedback from all members of the group before proceeding with new tasks.

35.
Concepts: confirmation of collaboration, engage in collaborative planning
- Designers confirm plans to gather feedback collaboratively.
- Designers and users collaboratively discuss and plan software development.

36.
Concepts: propose design idea, suggest broader usability feature, suggestion elaboration
- A designer proposes a design idea or feature.
- A designer suggests features that would enhance the usability of the software.
- Detailed suggestions or examples provided by designers to explain potential features or changes.

37.
Concepts: give reason, explaining the need
- A designer explains the reason for gathering opinions before starting a new feature.
- A designer explains the necessity of a feature or development effort.

38.
Concepts: requesting new features, inviting feature requests
- Users request or propose new features or improvements.
- Designers invite users to suggest new features and announce upcoming features.

39.
Concepts: feature suggestion, suggesting collaboration
- A user suggests how features should be categorized and refined.
- Suggestions from users that involve collaboration or requests for specific features.

40.
Concepts: physics concepts discussion, physics experiment feature requests
- Users discuss specific physics concepts they want to see in the software.
- Users request specific features for physics experiments in the software.

41.
Concepts: asking teachers' needs, ask for teachers' help
- A designer asks teachers about their needs or preferences.
- A designer asks teachers in the group for help with a specific question.

42.
Concepts: teacher identity, follow-up on grade level
- A designer inquires about the user's teaching level (middle school or high school).
- Designers inquire about the user's teaching level or grade.

43.
Concepts: questioning user identity, inquire about user background
- Designers inquire about the user's profession or role.
- Designers inquire about the user's teaching background.

44.
Concepts: involving users in design, inquiring about user needs
- Designers engage in interactions with users to clarify or understand issues.
- Designers identify user needs by interacting and asking about their profession.

45.
Concepts: question, question asking
- Users and designers ask questions about various aspects of the software.
- Users and designers ask various questions to gather information.

46.
Concepts: design question, usage scenario inquiry
- A designer asks a question about the design or functionality of a feature.
- A designer asks a follow-up question about the usage scenario.

47.
Concepts: gather additional information, asking follow-up questions
- A designer inquires about specific conditions or requirements.
- Designers ask follow-up questions to better understand user needs or requests.

48.
Concepts: providing follow-up responses, inviting further questions
- Users or designers provide follow-up responses or questions to previous messages.
- Designers invite more questions and encourage users to continue discussing issues or asking questions.

49.
Concepts: community answer, query and response, answering for design support
- Direct responses from the designer answering community questions.
- Instances where users ask questions and receive answers from designers or other community members.
- User provides answers or support related to design queries.

50.
Concepts: encouraging elaboration, requesting private messages
- A designer encourages users to provide detailed feedback or suggestions privately.
- Designers request private messaging for more detailed user needs.

51.
Concepts: real-time communication, direct communication
- Designers engage in real-time communication with users.
- Direct interactions between designers and users to discuss features, updates, and feedback.

52.
Concepts: acknowledgment and support, gratitude and encouragement
- Instances where support and acknowledgment are expressed within the community.
- Expressions of appreciation and encouragement that help build a positive community atmosphere.

53.
Concepts: interface layout decisions, discuss software usability
- Users and designers discuss layout preferences for the software interface.
- Users and designers discuss the ease of use of the software and its features.

54.
Concepts: personal connection, share personal stories
- Users and designers share personal information or experiences.
- Users share personal stories or anecdotes related to software use.

55.
Concepts: collaborative learning, suggest group sharing
- A designer mentions collaborative learning or sharing.
- A designer suggests sharing resources or information within a group.

56.
Concepts: share ongoing research, sharing progress previews
- Designers share current efforts and ongoing research with the community.
- Designers share progress updates and visual previews with the community.

57.
Concepts: designer engagement, express personal interest
- Designer engages with the community by sharing personal interests or thoughts.
- Designers express their personal interests related to the project.

58.
Concepts: share knowledge, connecting to community
- A developer shares knowledge or information relevant to the community.
- A developer connects to the community by sharing personal interests or future plans.

59.
Concepts: offer to help, offer to upload resource
- A designer offers to provide resources or help.
- Offers from designers to upload resources or materials for user assistance.

60.
Concepts: sending resources, sharing resources
- A designer announces the availability of resources or information.
- Designers or users share resources, such as download links, development plans, or announcements.
===
---
Definitions for each code (60 in total):
1.
Concepts: subject focus, explain focus areas
Relationship: Both concepts involve discussing the main focus and future directions of the software.
Criteria: A designer discusses the focus areas and potential future directions of the physics content and software.
Phrase: Explaining focus areas

2.
Concepts: user interface, instructional design
Relationship: Both concepts involve discussing design aspects to enhance user experience.
Criteria: A designer discusses the user interface and instructional design approach to make the software user-friendly.
Phrase: Discussing design aspects

3.
Concepts: intention explanation, follow-up question intention
Relationship: Both concepts involve explaining the reasoning behind questions or statements.
Criteria: Users and designers explain the intentions behind their questions or follow-up questions.
Phrase: Explaining intentions

4.
Concepts: explaining design goals, explain intention of the app design
Relationship: Both concepts involve explaining the purpose and focus of the design.
Criteria: A designer explains the goals and intentions behind the application design.
Phrase: Explaining design goals

5.
Concepts: design principles, explain design philosophy
Relationship: Both concepts involve discussing the guiding principles and philosophy of the design.
Criteria: A designer discusses the principles and philosophy guiding the design and development of the software.
Phrase: Discussing design principles

6.
Concepts: describing usability features, explaining development rationale
Relationship: Both concepts involve explaining usability features and the rationale behind design choices.
Criteria: Designers describe usability features and explain the rationale behind design and development decisions.
Phrase: Explaining usability rationale

7.
Concepts: provide information, providing technical details
Relationship: Both concepts involve providing information and technical details about the software.
Criteria: Designers provide information and detailed technical updates about the software.
Phrase: Providing technical information

8.
Concepts: provide technical clarification, providing version clarification
Relationship: Both concepts involve offering technical explanations and clarifications about the software version.
Criteria: Designers offer technical explanations and clarify details about the software version.
Phrase: Providing technical clarification

9.
Concepts: elaboration, elaboration of response
Relationship: Both concepts involve expanding on previous points or responses.
Criteria: A designer elaborates on a previous point or response to explain complexity or delays.
Phrase: Elaborating on responses

10.
Concepts: indirect answer, detailed answer
Relationship: Both concepts involve providing answers to user questions, either indirectly or in detail.
Criteria: A designer provides either an indirect or a detailed and specific answer to a user question.
Phrase: Answering user questions

11.
Concepts: potential update, suggest checking compatibility of the system
Relationship: Both concepts involve discussing potential updates and system compatibility.
Criteria: A designer mentions potential updates and suggests checking system compatibility.
Phrase: Discussing potential updates

12.
Concepts: consideration, compatibility solution suggestion
Relationship: Both concepts involve considering and suggesting solutions for compatibility issues.
Criteria: A designer considers future actions and suggests solutions to compatibility issues.
Phrase: Suggesting compatibility solutions

13.
Concepts: compatibility discussion, discussing system compatibility, compatibility assurance
Relationship: All concepts involve discussing the software's compatibility with various systems.
Criteria: Designers discuss system requirements and compatibility with different operating systems and machine models.
Phrase: Discussing system compatibility

14.
Concepts: system compatibility information, providing compatibility information
Relationship: Both concepts involve providing information about system compatibility.
Criteria: Designers provide and confirm specific information about system compatibility.
Phrase: Providing compatibility information

15.
Concepts: technical considerations, consider implementation context
Relationship: Both concepts involve considering technical and contextual aspects of implementation.
Criteria: Designers consider technical aspects and the context of implementation, such as internet availability.
Phrase: Considering technical and contextual aspects

16.
Concepts: acknowledging limitations, explaining feature limitations, discussing technical constraints
Relationship: All concepts involve discussing and acknowledging limitations and constraints.
Criteria: Designers acknowledge and explain limitations related to compatibility, features, and technical constraints.
Phrase: Discussing limitations

17.
Concepts: answering a concern, give response to mitigate the concern
Relationship: Both concepts involve addressing and mitigating user concerns.
Criteria: A designer addresses a user's concern and provides a mitigating solution.
Phrase: Addressing user concerns

18.
Concepts: share workaround, providing workarounds
Relationship: Both concepts involve providing alternative methods or solutions for issues.
Criteria: Designers share and provide workarounds for known issues.
Phrase: Providing workarounds

19.
Concepts: user tips, provide practical advice
Relationship: Both concepts involve giving practical advice or tips to users.
Criteria: A designer provides tips and practical advice for using the software.
Phrase: Providing practical advice

20.
Concepts: consider user experience, prioritize user experience
Relationship: Both concepts involve considering and prioritizing user experience in design.
Criteria: A designer considers and prioritizes user experience in the design and improvement of the software.
Phrase: Prioritizing user experience

21.
Concepts: implicit rejection, indirect reject
Relationship: Both concepts involve rejecting a request or suggestion indirectly.
Criteria: A designer implicitly or indirectly rejects a suggestion by explaining current priorities.
Phrase: Indirectly rejecting suggestions

22.
Concepts: confirms that reason, designer confirmation
Relationship: Both concepts involve confirming the reason behind a decision.
Criteria: A designer confirms the reason behind a decision and provides reassurance in response to a query.
Phrase: Confirming reasons

23.
Concepts: manual editing, manual adjustment
Relationship: Both concepts involve discussing the availability of manual editing or adjustments.
Criteria: A designer mentions the future availability of manual editing or adjustments.
Phrase: Discussing manual adjustments

24.
Concepts: touch screen consideration, touch screen functionality, addressing usability concerns
Relationship: All concepts involve discussing touch screen considerations and usability concerns.
Criteria: Designers discuss touch screen functionality, limitations, and address related usability concerns.
Phrase: Addressing touch screen usability

25.
Concepts: input methods, soft keyboard consideration
Relationship: Both concepts involve discussing input methods and the need for soft keyboards.
Criteria: Designers discuss input methods and consider the need for soft keyboards in certain contexts.
Phrase: Considering input methods

26.
Concepts: design thoughts, suggest feature simplification
Relationship: Both concepts involve sharing design thoughts and suggesting simplification.
Criteria: A designer shares thoughts on design and suggests simplifying a feature or process.
Phrase: Suggesting design simplification

27.
Concepts: feature adjustment, feature optimization
Relationship: Both concepts involve discussing adjustments and optimizations to features.
Criteria: A designer discusses necessary adjustments and optimizations to features before release.
Phrase: Discussing feature adjustments

28.
Concepts: emphasize quality, catering to user needs
Relationship: Both concepts involve emphasizing quality to meet user needs.
Criteria: A designer emphasizes the importance of quality in features to cater to user needs.
Phrase: Emphasizing quality

29.
Concepts: invite feedback, soliciting user feedback
Relationship: Both concepts involve inviting and soliciting feedback from users.
Criteria: Designers invite and encourage users to provide feedback and suggestions.
Phrase: Inviting user feedback

30.
Concepts: offering co-designing, co-designing with users
Relationship: Both concepts involve collaborating with users in the design process.
Criteria: Designers offer to involve the community in the design process and collaborate with users.
Phrase: Co-designing with users

31.
Concepts: share potential solutions, collaborating on problem solving
Relationship: Both concepts involve sharing solutions and collaborating on problem-solving.
Criteria: Designers share potential solutions and work with users to address issues and improve the product.
Phrase: Collaborating on solutions

32.
Concepts: seek consensus, agreeing with suggestions
Relationship: Both concepts involve seeking and agreeing on proposed solutions.
Criteria: Designers seek consensus and agree with suggestions made by others.
Phrase: Seeking consensus

33.
Concepts: designer acknowledgment, acknowledgment and implementation
Relationship: Both concepts involve acknowledging suggestions and discussing implementation plans.
Criteria: Designers acknowledge user feedback and discuss plans to implement suggested features.
Phrase: Acknowledging and implementing suggestions

34.
Concepts: plan to gather feedback, promise to invite feedback
Relationship: Both concepts involve planning and promising to gather user feedback.
Criteria: Designers plan and promise to gather feedback before starting new project phases.
Phrase: Planning to gather feedback

35.
Concepts: confirmation of collaboration, engage in collaborative planning
Relationship: Both concepts involve confirming and engaging in collaborative planning.
Criteria: Designers confirm plans to gather feedback and engage in collaborative planning with users.
Phrase: Engaging in collaborative planning

36.
Concepts: propose design idea, suggest broader usability feature, suggestion elaboration
Relationship: All concepts involve proposing and elaborating on design ideas and usability features.
Criteria: A designer proposes design ideas, suggests broader usability features, and provides detailed suggestions.
Phrase: Proposing design ideas

37.
Concepts: give reason, explaining the need
Relationship: Both concepts involve explaining the reasons and necessity behind actions or features.
Criteria: A designer explains the reason for gathering opinions and the necessity of features or development efforts.
Phrase: Explaining reasons

38.
Concepts: requesting new features, inviting feature requests
Relationship: Both concepts involve requesting and inviting suggestions for new features.
Criteria: Designers invite users to request and suggest new features and announce upcoming features.
Phrase: Inviting feature requests

39.
Concepts: feature suggestion, suggesting collaboration
Relationship: Both concepts involve suggesting features and collaboration.
Criteria: Users suggest how features should be categorized and refined, involving collaboration.
Phrase: Suggesting features and collaboration

40.
Concepts: physics concepts discussion, physics experiment feature requests
Relationship: Both concepts involve discussing physics concepts and requesting related features.
Criteria: Users discuss specific physics concepts and request features for physics experiments in the software.
Phrase: Requesting physics features

41.
Concepts: asking teachers' needs, ask for teachers' help
Relationship: Both concepts involve asking teachers about their needs or for help.
Criteria: A designer asks teachers about their needs and preferences or for help with specific questions.
Phrase: Asking teachers' needs

42.
Concepts: teacher identity, follow-up on grade level
Relationship: Both concepts involve inquiring about the user's teaching level and identity.
Criteria: Designers inquire about the user's teaching level or grade and their teaching identity.
Phrase: Inquiring about teaching identity

43.
Concepts: questioning user identity, inquire about user background
Relationship: Both concepts involve inquiring about the user's profession and background.
Criteria: Designers inquire about the user's profession, role, and teaching background.
Phrase: Inquiring about user background

44.
Concepts: involving users in design, inquiring about user needs
Relationship: Both concepts involve engaging with users to understand their needs for design purposes.
Criteria: Designers engage with users to clarify issues and identify their needs by asking about their profession.
Phrase: Engaging with users

45.
Concepts: question, question asking
Relationship: Both concepts involve asking questions to gather information.
Criteria: Users and designers ask questions about various aspects of the software.
Phrase: Asking questions

46.
Concepts: design question, usage scenario inquiry
Relationship: Both concepts involve asking questions about design and usage scenarios.
Criteria: A designer asks questions about the design and functionality of features and their usage scenarios.
Phrase: Inquiring about design and usage

47.
Concepts: gather additional information, asking follow-up questions
Relationship: Both concepts involve asking follow-up questions to gather more information.
Criteria: Designers ask follow-up questions to better understand user needs or requests.
Phrase: Asking follow-up questions

48.
Concepts: providing follow-up responses, inviting further questions
Relationship: Both concepts involve providing follow-up responses and inviting further questions.
Criteria: Users or designers provide follow-up responses and invite more questions to encourage discussion.
Phrase: Inviting further questions

49.
Concepts: community answer, query and response, answering for design support
Relationship: All concepts involve answering community questions and providing support.
Criteria: Designers and community members provide answers and support for design-related queries.
Phrase: Answering community questions

50.
Concepts: encouraging elaboration, requesting private messages
Relationship: Both concepts involve encouraging detailed feedback and requesting private messages.
Criteria: A designer encourages users to provide detailed feedback or suggestions privately.
Phrase: Encouraging detailed feedback

51.
Concepts: real-time communication, direct communication
Relationship: Both concepts involve engaging in real-time and direct communication.
Criteria: Designers engage in real-time, direct interactions with users to discuss features, updates, and feedback.
Phrase: Engaging in real-time communication

52.
Concepts: acknowledgment and support, gratitude and encouragement
Relationship: Both concepts involve expressing support, gratitude, and encouragement.
Criteria: Community members express acknowledgment, support, gratitude, and encouragement.
Phrase: Expressing support and gratitude

53.
Concepts: interface layout decisions, discuss software usability
Relationship: Both concepts involve discussing interface layout and software usability.
Criteria: Users and designers discuss layout preferences and the ease of use of the software.
Phrase: Discussing interface and usability

54.
Concepts: personal connection, share personal stories
Relationship: Both concepts involve sharing personal information and stories.
Criteria: Users and designers share personal information and anecdotes related to software use.
Phrase: Sharing personal stories

55.
Concepts: collaborative learning, suggest group sharing
Relationship: Both concepts involve suggesting collaborative learning and group sharing.
Criteria: A designer mentions collaborative learning and suggests sharing resources within a group.
Phrase: Suggesting collaborative learning

56.
Concepts: share ongoing research, sharing progress previews
Relationship: Both concepts involve sharing ongoing research and progress updates.
Criteria: Designers share current efforts, ongoing research, and progress updates with the community.
Phrase: Sharing ongoing research

57.
Concepts: designer engagement, express personal interest
Relationship: Both concepts involve designers engaging with the community and expressing personal interests.
Criteria: Designers engage with the community by sharing personal interests and thoughts related to the project.
Phrase: Engaging with the community

58.
Concepts: share knowledge, connecting to community
Relationship: Both concepts involve sharing knowledge and connecting with the community.
Criteria: A developer shares knowledge and information to connect with the community.
Phrase: Sharing knowledge

59.
Concepts: offer to help, offer to upload resource
Relationship: Both concepts involve offering help and resources.
Criteria: A designer offers to provide resources or help and upload materials for user assistance.
Phrase: Offering help and resources

60.
Concepts: sending resources, sharing resources
Relationship: Both concepts involve announcing and sharing resources.
Criteria: Designers or users announce the availability of resources and share them with the community.
Phrase: Sharing resources
---