You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: needing usage support, seeking pc version guidance
- The speaker expresses a need for support or guidance on using Physics Lab.
- The speaker seeks guidance or instructions on using the PC version of Physics Lab.

2.
Concepts: explaining school policies, explaining common school policy
- A user explains common school policies or practices.
- User explains a common school policy or practice.

3.
Concepts: sharing common practices, sharing prevailing practices
- User provides insight into common practices or experiences.
- Sharing insights or knowledge about prevailing practices or common methods.

4.
Concepts: highlighting educational needs, highlighting teacher needs
- A user highlights educational needs or requirements.
- User highlights specific needs or requirements for teachers using the software.

5.
Concepts: explaining classroom limitations, explaining educational restrictions
- A user explains limitations or restrictions in the classroom setting.
- User explains a restriction or limitation in their educational setting.

6.
Concepts: seeking expert input, expert input solicitation
- Designer asks for input from teachers on a specific aspect of the simulation.
- Designer seeks expert input from educators on a specific topic.

7.
Concepts: inquiry about teaching background, inquiring about user's teaching level
- Designer inquires about the user's teaching level or experience.
- The speaker inquires about a user's teaching level or background.

8.
Concepts: classroom inquiry, inquiring about classroom infrastructure
- Someone asks about the classroom environment or setup.
- A designer inquires about the classroom infrastructure.

9.
Concepts: educational need alignment, alignment with user needs
- Designer aligns the application with educational needs.
- Designer describes aligning the application with user needs.

10.
Concepts: welcoming users
- Welcoming or greeting users in the community
- Designer welcomes users or initiates a conversation.

11.
Concepts: expressing uncertainty
- Expresses uncertainty or hesitation in a statement.
- User expresses uncertainty or confusion.

12.
Concepts: brief response
- A brief or short response is given.
- Response is brief or lacks elaboration

13.
Concepts: emphasizing convenience
- The designer emphasizes the convenience or benefits of a feature for problem-solving or teaching.
- A user emphasizes the importance of convenience in the software.

14.
Concepts: manage user expectations
- Managing or setting expectations for the community
- A designer manages user expectations for a release or update.

15.
Concepts: community involvement
- Suggesting or implying a strong sense of community involvement in software development
- Designer ensures community involvement in decision-making
- Committing to involve the community in the decision-making process.

16.
Concepts: providing user feedback
- Providing user feedback or suggestions and encouraging others to do so.
- Designer solicits feedback on user experience.
- Designers asking for more feedback or suggestions from users.

17.
Concepts: acknowledging update
- A user acknowledges an update, often specifically mentioning the Android version.
- A user acknowledges the availability of an update.
- A user acknowledges an update or response from the designer.

18.
Concepts: theoretical compatibility
- Designer mentions theoretical compatibility requirements for the software.
- Designer provides theoretical information about compatibility.

19.
Concepts: community engagement
- Engaging with the community, sharing updates, or discussing new features.
- Engaging with the community for assistance or guidance.
- The designer maintains a close relationship with the community, often by providing frequent updates or explanations.
- Participates in the community by responding or engaging with others.

20.
Concepts: iterative development process
- The conversation suggests an iterative development process.
- The designer's development process is influenced by user feedback.
- A conversation indicates that the development process is iterative and influenced by user feedback and educational needs.

21.
Concepts: setting expectations
- A designer sets expectations about a software's functionality or limitations.
- Setting expectations or providing a timeline for a specific feature or update.

22.
Concepts: considering user context
- Considering the context or situation of the user
- A designer considers the user's context and limitations.

23.
Concepts: reassuring users
- Reassuring users about the progress or outcome of the project
- Providing reassurance or comfort to users regarding upcoming changes or features.

24.
Concepts: seeking guidance
- Requesting guidance or support related to the product.
- User seeks guidance or instructions on using the software.
- A designer seeks guidance or help with a specific task or issue.

25.
Concepts: update confirmation
- Confirming receipt of an update or new information.
- Confirming updates or new features

26.
Concepts: describing update scope
- A designer describes the size or scope of an upcoming update.
- A designer mentions the scope or magnitude of an update or change.

27.
Concepts: expectation management
- Setting or managing user expectations about software features or development
- A designer manages user expectations about feature releases or updates.
- Managing expectations about future expansions or timelines
- Designer manages user expectations about future developments.
- A designer balances transparency with managing user expectations.
- Manages expectations by discussing complex features or timelines.

28.
Concepts: user-centric design
- Anticipating or considering user needs or requirements.
- Describes design goals or principles that prioritize user experience.

29.
Concepts: emphasizing practicality
- Designer emphasizes the importance of practicality in the software.
- Highlighting the practicality or usability of the software.

30.
Concepts: expression of frustration
- User or designer expresses frustration or annoyance.
- Expressing frustration or annoyance with current limitations or challenges.

31.
Concepts: resource sharing
- Designer provides access to resources or information within the online community.
- Sharing information or resources with the community.
- Providing a download link or access to a resource.

32.
Concepts: design philosophy
- Explaining the design philosophy or approach.
- Designer articulates guiding principles or philosophies behind the online community's design.
===
Here are the definitions for each code:

---
1.
Concepts: needing usage support, seeking pc version guidance
Relationship: The speaker is seeking guidance on using Physics Lab, specifically the PC version.
Criteria: A user expresses a need for support or guidance on using the PC version of Physics Lab.
Phrase: Seeking guidance on PC version usage.

2.
Concepts: explaining school policies, explaining common school policy
Relationship: The user is explaining a common school policy or practice.
Criteria: A user explains common school policies or practices.
Phrase: Explaining school policies.

3.
Concepts: sharing common practices, sharing prevailing practices
Relationship: The user is sharing insights into common practices or experiences.
Criteria: User provides insight into common practices or experiences.
Phrase: Sharing common practices.

4.
Concepts: highlighting educational needs, highlighting teacher needs
Relationship: The user highlights specific educational needs or requirements for teachers.
Criteria: A user highlights educational needs or requirements for teachers using the software.
Phrase: Highlighting educational needs.

5.
Concepts: explaining classroom limitations, explaining educational restrictions
Relationship: The user explains limitations or restrictions in the classroom setting.
Criteria: A user explains limitations or restrictions in their educational setting.
Phrase: Explaining classroom limitations.

6.
Concepts: seeking expert input, expert input solicitation
Relationship: The designer is seeking input from teachers on a specific aspect of the simulation.
Criteria: Designer seeks expert input from educators on a specific topic.
Phrase: Seeking expert input.

7.
Concepts: inquiry about teaching background, inquiring about user's teaching level
Relationship: The designer inquires about the user's teaching level or experience.
Criteria: Designer inquires about the user's teaching level or background.
Phrase: Inquiring about teaching background.

8.
Concepts: classroom inquiry, inquiring about classroom infrastructure
Relationship: The designer inquires about the classroom environment or setup.
Criteria: Designer inquires about the classroom infrastructure.
Phrase: Inquiring about classroom infrastructure.

9.
Concepts: educational need alignment, alignment with user needs
Relationship: The designer aligns the application with educational needs.
Criteria: Designer aligns the application with educational needs.
Phrase: Aligning with educational needs.

10.
Concepts: welcoming users
Relationship: N/A
Criteria: Designer welcomes users or initiates a conversation.
Phrase: Welcoming users.

11.
Concepts: expressing uncertainty
Relationship: N/A
Criteria: User expresses uncertainty or confusion.
Phrase: Expressing uncertainty.

12.
Concepts: brief response
Relationship: N/A
Criteria: Response is brief or lacks elaboration.
Phrase: Providing a brief response.

13.
Concepts: emphasizing convenience
Relationship: The designer emphasizes the convenience or benefits of a feature.
Criteria: Designer emphasizes the importance of convenience in the software.
Phrase: Emphasizing convenience.

14.
Concepts: manage user expectations
Relationship: N/A
Criteria: Managing or setting expectations for the community.
Phrase: Managing user expectations.

15.
Concepts: community involvement
Relationship: N/A
Criteria: Suggesting or implying a strong sense of community involvement in software development.
Phrase: Fostering community involvement.

16.
Concepts: providing user feedback
Relationship: N/A
Criteria: Providing user feedback or suggestions and encouraging others to do so.
Phrase: Providing user feedback.

17.
Concepts: acknowledging update
Relationship: N/A
Criteria: A user acknowledges an update, often specifically mentioning the Android version.
Phrase: Acknowledging an update.

18.
Concepts: theoretical compatibility
Relationship: N/A
Criteria: Designer mentions theoretical compatibility requirements for the software.
Phrase: Discussing theoretical compatibility.

19.
Concepts: community engagement
Relationship: N/A
Criteria: Engaging with the community, sharing updates, or discussing new features.
Phrase: Engaging with the community.

20.
Concepts: iterative development process
Relationship: N/A
Criteria: The conversation suggests an iterative development process.
Phrase: Following an iterative development process.

21.
Concepts: setting expectations
Relationship: N/A
Criteria: A designer sets expectations about a software's functionality or limitations.
Phrase: Setting expectations.

22.
Concepts: considering user context
Relationship: N/A
Criteria: A designer considers the user's context and limitations.
Phrase: Considering user context.

23.
Concepts: reassuring users
Relationship: N/A
Criteria: Reassuring users about the progress or outcome of the project.
Phrase: Reassuring users.

24.
Concepts: seeking guidance
Relationship: N/A
Criteria: Requesting guidance or support related to the product.
Phrase: Seeking guidance.

25.
Concepts: update confirmation
Relationship: N/A
Criteria: Confirming receipt of an update or new information.
Phrase: Confirming an update.

26.
Concepts: describing update scope
Relationship: N/A
Criteria: A designer describes the size or scope of an upcoming update.
Phrase: Describing update scope.

27.
Concepts: expectation management
Relationship: N/A
Criteria: Setting or managing user expectations about software features or development.
Phrase: Managing expectations.

28.
Concepts: user-centric design
Relationship: N/A
Criteria: Anticipating or considering user needs or requirements.
Phrase: Prioritizing user-centric design.

29.
Concepts: emphasizing practicality
Relationship: N/A
Criteria: Designer emphasizes the importance of practicality in the software.
Phrase: Emphasizing practicality.

30.
Concepts: expression of frustration
Relationship: N/A
Criteria: User or designer expresses frustration or annoyance.
Phrase: Expressing frustration.

31.
Concepts: resource sharing
Relationship: N/A
Criteria: Designer provides access to resources or information within the online community.
Phrase: Sharing resources.

32.
Concepts: design philosophy
Relationship: N/A
Criteria: Designer articulates guiding principles or philosophies behind the online community's design.
Phrase: Articulating design philosophy.