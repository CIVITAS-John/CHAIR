You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (47 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
47. 
Concepts: {Repeat the input 47}
Relationship: {What is logical relationship between concepts in code 47, or N/A if not applicable}
Criteria: {Who did what, and how for code 47}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: future planning, discussing future planning, discussing future updates
- Designers discuss future plans or compatibility issues.
- A designer discusses future planning and development of the software.
- Designers discuss plans and implementation of new features in future updates.

2.
Concepts: give reason for delay, explaining feature complexity
- A designer explains that a complex feature will take more time to complete.
- A designer explains the complexity of a feature and the time required to develop it.

3.
Concepts: communicating progress and plans, communicating development process
- Designers communicate progress and future plans for development.
- A designer communicates the development process and priorities.

4.
Concepts: updating progress, sharing development progress
- Designers provide updates on the progress or status of the software.
- Designers share updates and communicate progress on software development.

5.
Concepts: feature expansion, explaining new features
- A designer discusses the expansion or addition of new features.
- A designer explains new features or functionalities being worked on.

6.
Concepts: discussing product improvements, communicating feature optimization
- A designer discusses adjustments to components and improvements to the product.
- A designer discusses and communicates ongoing efforts to optimize a feature.

7.
Concepts: listing update details, providing detailed update overviews, detailing version updates
- A designer lists new features, components, and bug fixes included in an update.
- Designers provide a detailed overview of new features and bug fixes in an update.
- Designers provide detailed information about the features and changes in a new version.

8.
Concepts: development update, providing product updates
- Information shared by designers about the current status, updates, and future plans for the Physics Lab software.
- Designers provide information about updates or technical changes to the Physics Lab software.

9.
Concepts: announcing version releases, announcing software updates, announcing component updates
- Designers announce the release of a new version and list the updates.
- Designers announce software updates, their contents, and new features.
- Designers announce new components, adjustments, and updates in the software.

10.
Concepts: feature preview, previewing updates
- Designers provide a preview of upcoming features.
- Providing a preview of changes or new features in upcoming updates.

11.
Concepts: inquire about recent updates, inquire about update status
- A user inquires about recent updates or changes to the software.
- A user inquires about the status of an update for a specific version of the software.

12.
Concepts: ask for feature update, inquire about update timeline
- Users ask about upcoming feature updates or releases.
- A user inquires about the timing of future updates.

13.
Concepts: technical explanation, clarifying technical details
- Designers explain technical aspects or artifacts of the software.
- Designers provide technical explanations or clarifications.

14.
Concepts: address technical limitation, discussing technical constraints
- Designers address technical limitations or constraints of the software.
- Designers discuss technical limitations or requirements.

15.
Concepts: compatibility assurance, confirming system compatibility
- A participant assures compatibility of the software with certain systems.
- A designer confirms the application's compatibility with a specific system or version.

16.
Concepts: craftsmanship, appreciate design effort
- A user appreciates the designers' spirit of craftsmanship.
- A participant expresses appreciation for the design effort or craftsmanship.

17.
Concepts: expressing gratitude, appreciate designer effort, appreciating designers
- Users or designers express thanks or appreciation for contributions or work done.
- Instances where users acknowledge and appreciate the efforts of the designers.
- Users express gratitude or appreciation towards the designer or development team.

18.
Concepts: praise software, express satisfaction, appreciate software features
- Users praise the software for its practicality and effectiveness.
- Instances where users express satisfaction with the software's features and practicality.
- Users appreciate the features and overall idea of the software.

19.
Concepts: software effectiveness, comment on software usability
- Users comment on the effectiveness of the software in achieving its purpose.
- Users comment on the usability and practicality of the software.

20.
Concepts: story sharing, share user experience
- Users share stories or experiences related to the use of the software.
- Instances where users share their experiences or opinions about using the software.

21.
Concepts: resource request, inquire about resources
- A participant requests resources, such as a user manual.
- Instances where users ask for resources such as download links or manuals.

22.
Concepts: reason for suggestion, explain reasons for request
- Giving reasons for a suggestion or request.
- Users explain the reasons behind their requests or suggestions.

23.
Concepts: requesting features, request specific features
- Users request new features or improvements.
- A participant makes a request for specific features or functionalities.

24.
Concepts: community feedback, providing user feedback
- Users providing feedback and suggestions to improve the product.
- Users provide feedback or suggestions regarding the design and functionality of the product.

25.
Concepts: encouraging interaction, encouraging user feedback
- A designer encourages users to interact, provide feedback, and suggest features.
- Designers invite and encourage users to provide feedback and suggestions.

26.
Concepts: requesting user feedback, soliciting user feedback
- A designer requests specific feedback or suggestions from users.
- Designers request and prompt users to provide feedback or report issues.

27.
Concepts: suggest feature improvement, suggest design or feature improvements
- A designer or user suggests improvements to a feature to enhance usability.
- Users and designers suggest or discuss specific design or feature improvements.

28.
Concepts: suggest new features, provide feedback and suggestions
- Users suggest new features or functionalities that could be added to the software.
- Users provide feedback or suggestions on features and improvements for the software.

29.
Concepts: suggest usability improvements, identify usability issue
- Offering suggestions for software improvements.
- A user identifies a usability issue and suggests adding a specific function to improve the software.

30.
Concepts: seeking consensus, agreeing on design
- Designers seek agreement or consensus from users on a suggestion or idea.
- Users and designers express agreement or acknowledgment of design ideas or suggestions.

31.
Concepts: responding to users, responding to user inquiries
- Designers respond to user queries, feedback, or suggestions, showing attentiveness to user needs.
- Designers respond to user questions, clarifications, or inquiries.

32.
Concepts: feature request response, responding to feedback
- Designers respond to feature requests with updates or plans.
- Designers respond to user feedback or queries with plans for future updates.

33.
Concepts: seeking input, seek community input
- A designer seeks input or suggestions from the community.
- Designers seek community input before starting new development phases.

34.
Concepts: discussing design focus, discussing usability and design
- Designers discuss design ideas and the focus areas of the software.
- Designers discuss the usability aspects and instructional design to make the software user-friendly.

35.
Concepts: troubleshooting, engaging in collaborative problem-solving
- Users and designers troubleshoot issues together.
- Designers and users work together to address issues and improve the product.

36.
Concepts: understanding user needs, inquiring about user problems
- Designers try to understand user needs or problems.
- Designers inquire about problems or issues users have encountered while using the application.

37.
Concepts: involving users in design, interacting with users
- Designers actively involve users in the design process through feedback or testing.
- Designers interact with users to understand their roles or needs, contributing to the design process.

38.
Concepts: consulting users, engaging in user feedback
- Designers consult users to seek input or clarification for better understanding their needs.
- A designer interacts with users to clarify input-related issues and engage in feedback.

39.
Concepts: confirm identity, confirm professional role
- Users confirm or state their identity or role in response to a question.
- A user confirms their professional role or identity.

40.
Concepts: student engagement, highlight student engagement
- Users comment on student engagement with the software.
- Users highlight the engagement or positive reactions of students using the software.

41.
Concepts: confirming understanding, express comprehension
- Users or designers confirm understanding or agreement.
- Designers acknowledge understanding and ask for more details from users.

42.
Concepts: apologizing for inconvenience, apologies and politeness
- Designers apologize for any inconvenience caused to users.
- Expressions of politeness, apologies, or acknowledgment of potential inconvenience by the designers.

43.
Concepts: further question, followup question, ask follow-up question
- A participant asks a question to gain more information or clarification.
- A designer or user asks a follow-up question to gather more information.
- A participant asks a follow-up question regarding a user request or usage scenario.

44.
Concepts: inquiry, question
- Users ask questions to seek information or clarification.
- Users or designers ask questions to gather information or clarify details.

45.
Concepts: express self-help, expressing self-sufficiency
- Instances where users express self-help or find information on their own.
- Users express self-sufficiency in finding resources.

46.
Concepts: use emoji, use non-verbal communication
- Users engage with the conversation using emojis to express emotions or reactions.
- Instances where users express themselves using emojis or other non-verbal cues.

47.
Concepts: making community announcements
- Designers make announcements to the community about updates or changes.
- Designers announce new features, updates, or bug fixes based on user input.
===
---
Definitions for each code (47 in total):
1.
Concepts: future planning, discussing future planning, discussing future updates
Relationship: All concepts revolve around discussing future developments and plans.
Criteria: Designers discuss future plans, compatibility issues, and the implementation of new features.
Phrase: Discussing future planning

2.
Concepts: give reason for delay, explaining feature complexity
Relationship: Both concepts involve explaining delays due to complexity.
Criteria: A designer explains that a complex feature will take more time to complete.
Phrase: Explaining feature complexity

3.
Concepts: communicating progress and plans, communicating development process
Relationship: Both concepts involve sharing information about development.
Criteria: Designers communicate progress, future plans, and the development process.
Phrase: Communicating progress and plans

4.
Concepts: updating progress, sharing development progress
Relationship: Both concepts involve providing updates on development.
Criteria: Designers provide updates and share progress on software development.
Phrase: Updating progress

5.
Concepts: feature expansion, explaining new features
Relationship: Both concepts involve discussing new features.
Criteria: A designer discusses the expansion and explains new features or functionalities.
Phrase: Explaining new features

6.
Concepts: discussing product improvements, communicating feature optimization
Relationship: Both concepts involve discussing improvements and optimizations.
Criteria: A designer discusses adjustments and communicates efforts to optimize a feature.
Phrase: Communicating feature optimization

7.
Concepts: listing update details, providing detailed update overviews, detailing version updates
Relationship: All concepts involve providing detailed information about updates.
Criteria: Designers list new features, components, and bug fixes included in an update.
Phrase: Detailing version updates

8.
Concepts: development update, providing product updates
Relationship: Both concepts involve sharing information about updates.
Criteria: Designers provide information about the current status, updates, and future plans for the software.
Phrase: Providing product updates

9.
Concepts: announcing version releases, announcing software updates, announcing component updates
Relationship: All concepts involve making announcements about updates.
Criteria: Designers announce the release of a new version and list the updates.
Phrase: Announcing software updates

10.
Concepts: feature preview, previewing updates
Relationship: Both concepts involve providing a preview of upcoming features.
Criteria: Designers provide a preview of changes or new features in upcoming updates.
Phrase: Previewing updates

11.
Concepts: inquire about recent updates, inquire about update status
Relationship: Both concepts involve users asking about updates.
Criteria: A user inquires about recent updates or the status of an update.
Phrase: Inquiring about update status

12.
Concepts: ask for feature update, inquire about update timeline
Relationship: Both concepts involve users asking about updates.
Criteria: Users ask about upcoming feature updates or the timing of future updates.
Phrase: Inquiring about update timeline

13.
Concepts: technical explanation, clarifying technical details
Relationship: Both concepts involve providing technical explanations.
Criteria: Designers explain technical aspects or artifacts of the software.
Phrase: Clarifying technical details

14.
Concepts: address technical limitation, discussing technical constraints
Relationship: Both concepts involve discussing technical limitations.
Criteria: Designers address technical limitations or constraints of the software.
Phrase: Discussing technical constraints

15.
Concepts: compatibility assurance, confirming system compatibility
Relationship: Both concepts involve confirming compatibility.
Criteria: A participant assures compatibility of the software with certain systems.
Phrase: Confirming system compatibility

16.
Concepts: craftsmanship, appreciate design effort
Relationship: Both concepts involve appreciating design efforts.
Criteria: A user appreciates the designers' spirit of craftsmanship.
Phrase: Appreciating design effort

17.
Concepts: expressing gratitude, appreciate designer effort, appreciating designers
Relationship: All concepts involve expressing appreciation.
Criteria: Users or designers express thanks or appreciation for contributions or work done.
Phrase: Appreciating designers

18.
Concepts: praise software, express satisfaction, appreciate software features
Relationship: All concepts involve expressing positive feedback about the software.
Criteria: Users praise the software for its practicality and effectiveness.
Phrase: Expressing satisfaction

19.
Concepts: software effectiveness, comment on software usability
Relationship: Both concepts involve commenting on the software's performance.
Criteria: Users comment on the effectiveness and usability of the software.
Phrase: Commenting on software usability

20.
Concepts: story sharing, share user experience
Relationship: Both concepts involve sharing user experiences.
Criteria: Users share stories or experiences related to the use of the software.
Phrase: Sharing user experience

21.
Concepts: resource request, inquire about resources
Relationship: Both concepts involve requesting resources.
Criteria: A participant requests resources, such as a user manual.
Phrase: Inquiring about resources

22.
Concepts: reason for suggestion, explain reasons for request
Relationship: Both concepts involve explaining the reasons behind suggestions or requests.
Criteria: Users explain the reasons behind their requests or suggestions.
Phrase: Explaining reasons for request

23.
Concepts: requesting features, request specific features
Relationship: Both concepts involve users requesting new features.
Criteria: Users request new features or improvements.
Phrase: Requesting specific features

24.
Concepts: community feedback, providing user feedback
Relationship: Both concepts involve users providing feedback.
Criteria: Users provide feedback and suggestions to improve the product.
Phrase: Providing user feedback

25.
Concepts: encouraging interaction, encouraging user feedback
Relationship: Both concepts involve encouraging user participation.
Criteria: A designer encourages users to interact, provide feedback, and suggest features.
Phrase: Encouraging user feedback

26.
Concepts: requesting user feedback, soliciting user feedback
Relationship: Both concepts involve requesting feedback from users.
Criteria: A designer requests specific feedback or suggestions from users.
Phrase: Soliciting user feedback

27.
Concepts: suggest feature improvement, suggest design or feature improvements
Relationship: Both concepts involve suggesting improvements.
Criteria: A designer or user suggests improvements to a feature to enhance usability.
Phrase: Suggesting feature improvements

28.
Concepts: suggest new features, provide feedback and suggestions
Relationship: Both concepts involve suggesting new features.
Criteria: Users suggest new features or functionalities that could be added to the software.
Phrase: Suggesting new features

29.
Concepts: suggest usability improvements, identify usability issue
Relationship: Both concepts involve addressing usability.
Criteria: A user identifies a usability issue and suggests adding a specific function to improve the software.
Phrase: Suggesting usability improvements

30.
Concepts: seeking consensus, agreeing on design
Relationship: Both concepts involve reaching agreement on design ideas.
Criteria: Designers seek agreement or consensus from users on a suggestion or idea.
Phrase: Seeking consensus

31.
Concepts: responding to users, responding to user inquiries
Relationship: Both concepts involve responding to user interactions.
Criteria: Designers respond to user queries, feedback, or suggestions.
Phrase: Responding to user inquiries

32.
Concepts: feature request response, responding to feedback
Relationship: Both concepts involve responding to user feedback.
Criteria: Designers respond to feature requests with updates or plans.
Phrase: Responding to feedback

33.
Concepts: seeking input, seek community input
Relationship: Both concepts involve seeking input from the community.
Criteria: A designer seeks input or suggestions from the community.
Phrase: Seeking community input

34.
Concepts: discussing design focus, discussing usability and design
Relationship: Both concepts involve discussing design aspects.
Criteria: Designers discuss design ideas and the focus areas of the software.
Phrase: Discussing design focus

35.
Concepts: troubleshooting, engaging in collaborative problem-solving
Relationship: Both concepts involve collaborative problem-solving.
Criteria: Users and designers troubleshoot issues together.
Phrase: Engaging in collaborative problem-solving

36.
Concepts: understanding user needs, inquiring about user problems
Relationship: Both concepts involve understanding user issues.
Criteria: Designers try to understand user needs or problems.
Phrase: Inquiring about user problems

37.
Concepts: involving users in design, interacting with users
Relationship: Both concepts involve user participation in the design process.
Criteria: Designers actively involve users in the design process through feedback or testing.
Phrase: Involving users in design

38.
Concepts: consulting users, engaging in user feedback
Relationship: Both concepts involve seeking user feedback.
Criteria: Designers consult users to seek input or clarification for better understanding their needs.
Phrase: Engaging in user feedback

39.
Concepts: confirm identity, confirm professional role
Relationship: Both concepts involve confirming identity or role.
Criteria: Users confirm or state their identity or role in response to a question.
Phrase: Confirming professional role

40.
Concepts: student engagement, highlight student engagement
Relationship: Both concepts involve commenting on student engagement.
Criteria: Users comment on student engagement with the software.
Phrase: Highlighting student engagement

41.
Concepts: confirming understanding, express comprehension
Relationship: Both concepts involve confirming understanding.
Criteria: Users or designers confirm understanding or agreement.
Phrase: Expressing comprehension

42.
Concepts: apologizing for inconvenience, apologies and politeness
Relationship: Both concepts involve expressing apologies.
Criteria: Designers apologize for any inconvenience caused to users.
Phrase: Apologizing for inconvenience

43.
Concepts: further question, followup question, ask follow-up question
Relationship: All concepts involve asking follow-up questions.
Criteria: A participant asks a follow-up question to gain more information or clarification.
Phrase: Asking follow-up question

44.
Concepts: inquiry, question
Relationship: Both concepts involve asking questions.
Criteria: Users ask questions to seek information or clarification.
Phrase: Asking questions

45.
Concepts: express self-help, expressing self-sufficiency
Relationship: Both concepts involve expressing self-sufficiency.
Criteria: Users express self-help or find information on their own.
Phrase: Expressing self-sufficiency

46.
Concepts: use emoji, use non-verbal communication
Relationship: Both concepts involve using non-verbal communication.
Criteria: Users engage with the conversation using emojis to express emotions or reactions.
Phrase: Using non-verbal communication

47.
Concepts: making community announcements
Relationship: N/A
Criteria: Designers make announcements to the community about updates or changes.
Phrase: Making community announcements
---