You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: visual aid usage, facilitate understanding through expression
- A designer uses visual aids to clarify understanding.
- A designer promotes or facilitates understanding by expressing comprehension.

2.
Concepts: simulation details explanation, explaining component adjustments
- The designer explains details about the simulation, such as how components will behave.
- Designers explain adjustments made to components or features in the simulation.

3.
Concepts: explaining existing features, clarify existing features
- A designer explains or informs about existing features.
- The designer clarifies or explains the existing features or functionalities of the Physics Lab.

4.
Concepts: explains feature functionality, illustrating feature functionality
- A community member explains or describes a specific feature or functionality.
- Illustrating how a feature or function works or can be used.

5.
Concepts: explaining feature functions, providing feature information
- A designer explains or introduces feature functions.
- Designers provide feature examples or describe features or provide feature details.

6.
Concepts: explaining components, explaining educational tool functionality, explaining practical applications
- A designer explains the functionality of a specific component.
- A designer explains the functionality or purpose of educational tools or resources.
- A designer explains the practical application or use of a feature.

7.
Concepts: highlighting software features, announce new versions through feature description
- A designer highlights a specific feature or component of the Physics Lab software.
- A designer announces a new version of the Physics Lab by highlighting its features.

8.
Concepts: explaining benefits, highlighting product benefits, highlighting long-term benefits
- Explaining the benefits or advantages of a design.
- A user or designer highlights the benefits or advantages of a product or software.
- Designers highlight the long-term benefits of a feature.

9.
Concepts: highlighting capabilities, demonstrating software capabilities
- A designer highlights the capabilities or features of a tool or component.
- A designer demonstrates or illustrates software capabilities.

10.
Concepts: highlighting innovative design, promoting innovative features
- A designer highlights innovative or unique design elements
- Designer promotes or highlights innovative features or capabilities of the software.

11.
Concepts: connecting features to user needs, aligning software capabilities with user needs
- Designers connect features or functionality to user needs or educational goals.
- A designer aligns the software's capabilities with the needs or requirements of users.

12.
Concepts: balancing user needs, addressing diverse user needs
- The designer balances different user needs or requirements.
- The designer addresses diverse user needs in software design.

13.
Concepts: pursuing simplicity, simplifying user experience
- The designer seeks efficiency and simplicity in design or functionality.
- Designers simplify usage or suggest design simplification.

14.
Concepts: prioritizing usability and user needs, focusing on user experience and user-centric design
- Designers prioritize usability and user needs when designing the platform.
- Designers prioritize user experience and commit to user-centric design principles.

15.
Concepts: promote usability, enhance user experience through satisfaction
- The designer aims to improve the usability of the system.
- A designer enhances user experience through design improvements or guidance, improving user satisfaction.

16.
Concepts: hardware reference, technical requirements
- User references specific hardware or technical requirements.
- Specifying technical requirements or hardware needs

17.
Concepts: technical expectations, setting hardware expectations
- Setting technical expectations or requirements for the software
- The designer sets expectations for hardware requirements to ensure compatibility.

18.
Concepts: realistic expectations, setting realistic expectations
- Setting realistic expectations for users or the software
- A designer sets realistic expectations or provides a timeline.

19.
Concepts: exploring accessibility, consider user accessibility, considers accessibility
- A designer explores accessibility considerations for diverse users.
- The designer considers user accessibility or usability issues.
- The designer considers accessibility features in software development, such as soft keyboards.

20.
Concepts: showing consideration, expressing consideration for users
- The designer shows consideration or empathy towards users.
- Expression of consideration for community members or users.

21.
Concepts: practical problem-solving, focuses on practical applications, promoting practical applications
- Designer promotes practical problem-solving using the application.
- Designer focuses on practical applications for specific modes or features.
- Designer promotes practical applications or uses of the software.

22.
Concepts: enhancing experimental detail, add experimental details to enhance usability
- Designer adds or plans to add details to experiments or simulations.
- The designer adds experimental details to enhance the usability of the Physics Lab.

23.
Concepts: validate practical needs, emphasize practical considerations in design
- The designer validates or acknowledges practical needs or requirements from users.
- A user considers practical aspects of design, such as usability or functionality.

24.
Concepts: validate technical feasibility, providing technical assurance
- A user or designer expresses reassurance or confirmation about a technical aspect.
- A designer provides theoretical or technical assurance about the software's compatibility or functionality.

25.
Concepts: emphasizing long-term stability, emphasize importance of stability
- Emphasizing the importance of long-term stability in design decisions.
- The designer explains the importance of patience for achieving long-term stability in the development process.

26.
Concepts: emphasizing attention to detail, emphasize quality through design integrity
- A designer emphasizes attention to detail or thoroughness.
- A designer emphasizes the importance of quality or excellence by highlighting design integrity.

27.
Concepts: emphasizing quality assurance, emphasize commitment to quality
- A designer stresses the importance of quality assurance in software development.
- A designer emphasizes their commitment to quality, often by reassuring users or explaining their process.

28.
Concepts: emphasizing optimization, emphasizing intuitive design
- A designer emphasizes the importance of optimization.
- The designer emphasizes the importance of intuitive design.

29.
Concepts: concept reinforcement, feature reinforcement, reiterating concepts
- A designer reinforces a concept or idea related to the platform.
- A designer or developer reinforces or reiterates an explanation of a feature or functionality.
- A designer reiterates or emphasizes the importance of a feature or concept.

30.
Concepts: enhance software relevance, enhancing relevance of designs
- A designer enhances or highlights the relevance of the software.
- Designers aim to enhance the relevance, applicability, or usefulness of their designs or features.

31.
Concepts: emphasizing refinement, emphasize organization in feature refinement
- A user emphasizes the importance of refinement or improvement in the development process.
- A user emphasizes the importance of organization in feature refinement.

32.
Concepts: emphasizing foundational features, emphasizing feature importance
- Designer emphasizes the importance of foundational features.
- Designers or users emphasize the importance of particular features or aspects to others.
===
Here are the definitions for each code:

---
1.
Concepts: visual aid usage, facilitate understanding through expression
Relationship: The concepts are related in that visual aids are used to facilitate understanding through expression.
Criteria: A designer uses visual aids to clarify understanding by expressing comprehension.
Phrase: Using visual aids to facilitate understanding.

2.
Concepts: simulation details explanation, explaining component adjustments
Relationship: The concepts are related in that explaining simulation details involves explaining component adjustments.
Criteria: A designer explains details about the simulation, including how components will behave and adjustments made to components or features.
Phrase: Explaining simulation details and component adjustments.

3.
Concepts: explaining existing features, clarify existing features
Relationship: The concepts are related in that explaining existing features involves clarifying their functionality.
Criteria: A designer explains or informs about existing features, clarifying their functionality or purpose.
Phrase: Explaining and clarifying existing features.

4.
Concepts: explains feature functionality, illustrating feature functionality
Relationship: The concepts are related in that explaining feature functionality involves illustrating how it works.
Criteria: A community member explains or describes a specific feature or functionality, illustrating how it works or can be used.
Phrase: Explaining and illustrating feature functionality.

5.
Concepts: explaining feature functions, providing feature information
Relationship: The concepts are related in that explaining feature functions involves providing information about them.
Criteria: A designer explains or introduces feature functions, providing examples or details about their functionality.
Phrase: Explaining and providing feature information.

6.
Concepts: explaining components, explaining educational tool functionality, explaining practical applications
Relationship: The concepts are related in that explaining components involves explaining their functionality and practical applications.
Criteria: A designer explains the functionality of a specific component, its educational tool functionality, and its practical application or use.
Phrase: Explaining component functionality and practical applications.

7.
Concepts: highlighting software features, announce new versions through feature description
Relationship: The concepts are related in that highlighting software features involves announcing new versions.
Criteria: A designer highlights a specific feature or component of the Physics Lab software, announcing new versions through feature description.
Phrase: Highlighting software features and announcing new versions.

8.
Concepts: explaining benefits, highlighting product benefits, highlighting long-term benefits
Relationship: The concepts are related in that explaining benefits involves highlighting product benefits and long-term benefits.
Criteria: A user or designer explains the benefits or advantages of a design, highlighting the benefits or advantages of a product or software and its long-term benefits.
Phrase: Explaining and highlighting benefits.

9.
Concepts: highlighting capabilities, demonstrating software capabilities
Relationship: The concepts are related in that highlighting capabilities involves demonstrating software capabilities.
Criteria: A designer highlights the capabilities or features of a tool or component, demonstrating software capabilities.
Phrase: Highlighting and demonstrating software capabilities.

10.
Concepts: highlighting innovative design, promoting innovative features
Relationship: The concepts are related in that highlighting innovative design involves promoting innovative features.
Criteria: A designer highlights innovative or unique design elements, promoting innovative features or capabilities of the software.
Phrase: Highlighting and promoting innovative design.

11.
Concepts: connecting features to user needs, aligning software capabilities with user needs
Relationship: The concepts are related in that connecting features to user needs involves aligning software capabilities with user needs.
Criteria: Designers connect features or functionality to user needs or educational goals, aligning the software's capabilities with the needs or requirements of users.
Phrase: Connecting features to user needs and aligning software capabilities.

12.
Concepts: balancing user needs, addressing diverse user needs
Relationship: The concepts are related in that balancing user needs involves addressing diverse user needs.
Criteria: The designer balances different user needs or requirements, addressing diverse user needs in software design.
Phrase: Balancing and addressing diverse user needs.

13.
Concepts: pursuing simplicity, simplifying user experience
Relationship: The concepts are related in that pursuing simplicity involves simplifying user experience.
Criteria: The designer seeks efficiency and simplicity in design or functionality, simplifying usage or suggesting design simplification.
Phrase: Pursuing simplicity and simplifying user experience.

14.
Concepts: prioritizing usability and user needs, focusing on user experience and user-centric design
Relationship: The concepts are related in that prioritizing usability and user needs involves focusing on user experience and user-centric design.
Criteria: Designers prioritize usability and user needs when designing the platform, focusing on user experience and committing to user-centric design principles.
Phrase: Prioritizing usability and user-centric design.

15.
Concepts: promote usability, enhance user experience through satisfaction
Relationship: The concepts are related in that promoting usability involves enhancing user experience through satisfaction.
Criteria: The designer aims to improve the usability of the system, enhancing user experience through design improvements or guidance, improving user satisfaction.
Phrase: Promoting usability and enhancing user experience.

16.
Concepts: hardware reference, technical requirements
Relationship: The concepts are related in that hardware reference involves specifying technical requirements.
Criteria: User references specific hardware or technical requirements, specifying technical requirements or hardware needs.
Phrase: Referencing hardware and specifying technical requirements.

17.
Concepts: technical expectations, setting hardware expectations
Relationship: The concepts are related in that technical expectations involve setting hardware expectations.
Criteria: Setting technical expectations or requirements for the software, setting expectations for hardware requirements to ensure compatibility.
Phrase: Setting technical expectations and hardware requirements.

18.
Concepts: realistic expectations, setting realistic expectations
Relationship: The concepts are related in that realistic expectations involve setting realistic expectations.
Criteria: Setting realistic expectations for users or the software, providing a timeline or guidance.
Phrase: Setting realistic expectations.

19.
Concepts: exploring accessibility, consider user accessibility, considers accessibility
Relationship: The concepts are related in that exploring accessibility involves considering user accessibility.
Criteria: A designer explores accessibility considerations for diverse users, considering user accessibility or usability issues, and accessibility features in software development.
Phrase: Exploring and considering accessibility.

20.
Concepts: showing consideration, expressing consideration for users
Relationship: The concepts are related in that showing consideration involves expressing consideration for users.
Criteria: The designer shows consideration or empathy towards users, expressing consideration for community members or users.
Phrase: Showing and expressing consideration for users.

21.
Concepts: practical problem-solving, focuses on practical applications, promoting practical applications
Relationship: The concepts are related in that practical problem-solving involves focusing on practical applications.
Criteria: Designer promotes practical problem-solving using the application, focusing on practical applications for specific modes or features, and promoting practical applications or uses of the software.
Phrase: Focusing on practical problem-solving and applications.

22.
Concepts: enhancing experimental detail, add experimental details to enhance usability
Relationship: The concepts are related in that enhancing experimental detail involves adding experimental details to enhance usability.
Criteria: Designer adds or plans to add details to experiments or simulations, adding experimental details to enhance the usability of the Physics Lab.
Phrase: Enhancing experimental detail and usability.

23.
Concepts: validate practical needs, emphasize practical considerations in design
Relationship: The concepts are related in that validating practical needs involves emphasizing practical considerations in design.
Criteria: The designer validates or acknowledges practical needs or requirements from users, considering practical aspects of design, such as usability or functionality.
Phrase: Validating and emphasizing practical needs.

24.
Concepts: validate technical feasibility, providing technical assurance
Relationship: The concepts are related in that validating technical feasibility involves providing technical assurance.
Criteria: A user or designer expresses reassurance or confirmation about a technical aspect, providing theoretical or technical assurance about the software's compatibility or functionality.
Phrase: Validating and providing technical assurance.

25.
Concepts: emphasizing long-term stability, emphasize importance of stability
Relationship: The concepts are related in that emphasizing long-term stability involves emphasizing the importance of stability.
Criteria: Emphasizing the importance of long-term stability in design decisions, explaining the importance of patience for achieving long-term stability in the development process.
Phrase: Emphasizing long-term stability.

26.
Concepts: emphasizing attention to detail, emphasize quality through design integrity
Relationship: The concepts are related in that emphasizing attention to detail involves emphasizing quality through design integrity.
Criteria: A designer emphasizes attention to detail or thoroughness, emphasizing the importance of quality or excellence by highlighting design integrity.
Phrase: Emphasizing attention to detail and quality.

27.
Concepts: emphasizing quality assurance, emphasize commitment to quality
Relationship: The concepts are related in that emphasizing quality assurance involves emphasizing commitment to quality.
Criteria: A designer stresses the importance of quality assurance in software development, emphasizing their commitment to quality, often by reassuring users or explaining their process.
Phrase: Emphasizing quality assurance and commitment.

28.
Concepts: emphasizing optimization, emphasizing intuitive design
Relationship: The concepts are related in that emphasizing optimization involves emphasizing intuitive design.
Criteria: A designer emphasizes the importance of optimization, emphasizing the importance of intuitive design.
Phrase: Emphasizing optimization and intuitive design.

29.
Concepts: concept reinforcement, feature reinforcement, reiterating concepts
Relationship: The concepts are related in that concept reinforcement involves reiterating concepts and feature reinforcement.
Criteria: A designer reinforces a concept or idea related to the platform, reinforcing or reiterating an explanation of a feature or functionality, and reiterating or emphasizing the importance of a feature or concept.
Phrase: Reinforcing and reiterating concepts and features.

30.
Concepts: enhance software relevance, enhancing relevance of designs
Relationship: The concepts are related in that enhancing software relevance involves enhancing the relevance of designs.
Criteria: A designer enhances or highlights the relevance of the software, aiming to enhance the relevance, applicability, or usefulness of their designs or features.
Phrase: Enhancing software relevance and design relevance.

31.
Concepts: emphasizing refinement, emphasize organization in feature refinement
Relationship: The concepts are related in that emphasizing refinement involves emphasizing organization in feature refinement.
Criteria: A user emphasizes the importance of refinement or improvement in the development process, emphasizing the importance of organization in feature refinement.
Phrase: Emphasizing refinement and organization.

32.
Concepts: emphasizing foundational features, emphasizing feature importance
Relationship: The concepts are related in that emphasizing foundational features involves emphasizing feature importance.
Criteria: Designer emphasizes the importance of foundational features, emphasizing the importance of particular features or aspects to others.
Phrase: Emphasizing foundational features and feature importance.