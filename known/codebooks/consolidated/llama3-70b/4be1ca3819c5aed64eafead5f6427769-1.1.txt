You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (8 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
8. {Repeat the input 8}
Relationship: {The logical relationship between concepts in input 8}
Criteria: {A sentence of consolidated criteria for code 8}
Label: {A consolidated label of code 8}
Category: {2-4 words for code 8}
---
~~~
1. emojis, emoji usage for engagement.
- Use of emojis in communication.
- Instances where emojis are used to express emotions, reactions, or to signify engagement in conversations with minimal use of words.

2. emotional expression, user interaction: expressing emotions.
- Instances of community members using emojis or language to express emotions or convey emotional tone.
- Users expressing emotions or reactions through emojis or other means.

3. appreciation for software, positive user feedback.
- Users expressing satisfaction or positive feedback about the software.
- Instances where users express satisfaction, approval, or enthusiasm for the software and its features.

4. questions and clarifications, user queries and requests.
- Instances where users ask questions or seek clarification.
- Instances where users ask questions or make specific requests for new features or content to gain information or clarify doubts.

5. collaboration and consultation, consultation and inclusion.
- Designer soliciting input or feedback from community members.
- Examples of the designer seeking opinions, preferences, or information from the community to guide design decisions.

6. user interaction, designer-user interaction.
- Users engaging with each other or the designer.
- Instances of communication or collaboration between designers and users.

7. feature planning, development prioritization.
- Discussions or decisions related to planned software features, capabilities, or prioritizing their development.
- Discussions that focus on the decision-making process regarding which software features or sections to develop or enhance first.

8. version release, update announcements.
- Updates and announcements about the software version.
- Announcements regarding new software updates, changes, or enhancements shared with the community.
===
---
Categories:
* Community Engagement
* Emotions and Feedback
* Design Decisions
* Interaction and Collaboration
* Software Development

Definitions for each code:

1. emojis, emoji usage for engagement.
Relationship: Concepts are parallel, as emojis are used for engagement and to convey emotions.
Criteria: Emojis are used to express emotions, reactions, or engagement in conversations with minimal use of words.
Label: Emoji-based Engagement
Category: Community Engagement

2. emotional expression, user interaction: expressing emotions.
Relationship: Concepts are parallel, as users express emotions through emojis, language, or tone.
Criteria: Users express emotions or reactions through emojis, language, or tone.
Label: Emotional Expression
Category: Emotions and Feedback

3. appreciation for software, positive user feedback.
Relationship: The concept of appreciation includes positive feedback.
Criteria: Users express satisfaction, approval, or enthusiasm for the software and its features.
Label: Positive Feedback
Category: Emotions and Feedback

4. questions and clarifications, user queries and requests.
Relationship: Concepts are parallel, as users ask questions or seek clarification.
Criteria: Users ask questions or make specific requests for new features or content to gain information or clarify doubts.
Label: Information Seeking
Category: Interaction and Collaboration

5. collaboration and consultation, consultation and inclusion.
Relationship: Concepts are parallel, as the designer solicits input or feedback from community members.
Criteria: The designer seeks opinions, preferences, or information from the community to guide design decisions.
Label: Inclusive Design
Category: Design Decisions

6. user interaction, designer-user interaction.
Relationship: Concepts are parallel, as users engage with each other or the designer.
Criteria: Instances of communication or collaboration between designers and users.
Label: Interaction and Collaboration
Category: Interaction and Collaboration

7. feature planning, development prioritization.
Relationship: Concepts are parallel, as discussions focus on planned software features and prioritization.
Criteria: Discussions focus on the decision-making process regarding which software features or sections to develop or enhance first.
Label: Feature Planning
Category: Software Development

8. version release, update announcements.
Relationship: Concepts are parallel, as updates and announcements involve software versions.
Criteria: Announcements regarding new software updates, changes, or enhancements shared with the community.
Label: Update Announcements
Category: Software Development