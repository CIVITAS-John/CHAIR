You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (16 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
16. 
Concepts: {Repeat the input 16}
Relationship: {What is logical relationship between concepts in code 16, or N/A if not applicable}
Criteria: {Who did what, and how for code 16}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: establishing user identity, inquiring about identity
- Users establish their identity or presence within the community.
- Users or designers ask about each other's identities or roles to establish a sense of community.

2.
Concepts: respond to user feedback, respond to feature requests
- Designers respond to and consider user feedback or suggestions, and encourage and acknowledge user feedback.
- Designers respond to a feature request or suggestion, and address user feedback, respond to concerns, or explain the design process.

3.
Concepts: consulting with users, integrating user feedback
- Designers consult with users or seek their opinions.
- Designers collect and incorporate user feedback into design decisions.

4.
Concepts: identify user needs, identify potential needs
- Designers ask about user needs and ask follow-up questions to clarify them.
- Designers identify potential needs or areas for improvement.

5.
Concepts: confirm system requirements, assure software compatibility
- Designer discusses or provides information about system requirements, and confirms, suggests, or informs about system compatibility.
- Designers discuss or assure the compatibility of the software with different devices or systems, and theorize about or consider the compatibility of the software with different systems or devices.

6.
Concepts: making design decisions, discussing feature development
- Designers make or discuss design decisions or ideas for the software.
- Designers discuss, propose, or implement features or their functionality.

7.
Concepts: plan projects, discussing long-term development goals
- Designers discuss planning or organizing a project, including management and prioritization, and discuss prioritization of different features or sections to be developed.
- Designers discuss long-term plans or goals for the project or feature.

8.
Concepts: clarify existing functionality, provide technical details
- Designers clarify existing functionality and provide technical explanations, and facilitate access or explain technical aspects of the software.
- Designers provide technical details or specifications about a feature or component, provide explanations or clarifications about a feature or concept, and provide examples to illustrate features.

9.
Concepts: sharing development updates, sharing progress updates and plans
- Designers share visual updates or development updates.
- Designers share updates on progress and communicate about their plans.

10.
Concepts: commit to improvement, promise updates and improvements
- Designers promise or commit to improving or doing better.
- Designers assure users that updates or improvements are in progress and promise to realize them.

11.
Concepts: express agreement, express approval
- Users express agreement or confirmation.
- Users express approval, agreement, or positivity.

12.
Concepts: express emotions, express oneself non-verbally
- Users express themselves creatively, often using emojis.
- Users express themselves through non-verbal means.

13.
Concepts: subject focus, express personal interest
- The designer focuses on a specific subject area (e.g., physics, electricity).
- Designers express personal interest in a topic, and a designer expresses interest in a particular subject or field related to Physics Lab.

14.
Concepts: assistance request, seeking usage support
- A user requests assistance or help.
- Users ask about how to use a product or feature, request support, or seek help with technical issues.

15.
Concepts: asking questions, information seeking
- Users ask questions to seek information or clarification about the software or its features.
- Users asking questions to gain knowledge or resources related to the software.

16.
Concepts: discuss usability
- Designers discuss software usability, and describe usability features and discuss instructional design or user experience.
- Users discuss the software's usability in different contexts and its component functionality and capabilities.
===
Here are the definitions for each code:

---
1.
Concepts: establishing user identity, inquiring about identity
Relationship: The concepts are related as they both involve the process of getting to know each other in the online community.
Criteria: Users and designers establish and inquire about each other's identities to build a sense of community.
Phrase: Establishing online presence

2.
Concepts: respond to user feedback, respond to feature requests
Relationship: The concepts are related as they both involve designers responding to user input.
Criteria: Designers respond to user feedback and feature requests to improve the software.
Phrase: Addressing user concerns

3.
Concepts: consulting with users, integrating user feedback
Relationship: The concepts are related as they both involve designers seeking and incorporating user input.
Criteria: Designers consult with users and integrate their feedback into design decisions.
Phrase: Incorporating user input

4.
Concepts: identify user needs, identify potential needs
Relationship: The concepts are related as they both involve designers understanding user requirements.
Criteria: Designers identify and explore user needs to inform design decisions.
Phrase: Identifying user requirements

5.
Concepts: confirm system requirements, assure software compatibility
Relationship: The concepts are related as they both involve ensuring the software's technical feasibility.
Criteria: Designers confirm system requirements and assure software compatibility to ensure smooth operation.
Phrase: Ensuring technical feasibility

6.
Concepts: making design decisions, discussing feature development
Relationship: The concepts are related as they both involve designers planning and creating software features.
Criteria: Designers make design decisions and discuss feature development to create software features.
Phrase: Developing software features

7.
Concepts: plan projects, discussing long-term development goals
Relationship: The concepts are related as they both involve designers planning for the future.
Criteria: Designers plan projects and discuss long-term development goals to guide the software's evolution.
Phrase: Planning for the future

8.
Concepts: clarify existing functionality, provide technical details
Relationship: The concepts are related as they both involve designers explaining the software's technical aspects.
Criteria: Designers clarify existing functionality and provide technical details to facilitate understanding.
Phrase: Explaining technical aspects

9.
Concepts: sharing development updates, sharing progress updates and plans
Relationship: The concepts are related as they both involve designers keeping users informed.
Criteria: Designers share development updates and progress to keep users informed.
Phrase: Sharing development progress

10.
Concepts: commit to improvement, promise updates and improvements
Relationship: The concepts are related as they both involve designers making commitments to users.
Criteria: Designers commit to improving the software and promise updates and improvements.
Phrase: Committing to improvement

11.
Concepts: express agreement, express approval
Relationship: The concepts are related as they both involve users showing positivity.
Criteria: Users express agreement and approval to show support.
Phrase: Expressing agreement

12.
Concepts: express emotions, express oneself non-verbally
Relationship: The concepts are related as they both involve users conveying emotions.
Criteria: Users express emotions and themselves non-verbally to communicate.
Phrase: Expressing emotions

13.
Concepts: subject focus, express personal interest
Relationship: The concepts are related as they both involve designers showing enthusiasm for a topic.
Criteria: Designers focus on a subject area and express personal interest to engage with users.
Phrase: Showing subject interest

14.
Concepts: assistance request, seeking usage support
Relationship: The concepts are related as they both involve users seeking help.
Criteria: Users request assistance and seek usage support to overcome challenges.
Phrase: Seeking assistance

15.
Concepts: asking questions, information seeking
Relationship: The concepts are related as they both involve users seeking knowledge.
Criteria: Users ask questions and seek information to gain knowledge.
Phrase: Seeking information

16.
Concepts: discuss usability
Relationship: The concepts are related as they both involve discussing the software's user experience.
Criteria: Designers and users discuss software usability to improve the user experience.
Phrase: Discussing usability