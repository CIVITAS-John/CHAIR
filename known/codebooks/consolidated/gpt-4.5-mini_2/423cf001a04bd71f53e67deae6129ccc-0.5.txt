You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (17 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
17. 
Concepts: {Repeat the input 17}
Relationship: {What is logical relationship between concepts in code 17, or N/A if not applicable}
Criteria: {Who did what, and how for code 17}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: explain design rationale, explain design principles
- Designers explain the rationale behind user-friendly design and decisions.
- Designers articulate the principles and philosophies guiding their design and development decisions.

2.
Concepts: provide status updates, communicate release schedules
- Designers share information regarding updates and expected timelines for software releases.
- Designers communicate timelines and updates regarding software releases.

3.
Concepts: express hope for progress, share visual progress
- Designer expresses a desire for progress in software development.
- The designer highlights progress made in software updates and communicates ongoing work on specific features.

4.
Concepts: acknowledgment and implementation, confirm understanding in discussions
- Designers acknowledging user feedback and discussing plans to implement suggested features.
- Designers and users affirm statements and confirm understanding during discussions.

5.
Concepts: seek visual confirmation, validate and inquire about requests
- Designers ask users for confirmation on specific visual elements or topics.
- Designers validate user requests while seeking clarification to better understand their needs.

6.
Concepts: real time communication, demonstrate responsiveness in communication
- Designer initiates real-time communication with a user.
- A designer responds quickly to a user's inquiry, demonstrating attentiveness and engagement, and responds to user inquiries and feedback, addressing their concerns.

7.
Concepts: direct communication, promote open communication
- Direct interactions between designers and users to discuss features, updates, and feedback.
- Designers foster open communication and encourage users to report issues directly.

8.
Concepts: engage in query and response, engage in follow-up discussions
- Designers and users pose and respond to inquiries regarding design elements and technical specifications.
- Users and designers engage in a dialogue to clarify technical compatibility and solutions, asking follow-up questions to clarify user issues and needs.

9.
Concepts: discuss software usability, engage in collaborative planning
- Designers and users actively discuss application features and usability considerations.
- Designers and users collaboratively discuss and plan the development of the software and discuss the need for gathering opinions before project planning.

10.
Concepts: discuss design challenges, discuss system compatibility
- Designers talk about development issues and team limitations during discussions.
- Designers discuss and analyze system compatibility issues and potential challenges.

11.
Concepts: seek consensus, indicate need for further consultation
- A designer seeks agreement or consensus from the community, promoting collaborative decision-making.
- Designers express differing views on ideas while indicating a need for consensus before proceeding.

12.
Concepts: share positive feedback, compliment on the app's evolution
- Users express positive feedback regarding software updates and features.
- Users acknowledge and compliment the progress and development of the application.

13.
Concepts: use non verbal communication, express emotions with emojis
- Use of emojis or other non-verbal forms of communication by users.
- Users utilize emojis to convey emotions and reactions, enhancing the community's informal tone.

14.
Concepts: inquire about pc version, seek version clarification
- Users reference the PC version of the software and inquire about its usage and features.
- Users ask questions about the application version and its compatibility across platforms.

15.
Concepts: contextualize responses, provide context for interest
- Users provide context and background information related to their inquiries.
- Users provide context and positive responses to inquiries or proposals.

16.
Concepts: request user manual, request technical support, request user assistance
- Users request a user manual while articulating their specific needs for the software.
- Users inquire about the application's features or usage and ask for specific information or assistance regarding software usage.
- Users seek information and assistance regarding software access and downloads.

17.
Concepts: user experience in educational contexts, highlight technical challenges in education
- User experiences and challenges in using the software within educational settings.
- Users describe technical constraints and challenges related to software usage.
===
---
Definitions for each code (17 in total):
1.
Concepts: explain design rationale, explain design principles  
Relationship: Both concepts involve designers communicating the reasoning and guiding philosophies behind their design choices.  
Criteria: Designers explain the rationale and principles guiding user-friendly design and development decisions.  
Phrase: Articulate design rationale and principles.

2.
Concepts: provide status updates, communicate release schedules  
Relationship: Both concepts involve designers sharing information about the progress and timelines of software releases.  
Criteria: Designers share updates and expected timelines for software releases.  
Phrase: Communicate updates and release schedules.

3.
Concepts: express hope for progress, share visual progress  
Relationship: The concepts are related as they both reflect the designer's perspective on the development process, focusing on aspirations and actual achievements.  
Criteria: Designers express hope for progress while highlighting completed and ongoing work in software development.  
Phrase: Highlight progress and aspirations.

4.
Concepts: acknowledgment and implementation, confirm understanding in discussions  
Relationship: Both concepts emphasize the importance of recognizing user feedback and ensuring clarity in communication.  
Criteria: Designers acknowledge user feedback and confirm understanding during discussions about implementation.  
Phrase: Acknowledge feedback and confirm understanding.

5.
Concepts: seek visual confirmation, validate and inquire about requests  
Relationship: Both concepts involve designers interacting with users to clarify and validate their needs and requests.  
Criteria: Designers seek visual confirmation and validate user requests while inquiring for further clarification.  
Phrase: Validate requests and seek confirmation.

6.
Concepts: real time communication, demonstrate responsiveness in communication  
Relationship: Both concepts focus on the immediacy and attentiveness of designers in their interactions with users.  
Criteria: Designers engage in real-time communication and respond promptly to user inquiries.  
Phrase: Engage in responsive communication.

7.
Concepts: direct communication, promote open communication  
Relationship: Both concepts highlight the significance of clear and open interactions between designers and users.  
Criteria: Designers facilitate direct and open communication about features, updates, and feedback.  
Phrase: Foster direct and open communication.

8.
Concepts: engage in query and response, engage in follow-up discussions  
Relationship: Both concepts involve interactive dialogue between designers and users to clarify and address inquiries.  
Criteria: Designers and users engage in queries and follow-up discussions regarding design and technical specifications.  
Phrase: Engage in interactive dialogue.

9.
Concepts: discuss software usability, engage in collaborative planning  
Relationship: Both concepts emphasize collaboration between designers and users in discussing usability and planning.  
Criteria: Designers and users discuss application features and collaboratively plan software development.  
Phrase: Collaborate on usability and planning.

10.
Concepts: discuss design challenges, discuss system compatibility  
Relationship: Both concepts involve addressing issues and limitations related to software development and compatibility.  
Criteria: Designers discuss design challenges and analyze system compatibility issues during conversations.  
Phrase: Address design and compatibility challenges.

11.
Concepts: seek consensus, indicate need for further consultation  
Relationship: Both concepts involve collaborative decision-making and the need for agreement among community members.  
Criteria: Designers seek community consensus and indicate the necessity for further consultation before proceeding.  
Phrase: Promote consensus and consultation.

12.
Concepts: share positive feedback, compliment on the app's evolution  
Relationship: Both concepts reflect users' positive sentiments toward the software's development and updates.  
Criteria: Users share positive feedback and compliment the evolution of the application.  
Phrase: Express positive feedback and compliments.

13.
Concepts: use non verbal communication, express emotions with emojis  
Relationship: Both concepts relate to the informal and expressive nature of user interactions through non-verbal cues.  
Criteria: Users utilize non-verbal communication, including emojis, to express emotions and reactions.  
Phrase: Convey emotions through non-verbal communication.

14.
Concepts: inquire about pc version, seek version clarification  
Relationship: Both concepts involve users asking questions related to the software's versions and compatibility.  
Criteria: Users inquire about the PC version and seek clarification on application features across platforms.  
Phrase: Inquire about version details.

15.
Concepts: contextualize responses, provide context for interest  
Relationship: Both concepts involve users providing background information to enhance understanding of their inquiries.  
Criteria: Users contextualize their responses and provide relevant background information for inquiries.  
Phrase: Contextualize inquiries and responses.

16.
Concepts: request user manual, request technical support, request user assistance  
Relationship: All concepts involve users seeking help or information regarding the software's usage and features.  
Criteria: Users request a user manual, technical support, and assistance related to software usage.  
Phrase: Request assistance and support.

17.
Concepts: user experience in educational contexts, highlight technical challenges in education  
Relationship: Both concepts focus on the experiences and challenges users face when utilizing the software in educational settings.  
Criteria: Users describe their experiences and technical challenges related to software usage in educational contexts.  
Phrase: Highlight educational experiences and challenges.  
---