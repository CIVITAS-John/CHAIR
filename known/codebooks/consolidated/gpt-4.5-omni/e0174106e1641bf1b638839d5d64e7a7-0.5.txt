You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between sub-codes. If a sub-code includes another, use the broader one. If sub-codes are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (15 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {A sentence of consolidated criteria 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
15.
Relationship: {The logical relationship between sub-codes in code 15}
Criteria: {A sentence of consolidated criteria 15}
Label: {A consolidated label of code 15}
Category: {2-4 words for code 15}
---
~~~
1. professional context, professional background.
- Contextual information regarding the professional roles of users.
- Information about the professional history or background of users.

2. user gratitude, user appreciation.
- Expression of gratitude or appreciation within the community.
- Expression of appreciation for contributions and efforts.

3. progress update, progress communication.
- Providing information on the current state or progress of a task.
- Communicating the status and details of updates and progress.

4. update timeline, timeline communication.
- Communication about the anticipated timeline for updates.
- Communication about the timeline of updates or releases.

5. update announcement, release information.
- Announcing upcoming updates or new releases.
- Announcing the release of new software versions.

6. update preview, feature preview.
- Previews or teasers of upcoming updates.
- Providing a preview of upcoming features and updates.

7. feature development, feature implementation.
- Statements about ongoing or planned feature development.
- Statements about the implementation of new features.

8. technical issue, technical challenges.
- Issues encountered by users related to technical aspects.
- Describing technical difficulties encountered by users.

9. component update, component adjustments.
- Changes and updates to the features and properties of components in the application.
- Adjustments or changes to the properties of components within the application.

10. software enhancements, feature enhancements.
- Enhancements and improvements made to the software.
- Enhancements or refinements made to features and components.

11. feature prioritization, development prioritization.
- Prioritization of features or tasks.
- Prioritization of development tasks and features.

12. request for feedback, community feedback, community suggestion.
- A request for input or suggestions from the community.
- Input or opinions from community members regarding features or improvements.
- Recommendations or proposals from the community for better functionality.

13. user suggestion, feature requests and suggestions.
- Recommendations or ideas proposed by users for improving the application.
- Requests or suggestions from users for new features or improvements.

14. positive feedback, user satisfaction.
- Positive comments or feedback regarding the software.
- Expressions of satisfaction or positive feedback about the software.

15. user solution, user workaround.
- Providing solutions or workarounds for technical issues.
- Describing practical solutions or tricks for using the software.
===
---
Categories:
* Community Dynamics
* Communication Practices
* Development Process
* User Engagement

Definitions for each code (15 in total):
1.
Relationship: Professional context includes professional background.
Criteria: Information regarding users' professional roles and histories relevant to the community.
Label: Professional Background
Category: Community Dynamics

2.
Relationship: User gratitude includes user appreciation.
Criteria: Expressions of gratitude and appreciation within the community.
Label: User Appreciation
Category: Community Dynamics

3.
Relationship: Progress update includes progress communication.
Criteria: Information and communication about the current state or progress of tasks.
Label: Progress Communication
Category: Communication Practices

4.
Relationship: Update timeline includes timeline communication.
Criteria: Communication about the anticipated and actual timelines for updates.
Label: Timeline Communication
Category: Communication Practices

5.
Relationship: Update announcement includes release information.
Criteria: Announcements regarding upcoming updates or new releases.
Label: Update Announcement
Category: Communication Practices

6.
Relationship: Update preview includes feature preview.
Criteria: Previews or teasers of upcoming updates and features.
Label: Feature Preview
Category: Development Process

7.
Relationship: Feature development includes feature implementation.
Criteria: Information about ongoing or planned development and implementation of features.
Label: Feature Development
Category: Development Process

8.
Relationship: Technical issue includes technical challenges.
Criteria: Descriptions of technical difficulties encountered by users.
Label: Technical Challenges
Category: Development Process

9.
Relationship: Component update includes component adjustments.
Criteria: Changes and updates to the features and properties of application components.
Label: Component Adjustments
Category: Development Process

10.
Relationship: Software enhancements includes feature enhancements.
Criteria: Enhancements and improvements made to the software and its features.
Label: Software Enhancements
Category: Development Process

11.
Relationship: Feature prioritization includes development prioritization.
Criteria: Prioritization of features and development tasks.
Label: Development Prioritization
Category: Development Process

12.
Relationship: Request for feedback includes community feedback and community suggestion.
Criteria: Requests for input, suggestions, and recommendations from the community.
Label: Community Feedback
Category: User Engagement

13.
Relationship: User suggestion includes feature requests and suggestions.
Criteria: Recommendations and ideas proposed by users for improving the application.
Label: Feature Requests
Category: User Engagement

14.
Relationship: Positive feedback includes user satisfaction.
Criteria: Expressions of satisfaction and positive comments about the software.
Label: Positive Feedback
Category: User Engagement

15.
Relationship: User solution includes user workaround.
Criteria: Practical solutions or workarounds for technical issues provided by users.
Label: User Solutions
Category: User Engagement
---