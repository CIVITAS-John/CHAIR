You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (47 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
47. 
Concepts: {Repeat the input 47}
Relationship: {What is logical relationship between concepts in code 47, or N/A if not applicable}
Criteria: {Who did what, and how for code 47}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: notifying updates, informing about updates
- The team informs the community about changes or new updates to the software.
- The team provides information about changes or new features in upcoming updates.

2.
Concepts: announcing new versions, announcing software releases
- The team announces the release and details of new software versions.
- The team informs the community about the release and features of a new version of the product.
- The team informs the community about the release or availability of new software versions.

3.
Concepts: introduce update content, introducing new features
- The team introduces upcoming features and enhancements of the project.
- The team introduces or discusses new functionality or features added to the app.

4.
Concepts: listing upcoming features, outlining future updates
- The team lists features and improvements planned for future updates.
- The team mentions and outlines specific features or tools planned for future updates.

5.
Concepts: planning updates, update timeline sharing
- Designers provide information about upcoming updates and their timelines.
- Designers shared specific timelines for update releases.

6.
Concepts: announcing software updates, communication of updates
- Designers provide information about upcoming updates and new features.
- Instances where designers communicate updates, release schedules, or new features to users.

7.
Concepts: announcement, community update
- The designer posts updates or announces new developments, downloads, or releases.
- Instances where designers provide updates or announcements about the software.

8.
Concepts: inquiring about updates, update status inquiry
- Users inquire about recent or upcoming updates.
- Users questioning or seeking updates on new versions or fixes for different platforms and systems.

9.
Concepts: providing status updates, communicating progress
- The team provides updates on the status of certain features or projects.
- The team communicates progress and specific plans regarding software releases and updates.

10.
Concepts: sharing development updates, sharing development plans
- The team shares updates on current and future development activities.
- The team shares information about future plans or ongoing development of software features.

11.
Concepts: scheduling updates, providing update timelines
- The team provides a schedule or timeline for upcoming software updates or releases.
- The team provides information about software version updates and their expected release timelines.

12.
Concepts: feature details, explaining features
- Designers provide specific details about the features or capabilities of the software.
- Designers provide thorough explanations about how specific features or aspects of the software work.

13.
Concepts: feature guidance, providing usage instructions
- The designer instructs users how to use or activate particular features of the software.
- Designers or users provide detailed instructions on how to use specific features or conduct activities within the software.

14.
Concepts: managing user expectations, setting timeline expectations
- Instances where designers set realistic expectations about feature availability and timelines.
- Designers set realistic expectations about timelines for updates or feature releases.

15.
Concepts: confirming future features, future feature announcement
- Designers confirm that certain features will be implemented in upcoming updates or eventually.
- A promise or indication from a designer about a future addition or enhancement of a feature in the system.

16.
Concepts: development prioritization, prioritizing feature development
- Instances where designers discuss the prioritization of different features or sections to be developed.
- Designers outline the order and priorities for developing software features.

17.
Concepts: plan future update, planning future priorities
- A designer plans or outlines specific updates to be included in future releases of the software.
- Designers outline future development priorities and considerations for the software.

18.
Concepts: discussing future plans, sharing future directions
- Discussions about potential future developments and directions for the product.
- Sharing potential directions or areas of interest for future development.

19.
Concepts: inquiring about access, inquiring about downloads
- Users ask how to access or download the software.
- Users ask for information on how to access or download the software.

20.
Concepts: requesting guidance, requesting technical support, requesting usage support
- Users request instructions or guidance on how to use specific features of the software.
- Users request help or guidance on using specific features or solving technical issues.
- Users request assistance or instructions for using the software.

21.
Concepts: inquiring about usage, application version inquiry
- Users inquire about how to use specific versions of the software.
- Users inquire about the specifics of the application versions.

22.
Concepts: user experience and impact, sharing classroom experiences
- Users sharing their experiences and the impact of the software on their teaching or learning.
- Users share their classroom experiences and describe students' positive responses to the software.

23.
Concepts: teacher, identifying teachers
- Identifying users as teachers, often within the context of a discussion or request about educational use.
- Confirming or identifying a user's role as a teacher.

24.
Concepts: sharing teaching background, provide teacher background
- Users share their teaching backgrounds and experiences.
- Users providing additional personal or professional background context to the conversation.

25.
Concepts: inquiring about background, ask about user's professional background
- A designer asks users for information about their professional background or teaching experience.
- The designer asks about the userâ€™s profession to better understand their needs or context.

26.
Concepts: troubleshooting, inquiring about problems
- Users or designers discuss problems encountered during software use and possible troubleshooting methods.
- Designers ask users to specify the problems they encountered using the software.

27.
Concepts: requesting clarification, requesting clarification on feedback
- Users or designers seek clarification or additional details regarding feedback or requests.
- Designers ask for clarification on user feedback or feature usage.

28.
Concepts: private user communication, requesting private communication
- A request for private communication to understand user needs.
- Users or designers request communication through private messages instead of public forums.

29.
Concepts: appreciate support from users, supporting the community
- Appreciating the support and collaboration from the community.
- Users express or designers acknowledge support, appreciation, or encouragement from the community.

30.
Concepts: communicating with emojis, use non verbal communication
- Users use emojis to convey emotions or reactions.
- Use of emojis or other non-verbal forms of communication by users.

31.
Concepts: greeting community, reciprocate greeting
- Users or designers greet the community.
- The designer or user engages in a polite greeting or acknowledges the presence of someone in the community.

32.
Concepts: praising software, expressing satisfaction, complimenting usability
- Users praise the software for its usability, effectiveness, and impact.
- Users express high satisfaction about the software's functionality or usability.
- Users comment on the usability and practical advantages of the software.

33.
Concepts: approving features, appreciating features
- Users express approval or positive feedback about software features.
- Users express appreciation or approval for specific features or ideas.

34.
Concepts: sharing positive feedback, sharing user experiences
- Sharing positive feedback or experiences with the software.
- Users express their opinions and share experiences about the software, whether positive or negative.

35.
Concepts: communicating user feedback, providing feedback and suggestions
- Users provide feedback or communicate their experiences and suggestions for the software.
- Users provide feedback and suggestions to improve the software's features or direction.

36.
Concepts: proposing usability improvements, suggesting usability features
- Users or designers propose changes to make the software more user-friendly.
- Users suggest new features, improvements, or usability enhancements to better accommodate user needs.

37.
Concepts: requesting new features, requesting features/improvements, suggesting functionalities
- Users make specific requests for new features or improvements in the software.
- Users make requests or suggestions for new features and improvements they would like to see.
- Users request or suggest specific functionalities to benefit their work or improve the software's usability.

38.
Concepts: feedback planning, planning for user feedback
- Designers plan to seek further user feedback before progressing with development.
- Designers highlight plans for collecting user feedback to enhance future iterations of the software.

39.
Concepts: accepting suggestions, accepting user feedback
- Designers accept user suggestions and agree to incorporate them in future updates.
- Designers confirm acceptance of user suggestions or feedback and agree on implementation or necessity.

40.
Concepts: encouraging interaction, encouraging community feedback
- The designer encourages users to interact, provide suggestions, and offer feedback within the community.
- Designers foster community participation and encourage feedback for future improvements.

41.
Concepts: encouraging feedback, soliciting feedback, soliciting community feedback
- Designers encourage users to provide feedback and suggestions to improve the software.
- Designers solicit feedback, suggestions, or issue reports from users to enhance the software.
- Designers solicit feedback, suggestions, or issue reports from the community about the software.

42.
Concepts: prompting user feedback, inviting feature requests/feedback, seeking user input
- Designers actively prompt users to offer suggestions or feedback for improvement.
- Designers invite users to suggest features or provide feedback for future updates.
- Designers invite users to give input or interact with the design process by providing feedback or suggestions.

43.
Concepts: integrating user feedback
- Processes where user feedback is collected, considered, and incorporated into design decisions.
- Instances where user feedback is acknowledged and incorporated into the design process.

44.
Concepts: acknowledging communications
- Users acknowledge or react positively to communications without adding substantial input.
- A designer confirms or acknowledges receipt or recognition of previous communications or assistance without additional details.

45.
Concepts: expressing gratitude
- Expressing gratitude using textual and emoji representations.
- Users or designers express thanks or acknowledgment for work or contributions from others.

46.
Concepts: responding to users
- Instances where designers actively respond to user queries, feedback, or suggestions, indicating attentiveness.
- Designers respond to user feedback or queries.

47.
Concepts: suggesting alternatives
- Who proposes or discusses alternatives, How: Mentions secondary possibilities or compatible practices.
- Designers or users suggest alternative solutions or approaches to address problems.
===
---
Definitions for each code (47 in total):
1.
Concepts: notifying updates, informing about updates
Relationship: Synonymous actions
Criteria: The team informs the community about changes or new updates to the software.
Phrase: notifying updates

2.
Concepts: announcing new versions, announcing software releases
Relationship: Synonymous actions
Criteria: The team announces the release and details of new software versions.
Phrase: announcing new versions

3.
Concepts: introduce update content, introducing new features
Relationship: Synonymous actions
Criteria: The team introduces upcoming features and enhancements of the project.
Phrase: introduce update content

4.
Concepts: listing upcoming features, outlining future updates
Relationship: Synonymous actions
Criteria: The team lists features and improvements planned for future updates.
Phrase: listing upcoming features

5.
Concepts: planning updates, update timeline sharing
Relationship: Correlated actions
Criteria: Designers provide information about upcoming updates and their timelines.
Phrase: planning updates

6.
Concepts: announcing software updates, communication of updates
Relationship: Synonymous actions
Criteria: Designers provide information about upcoming updates and new features.
Phrase: announcing software updates

7.
Concepts: announcement, community update
Relationship: Synonymous actions
Criteria: The designer posts updates or announces new developments, downloads, or releases.
Phrase: community update 

8.
Concepts: inquiring about updates, update status inquiry
Relationship: Synonymous actions
Criteria: Users inquire about recent or upcoming updates.
Phrase: inquiring about updates

9.
Concepts: providing status updates, communicating progress
Relationship: Synonymous actions
Criteria: The team provides updates on the status of certain features or projects.
Phrase: providing status updates

10.
Concepts: sharing development updates, sharing development plans
Relationship: Correlated actions
Criteria: The team shares updates on current and future development activities.
Phrase: sharing development updates

11.
Concepts: scheduling updates, providing update timelines
Relationship: Synonymous actions
Criteria: The team provides a schedule or timeline for upcoming software updates or releases.
Phrase: scheduling updates

12.
Concepts: feature details, explaining features
Relationship: Synonymous actions
Criteria: Designers provide specific details about the features or capabilities of the software.
Phrase: explaining features

13.
Concepts: feature guidance, providing usage instructions
Relationship: Synonymous actions
Criteria: The designer instructs users on how to use or activate particular features of the software.
Phrase: providing usage instructions

14.
Concepts: managing user expectations, setting timeline expectations
Relationship: Correlated actions
Criteria: Instances where designers set realistic expectations about feature availability and timelines.
Phrase: managing user expectations

15.
Concepts: confirming future features, future feature announcement
Relationship: Correlated actions
Criteria: Designers confirm that certain features will be implemented in upcoming updates or eventually.
Phrase: confirming future features

16.
Concepts: development prioritization, prioritizing feature development
Relationship: Synonymous actions
Criteria: Instances where designers discuss the prioritization of different features or sections to be developed.
Phrase: development prioritization

17.
Concepts: plan future update, planning future priorities
Relationship: Correlated actions
Criteria: A designer plans or outlines specific updates to be included in future releases of the software.
Phrase: planning future priorities

18.
Concepts: discussing future plans, sharing future directions
Relationship: Correlated actions
Criteria: Discussions about potential future developments and directions for the product.
Phrase: sharing future directions

19.
Concepts: inquiring about access, inquiring about downloads
Relationship: Synonymous actions
Criteria: Users ask how to access or download the software.
Phrase: inquiring about access

20.
Concepts: requesting guidance, requesting technical support, requesting usage support
Relationship: Synonymous actions
Criteria: Users request instructions or guidance on how to use specific features of the software.
Phrase: requesting guidance

21.
Concepts: inquiring about usage, application version inquiry
Relationship: Correlated actions
Criteria: Users inquire about how to use specific versions of the software.
Phrase: inquiring about usage

22.
Concepts: user experience and impact, sharing classroom experiences
Relationship: Correlated actions
Criteria: Users sharing their experiences and the impact of the software on their teaching or learning.
Phrase: sharing classroom experiences

23.
Concepts: teacher, identifying teachers
Relationship: Synonymous actions
Criteria: Identifying users as teachers, often within the context of a discussion or request about educational use.
Phrase: identifying teachers

24.
Concepts: sharing teaching background, provide teacher background
Relationship: Synonymous actions
Criteria: Users share their teaching backgrounds and experiences.
Phrase: sharing teaching background

25.
Concepts: inquiring about background, ask about user's professional background
Relationship: Synonymous actions
Criteria: A designer asks users for information about their professional background or teaching experience.
Phrase: inquiring about background

26.
Concepts: troubleshooting, inquiring about problems
Relationship: Correlated actions
Criteria: Users or designers discuss problems encountered during software use and possible troubleshooting methods.
Phrase: troubleshooting

27.
Concepts: requesting clarification, requesting clarification on feedback
Relationship: Synonymous actions
Criteria: Users or designers seek clarification or additional details regarding feedback or requests.
Phrase: requesting clarification

28.
Concepts: private user communication, requesting private communication
Relationship: Synonymous actions
Criteria: A request for private communication to understand user needs.
Phrase: requesting private communication

29.
Concepts: appreciate support from users, supporting the community
Relationship: Correlated actions
Criteria: Appreciating the support and collaboration from the community.
Phrase: supporting the community

30.
Concepts: communicating with emojis, use non verbal communication
Relationship: Synonymous actions
Criteria: Users use emojis to convey emotions or reactions.
Phrase: using non-verbal communication

31.
Concepts: greeting community, reciprocate greeting
Relationship: Synonymous actions
Criteria: Users or designers greet the community.
Phrase: greeting community

32.
Concepts: praising software, expressing satisfaction, complimenting usability
Relationship: Correlated actions
Criteria: Users praise the software for its usability, effectiveness, and impact.
Phrase: expressing satisfaction

33.
Concepts: approving features, appreciating features
Relationship: Synonymous actions
Criteria: Users express approval or positive feedback about software features.
Phrase: appreciating features

34.
Concepts: sharing positive feedback, sharing user experiences
Relationship: Correlated actions
Criteria: Sharing positive feedback or experiences with the software.
Phrase: sharing user experiences

35.
Concepts: communicating user feedback, providing feedback and suggestions
Relationship: Synonymous actions
Criteria: Users provide feedback or communicate their experiences and suggestions for the software.
Phrase: providing feedback and suggestions

36.
Concepts: proposing usability improvements, suggesting usability features
Relationship: Synonymous actions
Criteria: Users or designers propose changes to make the software more user-friendly.
Phrase: proposing usability improvements

37.
Concepts: requesting new features, requesting features/improvements, suggesting functionalities
Relationship: Synonymous actions
Criteria: Users make specific requests for new features or improvements in the software.
Phrase: requesting new features

38.
Concepts: feedback planning, planning for user feedback
Relationship: Correlated actions
Criteria: Designers plan to seek further user feedback before progressing with development.
Phrase: planning for user feedback

39.
Concepts: accepting suggestions, accepting user feedback
Relationship: Synonymous actions
Criteria: Designers accept user suggestions and agree to incorporate them in future updates.
Phrase: accepting user feedback

40.
Concepts: encouraging interaction, encouraging community feedback
Relationship: Synonymous actions
Criteria: The designer encourages users to interact, provide suggestions, and offer feedback within the community.
Phrase: encouraging community feedback

41.
Concepts: encouraging feedback, soliciting feedback, soliciting community feedback
Relationship: Synonymous actions
Criteria: Designers encourage users to provide feedback and suggestions to improve the software.
Phrase: soliciting feedback

42.
Concepts: prompting user feedback, inviting feature requests/feedback, seeking user input
Relationship: Synonymous actions
Criteria: Designers actively prompt users to offer suggestions or feedback for improvement.
Phrase: prompting user feedback

43.
Concepts: integrating user feedback
Relationship: N/A
Criteria: Processes where user feedback is collected, considered, and incorporated into design decisions.
Phrase: integrating user feedback

44.
Concepts: acknowledging communications
Relationship: N/A
Criteria: Users acknowledge or react positively to communications without adding substantial input.
Phrase: acknowledging communications

45.
Concepts: expressing gratitude
Relationship: N/A
Criteria: Expressing gratitude using textual and emoji representations.
Phrase: expressing gratitude

46.
Concepts: responding to users
Relationship: N/A
Criteria: Instances where designers actively respond to user queries, feedback, or suggestions.
Phrase: responding to users

47.
Concepts: suggesting alternatives
Relationship: N/A
Criteria: Designers or users suggest alternative solutions or approaches to address problems.
Phrase: suggesting alternatives