You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (47 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
47. 
Concepts: {Repeat the input 47}
Relationship: {What is logical relationship between concepts in code 47, or N/A if not applicable}
Criteria: {Who did what, and how for code 47}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: using emojis for expression, using non-verbal communication
- Users use emojis to convey sentiment.
- Users use emojis or other non-verbal forms of communication to express emotions or reactions.

2.
Concepts: express appreciation, recognizing designer effort
- Users express appreciation for the designer's work.
- Users acknowledge and appreciate the efforts of designers.

3.
Concepts: expressing gratitude, acknowledging assistance
- Users or designers express gratitude or acknowledgment for contributions or work done.
- Users or designers express acknowledgment or gratitude for assistance.

4.
Concepts: greeting, welcoming users
- Users and designers greet each other.
- Designers welcome or greet users back.

5.
Concepts: apologizing for disturbances, apologies and politeness
- Designers apologize for any inconvenience caused to users.
- Expressions of politeness, apologies, or acknowledgment of potential inconvenience by the designers.

6.
Concepts: appreciating features, expressing user satisfaction, providing positive feedback, complimenting the software
- Users express appreciation for software features.
- Users express satisfaction with the software or its features.
- Users provide positive reviews or feedback about the software.
- Users compliment the software or its features.

7.
Concepts: comparative feedback, comparing with other software
- A user provides comparative feedback about the software.
- Users compare the software favorably to other similar applications.

8.
Concepts: ease of use, comment on software usability
- Discussions related to the ease of use and user-friendliness of the software.
- Users comment on the ease of use and practicality of the software.

9.
Concepts: share classroom experiences, share positive classroom experience, share user experience and impact
- A user shares their classroom experiences with the software.
- Users share positive experiences using the software in the classroom and describe students' positive responses.
- Users share their experiences and the impact of the software on their teaching or learning.

10.
Concepts: inquiry, seek clarification
- Users ask questions to seek information or clarification.
- Users ask questions to clarify a situation or problem.

11.
Concepts: inquire about specific platform, inquire about platform availability and updates
- Users inquire about the availability or details of specific platform versions.
- Users inquire about the availability and updates of the software on different platforms.

12.
Concepts: inquiring about updates, inquiring about update status
- Users inquire about upcoming, recent, or the timeline of updates.
- Users inquire about the status of an update.

13.
Concepts: download inquiry, inquire about software access
- Instances where inquiries about downloading the software are made.
- Users inquire about how to access or download the software.

14.
Concepts: request information, user interaction inquiry
- Users request information or help regarding the use or functionalities of the software.
- User inquires about how to interact with or access the software.

15.
Concepts: proposing new features, making feature suggestions
- Users propose or request new features for the software.
- Users or designers make suggestions for software improvements or new features.

16.
Concepts: request features, requesting additional features
- Users request new features or improvements.
- Users make detailed requests for additional features.

17.
Concepts: suggesting usability enhancements, identifying and suggesting usability improvements
- Users suggest improvements to enhance user experience or usability.
- Users identify usability issues and suggest improvements.

18.
Concepts: provide user feedback, providing feedback and suggestions
- Users provide feedback or suggestions to improve the software.
- Users provide feedback and suggestions on the software's features and development direction.

19.
Concepts: justifying feature requests, user input with justifications
- Users provide reasons or justifications for their feature requests.
- A user provides input or feedback with justifications.

20.
Concepts: intro to update content, providing update previews
- Designers introduce the content of upcoming updates.
- Designers provide previews of upcoming updates and features.

21.
Concepts: announcing new version releases, announcing software releases and updates
- Designers inform the community about the release of new versions and their updates.
- Designers announce software releases, updates, new versions, and provide download information.

22.
Concepts: communicating updates, announcing update schedules
- Designers communicate updates, release schedules, and new features to users.
- Designers inform the community about the timing and details of version updates.

23.
Concepts: announcing planned updates, announcing new features and updates, announcing upcoming features
- Designers share information and announce plans for future updates and features.
- Designers announce new features and provide information about upcoming updates.
- Designers list, explain, and announce features that will be included in upcoming updates.

24.
Concepts: announce feature update, announcing component changes and additions, communicate new features and improvements
- Designers announce new features, updates, or bug fixes.
- Designers announce changes to existing components and new features added to the software.
- The designer communicates new features and improvements in an update.

25.
Concepts: development update, providing product updates
- Information shared by designers about the current status, updates, and future plans for the Physics Lab software.
- Designers provide information about updates or technical changes to the Physics Lab software.

26.
Concepts: detailed update notes, describing updates, providing technical details
- Designers provide detailed notes on software updates.
- Designers provide detailed overviews and descriptions of new updates.
- Designers provide detailed technical information about updates and new version features.

27.
Concepts: commit to future update, confirming future features
- The designer commits to including a feature in a future update.
- Designers confirm and affirm that planned features will be included in future updates.

28.
Concepts: provide progress update, communicating development progress, sharing development progress
- Designers provide updates on the progress of development.
- Designers provide progress reports and communicate development progress and future plans.
- Designers share updates and communicate progress on software development.

29.
Concepts: updating on the release process, updating on feature development
- Designers discuss and provide updates about the process of releasing a product.
- Designers provide and share information about current feature development and updates.

30.
Concepts: discussing feature expansion, discussing feature development
- Designers discuss the expansion and implementation of features in future updates.
- Designers discuss the development and implementation of specific features.

31.
Concepts: discussing user interface usability, making interface layout decisions
- Designers discuss aspects of the user interface and usability.
- Designers and users discuss decision-making regarding feature development priorities and interface layout.

32.
Concepts: discussing project planning, discussing future planning
- Designers discuss planning and timelines for future projects and updates.
- Designers discuss future planning, including design plans and long-term strategies for features.

33.
Concepts: explain the plans, explaining design rationale
- A designer explains the rationale behind certain plans.
- Designers explain the rationale behind design and development decisions.

34.
Concepts: introduce feature functions, explaining features
- A designer introduces the functions of a feature.
- Designers explain features and functionalities, often providing examples for clarification.

35.
Concepts: provide access information, provide download instructions
- Designers provide information on how to access or download the software.
- Designers provide instructions or solutions on how to download the software.

36.
Concepts: user support, providing technical support
- Assistance and support provided by designers to help users effectively use the product.
- Designers provide technical assistance, support, and guidance to users.

37.
Concepts: explaining feature limitations, mentioning platform limitations
- Designers explain the current limitations of features and versions.
- Designers mention limitations and constraints of the software platform.

38.
Concepts: provide community update, making community announcements
- Designers provide updates or announcements to the community.
- Designers make general announcements to the community.

39.
Concepts: announcement, announce resource availability
- A designer makes an announcement about updates or resources.
- A designer announces the availability of resources or information.

40.
Concepts: involving users in design, facilitating user-designer interaction
- Designers actively involve users in the design process.
- Users and designers engage in collaborative interactions that contribute to the design process.

41.
Concepts: integrating user feedback, implementing feedback loops
- Designers acknowledge, address, and incorporate user feedback into the design process.
- Designers solicit, consider, and implement user feedback in design decisions.

42.
Concepts: acknowledging user suggestions, acknowledgment and implementation
- Designers acknowledge user suggestions and commit to future updates.
- Designers acknowledging user feedback and discussing plans to implement suggested features.

43.
Concepts: respond to user queries, responding to inquiries, respond to user feedback
- Designers respond to user feedback or queries.
- Designers respond to user inquiries or questions.
- Designers respond to user queries, feedback, or suggestions.

44.
Concepts: encouraging user suggestions, encouraging community feedback, encouraging user feedback
- Designers motivate users to provide suggestions or feedback.
- Designers motivate users to share feedback and suggestions to improve the software.
- Designers encourage and invite users to provide feedback and report issues.

45.
Concepts: seeking user input, seeking user feedback, gathering user input, soliciting user feedback
- Designers seek input or suggestions from users.
- Designers actively seek or receive feedback from users on features and updates.
- Designers gather input and feedback from users.
- Designers ask users for feedback or suggestions, including specific or user experience-related feedback.

46.
Concepts: feature request invitation, requesting community suggestions
- Designers invite users to suggest new features or improvements.
- Designers invite users to participate by providing suggestions for improvements.

47.
Concepts: user background inquiry, inquiring about user identity
- A designer inquires about a user's background.
- Designers inquire about the user's identity or professional background.
===
---
Definitions for each code (47 in total):
1.
Concepts: using emojis for expression, using non-verbal communication
Relationship: Both concepts involve non-verbal methods of conveying emotions or reactions.
Criteria: Users use emojis or other non-verbal forms of communication to express emotions or reactions.
Phrase: Using non-verbal communication

2.
Concepts: express appreciation, recognizing designer effort
Relationship: Both concepts involve acknowledging and valuing the work of designers.
Criteria: Users express appreciation and recognize the efforts of designers.
Phrase: Recognizing designer effort

3.
Concepts: expressing gratitude, acknowledging assistance
Relationship: Both concepts involve showing thankfulness for help or contributions.
Criteria: Users or designers express gratitude or acknowledgment for assistance or contributions.
Phrase: Acknowledging assistance

4.
Concepts: greeting, welcoming users
Relationship: Both concepts involve initial interactions that make users feel acknowledged.
Criteria: Users and designers greet and welcome each other.
Phrase: Welcoming users

5.
Concepts: apologizing for disturbances, apologies and politeness
Relationship: Both concepts involve expressions of politeness and apologies for any inconvenience.
Criteria: Designers apologize for disturbances and express politeness.
Phrase: Apologizing for disturbances

6.
Concepts: appreciating features, expressing user satisfaction, providing positive feedback, complimenting the software
Relationship: All concepts involve users expressing positive sentiments about the software.
Criteria: Users express appreciation, satisfaction, and provide positive feedback about the software and its features.
Phrase: Expressing user satisfaction

7.
Concepts: comparative feedback, comparing with other software
Relationship: Both concepts involve users comparing the software to other applications.
Criteria: Users provide comparative feedback by comparing the software with other similar applications.
Phrase: Providing comparative feedback

8.
Concepts: ease of use, comment on software usability
Relationship: Both concepts involve discussions about the user-friendliness of the software.
Criteria: Users discuss and comment on the ease of use and usability of the software.
Phrase: Commenting on usability

9.
Concepts: share classroom experiences, share positive classroom experience, share user experience and impact
Relationship: All concepts involve users sharing their experiences and the impact of the software in educational settings.
Criteria: Users share their classroom experiences and the positive impact of the software on teaching or learning.
Phrase: Sharing classroom experiences

10.
Concepts: inquiry, seek clarification
Relationship: Both concepts involve users asking questions to gain information or clarity.
Criteria: Users ask questions to seek information or clarification.
Phrase: Seeking clarification

11.
Concepts: inquire about specific platform, inquire about platform availability and updates
Relationship: Both concepts involve users asking about the availability and updates of the software on different platforms.
Criteria: Users inquire about the availability and updates of the software on specific platforms.
Phrase: Inquiring about platform availability

12.
Concepts: inquiring about updates, inquiring about update status
Relationship: Both concepts involve users asking about the timeline and status of updates.
Criteria: Users inquire about the timeline and status of upcoming or recent updates.
Phrase: Inquiring about update status

13.
Concepts: download inquiry, inquire about software access
Relationship: Both concepts involve users asking about how to access or download the software.
Criteria: Users inquire about how to access or download the software.
Phrase: Inquiring about software access

14.
Concepts: request information, user interaction inquiry
Relationship: Both concepts involve users requesting information or help regarding the software.
Criteria: Users request information or help regarding the use or functionalities of the software.
Phrase: Requesting information

15.
Concepts: proposing new features, making feature suggestions
Relationship: Both concepts involve users suggesting new features for the software.
Criteria: Users propose or request new features for the software.
Phrase: Proposing new features

16.
Concepts: request features, requesting additional features
Relationship: Both concepts involve users making detailed requests for new features.
Criteria: Users request new features or improvements.
Phrase: Requesting additional features

17.
Concepts: suggesting usability enhancements, identifying and suggesting usability improvements
Relationship: Both concepts involve users identifying issues and suggesting improvements for usability.
Criteria: Users suggest improvements to enhance user experience or usability.
Phrase: Suggesting usability enhancements

18.
Concepts: provide user feedback, providing feedback and suggestions
Relationship: Both concepts involve users providing feedback and suggestions for the software.
Criteria: Users provide feedback and suggestions to improve the software.
Phrase: Providing feedback and suggestions

19.
Concepts: justifying feature requests, user input with justifications
Relationship: Both concepts involve users providing reasons for their feature requests.
Criteria: Users provide reasons or justifications for their feature requests.
Phrase: Justifying feature requests

20.
Concepts: intro to update content, providing update previews
Relationship: Both concepts involve designers introducing and previewing upcoming updates.
Criteria: Designers introduce the content and provide previews of upcoming updates.
Phrase: Providing update previews

21.
Concepts: announcing new version releases, announcing software releases and updates
Relationship: Both concepts involve designers informing the community about new software versions and updates.
Criteria: Designers announce new versions, updates, and provide download information.
Phrase: Announcing software releases

22.
Concepts: communicating updates, announcing update schedules
Relationship: Both concepts involve designers informing users about updates and their schedules.
Criteria: Designers communicate updates, release schedules, and new features to users.
Phrase: Announcing update schedules

23.
Concepts: announcing planned updates, announcing new features and updates, announcing upcoming features
Relationship: All concepts involve designers sharing information about future updates and features.
Criteria: Designers announce new features and provide information about upcoming updates.
Phrase: Announcing planned updates

24.
Concepts: announce feature update, announcing component changes and additions, communicate new features and improvements
Relationship: All concepts involve designers announcing changes and new features in the software.
Criteria: Designers announce new features, updates, and changes to existing components.
Phrase: Announcing feature updates

25.
Concepts: development update, providing product updates
Relationship: Both concepts involve designers sharing information about the current status and future plans for the software.
Criteria: Designers provide information about updates and technical changes to the software.
Phrase: Providing product updates

26.
Concepts: detailed update notes, describing updates, providing technical details
Relationship: All concepts involve designers providing detailed information about software updates.
Criteria: Designers provide detailed notes and technical information about updates and new features.
Phrase: Providing detailed update notes

27.
Concepts: commit to future update, confirming future features
Relationship: Both concepts involve designers committing to and confirming future features.
Criteria: Designers commit to including and confirm future features in updates.
Phrase: Confirming future features

28.
Concepts: provide progress update, communicating development progress, sharing development progress
Relationship: All concepts involve designers sharing updates on the progress of software development.
Criteria: Designers provide updates and communicate progress on software development.
Phrase: Sharing development progress

29.
Concepts: updating on the release process, updating on feature development
Relationship: Both concepts involve designers providing updates about the release process and feature development.
Criteria: Designers provide updates on the release process and current feature development.
Phrase: Updating on release process

30.
Concepts: discussing feature expansion, discussing feature development
Relationship: Both concepts involve designers discussing the expansion and development of features.
Criteria: Designers discuss the expansion and development of features in future updates.
Phrase: Discussing feature development

31.
Concepts: discussing user interface usability, making interface layout decisions
Relationship: Both concepts involve discussions about the user interface and usability decisions.
Criteria: Designers and users discuss user interface usability and make layout decisions.
Phrase: Discussing interface usability

32.
Concepts: discussing project planning, discussing future planning
Relationship: Both concepts involve discussions about planning and timelines for future projects.
Criteria: Designers discuss planning and timelines for future projects and updates.
Phrase: Discussing future planning

33.
Concepts: explain the plans, explaining design rationale
Relationship: Both concepts involve designers explaining their plans and the rationale behind them.
Criteria: Designers explain the rationale behind design and development decisions.
Phrase: Explaining design rationale

34.
Concepts: introduce feature functions, explaining features
Relationship: Both concepts involve designers introducing and explaining the functions of features.
Criteria: Designers introduce and explain the functions of features.
Phrase: Explaining features

35.
Concepts: provide access information, provide download instructions
Relationship: Both concepts involve designers providing information on how to access or download the software.
Criteria: Designers provide information and instructions on how to access or download the software.
Phrase: Providing access information

36.
Concepts: user support, providing technical support
Relationship: Both concepts involve designers providing assistance and support to users.
Criteria: Designers provide technical assistance and support to users.
Phrase: Providing technical support

37.
Concepts: explaining feature limitations, mentioning platform limitations
Relationship: Both concepts involve designers explaining the limitations of features and platforms.
Criteria: Designers explain the current limitations of features and software platforms.
Phrase: Explaining feature limitations

38.
Concepts: provide community update, making community announcements
Relationship: Both concepts involve designers providing updates and announcements to the community.
Criteria: Designers provide updates and make announcements to the community.
Phrase: Making community announcements

39.
Concepts: announcement, announce resource availability
Relationship: Both concepts involve designers making announcements about updates or resources.
Criteria: Designers announce updates and the availability of resources.
Phrase: Announcing resource availability

40.
Concepts: involving users in design, facilitating user-designer interaction
Relationship: Both concepts involve designers engaging users in the design process.
Criteria: Designers involve users and facilitate interactions that contribute to the design process.
Phrase: Facilitating user-designer interaction

41.
Concepts: integrating user feedback, implementing feedback loops
Relationship: Both concepts involve designers incorporating user feedback into the design process.
Criteria: Designers acknowledge, address, and incorporate user feedback into design decisions.
Phrase: Implementing feedback loops

42.
Concepts: acknowledging user suggestions, acknowledgment and implementation
Relationship: Both concepts involve designers acknowledging user suggestions and discussing implementation plans.
Criteria: Designers acknowledge user suggestions and discuss plans to implement them.
Phrase: Acknowledging user suggestions

43.
Concepts: respond to user queries, responding to inquiries, respond to user feedback
Relationship: All concepts involve designers responding to user feedback and inquiries.
Criteria: Designers respond to user queries, feedback, and suggestions.
Phrase: Responding to user queries

44.
Concepts: encouraging user suggestions, encouraging community feedback, encouraging user feedback
Relationship: All concepts involve designers motivating users to provide feedback and suggestions.
Criteria: Designers encourage users to provide feedback and suggestions to improve the software.
Phrase: Encouraging user feedback

45.
Concepts: seeking user input, seeking user feedback, gathering user input, soliciting user feedback
Relationship: All concepts involve designers actively seeking and gathering feedback from users.
Criteria: Designers seek and gather input and feedback from users on features and updates.
Phrase: Seeking user input

46.
Concepts: feature request invitation, requesting community suggestions
Relationship: Both concepts involve designers inviting users to suggest new features or improvements.
Criteria: Designers invite users to provide suggestions for new features or improvements.
Phrase: Requesting community suggestions

47.
Concepts: user background inquiry, inquiring about user identity
Relationship: Both concepts involve designers inquiring about the background or identity of users.
Criteria: Designers inquire about the user's background or professional identity.
Phrase: Inquiring about user background
---