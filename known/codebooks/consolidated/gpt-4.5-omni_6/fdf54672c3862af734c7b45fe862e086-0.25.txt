You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (8 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
8. 
Concepts: {Repeat the input 8}
Relationship: {What is logical relationship between concepts in code 8, or N/A if not applicable}
Criteria: {Who did what, and how for code 8}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: expressing gratitude and appreciation, appreciating and acknowledging community support
- Users and designers express gratitude and appreciation for each other's efforts and contributions.
- Designers appreciate and acknowledge the support from users, and users express support or encouragement for designers' efforts.

2.
Concepts: gratitude and encouragement, expressing gratitude and support
- Expressions of appreciation and encouragement that help build a positive community atmosphere.
- Participants express appreciation or gratitude to the community and respond to each other with acknowledgment or support.

3.
Concepts: requesting new features, requesting new features for physics lab
- Users request specific new features or additional experiments to be added to the software.
- Users request new features or improvements for the Physics Lab tool, including specific experiments.

4.
Concepts: discussing feature development, discussing future plans and improvements
- Designers discuss ongoing feature development, potential implementations, and improvements.
- Designers and developers discuss plans for future updates, improvements, and development strategies.

5.
Concepts: encouraging open communication and feedback, encouraging community participation and discussions
- Designers encourage open communication, feedback, and interaction from users.
- Designers encourage community participation and feedback, invite users to share suggestions, and encourage discussions within the community.

6.
Concepts: usage scenario inquiry, seeking clarification on requests
- Developers ask follow-up questions about the usage scenario.
- Developers ask follow-up questions to clarify and understand user requests.

7.
Concepts: seeking user feedback, taking and prioritizing user feedback
- Designers seek and gather user feedback and encourage input for future iterations.
- Designers take and prioritize user feedback for future updates.

8.
Concepts: offering user support, providing technical support
- Designers offer help, assistance, and ongoing support to users.
- Instances where designers or users provide technical support, address technical issues, or offer guidance.
===
---
Definitions for each code (8 in total):
1.
Concepts: expressing gratitude and appreciation, appreciating and acknowledging community support
Relationship: Both concepts involve mutual recognition and appreciation within the community.
Criteria: Users and designers express gratitude and appreciation for each other's efforts and contributions, acknowledging the support from one another.
Phrase: Expressing mutual appreciation

2.
Concepts: gratitude and encouragement, expressing gratitude and support
Relationship: Both concepts involve positive reinforcement and support within the community.
Criteria: Participants express appreciation or gratitude to the community and respond to each other with acknowledgment or support, fostering a positive atmosphere.
Phrase: Building a positive community atmosphere

3.
Concepts: requesting new features, requesting new features for physics lab
Relationship: Both concepts involve users asking for enhancements to the software.
Criteria: Users request specific new features or additional experiments to be added to the Physics Lab tool.
Phrase: Requesting new features

4.
Concepts: discussing feature development, discussing future plans and improvements
Relationship: Both concepts involve conversations about the evolution of the software.
Criteria: Designers and developers discuss ongoing feature development, potential implementations, and future updates or improvements.
Phrase: Discussing feature development

5.
Concepts: encouraging open communication and feedback, encouraging community participation and discussions
Relationship: Both concepts involve fostering an interactive and communicative community environment.
Criteria: Designers encourage open communication, feedback, and participation from users, inviting them to share suggestions and engage in discussions.
Phrase: Encouraging community interaction

6.
Concepts: usage scenario inquiry, seeking clarification on requests
Relationship: Both concepts involve developers seeking to understand user needs better.
Criteria: Developers ask follow-up questions to clarify and understand user requests and usage scenarios.
Phrase: Clarifying user requests

7.
Concepts: seeking user feedback, taking and prioritizing user feedback
Relationship: Both concepts involve gathering and acting on user input.
Criteria: Designers seek and gather user feedback, then prioritize it for future updates and iterations.
Phrase: Prioritizing user feedback

8.
Concepts: offering user support, providing technical support
Relationship: Both concepts involve providing assistance to users.
Criteria: Designers or users offer help, address technical issues, and provide ongoing support and guidance.
Phrase: Providing technical support
---