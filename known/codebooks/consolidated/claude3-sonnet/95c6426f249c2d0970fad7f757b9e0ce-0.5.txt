You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between sub-codes. If a sub-code includes another, use the broader one. If sub-codes are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (22 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {A sentence of consolidated criteria 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
22.
Relationship: {The logical relationship between sub-codes in code 22}
Criteria: {A sentence of consolidated criteria 22}
Label: {A consolidated label of code 22}
Category: {2-4 words for code 22}
---
~~~
1. modeling accuracy, simulation fidelity.
- Refers to the accuracy or fidelity of models or simulations.
- Quality, realism, or accuracy of simulated components and behaviors within the software.

2. equipment modeling, equipment simulation.
- Modeling or simulating the behavior and characteristics of physical equipment.
- Relates to the simulation or modeling of specific equipment or apparatus.

3. user satisfaction, usability praise.
- Expressions of satisfaction or positive sentiment towards the software.
- Positive feedback or praise regarding the usability or practicality of the software.

4. iterative design, iterative development.
- Refers to an iterative or cyclical approach to design or development.
- Refers to an iterative or step-by-step approach to development or design.

5. confirming common practice, acknowledging common practices.
- Verifying alignment with commonly accepted practices.
- Acknowledging or recognizing commonly accepted practices.

6. confirming diagram style, confirming visual representation.
- Confirming the visual style or representation to be used.
- Confirming the visual representation or style to be used.

7. feature list, listing new features.
- Listing or describing new features or functionality added to the software.
- Listing out new features being added or planned.

8. new feature, feature additions.
- Describes the introduction of new features or functionality in the software.
- Additions or enhancements to the software's features or functionality.

9. release process, development process.
- Describing or discussing the process of releasing a product update.
- Process involved in developing and releasing software versions.

10. version release, release availability.
- Information or notification about the release of a new software version.
- Indicating the availability or release of a new product version.

11. roadmap, product roadmap.
- Outlining the product roadmap or plans for future updates and features.
- Plans and timeline for upcoming product features or updates.

12. release plan, release timing.
- Outlining the plan or schedule for an upcoming release.
- Providing information about the timing or schedule of a product release.

13. technical request, technical feature request.
- Requests a specific technical feature, functionality or capability.
- Requests a specific technical feature or functionality.

14. update inquiry, release status inquiry.
- Inquiring about the availability or timing of a product update.
- Inquiring about the status or availability of a product release.

15. requesting user manual, requesting documentation.
- Requesting documentation or a user manual for the software.
- Requesting documentation or manuals for the software.

16. group work support, group functionality.
- Supporting capabilities for group work or collaboration.
- Functionality that supports group sharing or collaboration.

17. low quality, low quality image.
- Describes an image, visual or aspect of the software as being of low quality.
- Describes an image or visual as being of low quality.

18. encouraging development, motivation reinforcement.
- Encourages or motivates further development or progress.
- Provides positive reinforcement or motivation to continue development efforts.

19. positive feedback, appreciating idea.
- Expressing positive sentiment about an idea or suggestion.
- Expresses appreciation or positive sentiment towards an idea or suggestion.

20. community support, community bonding.
- Expresses support or a sense of community among users and developers.
- Expresses a sense of community, bonding or shared experience among users and developers.

21. call for feedback, feedback solicitation.
- Calls for or requests feedback, suggestions or input from users.
- Actively solicits feedback, suggestions or requirements from users.

22. feedback gathering, requirements gathering.
- Gathering feedback or input from users, including plans for future feedback collection.
- Gathering or collecting requirements or feedback from users or stakeholders.
===
---
Categories:
* Software Quality
* Design Process 
* Community Interaction
* Release Management

Definitions for each code (22 in total):

1. 
Relationship: Parallel concepts
Criteria: Refers to the accuracy, realism or fidelity of models, simulations or visual representations within the software.
Label: Simulation/Modeling Fidelity
Category: Software Quality

2.
Relationship: Sub-code of 1
Criteria: Modeling or simulating specific equipment, apparatus or physical components.  
Label: Equipment Modeling
Category: Software Quality

3. 
Relationship: Parallel concepts  
Criteria: Expresses user satisfaction, positive sentiment or praise towards the software's usability or practicality.
Label: User Satisfaction 
Category: Software Quality

4.
Relationship: Parallel concepts
Criteria: Refers to an iterative, cyclical or step-wise approach to design and development.
Label: Iterative Design Process
Category: Design Process

5.
Relationship: Parallel concepts
Criteria: Verifies alignment with or acknowledges commonly accepted practices.
Label: Confirming Standard Practices
Category: Design Process

6.
Relationship: Parallel concepts
Criteria: Confirms the visual style, representation or diagram conventions to be used.
Label: Confirming Visual Representations
Category: Design Process  

7.
Relationship: Sub-code of 8
Criteria: Lists or describes new features or functionality being added.
Label: Listing New Features
Category: Release Management

8.
Relationship: Broader concept
Criteria: Refers to additions or enhancements to the software's features or capabilities.
Label: New Feature Additions
Category: Release Management

9. 
Relationship: Parallel concepts
Criteria: Describes the processes involved in developing, testing and releasing software versions.
Label: Development/Release Processes
Category: Release Management

10.
Relationship: Parallel concepts
Criteria: Indicates the availability or release of a new software version.
Label: Version Release Notification
Category: Release Management  

11.
Relationship: Parallel concepts
Criteria: Outlines planned future updates, features or product roadmap.
Label: Product Roadmap Planning
Category: Release Management

12.
Relationship: Sub-code of 11  
Criteria: Provides timing or schedule details for an upcoming release.
Label: Release Scheduling
Category: Release Management

13.
Relationship: Parallel concepts
Criteria: Requests a specific technical feature, functionality or capability.
Label: Technical Feature Requests
Category: Community Interaction

14. 
Relationship: Parallel concepts
Criteria: Inquires about the status, availability or timing of a software release.
Label: Release Status Inquiries  
Category: Community Interaction

15.
Relationship: Parallel concepts
Criteria: Requests user documentation, guides or manuals for the software.
Label: Documentation Requests
Category: Community Interaction

16. 
Relationship: Parallel concepts
Criteria: Supports capabilities for group collaboration, sharing or co-working.
Label: Group Collaboration Support
Category: Software Quality

17.
Relationship: Parallel concepts
Criteria: Describes visuals, images or aspects as being of low quality.
Label: Low Quality Feedback
Category: Software Quality

18.
Relationship: Parallel concepts  
Criteria: Encourages, motivates or reinforces continued development efforts.
Label: Development Encouragement
Category: Community Interaction

19. 
Relationship: Parallel concepts
Criteria: Expresses appreciation, positive sentiment or feedback towards ideas or suggestions.
Label: Idea Appreciation
Category: Community Interaction  

20.
Relationship: Parallel concepts
Criteria: Expresses a sense of community, bonding or shared experience among users/developers.
Label: Community Bonding
Category: Community Interaction

21.
Relationship: Parallel concepts
Criteria: Actively solicits feedback, suggestions or requirements from users.
Label: Feedback Solicitation  
Category: Community Interaction

22. 
Relationship: Broader concept
Criteria: Gathering or collecting feedback, requirements or input from users/stakeholders.
Label: User Feedback Gathering
Category: Community Interaction

---