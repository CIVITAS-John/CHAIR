You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: clarifies version information, informing about software version
- The designer explains or clarifies the type or version of the software.
- A designer informs users about the current software version or update status.

2.
Concepts: describing component changes, communicating component adjustments
- The designer explains or describes changes to components or features.
- Designers communicate changes or adjustments to software components.

3.
Concepts: announcing feature updates, making developer announcements, announcing component updates
- Designer announces or discusses updates or changes to features.
- A designer makes a formal announcement about new features, updates, or changes.
- Designer informs about changes or updates to components.

4.
Concepts: informing users about updates, informing about platform updates
- A designer informs others about updates or changes.
- The designer informs the user about platform-specific releases or updates.

5.
Concepts: explaining updates, detailing software updates, providing software update information, providing detailed update information
- A designer explains updates, new features, or changes to the software.
- Designer details updates or changes to the software.
- Designer provides information about the software, updates, or features.
- A designer provides detailed information about new features or updates.

6.
Concepts: announcing updates to the community, informing the community about updates
- A designer makes a community-wide announcement or update.
- The designer informs the community about their progress or status.

7.
Concepts: explains new features, introduces new features
- Explaining new features, updates, or changes to the software.
- Providing examples or illustrations of new features or capabilities.

8.
Concepts: listing bug fixes, addressed previous issues
- The designer lists bug fixes or resolves issues.
- The designer addresses previous issues or bugs in the software.

9.
Concepts: confirming future feature, promising future features or developments
- Designer confirms or promises a future feature or update.
- A designer promises or hints at developing a feature or functionality in the future.

10.
Concepts: mentioning opportunities, suggesting future possibilities, sharing future possibilities
- A designer mentions opportunities for future development.
- A designer suggests future possibilities or opportunities.
- A designer shares possibilities or ideas for future development.

11.
Concepts: development plans, sharing development plans
- Sharing development plans or roadmaps with users.
- A designer shares their development plan or roadmap with the community.

12.
Concepts: demonstrates transparency, provides transparent updates
- Sharing information about the development process or design decisions.
- Designer provides clear and honest information about the development process or timeline.

13.
Concepts: provides progress updates, provides development updates
- A designer updates users on the progress of development.
- A designer provides information about the development progress or updates.

14.
Concepts: showing progress, answer about progress
- Designer shows progress or updates on the project.
- Designer shares updates or progress on a task or project.

15.
Concepts: communicate project timeline, outlining a project timeline
- The designer communicates the project timeline or roadmap for the online community.
- The designer explains the project timeline or roadmap, including milestones and deadlines.

16.
Concepts: providing an update timeline, providing android update timeline
- A designer provides a timeline for upcoming updates or releases.
- A designer provides an update on the Android version's release timeline.

17.
Concepts: timeline setting, setting a timeline for mechanics
- Setting timelines or priorities for specific features or mechanics.
- A designer sets a timeline for implementing specific mechanics or features.

18.
Concepts: outlining focus areas, outlining development priorities
- A designer outlines or explains the focus or priorities of a project.
- A designer outlines development priorities or goals.

19.
Concepts: offering workarounds, temporary solution
- A designer offers a workaround or alternative solution.
- Designer provides a temporary solution or workaround to a problem.

20.
Concepts: offering solutions, proposing solutions
- A designer offers a solution to a problem or issue.
- A designer proposes a solution, workaround, or idea.

21.
Concepts: discuss further interests, discussing future possibilities
- Designer discusses further interests or potential features.
- A designer mentions or discusses potential future experiments or features.

22.
Concepts: demonstrates openness, openness to alternatives
- A designer shows openness to new ideas or suggestions.
- A designer is open to alternative solutions or approaches.

23.
Concepts: explaining limitations, clarifies software limitations
- A designer explains the limitations or constraints of a feature or design.
- Designer clarifies software limitations or constraints.

24.
Concepts: suggests checking compatibility, informing about system compatibility
- Designer suggests checking the compatibility of the system.
- A designer informs about system compatibility issues.

25.
Concepts: providing ongoing support, providing user support
- Designer offers assistance or support to users.
- Designers engage with users to resolve issues or provide support.

26.
Concepts: offers help, offers immediate help
- A designer offers help or assistance to a user.
- A designer offers immediate assistance or support.

27.
Concepts: teach, provides guidance on feature use
- The designer provides teaching or instructional guidance, such as explaining how to use a feature.
- Designer provides guidance on using a feature or functionality.

28.
Concepts: shared resources, sharing resources
- A designer shares resources or information with users.
- Designers share resources or information with the community.

29.
Concepts: directs to resources, directing to resources
- Designer directs users to a specific resource or file.
- Directing users to resources, files, or information.

30.
Concepts: shares images, shared image of updates
- Share or request to share visual content, such as images.
- Sharing visual content, such as images, to illustrate updates or changes.

31.
Concepts: provides visual aids, using images for demonstration
- The designer shares a visual example to illustrate a point.
- A designer uses images to help demonstrate or explain a concept.

32.
Concepts: explaining complexity, explaining update complexity
- The designer explains or discusses the complexity of a feature or task.
- A designer explains the complexity or challenges of implementing an update.
===
Here are the definitions for each code:

---
1.
Concepts: clarifies version information, informing about software version
Relationship: The designer's explanation and information provision are closely related, as the explanation is a means of providing information.
Criteria: The designer explains or informs users about the software version or update status.
Phrase: Informing about software version.

2.
Concepts: describing component changes, communicating component adjustments
Relationship: The description and communication are two sides of the same coin, as the description is a means of communicating changes.
Criteria: The designer explains or communicates changes or adjustments to software components.
Phrase: Communicating component changes.

3.
Concepts: announcing feature updates, making developer announcements, announcing component updates
Relationship: The announcement and update are closely related, as the announcement is a means of informing about the update.
Criteria: The designer announces or discusses updates or changes to features or components.
Phrase: Announcing feature updates.

4.
Concepts: informing users about updates, informing about platform updates
Relationship: The information provision and update are closely related, as the provision is a means of informing about the update.
Criteria: The designer informs users about platform-specific releases or updates.
Phrase: Informing about platform updates.

5.
Concepts: explaining updates, detailing software updates, providing software update information, providing detailed update information
Relationship: The explanation, detailing, and provision of information are all related, as they provide different levels of detail about the update.
Criteria: The designer explains, details, or provides information about software updates or changes.
Phrase: Explaining software updates.

6.
Concepts: announcing updates to the community, informing the community about updates
Relationship: The announcement and information provision are closely related, as the announcement is a means of informing the community.
Criteria: The designer makes a community-wide announcement or informs the community about their progress or status.
Phrase: Announcing updates to the community.

7.
Concepts: explains new features, introduces new features
Relationship: The explanation and introduction are closely related, as the explanation is a means of introducing new features.
Criteria: The designer explains or introduces new features, updates, or changes to the software.
Phrase: Introducing new features.

8.
Concepts: listing bug fixes, addressed previous issues
Relationship: The listing and addressing are closely related, as the listing is a means of addressing previous issues.
Criteria: The designer lists bug fixes or resolves issues.
Phrase: Listing bug fixes.

9.
Concepts: confirming future feature, promising future features or developments
Relationship: The confirmation and promise are closely related, as the confirmation is a means of promising future features.
Criteria: The designer confirms or promises a future feature or update.
Phrase: Confirming future features.

10.
Concepts: mentioning opportunities, suggesting future possibilities, sharing future possibilities
Relationship: The mention, suggestion, and sharing are all related, as they provide different levels of detail about future possibilities.
Criteria: The designer mentions, suggests, or shares possibilities or ideas for future development.
Phrase: Mentioning future possibilities.

11.
Concepts: development plans, sharing development plans
Relationship: The plans and sharing are closely related, as the sharing is a means of providing development plans.
Criteria: The designer shares development plans or roadmaps with users.
Phrase: Sharing development plans.

12.
Concepts: demonstrates transparency, provides transparent updates
Relationship: The demonstration and provision are closely related, as the demonstration is a means of providing transparent updates.
Criteria: The designer shares information about the development process or design decisions.
Phrase: Demonstrating transparency.

13.
Concepts: provides progress updates, provides development updates
Relationship: The provision of progress and development updates are closely related, as they provide different levels of detail about the development process.
Criteria: The designer updates users on the progress of development or provides information about development progress.
Phrase: Providing progress updates.

14.
Concepts: showing progress, answer about progress
Relationship: The showing and answering are closely related, as the showing is a means of answering about progress.
Criteria: The designer shows progress or updates on the project.
Phrase: Showing progress.

15.
Concepts: communicate project timeline, outlining a project timeline
Relationship: The communication and outlining are closely related, as the communication is a means of outlining the project timeline.
Criteria: The designer communicates the project timeline or roadmap for the online community.
Phrase: Communicating project timeline.

16.
Concepts: providing an update timeline, providing android update timeline
Relationship: The provision of update and Android update timelines are closely related, as they provide different levels of detail about the update timeline.
Criteria: The designer provides a timeline for upcoming updates or releases.
Phrase: Providing update timeline.

17.
Concepts: timeline setting, setting a timeline for mechanics
Relationship: The setting of timelines and mechanics are closely related, as the setting is a means of prioritizing mechanics.
Criteria: The designer sets timelines or priorities for specific features or mechanics.
Phrase: Setting timeline for mechanics.

18.
Concepts: outlining focus areas, outlining development priorities
Relationship: The outlining of focus areas and development priorities are closely related, as they provide different levels of detail about the development priorities.
Criteria: The designer outlines or explains the focus or priorities of a project.
Phrase: Outlining development priorities.

19.
Concepts: offering workarounds, temporary solution
Relationship: The offering and solution are closely related, as the offering is a means of providing a temporary solution.
Criteria: The designer offers a workaround or alternative solution.
Phrase: Offering workarounds.

20.
Concepts: offering solutions, proposing solutions
Relationship: The offering and proposing are closely related, as the offering is a means of proposing solutions.
Criteria: The designer offers or proposes a solution, workaround, or idea.
Phrase: Offering solutions.

21.
Concepts: discuss further interests, discussing future possibilities
Relationship: The discussion and possibility are closely related, as the discussion is a means of exploring future possibilities.
Criteria: The designer discusses further interests or potential features.
Phrase: Discussing future possibilities.

22.
Concepts: demonstrates openness, openness to alternatives
Relationship: The demonstration and openness are closely related, as the demonstration is a means of showing openness.
Criteria: The designer shows openness to new ideas or suggestions.
Phrase: Demonstrating openness.

23.
Concepts: explaining limitations, clarifies software limitations
Relationship: The explanation and clarification are closely related, as the explanation is a means of clarifying limitations.
Criteria: The designer explains the limitations or constraints of a feature or design.
Phrase: Explaining software limitations.

24.
Concepts: suggests checking compatibility, informing about system compatibility
Relationship: The suggestion and information provision are closely related, as the suggestion is a means of informing about compatibility.
Criteria: The designer suggests checking the compatibility of the system.
Phrase: Informing about system compatibility.

25.
Concepts: providing ongoing support, providing user support
Relationship: The provision of ongoing and user support are closely related, as they provide different levels of detail about support.
Criteria: The designer offers assistance or support to users.
Phrase: Providing ongoing support.

26.
Concepts: offers help, offers immediate help
Relationship: The offering and help are closely related, as the offering is a means of providing help.
Criteria: The designer offers help or assistance to a user.
Phrase: Offering help.

27.
Concepts: teach, provides guidance on feature use
Relationship: The teaching and guidance are closely related, as the teaching is a means of providing guidance.
Criteria: The designer provides teaching or instructional guidance on using a feature.
Phrase: Teaching feature use.

28.
Concepts: shared resources, sharing resources
Relationship: The sharing and resources are closely related, as the sharing is a means of providing resources.
Criteria: The designer shares resources or information with users.
Phrase: Sharing resources.

29.
Concepts: directs to resources, directing to resources
Relationship: The direction and resources are closely related, as the direction is a means of providing resources.
Criteria: The designer directs users to a specific resource or file.
Phrase: Directing to resources.

30.
Concepts: shares images, shared image of updates
Relationship: The sharing and image are closely related, as the sharing is a means of providing an image.
Criteria: The designer shares visual content, such as images, to illustrate updates or changes.
Phrase: Sharing images.

31.
Concepts: provides visual aids, using images for demonstration
Relationship: The provision and demonstration are closely related, as the provision is a means of demonstrating using images.
Criteria: The designer uses images to help demonstrate or explain a concept.
Phrase: Providing visual aids.

32.
Concepts: explaining complexity, explaining update complexity
Relationship: The explanation and complexity are closely related, as the explanation is a means of explaining complexity.
Criteria: The designer explains the complexity or challenges of implementing an update.
Phrase: Explaining update complexity.