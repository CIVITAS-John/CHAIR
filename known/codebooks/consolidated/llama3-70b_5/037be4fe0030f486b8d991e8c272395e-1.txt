You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: provide context, contextualizing response, contextualization of question
- A user provides context or background information related to a question, issue, or topic.
- User provides context or background information to clarify a point.
- User provides context or background information about their question or issue.

2.
Concepts: past incident, sharing past experience
- When a user shares a past experience or incident related to the development or usage of a feature or product.
- User shares a past experience or incident related to the topic.

3.
Concepts: personal anecdote, story sharing
- A user shares a personal anecdote or experience.
- User shares a personal anecdote or experience related to the online community.

4.
Concepts: feature suggestion, design/feature suggestion, suggest new feature, propose another feature
- A user suggests a new feature or functionality for the software.
- A user suggests a new feature or functionality.
- A user suggests or requests a new feature or functionality.
- User proposes a new feature or suggests an improvement.

5.
Concepts: suggestions, feature improvement, design suggestion
- User or designer proposes a suggestion or idea for improvement.
- A designer or user suggests improving a feature or functionality.
- Users providing suggestions or ideas for design improvements

6.
Concepts: making suggestions, suggesting improvements, suggesting collaboration
- Designer or user makes a suggestion or proposal for the online community or software.
- User suggests improvements or new features for the online community or software.
- User suggests a new feature or collaboration with the designer or community.

7.
Concepts: request, user requests
- Users making specific requests or suggestions for new features or demos.
- Instances where users request new features or improvements.
- Specific features or improvements requested by users.

8.
Concepts: classroom setup, inquire about classroom conditions
- A designer inquires about the classroom setup or environment.
- A designer inquires about the conditions or environment of a classroom.

9.
Concepts: ask teachers' needs, ask for teachers' help
- Designers ask about or seek input from teachers.
- A designer asks for help or input from teachers.

10.
Concepts: user background inquiry, inquire about user's background
- Designer inquires about a user's background or context.
- A designer asks about a user's background or experience.

11.
Concepts: needs clarification, ask follow-up question on user request, clarifying questions, clarification question
- Designer asks for more information about user needs or requirements.
- A designer asks for more information or clarification about a user's request.
- User or designer asks a clarifying question about a request or idea.
- The designer asks a user for clarification about an issue, problem, or question.

12.
Concepts: ask about user needs, designer inquiry, trying to understand the needs
- A designer inquires about user needs or requirements.
- Instances where designers seek input or clarification from users to better understand their needs.
- Designer asks for clarification or understanding about a user's needs.

13.
Concepts: respond to user, developer response
- Designer responds to a user's question or concern.
- A designer responds to a user's question or concern, providing clarification or assistance.

14.
Concepts: response to question, respond to initial question
- A user or designer responds to a question or inquiry.
- The designer responds to an initial question or inquiry from a user.

15.
Concepts: accepting suggestion, agree to implement suggestion
- Agreeing to incorporate a user's suggestion or idea into the software.
- Designers agreeing to implement user suggestions or requests.

16.
Concepts: feedback, designer response, reaction to feedback
- A designer responds to user feedback or suggestions.
- Instances where designers respond to user feedback or suggestions.
- Instances where designers respond to user feedback or queries.
- Designer reacts to user feedback or suggestions.

17.
Concepts: taking feedback, considering feedback
- Designer takes feedback, acknowledges user input, and considers it for future updates.
- Designer considers or takes into account user feedback, suggestions, or opinions.

18.
Concepts: elicit feedback, gather user feedback
- Soliciting feedback or opinions from users through open-ended questions.
- Soliciting feedback or opinions from users about their experience.

19.
Concepts: feedback solicitation, criteria: explicit request for user feedback or suggestions; label: feedback solicitation
- Soliciting feedback, suggestions, or ideas from users
- Explicit request for user feedback or suggestions; Label: Feedback Solicitation

20.
Concepts: feedback loop, community feedback loop
- Processes where user feedback is solicited and incorporated into design decisions.
- The process of collecting, considering, and implementing user feedback.
- Instances where users provide feedback on the software and designers respond to it.

21.
Concepts: provide specific feedback, user input/feedback/suggestion with justification
- User provides specific feedback or suggestions.
- A user provides input, feedback, or suggestion with justification or explanation.

22.
Concepts: suggestion and feedback, user feedback and suggestions
- Users providing suggestions or feedback on the software's features or development direction.
- Instances where users provide feedback or suggestions about the software.
- Users providing feedback or suggestions on features and improvements for the software.
- Users providing feedback or suggestions to improve the software.

23.
Concepts: encouraging feedback, encouragement of user feedback, encouraging interaction, encourage feedback
- A designer encourages users to provide feedback or suggestions.
- Instances where designers encourage users to provide suggestions or feedback.
- Designer encourages users to interact, provide feedback, or participate in the development process.
- The designer explicitly asks users for feedback, suggestions, or ideas for improving the software.

24.
Concepts: invite feedback, soliciting feedback, solicit suggestions, user feedback request, seeking feedback
- A designer invites feedback or suggestions from users.
- Designer solicits or encourages suggestions or ideas from users.
- Designer solicits suggestions or ideas from users.
- Designers asking users for feedback or suggestions.
- Designer or user seeks feedback or input from others.

25.
Concepts: problem diagnosis, analyzing the problem
- Designer provides a diagnosis or explanation for a problem or issue.
- A designer analyzes or troubleshot a problem or issue.

26.
Concepts: troubleshooting, engage in troubleshooting
- Designer troubleshoots issues or asks for feedback about problems encountered.
- Users and designers engaging in troubleshooting or problem-solving.

27.
Concepts: sharing workarounds, provide temporary solution
- Designer shares a workaround or temporary solution to an issue.
- Designer provides a temporary solution or workaround for an issue.

28.
Concepts: offer solution, usability workaround
- The designer offers a solution or workaround to a user's problem.
- A designer provides a workaround to overcome a usability issue.

29.
Concepts: concern addressing, resolve user concern
- The designer addresses or alleviates a user's concern.
- Designer addresses and resolves a user's concern.

30.
Concepts: propose potential solution, share potential solutions
- Designers propose potential solutions to problems or limitations.
- When a designer shares a potential solution or idea to a problem or situation.

31.
Concepts: apology, acknowledge potential inconvenience, apology for disturbance
- Designer apologizes for an inconvenience or disturbance.
- A designer acknowledges potential inconvenience or apologizes for an issue.
- Designers apologize for any inconvenience caused to the users.

32.
Concepts: user anticipation, express anticipation
- Users asking about or anticipating future updates or releases.
- User expresses anticipation or expectation for an update or feature.
===
Here are the definitions for each code:

---
1.
Concepts: provide context, contextualizing response, contextualization of question
Relationship: The concepts are related as they all involve providing background information to clarify or understand a question or issue.
Criteria: A user provides context or background information about their question, issue, or topic.
Phrase: Providing context

2.
Concepts: past incident, sharing past experience
Relationship: The concepts are related as they both involve sharing a personal experience related to a product or feature.
Criteria: A user shares a past experience or incident related to the development or usage of a feature or product.
Phrase: Sharing past experience

3.
Concepts: personal anecdote, story sharing
Relationship: The concepts are related as they both involve sharing a personal story or experience.
Criteria: A user shares a personal anecdote or experience related to the online community.
Phrase: Sharing personal anecdote

4.
Concepts: feature suggestion, design/feature suggestion, suggest new feature, propose another feature
Relationship: The concepts are related as they all involve proposing new ideas or features for improvement.
Criteria: A user suggests a new feature or functionality for the software.
Phrase: Suggesting new feature

5.
Concepts: suggestions, feature improvement, design suggestion
Relationship: The concepts are related as they all involve proposing ideas for improvement.
Criteria: A user or designer proposes a suggestion or idea for improvement.
Phrase: Proposing improvement

6.
Concepts: making suggestions, suggesting improvements, suggesting collaboration
Relationship: The concepts are related as they all involve proposing new ideas or improvements.
Criteria: A user or designer makes a suggestion or proposal for the online community or software.
Phrase: Making suggestions

7.
Concepts: request, user requests
Relationship: The concepts are related as they both involve making specific requests.
Criteria: Users make specific requests or suggestions for new features or demos.
Phrase: Making requests

8.
Concepts: classroom setup, inquire about classroom conditions
Relationship: The concepts are related as they both involve inquiring about the classroom environment.
Criteria: A designer inquires about the classroom setup or environment.
Phrase: Inquiring about classroom setup

9.
Concepts: ask teachers' needs, ask for teachers' help
Relationship: The concepts are related as they both involve seeking input or help from teachers.
Criteria: Designers ask about or seek input from teachers.
Phrase: Seeking teacher input

10.
Concepts: user background inquiry, inquire about user's background
Relationship: The concepts are related as they both involve inquiring about a user's background.
Criteria: A designer inquires about a user's background or experience.
Phrase: Inquiring about user background

11.
Concepts: needs clarification, ask follow-up question on user request, clarifying questions, clarification question
Relationship: The concepts are related as they all involve seeking more information or clarification.
Criteria: A designer asks for more information about user needs or requirements.
Phrase: Seeking clarification

12.
Concepts: ask about user needs, designer inquiry, trying to understand the needs
Relationship: The concepts are related as they all involve seeking to understand user needs.
Criteria: A designer inquires about user needs or requirements.
Phrase: Inquiring about user needs

13.
Concepts: respond to user, developer response
Relationship: The concepts are related as they both involve responding to a user's question or concern.
Criteria: A designer responds to a user's question or concern, providing clarification or assistance.
Phrase: Responding to user

14.
Concepts: response to question, respond to initial question
Relationship: The concepts are related as they both involve responding to a question or inquiry.
Criteria: A user or designer responds to a question or inquiry.
Phrase: Responding to question

15.
Concepts: accepting suggestion, agree to implement suggestion
Relationship: The concepts are related as they both involve agreeing to incorporate a user's suggestion.
Criteria: Designers agree to implement user suggestions or requests.
Phrase: Accepting suggestion

16.
Concepts: feedback, designer response, reaction to feedback
Relationship: The concepts are related as they all involve responding to user feedback.
Criteria: A designer responds to user feedback or suggestions.
Phrase: Responding to feedback

17.
Concepts: taking feedback, considering feedback
Relationship: The concepts are related as they both involve considering user feedback.
Criteria: A designer takes feedback, acknowledges user input, and considers it for future updates.
Phrase: Considering feedback

18.
Concepts: elicit feedback, gather user feedback
Relationship: The concepts are related as they both involve soliciting feedback from users.
Criteria: Soliciting feedback or opinions from users through open-ended questions.
Phrase: Soliciting feedback

19.
Concepts: feedback solicitation, criteria: explicit request for user feedback or suggestions; label: feedback solicitation
Relationship: The concepts are related as they both involve soliciting feedback from users.
Criteria: Soliciting feedback, suggestions, or ideas from users
Phrase: Soliciting feedback

20.
Concepts: feedback loop, community feedback loop
Relationship: The concepts are related as they both involve the process of collecting and incorporating user feedback.
Criteria: Processes where user feedback is solicited and incorporated into design decisions.
Phrase: Engaging in feedback loop

21.
Concepts: provide specific feedback, user input/feedback/suggestion with justification
Relationship: The concepts are related as they both involve providing detailed feedback or suggestions.
Criteria: A user provides specific feedback or suggestions with justification or explanation.
Phrase: Providing specific feedback

22.
Concepts: suggestion and feedback, user feedback and suggestions
Relationship: The concepts are related as they both involve providing feedback or suggestions.
Criteria: Users providing suggestions or feedback on the software's features or development direction.
Phrase: Providing feedback and suggestions

23.
Concepts: encouraging feedback, encouragement of user feedback, encouraging interaction, encourage feedback
Relationship: The concepts are related as they all involve encouraging users to provide feedback.
Criteria: A designer encourages users to provide feedback or suggestions.
Phrase: Encouraging feedback

24.
Concepts: invite feedback, soliciting feedback, solicit suggestions, user feedback request, seeking feedback
Relationship: The concepts are related as they all involve soliciting feedback from users.
Criteria: A designer invites feedback or suggestions from users.
Phrase: Inviting feedback

25.
Concepts: problem diagnosis, analyzing the problem
Relationship: The concepts are related as they both involve examining a problem or issue.
Criteria: A designer provides a diagnosis or explanation for a problem or issue.
Phrase: Diagnosing problem

26.
Concepts: troubleshooting, engage in troubleshooting
Relationship: The concepts are related as they both involve resolving issues or problems.
Criteria: Designer troubleshoots issues or asks for feedback about problems encountered.
Phrase: Troubleshooting

27.
Concepts: sharing workarounds, provide temporary solution
Relationship: The concepts are related as they both involve providing temporary solutions.
Criteria: Designer shares a workaround or temporary solution to an issue.
Phrase: Sharing workaround

28.
Concepts: offer solution, usability workaround
Relationship: The concepts are related as they both involve providing solutions to problems or issues.
Criteria: A designer offers a solution or workaround to a user's problem.
Phrase: Offering solution

29.
Concepts: concern addressing, resolve user concern
Relationship: The concepts are related as they both involve addressing user concerns.
Criteria: The designer addresses or alleviates a user's concern.
Phrase: Addressing concern

30.
Concepts: propose potential solution, share potential solutions
Relationship: The concepts are related as they both involve proposing solutions or ideas.
Criteria: Designers propose potential solutions to problems or limitations.
Phrase: Proposing solution

31.
Concepts: apology, acknowledge potential inconvenience, apology for disturbance
Relationship: The concepts are related as they all involve acknowledging or apologizing for an issue.
Criteria: A designer apologizes for an inconvenience or disturbance.
Phrase: Apologizing

32.
Concepts: user anticipation, express anticipation
Relationship: The concepts are related as they both involve expressing expectation or anticipation.
Criteria: Users asking about or anticipating future updates or releases.
Phrase: Expressing anticipation