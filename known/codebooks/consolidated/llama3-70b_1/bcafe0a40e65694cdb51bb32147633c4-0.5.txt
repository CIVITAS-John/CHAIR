You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: sequencing, design phase sequencing, planning sequential content development
- Designer outlines a sequence of tasks or priorities.
- A designer outlines or prioritizes the sequence of design phases or tasks.
- The designer outlines a sequence or priority for content development.

2.
Concepts: managing user requests, prioritizing user requests
- A designer manages or prioritizes user requests or feedback.
- A designer prioritizes or responds to user requests or feedback.

3.
Concepts: feature prioritization, feature development priorities
- A designer mentions or prioritizes specific features or functionalities.
- Designer communicates the priority of one feature over another.
- Designer prioritizes feature development.

4.
Concepts: design priorities, prioritizing content
- The designer identifies priorities for the software design.
- A designer prioritizes content or features based on importance, relevance, or demand.

5.
Concepts: explaining development priorities, outlining development priorities
- A designer explains the development priorities or rationale behind certain decisions.
- The designer outlines or prioritizes development tasks or goals, often in response to user feedback or suggestions.

6.
Concepts: delaying experiments, mentioning delay in experiments
- Delaying or postponing a feature or experiment due to other priorities.
- The speaker mentions a delay or postponement of a feature or experiment due to prioritization.

7.
Concepts: offline functionality, considering offline functionality
- Considering offline functionality and accessibility
- Designer hints at potential offline functionality considerations.

8.
Concepts: considering local export, local export support needed
- Designer considers or mentions the need for local export functionality.
- A designer identifies a need for supporting local export functionality.

9.
Concepts: long-term stability goals, prioritizing long-term stability
- A designer highlights long-term stability goals for the software.
- The designer mentions the importance of "long-term stability" in software development.

10.
Concepts: setting goals, development goals
- Designer sets goals or priorities for development.
- A designer expresses development goals or objectives for the software.

11.
Concepts: explaining current limitations, clarifying software limitations, explaining design limitations, discussing software limitations
- The designer explains current limitations of the software.
- A designer explains the limitations or constraints of the software or a specific feature.
- A designer explains the limitations or constraints of the software or design.
- Designer discusses limitations or constraints of the software.

12.
Concepts: limitation explanations, explaining system limitations, design constraints, describing limitations
- Designer or user explains limitations.
- Designer explains limitations in other areas of the platform.
- The designer explains limitations or constraints of the system or tool.
- A designer clarifies or explains the limitations or constraints of the design or development process.
- The designer describes limitations or constraints of the system.

13.
Concepts: highlighting constraints, describing constraints
- The designer highlights or explains constraints or limitations of the online community.
- The user or designer describes limitations, constraints, or challenges faced in the online community.

14.
Concepts: explain limitation, explaining internet limitations
- Explaining limitations or constraints within the online community or its features.
- Users explain limitations or constraints of the internet or network.

15.
Concepts: stating technical limitations, considering technical limitations
- User or designer mentions technical limitations or constraints of the software or hardware.
- Designer or user considers or addresses technical limitations or constraints of the software or hardware.

16.
Concepts: highlighting limitations, highlighting technical limitations
- User highlights limitations or constraints they are facing.
- User highlights technical limitations or constraints

17.
Concepts: explaining complexity, explaining development complexity
- A designer explains the complexity of a feature, update, or development process.
- The designer explains the complexity or challenges involved in developing a particular feature or functionality.

18.
Concepts: anticipating limitations, anticipating challenges
- Designer anticipates potential limitations or challenges in the development process.
- The designer anticipates or expresses concerns about potential challenges or difficulties in the development process.

19.
Concepts: development challenges, difficulty in development
- Designer explains the challenges or complexities of development.
- Designers express difficulties or challenges in developing the system or tool.

20.
Concepts: highlighting technical challenges, revealing potential usability challenges
- Users mention technical challenges or difficulties they face in using the Physics Lab.
- User reveals potential challenges or difficulties with using the Physics Lab.

21.
Concepts: addressing compatibility issues, considering technical compatibility
- Designers address compatibility issues or concerns.
- A designer's consideration of compatibility or technical issues.

22.
Concepts: checking compatibility, discussing compatibility
- The designer suggests checking the system's compatibility with different platforms or systems.
- The designer or user provides information about compatibility with different systems or hardware.

23.
Concepts: mentioning compatibility requirements, mentions theoretical compatibility requirements for the software, expressing compatibility requirements
- Designer mentions limitations or requirements for the software's compatibility.
- The designer mentions theoretical requirements or compatibility issues for the software.
- A designer expresses compatibility requirements or limitations for the software.

24.
Concepts: system requirements, system compatibility information
- A designer informs users about the system requirements or compatibility of the software.
- The designer clarifies the system requirements for using the software.
- Providing information about the system requirements or compatibility of the software.

25.
Concepts: confirming compatibility, confirming os compatibility, confirming system compatibility
- A designer confirms that a specific version or feature is compatible.
- The designer confirms that a specific operating system (e.g., Windows 7) is compatible or supported.
- A designer confirms the compatibility of the software with a specific system or device.
- Designer confirms or responds to a user's question about system compatibility.

26.
Concepts: clarifying compatibility, clarifying system compatibility
- The designer clarifies compatibility issues or system requirements for the Physics Lab.
- Clarifying system compatibility or requirements for the application.

27.
Concepts: reiterate bidirectional conversion, reiterating bidirectional conversion functionality
- The designer reiterates the bidirectional conversion feature in the Physics Lab.
- The designer reiterates or emphasizes the bidirectional conversion functionality of the Physics Lab online community.

28.
Concepts: informing about touch screens, explaining touch screen functionality
- Providing information about touch screens or their functionality.
- Descriptions of how touch screen functionality works.

29.
Concepts: highlighting ideal use, highlighting ideal components, promoting ideal components
- Designer highlights the ideal use or features of a component.
- A designer or developer highlights a feature or component as ideal or optimal.
- Designer promotes or highlights ideal components or features.

30.
Concepts: highlighting capabilities, highlighting component capabilities
- The designer highlights the capabilities or features of a component or tool.
- Highlighting the capabilities or features of specific components or tools within the application.

31.
Concepts: demonstrates functionality, demonstrating capabilities, illustrating functionality
- Designer demonstrates the functionality of a feature
- A designer demonstrates the capabilities or features of a resource or application.
- A designer explains or demonstrates how a feature or functionality works.

32.
Concepts: detailing features, providing feature examples
- Designer details features of the software.
- Designer provides examples or illustrations of software features.
===
Here are the definitions for each code:

---
1.
Concepts: sequencing, design phase sequencing, planning sequential content development
Relationship: The concepts are related to planning and organizing design phases and content development in a sequential manner.
Criteria: A designer outlines a sequence of tasks or priorities for design phases or content development.
Phrase: Outlining sequential design phases.

2.
Concepts: managing user requests, prioritizing user requests
Relationship: The concepts are related to handling user feedback and requests in a prioritized manner.
Criteria: A designer manages or prioritizes user requests or feedback.
Phrase: Managing user requests.

3.
Concepts: feature prioritization, feature development priorities
Relationship: The concepts are related to determining the importance of features and functionalities in the development process.
Criteria: A designer prioritizes specific features or functionalities for development.
Phrase: Prioritizing feature development.

4.
Concepts: design priorities, prioritizing content
Relationship: The concepts are related to identifying the importance of design elements and content.
Criteria: A designer identifies priorities for software design or content.
Phrase: Identifying design priorities.

5.
Concepts: explaining development priorities, outlining development priorities
Relationship: The concepts are related to communicating the rationale behind development decisions and priorities.
Criteria: A designer explains or outlines development priorities or rationale.
Phrase: Explaining development priorities.

6.
Concepts: delaying experiments, mentioning delay in experiments
Relationship: The concepts are related to postponing or delaying experimental features or functionalities due to other priorities.
Criteria: A designer delays or postpones a feature or experiment due to other priorities.
Phrase: Delaying experiments.

7.
Concepts: offline functionality, considering offline functionality
Relationship: The concepts are related to considering the availability of features or functionalities when offline.
Criteria: A designer considers or mentions the need for offline functionality.
Phrase: Considering offline functionality.

8.
Concepts: considering local export, local export support needed
Relationship: The concepts are related to supporting the export of data or content locally.
Criteria: A designer considers or mentions the need for local export functionality.
Phrase: Considering local export.

9.
Concepts: long-term stability goals, prioritizing long-term stability
Relationship: The concepts are related to prioritizing the long-term stability of the software.
Criteria: A designer highlights long-term stability goals for the software.
Phrase: Prioritizing long-term stability.

10.
Concepts: setting goals, development goals
Relationship: The concepts are related to setting objectives for software development.
Criteria: A designer sets goals or priorities for development.
Phrase: Setting development goals.

11.
Concepts: explaining current limitations, clarifying software limitations, explaining design limitations, discussing software limitations
Relationship: The concepts are related to explaining the current constraints or limitations of the software or design.
Criteria: A designer explains current limitations of the software or design.
Phrase: Explaining software limitations.

12.
Concepts: limitation explanations, explaining system limitations, design constraints, describing limitations
Relationship: The concepts are related to explaining or describing the limitations or constraints of the system, tool, or design.
Criteria: A designer explains limitations or constraints of the system, tool, or design.
Phrase: Explaining system limitations.

13.
Concepts: highlighting constraints, describing constraints
Relationship: The concepts are related to highlighting or describing the limitations or constraints faced in the online community.
Criteria: A designer highlights or describes limitations or constraints faced in the online community.
Phrase: Highlighting online community constraints.

14.
Concepts: explain limitation, explaining internet limitations
Relationship: The concepts are related to explaining limitations or constraints within the online community or its features.
Criteria: A designer explains limitations or constraints within the online community or its features.
Phrase: Explaining online community limitations.

15.
Concepts: stating technical limitations, considering technical limitations
Relationship: The concepts are related to mentioning or considering technical limitations or constraints of the software or hardware.
Criteria: A designer mentions or considers technical limitations or constraints of the software or hardware.
Phrase: Considering technical limitations.

16.
Concepts: highlighting limitations, highlighting technical limitations
Relationship: The concepts are related to highlighting technical limitations or constraints faced by users.
Criteria: A user highlights technical limitations or constraints faced.
Phrase: Highlighting technical limitations.

17.
Concepts: explaining complexity, explaining development complexity
Relationship: The concepts are related to explaining the complexity of a feature, update, or development process.
Criteria: A designer explains the complexity of a feature, update, or development process.
Phrase: Explaining development complexity.

18.
Concepts: anticipating limitations, anticipating challenges
Relationship: The concepts are related to anticipating potential limitations or challenges in the development process.
Criteria: A designer anticipates potential limitations or challenges in the development process.
Phrase: Anticipating development challenges.

19.
Concepts: development challenges, difficulty in development
Relationship: The concepts are related to explaining the challenges or complexities of development.
Criteria: A designer explains the challenges or complexities of development.
Phrase: Explaining development challenges.

20.
Concepts: highlighting technical challenges, revealing potential usability challenges
Relationship: The concepts are related to highlighting technical challenges or difficulties faced by users.
Criteria: A user highlights technical challenges or difficulties faced.
Phrase: Highlighting technical challenges.

21.
Concepts: addressing compatibility issues, considering technical compatibility
Relationship: The concepts are related to addressing or considering compatibility issues or concerns.
Criteria: A designer addresses or considers compatibility issues or concerns.
Phrase: Addressing compatibility issues.

22.
Concepts: checking compatibility, discussing compatibility
Relationship: The concepts are related to checking or discussing compatibility with different platforms or systems.
Criteria: A designer suggests checking or discusses compatibility with different platforms or systems.
Phrase: Discussing compatibility.

23.
Concepts: mentioning compatibility requirements, mentions theoretical compatibility requirements for the software, expressing compatibility requirements
Relationship: The concepts are related to mentioning or expressing compatibility requirements or limitations for the software.
Criteria: A designer mentions or expresses compatibility requirements or limitations for the software.
Phrase: Mentioning compatibility requirements.

24.
Concepts: system requirements, system compatibility information
Relationship: The concepts are related to providing information about system requirements or compatibility.
Criteria: A designer informs users about system requirements or compatibility.
Phrase: Providing system requirements.

25.
Concepts: confirming compatibility, confirming os compatibility, confirming system compatibility
Relationship: The concepts are related to confirming compatibility with specific systems or devices.
Criteria: A designer confirms compatibility with specific systems or devices.
Phrase: Confirming compatibility.

26.
Concepts: clarifying compatibility, clarifying system compatibility
Relationship: The concepts are related to clarifying compatibility issues or system requirements.
Criteria: A designer clarifies compatibility issues or system requirements.
Phrase: Clarifying compatibility.

27.
Concepts: reiterate bidirectional conversion, reiterating bidirectional conversion functionality
Relationship: The concepts are related to reiterating the bidirectional conversion feature in the Physics Lab.
Criteria: A designer reiterates the bidirectional conversion feature in the Physics Lab.
Phrase: Reiterating bidirectional conversion.

28.
Concepts: informing about touch screens, explaining touch screen functionality
Relationship: The concepts are related to providing information about touch screens or their functionality.
Criteria: A designer provides information about touch screens or their functionality.
Phrase: Informing about touch screens.

29.
Concepts: highlighting ideal use, highlighting ideal components, promoting ideal components
Relationship: The concepts are related to highlighting or promoting ideal features or components.
Criteria: A designer highlights or promotes ideal features or components.
Phrase: Highlighting ideal components.

30.
Concepts: highlighting capabilities, highlighting component capabilities
Relationship: The concepts are related to highlighting the capabilities or features of components or tools.
Criteria: A designer highlights the capabilities or features of components or tools.
Phrase: Highlighting component capabilities.

31.
Concepts: demonstrates functionality, demonstrating capabilities, illustrating functionality
Relationship: The concepts are related to demonstrating or illustrating the functionality of features or resources.
Criteria: A designer demonstrates or illustrates the functionality of features or resources.
Phrase: Demonstrating functionality.

32.
Concepts: detailing features, providing feature examples
Relationship: The concepts are related to providing detailed information about features or providing examples of features.
Criteria: A designer details features or provides examples of features.
Phrase: Detailing features.