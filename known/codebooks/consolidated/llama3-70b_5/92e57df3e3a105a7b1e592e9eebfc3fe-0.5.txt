You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: noting potential issues, warning about potential issues or limitations
- A designer notes potential issues or limitations.
- Designer warns about potential issues or limitations.

2.
Concepts: outdated systems, describing the old computer system
- Highlighting limitations or constraints due to outdated systems or infrastructure.
- Mentioning outdated systems or tools.
- Describing a current limitation or challenge with technology or infrastructure.

3.
Concepts: describing outdated technology, outdated technology mention
- User describes outdated technology or infrastructure
- A user highlights or mentions outdated technology or infrastructure that may impact the use of the Physics Lab online community.

4.
Concepts: acknowledging limitations, acknowledging current limitations, interaction limitation acknowledgment
- A designer acknowledges or discusses limitations or constraints of the product.
- A designer acknowledges limitations or constraints, such as memory limitations.
- Designer acknowledges limitations or issues with a feature or algorithm.
- Designers acknowledge limitations or issues with the application.
- The designer acknowledges limitations of the team or resources.
- A designer acknowledges potential inconvenience or limitations.
- Designer acknowledges current limitations or constraints.
- The designer acknowledges limitations of the current version or feature.
- Designer acknowledges limitations or constraints of the system.

5.
Concepts: clarify limitations, explaining software limitations, explaining current limitations of software
- A designer clarifies the limitations or constraints of a software or system.
- Designer explains the limitations or constraints of the current software version.
- The designer explains the current limitations or constraints of the software.

6.
Concepts: adapt to user constraint, addressing user constraints
- Designer adapts to user constraints or limitations.
- Designer responds to a user's constraint or limitation.

7.
Concepts: providing technical limitations, addressing technical limitations
- A designer provides technical limitations.
- Designer addresses technical limitations or constraints.

8.
Concepts: considering practical constraints, considers development constraints
- A designer considers practical constraints or limitations.
- Designer considers limitations or constraints in software development.

9.
Concepts: technical constraints, elaborating on classroom technology limitations
- User mentions technical limitations or constraints in a school setting.
- Users elaborate on the limitations or constraints of classroom technology.

10.
Concepts: technical limitation, technical constraint, describing technical limitations
- Highlighting technical limitations or constraints.
- Highlighting technical constraints or limitations that affect the software's use.
- User describes a technical limitation or constraint.

11.
Concepts: providing context for constraint, providing context for design constraints
- The user provides context or explanation for a constraint or limitation.
- User provides context or explains a constraint that affects the use of Physics Lab.

12.
Concepts: system explanation, system limitation
- Explaining the limitations or constraints of a system.
- Explaining why something cannot be done due to system limitations.

13.
Concepts: limitation explanation, limitation justification, explaining design limitations
- Explanation of limitations or constraints of a feature or functionality.
- Justifying or explaining the limitations of a feature or resource
- Explaining the limitations or constraints of a design or feature.

14.
Concepts: touch screen functionality, informing about touch screens, clarifying touch screen functionality
- A designer clarifies the functionality of touch screens.
- Designer informs users about touch screen functionality or limitations.
- Designer clarifies touch screen functionality

15.
Concepts: feature explanation, functionality explanation
- A feature or functionality is explained or demonstrated.
- Designer explains or clarifies a feature or functionality of the software.
- Explaining a feature or functionality, such as bidirectional conversion.
- Designer explains or reiterates a feature or concept.
- Explanation or clarification of functionality or features.

16.
Concepts: providing software instructions, providing software usage instructions
- The designer provides instructions on how to use a specific feature of the software.
- A designer provides instructions or guidance on using the software.

17.
Concepts: providing instructions, provide specific instructions, providing user guidance, providing usage instructions
- A designer provides instructions or guidance on using a feature or tool.
- Designer provides instructions on using a specific feature or component.
- A designer provides instructions on how to access or use a resource.
- The designer provides specific instructions or guidance on how to accomplish a task or use a feature.
- A designer provides guidance or instructions on how to use the product or a specific feature.
- A designer provides usage instructions or guidance.

18.
Concepts: promoting understanding, facilitating understanding
- Designer promotes understanding or clarifies a concept or feature.
- A designer facilitates a user's understanding of a concept.

19.
Concepts: confirming understanding, ensuring user understanding
- Designer confirms understanding with a user.
- A designer indicates understanding or confirmation of a previous message.
- Confirm understanding or agreement with someone else's statement or request.
- Designer ensures user understands a feature or concept.

20.
Concepts: ensuring accuracy, ensuring precise communication
- Designer ensures the accuracy of information or clarifies a detail.
- The designer ensures precise communication by clarifying or confirming information.

21.
Concepts: clarifies process, communicates procedural details
- Designer clarifies a process or procedure.
- Designer communicates specific details about a process or procedure.

22.
Concepts: offering practical advice, provides practical advice
- Designer provides practical advice or a solution to a problem.
- Designer provides practical advice or tips for using the software.

23.
Concepts: ensuring functionality, ensuring proper operation
- Designer ensures proper functionality or usage of a feature.
- A designer ensures proper operation or functionality.

24.
Concepts: provided feature example, giving an example of the feature's functions, functionality demonstration
- Designer provides an example or demonstration of a feature or functionality.
- The designer provides an example of how a feature works or can be used.
- Designer demonstrates or explains the functionality of a feature.

25.
Concepts: provide examples, give examples of feature
- The designer provides examples of how to use the software or its features.
- Providing examples or demonstrations of software features

26.
Concepts: explanation, providing detailed explanation
- Designer explains a concept or feature.
- A designer provides a detailed explanation or example.

27.
Concepts: explaining functionality, detailing feature functionality, explaining design functionality, explaining features or functionalities, introduce feature functions
- A designer explains the functionality of a feature.
- A designer explains or details a specific feature or functionality.
- The designer explains the functionality of a design element.
- A designer introduces or explains a feature or function.

28.
Concepts: clarifying features, clarifying feature behavior, clarifying functionality
- The designer clarifies or explains the functionality or purpose of a feature.
- A designer clarifies or explains the behavior of a specific feature or tool.
- The designer clarifies the functionality of a feature.

29.
Concepts: clarifying purpose, explains feature purpose, explaining purpose
- Designer clarifies the purpose or intention behind a feature or design.
- Designer explains the purpose or limitations of a specific feature or version.
- Designer explains the purpose or goal of a specific feature or version.

30.
Concepts: knowledge sharing, sharing technical knowledge
- Designer shares knowledge or information about the application or its features.
- Designer shares technical knowledge or expertise with users.

31.
Concepts: providing development insights, designer shares development insights
- A designer provides insight into the development process or progress.
- Sharing insights or behind-the-scenes information about software development

32.
Concepts: sharing information for design, sharing development information
- A user shares information that can be used for design or development purposes.
- A designer shares development plans, download information, or other resources.
===
Here are the definitions for each code:

---
1.
Concepts: noting potential issues, warning about potential issues or limitations
Relationship: The concepts are related as they both involve highlighting potential problems or constraints.
Criteria: A designer notes or warns about potential issues or limitations.
Phrase: Noting or warning about potential issues.

2.
Concepts: outdated systems, describing the old computer system
Relationship: The concepts are related as they both describe the limitations of existing systems.
Criteria: A user or designer describes or highlights the limitations of outdated systems or infrastructure.
Phrase: Describing outdated systems.

3.
Concepts: describing outdated technology, outdated technology mention
Relationship: The concepts are related as they both involve discussing outdated technology.
Criteria: A user describes or mentions outdated technology or infrastructure that may impact the use of the Physics Lab online community.
Phrase: Describing outdated technology.

4.
Concepts: acknowledging limitations, acknowledging current limitations, interaction limitation acknowledgment
Relationship: The concepts are related as they all involve recognizing or accepting limitations.
Criteria: A designer acknowledges or discusses limitations or constraints of the product, team, or resources.
Phrase: Acknowledging limitations.

5.
Concepts: clarify limitations, explaining software limitations, explaining current limitations of software
Relationship: The concepts are related as they both involve explaining limitations.
Criteria: A designer clarifies or explains the limitations or constraints of a software or system.
Phrase: Clarifying limitations.

6.
Concepts: adapt to user constraint, addressing user constraints
Relationship: The concepts are related as they both involve responding to user limitations.
Criteria: A designer adapts to or responds to a user's constraint or limitation.
Phrase: Adapting to user constraints.

7.
Concepts: providing technical limitations, addressing technical limitations
Relationship: The concepts are related as they both involve addressing technical constraints.
Criteria: A designer provides or addresses technical limitations or constraints.
Phrase: Providing technical limitations.

8.
Concepts: considering practical constraints, considers development constraints
Relationship: The concepts are related as they both involve considering limitations in development.
Criteria: A designer considers practical constraints or limitations in software development.
Phrase: Considering practical constraints.

9.
Concepts: technical constraints, elaborating on classroom technology limitations
Relationship: The concepts are related as they both involve discussing technical limitations in a specific context.
Criteria: A user mentions or elaborates on technical limitations or constraints in a school setting.
Phrase: Elaborating on technical constraints.

10.
Concepts: technical limitation, technical constraint, describing technical limitations
Relationship: The concepts are related as they all involve discussing technical limitations.
Criteria: A user describes or highlights technical limitations or constraints that affect the software's use.
Phrase: Describing technical limitations.

11.
Concepts: providing context for constraint, providing context for design constraints
Relationship: The concepts are related as they both involve providing explanations for limitations.
Criteria: A user provides context or explanation for a constraint or limitation that affects the use of Physics Lab.
Phrase: Providing context for constraints.

12.
Concepts: system explanation, system limitation
Relationship: The concepts are related as they both involve explaining system limitations.
Criteria: A designer explains the limitations or constraints of a system.
Phrase: Explaining system limitations.

13.
Concepts: limitation explanation, limitation justification, explaining design limitations
Relationship: The concepts are related as they all involve explaining or justifying limitations.
Criteria: A designer explains or justifies the limitations of a feature or resource.
Phrase: Explaining limitations.

14.
Concepts: touch screen functionality, informing about touch screens, clarifying touch screen functionality
Relationship: The concepts are related as they all involve discussing touch screen functionality.
Criteria: A designer clarifies or informs users about touch screen functionality or limitations.
Phrase: Clarifying touch screen functionality.

15.
Concepts: feature explanation, functionality explanation
Relationship: The concepts are related as they both involve explaining features or functionalities.
Criteria: A designer explains or clarifies a feature or functionality of the software.
Phrase: Explaining features.

16.
Concepts: providing software instructions, providing software usage instructions
Relationship: The concepts are related as they both involve providing guidance on using the software.
Criteria: A designer provides instructions on how to use a specific feature of the software.
Phrase: Providing software instructions.

17.
Concepts: providing instructions, provide specific instructions, providing user guidance, providing usage instructions
Relationship: The concepts are related as they all involve providing guidance or instructions.
Criteria: A designer provides instructions or guidance on using a feature or tool.
Phrase: Providing instructions.

18.
Concepts: promoting understanding, facilitating understanding
Relationship: The concepts are related as they both involve helping users understand concepts or features.
Criteria: A designer promotes or facilitates a user's understanding of a concept.
Phrase: Promoting understanding.

19.
Concepts: confirming understanding, ensuring user understanding
Relationship: The concepts are related as they both involve ensuring users understand concepts or features.
Criteria: A designer confirms or ensures user understanding of a feature or concept.
Phrase: Confirming understanding.

20.
Concepts: ensuring accuracy, ensuring precise communication
Relationship: The concepts are related as they both involve ensuring clarity and precision.
Criteria: A designer ensures the accuracy of information or clarifies a detail.
Phrase: Ensuring accuracy.

21.
Concepts: clarifies process, communicates procedural details
Relationship: The concepts are related as they both involve explaining processes or procedures.
Criteria: A designer clarifies a process or communicates specific details about a process or procedure.
Phrase: Clarifying processes.

22.
Concepts: offering practical advice, provides practical advice
Relationship: The concepts are related as they both involve providing helpful tips or solutions.
Criteria: A designer provides practical advice or a solution to a problem.
Phrase: Offering practical advice.

23.
Concepts: ensuring functionality, ensuring proper operation
Relationship: The concepts are related as they both involve ensuring proper functioning.
Criteria: A designer ensures proper functionality or usage of a feature.
Phrase: Ensuring functionality.

24.
Concepts: provided feature example, giving an example of the feature's functions, functionality demonstration
Relationship: The concepts are related as they all involve demonstrating or explaining features.
Criteria: A designer provides an example or demonstration of a feature or functionality.
Phrase: Providing feature examples.

25.
Concepts: provide examples, give examples of feature
Relationship: The concepts are related as they both involve providing examples.
Criteria: The designer provides examples of how to use the software or its features.
Phrase: Providing examples.

26.
Concepts: explanation, providing detailed explanation
Relationship: The concepts are related as they both involve providing detailed information.
Criteria: A designer explains a concept or feature.
Phrase: Providing detailed explanations.

27.
Concepts: explaining functionality, detailing feature functionality, explaining design functionality, explaining features or functionalities, introduce feature functions
Relationship: The concepts are related as they all involve explaining features or functionalities.
Criteria: A designer explains the functionality of a feature.
Phrase: Explaining functionality.

28.
Concepts: clarifying features, clarifying feature behavior, clarifying functionality
Relationship: The concepts are related as they all involve clarifying features or functionalities.
Criteria: A designer clarifies or explains the functionality or purpose of a feature.
Phrase: Clarifying features.

29.
Concepts: clarifying purpose, explains feature purpose, explaining purpose
Relationship: The concepts are related as they all involve explaining the purpose or intention behind a feature or design.
Criteria: A designer clarifies the purpose or intention behind a feature or design.
Phrase: Clarifying purpose.

30.
Concepts: knowledge sharing, sharing technical knowledge
Relationship: The concepts are related as they both involve sharing information or expertise.
Criteria: A designer shares knowledge or information about the application or its features.
Phrase: Sharing knowledge.

31.
Concepts: providing development insights, designer shares development insights
Relationship: The concepts are related as they both involve sharing insights or behind-the-scenes information.
Criteria: A designer provides insight into the development process or progress.
Phrase: Providing development insights.

32.
Concepts: sharing information for design, sharing development information
Relationship: The concepts are related as they both involve sharing information for design or development purposes.
Criteria: A user shares information that can be used for design or development purposes.
Phrase: Sharing development information.