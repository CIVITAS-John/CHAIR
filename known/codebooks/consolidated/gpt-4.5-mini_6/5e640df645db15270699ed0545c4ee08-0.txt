You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (19 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
19. 
Concepts: {Repeat the input 19}
Relationship: {What is logical relationship between concepts in code 19, or N/A if not applicable}
Criteria: {Who did what, and how for code 19}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: acknowledges designer contributions, demonstrates appreciation for dedication
- Users acknowledge designers' efforts and express gratitude for their work.
- Users acknowledge and appreciate the efforts of the designers.

2.
Concepts: shares positive feedback, expresses user satisfaction
- Users share positive feedback and experiences regarding the software's effectiveness.
- Users express satisfaction and appreciation for specific features of the software.

3.
Concepts: uses non-verbal communication, express emotions through visuals
- Users communicate emotions or reactions using emojis in conversations.
- Users express emotions or reactions through informal language and visual symbols like emojis.

4.
Concepts: user assistance request, inquires about software download
- Users request assistance with downloading the software.
- Users request information on how to access or download the software.

5.
Concepts: requests information, technical support request
- Users ask for specific information or help regarding the software.
- User requests assistance or guidance on using a specific version of the software.

6.
Concepts: requests user manual, express need for documentation
- Users request a user manual to assist with understanding the software.
- A user expresses the need for documentation or manuals related to the application.

7.
Concepts: suggests new features, suggest alternative solutions
- Users suggest new features or improvements to enhance the software's functionality.
- Users suggest alternative solutions to improve the software's usability.

8.
Concepts: share user experiences, share teaching experiences
- Users share their experiences and the impact of the software on their teaching or learning.
- Users share their teaching experiences to provide context for their input.

9.
Concepts: confirms agreement, concurring on design ideas
- Users and designers express agreement or confirmation of points made.
- Users express agreement with design ideas proposed by others.

10.
Concepts: questioning identity, inquires about user identity
- Designers inquire about the identity or role of users within the community.
- Designers inquire about users' professional roles and backgrounds to understand their needs.

11.
Concepts: gathers user feedback, gather user responses
- Designers ask users about their experiences and solicit input for product improvement.
- Users provide feedback, suggestions, and inquiries that influence the design and functionality of the product.

12.
Concepts: communicates release plans, outlines release schedules
- Designers communicate updates regarding software release status and timelines.
- Designers provide timelines and outline schedules for upcoming software releases.

13.
Concepts: announces software updates, software updates and downloads
- Designers announce software updates and new features to users.
- Designers inform users about software updates, downloads, and version releases.

14.
Concepts: announces upcoming updates, provides product updates
- Designers share information about upcoming features or updates.
- Designers share information about the current status and future plans for the software.

15.
Concepts: explain new features, introduce feature functions
- The designer explains upcoming features and improvements being made to the application.
- Designer introduces new functionalities that will be available in the software.

16.
Concepts: reassures users, reassurance
- Designers reassure users about progress and ongoing optimization efforts.
- Instances where designers reassure users about the progress and express gratitude or encouragement.

17.
Concepts: outlines development priorities, development prioritization
- Designers outline a plan for prioritizing different sections of the project.
- Instances where designers discuss the prioritization of different features or sections to be developed.

18.
Concepts: explaining the plans, explains feature stability
- The designer explains the importance of a feature for long-term stability and ease of adding components.
- Designers explain features that ensure stability and discuss long-term planning.

19.
Concepts: provides usage instructions, ensure proper operation
- Designers provide instructions on how to use specific features of the software.
- Designers provide instructions or guidelines to ensure proper use of the software and its components.
===
---
Definitions for each code (19 in total):
1.
Concepts: acknowledges designer contributions, demonstrates appreciation for dedication  
Relationship: Users recognize and value the efforts of designers, indicating a supportive community.  
Criteria: Users acknowledge designers' efforts and express gratitude for their work.  
Phrase: Acknowledge and appreciate designer contributions.

2.
Concepts: shares positive feedback, expresses user satisfaction  
Relationship: Users' positive feedback reflects their satisfaction with the software's performance.  
Criteria: Users share positive feedback and experiences regarding the software's effectiveness.  
Phrase: Share positive feedback and express satisfaction.

3.
Concepts: uses non-verbal communication, express emotions through visuals  
Relationship: Users utilize visual symbols to convey emotions, enhancing communication.  
Criteria: Users communicate emotions or reactions using emojis in conversations.  
Phrase: Use non-verbal communication to express emotions.

4.
Concepts: user assistance request, inquires about software download  
Relationship: Users seek help regarding software access, indicating a need for support.  
Criteria: Users request assistance with downloading the software.  
Phrase: Request assistance for software download.

5.
Concepts: requests information, technical support request  
Relationship: Users seek specific information or help, highlighting their need for guidance.  
Criteria: Users ask for specific information or help regarding the software.  
Phrase: Request information and technical support.

6.
Concepts: requests user manual, express need for documentation  
Relationship: Users' requests for manuals indicate a desire for better understanding of the software.  
Criteria: Users request a user manual to assist with understanding the software.  
Phrase: Request user manual and documentation.

7.
Concepts: suggests new features, suggest alternative solutions  
Relationship: Users' suggestions aim to enhance the software's functionality and usability.  
Criteria: Users suggest new features or improvements to enhance the software's functionality.  
Phrase: Suggest new features and alternative solutions.

8.
Concepts: share user experiences, share teaching experiences  
Relationship: Users' shared experiences provide valuable context and insights into the software's impact.  
Criteria: Users share their experiences and the impact of the software on their teaching or learning.  
Phrase: Share user and teaching experiences.

9.
Concepts: confirms agreement, concurring on design ideas  
Relationship: Users and designers' agreement fosters collaboration and shared understanding.  
Criteria: Users and designers express agreement or confirmation of points made.  
Phrase: Confirm agreement on design ideas.

10.
Concepts: questioning identity, inquires about user identity  
Relationship: Designers' inquiries about user identity help tailor the community's support to user needs.  
Criteria: Designers inquire about the identity or role of users within the community.  
Phrase: Inquire about user identity.

11.
Concepts: gathers user feedback, gather user responses  
Relationship: Designers' solicitation of feedback indicates a commitment to user-centered design.  
Criteria: Designers ask users about their experiences and solicit input for product improvement.  
Phrase: Gather user feedback and responses.

12.
Concepts: communicates release plans, outlines release schedules  
Relationship: Designers' communication of release plans keeps users informed and engaged.  
Criteria: Designers communicate updates regarding software release status and timelines.  
Phrase: Communicate release plans and schedules.

13.
Concepts: announces software updates, software updates and downloads  
Relationship: Designers' announcements keep users informed about new features and improvements.  
Criteria: Designers announce software updates and new features to users.  
Phrase: Announce software updates and downloads.

14.
Concepts: announces upcoming updates, provides product updates  
Relationship: Designers' updates inform users about future developments, fostering anticipation.  
Criteria: Designers share information about upcoming features or updates.  
Phrase: Announce and provide product updates.

15.
Concepts: explain new features, introduce feature functions  
Relationship: Designers' explanations help users understand new functionalities and their benefits.  
Criteria: The designer explains upcoming features and improvements being made to the application.  
Phrase: Explain and introduce new features.

16.
Concepts: reassures users, reassurance  
Relationship: Designers' reassurances build user confidence in the software's development.  
Criteria: Designers reassure users about progress and ongoing optimization efforts.  
Phrase: Reassure users about progress.

17.
Concepts: outlines development priorities, development prioritization  
Relationship: Designers' prioritization discussions guide the focus of future development efforts.  
Criteria: Designers outline a plan for prioritizing different sections of the project.  
Phrase: Outline development priorities.

18.
Concepts: explaining the plans, explains feature stability  
Relationship: Designers' explanations of plans ensure users understand the software's long-term viability.  
Criteria: The designer explains the importance of a feature for long-term stability and ease of adding components.  
Phrase: Explain plans for feature stability.

19.
Concepts: provides usage instructions, ensure proper operation  
Relationship: Designers' instructions help users effectively utilize the software's features.  
Criteria: Designers provide instructions on how to use specific features of the software.  
Phrase: Provide usage instructions for proper operation.
---