You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: educational norms, educational context and norms
- Explaining a common practice or norm in education
- A user provides insight into common educational practices or norms.

2.
Concepts: explaining school policy, explain school policy
- User explains school policy or restrictions
- A user explains a common school policy or practice.
- A user explains a common school policy or constraint that affects software use.

3.
Concepts: sharing school initiatives, mentioning school initiatives
- User mentions a school initiative or project.
- A user mentions a school initiative or project.

4.
Concepts: lack of classroom internet, explaining lack of internet
- Stating the lack of internet access in classrooms.
- User explains the lack of internet access in their school.

5.
Concepts: explaining reasoning, explains reasons for schools disabling network on classroom computers
- A user explains the reason for a specific practice or decision, such as disabling network on classroom computers.
- User explains reasons or context for certain restrictions or limitations, such as school policies.

6.
Concepts: classroom constraints, discussing technology limitations, explaining classroom limitations
- A user mentions constraints or limitations in using the software in a classroom setting.
- A user elaborates on classroom technology limitations.
- A user explains the limitations or restrictions of using the software in a classroom setting.

7.
Concepts: enhancing educational value, enhancing learning simulations
- Designer enhances or improves the educational value of simulations.
- Designer highlights or suggests improvements to learning simulations.

8.
Concepts: highlighting teaching needs, highlighting educational needs, highlighting curricular needs
- A user highlights their teaching needs or requirements.
- User highlights a need or requirement for educational purposes.
- Users highlighting curricular needs or requirements.

9.
Concepts: educational feature requests, suggesting educational content
- A user requests specific educational features or functionalities.
- A user suggests educational content or features for the software.

10.
Concepts: addressing educational needs, focusing on educational relevance
- Designer addresses or responds to educational needs or requirements.
- Designer emphasizes the importance of educational relevance or alignment with teaching needs.

11.
Concepts: aligns with educational standards, aligning with educational standards
- Designer aligns design with educational standards or requirements.
- Designer or user aligns with educational standards or guidelines.

12.
Concepts: seeking teacher input, seeking teacher feedback, seeking expert input and feedback
- The designer seeks input or feedback from teachers or educators.
- The designer asks for teachers' help or opinions.
- Designers seek input and feedback from teachers.
- Designer asks teachers for input on a specific aspect of the software.
- A designer seeks expert input or feedback from educators or users.

13.
Concepts: consulting experts, consult on educational standards
- Designers consult with teachers or experts on specific conventions or standards.
- A designer consults with teachers or experts to gather information or feedback.

14.
Concepts: acknowledges feature, appreciating features
- User acknowledges or appreciates a feature.
- User expresses appreciation for a useful feature.
- A user appreciates or praises a specific feature.

15.
Concepts: expressing satisfaction, positive feedback on new features, user satisfaction with feature
- A user expresses satisfaction or pleasure with a particular feature or update.
- User expresses positive feedback about the software.
- A user expresses positive sentiment towards new features or updates.
- User expresses satisfaction with a specific feature of the software.

16.
Concepts: simulation praise, simulation feedback, praising software features
- Praising the software's simulation effect or impact.
- A user praises or appreciates the simulation effect or quality of the software.
- User praises the software's simulation effect.

17.
Concepts: aesthetic appreciation, compliment software aesthetics
- A user appreciates the aesthetics or visual design of the software.
- A user compliments the software's aesthetics or design.

18.
Concepts: design compliment, praise for software design, design quality acknowledgement
- Complimenting or praising the software design or features.
- A user praises or compliments the software design.
- A user acknowledges or compliments the design quality of the software.

19.
Concepts: software praise, praising software usability, appreciation for practicality
- Praising the software's practicality or usefulness
- User praises the software for being practical and user-friendly.
- User expresses appreciation for the software's practicality.

20.
Concepts: providing compliments, complimenting software, appreciating software features, compliment on software feature
- A user compliments a specific feature or aspect of the software.
- User compliments or praises the software's features or design.
- User praises or appreciates a specific aspect of the software.
- User expresses appreciation for a specific software feature or aspect.
- A user expresses admiration for a specific feature of the software.

21.
Concepts: praising software, sharing positive feedback, positive feedback, expressing satisfaction with software
- User praises or expresses appreciation for the software.
- A user praises or expresses appreciation for the software.
- User praises or expresses admiration for the software, often citing its practicality or effectiveness.
- A user shares positive feedback or praise for the software.
- A user expresses positive feedback about the software.
- User provides positive feedback about the software.
- The user expresses a positive sentiment about the software.
- User expresses satisfaction or praise for the software.

22.
Concepts: shares positive experience, sharing positive experience
- User shares a positive experience or feedback about using the software.
- User shares a positive experience or outcome related to the software or application.

23.
Concepts: describing positive experience, highlighting user experience
- A user describes a positive experience or outcome.
- User shares their positive experience or feedback about using the platform.

24.
Concepts: sharing classroom experience, sharing positive classroom experiences, illustrate classroom success
- A user shares their experience using the platform in a classroom setting.
- User shares a positive experience using the software in a classroom setting.
- A user shares a success story or positive experience with the software in a classroom setting.

25.
Concepts: comparative analysis, comparative advantage
- Comparing the software to other similar tools or platforms.
- Comparisons of the software with other, less practical alternatives.

26.
Concepts: comparing with other software, comparing to other software, comparison with other applications
- User compares the software with other similar tools or software.
- The user compares the software to other similar software, highlighting its practicality.
- User compares the software with other applications

27.
Concepts: highlighting positive aspect, highlighting software effectiveness
- User highlights a positive aspect of the software
- User highlights the effectiveness or benefits of the software.

28.
Concepts: highlighting practicality, highlighting practical application, highlighting practical utility
- User highlights the practicality or usefulness of the software.
- Designer emphasizes the practical benefits of a feature.
- A user highlights the practicality of the software.
- User highlights the practical application or benefits of a feature or functionality.
- User highlights the practical usefulness or benefits of the software.

29.
Concepts: seeking convenience, expressing desire for convenience
- User expresses a desire for convenience in a specific feature.
- Users express their desire for a specific feature or functionality to make their experience more convenient.

30.
Concepts: suggesting convenience features, suggesting features for educational convenience
- User suggests a feature or function for convenience or efficiency.
- A user suggests a feature or functionality for educational convenience.
- User suggests adding a feature or functionality for enhanced convenience in educational settings.

31.
Concepts: emphasizing convenience, stressing convenience and practicality
- User emphasizes the importance of convenience or ease of use.
- User emphasizes the importance of convenience
- A user emphasizes the importance of convenience and practical application.

32.
Concepts: craftsmanship appreciation, acknowledge craftsmanship, acknowledging craftsmanship
- Expressions of admiration or appreciation for craftsmanship or attention to detail.
- The speaker acknowledges or appreciates the effort or craftsmanship put into the system or feature.
- User expresses appreciation for the designer's attention to detail or craftsmanship.
===
Here are the definitions for each code:

---
1.
Concepts: educational norms, educational context and norms
Relationship: The concepts are related as they describe a common understanding or standard in education.
Criteria: A user explains a common practice or norm in education.
Phrase: Explaining educational norms.

2.
Concepts: explaining school policy, explain school policy
Relationship: The concepts are synonymous, describing a user's explanation of school rules or guidelines.
Criteria: A user explains a school policy or restriction.
Phrase: Explaining school policy.

3.
Concepts: sharing school initiatives, mentioning school initiatives
Relationship: The concepts are related as they describe a user's discussion of school projects or programs.
Criteria: A user mentions a school initiative or project.
Phrase: Sharing school initiatives.

4.
Concepts: lack of classroom internet, explaining lack of internet
Relationship: The concepts are related as they describe a limitation in the classroom setting.
Criteria: A user explains the lack of internet access in their school.
Phrase: Explaining lack of internet.

5.
Concepts: explaining reasoning, explains reasons for schools disabling network on classroom computers
Relationship: The concepts are related as they describe a user's explanation for a specific decision or practice.
Criteria: A user explains the reason for a specific practice or decision.
Phrase: Explaining reasoning.

6.
Concepts: classroom constraints, discussing technology limitations, explaining classroom limitations
Relationship: The concepts are related as they describe limitations or restrictions in the classroom setting.
Criteria: A user explains the limitations or restrictions of using the software in a classroom setting.
Phrase: Explaining classroom constraints.

7.
Concepts: enhancing educational value, enhancing learning simulations
Relationship: The concepts are related as they describe a designer's improvement of educational content.
Criteria: Designer enhances or improves the educational value of simulations.
Phrase: Enhancing educational value.

8.
Concepts: highlighting teaching needs, highlighting educational needs, highlighting curricular needs
Relationship: The concepts are related as they describe a user's emphasis on educational requirements.
Criteria: A user highlights their teaching needs or requirements.
Phrase: Highlighting teaching needs.

9.
Concepts: educational feature requests, suggesting educational content
Relationship: The concepts are related as they describe a user's request for educational features or content.
Criteria: A user requests specific educational features or functionalities.
Phrase: Requesting educational features.

10.
Concepts: addressing educational needs, focusing on educational relevance
Relationship: The concepts are related as they describe a designer's response to educational requirements.
Criteria: Designer addresses or responds to educational needs or requirements.
Phrase: Addressing educational needs.

11.
Concepts: aligns with educational standards, aligning with educational standards
Relationship: The concepts are synonymous, describing a designer's adherence to educational guidelines.
Criteria: Designer aligns design with educational standards or requirements.
Phrase: Aligning with educational standards.

12.
Concepts: seeking teacher input, seeking teacher feedback, seeking expert input and feedback
Relationship: The concepts are related as they describe a designer's request for input or feedback from educators.
Criteria: Designer seeks input or feedback from teachers or educators.
Phrase: Seeking teacher input.

13.
Concepts: consulting experts, consult on educational standards
Relationship: The concepts are related as they describe a designer's consultation with experts on educational guidelines.
Criteria: Designers consult with teachers or experts to gather information or feedback.
Phrase: Consulting experts.

14.
Concepts: acknowledges feature, appreciating features
Relationship: The concepts are related as they describe a user's appreciation for a software feature.
Criteria: User acknowledges or appreciates a feature.
Phrase: Acknowledging features.

15.
Concepts: expressing satisfaction, positive feedback on new features, user satisfaction with feature
Relationship: The concepts are related as they describe a user's positive sentiment towards a feature or update.
Criteria: A user expresses satisfaction or pleasure with a particular feature or update.
Phrase: Expressing satisfaction.

16.
Concepts: simulation praise, simulation feedback, praising software features
Relationship: The concepts are related as they describe a user's positive feedback on the software's simulation effect.
Criteria: A user praises or appreciates the simulation effect or quality of the software.
Phrase: Praising simulation.

17.
Concepts: aesthetic appreciation, compliment software aesthetics
Relationship: The concepts are related as they describe a user's appreciation for the software's visual design.
Criteria: A user appreciates the aesthetics or visual design of the software.
Phrase: Appreciating aesthetics.

18.
Concepts: design compliment, praise for software design, design quality acknowledgement
Relationship: The concepts are related as they describe a user's positive feedback on the software design.
Criteria: A user praises or compliments the software design.
Phrase: Praising design.

19.
Concepts: software praise, praising software usability, appreciation for practicality
Relationship: The concepts are related as they describe a user's positive feedback on the software's practicality.
Criteria: User praises the software for being practical and user-friendly.
Phrase: Praising software.

20.
Concepts: providing compliments, complimenting software, appreciating software features, compliment on software feature
Relationship: The concepts are related as they describe a user's positive feedback on a software feature or aspect.
Criteria: A user compliments a specific feature or aspect of the software.
Phrase: Providing compliments.

21.
Concepts: praising software, sharing positive feedback, positive feedback, expressing satisfaction with software
Relationship: The concepts are related as they describe a user's positive sentiment towards the software.
Criteria: A user praises or expresses appreciation for the software.
Phrase: Praising software.

22.
Concepts: shares positive experience, sharing positive experience
Relationship: The concepts are synonymous, describing a user's sharing of a positive experience or feedback.
Criteria: User shares a positive experience or feedback about using the software.
Phrase: Sharing positive experience.

23.
Concepts: describing positive experience, highlighting user experience
Relationship: The concepts are related as they describe a user's sharing of a positive experience or outcome.
Criteria: A user describes a positive experience or outcome.
Phrase: Describing positive experience.

24.
Concepts: sharing classroom experience, sharing positive classroom experiences, illustrate classroom success
Relationship: The concepts are related as they describe a user's sharing of a positive experience or outcome in a classroom setting.
Criteria: A user shares a positive experience using the software in a classroom setting.
Phrase: Sharing classroom experience.

25.
Concepts: comparative analysis, comparative advantage
Relationship: The concepts are related as they describe a comparison of the software with other similar tools or platforms.
Criteria: Comparing the software to other similar tools or platforms.
Phrase: Conducting comparative analysis.

26.
Concepts: comparing with other software, comparing to other software, comparison with other applications
Relationship: The concepts are related as they describe a user's comparison of the software with other similar tools or software.
Criteria: User compares the software with other similar tools or software.
Phrase: Comparing with other software.

27.
Concepts: highlighting positive aspect, highlighting software effectiveness
Relationship: The concepts are related as they describe a user's emphasis on a positive aspect of the software.
Criteria: User highlights a positive aspect of the software.
Phrase: Highlighting positive aspect.

28.
Concepts: highlighting practicality, highlighting practical application, highlighting practical utility
Relationship: The concepts are related as they describe a user's emphasis on the software's practical benefits.
Criteria: User highlights the practicality or usefulness of the software.
Phrase: Highlighting practicality.

29.
Concepts: seeking convenience, expressing desire for convenience
Relationship: The concepts are related as they describe a user's request for convenience in a specific feature.
Criteria: User expresses a desire for convenience in a specific feature.
Phrase: Seeking convenience.

30.
Concepts: suggesting convenience features, suggesting features for educational convenience
Relationship: The concepts are related as they describe a user's suggestion for a feature or function for convenience.
Criteria: A user suggests a feature or function for convenience or efficiency.
Phrase: Suggesting convenience features.

31.
Concepts: emphasizing convenience, stressing convenience and practicality
Relationship: The concepts are related as they describe a user's emphasis on the importance of convenience.
Criteria: User emphasizes the importance of convenience or ease of use.
Phrase: Emphasizing convenience.

32.
Concepts: craftsmanship appreciation, acknowledge craftsmanship, acknowledging craftsmanship
Relationship: The concepts are related as they describe a user's appreciation for the designer's attention to detail or craftsmanship.
Criteria: User expresses appreciation for the designer's attention to detail or craftsmanship.
Phrase: Appreciating craftsmanship.