You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (14 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
14. 
Concepts: {Repeat the input 14}
Relationship: {What is logical relationship between concepts in code 14, or N/A if not applicable}
Criteria: {Who did what, and how for code 14}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: feature preview, preview detailed updates
- Designers share images or information about upcoming software updates or features.
- Designers share overviews and specific details about expected software updates.

2.
Concepts: explain planned updates, enumerate upcoming features
- Designers outline features available in future versions, detailing their functionality.
- Designers enumerate upcoming features and updates regarding new improvements and bug fixes.

3.
Concepts: plan future software updates, discuss future software compatibility
- Designers share discussions and planning for future updates and functionalities.
- Designers discuss plans and considerations for future software compatibility and updates.

4.
Concepts: confirm future updates, communicate community updates
- Designers confirm and communicate upcoming software updates to the community.
- Designers communicate version releases and updates to the community, inviting input on future enhancements.

5.
Concepts: announce software releases, announce software modifications
- Designers inform the community about new software version releases, features, and release stages.
- Designers share updates and announce adjustments that enhance software functionalities.

6.
Concepts: clarify version updates, inform about component changes, inform about product iterations
- Designers provide clarification and updates regarding significant changes or new features added to the product.
- Designers inform users about changes in component specifications or functionalities.
- Designers inform users about new versions and minor updates related to availability and downloads.

7.
Concepts: provide update timeline, convey development timelines
- Designers inform users about expected timelines for upcoming Android updates.
- Designers communicate and outline expected timelines for software updates and features.

8.
Concepts: outline feature development, outline development priorities
- Designers outline plans and timelines related to upcoming feature developments.
- Designers discuss and outline priorities for project development and feature implementation.

9.
Concepts: gather user experiences, inquire about user challenges
- Designers ask users to share their experiences and challenges faced while using the software.
- Designers seek input and clarification from users regarding their challenges.

10.
Concepts: gather user input, solicit user feedback
- Designers seek insights and preferences from users to inform upcoming software iterations.
- Designers actively invite feedback about desired features from users based on their experiences.

11.
Concepts: express user appreciation, acknowledge community support
- Users express gratitude towards community members for their support.
- Users and designers express gratitude for contributions to the community.

12.
Concepts: appreciate user feedback, appreciate support from users
- Designers acknowledge and express gratitude for user suggestions that may inform future updates.
- Designers convey gratitude towards users for their support and engagement with the software.

13.
Concepts: request user manual, request guidance on usage
- Users inquire about the availability of user manuals or guidance materials for the software.
- Users express their need for assistance regarding software functionalities and usage.

14.
Concepts: share positive classroom experiences
- Users share successful experiences of using the software in classroom environments.
- Users express admiration and recognition for the software and its features.
===
---
Definitions for each code (14 in total):
1.  
Concepts: feature preview, preview detailed updates  
Relationship: Both concepts focus on the communication of upcoming software changes by designers to the community.  
Criteria: Designers share both images and detailed information about software updates, providing a comprehensive preview for users.  
Phrase: Share upcoming software features  

2.  
Concepts: explain planned updates, enumerate upcoming features  
Relationship: Both concepts involve detailing future software capabilities and enhancements.  
Criteria: Designers outline and list features planned for future software versions, explaining their functions and improvements.  
Phrase: Detail future software enhancements  

3.  
Concepts: plan future software updates, discuss future software compatibility  
Relationship: Both concepts involve future planning for updates and ensuring compatibility with existing software.  
Criteria: Designers engage in discussions about future updates, considering functionality and compatibility with current systems.  
Phrase: Plan future software developments  

4.  
Concepts: confirm future updates, communicate community updates  
Relationship: Both concepts involve informing the community about upcoming changes and fostering engagement.  
Criteria: Designers confirm and inform the community of upcoming updates, ensuring transparency and inviting feedback.  
Phrase: Communicate upcoming updates  

5.  
Concepts: announce software releases, announce software modifications  
Relationship: Both concepts relate to informing the community about software changes and updates.  
Criteria: Designers notify the community about new software releases and modifications, detailing features and enhancements.  
Phrase: Announce software changes  

6.  
Concepts: clarify version updates, inform about component changes, inform about product iterations  
Relationship: All concepts are interconnected through providing clarifications about software updates and changes.  
Criteria: Designers clarify version changes, inform about specific component updates, and discuss product iterations with users.  
Phrase: Clarify software modifications  

7.  
Concepts: provide update timeline, convey development timelines  
Relationship: Both concepts focus on outlining expected timelines for software updates.  
Criteria: Designers communicate anticipated timelines for upcoming software updates and features to users.  
Phrase: Outline software update timelines  

8.  
Concepts: outline feature development, outline development priorities  
Relationship: Both concepts relate to strategic planning concerning upcoming features and development focus.  
Criteria: Designers outline timelines and priorities for future feature developments within the software.  
Phrase: Plan feature development  

9.  
Concepts: gather user experiences, inquire about user challenges  
Relationship: Both concepts emphasize collecting feedback from users regarding their experiences with the software.  
Criteria: Designers actively solicit user experiences and challenges to gain insights for improvements.  
Phrase: Gather user feedback  

10.  
Concepts: gather user input, solicit user feedback  
Relationship: Both concepts focus on inviting users to share their thoughts and preferences regarding software features.  
Criteria: Designers seek user insights and feedback to inform software iterations and improvements.  
Phrase: Solicit user input  

11.  
Concepts: express user appreciation, acknowledge community support  
Relationship: Both concepts convey gratitude from users and designers toward community support and contributions.  
Criteria: Users and designers express appreciation for community engagement and contributions to the software.  
Phrase: Acknowledge community support  

12.  
Concepts: appreciate user feedback, appreciate support from users  
Relationship: Both concepts highlight the importance of user engagement and the gratitude expressed for feedback.  
Criteria: Designers recognize and appreciate user suggestions and support, acknowledging their impact on software development.  
Phrase: Value user contributions  

13.  
Concepts: request user manual, request guidance on usage  
Relationship: Both concepts involve inquiries from users seeking assistance or resources for software usage.  
Criteria: Users ask for manuals and guidance to improve their understanding and use of the software.  
Phrase: Seek usage assistance  

14.  
Concepts: share positive classroom experiences  
Relationship: This concept centers on users discussing favorable experiences with the software in educational settings.  
Criteria: Users recount successful uses of the software in classrooms, highlighting its effectiveness and features.  
Phrase: Share successful usage experiences  
---