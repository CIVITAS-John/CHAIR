You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (46 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
46. 
Concepts: {Repeat the input 46}
Relationship: {What is logical relationship between concepts in code 46, or N/A if not applicable}
Criteria: {Who did what, and how for code 46}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: share teaching experience, share classroom experiences
- A user shares their teaching experience.
- A user shares their experiences and the impact of the software on their teaching or learning.

2.
Concepts: share teaching background, introduce teacher identity
- A user provides a summary of their teaching background.
- A user identifies themselves as a teacher and discusses their teaching experience.

3.
Concepts: express gratitude, express appreciation
- A user expresses gratitude or acknowledges contributions.
- A person expresses gratitude or appreciation.

4.
Concepts: user appreciation, user compliments
- Expressions of thanks or appreciation from users.
- Users complimenting the progress or development of the app.

5.
Concepts: praise software, appreciate features
- A user praises the software for its positive attributes.
- A user expresses appreciation for specific features or aspects of the software.

6.
Concepts: comment on usability, discuss usability in context
- A user comments on the usability and practicality of the software.
- A user describes the specific contexts in which they use the software and its usability.

7.
Concepts: maintain development transparency, ensuring development transparency
- Providing transparency about the development process.
- Keeping the community informed about the development process.

8.
Concepts: use emojis, express emotions with emojis
- A user uses an emoji in their communication.
- Users express emotions using emojis.

9.
Concepts: informal interaction, engaging in informal communication
- A participant engages in informal or casual interaction with others.
- Instances of casual and informal communication among community members.

10.
Concepts: self-introduction, greet the community
- When a user introduces themselves to the community.
- Users greet or introduce themselves to the community.

11.
Concepts: apologizing for disturbances, apologize for potential interruption
- Designers apologize for any inconvenience caused to users.
- A designer apologizes for a potential interruption or inconvenience.

12.
Concepts: detail version updates, list new features and fixes
- Providing detailed notes on version updates, including new features and adjustments.
- Listing new features, components, adjustments, and bug fixes in software updates.

13.
Concepts: announce version details, announce new version to community
- Designers provide updates about software versions and new features.
- Designers provide updates or announcements about new software versions to the community.

14.
Concepts: notify about updates, provide update information
- Informing users about the release of updates or new versions.
- Providing information about changes, new features, or updates in the product.

15.
Concepts: announce software update, announce new version release
- Announcing or describing a new software version update.
- Announcing the release of a new feature or software version.

16.
Concepts: communicate release plans, communicate updates to users
- The designer communicates plans or schedules for releasing updates.
- Designers communicate updates and release schedules to users.

17.
Concepts: announce upcoming updates, announce planned updates
- A designer announces upcoming updates or features.
- A designer announces plans for future updates or features.

18.
Concepts: give a timeline, provide release timeline
- A person provides a timeline for updates or releases.
- Providing a timeline for the release of updates or feature development.

19.
Concepts: inquire about updates, inquire about update timeline
- Users inquire about recent, upcoming, or scheduled updates.
- A user inquires about the timeline for upcoming updates.

20.
Concepts: feature roadmap, outline development priorities
- A person outlines the order or priority of features to be developed or completed.
- Statements indicating the order in which tasks or features will be developed.

21.
Concepts: managing expectations, expectation management
- A designer manages user expectations about features or updates.
- When the designer sets or manages expectations regarding software features or timelines.

22.
Concepts: product improvement, discuss design refinement
- A designer discusses product improvement plans.
- A designer discusses refining or adapting the design.

23.
Concepts: promise future feature, promise future perfection
- The developer promises that a feature or update will be implemented in the future.
- Assuring users that a feature will be improved or perfected in the future.

24.
Concepts: list upcoming features, explanation of upcoming features
- Listing features that will be included in future software updates.
- Providing details about upcoming features or functionalities.

25.
Concepts: future update, mention future actions
- Mentioning future updates or developments that are planned.
- Mentioning potential future actions or plans for software development.

26.
Concepts: discussing future plans, discuss update planning
- Outlining future plans or priorities for development.
- Discussing plans or steps for future updates or developments.

27.
Concepts: follow-up on needs, ask design questions, asking follow-up questions
- A designer asks follow-up questions on user needs.
- A designer asks design-related questions to gather more information or clarify requirements.
- A designer asks additional questions to gather more information.

28.
Concepts: seek design clarification, user request clarification
- A user or designer seeks clarification on design details.
- A designer acknowledges understanding a user's request and asks for more details.

29.
Concepts: engage in co-design, involve users in design
- Users and designers interact collaboratively in the design process.
- Designers actively involve users in the design process.

30.
Concepts: encourage participation, offering co-designing
- A designer invites or encourages community members to participate or provide input.
- A designer offers the opportunity for community members to participate in the design process.

31.
Concepts: responding to users, demonstrating designer responsiveness
- Designers respond to user feedback or queries.
- Designers respond to user queries or feedback.

32.
Concepts: designer acknowledgment, respond to feedback
- Acknowledging user feedback and indicating plans for future updates.
- A user or designer acknowledges and appreciates feedback, indicating plans to consider it.

33.
Concepts: accepting suggestions, integrate user feedback
- A designer accepts a user's suggestion.
- A designer agrees to include a user suggestion in a future update.

34.
Concepts: collect user input, gather user feedback
- Collecting user input or opinions on specific design choices or features.
- A designer gathers feedback from users about their experiences or issues.

35.
Concepts: suggest new feature, provide feature suggestion
- A participant suggests new features or improvements for the platform.
- Users suggest new features, design improvements, or usability enhancements.

36.
Concepts: solicit user feedback, encourage user feedback
- Requesting feedback or suggestions from users.
- Encouraging users to provide feedback or suggestions.

37.
Concepts: providing user feedback, provide user suggestions
- Users provide feedback or suggestions about the software.
- Users provide suggestions or feedback on features and improvements for the software.

38.
Concepts: request user manual, reiterate need for manual
- A person reiterates or justifies a request for a user manual.
- Reiterating the need for a user manual.

39.
Concepts: requesting features, request specific features
- Users request new features or improvements.
- A user makes a detailed request for specific features or functionalities.

40.
Concepts: seek help, request technical support
- A user seeks help or information regarding the software.
- A user asks for help or guidance on technical issues regarding the software.

41.
Concepts: check system compatibility, confirm system compatibility
- A designer suggests checking system compatibility.
- A designer confirms the compatibility of the software with a specific system.

42.
Concepts: technical consideration, discussing technical constraints
- Discussing technical considerations or requirements.
- Discussing technical limitations or requirements.

43.
Concepts: system limitations, explain system limitations
- A person mentions limitations or issues with a computer system.
- A participant explains the limitations or constraints of a feature or function.

44.
Concepts: example of functionality, explain feature functionality
- Providing examples to illustrate a feature's functions.
- Explaining the functionality of a component or feature.

45.
Concepts: offering solutions
- Offering solutions or advice to specific user issues or questions.
- A participant offers solutions or recommendations to address issues.

46.
Concepts: engage with community
- Engaging with the community through questions, compliments, or comments.
- A designer engages with the community by sharing their interests and plans.
===
---
Definitions for each code (46 in total):
1.
Concepts: share teaching experience, share classroom experiences
Relationship: Both involve sharing personal teaching experiences.
Criteria: A user shares their teaching experiences and the impact of the software on their teaching or learning.
Phrase: Sharing teaching and classroom experiences

2.
Concepts: share teaching background, introduce teacher identity
Relationship: Both involve providing background information about one's teaching career.
Criteria: A user provides a summary of their teaching background and identifies themselves as a teacher.
Phrase: Introducing teaching background and identity

3.
Concepts: express gratitude, express appreciation
Relationship: Both involve expressing positive feelings towards others.
Criteria: A user expresses gratitude or appreciation towards contributions or support.
Phrase: Expressing gratitude and appreciation

4.
Concepts: user appreciation, user compliments
Relationship: Both involve users expressing positive feedback.
Criteria: Users express thanks or compliments regarding the progress or development of the app.
Phrase: Showing user appreciation and compliments

5.
Concepts: praise software, appreciate features
Relationship: Both involve positive feedback about the software.
Criteria: A user praises the software and expresses appreciation for its specific features.
Phrase: Praising software and its features

6.
Concepts: comment on usability, discuss usability in context
Relationship: Both involve discussing how the software is used.
Criteria: A user comments on the usability of the software and describes its practical use in specific contexts.
Phrase: Discussing software usability in context

7.
Concepts: maintain development transparency, ensuring development transparency
Relationship: Both involve keeping the development process open and clear.
Criteria: Providing transparency and keeping the community informed about the development process.
Phrase: Ensuring development transparency

8.
Concepts: use emojis, express emotions with emojis
Relationship: Both involve using emojis to convey feelings.
Criteria: Users express emotions using emojis in their communication.
Phrase: Expressing emotions with emojis

9.
Concepts: informal interaction, engaging in informal communication
Relationship: Both involve casual communication among community members.
Criteria: Participants engage in informal or casual interactions with each other.
Phrase: Engaging in informal communication

10.
Concepts: self-introduction, greet the community
Relationship: Both involve introducing oneself to the community.
Criteria: Users greet or introduce themselves to the community.
Phrase: Introducing oneself to the community

11.
Concepts: apologizing for disturbances, apologize for potential interruption
Relationship: Both involve apologizing for causing inconvenience.
Criteria: Designers apologize for any inconvenience or potential interruptions caused to users.
Phrase: Apologizing for disturbances

12.
Concepts: detail version updates, list new features and fixes
Relationship: Both involve providing information on software updates.
Criteria: Providing detailed notes on version updates, including new features and fixes.
Phrase: Detailing version updates

13.
Concepts: announce version details, announce new version to community
Relationship: Both involve informing the community about software updates.
Criteria: Designers provide updates or announcements about new software versions to the community.
Phrase: Announcing new version details

14.
Concepts: notify about updates, provide update information
Relationship: Both involve informing users about software changes.
Criteria: Informing users about the release of updates or new versions and providing related information.
Phrase: Notifying about updates

15.
Concepts: announce software update, announce new version release
Relationship: Both involve announcing new software versions.
Criteria: Announcing or describing the release of a new software version or feature.
Phrase: Announcing software updates

16.
Concepts: communicate release plans, communicate updates to users
Relationship: Both involve sharing information about software updates.
Criteria: Designers communicate plans or schedules for releasing updates to users.
Phrase: Communicating release plans

17.
Concepts: announce upcoming updates, announce planned updates
Relationship: Both involve informing about future updates.
Criteria: A designer announces upcoming updates or features.
Phrase: Announcing upcoming updates

18.
Concepts: give a timeline, provide release timeline
Relationship: Both involve providing a schedule for updates.
Criteria: Providing a timeline for the release of updates or feature development.
Phrase: Providing release timelines

19.
Concepts: inquire about updates, inquire about update timeline
Relationship: Both involve asking about future updates.
Criteria: Users inquire about recent, upcoming, or scheduled updates.
Phrase: Inquiring about updates

20.
Concepts: feature roadmap, outline development priorities
Relationship: Both involve outlining the development plan.
Criteria: A person outlines the order or priority of features to be developed or completed.
Phrase: Outlining development priorities

21.
Concepts: managing expectations, expectation management
Relationship: Both involve setting user expectations.
Criteria: A designer manages user expectations about features or updates.
Phrase: Managing user expectations

22.
Concepts: product improvement, discuss design refinement
Relationship: Both involve discussing enhancements to the product.
Criteria: A designer discusses plans for product improvement and design refinement.
Phrase: Discussing product improvement

23.
Concepts: promise future feature, promise future perfection
Relationship: Both involve assuring future improvements.
Criteria: The developer promises that a feature or update will be implemented or improved in the future.
Phrase: Promising future features

24.
Concepts: list upcoming features, explanation of upcoming features
Relationship: Both involve detailing future software additions.
Criteria: Listing and providing details about features that will be included in future software updates.
Phrase: Listing upcoming features

25.
Concepts: future update, mention future actions
Relationship: Both involve discussing future plans for the software.
Criteria: Mentioning future updates or potential actions for software development.
Phrase: Mentioning future updates

26.
Concepts: discussing future plans, discuss update planning
Relationship: Both involve talking about future developments.
Criteria: Outlining and discussing plans or steps for future updates or developments.
Phrase: Discussing future plans

27.
Concepts: follow-up on needs, ask design questions, asking follow-up questions
Relationship: All involve seeking additional information or clarification.
Criteria: A designer asks follow-up questions on user needs or design-related questions to gather more information.
Phrase: Asking follow-up questions

28.
Concepts: seek design clarification, user request clarification
Relationship: Both involve seeking clarity on design aspects.
Criteria: A user or designer seeks clarification on design details and requests more information.
Phrase: Seeking design clarification

29.
Concepts: engage in co-design, involve users in design
Relationship: Both involve collaboration between users and designers.
Criteria: Users and designers interact collaboratively in the design process.
Phrase: Engaging in co-design

30.
Concepts: encourage participation, offering co-designing
Relationship: Both involve inviting user involvement in design.
Criteria: A designer encourages community members to participate or provide input in the design process.
Phrase: Encouraging co-design participation

31.
Concepts: responding to users, demonstrating designer responsiveness
Relationship: Both involve designers addressing user feedback.
Criteria: Designers respond to user feedback or queries.
Phrase: Responding to users

32.
Concepts: designer acknowledgment, respond to feedback
Relationship: Both involve acknowledging user input.
Criteria: A user or designer acknowledges and appreciates feedback, indicating plans to consider it.
Phrase: Acknowledging user feedback

33.
Concepts: accepting suggestions, integrate user feedback
Relationship: Both involve incorporating user input.
Criteria: A designer accepts a user suggestion and agrees to include it in a future update.
Phrase: Integrating user suggestions

34.
Concepts: collect user input, gather user feedback
Relationship: Both involve gathering information from users.
Criteria: Collecting user input or opinions on specific design choices or features.
Phrase: Gathering user feedback

35.
Concepts: suggest new feature, provide feature suggestion
Relationship: Both involve proposing new functionalities.
Criteria: A participant suggests new features or improvements for the platform.
Phrase: Suggesting new features

36.
Concepts: solicit user feedback, encourage user feedback
Relationship: Both involve requesting user opinions.
Criteria: Requesting and encouraging users to provide feedback or suggestions.
Phrase: Soliciting user feedback

37.
Concepts: providing user feedback, provide user suggestions
Relationship: Both involve users giving their opinions.
Criteria: Users provide feedback or suggestions about the software.
Phrase: Providing user feedback

38.
Concepts: request user manual, reiterate need for manual
Relationship: Both involve emphasizing the need for documentation.
Criteria: A person reiterates or justifies a request for a user manual.
Phrase: Requesting a user manual

39.
Concepts: requesting features, request specific features
Relationship: Both involve asking for new functionalities.
Criteria: Users request new features or make detailed requests for specific functionalities.
Phrase: Requesting features

40.
Concepts: seek help, request technical support
Relationship: Both involve asking for assistance.
Criteria: A user seeks help or guidance on technical issues regarding the software.
Phrase: Requesting technical support

41.
Concepts: check system compatibility, confirm system compatibility
Relationship: Both involve verifying software compatibility.
Criteria: A designer suggests checking or confirms the compatibility of the software with a specific system.
Phrase: Confirming system compatibility

42.
Concepts: technical consideration, discussing technical constraints
Relationship: Both involve addressing technical aspects.
Criteria: Discussing technical considerations, limitations, or requirements.
Phrase: Discussing technical constraints

43.
Concepts: system limitations, explain system limitations
Relationship: Both involve mentioning software limitations.
Criteria: A participant explains or mentions the limitations or constraints of a feature or function.
Phrase: Explaining system limitations

44.
Concepts: example of functionality, explain feature functionality
Relationship: Both involve demonstrating how a feature works.
Criteria: Providing examples or explanations to illustrate a feature's functions.
Phrase: Explaining feature functionality

45.
Concepts: offering solutions
Relationship: N/A
Criteria: A participant offers solutions or recommendations to address issues.
Phrase: Offering solutions

46.
Concepts: engage with community
Relationship: N/A
Criteria: A designer engages with the community by sharing their interests and plans.
Phrase: Engaging with the community
---