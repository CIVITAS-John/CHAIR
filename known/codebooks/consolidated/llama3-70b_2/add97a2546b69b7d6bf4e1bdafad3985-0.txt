You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: designer response, address feedback process, reaction to feedback
- Instances where designers respond to user feedback or suggestions.
- Instances where designers respond to user feedback or queries.
- The designer addresses or responds to user feedback, providing explanations or solutions.
- A designer or developer responds to user feedback or suggestions.

2.
Concepts: response to question, initial response
- A user or designer responds directly to a question.
- The designer responds directly to a user's initial question or inquiry.

3.
Concepts: user need, ask about user needs
- Expressing user needs or requirements for the software.
- Inquiring about user needs or requirements for the software.

4.
Concepts: identify user needs, trying to understand the needs
- A designer or developer attempts to understand or identify the needs of the user.
- The designer asks about users' needs or problems.

5.
Concepts: user background inquiry, inquire about user's teaching background
- The designer inquires about a user's background or profession.
- The designer asks about a user's teaching background or experience.

6.
Concepts: questioning identity, question about identity
- The designer questions the identity or role of a user.
- The designer asks about a user's identity or role.

7.
Concepts: limitation acknowledgment, acknowledge potential issue
- A designer or developer acknowledges limitations or potential issues with a feature or software.
- A designer acknowledges a potential issue or problem with a feature or implementation.

8.
Concepts: promise to improve, commit to improvement
- The designer promises or commits to improving or addressing an issue.
- The designer commits to improving or addressing an issue.

9.
Concepts: design refinement, simplification and refinement in design
- Refining or simplifying design elements or features.
- The designer prioritizes simplifying or refining a design or feature.

10.
Concepts: feature simplification, suggesting simplification
- A designer or developer suggests simplifying a feature or process.
- A suggestion is made to simplify a process or feature.

11.
Concepts: adapt design plan, feature adjustment, design adaptation
- A designer adapts or adjusts their design plan based on user feedback.
- Designer adjusts or refines a feature based on user feedback or needs.
- The designer adapts or modifies a design element in response to user feedback or needs.

12.
Concepts: personal interest, expression of interest
- The designer expresses personal interest or enthusiasm for a topic.
- A designer expresses interest in a specific topic or field.

13.
Concepts: explain bidirectional conversion feature, reiterate bidirectional conversion feature
- The designer explains a feature that allows for bidirectional conversion between two formats.
- The designer reiterates or explains a feature that allows for bidirectional conversion.

14.
Concepts: local export necessity, acknowledge need for local export
- The designer recognizes the need for a local export feature.
- The designer acknowledges the need for a local export feature.

15.
Concepts: design rationale, explaining design goals
- The designer explains the reasoning behind a design decision.
- The designer explains the goals or philosophy behind a design decision.

16.
Concepts: input methods, soft keyboard consideration
- A designer considers or discusses input methods or interfaces for a simulation or feature.
- A designer considers the use of soft keyboards or input methods in a simulation or feature.

17.
Concepts: consider usability, consider user experience
- User or designer considers the usability or user experience of a feature or function.
- The designer considers or discusses user experience or usability.

18.
Concepts: usability, instructional design
- Designer discusses the usability or user experience of the app.
- A designer or developer discusses the instructional design or user experience of the software.

19.
Concepts: design challenges, difficulty in development
- Issues and obstacles faced by designers during the development process.
- Designer expresses difficulty or challenges in developing a feature.

20.
Concepts: feature discussion, design discussion
- Designer discusses or debates the implementation of a feature or function.
- Designer discusses or debates the design or implementation of a feature or function.

21.
Concepts: feature development, feature implementation
- Designer discusses the development or planning of a feature or function.
- The designer discusses implementing a feature or functionality.

22.
Concepts: reflection on experiences, reference past experience
- Designer reflects on past experiences or lessons learned.
- Designer references past experiences or knowledge to inform current development.

23.
Concepts: explain current limitations, talk about limitation of the solution
- Designer explains or describes current limitations or constraints of the app.
- A designer or developer discusses the limitations or constraints of the software or solution.

24.
Concepts: recognize limitation, recognize technical limitation
- A limitation or constraint of the software is acknowledged.
- A technical limitation or constraint is acknowledged.

25.
Concepts: compatibility assurance, confirm compatibility
- A designer assures compatibility with certain devices or systems.
- Designer confirms or checks the compatibility of the app with a specific platform or system.

26.
Concepts: platform management, adapt to platform specific constraints
- The designer manages expectations or limitations specific to a particular platform.
- Designer adapts to platform-specific constraints or limitations.

27.
Concepts: pc version, pc version inquiries
- A user asks about or discusses the PC version of the software.
- A user inquires about the PC version of the software or its features.

28.
Concepts: seek platform information, inquire about specific platform
- Inquiring about specific platform-related information or availability.
- A user or designer asks about a specific platform or its capabilities.

29.
Concepts: software access, download inquiry
- A user inquires about accessing or downloading the software.
- A user inquires about downloading a specific version of the software.

30.
Concepts: provide information, information providing
- Information is provided to clarify or answer a question.
- Responses that provide answers or resources to users' questions.

31.
Concepts: provide example, illustrative example, give examples of feature
- The designer provides an example to illustrate a concept or feature.
- The designer provides a concrete example to illustrate the functionality of a feature.
- A designer provides examples of a feature or functionality.

32.
Concepts: technical clarification, provide technical details
- The designer provides technical explanations or clarifications on specific features or issues.
- A designer or developer provides technical details or explanations about the software.
===
Here are the definitions for each code:

---
1.
Concepts: designer response, address feedback process, reaction to feedback
Relationship: The concepts are related as they all describe the designer's action of responding to user feedback.
Criteria: The designer responds to user feedback, providing explanations or solutions.
Phrase: Respond to user feedback.

2.
Concepts: response to question, initial response
Relationship: The concepts are related as they both describe the initial response to a user's question.
Criteria: A user or designer responds directly to a question.
Phrase: Respond to a question.

3.
Concepts: user need, ask about user needs
Relationship: The concepts are related as they both describe the process of inquiring about user needs.
Criteria: Expressing user needs or requirements for the software.
Phrase: Inquire about user needs.

4.
Concepts: identify user needs, trying to understand the needs
Relationship: The concepts are related as they both describe the designer's attempt to understand user needs.
Criteria: A designer or developer attempts to understand or identify the needs of the user.
Phrase: Identify user needs.

5.
Concepts: user background inquiry, inquire about user's teaching background
Relationship: The concepts are related as they both describe the designer's inquiry about the user's background.
Criteria: The designer inquires about a user's background or profession.
Phrase: Inquire about user background.

6.
Concepts: questioning identity, question about identity
Relationship: The concepts are related as they both describe the designer's inquiry about the user's identity.
Criteria: The designer questions the identity or role of a user.
Phrase: Question user identity.

7.
Concepts: limitation acknowledgment, acknowledge potential issue
Relationship: The concepts are related as they both describe the designer's acknowledgment of limitations or potential issues.
Criteria: A designer or developer acknowledges limitations or potential issues with a feature or software.
Phrase: Acknowledge limitations.

8.
Concepts: promise to improve, commit to improvement
Relationship: The concepts are related as they both describe the designer's commitment to improving or addressing an issue.
Criteria: The designer promises or commits to improving or addressing an issue.
Phrase: Commit to improvement.

9.
Concepts: design refinement, simplification and refinement in design
Relationship: The concepts are related as they both describe the process of refining or simplifying design elements.
Criteria: Refining or simplifying design elements or features.
Phrase: Refine design.

10.
Concepts: feature simplification, suggesting simplification
Relationship: The concepts are related as they both describe the suggestion of simplifying a feature or process.
Criteria: A designer or developer suggests simplifying a feature or process.
Phrase: Suggest simplification.

11.
Concepts: adapt design plan, feature adjustment, design adaptation
Relationship: The concepts are related as they all describe the designer's adaptation of their design plan based on user feedback.
Criteria: A designer adapts or adjusts their design plan based on user feedback.
Phrase: Adapt design plan.

12.
Concepts: personal interest, expression of interest
Relationship: The concepts are related as they both describe the designer's expression of personal interest.
Criteria: The designer expresses personal interest or enthusiasm for a topic.
Phrase: Express interest.

13.
Concepts: explain bidirectional conversion feature, reiterate bidirectional conversion feature
Relationship: The concepts are related as they both describe the designer's explanation of a feature.
Criteria: The designer explains a feature that allows for bidirectional conversion between two formats.
Phrase: Explain feature.

14.
Concepts: local export necessity, acknowledge need for local export
Relationship: The concepts are related as they both describe the designer's recognition of the need for a local export feature.
Criteria: The designer recognizes the need for a local export feature.
Phrase: Acknowledge need for local export.

15.
Concepts: design rationale, explaining design goals
Relationship: The concepts are related as they both describe the designer's explanation of the reasoning behind a design decision.
Criteria: The designer explains the reasoning behind a design decision.
Phrase: Explain design rationale.

16.
Concepts: input methods, soft keyboard consideration
Relationship: The concepts are related as they both describe the designer's consideration of input methods or interfaces.
Criteria: A designer considers or discusses input methods or interfaces for a simulation or feature.
Phrase: Consider input methods.

17.
Concepts: consider usability, consider user experience
Relationship: The concepts are related as they both describe the designer's consideration of usability or user experience.
Criteria: User or designer considers the usability or user experience of a feature or function.
Phrase: Consider usability.

18.
Concepts: usability, instructional design
Relationship: The concepts are related as they both describe the designer's discussion of usability or user experience.
Criteria: Designer discusses the usability or user experience of the app.
Phrase: Discuss usability.

19.
Concepts: design challenges, difficulty in development
Relationship: The concepts are related as they both describe the designer's expression of difficulty or challenges in development.
Criteria: Issues and obstacles faced by designers during the development process.
Phrase: Express design challenges.

20.
Concepts: feature discussion, design discussion
Relationship: The concepts are related as they both describe the designer's discussion of a feature or function.
Criteria: Designer discusses or debates the implementation of a feature or function.
Phrase: Discuss feature.

21.
Concepts: feature development, feature implementation
Relationship: The concepts are related as they both describe the designer's discussion of developing or planning a feature or function.
Criteria: Designer discusses the development or planning of a feature or function.
Phrase: Develop feature.

22.
Concepts: reflection on experiences, reference past experience
Relationship: The concepts are related as they both describe the designer's reflection on past experiences.
Criteria: Designer reflects on past experiences or lessons learned.
Phrase: Reflect on experiences.

23.
Concepts: explain current limitations, talk about limitation of the solution
Relationship: The concepts are related as they both describe the designer's explanation of current limitations or constraints.
Criteria: Designer explains or describes current limitations or constraints of the app.
Phrase: Explain limitations.

24.
Concepts: recognize limitation, recognize technical limitation
Relationship: The concepts are related as they both describe the designer's recognition of limitations or constraints.
Criteria: A limitation or constraint of the software is acknowledged.
Phrase: Recognize limitations.

25.
Concepts: compatibility assurance, confirm compatibility
Relationship: The concepts are related as they both describe the designer's assurance of compatibility with certain devices or systems.
Criteria: A designer assures compatibility with certain devices or systems.
Phrase: Assure compatibility.

26.
Concepts: platform management, adapt to platform specific constraints
Relationship: The concepts are related as they both describe the designer's management of expectations or limitations specific to a particular platform.
Criteria: The designer manages expectations or limitations specific to a particular platform.
Phrase: Manage platform constraints.

27.
Concepts: pc version, pc version inquiries
Relationship: The concepts are related as they both describe the user's inquiry about the PC version of the software.
Criteria: A user asks about or discusses the PC version of the software.
Phrase: Inquire about PC version.

28.
Concepts: seek platform information, inquire about specific platform
Relationship: The concepts are related as they both describe the user's inquiry about specific platform-related information or availability.
Criteria: Inquiring about specific platform-related information or availability.
Phrase: Inquire about platform information.

29.
Concepts: software access, download inquiry
Relationship: The concepts are related as they both describe the user's inquiry about accessing or downloading the software.
Criteria: A user inquires about accessing or downloading the software.
Phrase: Inquire about software access.

30.
Concepts: provide information, information providing
Relationship: The concepts are related as they both describe the provision of information to clarify or answer a question.
Criteria: Information is provided to clarify or answer a question.
Phrase: Provide information.

31.
Concepts: provide example, illustrative example, give examples of feature
Relationship: The concepts are related as they all describe the designer's provision of an example to illustrate a concept or feature.
Criteria: The designer provides an example to illustrate a concept or feature.
Phrase: Provide example.

32.
Concepts: technical clarification, provide technical details
Relationship: The concepts are related as they both describe the designer's provision of technical explanations or clarifications.
Criteria: The designer provides technical explanations or clarifications on specific features or issues.
Phrase: Provide technical clarification.