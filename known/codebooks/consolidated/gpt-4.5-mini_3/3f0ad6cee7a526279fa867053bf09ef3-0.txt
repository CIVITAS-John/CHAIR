You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (41 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
41. 
Concepts: {Repeat the input 41}
Relationship: {What is logical relationship between concepts in code 41, or N/A if not applicable}
Criteria: {Who did what, and how for code 41}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: appreciate features, compliments the software
- Users provide positive reviews of the software's practicality.
- A user praises the software's simulation capabilities based on classroom experience.

2.
Concepts: agree with suggestions, agree with focus areas
- Users express agreement with previous suggestions in discussions.
- A user agrees with the focus areas discussed, indicating shared priorities.

3.
Concepts: confirm information, acknowledge information
- Users confirm and acknowledge information in response to queries.
- Users confirm finding and receiving information.

4.
Concepts: greet warmly, initiate interaction
- Designers greet users to maintain community interaction.
- A user initiates interaction by greeting the community.

5.
Concepts: acknowledge assistance, express gratitude for resources
- Users acknowledge help and resources provided by others.
- Users express appreciation for the resources available in the community.

6.
Concepts: explain lack of internet, discuss internet restrictions
- User explains the reasons for the lack of internet access in their educational setting.
- Users describe limitations regarding internet access in classrooms.

7.
Concepts: share teaching background, share identity in response to inquiries
- Users provide background information about their teaching roles.
- Users provide information about their teaching backgrounds in response to inquiries.

8.
Concepts: establish credibility, share professional background
- A user shares their teaching experience to establish their expertise in the community.
- Users provide information about their backgrounds to establish credibility.

9.
Concepts: share context, share stories
- Users recount past incidents to provide context for discussions.
- Users recount past incidents affecting their educational experiences.

10.
Concepts: justify suggestions, provide rationale
- Users explain the rationale behind their feature requests.
- Participants provide explanations for decisions or actions taken, often relating to user experience or software functionality.

11.
Concepts: asking follow-up questions, follow-up on design information
- Users or designers ask follow-up questions to clarify or confirm information regarding requests or discussions.
- A user follows up on previous discussions about network policies affecting the application.

12.
Concepts: request new features, feature request invitation
- Instances where users request specific features or improvements to the product.
- Designers invite users to suggest new features or improvements.

13.
Concepts: suggest enhancements, suggest improvements, suggest new features
- Users propose practical applications for the software.
- Users suggest enhancements for the software's educational usability.
- Users suggest new features or improvements that could enhance the software's functionality.

14.
Concepts: request resources, request assistance
- Users request resources related to the software's features.
- Users ask for guidance on software access and downloads.

15.
Concepts: inquire about issues, inquire about design elements
- Designers ask users to specify encountered problems.
- Designers pose questions regarding design elements or requirements, often related to user input.

16.
Concepts: implement suggestions, commit to improvement
- Designers accept and implement user suggestions in updates.
- Designers align their actions with user feedback for improvements.

17.
Concepts: offer solutions, propose solutions
- Designers offer and commit to solutions for user issues.
- Designers offer solutions to improve user experience.

18.
Concepts: outline collaborative project planning, engage in community consensus-building
- The designer outlines plans for gathering opinions and confirms the need for collaboration before project development.
- The designer seeks agreement on ideas while committing to consult the community for feedback before decisions are made.

19.
Concepts: gather detailed requirements, collect user input for informed development
- Designer seeks detailed information about user needs or requirements.
- The designer indicates the necessity of gathering user opinions before moving forward with development.

20.
Concepts: address users, address usability concerns
- Designers mention users directly to address concerns.
- The designer addresses usability concerns by explaining design choices and goals.

21.
Concepts: seek understanding, inquire about user roles
- Designers inquire about user contexts to better address needs.
- A designer inquires about the user's role to better assist them.

22.
Concepts: share knowledge, sharing information for design
- Designers provide knowledge about software features and research.
- User shares relevant information or experiences that impact design considerations.

23.
Concepts: maintain polite communication, demonstrate politeness in communication
- The designer expresses regret for any inconvenience caused to users during communication.
- Users or designers use polite language in their interactions.

24.
Concepts: invite questions, promote communication
- Designers encourage ongoing discussions and questions.
- Designers promote open communication for feedback and suggestions.

25.
Concepts: access, provide detailed access information
- The designer provides access information regarding development plans and downloads.
- The designer provides specific information regarding how to access the software and resources.

26.
Concepts: instruction and updates, providing user guidance
- Designers providing updates and instructions to help users understand and use the software effectively.
- Designers provide detailed guidance and instructions on new features and functionalities of the software.

27.
Concepts: seek visual confirmation, use visuals for clarification
- Designer seeks confirmation about a visual element or image.
- The designer shares visual references and images to clarify points or confirm understanding.

28.
Concepts: ensure clarity and accuracy, reflect and clarify previous statements
- The designer seeks clarification on specific details and clarifies points of confusion in discussions.
- The designer reflects on a previous statement, providing clarification or correction as needed.

29.
Concepts: provide version details, specify platform details, clarify version discussions
- Designers provide detailed information and context about the current version of the application.
- The designer specifies the version of the application relevant to the discussion and addresses user inquiries.
- The designer clarifies which version of the application is being discussed and addresses user inquiries.

30.
Concepts: clarify software limitations, discuss technical considerations
- The designer clarifies the limitations of the software's functionality and discusses technical requirements.
- The designer discusses technical aspects that need consideration for the software and its requirements.

31.
Concepts: explain development process, discuss system compatibility, provide technical compatibility information
- The designer explains the theoretical compatibility of the application with various systems.
- The designer discusses compatibility issues with operating systems and necessary system requirements.
- The designer provides technical information about system compatibility and specific requirements.

32.
Concepts: feature improvement, optimize auto layout quality
- The designer emphasizes the importance of improving the quality of auto-generated features.
- The designer emphasizes the need for optimizing auto layout features and ensuring quality in auto-generated layouts.

33.
Concepts: communicate ongoing work, share visual development updates
- Designers communicate that work is actively being done on specific aspects of the software.
- Designers share visual updates or images related to the software's development.

34.
Concepts: announce software updates, announce component updates
- Designers announce new features and updates being added to the product.
- The designer announces changes to software components in upcoming releases.

35.
Concepts: announce new features, announce software version details, provide update overview
- Designers announce new features and updates in a version release note.
- Designers provide detailed information about the latest software version and inform users about updates and releases.
- Designers list new features and bug fixes in the software update and provide detailed notes on updates.

36.
Concepts: explain delays and reasons, explain development difficulties
- The designer explains the reasons for delays in software updates and provides context for incomplete features.
- The designer explains the complexity of a feature that is taking longer to develop and communicates expected timelines.

37.
Concepts: confirm future feature, confirm and promise feature updates
- The designer confirms that a future feature will allow manual editing, albeit with a delay.
- The designer confirms that a feature update is forthcoming and assures users of future implementations.

38.
Concepts: express interest in expansion, inspire future development possibilities
- Designers express openness to expanding the subject matter of the software.
- The designer expresses hope for future software development progress and suggests exploring new opportunities.

39.
Concepts: detail simulated experiment features, explain technical simulation details
- The designer outlines plans for a simulated experiment feature and its assessment capabilities.
- The designer shares technical details about features and explains how to simulate specific components.

40.
Concepts: express concern
- User expresses concern about the delay in updating the Android version.
- Designers acknowledge the importance of remembering feedback.

41.
Concepts: provide user feedback
- Users provide feedback or suggestions about the software's features or development direction.
- Users provide feedback on the software's quality and effectiveness.
===
---
Definitions for each code (41 in total):
1.
Concepts: appreciate features, compliments the software  
Relationship: Users express positive sentiments about the software's functionality and effectiveness.  
Criteria: Users provide positive reviews of the software's practicality and praise its simulation capabilities based on classroom experience.  
Phrase: Praise software features.

2.
Concepts: agree with suggestions, agree with focus areas  
Relationship: Users show consensus on previously discussed ideas and priorities.  
Criteria: Users express agreement with previous suggestions in discussions and indicate shared priorities regarding focus areas.  
Phrase: Express agreement.

3.
Concepts: confirm information, acknowledge information  
Relationship: Users validate and recognize information shared within the community.  
Criteria: Users confirm and acknowledge information in response to queries and confirm finding and receiving information.  
Phrase: Validate information.

4.
Concepts: greet warmly, initiate interaction  
Relationship: Users and designers engage in friendly communication to foster community interaction.  
Criteria: Designers greet users to maintain community interaction, and users initiate interaction by greeting the community.  
Phrase: Initiate greetings.

5.
Concepts: acknowledge assistance, express gratitude for resources  
Relationship: Users recognize and appreciate the help and resources provided by others.  
Criteria: Users acknowledge help and resources provided by others and express appreciation for the resources available in the community.  
Phrase: Express gratitude.

6.
Concepts: explain lack of internet, discuss internet restrictions  
Relationship: Users share challenges related to internet access affecting their educational experiences.  
Criteria: Users explain the reasons for the lack of internet access in their educational setting and describe limitations regarding internet access in classrooms.  
Phrase: Discuss internet access.

7.
Concepts: share teaching background, share identity in response to inquiries  
Relationship: Users provide personal context related to their professional roles.  
Criteria: Users provide background information about their teaching roles and respond to inquiries with information about their teaching backgrounds.  
Phrase: Share teaching identity.

8.
Concepts: establish credibility, share professional background  
Relationship: Users build trust within the community by sharing relevant experience.  
Criteria: A user shares their teaching experience to establish their expertise, and users provide information about their backgrounds to establish credibility.  
Phrase: Establish expertise.

9.
Concepts: share context, share stories  
Relationship: Users provide narrative context to enrich discussions.  
Criteria: Users recount past incidents to provide context for discussions and share experiences affecting their educational journeys.  
Phrase: Share personal stories.

10.
Concepts: justify suggestions, provide rationale  
Relationship: Users articulate reasoning behind their requests and suggestions.  
Criteria: Users explain the rationale behind their feature requests and provide explanations for decisions or actions taken.  
Phrase: Justify suggestions.

11.
Concepts: asking follow-up questions, follow-up on design information  
Relationship: Users and designers seek clarification to enhance understanding.  
Criteria: Users or designers ask follow-up questions to clarify or confirm information regarding requests or discussions.  
Phrase: Seek clarification.

12.
Concepts: request new features, feature request invitation  
Relationship: Users express needs for enhancements while designers encourage input.  
Criteria: Users request specific features or improvements, and designers invite users to suggest new features or improvements.  
Phrase: Request new features.

13.
Concepts: suggest enhancements, suggest improvements, suggest new features  
Relationship: Users actively contribute ideas for software development.  
Criteria: Users propose practical applications, enhancements, and new features to improve the software's functionality.  
Phrase: Suggest software improvements.

14.
Concepts: request resources, request assistance  
Relationship: Users seek help and resources related to the software.  
Criteria: Users request resources related to the software's features and ask for guidance on software access and downloads.  
Phrase: Request assistance.

15.
Concepts: inquire about issues, inquire about design elements  
Relationship: Designers seek user input to identify problems and requirements.  
Criteria: Designers ask users to specify encountered problems and pose questions regarding design elements or requirements.  
Phrase: Inquire about issues.

16.
Concepts: implement suggestions, commit to improvement  
Relationship: Designers take user feedback into account for enhancements.  
Criteria: Designers accept and implement user suggestions in updates and align their actions with user feedback for improvements.  
Phrase: Implement user suggestions.

17.
Concepts: offer solutions, propose solutions  
Relationship: Designers provide resolutions to user issues.  
Criteria: Designers offer and commit to solutions for user issues and propose solutions to improve user experience.  
Phrase: Offer solutions.

18.
Concepts: outline collaborative project planning, engage in community consensus-building  
Relationship: Designers seek community input for collaborative efforts.  
Criteria: The designer outlines plans for gathering opinions and confirms the need for collaboration before project development.  
Phrase: Plan collaboratively.

19.
Concepts: gather detailed requirements, collect user input for informed development  
Relationship: Designers prioritize user needs in the development process.  
Criteria: Designers seek detailed information about user needs and indicate the necessity of gathering user opinions before moving forward.  
Phrase: Gather user input.

20.
Concepts: address users, address usability concerns  
Relationship: Designers engage with users to address their needs and concerns.  
Criteria: Designers mention users directly to address concerns and explain design choices and goals related to usability.  
Phrase: Address user concerns.

21.
Concepts: seek understanding, inquire about user roles  
Relationship: Designers aim to understand user contexts for better support.  
Criteria: Designers inquire about user contexts and roles to better address their needs.  
Phrase: Seek user understanding.

22.
Concepts: share knowledge, sharing information for design  
Relationship: Designers and users exchange information to inform design decisions.  
Criteria: Designers provide knowledge about software features, and users share relevant information impacting design considerations.  
Phrase: Share design knowledge.

23.
Concepts: maintain polite communication, demonstrate politeness in communication  
Relationship: Users and designers foster a respectful communication environment.  
Criteria: The designer expresses regret for any inconvenience caused, and users or designers use polite language in their interactions.  
Phrase: Maintain politeness.

24.
Concepts: invite questions, promote communication  
Relationship: Designers encourage open dialogue within the community.  
Criteria: Designers encourage ongoing discussions and promote open communication for feedback and suggestions.  
Phrase: Promote communication.

25.
Concepts: access, provide detailed access information  
Relationship: Designers ensure users have the necessary information to access resources.  
Criteria: Designers provide access information regarding development plans and specific details on how to access the software and resources.  
Phrase: Provide access information.

26.
Concepts: instruction and updates, providing user guidance  
Relationship: Designers support users in understanding software functionalities.  
Criteria: Designers provide updates and instructions to help users understand and use the software effectively.  
Phrase: Provide user guidance.

27.
Concepts: seek visual confirmation, use visuals for clarification  
Relationship: Designers utilize visuals to enhance understanding and confirm details.  
Criteria: Designers seek confirmation about visual elements and share visual references to clarify points.  
Phrase: Use visuals for clarification.

28.
Concepts: ensure clarity and accuracy, reflect and clarify previous statements  
Relationship: Designers strive for clear communication and understanding.  
Criteria: Designers seek clarification on specific details and reflect on previous statements to provide clarification or correction.  
Phrase: Ensure clarity.

29.
Concepts: provide version details, specify platform details, clarify version discussions  
Relationship: Designers communicate essential information about software versions.  
Criteria: Designers provide detailed information about the current version of the application and clarify which version is being discussed.  
Phrase: Provide version details.

30.
Concepts: clarify software limitations, discuss technical considerations  
Relationship: Designers communicate the boundaries of software functionality.  
Criteria: Designers clarify the limitations of the software's functionality and discuss technical aspects that need consideration.  
Phrase: Clarify limitations.

31.
Concepts: explain development process, discuss system compatibility, provide technical compatibility information  
Relationship: Designers inform users about the technical aspects of software development.  
Criteria: Designers explain compatibility issues and provide technical information about system requirements.  
Phrase: Explain compatibility.

32.
Concepts: feature improvement, optimize auto layout quality  
Relationship: Designers focus on enhancing specific software features.  
Criteria: Designers emphasize the importance of improving the quality of auto-generated features and optimizing auto layout features.  
Phrase: Improve feature quality.

33.
Concepts: communicate ongoing work, share visual development updates  
Relationship: Designers keep users informed about the development process.  
Criteria: Designers communicate that work is actively being done and share visual updates related to the software's development.  
Phrase: Share development updates.

34.
Concepts: announce software updates, announce component updates  
Relationship: Designers inform users about changes and improvements.  
Criteria: Designers announce new features and updates being added to the product and changes to software components.  
Phrase: Announce updates.

35.
Concepts: announce new features, announce software version details, provide update overview  
Relationship: Designers provide comprehensive information about software releases.  
Criteria: Designers announce new features and updates in a version release note and provide detailed information about the latest software version.  
Phrase: Announce new features.

36.
Concepts: explain delays and reasons, explain development difficulties  
Relationship: Designers communicate challenges faced during development.  
Criteria: Designers explain the reasons for delays in software updates and provide context for incomplete features.  
Phrase: Explain delays.

37.
Concepts: confirm future feature, confirm and promise feature updates  
Relationship: Designers assure users about upcoming features and updates.  
Criteria: Designers confirm that a future feature will allow manual editing and assure users of forthcoming feature updates.  
Phrase: Confirm future features.

38.
Concepts: express interest in expansion, inspire future development possibilities  
Relationship: Designers show openness to evolving the software's capabilities.  
Criteria: Designers express openness to expanding the subject matter and hope for future software development progress.  
Phrase: Inspire development.

39.
Concepts: detail simulated experiment features, explain technical simulation details  
Relationship: Designers provide in-depth information about specific software functionalities.  
Criteria: Designers outline plans for a simulated experiment feature and share technical details about simulation capabilities.  
Phrase: Explain simulation features.

40.
Concepts: express concern  
Relationship: Users and designers communicate worries regarding software updates.  
Criteria: Users express concern about the delay in updating the Android version, and designers acknowledge the importance of feedback.  
Phrase: Express concern.

41.
Concepts: provide user feedback  
Relationship: Users contribute insights to inform software development.  
Criteria: Users provide feedback or suggestions about the software's features and quality.  
Phrase: Provide feedback.  
---