You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (19 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
19. 
Concepts: {Repeat the input 19}
Relationship: {What is logical relationship between concepts in code 19, or N/A if not applicable}
Criteria: {Who did what, and how for code 19}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: engages with humor, express amusement
- Users share moments of levity, using humor and emojis to enhance interactions.
- Designers convey humor or light-heartedness in discussions, enhancing community interaction.

2.
Concepts: contextualize inquiries, articulates user needs
- Users contextualized their questions within their educational settings to clarify their needs.
- Users articulate specific needs contextualized within their educational environments to inform feature development.

3.
Concepts: question, inquires about software details
- Users ask various questions related to the software's functionality and updates.
- Users seek information to clarify software functionalities and express curiosity about details.

4.
Concepts: inquire about updates, request feature updates
- Users communicated their concerns regarding status updates on software versions.
- Users inquired about future enhancements and submitted specific feature requests.

5.
Concepts: shares professional identities, confirms professional identities
- Users share their professional backgrounds in response to inquiries for context.
- Users affirm their identities within the community following inquiries.

6.
Concepts: provide feature updates, updates on software changes
- Designers provide updates regarding new features being added and describe ongoing development efforts.
- A designer communicates updates regarding software functionalities and outlines new features.

7.
Concepts: announces software updates, describes version updates
- Designers announce new versions and confirm details regarding software releases.
- Designers summarize new features or improvements included in the latest software version release notes.

8.
Concepts: describes release status, provide status information, communicates update status
- The designer describes the software release process and provides updates about the app's status.
- A designer informs users about ongoing software development status and research related to features.
- A designer announces component statuses, informs about expected update schedules, and acknowledges update progress.

9.
Concepts: share visual updates, communicate development progress
- Designers share visual content to illustrate updates being made to the software.
- Designers communicate ongoing work and progress updates in the software development process.

10.
Concepts: ensure accuracy, clarifies design intentions
- The designer seeks clarity on a specific point to ensure accurate understanding.
- Designer clarifies the intentions behind follow-up questions and explains the rationale of specific design choices.

11.
Concepts: commits to iterative improvement, commits to continuous improvement
- A designer plans to gather and reflect on user feedback before developing new features.
- Designers convey their commitment to continuous improvement based on user feedback.

12.
Concepts: plans future features, commits to future enhancements
- A designer lists and confirms upcoming features for implementation in future updates.
- Designers confirm planned future features and discuss proposed product improvements.

13.
Concepts: promotes open dialogue, engages in direct communication
- The designer fosters open communication and engages users in discussions to clarify feedback or software features.
- Direct interactions between designers and users facilitate discussions on features, updates, and feedback in real-time.

14.
Concepts: invites further dialogue, encourages private dialogue
- Designers encourage users to provide in-depth feedback and ask follow-up questions.
- A designer invites users to engage privately regarding their needs and prompts them to provide more details.

15.
Concepts: gathers user context, gathers user requirements
- The designer inquires about users’ educational backgrounds and usage scenarios.
- A designer indicates intentions to meet user needs and inquires about users' roles.

16.
Concepts: responding to user feedback, responds to user inquiries
- Designers respond to user feedback and queries regarding the software.
- Designer provides information that addresses user inquiries and concerns regarding software functionalities.

17.
Concepts: demonstrating designer responsiveness, responds to feature requests
- Designers engage and respond to user inquiries and feedback.
- The designer acknowledges the need for specific features based on user feedback and addresses related requests.

18.
Concepts: problem solving, shares support experiences
- Designer encourages users to voice any problems encountered while using the software.
- Users and designers share experiences and offer support in using and improving the software.

19.
Concepts: engage in troubleshooting, discusses technical challenges
- Users participate in troubleshooting processes, sharing their experiences regarding compatibility.
- Users explain the context surrounding technical challenges and discuss limitations among peers.
===
---
Definitions for each code (19 in total):
1.
Concepts: engages with humor, express amusement  
Relationship: Both concepts involve the use of humor to foster a light-hearted atmosphere.  
Criteria: Users and designers enhance community interactions by sharing moments of levity and humor, often using emojis.  
Phrase: Use humor to engage.

2.
Concepts: contextualize inquiries, articulates user needs  
Relationship: Users articulate their educational context to clarify their needs effectively.  
Criteria: Users express their specific needs by situating their questions within their unique educational settings.  
Phrase: Contextualize user needs.

3.
Concepts: question, inquires about software details  
Relationship: Both concepts refer to users seeking information related to the software's functionalities.  
Criteria: Users ask questions to gain clarity about software functions and updates.  
Phrase: Inquire about software details.

4.
Concepts: inquire about updates, request feature updates  
Relationship: Both concepts deal with users’ communication regarding software updates and enhancements.  
Criteria: Users actively seek information on software version status and request new features.  
Phrase: Request software updates.

5.
Concepts: shares professional identities, confirms professional identities  
Relationship: Both concepts relate to users expressing and affirming their professional backgrounds within the community.  
Criteria: Users share and confirm their professional identities to provide context.  
Phrase: Share professional identities.

6.
Concepts: provide feature updates, updates on software changes  
Relationship: Both concepts refer to designers communicating new features and ongoing development work.  
Criteria: Designers deliver updates regarding software functionalities and enhancements.  
Phrase: Provide feature updates.

7.
Concepts: announces software updates, describes version updates  
Relationship: Both concepts involve designers conveying information about new software releases.  
Criteria: Designers communicate new versions and outline features in release notes.  
Phrase: Announce version updates.

8.
Concepts: describes release status, provide status information, communicates update status  
Relationship: All concepts focus on the designer's role in sharing the software's development status.  
Criteria: Designers provide detailed updates on release processes and development progress.  
Phrase: Communicate update status.

9.
Concepts: share visual updates, communicate development progress  
Relationship: Both concepts involve designers illustrating and sharing their software development progress.  
Criteria: Designers share visual content depicting ongoing work in the software.  
Phrase: Share visual updates.

10.
Concepts: ensure accuracy, clarifies design intentions  
Relationship: Both concepts focus on ensuring clarity in understanding design choices and intentions.  
Criteria: Designers seek clarity to ensure accurate interpretations of their work.  
Phrase: Clarify design intentions.

11.
Concepts: commits to iterative improvement, commits to continuous improvement  
Relationship: Both concepts relate to designers' dedication to refining the software based on user feedback.  
Criteria: Designers express their ongoing commitment to improving features iteratively.  
Phrase: Commit to improvement.

12.
Concepts: plans future features, commits to future enhancements  
Relationship: Both concepts deal with designers' intentions for future software development and upgrades.  
Criteria: Designers outline and confirm features planned for future updates.  
Phrase: Plan future features.

13.
Concepts: promotes open dialogue, engages in direct communication  
Relationship: Both concepts involve fostering communication and dialogue with users.  
Criteria: Designers encourage discussions to gather feedback and clarify software features.  
Phrase: Engage in open dialogue.

14.
Concepts: invites further dialogue, encourages private dialogue  
Relationship: Both concepts focus on encouraging users to communicate their needs in-depth.  
Criteria: Designers invite users to provide detailed feedback and engage in private discussions.  
Phrase: Invite further dialogue.

15.
Concepts: gathers user context, gathers user requirements  
Relationship: Both concepts highlight designers’ efforts to understand users' backgrounds and needs.  
Criteria: Designers inquire about users’ educational backgrounds to better meet their requirements.  
Phrase: Gather user context.

16.
Concepts: responding to user feedback, responds to user inquiries  
Relationship: Both concepts entail designers addressing questions and feedback from users.  
Criteria: Designers actively respond to inquiries regarding software functionalities and feedback.  
Phrase: Respond to user feedback.

17.
Concepts: demonstrating designer responsiveness, responds to feature requests  
Relationship: Both concepts involve designers acknowledging and addressing user needs for software features.  
Criteria: Designers engage with users and respond to specific feature requests.  
Phrase: Respond to feature requests.

18.
Concepts: problem solving, shares support experiences  
Relationship: Both concepts center around the collective experience of resolving issues and offering support.  
Criteria: Designers and users share experiences to provide support and solve software-related problems.  
Phrase: Share support experiences.

19.
Concepts: engage in troubleshooting, discusses technical challenges  
Relationship: Both concepts relate to users addressing and discussing technical issues collaboratively.  
Criteria: Users actively share and explain their experiences with troubleshooting technical challenges.  
Phrase: Engage in troubleshooting.
---