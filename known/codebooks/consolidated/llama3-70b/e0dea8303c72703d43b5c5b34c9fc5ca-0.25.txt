You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (20 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
20. 
Concepts: {Repeat the input 20}
Relationship: {What is logical relationship between concepts in code 20, or N/A if not applicable}
Criteria: {Who did what, and how for code 20}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: take feedback, respond to feedback
- Responding to user feedback or suggestions.
- Acknowledging user feedback and discussing plans to implement changes.

2.
Concepts: invite feedback, invite user participation
- Inviting users to provide feedback or suggestions.
- Invitations or solicitations for user participation or feedback.

3.
Concepts: seek input, gather user input, seek feedback
- Seeking input or feedback from users.
- Gathering input or opinions from users about specific topics or features.
- Soliciting feedback or opinions from users.

4.
Concepts: suggest new features, highlight usability need
- A user suggests a new feature or improvement.
- User suggests a feature improvement to enhance usability.

5.
Concepts: ask about user needs, indicate potential user needs
- Asking users about their needs or requirements.
- A user indicates potential needs or requirements for the software.

6.
Concepts: design adaptation, align with user feedback
- Adapting or modifying a design based on user needs or feedback.
- A designer adapts or responds to user feedback, suggestions, or requests.

7.
Concepts: offering/seeking alternative, suggest alternative solutions
- A user or designer offers or seeks an alternative solution or option.
- A user suggests an alternative solution or approach to a problem or feature.

8.
Concepts: questioning identity, inquiring about identity
- Users question or clarify someone's identity or role.
- Users ask about someone's role, identity, or background.

9.
Concepts: identifying as teachers, confirming teacher identity
- Users identify as teachers or mention their teacher role.
- Users identify themselves as teachers or ask about another user's teaching background.

10.
Concepts: ask for teachers' help, consult with teachers
- Designers ask for teachers' help or input on specific topics.
- Designer seeks input or feedback from teachers or users in the group.

11.
Concepts: compare with others, comparative feedback
- A person compares the software or application with others.
- A user compares the software to others, highlighting its strengths and weaknesses.

12.
Concepts: explain limitation, talk about limitation of the solution, explain system limitations
- A designer explains limitations, constraints, or boundaries of the platform or its features.
- A designer mentions a limitation or constraint of a solution.
- Designers discuss limitations or constraints of a system or technology, explaining why a feature or functionality cannot be implemented.

13.
Concepts: discussing constraints, consider hardware limitations
- Instances where technical limitations or requirements are discussed.
- Users consider or discuss hardware limitations or constraints.

14.
Concepts: improve feature, product improvement
- Designers discuss or plan to improve existing features.
- Designer discusses plans for improving the product.

15.
Concepts: explain functionality, component functionality
- A designer explains how a specific feature or component works.
- A designer describes the functionality of a component.

16.
Concepts: explain design goals, explain intention of the app design
- A designer explains the design goals or philosophy behind the software.
- Designer explains the intention or design philosophy behind the app.

17.
Concepts: apologize for timing, apologize for inconvenience
- The developer apologizes for any inconvenience or disturbance caused to the users.
- Designers apologize for any inconvenience caused to the users.

18.
Concepts: request features
- User requests specific features or functionalities for the software.
- Instances where users request new features or improvements.

19.
Concepts: confirm compatibility
- Confirming or verifying the compatibility of software or hardware with specific systems or devices.
- A designer answers questions about the software's compatibility with different systems.

20.
Concepts: providing context
- Users provide context or background information related to a topic.
- A user provides context about their educational setting or environment.
===
Here are the definitions for each code:

---
1.
Concepts: take feedback, respond to feedback
Relationship: Causal (taking feedback leads to responding to it)
Criteria: Designers take user feedback and respond to it by acknowledging and discussing plans to implement changes.
Phrase: Respond to user feedback

2.
Concepts: invite feedback, invite user participation
Relationship: Associative (inviting feedback is associated with inviting user participation)
Criteria: Designers invite users to provide feedback or participate in the development process.
Phrase: Invite user feedback and participation

3.
Concepts: seek input, gather user input, seek feedback
Relationship: Synonymous (seeking input, gathering user input, and seeking feedback are similar concepts)
Criteria: Designers seek input or feedback from users to understand their needs and opinions.
Phrase: Seek user input and feedback

4.
Concepts: suggest new features, highlight usability need
Relationship: Causal (suggesting new features is caused by highlighting usability needs)
Criteria: Users suggest new features or improvements to enhance usability.
Phrase: Suggest new features based on usability needs

5.
Concepts: ask about user needs, indicate potential user needs
Relationship: Associative (asking about user needs is associated with indicating potential user needs)
Criteria: Designers ask users about their needs or requirements to understand potential needs.
Phrase: Ask about user needs and requirements

6.
Concepts: design adaptation, align with user feedback
Relationship: Causal (design adaptation is caused by aligning with user feedback)
Criteria: Designers adapt or modify designs based on user needs or feedback.
Phrase: Adapt design to user feedback

7.
Concepts: offering/seeking alternative, suggest alternative solutions
Relationship: Associative (offering alternatives is associated with seeking alternative solutions)
Criteria: Users or designers offer or seek alternative solutions or options.
Phrase: Offer or seek alternative solutions

8.
Concepts: questioning identity, inquiring about identity
Relationship: Synonymous (questioning identity and inquiring about identity are similar concepts)
Criteria: Users question or clarify someone's identity or role.
Phrase: Question or inquire about identity

9.
Concepts: identifying as teachers, confirming teacher identity
Relationship: Associative (identifying as teachers is associated with confirming teacher identity)
Criteria: Users identify as teachers or confirm their teacher role.
Phrase: Identify as teachers

10.
Concepts: ask for teachers' help, consult with teachers
Relationship: Associative (asking for teachers' help is associated with consulting with teachers)
Criteria: Designers ask for teachers' help or input on specific topics.
Phrase: Consult with teachers

11.
Concepts: compare with others, comparative feedback
Relationship: Associative (comparing with others is associated with providing comparative feedback)
Criteria: Users compare the software or application with others, highlighting its strengths and weaknesses.
Phrase: Compare with other software

12.
Concepts: explain limitation, talk about limitation of the solution, explain system limitations
Relationship: Synonymous (explaining limitations, talking about limitations, and explaining system limitations are similar concepts)
Criteria: Designers explain limitations, constraints, or boundaries of the platform or its features.
Phrase: Explain system limitations

13.
Concepts: discussing constraints, consider hardware limitations
Relationship: Associative (discussing constraints is associated with considering hardware limitations)
Criteria: Users discuss or consider technical limitations or requirements.
Phrase: Discuss technical constraints

14.
Concepts: improve feature, product improvement
Relationship: Causal (improving features leads to product improvement)
Criteria: Designers discuss or plan to improve existing features to enhance the product.
Phrase: Improve features for product enhancement

15.
Concepts: explain functionality, component functionality
Relationship: Associative (explaining functionality is associated with explaining component functionality)
Criteria: Designers explain how a specific feature or component works.
Phrase: Explain feature functionality

16.
Concepts: explain design goals, explain intention of the app design
Relationship: Associative (explaining design goals is associated with explaining the intention of the app design)
Criteria: Designers explain the design goals or philosophy behind the software.
Phrase: Explain design goals and philosophy

17.
Concepts: apologize for timing, apologize for inconvenience
Relationship: Associative (apologizing for timing is associated with apologizing for inconvenience)
Criteria: Designers apologize for any inconvenience or disturbance caused to the users.
Phrase: Apologize for inconvenience

18.
Concepts: request features
Relationship: N/A
Criteria: Users request specific features or functionalities for the software.
Phrase: Request new features

19.
Concepts: confirm compatibility
Relationship: N/A
Criteria: Designers confirm or verify the compatibility of software or hardware with specific systems or devices.
Phrase: Confirm compatibility

20.
Concepts: providing context
Relationship: N/A
Criteria: Users provide context or background information related to a topic.
Phrase: Provide context