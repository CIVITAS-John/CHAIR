You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (20 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
20. 
Concepts: {Repeat the input 20}
Relationship: {What is logical relationship between concepts in code 20, or N/A if not applicable}
Criteria: {Who did what, and how for code 20}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: appreciating design effort, recognizing designer effort
- Users appreciate the design effort and craftsmanship.
- Users express appreciation and recognize the efforts of designers.

2.
Concepts: acknowledgment, acknowledging assistance
- Users acknowledge suggestions or contributions from designers.
- Users or designers express gratitude or acknowledgment for assistance or contributions.

3.
Concepts: proposing new features, requesting additional features
- Users propose or request new features for the software.
- Users request new features or improvements.

4.
Concepts: encouraging user feedback, providing feedback and suggestions
- Designers encourage users to provide feedback and suggestions to improve the software.
- Users provide feedback and suggestions to improve the software.

5.
Concepts: invite feedback, requesting community suggestions
- A developer invites users to give feedback or suggestions.
- Designers invite users to provide suggestions for new features or improvements.

6.
Concepts: information seeking, requesting information
- Users asking questions to gain knowledge or resources related to the software.
- Users request information or help regarding the use or functionalities of the software.

7.
Concepts: commenting on usability, discuss software usability in context
- Users discuss and comment on the ease of use and usability of the software.
- Users describe the specific contexts in which they use the software and discuss its usability.

8.
Concepts: share teaching experience, sharing classroom experiences
- Users share their teaching experiences.
- Users share their classroom experiences and the positive impact of the software on teaching or learning.

9.
Concepts: providing product updates, instruction and updates
- Designers provide information about updates and technical changes to the software.
- Designers providing updates and instructions to help users understand and use the software effectively.

10.
Concepts: listing updates and fixes, providing detailed update notes
- Designers provide detailed lists of new features, components, adjustments, and bug fixes.
- Designers provide detailed notes and technical information about updates and new features.

11.
Concepts: providing release schedules, announcing update schedules
- Designers provide specific dates and timelines for the release of updates.
- Designers communicate updates, release schedules, and new features to users.

12.
Concepts: announcing feature updates, announcing planned updates
- Designers announce new features, updates, and changes to existing components.
- Designers announce new features and provide information about upcoming updates.

13.
Concepts: sharing development plans, discussing future planning
- Designers share information about current and future development plans.
- Designers discuss planning and timelines for future projects and updates.

14.
Concepts: accepting suggestion, acknowledging user suggestions
- A designer accepts a suggestion and plans to implement it.
- Designers acknowledge user suggestions and discuss plans to implement them.

15.
Concepts: feature improvement, discussing feature development
- Users and designers discuss improvements to features.
- Designers discuss the expansion and development of features in future updates.

16.
Concepts: consider usability, discussing interface usability
- A user and designer consider usability improvements.
- Designers and users discuss user interface usability and make layout decisions.

17.
Concepts: inquiring about user background, inquiring about teaching background
- Designers inquire about the user's background or professional identity.
- Designers inquire about a user's teaching background.

18.
Concepts: responding to user queries, seeking and responding to clarifications
- Designers respond to user queries, feedback, and suggestions.
- Designers seek or respond to clarifications on user input or suggestions.

19.
Concepts: seeking user input, inquiring user input for iterations
- Designers seek and gather input and feedback from users on features and updates.
- Designers ask for user input to inform future software iterations.

20.
Concepts: disseminate information, making community announcements
- Users or designers communicate updates or information to the community.
- Designers provide updates and make announcements to the community.
===
---
Definitions for each code (20 in total):
1.
Concepts: appreciating design effort, recognizing designer effort
Relationship: Both concepts involve users expressing positive recognition towards designers.
Criteria: Users express appreciation and recognize the efforts of designers.
Phrase: Appreciating designer efforts

2.
Concepts: acknowledgment, acknowledging assistance
Relationship: Both concepts involve expressing gratitude or recognition for contributions.
Criteria: Users or designers express gratitude or acknowledgment for assistance or contributions.
Phrase: Acknowledging assistance

3.
Concepts: proposing new features, requesting additional features
Relationship: Both concepts involve users suggesting enhancements to the software.
Criteria: Users propose or request new features for the software.
Phrase: Requesting new features

4.
Concepts: encouraging user feedback, providing feedback and suggestions
Relationship: Both concepts involve a dialogue where feedback is encouraged and given.
Criteria: Designers encourage users to provide feedback and suggestions to improve the software.
Phrase: Encouraging user feedback

5.
Concepts: invite feedback, requesting community suggestions
Relationship: Both concepts involve designers seeking input from the community.
Criteria: Designers invite users to provide suggestions for new features or improvements.
Phrase: Inviting community suggestions

6.
Concepts: information seeking, requesting information
Relationship: Both concepts involve users seeking knowledge or help.
Criteria: Users request information or help regarding the use or functionalities of the software.
Phrase: Seeking information

7.
Concepts: commenting on usability, discuss software usability in context
Relationship: Both concepts involve users discussing the ease of use of the software.
Criteria: Users discuss and comment on the ease of use and usability of the software.
Phrase: Discussing usability

8.
Concepts: share teaching experience, sharing classroom experiences
Relationship: Both concepts involve users sharing their experiences in educational settings.
Criteria: Users share their classroom experiences and the positive impact of the software on teaching or learning.
Phrase: Sharing teaching experiences

9.
Concepts: providing product updates, instruction and updates
Relationship: Both concepts involve designers communicating changes and instructions.
Criteria: Designers provide information about updates and technical changes to the software.
Phrase: Providing product updates

10.
Concepts: listing updates and fixes, providing detailed update notes
Relationship: Both concepts involve detailed communication about software changes.
Criteria: Designers provide detailed notes and technical information about updates and new features.
Phrase: Listing updates and fixes

11.
Concepts: providing release schedules, announcing update schedules
Relationship: Both concepts involve communicating timelines for updates.
Criteria: Designers provide specific dates and timelines for the release of updates.
Phrase: Announcing release schedules

12.
Concepts: announcing feature updates, announcing planned updates
Relationship: Both concepts involve communication about upcoming changes.
Criteria: Designers announce new features and provide information about upcoming updates.
Phrase: Announcing feature updates

13.
Concepts: sharing development plans, discussing future planning
Relationship: Both concepts involve discussing future directions and plans.
Criteria: Designers discuss planning and timelines for future projects and updates.
Phrase: Discussing development plans

14.
Concepts: accepting suggestion, acknowledging user suggestions
Relationship: Both concepts involve recognizing and planning to act on user input.
Criteria: Designers acknowledge user suggestions and discuss plans to implement them.
Phrase: Accepting user suggestions

15.
Concepts: feature improvement, discussing feature development
Relationship: Both concepts involve conversations about enhancing software features.
Criteria: Designers discuss the expansion and development of features in future updates.
Phrase: Discussing feature improvements

16.
Concepts: consider usability, discussing interface usability
Relationship: Both concepts involve evaluating and discussing the software's user interface.
Criteria: Designers and users discuss user interface usability and make layout decisions.
Phrase: Considering interface usability

17.
Concepts: inquiring about user background, inquiring about teaching background
Relationship: Both concepts involve gathering information about users' professional backgrounds.
Criteria: Designers inquire about a user's teaching background.
Phrase: Inquiring about user background

18.
Concepts: responding to user queries, seeking and responding to clarifications
Relationship: Both concepts involve addressing user questions and clarifications.
Criteria: Designers seek or respond to clarifications on user input or suggestions.
Phrase: Responding to user queries

19.
Concepts: seeking user input, inquiring user input for iterations
Relationship: Both concepts involve gathering user feedback for future improvements.
Criteria: Designers ask for user input to inform future software iterations.
Phrase: Seeking user input

20.
Concepts: disseminate information, making community announcements
Relationship: Both concepts involve communicating important updates to the community.
Criteria: Designers provide updates and make announcements to the community.
Phrase: Making community announcements
---