You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. If a sub-code includes another, use the broader one. If sub-codes are parallel, write one that covers both.
Write clear and generalizable labels and criteria for each code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization (e.g. "social interaction" instead of "interaction", "communication approach" instead of "communication").
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (51 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {Consolidated criteria of code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
51.
Relationship: {The logical relationship between sub-codes in code 51}
Criteria: {Consolidated criteria of code 51}
Label: {A consolidated label of code 51}
Category: {2-4 words for code 51}
---
~~~
1. community management, community dynamics.
- Managing or moderating the community
- Referring to the dynamics or interactions within the community

2. community facilitation, community engagement.
- Facilitating activities or discussions within the community.
- Indications of participation, encouraging involvement, fostering connections

3. community support, community membership.
- Offering support or assistance to community members
- Indicates membership or participation in the community.

4. acknowledgment, expressing gratitude.
- Acknowledging or indicating understanding of a point
- Conveying gratitude, thankfulness, or appreciation for support, feedback, or contributions.

5. positive sentiment, positive feedback.
- Expressing positive sentiment or enthusiasm.
- Expressing positive feedback, affirmation, or reception of ideas, features, or the software.

6. affirmation, encouragement.
- A simple affirmative response
- Statements of encouragement, praise, positive reinforcement

7. casual interaction, casual communication style.
- Engaging in casual or informal interaction within the community
- Using a casual, informal tone or language in communication within the community.

8. greeting, friendly tone.
- Greeting or welcoming others to the community.
- Use of a friendly, welcoming tone in communication.

9. open communication, promoting open discussion.
- Encouraging open communication or dialogue
- Encouraging open, inclusive discussion within the community on any topic or issue.

10. group sharing, group involvement.
- Sharing or distributing new software versions or updates within a group or community.
- Indicating plans to involve the group or community in the development process

11. design query, design feedback.
- Asking for input or feedback on a specific design element
- Providing feedback or input on design decisions or approaches

12. design process, design negotiation.
- Discussing the design process or approach
- Negotiating or discussing multiple design options

13. design principle, design rationale.
- Stating a general design principle or guideline
- Providing the reasoning or thought process behind design decisions or approaches.

14. confirmation, confirmation interface, user confirmation.
- Confirming a design choice or decision
- Implementing a confirmation interface before clearing the workspace
- Confirming a previous statement or response

15. feedback exchange, feedback driven.
- Soliciting input, sharing feedback on features, ideas, software
- Incorporating user feedback into the product design or development process.

16. user feedback invitation, future feedback gathering.
- Inviting user feedback or suggestions
- Indicating plans to gather feedback in the future

17. user background inquiry, user background sharing.
- Inquiring about the user's background or role
- Sharing information about the user's background or teaching experience

18. student engagement, user engagement.
- Highlighting the software's ability to engage and amaze students
- Engaging users and fostering their interest or involvement in the software development process.

19. user experience, probing user experience.
- Describing a positive user experience with the software's simulation effects
- Inquiring about the user experience or any issues encountered.

20. user appreciation, usability praise.
- Expressing gratitude or appreciation
- Praising usability, appreciation for intentional functionality

21. user reassurance, addressing user concerns.
- Reassuring users about concerns or issues they may have with the software.
- Addressing, resolving, or responding to user issues, problems, concerns, questions, or feedback regarding the product.

22. user query, user support.
- Asking a question or seeking information from the community.
- Providing support, particularly to new users of the product

23. development roadmap, future development.
- Discussing roadmaps, timelines, upcoming releases
- Indicating that a requested feature will be available in future development

24. development status, affirming development progress.
- Providing updates or information about the current development status or progress.
- Indicating substantial progress, changes, or additions in development, or affirming the right direction.

25. upcoming features, future feature confirmation.
- Refers to new features or functionality planned for the product.
- Confirming that the requested export/import feature will be available

26. feature discussion, feature explanation.
- Discussion or feedback related to specific features of the product.
- Explaining the purpose, functionality, or rationale behind a specific feature or aspect of the software.

27. platform details, platform status.
- Providing details about software platforms or versions
- Providing information about the status or progress of the software on different platforms or environments.

28. significant update, update anticipation.
- Indicating that an update is significant or substantial
- Anticipation or excitement about expected new releases

29. release plan, release timeline.
- Providing information about planned software releases
- Refers to the expected timeline or schedule for a product release.

30. circuit diagrams, circuit diagram intersections.
- Referring to circuit diagrams or related functionality
- Referring to the style or representation of intersections in circuit diagrams

31. diagram drawing, physical diagram conversion.
- Relating to the ability to draw or create circuit diagrams within the software
- Describing the conversion between physical circuit setups and diagrammatic circuit representations

32. experimental simulation, physics simulation.
- Mentioning the simulation of experiments within the software
- Discussing physics simulations or enhancing the realism of physics simulations within the software.

33. optics experiments, mechanics experiments.
- Discussing optics experiments or related functionality
- Suggesting the inclusion of mechanics experiments in addition to electrical circuits

34. experiment saving, experiment management.
- Allowing experiments to be saved and loaded
- Discussing the management and portability of experiment setups

35. electromagnetics goal, electromagnetics first.
- Setting a goal to implement electromagnetics functionality by the end of the year
- Indicating that electromagnetics functionality will be prioritized before other areas

36. compatibility check, compatibility expectation.
- Confirming or inquiring about OS/system compatibility
- Expressing an expectation that the software should be compatible with systems from a certain age range

37. hardware compatibility, platform compatibility question.
- Referring to hardware compatibility or requirements
- Inquiring about compatibility or usage on a specific platform

38. system requirement, technical requirements.
- Specifying system requirements for running the software
- Discussing technical requirements or specifications

39. technical limitation, feature limitations.
- Acknowledging a technical limitation or constraint
- Referring to limitations or constraints in the current feature set

40. classroom network inquiry, classroom context inquiry.
- Inquiring about the presence of a network in the classroom
- Inquiring about the context or infrastructure in classrooms

41. classroom application, classroom management.
- Describing use of the software in classroom contexts
- Describing common practices in schools regarding network access for classroom computers

42. learning tool, learning affordances.
- Referring to the software as a learning tool or resource
- Referring to learning affordances or educational benefits

43. teaching context, teaching utility.
- Discussing the teaching context or environment
- Highlights the utility or usefulness of the product for teaching purposes.

44. software information, software usage.
- Providing information about the software
- Describing personal experience using the software or inquiring about how to use or operate it.

45. software manual, requesting user manual.
- Refers to the user manual or documentation for the software.
- Requesting or inquiring about a user manual or documentation.

46. 3d effect, 3d visualization.
- Referring to the 3D visual effects or rendering in the software
- Commenting on the 3D visualization capabilities of the software

47. resource location, resource sharing.
- Indicating the location of a resource or file
- Sharing resources or materials within the community.

48. image sharing, image upload.
- Sharing an image or visual content
- Uploading, sharing, or attempting to share or upload an image within the community.

49. commitment to improvement, appreciating iterative improvement.
- Committing to continued improvement and development efforts
- Appreciating the iterative nature of software development and the importance of continuous improvement.

50. clarification, version clarification.
- Clarifying or providing a clear answer to a query, or requesting further clarification or explanation.
- Clarifying or specifying which version or platform a particular software release or update is for.

51. special functionality, functionality expansion.
- Discussing or explaining special functionality, modes, or capabilities of the software.
- Expanding features, adding new functionality, or enhancing existing functionality of the software.
===
Categories:
* Community Dynamics
* Community Engagement
* User Experience
* Design Process
* Software Development
* Educational Context
* Technical Specifications
* Resource Sharing

Definitions for each code (51 in total):

1. 
Relationship: Two related aspects of managing and facilitating community interactions.
Criteria: Statements related to moderating the community, managing dynamics or interactions within the community, facilitating activities or discussions, encouraging participation and fostering connections.
Label: Community Management and Facilitation
Category: Community Dynamics

2.
Relationship: Two aspects indicating support and active membership within the community.  
Criteria: Offering support or assistance to members, indicating membership or participation in the community.
Label: Community Support and Membership
Category: Community Engagement

3.
Relationship: Two forms of positive reinforcement and acknowledgment within the community.
Criteria: Acknowledging points, expressing gratitude, thankfulness or appreciation for contributions, indicating understanding.
Label: Acknowledgment and Positive Reinforcement  
Category: Community Dynamics

4.
Relationship: Two styles of communication fostering a positive and welcoming environment.
Criteria: Expressing positive sentiment, enthusiasm, affirmation, encouragement, using a friendly, casual or informal tone.
Label: Positive and Casual Communication
Category: Community Dynamics

5.
Relationship: Two approaches to promoting open dialogue and inclusive discussions.
Criteria: Encouraging open communication, dialogue, inclusive discussion on any topic within the community.
Label: Open Communication and Discussion
Category: Community Engagement

6.
Relationship: Two aspects of group involvement in development and sharing processes.
Criteria: Sharing new versions with the group, indicating plans to involve the group in the development process.
Label: Group Involvement and Sharing
Category: Community Engagement  

7.
Relationship: Two stages of the design process involving feedback and negotiation.
Criteria: Asking for design feedback, providing feedback on designs, discussing design process or approaches, negotiating design options.
Label: Design Feedback and Negotiation
Category: Design Process

8.
Relationship: Two types of design principles and rationale.
Criteria: Stating general design principles or guidelines, providing reasoning behind design decisions or approaches.
Label: Design Principles and Rationale
Category: Design Process

9.
Relationship: Different aspects of confirmation in user interfaces and communication.
Criteria: Confirming design choices, implementing confirmation interfaces, confirming previous statements or responses.
Label: User Confirmation Processes
Category: User Experience

10.
Relationship: Two aspects of an iterative feedback-driven development approach.
Criteria: Soliciting user input and feedback, incorporating user feedback into product design and development.
Label: Feedback-Driven Development 
Category: Design Process

11.
Relationship: Two timeframes for gathering user feedback.
Criteria: Inviting user feedback or suggestions, indicating plans to gather feedback in the future.
Label: User Feedback Solicitation
Category: User Experience

12.
Relationship: Two perspectives on understanding user backgrounds.
Criteria: Inquiring about user backgrounds or roles, users sharing information about their backgrounds or teaching experience.
Label: User Background Exploration
Category: User Experience

13.
Relationship: Two aspects of fostering user engagement with the software.
Criteria: Highlighting ability to engage students, fostering user interest and involvement in development.
Label: User Engagement Strategies
Category: User Experience

14.
Relationship: Two perspectives on evaluating the user experience.
Criteria: Describing positive user experiences, inquiring about user experiences or issues encountered.
Label: User Experience Evaluation
Category: User Experience  

15.
Relationship: Two forms of appreciation for the user experience.
Criteria: Expressing user appreciation or gratitude, praising usability or intentional functionality.
Label: User Experience Appreciation
Category: User Experience

16. 
Relationship: Two approaches to addressing user needs and concerns.
Criteria: Reassuring users about concerns, addressing user issues, problems, questions or feedback.
Label: User Support and Reassurance
Category: User Experience

17.
Relationship: Two aspects of user support within the community.
Criteria: Users asking questions or seeking information, providing support particularly to new users.
Label: User Query and Support
Category: Community Engagement

18.
Relationship: Two timeframes for product development planning.
Criteria: Discussing development roadmaps and timelines, indicating features for future development releases.
Label: Development Planning and Roadmap
Category: Software Development

19.
Relationship: Two perspectives on development progress and status.
Criteria: Providing updates on current development status, affirming substantial progress or changes.
Label: Development Status Updates
Category: Software Development  

20.
Relationship: Two aspects of upcoming product features.
Criteria: Referring to planned new features or functionality, confirming specific upcoming features like export/import.
Label: Upcoming Feature Planning
Category: Software Development

21.
Relationship: Two ways of discussing software features.
Criteria: Discussing or providing feedback on specific features, explaining functionality or rationale behind features.
Label: Feature Discussion and Explanation  
Category: Software Development

22.
Relationship: Two types of information about software platforms.
Criteria: Providing details about software platforms or versions, information about platform status or progress.
Label: Software Platform Information
Category: Technical Specifications

23. 
Relationship: Two perspectives on software updates and releases.
Criteria: Indicating a significant or substantial update, anticipation or excitement about expected new releases.
Label: Software Update Anticipation
Category: Software Development

24.
Relationship: Two aspects of software release planning.
Criteria: Providing information about planned releases, referring to expected release timelines or schedules.
Label: Software Release Planning
Category: Software Development

25.
Relationship: Two representations of circuit diagrams and related functionality.
Criteria: Referring to circuit diagrams or related functionality, referring to intersection styles in circuit diagrams.
Label: Circuit Diagram Representation
Category: Software Development

26. 
Relationship: Two capabilities related to circuit diagram creation and conversion.
Criteria: Ability to draw or create circuit diagrams, conversion between physical setups and diagrammatic representations.
Label: Circuit Diagram Creation and Conversion
Category: Software Development

27.
Relationship: Two types of simulations supported by the software.
Criteria: Simulating experiments within the software, discussing physics simulations or enhancing realism.
Label: Experimental and Physics Simulations
Category: Software Development

28.
Relationship: Two domains of experiments supported by the software.
Criteria: Discussing optics experiments or related functionality, suggesting inclusion of mechanics experiments.
Label: Optics and Mechanics Experiments
Category: Software Development

29.
Relationship: Two aspects of experiment management within the software.
Criteria: Allowing experiments to be saved and loaded, discussing management and portability of experiment setups.
Label: Experiment Saving and Management
Category: Software Development

30.
Relationship: Two priorities related to electromagnetics functionality.
Criteria: Setting a goal for electromagnetics by year-end, indicating electromagnetics will be prioritized first.
Label: Electromagnetics Development Priority  
Category: Software Development

31.
Relationship: Two aspects of compatibility evaluation.
Criteria: Confirming or inquiring about OS/system compatibility, expressing compatibility expectations based on system age.
Label: Compatibility Evaluation
Category: Technical Specifications

32.
Relationship: Two types of compatibility requirements.
Criteria: Referring to hardware compatibility or requirements, inquiring about compatibility on specific platforms.
Label: Hardware and Platform Compatibility
Category: Technical Specifications

33.
Relationship: Two categories of technical requirements.
Criteria: Specifying system requirements for running the software, discussing technical requirements or specifications.
Label: System and Technical Requirements
Category: Technical Specifications

34.
Relationship: Two constraints related to technical limitations and feature scope.
Criteria: Acknowledging technical limitations or constraints, referring to limitations in current feature set.
Label: Technical and Feature Limitations
Category: Technical Specifications

35.
Relationship: Two aspects of classroom technology infrastructure.
Criteria: Inquiring about classroom networks, inquiring about classroom contexts or infrastructure.
Label: Classroom Technology Infrastructure
Category: Educational Context

36.
Relationship: Two perspectives on classroom application and management.
Criteria: Describing software use in classrooms, describing classroom practices regarding computer network access.
Label: Classroom Application and Management
Category: Educational Context

37.
Relationship: Two ways the software supports learning and teaching.
Criteria: Referring to the software as a learning tool or resource, referring to learning affordances or educational benefits.
Label: Learning Tool and Affordances
Category: Educational Context

38.
Relationship: Two contexts related to teaching and instructional use.
Criteria: Discussing teaching contexts or environments, highlighting utility or usefulness for teaching purposes.
Label: Teaching Context and Utility
Category: Educational Context

39.
Relationship: Two aspects of providing information about the software.
Criteria: Providing general information about the software, describing personal usage or inquiring about operation.
Label: Software Information and Usage
Category: User Experience

40.
Relationship: Two resources to support software usage.
Criteria: Referring to the user manual or documentation, requesting or inquiring about a user manual.
Label: User Manual and Documentation
Category: User Experience

41.
Relationship: Two aspects of 3D visualization within the software.
Criteria: Referring to 3D visual effects or rendering, commenting on 3D visualization capabilities.
Label: 3D Visualization and Effects
Category: Software Development

42.
Relationship: Two methods of sharing resources within the community.
Criteria: Indicating the location of resources or files, sharing resources or materials within the community.
Label: Resource Location and Sharing
Category: Resource Sharing

43.
Relationship: Two forms of visual resource sharing.
Criteria: Sharing images or visual content, uploading, sharing or attempting to share images.
Label: Image Sharing and Upload
Category: Resource Sharing

44.
Relationship: Two perspectives on iterative software improvement.
Criteria: Committing to continued improvement efforts, appreciating the iterative nature of development.
Label: Iterative Improvement Commitment
Category: Software Development

45.
Relationship: Two aspects of clarifying information.
Criteria: Clarifying or providing clear answers, clarifying or specifying software versions or platforms.
Label: Information Clarification
Category: User Experience

46.
Relationship: Two aspects related to enhanced or expanded functionality.
Criteria: Discussing special functionality, modes or capabilities, expanding features or enhancing functionality.
Label: Functionality Enhancements
Category: Software Development