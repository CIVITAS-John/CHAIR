You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (48 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
48. 
Concepts: {Repeat the input 48}
Relationship: {What is logical relationship between concepts in code 48, or N/A if not applicable}
Criteria: {Who did what, and how for code 48}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: introducing new features, providing update previews
- Designers introduce and explain new or upcoming features and update content to users.
- Designers inform users about significant upcoming changes and provide previews of updates.

2.
Concepts: share info on app release, informing about release process
- A designer shares information about the app's release status.
- Designers describe the release process and provide updates to the community.

3.
Concepts: refining the design, discussing feature stability
- Designers discuss refining and simplifying the design for long-term stability.
- Designers discuss the stability and long-term planning of features and explain their importance.

4.
Concepts: optimizing features, discuss feature development
- Designers discuss improvements and optimizations to features before release.
- Designers discuss and share detailed information about feature development.

5.
Concepts: internal update, discuss iterative development
- Designers discuss internal updates and changes to the software.
- Designers discuss the ongoing iteration and release of software versions.

6.
Concepts: outlining feature roadmap, listing upcoming features
- Designers list, describe, and outline future plans for features and usability aspects.
- Designers provide information about changes and list features included in future updates.

7.
Concepts: discussing future plans, discussing future planning
- Developers discuss and detail potential future developments, features, and updates.
- Designers discuss future planning, development opportunities, and further interests.

8.
Concepts: planning to gather feedback, gathering user opinions
- Designers confirm plans to gather user opinions before starting new sections or projects.
- Designers plan to gather user opinions before starting new topics to avoid forgetting details and ensure engagement.

9.
Concepts: providing feature guidance, ensure proper use of new features
- Designers provide detailed guidance on how to use new features or updates.
- A designer ensures users understand how to properly use new features.

10.
Concepts: give example of feature's functions, highlighting practical application
- Giving examples of how a feature functions or can be used.
- Developers describe usage scenarios and highlight the practical applications of a feature.

11.
Concepts: manual editing, allowing manual adjustments
- Mentioning the possibility of manual editing in the software.
- Users and designers mention the ability to manually adjust settings or configurations.

12.
Concepts: on-screen keyboard functionality, clarifying touch screen functionality
- Discussion about the need for on-screen keyboard functionality for touch screen devices.
- Designers discuss and provide technical information about touch screen functionality, including on-screen keyboards.

13.
Concepts: consider user experience, making design decisions
- A designer considers the user experience in their design decisions.
- Designers make decisions and prioritize tasks or features based on design choices.

14.
Concepts: explaining design rationale, explaining design intentions
- Designers discuss and explain the principles and rationale guiding the software's design.
- Designers and users explain the goals, intentions, and rationale behind designs and questions.

15.
Concepts: discussing technical constraints, explaining software limitations
- Designers consider and discuss the technical aspects and constraints of software functionality.
- Designers acknowledge and explain the limitations or issues with a feature due to system constraints.

16.
Concepts: theorizing system compatibility, suggesting checking compatibility of the system, ensuring system compatibility
- A designer mentions the need to check and theorizes about the software's compatibility with older systems like Windows XP.
- A designer suggests checking system compatibility, possibly requiring a virtual machine.
- Designers discuss, confirm, and consider solutions for software compatibility with different hardware, operating systems, and future systems.

17.
Concepts: platform specific communication, providing platform-specific updates
- Communication specific to a particular platform version.
- Designers provide updates and information specific to different platforms.

18.
Concepts: design challenges, explaining development complexity
- Issues and obstacles faced by designers during the development process.
- Designers discuss the complexity, timeline, and challenges of developing a feature.

19.
Concepts: quick response, providing detailed answers
- A designer responds quickly to a user query or request.
- A designer provides a detailed and specific answer to a query and responds to an initial question, often providing a solution or next steps.

20.
Concepts: troubleshooting discussion, collaboratively solve problems
- User and designer discuss troubleshooting steps or solutions.
- Designers and users work together to address issues and improve the product.

21.
Concepts: elaborate on responses, elaborating on suggestions
- Designers elaborate on responses by adding more specific information and criteria.
- Designers suggest possible interactions or features and elaborate on their suggestions.

22.
Concepts: encourage user feedback, inviting feedback
- Designers seek, provide, and encourage user feedback for future iterations.
- Designers invite users to provide feedback or suggestions and invite users to suggest new features or improvements.

23.
Concepts: encourage problem reporting, encouraging future discussion
- Designers encourage users to report problems or issues.
- Designers invite users to ask more questions or report issues and encourage users to discuss or ask questions in the future.

24.
Concepts: acknowledging user feedback, acknowledgment of suggestions
- Designers acknowledge receiving user input or feedback.
- Users and designers acknowledge suggestions and updates.

25.
Concepts: taking feedback, address feedback process, adapting design based on feedback
- A designer takes feedback and commits to addressing it.
- Designers address how they handle feedback and incorporate it into the software.
- Designers identify the need to modify features and adapt design plans based on user feedback.

26.
Concepts: consider user feedback, incorporate user feedback
- Considering user feedback for future updates or changes.
- User feedback is acknowledged, solicited, considered, and incorporated into design decisions.

27.
Concepts: expressing gratitude, user gratitude and interaction
- Users and designers express gratitude and appreciation for contributions.
- Users express gratitude or positive feedback towards the designer.

28.
Concepts: expressing community support, expressing gratitude and support
- Expressions of enthusiasm or positive support from users or designers and appreciation for the designers' efforts.
- Instances where support and acknowledgment are expressed, along with gratitude and encouragement to build a positive community atmosphere.

29.
Concepts: provide download solution, providing download support
- A designer provides a solution for download-related queries.
- The designer offers support for downloading or using the software and provides instructions.

30.
Concepts: sharing resources, offering resources
- Designers or users send resources and share information about accessing them.
- A designer offers to upload a resource or file and provide resources or assistance.

31.
Concepts: image and avatar management, improving visual representation
- Designers and users discuss managing images and avatars.
- Designers discuss and seek advice on improving the visual representation and customization of avatars or images.

32.
Concepts: reference past incident, describing internet restrictions
- A user references a past incident to explain why classroom computers have network restrictions.
- Users describe internet restrictions and explain why their school has disabled internet access in classrooms.

33.
Concepts: technical inquiry, explaining technical issues
- Instances where users ask technical questions about the platform, indicating areas of user interest or potential issues.
- Users mention and explain technical issues or limitations they are experiencing.

34.
Concepts: confirming professional role, confirming teacher identity
- A user confirms their identity and professional role.
- A user or designer identifies themselves or others as teachers and confirms if they are middle or high school teachers.

35.
Concepts: providing context, providing community context
- Users provide context or background information in response to a question or statement and describe their current situation.
- Users provide context about the school's policies or their teaching experience.

36.
Concepts: user experience in educational contexts, discussing educational challenges
- User experiences and challenges in using the software within educational settings.
- Users or designers discuss the educational context and the technical and infrastructural challenges in educational settings.

37.
Concepts: describing educational use case, discussing classroom application
- Users describe how they use the software for educational purposes and its specific contexts.
- Users discuss the practical application of the software in classroom and educational settings.

38.
Concepts: indirect answer, inquiring about user background
- A designer responds indirectly to a user query by asking if they are a teacher.
- A designer identifies user needs by inquiring about their role, such as asking if they are a teacher, and their profession or teaching experience.

39.
Concepts: suggesting features, suggesting usability features
- Users suggest categorizing, refining, or adding features, and suggest collaboration on specific features or demonstrations.
- Users identify a usability issue and suggest adding a feature to address it, providing a reason for the request.

40.
Concepts: identifying feature needs, expressing user needs
- Designers raise concerns, explain the necessity, and identify potential needs for features or updates.
- Designers ask about user needs to better tailor the software, and users express their needs or requirements for specific features.

41.
Concepts: praising craftsmanship, praising software features and effects
- Users praise the designers' craftsmanship and acknowledge the quality of the software.
- Users review the software positively, express admiration for its features, and highlight their satisfaction.

42.
Concepts: share user experience, highlighting student engagement
- Users share their experiences and the impact of the software on their teaching or learning.
- Users highlight and describe student engagement and positive reactions when using the software in class.

43.
Concepts: appreciating app development, acknowledging feature development
- Users compliment the app's development and progress and appreciate its current state and future plans.
- Users acknowledge a feature positively and respond positively to information on feature development.

44.
Concepts: agreeing with suggestion, confirming agreement
- A user responds positively to a statement or suggestion and agrees with it.
- Users express agreement or acknowledgment in response to a statement or idea and confirm or acknowledge statements.

45.
Concepts: requesting resources, requesting user manual
- A user requests resources such as download links or user manuals and asks for their location.
- A user reiterates the need for a user manual and inquires about or requests its availability.

46.
Concepts: inquiring about platform details, inquiring about pc version
- A user asks about platform-specific details or versions of the software.
- Users inquire about the availability of a PC version of the software and ask how to use it or seek guidance.

47.
Concepts: seeking usage support, seeking download assistance
- Users express the need for support or guidance in using the software and inquire about how to interact with or use a specific version or application.
- Users ask technical questions about downloading and using the software and seek help or instructions on how to access or download it.

48.
Concepts: express uncertainty, requesting clarification
- A user expresses uncertainty or asks for clarification.
- Users clarify platform-specific inquiries, and developers request clarification on a user's comment or question.
===
---
Definitions for each code (48 in total):
1.
Concepts: introducing new features, providing update previews
Relationship: Both involve communicating upcoming changes to users.
Criteria: Designers introduce and explain new or upcoming features and update content to users.
Phrase: Introducing new features and updates

2.
Concepts: share info on app release, informing about release process
Relationship: Both involve communicating the status and process of app releases.
Criteria: Designers share information about the app's release status and describe the release process to the community.
Phrase: Sharing release information

3.
Concepts: refining the design, discussing feature stability
Relationship: Both involve improving and ensuring the stability of the design.
Criteria: Designers discuss refining the design for long-term stability and explain the importance of feature stability.
Phrase: Refining design and stability

4.
Concepts: optimizing features, discuss feature development
Relationship: Both involve discussing improvements and development of features.
Criteria: Designers discuss improvements and optimizations to features before release and share detailed information about feature development.
Phrase: Discussing feature optimization and development

5.
Concepts: internal update, discuss iterative development
Relationship: Both involve discussing ongoing changes and development processes.
Criteria: Designers discuss internal updates and the ongoing iteration and release of software versions.
Phrase: Discussing iterative development

6.
Concepts: outlining feature roadmap, listing upcoming features
Relationship: Both involve providing information about future features and plans.
Criteria: Designers list, describe, and outline future plans for features and usability aspects.
Phrase: Outlining feature roadmap

7.
Concepts: discussing future plans, discussing future planning
Relationship: Both involve discussing potential future developments and planning.
Criteria: Developers discuss and detail potential future developments, features, and updates.
Phrase: Discussing future plans

8.
Concepts: planning to gather feedback, gathering user opinions
Relationship: Both involve planning to collect user feedback.
Criteria: Designers confirm plans to gather user opinions before starting new sections or projects.
Phrase: Planning to gather user feedback

9.
Concepts: providing feature guidance, ensure proper use of new features
Relationship: Both involve ensuring users understand how to use new features.
Criteria: Designers provide detailed guidance on how to use new features or updates and ensure users understand their proper use.
Phrase: Providing feature guidance

10.
Concepts: give example of feature's functions, highlighting practical application
Relationship: Both involve explaining how features can be used.
Criteria: Developers give examples of how a feature functions and highlight its practical applications.
Phrase: Highlighting feature applications

11.
Concepts: manual editing, allowing manual adjustments
Relationship: Both involve discussing the ability to manually adjust settings.
Criteria: Users and designers mention the possibility of manual editing and adjustments in the software.
Phrase: Allowing manual adjustments

12.
Concepts: on-screen keyboard functionality, clarifying touch screen functionality
Relationship: Both involve discussing functionality for touch screen devices.
Criteria: Designers discuss and provide technical information about touch screen functionality, including on-screen keyboards.
Phrase: Clarifying touch screen functionality

13.
Concepts: consider user experience, making design decisions
Relationship: Both involve making design decisions based on user experience.
Criteria: Designers consider the user experience in their design decisions and prioritize tasks or features accordingly.
Phrase: Making user-centered design decisions

14.
Concepts: explaining design rationale, explaining design intentions
Relationship: Both involve explaining the reasoning behind design choices.
Criteria: Designers discuss and explain the principles and rationale guiding the software's design.
Phrase: Explaining design rationale

15.
Concepts: discussing technical constraints, explaining software limitations
Relationship: Both involve acknowledging and explaining software limitations.
Criteria: Designers consider and discuss the technical aspects and constraints of software functionality.
Phrase: Discussing technical constraints

16.
Concepts: theorizing system compatibility, suggesting checking compatibility of the system, ensuring system compatibility
Relationship: All involve discussing and ensuring software compatibility with different systems.
Criteria: Designers discuss, confirm, and consider solutions for software compatibility with different hardware and operating systems.
Phrase: Ensuring system compatibility

17.
Concepts: platform specific communication, providing platform-specific updates
Relationship: Both involve providing updates specific to different platforms.
Criteria: Designers provide updates and information specific to different platforms.
Phrase: Providing platform-specific updates

18.
Concepts: design challenges, explaining development complexity
Relationship: Both involve discussing the challenges and complexities of development.
Criteria: Designers discuss the complexity, timeline, and challenges of developing a feature.
Phrase: Explaining development challenges

19.
Concepts: quick response, providing detailed answers
Relationship: Both involve responding to user queries with detailed information.
Criteria: Designers respond quickly to user queries and provide detailed and specific answers.
Phrase: Providing detailed responses

20.
Concepts: troubleshooting discussion, collaboratively solve problems
Relationship: Both involve working together to address issues.
Criteria: Designers and users work together to discuss troubleshooting steps and solve problems.
Phrase: Collaboratively solving problems

21.
Concepts: elaborate on responses, elaborating on suggestions
Relationship: Both involve providing more detailed information and suggestions.
Criteria: Designers elaborate on responses by adding more specific information and criteria.
Phrase: Elaborating on responses

22.
Concepts: encourage user feedback, inviting feedback
Relationship: Both involve seeking and encouraging user feedback.
Criteria: Designers seek, provide, and encourage user feedback for future iterations.
Phrase: Encouraging user feedback

23.
Concepts: encourage problem reporting, encouraging future discussion
Relationship: Both involve encouraging users to report issues and engage in discussions.
Criteria: Designers encourage users to report problems or issues and invite them to discuss or ask questions in the future.
Phrase: Encouraging problem reporting

24.
Concepts: acknowledging user feedback, acknowledgment of suggestions
Relationship: Both involve acknowledging user input and suggestions.
Criteria: Designers acknowledge receiving user input or feedback and suggestions.
Phrase: Acknowledging user feedback

25.
Concepts: taking feedback, address feedback process, adapting design based on feedback
Relationship: All involve handling and incorporating user feedback into design.
Criteria: Designers take feedback, address how they handle it, and adapt design plans based on user feedback.
Phrase: Adapting design based on feedback

26.
Concepts: consider user feedback, incorporate user feedback
Relationship: Both involve considering and incorporating user feedback into design decisions.
Criteria: User feedback is acknowledged, solicited, considered, and incorporated into design decisions.
Phrase: Incorporating user feedback

27.
Concepts: expressing gratitude, user gratitude and interaction
Relationship: Both involve expressing gratitude and appreciation.
Criteria: Users and designers express gratitude and appreciation for contributions.
Phrase: Expressing gratitude

28.
Concepts: expressing community support, expressing gratitude and support
Relationship: Both involve expressing support and gratitude to build a positive community atmosphere.
Criteria: Users and designers express enthusiasm, support, and appreciation for each other's efforts.
Phrase: Expressing community support

29.
Concepts: provide download solution, providing download support
Relationship: Both involve offering solutions and support for downloading the software.
Criteria: Designers provide solutions and support for download-related queries.
Phrase: Providing download support

30.
Concepts: sharing resources, offering resources
Relationship: Both involve sharing and offering resources.
Criteria: Designers or users send resources and share information about accessing them.
Phrase: Sharing resources

31.
Concepts: image and avatar management, improving visual representation
Relationship: Both involve managing and improving visual representation.
Criteria: Designers and users discuss managing images and avatars and improving their visual representation.
Phrase: Managing visual representation

32.
Concepts: reference past incident, describing internet restrictions
Relationship: Both involve explaining internet restrictions based on past incidents.
Criteria: Users reference past incidents to explain why classroom computers have network restrictions.
Phrase: Describing internet restrictions

33.
Concepts: technical inquiry, explaining technical issues
Relationship: Both involve discussing and explaining technical issues.
Criteria: Users ask technical questions about the platform and explain the issues they are experiencing.
Phrase: Explaining technical issues

34.
Concepts: confirming professional role, confirming teacher identity
Relationship: Both involve confirming the professional role and identity of users.
Criteria: Users or designers confirm their identity and professional role, such as being teachers.
Phrase: Confirming professional identity

35.
Concepts: providing context, providing community context
Relationship: Both involve providing context or background information.
Criteria: Users provide context or background information in response to a question or statement.
Phrase: Providing context

36.
Concepts: user experience in educational contexts, discussing educational challenges
Relationship: Both involve discussing user experiences and challenges in educational settings.
Criteria: Users discuss their experiences and challenges in using the software within educational settings.
Phrase: Discussing educational challenges

37.
Concepts: describing educational use case, discussing classroom application
Relationship: Both involve describing how the software is used in educational settings.
Criteria: Users describe how they use the software for educational purposes and its specific contexts.
Phrase: Describing educational use cases

38.
Concepts: indirect answer, inquiring about user background
Relationship: Both involve responding to queries by asking about the user's background.
Criteria: Designers respond indirectly to user queries by inquiring about their role and background.
Phrase: Inquiring about user background

39.
Concepts: suggesting features, suggesting usability features
Relationship: Both involve suggesting new features or improvements.
Criteria: Users suggest categorizing, refining, or adding features to improve usability.
Phrase: Suggesting new features

40.
Concepts: identifying feature needs, expressing user needs
Relationship: Both involve identifying and expressing the need for specific features.
Criteria: Designers and users identify potential needs for features or updates and express their requirements.
Phrase: Identifying feature needs

41.
Concepts: praising craftsmanship, praising software features and effects
Relationship: Both involve expressing admiration for the software's quality and features.
Criteria: Users praise the designers' craftsmanship and acknowledge the quality of the software.
Phrase: Praising software craftsmanship

42.
Concepts: share user experience, highlighting student engagement
Relationship: Both involve sharing experiences and highlighting engagement.
Criteria: Users share their experiences and highlight student engagement when using the software.
Phrase: Highlighting student engagement

43.
Concepts: appreciating app development, acknowledging feature development
Relationship: Both involve expressing appreciation for the app's development and features.
Criteria: Users compliment the app's development and appreciate its current state and future plans.
Phrase: Appreciating app development

44.
Concepts: agreeing with suggestion, confirming agreement
Relationship: Both involve expressing agreement with a statement or suggestion.
Criteria: Users respond positively and agree with statements or suggestions.
Phrase: Confirming agreement

45.
Concepts: requesting resources, requesting user manual
Relationship: Both involve requesting resources or manuals.
Criteria: Users request resources such as download links or user manuals.
Phrase: Requesting resources

46.
Concepts: inquiring about platform details, inquiring about pc version
Relationship: Both involve asking about platform-specific details or versions.
Criteria: Users inquire about the availability and details of different software versions.
Phrase: Inquiring about platform details

47.
Concepts: seeking usage support, seeking download assistance
Relationship: Both involve seeking support for using or downloading the software.
Criteria: Users express the need for support or guidance in using and downloading the software.
Phrase: Seeking usage support

48.
Concepts: express uncertainty, requesting clarification
Relationship: Both involve expressing uncertainty and asking for clarification.
Criteria: Users express uncertainty or ask for clarification on platform-specific inquiries.
Phrase: Requesting clarification
---