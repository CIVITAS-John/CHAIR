You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: seeking to improve educational utility, seeking enhancements for learning experiences
- A user seeks to improve the educational utility or value of the Physics Lab software.
- A user or designer seeks to enhance or improve the learning experiences provided by the Physics Lab software.

2.
Concepts: suggested development approach, advise on development approach
- Suggestions or advice on how to approach development or improvement
- Advice or guidance on how to approach development, often based on experience or expertise.

3.
Concepts: development advice, user development advice, development suggestion
- User advises on refinement or development approach.
- User advises on development approach or prioritization.
- User suggests a focused development approach.

4.
Concepts: encourage systematic development, suggest methodical approach
- User suggests a systematic approach to development.
- User suggests a methodical or systematic approach to development or feature implementation.

5.
Concepts: demonstrating interest, express interest in using the software, expressing interest in learning
- A user demonstrates interest or curiosity about the software or its development.
- Showing interest in using the software or exploring its features.
- User expresses interest in learning more about the software or tools

6.
Concepts: express interest, expressing interest in features, feature interest
- A user or designer expresses interest in a specific topic or feature.
- Users express interest in specific features or functionalities of the software.
- User expresses interest in a specific feature, functionality, or aspect of the software.

7.
Concepts: engage community interest, engaging with software development interest
- Designers and users generate interest and excitement about the software and its development.
- Users engage with the community's interest in software development.

8.
Concepts: expressing interest, active engagement
- A user expresses interest or enthusiasm for updates.
- A user demonstrates active engagement or interest in updates or developments.

9.
Concepts: usability advocacy, user experience advocacy
- User advocates for usability improvements.
- A user advocates for an enhanced user experience.

10.
Concepts: advocate for better design, advocating for user-centered design, advocate for user-driven design, advocating for user-centric design
- A user or designer advocates for better design practices or approaches.
- A user advocates for design adjustments that prioritize user needs.
- User suggests or advocates for a design idea or feature that benefits the user experience.
- User advocates for design choices based on user experience.

11.
Concepts: advocate for user-friendly tools, advocating for user-friendly resources
- Advocating for user-friendly tools or features.
- Users advocate for user-friendly resources or materials.

12.
Concepts: advocate for user needs, advocate for practical features
- A user advocates for a feature that meets their needs, citing benefits for their use case.
- User suggests a practical feature for the platform, specifying its potential benefits.

13.
Concepts: share classroom success, sharing positive classroom experiences, positive classroom experience
- User shares successful classroom experience
- User shares a positive experience using the software in a classroom.
- User shares positive experience or outcome using the software.

14.
Concepts: highlighting user experiences, highlighting user engagement
- Users highlight their experiences.
- Highlighting user engagement or success with a product or feature.

15.
Concepts: expressed student engagement, software impact on student engagement
- User expresses student engagement or positive reactions to the software.
- Users highlight the impact of the software on student engagement.

16.
Concepts: emphasizing user guidance, emphasizing documentation
- A user emphasizes the importance of user guidance or support.
- A user emphasizes the importance of documentation or user manuals.

17.
Concepts: practical suggestion, suggesting practical use cases
- A user identifies a practical need or suggests a solution.
- Users suggest practical use cases.

18.
Concepts: highlight usability need, pointing out practical needs
- A user highlights a usability need or suggests an improvement to the software.
- A user points out a practical need or requirement for the software.

19.
Concepts: providing reassurance, reassure about software usability
- A user provides reassurance about compatibility.
- A user provides reassurance about software usability.

20.
Concepts: highlighting convenience, emphasizing convenience
- A user highlights the convenience of a feature.
- A user emphasizes the importance of convenience or ease of use.

21.
Concepts: practicality, practical utility
- User highlights the practicality or usability of a software or tool.
- A user highlights the practicality or usefulness of the software.
- User emphasizes the practical utility or benefits of a feature or functionality.

22.
Concepts: feature planning, planning feature development
- A designer plans to create a new feature or function.
- A designer plans or outlines the development of new features.

23.
Concepts: outlining planned features, list planned features and components
- A designer outlines planned features or functionalities of the software.
- The designer lists or outlines the features, components, or updates planned for the software.

24.
Concepts: update preview, previewing future updates, previewing upcoming updates
- The designer provides a preview of upcoming updates or features.
- Designer previews or announces upcoming updates or features.
- Designer previews upcoming software updates.

25.
Concepts: release plans, feature rollout planning
- Designer communicates plans for releasing a new feature or update.
- Designer discusses or outlines a plan for implementing features or updates.

26.
Concepts: outline upcoming updates, outline upcoming software features and updates
- Designer outlines upcoming updates, features, or plans.
- The designer outlines or explains the upcoming features, updates, or changes to the software.

27.
Concepts: future feature, planned feature enhancements, explaining upcoming features
- Designer explains or previews upcoming features, functionalities, or changes.
- Designer announces or discusses plans for future feature enhancements.
- Designer explains or provides details about upcoming features or updates.

28.
Concepts: introducing updates, confirm feature update, announces update, announcing updates, feature announcement, feature update announcement
- A designer introduces upcoming updates or features.
- A designer confirms or announces an update or release of a new feature or version.
- A designer announces or shares information about an update or new feature.
- A designer announces or releases an update or new features.
- Designer confirms or announces an upcoming update, release, or change.
- A designer lists or announces upcoming features or updates.
- Designer clearly presents new features, updates, or changes in the software.
- A designer announces or describes a feature update or change.

29.
Concepts: announce software update, announcing new version, announcing software updates, software release announcement, announcing app releases
- Designer announces a software update.
- Designer announces the release of a new version.
- A designer announces a software update, specifying the version and its features.
- A designer announces a new software release or update.
- A designer shares information about the release of a new app or software version.

30.
Concepts: list new features, list new features and components, outlines new features
- The designer lists new features, updates, or changes.
- Designer lists or enumerates new features, components, or updates.
- A designer outlines or lists new features or updates.

31.
Concepts: describe new components, announce new component features
- Designer provides details about new or ideal components or features.
- Designer announces new component features

32.
Concepts: sharing new features, new feature descriptions
- A designer shares new features or updates about the software.
- Designer 1 describes new features, components, or changes to the software.
===
Here are the definitions for each code:

---
1.
Concepts: seeking to improve educational utility, seeking enhancements for learning experiences
Relationship: The concepts are related as they both focus on improving the educational value of the Physics Lab software.
Criteria: Users or designers seek to improve the educational utility or enhance learning experiences provided by the software.
Phrase: Seeking educational improvements.

2.
Concepts: suggested development approach, advise on development approach
Relationship: The concepts are related as they both involve providing guidance on development.
Criteria: Users or designers suggest or advise on how to approach development or improvement.
Phrase: Advising on development.

3.
Concepts: development advice, user development advice, development suggestion
Relationship: The concepts are related as they all involve users providing guidance on development.
Criteria: Users advise on refinement or development approach, prioritization, or suggest a focused development approach.
Phrase: Providing development advice.

4.
Concepts: encourage systematic development, suggest methodical approach
Relationship: The concepts are related as they both promote a structured approach to development.
Criteria: Users suggest a systematic or methodical approach to development or feature implementation.
Phrase: Advocating for systematic development.

5.
Concepts: demonstrating interest, express interest in using the software, expressing interest in learning
Relationship: The concepts are related as they all demonstrate a desire to engage with the software.
Criteria: Users demonstrate interest or curiosity about the software, its development, or learning more about it.
Phrase: Expressing interest.

6.
Concepts: express interest, expressing interest in features, feature interest
Relationship: The concepts are related as they all involve expressing interest in specific aspects of the software.
Criteria: Users express interest in specific features, functionalities, or aspects of the software.
Phrase: Expressing feature interest.

7.
Concepts: engage community interest, engaging with software development interest
Relationship: The concepts are related as they both involve generating interest and excitement about the software.
Criteria: Designers and users generate interest and excitement about the software and its development.
Phrase: Engaging community interest.

8.
Concepts: expressing interest, active engagement
Relationship: The concepts are related as they both demonstrate enthusiasm for updates.
Criteria: Users express interest or enthusiasm for updates and demonstrate active engagement.
Phrase: Expressing active interest.

9.
Concepts: usability advocacy, user experience advocacy
Relationship: The concepts are related as they both prioritize user needs.
Criteria: Users advocate for usability improvements or an enhanced user experience.
Phrase: Advocating for usability.

10.
Concepts: advocate for better design, advocating for user-centered design, advocate for user-driven design, advocating for user-centric design
Relationship: The concepts are related as they all prioritize user needs in design.
Criteria: Users advocate for better design practices or approaches that prioritize user needs.
Phrase: Advocating for user-centered design.

11.
Concepts: advocate for user-friendly tools, advocating for user-friendly resources
Relationship: The concepts are related as they both prioritize user-friendliness.
Criteria: Users advocate for user-friendly tools or resources.
Phrase: Advocating for user-friendliness.

12.
Concepts: advocate for user needs, advocate for practical features
Relationship: The concepts are related as they both prioritize user needs.
Criteria: Users advocate for features that meet their needs, citing benefits for their use case.
Phrase: Advocating for user needs.

13.
Concepts: share classroom success, sharing positive classroom experiences, positive classroom experience
Relationship: The concepts are related as they all involve sharing positive experiences.
Criteria: Users share successful classroom experiences or positive outcomes using the software.
Phrase: Sharing classroom success.

14.
Concepts: highlighting user experiences, highlighting user engagement
Relationship: The concepts are related as they both involve highlighting user interactions.
Criteria: Users highlight their experiences or engagement with the software.
Phrase: Highlighting user experiences.

15.
Concepts: expressed student engagement, software impact on student engagement
Relationship: The concepts are related as they both involve measuring student engagement.
Criteria: Users express student engagement or highlight the impact of the software on student engagement.
Phrase: Expressing student engagement.

16.
Concepts: emphasizing user guidance, emphasizing documentation
Relationship: The concepts are related as they both prioritize user support.
Criteria: Users emphasize the importance of user guidance or documentation.
Phrase: Emphasizing user guidance.

17.
Concepts: practical suggestion, suggesting practical use cases
Relationship: The concepts are related as they both involve providing practical ideas.
Criteria: Users identify practical needs or suggest practical use cases.
Phrase: Providing practical suggestions.

18.
Concepts: highlight usability need, pointing out practical needs
Relationship: The concepts are related as they both involve identifying areas for improvement.
Criteria: Users highlight usability needs or point out practical requirements for the software.
Phrase: Highlighting usability needs.

19.
Concepts: providing reassurance, reassure about software usability
Relationship: The concepts are related as they both involve alleviating concerns.
Criteria: Users provide reassurance about compatibility or software usability.
Phrase: Providing reassurance.

20.
Concepts: highlighting convenience, emphasizing convenience
Relationship: The concepts are related as they both prioritize ease of use.
Criteria: Users highlight the convenience of a feature or emphasize the importance of convenience.
Phrase: Highlighting convenience.

21.
Concepts: practicality, practical utility
Relationship: The concepts are related as they both involve evaluating the usefulness of the software.
Criteria: Users highlight the practicality or usability of the software.
Phrase: Evaluating practicality.

22.
Concepts: feature planning, planning feature development
Relationship: The concepts are related as they both involve planning for new features.
Criteria: Designers plan to create new features or functions.
Phrase: Planning feature development.

23.
Concepts: outlining planned features, list planned features and components
Relationship: The concepts are related as they both involve outlining future developments.
Criteria: Designers outline planned features, functionalities, or components of the software.
Phrase: Outlining planned features.

24.
Concepts: update preview, previewing future updates, previewing upcoming updates
Relationship: The concepts are related as they all involve providing a glimpse into future developments.
Criteria: Designers provide a preview of upcoming updates or features.
Phrase: Previewing updates.

25.
Concepts: release plans, feature rollout planning
Relationship: The concepts are related as they both involve planning for the release of new features.
Criteria: Designers communicate plans for releasing new features or updates.
Phrase: Planning feature rollout.

26.
Concepts: outline upcoming updates, outline upcoming software features and updates
Relationship: The concepts are related as they both involve outlining future developments.
Criteria: Designers outline upcoming updates, features, or plans.
Phrase: Outlining upcoming updates.

27.
Concepts: future feature, planned feature enhancements, explaining upcoming features
Relationship: The concepts are related as they all involve discussing future developments.
Criteria: Designers explain or preview upcoming features, functionalities, or changes.
Phrase: Explaining upcoming features.

28.
Concepts: introducing updates, confirm feature update, announces update, announcing updates, feature announcement, feature update announcement
Relationship: The concepts are related as they all involve announcing new developments.
Criteria: Designers introduce, confirm, or announce updates, features, or releases.
Phrase: Announcing updates.

29.
Concepts: announce software update, announcing new version, announcing software updates, software release announcement, announcing app releases
Relationship: The concepts are related as they all involve announcing new software releases.
Criteria: Designers announce software updates, specifying the version and its features.
Phrase: Announcing software updates.

30.
Concepts: list new features, list new features and components, outlines new features
Relationship: The concepts are related as they all involve listing new developments.
Criteria: Designers list new features, updates, or changes.
Phrase: Listing new features.

31.
Concepts: describe new components, announce new component features
Relationship: The concepts are related as they both involve discussing new components.
Criteria: Designers provide details about new or ideal components or features.
Phrase: Describing new components.

32.
Concepts: sharing new features, new feature descriptions
Relationship: The concepts are related as they both involve sharing information about new developments.
Criteria: Designers share new features or updates about the software.
Phrase: Sharing new features.