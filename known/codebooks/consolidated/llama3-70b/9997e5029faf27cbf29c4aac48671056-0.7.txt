You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (24 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
24. {Repeat the input 24}
Relationship: {The logical relationship between concepts in input 24}
Criteria: {A sentence of consolidated criteria for code 24}
Label: {A consolidated label of code 24}
Category: {2-4 words for code 24}
---
~~~
1. emojis, emoji usage for engagement.
- Use of emojis in communication.
- Instances where emojis are used to express emotions, reactions, or to signify engagement in conversations with minimal use of words.

2. emotional expression, user interaction: expressing emotions.
- Instances of community members using emojis or language to express emotions or convey emotional tone.
- Users expressing emotions or reactions through emojis or other means.

3. appreciation for software, positive user feedback.
- Users expressing satisfaction or positive feedback about the software.
- Instances where users express satisfaction, approval, or enthusiasm for the software and its features.

4. questions and clarifications, user queries and requests.
- Instances where users ask questions or seek clarification.
- Instances where users ask questions or make specific requests for new features or content to gain information or clarify doubts.

5. collaboration and consultation, consultation and inclusion.
- Designer soliciting input or feedback from community members.
- Examples of the designer seeking opinions, preferences, or information from the community to guide design decisions.

6. user interaction, designer-user interaction.
- Users engaging with each other or the designer.
- Instances of communication or collaboration between designers and users.

7. feature planning, development prioritization.
- Discussions or decisions related to planned software features, capabilities, or prioritizing their development.
- Discussions that focus on the decision-making process regarding which software features or sections to develop or enhance first.

8. version release, update announcements.
- Updates and announcements about the software version.
- Announcements regarding new software updates, changes, or enhancements shared with the community.

9. feature updates, feature development.
- Includes updates, features, and components discussions.
- Discussion of new features or updates to the platform.

10. learning affordances, learning experience.
- Features or aspects of the software that facilitate active learning, experimentation, or conceptual understanding of physics concepts.
- The features and mechanisms within the software that enable users to actively engage in hands-on experiments, explore physics concepts, and receive feedback on their understanding and actions.

11. compatibility issues, system compatibility.
- Users discussing compatibility issues with different operating systems.
- Discussions about the software's compatibility with different operating systems and hardware.
- Instances where users discuss technical issues related to system compatibility.

12. download instructions, download and installation.
- Users ask questions about how to download the software.
- Instructions or clarifications on how to download or install the app.
- Community members asking about or receiving instructions on how to download or install the software.

13. active community participation.
- Evidence of community members actively engaging in discussions, sharing resources, or providing feedback.
- The level of active involvement and contribution from the community members in the development and use of the software, including providing feedback, requesting features, and collaborating with the designer.

14. recognition of effort.
- Acknowledgment of hard work put in by members of the community.
- Instances where users acknowledge the effort or work done by others, often showing appreciation.

15. usability concerns.
- Instances where ease of use, practical aspects, and user experience of the software are discussed.
- Includes discussions or queries about difficulties, design choices, and usability aspects of the software interface.

16. user experience.
- Features that enhance the overall experience and satisfaction of using the software.
- Considerations, discussions, or aspects related to the user experience, interface design, and usability of the software or application.

17. user involvement in design.
- Evidence of users being involved in the design process through feedback and suggestions.
- The degree to which users are actively involved in the design and development process, including providing input, testing, and collaborating with the designer.
- Instances where users are directly involved in the design process by providing feedback or suggestions, and this feedback is actively sought and used to influence design decisions and software development.

18. feature requests.
- Involves discussions on desired features and their importance for user experience.
- Requests from users for new features or improvements in the software.
- Instances where users request or discuss platform features.
- A user's request or suggestion for a specific feature or functionality to be added to the software.

19. feature announcement.
- Announcements or updates about new or upcoming features of the Physics Lab platform.
- Announcements or descriptions of new features, updates, or improvements, including information on compatibility and functionality.
- Instances where new or updated features are announced by the designer to the community.

20. software updates.
- Involves designer announcements on software updates, features, adjustments, and bug fixes.
- Information or discussions about new software versions and the specific changes or improvements made.
- Instances where the designer announces updates or changes to the software.
- Information or discussions about updates, new versions, releases, or planned changes to the Physics Lab software.

21. platform updates.
- This code captures the designer's communication about upcoming changes, improvements, and new features to the online platform, with the goal of meeting the community's needs.
- Designers share information about changes to the Physics Lab platform.

22. designer responsiveness.
- Discussions that demonstrate the designers' or developers' responsiveness to user feedback and needs, including how they actively engage with the community and incorporate their suggestions.
- The designer acknowledging, responding to, and incorporating user feedback, demonstrating responsiveness to user suggestions.
- Examples of the designer responding to user feedback, addressing concerns, or explaining upcoming features.

23. collaborative design.
- The level of collaboration and co-creation between the designer and the community in the development of the software.
- Instances where designers actively involve users in the design process by seeking and responding to their input.

24. information exchange.
- Instances where participants seek or share knowledge, information, or resources within the community.
- Exchanges where information about the software's functionality, updates, or usage is shared among community members.
===
Here is the output:

---
Categories: 
* Community Engagement
* Design and Development
* User Experience
* Community Involvement
* Software Updates
* Platform Development
* Collaboration and Feedback

Definitions for each code:

1. emojis, emoji usage for engagement.
Relationship: Parallel concepts
Criteria: Use of emojis to express emotions, reactions, or engagement in conversations.
Label: Emotional Expression through Emojis
Category: Community Engagement

2. emotional expression, user interaction: expressing emotions.
Relationship: Broader concept
Criteria: Expressing emotions or reactions through language or emojis.
Label: Emotional Expression
Category: Community Engagement

3. appreciation for software, positive user feedback.
Relationship: Parallel concepts
Criteria: Expressing satisfaction or positive feedback about the software.
Label: Positive Feedback
Category: Community Engagement

4. questions and clarifications, user queries and requests.
Relationship: Parallel concepts
Criteria: Asking questions or seeking clarification about the software.
Label: User Queries
Category: Community Engagement

5. collaboration and consultation, consultation and inclusion.
Relationship: Broader concept
Criteria: Designer seeking input or feedback from community members.
Label: Collaborative Design
Category: Collaboration and Feedback

6. user interaction, designer-user interaction.
Relationship: Parallel concepts
Criteria: Communication or collaboration between designers and users.
Label: Designer-User Interaction
Category: Collaboration and Feedback

7. feature planning, development prioritization.
Relationship: Broader concept
Criteria: Discussing or deciding on planned software features or development priorities.
Label: Feature Planning
Category: Design and Development

8. version release, update announcements.
Relationship: Parallel concepts
Criteria: Announcing new software updates, changes, or enhancements.
Label: Update Announcements
Category: Software Updates

9. feature updates, feature development.
Relationship: Broader concept
Criteria: Discussing new features or updates to the platform.
Label: Feature Development
Category: Design and Development

10. learning affordances, learning experience.
Relationship: Broader concept
Criteria: Features facilitating active learning, experimentation, or conceptual understanding of physics concepts.
Label: Learning Affordances
Category: User Experience

11. compatibility issues, system compatibility.
Relationship: Parallel concepts
Criteria: Discussing compatibility issues with different operating systems.
Label: System Compatibility
Category: Software Updates

12. download instructions, download and installation.
Relationship: Parallel concepts
Criteria: Asking about or providing instructions on how to download or install the app.
Label: Download and Installation
Category: Software Updates

13. active community participation.
Relationship: Broader concept
Criteria: Community members actively engaging in discussions, sharing resources, or providing feedback.
Label: Active Community Participation
Category: Community Engagement

14. recognition of effort.
Relationship: Parallel concepts
Criteria: Acknowledging the effort or work done by others.
Label: Recognition of Effort
Category: Community Engagement

15. usability concerns.
Relationship: Parallel concepts
Criteria: Discussing ease of use, practical aspects, and user experience of the software.
Label: Usability Concerns
Category: User Experience

16. user experience.
Relationship: Broader concept
Criteria: Considering user experience, interface design, and usability of the software.
Label: User Experience
Category: User Experience

17. user involvement in design.
Relationship: Broader concept
Criteria: Users being involved in the design process through feedback and suggestions.
Label: User Involvement in Design
Category: Collaboration and Feedback

18. feature requests.
Relationship: Parallel concepts
Criteria: Requesting new features or improvements in the software.
Label: Feature Requests
Category: Collaboration and Feedback

19. feature announcement.
Relationship: Parallel concepts
Criteria: Announcing new or upcoming features of the Physics Lab platform.
Label: Feature Announcements
Category: Software Updates

20. software updates.
Relationship: Broader concept
Criteria: Announcing new software updates, features, adjustments, and bug fixes.
Label: Software Updates
Category: Software Updates

21. platform updates.
Relationship: Parallel concepts
Criteria: Designer sharing information about changes to the Physics Lab platform.
Label: Platform Updates
Category: Platform Development

22. designer responsiveness.
Relationship: Broader concept
Criteria: Designer responding to user feedback and incorporating suggestions.
Label: Designer Responsiveness
Category: Collaboration and Feedback

23. collaborative design.
Relationship: Broader concept
Criteria: Collaboration and co-creation between the designer and the community in software development.
Label: Collaborative Design
Category: Collaboration and Feedback

24. information exchange.
Relationship: Parallel concepts
Criteria: Exchanging knowledge, information, or resources within the community.
Label: Information Exchange
Category: Community Engagement