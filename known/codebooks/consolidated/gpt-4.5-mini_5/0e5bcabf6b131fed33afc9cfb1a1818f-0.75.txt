You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (27 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
27. 
Concepts: {Repeat the input 27}
Relationship: {What is logical relationship between concepts in code 27, or N/A if not applicable}
Criteria: {Who did what, and how for code 27}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: clarify testing status, confirm feature updates
- Designers clarify the testing status and any potential issues regarding the software version.
- Designers confirm updates and the implementation of features while suggesting compatibility checks for future updates.

2.
Concepts: outline update scope, communicate release information
- Designers discuss the scope of upcoming software updates while outlining the release schedule for various versions.
- Designers communicate updates and release schedules while soliciting feedback on their plans for future software updates.

3.
Concepts: share review progress, share visual progress
- Designers share the review status of applications and outline the current status of releases for different platforms.
- Designers share visual content and highlight the significance of the latest software updates to communicate their impact.

4.
Concepts: notify users about updates, announce product updates
- Designers formally inform users about new versions and changes while updating the community on releases and features.
- Designers announce new versions and significant changes to the product while introducing new features or components that enhance its functionality.

5.
Concepts: propose design ideas, promise future improvements
- Designers suggest enhancements or new features and indicate potential improvements for upcoming versions.
- Designers promise future improvements and indicate that certain features will be implemented later.

6.
Concepts: plan for long-term stability, give rationale to development decision
- Designers discuss plans for features contributing to long-term stability and explain the rationale behind these features.
- A designer provides rationale for development decisions aimed at ensuring long-term stability.

7.
Concepts: address usability, highlight software usability
- A designer describes efforts to enhance usability based on user feedback and testing.
- Designers highlight the usability of software and seek efficiency through simplification based on user feedback.

8.
Concepts: provide user guidance, instruction and updates
- Designers provide detailed instructions and guidance on new software features and changes.
- Designers providing updates and instructions to help users understand and use the software effectively.

9.
Concepts: feature guidance, share user tips
- Designers give guidance on how to use certain features or components effectively.
- Designers list new features while providing tips and shortcuts to enhance user experience.

10.
Concepts: clarify feature details, explain technical development details
- Designers clarify how existing features work and address technical details regarding functionality.
- Designers explain the development process and provide technical compatibility information.

11.
Concepts: share user experiences, share teaching experiences
- Users share experiences affecting software use and their impact on educational contexts.
- Users share insights and experiences related to teaching and education.

12.
Concepts: personal connection, share design experiences
- Users and designers share their teaching experiences to create a sense of connection within the community.
- Designers and users share personal anecdotes that contribute to the design process.

13.
Concepts: explain software limitations, discuss team and solution limitations
- Users explain platform limitations while designers acknowledge software compatibility issues.
- Designers explain the limitations of their development team and the current solution in specific contexts.

14.
Concepts: provide context, contextualize software usage
- A user shares a contextual background that informs the discussion about software use restrictions.
- Users contextualize inquiries by explaining their environments and challenges related to software use.

15.
Concepts: invite inquiries, encourage elaboration
- Users engage in information seeking while designers invite more questions for clarification.
- Designers encourage users to elaborate on their inquiries and provide further information.

16.
Concepts: pose design questions, address user inquiries and respond to questions
- Designers pose questions related to specific design functionalities, and users provide confirmation or details for design support.
- Designers address user inquiries and respond with information regarding software capabilities.

17.
Concepts: quick response, ensure responsiveness
- Designer provides a prompt response to a user's inquiry about uploading something.
- Designer engages in real-time communication to address a user’s query and respond to user comments.

18.
Concepts: user input, prioritize user input
- Users express willingness to provide feedback or input before development.
- Designers prioritize user feedback for future updates and outline development priorities based on user input.

19.
Concepts: seek confirmation, seek user consensus
- Users and designers confirm sentiments expressed and seek confirmation regarding specific details.
- Designers seek agreement on proposed ideas while confirming plans for gathering additional opinions.

20.
Concepts: co-design with users, engage in collaborative planning
- Designers indicate plans to involve users in future development processes.
- Designers and users collaboratively discuss and plan the development of the software and potential future functionalities.

21.
Concepts: acknowledging community needs, acknowledge and incorporate user feedback
- A designer acknowledges community needs and considers them in future updates.
- Designers acknowledge and adapt plans based on user feedback received from the community to improve future updates.

22.
Concepts: initiate community engagement, invite community engagement
- Designers initiate community engagement by welcoming users and fostering interaction.
- Designers cultivate community participation by promoting open communication and inviting engagement.

23.
Concepts: acknowledge community help, express acknowledgment and support
- Users acknowledge help received from others in the community and express gratitude for resource utilization.
- Users express support and gratitude, fostering positive interactions.

24.
Concepts: foster reciprocal greetings, user interaction and gratitude
- Users and designers acknowledge each other’s presence with friendly greetings.
- Users interact positively with designers or each other, expressing gratitude or appreciation.

25.
Concepts: use non-verbal expression, convey emotions informally
- Users express feelings using non-verbal forms of communication.
- Users convey emotions through emojis and informal communication.

26.
Concepts: community feedback, community response
- Users providing feedback and suggestions to improve the product.
- Users provide responses related to shared experiences or community sentiments.

27.
Concepts: seek clarification and ensure accuracy
- Designers seek clarification to ensure understanding of specific aspects of the discussion.
- Users request clarification on specific details and seek guidance for understanding.
===
---
Definitions for each code (27 in total):
1.
Concepts: clarify testing status, confirm feature updates  
Relationship: Designers communicate on software testing and updates to ensure clarity and preparedness.  
Criteria: Designers clarify the testing status and confirm updates along with compatibility checks for future versions.  
Phrase: Clarify testing and confirm updates  

2.
Concepts: outline update scope, communicate release information  
Relationship: Designers discuss the scope and timing of software updates to keep users informed.  
Criteria: Designers outline the update scope and communicate release schedules while gathering feedback.  
Phrase: Outline update scope and communicate information  

3.
Concepts: share review progress, share visual progress  
Relationship: Designers provide both status updates and visual representations to communicate progress effectively.  
Criteria: Designers share the review status and visual content to highlight the impact of software updates.  
Phrase: Share review and visual progress  

4.
Concepts: notify users about updates, announce product updates  
Relationship: Designers keep the community informed by notifying and announcing changes and new features.  
Criteria: Designers notify users about updates and announce new versions and features.  
Phrase: Notify users and announce updates  

5.
Concepts: propose design ideas, promise future improvements  
Relationship: Designers suggest enhancements while committing to future developments.  
Criteria: Designers propose design ideas and promise improvements for upcoming versions.  
Phrase: Propose ideas and promise improvements  

6.
Concepts: plan for long-term stability, give rationale to development decision  
Relationship: Designers strategize to ensure stability while explaining their decisions to the community.  
Criteria: Designers plan for long-term stability and provide rationale for development choices.  
Phrase: Plan stability and explain decisions  

7.
Concepts: address usability, highlight software usability  
Relationship: Designers focus on usability improvements based on user feedback to enhance the software experience.  
Criteria: Designers address usability concerns and highlight software usability features.  
Phrase: Address and highlight usability  

8.
Concepts: provide user guidance, instruction and updates  
Relationship: Designers offer comprehensive guidance to help users adapt to software changes.  
Criteria: Designers provide user guidance and updates to facilitate effective software usage.  
Phrase: Provide guidance and updates  

9.
Concepts: feature guidance, share user tips  
Relationship: Designers assist users in navigating features while offering practical tips to enhance experience.  
Criteria: Designers provide feature guidance and share tips for improved user experience.  
Phrase: Provide guidance and share tips  

10.
Concepts: clarify feature details, explain technical development details  
Relationship: Designers explain both feature operations and technical aspects to ensure user understanding.  
Criteria: Designers clarify feature details and explain technical development processes.  
Phrase: Clarify details and explain development  

11.
Concepts: share user experiences, share teaching experiences  
Relationship: Users provide insights from their experiences that enhance understanding of the software's educational impact.  
Criteria: Users share experiences related to software use and teaching contexts.  
Phrase: Share user and teaching experiences  

12.
Concepts: personal connection, share design experiences  
Relationship: Users and designers build community through shared personal and design experiences.  
Criteria: Users and designers share personal anecdotes and design experiences to foster connection.  
Phrase: Share personal and design experiences  

13.
Concepts: explain software limitations, discuss team and solution limitations  
Relationship: Users and designers collaboratively discuss the boundaries of the software and the team’s capabilities.  
Criteria: Users and designers explain software and team limitations in specific contexts.  
Phrase: Explain limitations and discuss challenges  

14.
Concepts: provide context, contextualize software usage  
Relationship: Users ground their inquiries in context to clarify their software-related challenges.  
Criteria: Users provide context and contextualize inquiries about software usage restrictions.  
Phrase: Provide context and contextualize usage  

15.
Concepts: invite inquiries, encourage elaboration  
Relationship: Users and designers engage in dialogue that fosters deeper understanding through inquiries.  
Criteria: Designers invite inquiries and encourage users to elaborate on their questions.  
Phrase: Invite inquiries and encourage elaboration  

16.
Concepts: pose design questions, address user inquiries and respond to questions  
Relationship: Designers engage in a two-way dialogue by posing questions and addressing user responses.  
Criteria: Designers pose design questions and respond to user inquiries for clarification.  
Phrase: Pose questions and respond to inquiries  

17.
Concepts: quick response, ensure responsiveness  
Relationship: Designers maintain an active engagement by responding promptly to user needs.  
Criteria: Designers provide quick responses and ensure responsiveness to user queries.  
Phrase: Ensure quick responses  

18.
Concepts: user input, prioritize user input  
Relationship: Users actively contribute feedback, which designers prioritize in development planning.  
Criteria: Users provide input, and designers prioritize feedback for future updates.  
Phrase: Prioritize user input  

19.
Concepts: seek confirmation, seek user consensus  
Relationship: Designers and users confirm details collaboratively to ensure alignment on ideas.  
Criteria: Designers seek confirmation and gather user consensus on proposed ideas.  
Phrase: Seek confirmation and consensus  

20.
Concepts: co-design with users, engage in collaborative planning  
Relationship: Designers involve users in the development process to enhance the design through collaboration.  
Criteria: Designers plan to co-design with users and engage in collaborative discussions.  
Phrase: Co-design and engage collaboratively  

21.
Concepts: acknowledging community needs, acknowledge and incorporate user feedback  
Relationship: Designers recognize and respond to community needs by incorporating user feedback into updates.  
Criteria: Designers acknowledge community needs and incorporate user feedback for future updates.  
Phrase: Acknowledge needs and incorporate feedback  

22.
Concepts: initiate community engagement, invite community engagement  
Relationship: Designers foster a sense of community by encouraging user participation and interaction.  
Criteria: Designers initiate and invite community engagement to promote interaction.  
Phrase: Initiate and invite engagement  

23.
Concepts: acknowledge community help, express acknowledgment and support  
Relationship: Users cultivate a supportive environment by recognizing and appreciating community contributions.  
Criteria: Users acknowledge community help and express support and gratitude.  
Phrase: Acknowledge help and express support  

24.
Concepts: foster reciprocal greetings, user interaction and gratitude  
Relationship: Users and designers create a friendly atmosphere through mutual acknowledgment and gratitude.  
Criteria: Users and designers foster greetings and interactions marked by gratitude.  
Phrase: Foster greetings and gratitude  

25.
Concepts: use non-verbal expression, convey emotions informally  
Relationship: Users utilize informal communication methods to express feelings and emotions.  
Criteria: Users express feelings through non-verbal communication and informal exchanges.  
Phrase: Convey emotions informally  

26.
Concepts: community feedback, community response  
Relationship: Users provide feedback that reflects community sentiments and experiences.  
Criteria: Users share feedback and responses related to community experiences.  
Phrase: Provide feedback and responses  

27.
Concepts: seek clarification and ensure accuracy  
Relationship: Designers and users engage in a dialogue to clarify points and ensure mutual understanding.  
Criteria: Designers seek clarification and users request guidance to ensure understanding.  
Phrase: Seek clarification and ensure accuracy  
---