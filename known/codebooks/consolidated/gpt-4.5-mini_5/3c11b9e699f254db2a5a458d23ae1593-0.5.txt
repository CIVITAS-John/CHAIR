You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (19 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
19. 
Concepts: {Repeat the input 19}
Relationship: {What is logical relationship between concepts in code 19, or N/A if not applicable}
Criteria: {Who did what, and how for code 19}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: communicate informally, maintain community interaction
- Community members engaged in casual and non-technical interactions, enhancing the sense of belonging.
- Participants initiate or maintain casual interactions to foster a sense of community.

2.
Concepts: question, technical question
- Users ask questions related to software features or updates.
- Users ask a variety of questions about the software's usage and availability.

3.
Concepts: check for software updates, inquire about update status
- Users inquire about recent updates to the software.
- Users inquire about the status of specific software updates.

4.
Concepts: community response, provide community feedback
- Users provide feedback on community experiences related to the software.
- Users provide feedback and suggestions for software improvement.

5.
Concepts: request new features, suggest usability improvements, propose software suggestions
- Users request new features or improvements to the software.
- Users suggest enhancements to software usability features.
- Users suggest new functionalities or improvements for the software.

6.
Concepts: share user experiences, share positive feedback and success stories
- Users share their experiences and the impact of the software on their teaching or learning.
- Users share positive experiences and feedback regarding the software's impact in classrooms.

7.
Concepts: inquire about user needs, gather detailed requirements
- Designers ask users about their specific needs and requests.
- Designer seeks detailed information about user needs or requirements.

8.
Concepts: invite community participation, cultivate community involvement
- Designers invite and encourage community members to participate.
- Designers engage the community to encourage involvement in future updates.

9.
Concepts: seek community input, consulting community
- Designers seek feedback or suggestions from the community for future developments.
- Designers or users seek input or opinions from the community regarding specific topics or features.

10.
Concepts: acknowledge user feedback, seek and invite user feedback
- Designers acknowledge and respond to user feedback and suggestions.
- Designers request and encourage feedback from users for improvements.

11.
Concepts: acknowledgment and implementation, accept and acknowledge user suggestions
- Designers acknowledging user feedback and discussing plans to implement suggested features.
- Designers agree to implement user suggestions in upcoming updates.

12.
Concepts: announce software updates, announce software releases
- Designers announce new features included in the software update.
- Designers announce the release of new software versions and their updates.

13.
Concepts: announce future updates, announce component updates
- Designers communicate upcoming software updates and invite community input.
- Designers inform users about upcoming changes and developments.

14.
Concepts: provide version details, detail software updates
- Designers share detailed information about the current version of the software.
- Designers provide detailed notes on updates and features in the software version.

15.
Concepts: designer confirmation, confirm future features
- Designer confirms the existence or plans for a feature.
- Designers confirm that future features or updates will be implemented.

16.
Concepts: planned updates, outline future plans and updates
- Information shared by designers about upcoming features or updates.
- Designers outline their plans for future developments or updates.

17.
Concepts: discuss feature development, explain feature implementation
- Designer explains ongoing development efforts related to new features.
- Designer discusses the implementation of features in upcoming updates.

18.
Concepts: communicate development updates, communicate updates and release plans
- Designers provide information about current status and future plans for the software.
- Designers communicate plans for software updates and their timelines.

19.
Concepts: propose design refinements, share product improvement plans
- Designers share thoughts on design improvements for the software.
- Designers share plans for improvements or updates to the software.
===
---
Definitions for each code (19 in total):
1.
Concepts: communicate informally, maintain community interaction  
Relationship: Engaging in casual interactions fosters a sense of belonging within the community.  
Criteria: Community members engaged in casual and non-technical interactions to enhance the sense of belonging.  
Phrase: Foster casual interactions.

2.
Concepts: question, technical question  
Relationship: Users ask a variety of questions that pertain specifically to technical aspects of the software.  
Criteria: Users ask questions related to software features or updates.  
Phrase: Ask technical questions.

3.
Concepts: check for software updates, inquire about update status  
Relationship: Users seek information regarding the status of recent or specific software updates.  
Criteria: Users inquire about recent updates to the software and the status of specific updates.  
Phrase: Inquire about software updates.

4.
Concepts: community response, provide community feedback  
Relationship: Users give feedback that reflects their experiences and suggestions for the community and software.  
Criteria: Users provide feedback on community experiences and suggestions for software improvement.  
Phrase: Provide community feedback.

5.
Concepts: request new features, suggest usability improvements, propose software suggestions  
Relationship: Users express their needs and ideas for enhancing the software's functionality and usability.  
Criteria: Users request new features and suggest improvements for the software's usability.  
Phrase: Suggest software improvements.

6.
Concepts: share user experiences, share positive feedback and success stories  
Relationship: Users communicate their positive experiences, contributing to community morale and shared learning.  
Criteria: Users share their experiences and positive feedback regarding the software's impact.  
Phrase: Share user experiences.

7.
Concepts: inquire about user needs, gather detailed requirements  
Relationship: Designers actively seek information to understand the specific needs of users.  
Criteria: Designers ask users about their specific needs and gather detailed information.  
Phrase: Gather user requirements.

8.
Concepts: invite community participation, cultivate community involvement  
Relationship: Designers encourage community engagement to foster a collaborative environment.  
Criteria: Designers invite and encourage community members to participate in future updates.  
Phrase: Encourage community participation.

9.
Concepts: seek community input, consulting community  
Relationship: Designers and users seek feedback from the community to inform future developments.  
Criteria: Designers seek feedback or suggestions from the community regarding specific topics.  
Phrase: Consult the community.

10.
Concepts: acknowledge user feedback, seek and invite user feedback  
Relationship: Designers recognize and respond to user feedback, creating a responsive environment.  
Criteria: Designers acknowledge and request feedback from users for improvements.  
Phrase: Acknowledge user feedback.

11.
Concepts: acknowledgment and implementation, accept and acknowledge user suggestions  
Relationship: Designers recognize user suggestions and discuss their potential implementation.  
Criteria: Designers acknowledge user feedback and discuss plans to implement suggested features.  
Phrase: Implement user suggestions.

12.
Concepts: announce software updates, announce software releases  
Relationship: Designers communicate new features and updates to keep users informed.  
Criteria: Designers announce new features included in the software update and release new versions.  
Phrase: Announce software updates.

13.
Concepts: announce future updates, announce component updates  
Relationship: Designers inform users about upcoming changes, inviting their input.  
Criteria: Designers communicate upcoming software updates and invite community input.  
Phrase: Announce future updates.

14.
Concepts: provide version details, detail software updates  
Relationship: Designers share detailed information to keep users informed about the software's status.  
Criteria: Designers provide detailed information about the current version and updates.  
Phrase: Detail software updates.

15.
Concepts: designer confirmation, confirm future features  
Relationship: Designers validate the existence or plans for future features.  
Criteria: Designer confirms the existence or plans for features in upcoming updates.  
Phrase: Confirm future features.

16.
Concepts: planned updates, outline future plans and updates  
Relationship: Designers share information about their future development plans.  
Criteria: Information shared by designers about upcoming features or updates.  
Phrase: Outline future plans.

17.
Concepts: discuss feature development, explain feature implementation  
Relationship: Designers provide insights into the ongoing development and implementation of features.  
Criteria: Designer explains ongoing development efforts related to new features.  
Phrase: Discuss feature development.

18.
Concepts: communicate development updates, communicate updates and release plans  
Relationship: Designers keep users informed about the current status and future plans for the software.  
Criteria: Designers provide information about current status and future plans for software updates.  
Phrase: Communicate development updates.

19.
Concepts: propose design refinements, share product improvement plans  
Relationship: Designers share their thoughts and plans for enhancing the software's design and functionality.  
Criteria: Designers share thoughts on design improvements and plans for updates.  
Phrase: Propose design refinements.
---