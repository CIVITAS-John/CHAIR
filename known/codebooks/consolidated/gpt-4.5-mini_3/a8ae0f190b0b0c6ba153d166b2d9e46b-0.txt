You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (17 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
17. 
Concepts: {Repeat the input 17}
Relationship: {What is logical relationship between concepts in code 17, or N/A if not applicable}
Criteria: {Who did what, and how for code 17}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: list new components, list and preview upcoming features
- Designers list new features or components added to the software.
- Designers list and preview upcoming features that will be included in the software.

2.
Concepts: explain new features, give an intro to the update content
- Designers explain upcoming features and improvements being made to the application.
- Designers introduce the content of upcoming updates, detailing new features or improvements.

3.
Concepts: communicate user updates, communicate community updates
- Designers communicate updates and timelines regarding software releases to users.
- Designers inform the community about the status of software updates or releases.

4.
Concepts: development prioritization, outline project priorities
- Instances where designers discuss the prioritization of different features or sections to be developed.
- Designers outline a plan for prioritizing different sections of the project to manage development effectively.

5.
Concepts: outline future development plans, share future development plans
- Designers outline and discuss future plans and considerations for software development.
- Designers share plans and information regarding future software development and updates with the community.

6.
Concepts: user guidance, provide feature guidance
- A designer provides detailed guidance on new features and functionalities of the software.
- Designers provide instructions or guidance on how to use specific features of the software.

7.
Concepts: explain software features, introduce feature functions
- Designers provide explanations of how specific features function within the software.
- Designers introduce the functions of new features and provide specific examples.

8.
Concepts: discuss usability, consider interface usability
- Designers discuss usability issues related to the software's interface and propose suggestions for improvement.
- Users discuss usability preferences regarding the application's interface layout.

9.
Concepts: discuss context of use, provide context for needs
- Users describe the specific contexts in which they use the software.
- Users provide context for their needs related to the software's functionality.

10.
Concepts: provide user support and assistance, offer technical support and guidance
- Designers offer assistance to users who may be facing challenges with the software.
- Instances where designers or users provide technical assistance or address technical issues.

11.
Concepts: ask a question, seek help for usage
- Participants pose questions seeking information or assistance regarding the software's functionality or access.
- Users express the need for assistance or clarification on using the software effectively.

12.
Concepts: question, inquire about software updates
- Users and designers ask questions related to software updates and features.
- Users express curiosity about recent updates or improvements made to the software.

13.
Concepts: use non verbal communication, utilize emoji communication
- Use of emojis or other non-verbal forms of communication by users.
- Users engage with the conversation using emojis to express emotions or reactions.

14.
Concepts: recognition of effort, acknowledge and appreciate interactions
- Instances where users acknowledge and appreciate the efforts of the designers.
- A user acknowledges the designer's efforts and expresses gratitude.

15.
Concepts: acknowledge community support, express gratitude and acknowledgment
- Instances where users express support, encouragement, or appreciation for the designers' efforts.
- Instances where users express thanks or appreciation for the work done by the designers or other community members.

16.
Concepts: follow-up, ask follow-up questions
- Users or designers engage in a dialogue to clarify or confirm information.
- Designer asks a clarifying question regarding a user's request.

17.
Concepts: invite user feedback, solicit user feedback
- Designers invite users to provide feedback and suggestions for future updates.
- Designers prompt and request feedback or suggestions from users to improve the software.
===
---
Definitions for each code (17 in total):
1.
Concepts: list new components, list and preview upcoming features  
Relationship: Both concepts involve designers providing information about new and upcoming features of the software.  
Criteria: Designers list new features or components added to the software and preview upcoming features that will be included.  
Phrase: Listing and previewing features  

2.
Concepts: explain new features, give an intro to the update content  
Relationship: Both concepts focus on designers providing explanations and introductions to new features and updates.  
Criteria: Designers explain upcoming features and improvements while introducing the content of upcoming updates.  
Phrase: Explaining and introducing updates  

3.
Concepts: communicate user updates, communicate community updates  
Relationship: Both concepts involve designers sharing updates with users and the community regarding software releases.  
Criteria: Designers communicate updates and timelines about software releases to users and inform the community about the status of updates.  
Phrase: Communicating updates  

4.
Concepts: development prioritization, outline project priorities  
Relationship: Both concepts relate to the discussion and planning of prioritizing features or sections for development.  
Criteria: Designers discuss and outline a plan for prioritizing different sections of the project to manage development effectively.  
Phrase: Prioritizing development  

5.
Concepts: outline future development plans, share future development plans  
Relationship: Both concepts involve designers discussing and sharing plans for future software development.  
Criteria: Designers outline and share future plans and considerations for software development and updates with the community.  
Phrase: Outlining and sharing development plans  

6.
Concepts: user guidance, provide feature guidance  
Relationship: Both concepts focus on designers providing guidance and instructions on using software features.  
Criteria: Designers provide detailed guidance and instructions on new features and functionalities of the software.  
Phrase: Providing user guidance  

7.
Concepts: explain software features, introduce feature functions  
Relationship: Both concepts involve designers explaining and introducing how specific features function within the software.  
Criteria: Designers provide explanations and introduce the functions of new features with specific examples.  
Phrase: Explaining and introducing features  

8.
Concepts: discuss usability, consider interface usability  
Relationship: Both concepts involve discussions about usability issues and preferences related to the software's interface.  
Criteria: Designers and users discuss usability issues and propose suggestions for improvement regarding the interface layout.  
Phrase: Discussing usability  

9.
Concepts: discuss context of use, provide context for needs  
Relationship: Both concepts involve users describing their specific contexts and needs related to the software's functionality.  
Criteria: Users describe the contexts in which they use the software and provide context for their needs.  
Phrase: Providing context for use  

10.
Concepts: provide user support and assistance, offer technical support and guidance  
Relationship: Both concepts involve designers offering assistance and technical support to users facing challenges with the software.  
Criteria: Designers offer assistance and provide technical guidance to users addressing technical issues.  
Phrase: Offering user support  

11.
Concepts: ask a question, seek help for usage  
Relationship: Both concepts involve participants posing questions to seek information or assistance regarding software functionality.  
Criteria: Participants ask questions and express the need for assistance or clarification on using the software effectively.  
Phrase: Seeking help  

12.
Concepts: question, inquire about software updates  
Relationship: Both concepts involve users and designers asking questions related to software updates and features.  
Criteria: Users and designers ask questions and express curiosity about recent updates or improvements made to the software.  
Phrase: Inquiring about updates  

13.
Concepts: use non verbal communication, utilize emoji communication  
Relationship: Both concepts involve users engaging in non-verbal forms of communication, particularly through emojis.  
Criteria: Users use emojis or other non-verbal forms of communication to express emotions or reactions in conversations.  
Phrase: Utilizing non-verbal communication  

14.
Concepts: recognition of effort, acknowledge and appreciate interactions  
Relationship: Both concepts involve users acknowledging and appreciating the efforts of designers.  
Criteria: Users acknowledge and express gratitude for the efforts of the designers in their interactions.  
Phrase: Recognizing efforts  

15.
Concepts: acknowledge community support, express gratitude and acknowledgment  
Relationship: Both concepts involve users expressing support and appreciation for the efforts of designers and community members.  
Criteria: Users express support, encouragement, and gratitude for the work done by designers or other community members.  
Phrase: Expressing gratitude  

16.
Concepts: follow-up, ask follow-up questions  
Relationship: Both concepts involve users or designers engaging in dialogue to clarify or confirm information.  
Criteria: Users or designers ask follow-up questions to clarify or confirm information regarding requests or discussions.  
Phrase: Asking follow-up questions  

17.
Concepts: invite user feedback, solicit user feedback  
Relationship: Both concepts involve designers inviting and requesting feedback from users to improve the software.  
Criteria: Designers invite and prompt users to provide feedback and suggestions for future updates.  
Phrase: Soliciting user feedback  
---