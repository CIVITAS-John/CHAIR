You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (43 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
43. 
Concepts: {Repeat the input 43}
Relationship: {What is logical relationship between concepts in code 43, or N/A if not applicable}
Criteria: {Who did what, and how for code 43}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: discuss technical considerations, discuss and inquire about compatibility
- Participants discuss technical considerations and requirements for the software.
- Participants discuss and inquire about the software's compatibility with different systems.

2.
Concepts: discuss practical application in classroom, discussing software usability and context of use
- Users discuss the practical application of the software in a classroom setting.
- Users discuss the practical usability of the software and describe the specific contexts in which they use it.

3.
Concepts: explain focus areas, acknowledge software limitations, discuss limitations and constraints
- Designers explain the primary focus areas and limitations of the software.
- Designers inform users about and acknowledge the limitations of the software or platform.
- Designers mention and explain the limitations or constraints of the development team, software, or proposed solutions.

4.
Concepts: direct users to resources, provide access information
- A designer directing users to resources or download locations.
- Designers or users provide and explain how to access or download resources.

5.
Concepts: simplify and refine design, refine and adapt design
- Designers seek to simplify and refine the design for efficiency.
- Designers discuss refining the design, adapting it to support features, and making adjustments based on feedback.

6.
Concepts: auto layout optimization, emphasize feature optimization
- Designers discuss the optimization of auto-layout features.
- Designers discuss optimizing features for better performance and emphasize its importance.

7.
Concepts: explain feature details, describe component functionality
- Designers explain the need, importance, and functionality of certain features.
- Designers address and describe the functionality of features or components.

8.
Concepts: clarify version details, provide version details
- Designers clarify the type and details of software versions.
- Designers or users provide detailed information about software versions.

9.
Concepts: version update notes, detail technical updates
- A designer provides detailed notes on a version update.
- Designers provide technical clarifications and detail updates and new features.

10.
Concepts: describe update scope, announce and preview updates
- Designers describe the magnitude and scope of upcoming updates.
- Designers announce plans and preview upcoming update content.

11.
Concepts: update schedule, share update timelines
- Designers provide a schedule for upcoming updates.
- Designers provide and confirm timelines for upcoming updates.

12.
Concepts: share release process information, managing and communicating release schedules
- Designers discuss the release process and share information about app releases.
- Designers provide and explain the schedule and process for upcoming software releases and development timelines.

13.
Concepts: development plan, share development plans
- Designers share development plans and software access information.
- Designers share development plans and future focus areas with the community.

14.
Concepts: discuss future plans, gather opinions for future planning
- Participants discuss planning for future updates and potential developments.
- Designers promise to gather community opinions and announce plans for future consultation.

15.
Concepts: outline future feature development, confirm future feature implementation
- Designers explain upcoming features and outline plans for future development.
- Designers promise and confirm that a feature will be included in future updates.

16.
Concepts: project management, outline development priorities, discuss development prioritization
- Developers discuss project management and prioritization of tasks.
- Designers outline development priorities and list potential tasks.
- Designers discuss the prioritization and roadmap for feature development.

17.
Concepts: simulation enhancement, explain simulation accuracy
- Designers discuss enhancements to simulation features.
- Designers discuss the accuracy and details of simulation features.

18.
Concepts: elaborate on responses, encourage elaboration and discussion
- Designers elaborate on previous statements or instructions to clarify tasks.
- Designers encourage users to provide more details and ask follow-up questions to clarify points and explain intentions.

19.
Concepts: integrate user feedback, planning and eliciting feedback
- Designers acknowledge user feedback and discuss plans to implement suggestions.
- Designers plan for and elicit feedback from the community about features or components.

20.
Concepts: answering questions, engage in design-related q&a
- Users and designers provide answers to questions or issues raised by others.
- Designers ask questions related to design, and users provide answers for support.

21.
Concepts: encouraging community interaction, encouraging feedback and interaction suggestions, solicit suggestions and invite collaboration
- Designers encourage open communication, feedback, and participation from users, inviting them to share suggestions and engage in discussions.
- Participants encourage feedback and suggest ways to interact or provide feedback.
- Designers solicit suggestions, invite feature requests, and encourage collaboration from users.

22.
Concepts: share design-related knowledge, shared experiences and support
- Designers and users share knowledge or information relevant to the software's design or functionality.
- Users and designers sharing experiences and supporting each other in using and improving the software.

23.
Concepts: request help and assistance, request resources and guidance
- Users express the need for help or assistance and request information.
- Users request resources, guidance, instructional materials, and user manuals for using the software.

24.
Concepts: inquiring about pc version, inquire and share download information
- Users inquire about the availability and details of the PC version of the software.
- Users inquire about and provide information on where and how to download the software and clarify platform and version types.

25.
Concepts: comparison to similar apps, provide reviews and compare software
- A user compares the software to similar applications, highlighting its practicality.
- Users provide reviews and compare the software to other applications, highlighting differences.

26.
Concepts: commit to providing a solution, propose solutions and design suggestions
- Designers commit to providing a solution or assistance.
- Designers offer solutions to technical issues and propose design improvements.

27.
Concepts: elaborate on suggestions, suggest educational enhancements
- Users provide further suggestions or refinements and elaborate on ideas.
- Users suggest enhancements to educational content or features.

28.
Concepts: address user concerns, commit to user-driven improvements
- Designers respond to user concerns by assuring future updates or optimizations.
- Designers commit to making improvements and align actions with user feedback.

29.
Concepts: express usability needs, inquire about user needs and problems
- Users indicate potential needs and express specific usability requirements for the software.
- Developers inquire about users' needs, preferences, and problems with the software.

30.
Concepts: apologizing for inconvenience, apologize for potential inconvenience
- Designers show consideration and apologize for any inconvenience or interruptions caused to users.
- The developer apologizes for and acknowledges the potential inconvenience of their communication.

31.
Concepts: manage user expectations, set timeline expectations
- Designers manage user expectations by explaining timelines or limitations.
- Designers set user expectations for the release timeline of new versions.

32.
Concepts: promise that update is ongoing, reassure users about progress
- A designer promises that an update is ongoing.
- Designers reassure users about progress and future feature availability.

33.
Concepts: mention school initiatives, provide context about school resources
- Users mention their school's initiatives or efforts to build an information-based environment.
- Users provide context about their school or educational environment and available resources.

34.
Concepts: share professional background, share teaching experience to establish credibility
- Users share their professional background to establish credibility and context.
- Users establish credibility by sharing their teaching experience and background.

35.
Concepts: greet and build community, greet and reciprocate greetings
- Users and developers greet each other, contributing to community building.
- Designers or users greet and respond to greetings with similar greetings.

36.
Concepts: identifying community roles, confirm community member identity
- Participants identify their roles or expertise, contributing to the community structure.
- Participants confirm their identity or role as community members.

37.
Concepts: concurring on design ideas, agree with suggestions
- Users agree with or support design ideas.
- Users agree with or support previous suggestions or statements.

38.
Concepts: confirm agreement and understanding, confirmation/agreement of collaboration
- Users and developers express agreement and confirm understanding of each other's points.
- Designers confirm or agree to collaborate with users or other designers.

39.
Concepts: contextualized responses, provide context for needs
- Users provide context to their responses, often explaining why.
- Users provide context or background about their environment or situation for their questions or statements.

40.
Concepts: explaining the plans, provide and confirm reasons
- A participant explains the plans or rationale behind a feature or action.
- A participant provides and confirms reasons for planned actions or decisions.

41.
Concepts: provide explanations and reasons, explain rationale for suggestions
- Users or designers provide explanations and additional reasons for questions.
- Users or designers explain the reasons and provide rationale for suggestions or decisions.

42.
Concepts: emoji engagement, use emojis to express reactions
- Users use emojis to engage with the community or ask questions.
- Participants use emojis to express emotions or reactions to updates or announcements.

43.
Concepts: platform-specific communication, provide platform-specific information
- Communicating information specific to a platform within the group.
- Users specify the platform they are referring to and provide platform-specific information.
===
---
Definitions for each code (43 in total):
1.
Concepts: discuss technical considerations, discuss and inquire about compatibility
Relationship: Both involve discussions about the technical aspects and compatibility of the software.
Criteria: Participants discuss technical considerations and inquire about the software's compatibility with different systems.
Phrase: Discuss technical and compatibility aspects

2.
Concepts: discuss practical application in classroom, discussing software usability and context of use
Relationship: Both involve discussions about the practical use and usability of the software in specific contexts.
Criteria: Users discuss the practical application of the software in a classroom setting and its usability in specific contexts.
Phrase: Discuss practical application and usability

3.
Concepts: explain focus areas, acknowledge software limitations, discuss limitations and constraints
Relationship: All involve explaining and acknowledging the focus areas and limitations of the software.
Criteria: Designers explain the primary focus areas, acknowledge software limitations, and discuss constraints.
Phrase: Explain focus areas and limitations

4.
Concepts: direct users to resources, provide access information
Relationship: Both involve providing information on how to access resources.
Criteria: Designers direct users to resources and provide information on how to access or download them.
Phrase: Provide resource access information

5.
Concepts: simplify and refine design, refine and adapt design
Relationship: Both involve efforts to refine and adapt the design.
Criteria: Designers seek to simplify and refine the design for efficiency and adapt it based on feedback.
Phrase: Refine and adapt design

6.
Concepts: auto layout optimization, emphasize feature optimization
Relationship: Both involve discussions about optimizing features for better performance.
Criteria: Designers discuss the optimization of auto-layout features and emphasize the importance of feature optimization.
Phrase: Discuss feature optimization

7.
Concepts: explain feature details, describe component functionality
Relationship: Both involve explaining the details and functionality of features or components.
Criteria: Designers explain the need and functionality of certain features and describe component functionality.
Phrase: Explain feature details and functionality

8.
Concepts: clarify version details, provide version details
Relationship: Both involve providing detailed information about software versions.
Criteria: Designers clarify and provide detailed information about software versions.
Phrase: Provide version details

9.
Concepts: version update notes, detail technical updates
Relationship: Both involve providing detailed notes and technical updates on software versions.
Criteria: Designers provide detailed notes on version updates and technical clarifications.
Phrase: Provide update notes and technical details

10.
Concepts: describe update scope, announce and preview updates
Relationship: Both involve describing and announcing the scope and content of updates.
Criteria: Designers describe the scope of upcoming updates and announce and preview update content.
Phrase: Announce and describe updates

11.
Concepts: update schedule, share update timelines
Relationship: Both involve providing schedules and timelines for updates.
Criteria: Designers provide a schedule and confirm timelines for upcoming updates.
Phrase: Share update schedules and timelines

12.
Concepts: share release process information, managing and communicating release schedules
Relationship: Both involve discussing and sharing information about the release process and schedules.
Criteria: Designers discuss the release process and share information about release schedules and development timelines.
Phrase: Share release process and schedules

13.
Concepts: development plan, share development plans
Relationship: Both involve sharing development plans with the community.
Criteria: Designers share development plans and future focus areas with the community.
Phrase: Share development plans

14.
Concepts: discuss future plans, gather opinions for future planning
Relationship: Both involve discussing future plans and gathering community opinions.
Criteria: Participants discuss planning for future updates and gather community opinions for future planning.
Phrase: Discuss and gather opinions on future plans

15.
Concepts: outline future feature development, confirm future feature implementation
Relationship: Both involve outlining and confirming future feature development.
Criteria: Designers outline plans for future feature development and confirm future feature implementation.
Phrase: Outline and confirm future feature development

16.
Concepts: project management, outline development priorities, discuss development prioritization
Relationship: All involve discussing project management and development priorities.
Criteria: Developers discuss project management, outline development priorities, and discuss feature development prioritization.
Phrase: Discuss project management and priorities

17.
Concepts: simulation enhancement, explain simulation accuracy
Relationship: Both involve discussing enhancements and accuracy of simulation features.
Criteria: Designers discuss enhancements to simulation features and explain their accuracy.
Phrase: Discuss simulation enhancements and accuracy

18.
Concepts: elaborate on responses, encourage elaboration and discussion
Relationship: Both involve elaborating on responses and encouraging further discussion.
Criteria: Designers elaborate on previous statements and encourage users to provide more details and engage in discussion.
Phrase: Encourage elaboration and discussion

19.
Concepts: integrate user feedback, planning and eliciting feedback
Relationship: Both involve integrating and planning for user feedback.
Criteria: Designers acknowledge user feedback and plan to implement suggestions, eliciting further feedback from the community.
Phrase: Integrate and plan for user feedback

20.
Concepts: answering questions, engage in design-related q&a
Relationship: Both involve answering questions and engaging in design-related Q&A.
Criteria: Users and designers provide answers to questions and engage in design-related Q&A.
Phrase: Engage in Q&A

21.
Concepts: encouraging community interaction, encouraging feedback and interaction suggestions, solicit suggestions and invite collaboration
Relationship: All involve encouraging community interaction, feedback, and collaboration.
Criteria: Designers and participants encourage open communication, feedback, and collaboration, inviting suggestions and engagement.
Phrase: Encourage interaction and collaboration

22.
Concepts: share design-related knowledge, shared experiences and support
Relationship: Both involve sharing knowledge and experiences related to the software's design and functionality.
Criteria: Designers and users share design-related knowledge and experiences, supporting each other in using and improving the software.
Phrase: Share knowledge and support

23.
Concepts: request help and assistance, request resources and guidance
Relationship: Both involve requesting help, resources, and guidance.
Criteria: Users request help, resources, guidance, and instructional materials for using the software.
Phrase: Request help and resources

24.
Concepts: inquiring about pc version, inquire and share download information
Relationship: Both involve inquiring about and sharing information on software versions and downloads.
Criteria: Users inquire about the PC version and provide information on where and how to download the software.
Phrase: Inquire and share download information

25.
Concepts: comparison to similar apps, provide reviews and compare software
Relationship: Both involve comparing the software to similar applications and providing reviews.
Criteria: Users compare the software to similar applications and provide reviews, highlighting differences.
Phrase: Compare and review software

26.
Concepts: commit to providing a solution, propose solutions and design suggestions
Relationship: Both involve committing to and proposing solutions and design suggestions.
Criteria: Designers commit to providing solutions and propose design improvements.
Phrase: Propose and commit to solutions

27.
Concepts: elaborate on suggestions, suggest educational enhancements
Relationship: Both involve elaborating on suggestions and proposing educational enhancements.
Criteria: Users elaborate on suggestions and propose enhancements to educational content or features.
Phrase: Suggest and elaborate on enhancements

28.
Concepts: address user concerns, commit to user-driven improvements
Relationship: Both involve addressing user concerns and committing to improvements based on feedback.
Criteria: Designers address user concerns and commit to making improvements aligned with user feedback.
Phrase: Address concerns and commit to improvements

29.
Concepts: express usability needs, inquire about user needs and problems
Relationship: Both involve expressing and inquiring about usability needs and problems.
Criteria: Users express usability needs, and developers inquire about user needs, preferences, and problems with the software.
Phrase: Express and inquire about usability needs

30.
Concepts: apologizing for inconvenience, apologize for potential inconvenience
Relationship: Both involve apologizing for inconvenience caused to users.
Criteria: Designers apologize for any inconvenience or interruptions caused to users.
Phrase: Apologize for inconvenience

31.
Concepts: manage user expectations, set timeline expectations
Relationship: Both involve managing and setting user expectations regarding timelines.
Criteria: Designers manage user expectations by explaining timelines and limitations.
Phrase: Manage and set expectations

32.
Concepts: promise that update is ongoing, reassure users about progress
Relationship: Both involve promising ongoing updates and reassuring users about progress.
Criteria: Designers promise that updates are ongoing and reassure users about progress and future feature availability.
Phrase: Reassure users about updates

33.
Concepts: mention school initiatives, provide context about school resources
Relationship: Both involve mentioning school initiatives and providing context about educational resources.
Criteria: Users mention their school's initiatives and provide context about their educational environment and resources.
Phrase: Mention school initiatives and resources

34.
Concepts: share professional background, share teaching experience to establish credibility
Relationship: Both involve sharing professional background and teaching experience to establish credibility.
Criteria: Users share their professional background and teaching experience to establish credibility and context.
Phrase: Share background and experience

35.
Concepts: greet and build community, greet and reciprocate greetings
Relationship: Both involve greeting and reciprocating greetings to build community.
Criteria: Users and developers greet each other and reciprocate greetings, contributing to community building.
Phrase: Greet and build community

36.
Concepts: identifying community roles, confirm community member identity
Relationship: Both involve identifying and confirming community roles and identities.
Criteria: Participants identify their roles or expertise and confirm their identity as community members.
Phrase: Identify and confirm community roles

37.
Concepts: concurring on design ideas, agree with suggestions
Relationship: Both involve agreeing with design ideas and suggestions.
Criteria: Users agree with and support design ideas and previous suggestions.
Phrase: Agree with design ideas

38.
Concepts: confirm agreement and understanding, confirmation/agreement of collaboration
Relationship: Both involve confirming agreement and understanding, and agreeing to collaborate.
Criteria: Users and developers express agreement, confirm understanding, and agree to collaborate.
Phrase: Confirm agreement and collaboration

39.
Concepts: contextualized responses, provide context for needs
Relationship: Both involve providing context to responses and needs.
Criteria: Users provide context to their responses and explain their environment or situation for their questions or statements.
Phrase: Provide context for responses

40.
Concepts: explaining the plans, provide and confirm reasons
Relationship: Both involve explaining plans and providing reasons for actions.
Criteria: Participants explain plans and provide reasons for planned actions or decisions.
Phrase: Explain plans and reasons

41.
Concepts: provide explanations and reasons, explain rationale for suggestions
Relationship: Both involve providing explanations and rationale for suggestions or decisions.
Criteria: Users or designers provide explanations and rationale for suggestions or decisions.
Phrase: Provide explanations and rationale

42.
Concepts: emoji engagement, use emojis to express reactions
Relationship: Both involve using emojis to engage and express reactions.
Criteria: Users use emojis to engage with the community and express emotions or reactions to updates or announcements.
Phrase: Use emojis to engage

43.
Concepts: platform-specific communication, provide platform-specific information
Relationship: Both involve providing platform-specific information and communication.
Criteria: Users specify the platform they are referring to and provide platform-specific information.
Phrase: Provide platform-specific information
---