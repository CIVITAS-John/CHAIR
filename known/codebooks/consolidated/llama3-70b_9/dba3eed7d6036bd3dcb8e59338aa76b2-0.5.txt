You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: set development goals, outlining learning goals
- A designer sets goals or priorities for the development of the Physics Lab project.
- A designer or user outlines specific learning objectives or goals for the Physics Lab online community.

2.
Concepts: sharing research goals, research goal explanation
- Sharing research goals or objectives
- Explaining research goals or objectives.

3.
Concepts: stating focus, explaining focus areas
- Stating the focus or priorities of a project or initiative
- Explaining the focus or priorities of a project, feature, or online community.

4.
Concepts: software focus explanation, explaining focus on specific physics domains
- Outlining the software's focus and priorities.
- Explaining the focus or priority of the software on specific physics domains.

5.
Concepts: personal interest, revealing designer's passion
- The designer expresses personal interest in a specific subject, in this case, chemistry.
- A designer reveals their personal passion or interest.

6.
Concepts: expressing interest in software, express interest in using the software
- Expressing interest in or enthusiasm for software, features, or design aspects.
- A user shows interest in the development or updates of the Physics Lab online community.

7.
Concepts: expressing interest, expression of interest
- A user demonstrates or expresses interest in a feature, experiment, or topic.
- A person expresses interest or enthusiasm for a particular subject or topic.

8.
Concepts: student reaction, reporting student engagement
- User describes students' reactions to the software.
- A user reports student engagement or reaction to the simulation.

9.
Concepts: sharing classroom experience, highlighting software appeal
- A user shares their experience using the software in a classroom.
- User shares an experience or perspective that highlights the software's appeal to a broad range of educators.

10.
Concepts: complimenting 3d effect, appreciating 3d effect
- Complimenting or praising the 3D effect
- A user appreciates the 3D effect of the Physics Lab software.

11.
Concepts: highlighting user experience, highlighting convenience
- User highlights the user experience or usability of the software.
- A user highlights the convenience or benefits of a specific feature or functionality.

12.
Concepts: highlighting regional differences, highlighting regional differences in hardware
- Highlighting regional differences or specific needs.
- A statement that highlights regional differences in hardware or infrastructure.

13.
Concepts: consider user diversity, considering diverse use cases
- Considering diverse user environments, needs, or scenarios in design decisions.
- Considering a wide range of use cases and hardware environments.

14.
Concepts: compare software, comparative feedback
- Users compare the software to other similar tools or platforms.
- A user compares Physics Lab to other similar applications or software, highlighting its unique features or benefits.

15.
Concepts: software exploration, exploring software adaptability
- Exploring software functionality or capabilities
- Explorations or discussions of the software's adaptability to different contexts or devices.

16.
Concepts: highlighting ideal use, highlighting ideal components, promoting ideal components
- A designer highlights the ideal use or application of a particular feature or component.
- Participants introduce or highlight a specific component, feature, or functionality.
- Designers promote or highlight the ideal components or features of a tool or resource.

17.
Concepts: emphasizing application capabilities, introducing versatile components
- Designer emphasizes the capabilities or applications of the software.
- Designer introduces or highlights versatile or multifunctional components in the software.

18.
Concepts: describing innovations, describing applications
- A designer describes innovative features or tools.
- A designer describes the potential applications or uses of a feature or tool.

19.
Concepts: highlighting key features, highlighting capabilities
- Mentioning a specific feature or functionality that is important or useful.
- A statement that highlights or emphasizes the capabilities or features of a system or component.

20.
Concepts: explaining feature importance, emphasizing feature significance
- Explaining the importance or value of a feature or update.
- The significance or importance of a feature is explained or emphasized.

21.
Concepts: highlighting practicality, highlighting practical applications
- Emphasizing the practicality or usability of the software.
- Highlighting practical applications or uses of the community or software.

22.
Concepts: demonstrating functionality, demonstrating innovative features
- A feature or functionality is demonstrated or showcased.
- Showcasing innovative or unique features or functionalities.

23.
Concepts: describe functionality, describing application benefits, detail educational benefits
- A participant describes or explains the functionality, features, or capabilities of a software or tool.
- A person describes how an application can be used or its benefits.
- A participant explains or highlights the educational benefits or value of a feature or functionality.

24.
Concepts: suggesting new experiments, propose new simulations
- A user suggests new experiment types or ideas.
- A proposal or suggestion for new features or simulations, especially optical experiments.

25.
Concepts: provide feature details, explaining simulation details
- Providing detailed information or explanations about features
- Details about a simulation or feature are explained.

26.
Concepts: planning advanced features, detailing plans for advanced features
- Planning or proposing advanced simulation features or functionalities.
- Providing detailed plans or explanations for advanced features

27.
Concepts: detailing experimental features, adding experimental details
- Detailing experimental features or functionalities
- The designer adds or provides additional details about an experimental feature or function.

28.
Concepts: seeking solutions, proposing design solutions
- A designer or user asks for help or suggests a solution to a problem.
- A designer proposes a potential solution or approach to a problem or issue.

29.
Concepts: flexible design thinking, offering alternative solutions, proposing alternative solutions
- The designer suggests or considers alternative design solutions or approaches.
- Designers consider and provide alternative solutions or workarounds to user problems.
- A designer proposes a dual solution or compromise.

30.
Concepts: self-answer, self-solved
- A user answers their own question or provides a solution to their own problem.
- A person indicates that they have found a solution or resolved an issue on their own.

31.
Concepts: workaround sharing, workaround acknowledgement
- Sharing a workaround or solution to a problem.
- Acknowledging or explaining a workaround or temporary solution to a problem.

32.
Concepts: enabling problem solving, problem-solving demonstration
- Enabling or facilitating problem-solving or learning.
- Demonstrating problem-solving capabilities
===
Here are the definitions for each code:

---
1.
Concepts: set development goals, outlining learning goals
Relationship: The designer sets goals and outlines specific learning objectives, which are logically connected as part of the development process.
Criteria: A designer sets development goals and outlines specific learning objectives for the Physics Lab online community.
Phrase: Setting development goals and outlining learning objectives.

2.
Concepts: sharing research goals, research goal explanation
Relationship: Sharing research goals involves explaining them, which is a necessary step in understanding the goals.
Criteria: A user shares and explains research goals or objectives.
Phrase: Sharing and explaining research goals.

3.
Concepts: stating focus, explaining focus areas
Relationship: Stating the focus involves explaining the priorities, which are logically connected as part of the explanation.
Criteria: A designer states the focus or priorities of a project or initiative and explains the focus areas.
Phrase: Stating and explaining focus areas.

4.
Concepts: software focus explanation, explaining focus on specific physics domains
Relationship: The software's focus explanation involves explaining the focus on specific physics domains, which are part of the explanation.
Criteria: A designer outlines the software's focus and priorities, explaining the focus on specific physics domains.
Phrase: Explaining software focus on specific physics domains.

5.
Concepts: personal interest, revealing designer's passion
Relationship: The designer's personal interest is revealed through their passion, which is a logical connection.
Criteria: A designer expresses personal interest and reveals their passion for a specific subject.
Phrase: Revealing personal interest and passion.

6.
Concepts: expressing interest in software, express interest in using the software
Relationship: Expressing interest in the software involves showing enthusiasm for using it, which is a logical connection.
Criteria: A user expresses interest in and enthusiasm for the development or updates of the Physics Lab online community.
Phrase: Expressing interest in using the software.

7.
Concepts: expressing interest, expression of interest
Relationship: Expressing interest involves demonstrating or expressing enthusiasm, which is a logical connection.
Criteria: A user demonstrates or expresses interest in a feature, experiment, or topic.
Phrase: Expressing interest in a feature or topic.

8.
Concepts: student reaction, reporting student engagement
Relationship: Reporting student engagement involves describing their reactions, which is a logical connection.
Criteria: A user describes students' reactions to the software and reports student engagement.
Phrase: Reporting student reactions and engagement.

9.
Concepts: sharing classroom experience, highlighting software appeal
Relationship: Sharing classroom experience involves highlighting the software's appeal, which is a logical connection.
Criteria: A user shares their experience using the software in a classroom, highlighting its appeal to educators.
Phrase: Sharing classroom experience and highlighting software appeal.

10.
Concepts: complimenting 3d effect, appreciating 3d effect
Relationship: Complimenting the 3D effect involves appreciating it, which is a logical connection.
Criteria: A user compliments and appreciates the 3D effect of the Physics Lab software.
Phrase: Appreciating the 3D effect.

11.
Concepts: highlighting user experience, highlighting convenience
Relationship: Highlighting user experience involves highlighting convenience, which is a logical connection.
Criteria: A user highlights the user experience and convenience of a specific feature or functionality.
Phrase: Highlighting user experience and convenience.

12.
Concepts: highlighting regional differences, highlighting regional differences in hardware
Relationship: Highlighting regional differences involves highlighting differences in hardware, which is a logical connection.
Criteria: A user highlights regional differences and differences in hardware or infrastructure.
Phrase: Highlighting regional differences in hardware.

13.
Concepts: consider user diversity, considering diverse use cases
Relationship: Considering user diversity involves considering diverse use cases, which is a logical connection.
Criteria: A designer considers diverse user environments, needs, or scenarios and considers a wide range of use cases and hardware environments.
Phrase: Considering user diversity and diverse use cases.

14.
Concepts: compare software, comparative feedback
Relationship: Comparing software involves providing comparative feedback, which is a logical connection.
Criteria: A user compares the software to other similar tools or platforms, highlighting its unique features or benefits.
Phrase: Comparing software and providing comparative feedback.

15.
Concepts: software exploration, exploring software adaptability
Relationship: Exploring software functionality involves exploring its adaptability, which is a logical connection.
Criteria: A user explores software functionality or capabilities and explores its adaptability to different contexts or devices.
Phrase: Exploring software functionality and adaptability.

16.
Concepts: highlighting ideal use, highlighting ideal components, promoting ideal components
Relationship: Highlighting ideal use involves highlighting ideal components, which is a logical connection.
Criteria: A designer highlights the ideal use or application of a particular feature or component, introducing or promoting ideal components.
Phrase: Highlighting ideal use and ideal components.

17.
Concepts: emphasizing application capabilities, introducing versatile components
Relationship: Emphasizing application capabilities involves introducing versatile components, which is a logical connection.
Criteria: A designer emphasizes the capabilities or applications of the software, introducing versatile or multifunctional components.
Phrase: Emphasizing application capabilities and introducing versatile components.

18.
Concepts: describing innovations, describing applications
Relationship: Describing innovations involves describing applications, which is a logical connection.
Criteria: A designer describes innovative features or tools and their potential applications or uses.
Phrase: Describing innovations and applications.

19.
Concepts: highlighting key features, highlighting capabilities
Relationship: Highlighting key features involves highlighting capabilities, which is a logical connection.
Criteria: A statement highlights or emphasizes the capabilities or features of a system or component.
Phrase: Highlighting key features and capabilities.

20.
Concepts: explaining feature importance, emphasizing feature significance
Relationship: Explaining feature importance involves emphasizing its significance, which is a logical connection.
Criteria: A designer explains the importance or value of a feature or update, emphasizing its significance.
Phrase: Explaining feature importance and significance.

21.
Concepts: highlighting practicality, highlighting practical applications
Relationship: Highlighting practicality involves highlighting practical applications, which is a logical connection.
Criteria: A designer highlights the practicality or usability of the software, highlighting practical applications or uses.
Phrase: Highlighting practicality and practical applications.

22.
Concepts: demonstrating functionality, demonstrating innovative features
Relationship: Demonstrating functionality involves demonstrating innovative features, which is a logical connection.
Criteria: A feature or functionality is demonstrated or showcased, highlighting innovative or unique features or functionalities.
Phrase: Demonstrating functionality and innovative features.

23.
Concepts: describe functionality, describing application benefits, detail educational benefits
Relationship: Describing functionality involves describing application benefits and educational benefits, which are logical connections.
Criteria: A participant describes the functionality, features, or capabilities of a software or tool, explaining its benefits and educational value.
Phrase: Describing functionality and benefits.

24.
Concepts: suggesting new experiments, propose new simulations
Relationship: Suggesting new experiments involves proposing new simulations, which is a logical connection.
Criteria: A user suggests new experiment types or ideas, proposing new features or simulations.
Phrase: Suggesting new experiments and proposing new simulations.

25.
Concepts: provide feature details, explaining simulation details
Relationship: Providing feature details involves explaining simulation details, which is a logical connection.
Criteria: A designer provides detailed information or explanations about features, explaining simulation details.
Phrase: Providing feature details and explaining simulation details.

26.
Concepts: planning advanced features, detailing plans for advanced features
Relationship: Planning advanced features involves detailing plans, which is a logical connection.
Criteria: A designer plans or proposes advanced simulation features or functionalities, providing detailed plans or explanations.
Phrase: Planning advanced features and detailing plans.

27.
Concepts: detailing experimental features, adding experimental details
Relationship: Detailing experimental features involves adding experimental details, which is a logical connection.
Criteria: A designer details experimental features or functionalities, adding additional details about an experimental feature or function.
Phrase: Detailing experimental features and adding details.

28.
Concepts: seeking solutions, proposing design solutions
Relationship: Seeking solutions involves proposing design solutions, which is a logical connection.
Criteria: A designer asks for help or suggests a solution to a problem, proposing a potential solution or approach.
Phrase: Seeking solutions and proposing design solutions.

29.
Concepts: flexible design thinking, offering alternative solutions, proposing alternative solutions
Relationship: Flexible design thinking involves offering alternative solutions, which is a logical connection.
Criteria: A designer suggests or considers alternative design solutions or approaches, offering alternative solutions or compromises.
Phrase: Offering alternative solutions and proposing compromises.

30.
Concepts: self-answer, self-solved
Relationship: Self-answering involves self-solving, which is a logical connection.
Criteria: A user answers their own question or provides a solution to their own problem, indicating self-solution.
Phrase: Self-answering and self-solving.

31.
Concepts: workaround sharing, workaround acknowledgement
Relationship: Sharing a workaround involves acknowledging it, which is a logical connection.
Criteria: A user shares a workaround or solution to a problem, acknowledging or explaining a temporary solution.
Phrase: Sharing workarounds and acknowledging temporary solutions.

32.
Concepts: enabling problem solving, problem-solving demonstration
Relationship: Enabling problem-solving involves demonstrating problem-solving capabilities, which is a logical connection.
Criteria: A designer enables or facilitates problem-solving or learning, demonstrating problem-solving capabilities.
Phrase: Enabling problem-solving and demonstrating capabilities.