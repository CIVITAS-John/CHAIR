You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: consider hardware limitations, discuss software limitations
- A user suggests considering hardware limitations when designing the software.
- Designers discuss limitations regarding software capabilities and technical constraints.

2.
Concepts: establish feedback loop, integrate user feedback
- Processes where user feedback is solicited and incorporated into design decisions, creating a feedback loop.
- Instances where user feedback is acknowledged and incorporated into the design process, indicating responsiveness.

3.
Concepts: confirm understanding, seeking clarification to ensure accuracy
- Users and designers confirm statements or agreements made in the discussion, ensuring mutual understanding.
- Designers and users engage in dialogue to request clarification and ensure the accuracy of information exchanged.

4.
Concepts: collaborative planning, engage in collaborative problem solving
- Designers and users collaboratively discussing and planning the development of the software.
- Moments where designers and users work together to address issues and improve the product collaboratively.

5.
Concepts: co-design with users, involving users in design
- Involving users in the design process, allowing them to contribute ideas and make decisions collaboratively.
- Designers actively involve users in the design process through feedback or testing and invite suggestions for improvements.

6.
Concepts: consult the community, invite feature suggestions
- Designers consult the community and indicate their intention to involve them in discussions about features.
- Designers invite suggestions and encourage participation from the community to foster collaboration.

7.
Concepts: acknowledging designer's efforts, expressing gratitude for community support
- A user expresses appreciation and acknowledges the designer's efforts and quality of work.
- A user expresses appreciation for the designer's efforts and gratitude for community support.

8.
Concepts: emoji, expressive
- A user shares an emoji, contributing to the informal tone of the conversation.
- A user or designer expresses emotions or reactions through emojis or informal language.

9.
Concepts: suggest new features, providing user feedback
- Users suggest and request new features to enhance their experience with the software.
- Users provide feedback and suggestions regarding the software's features and improvements.

10.
Concepts: visual design appreciation, compliment software features
- A user appreciates the visual design aspects of the software.
- Users express admiration for software features and comment on usability.

11.
Concepts: provide context, discuss context of use
- Users share contextual and technical information to enhance understanding of the application.
- Users describe the specific contexts in which they use the software and its usability.

12.
Concepts: request assistance, seek support and information
- Users request assistance and documentation to facilitate their understanding of the software.
- Users seek support and ask questions to clarify their understanding of the platform.
===
---
Definitions for each code (12 in total):
1.
Concepts: consider hardware limitations, discuss software limitations  
Relationship: Both concepts involve evaluating constraints that affect software design, focusing on different aspects (hardware vs. software).  
Criteria: Users suggest considering hardware limitations while designers discuss software capabilities, highlighting the importance of both in the design process.  
Phrase: Evaluate design constraints.

2.
Concepts: establish feedback loop, integrate user feedback  
Relationship: Both concepts emphasize the cyclical nature of incorporating user input into design decisions, ensuring continuous improvement.  
Criteria: Processes are established to solicit and integrate user feedback, creating a responsive design environment.  
Phrase: Create a feedback loop.

3.
Concepts: confirm understanding, seeking clarification to ensure accuracy  
Relationship: Both concepts focus on communication between users and designers to ensure that information is accurately understood and confirmed.  
Criteria: Users and designers engage in dialogue to confirm statements and seek clarification, ensuring mutual understanding.  
Phrase: Ensure mutual understanding.

4.
Concepts: collaborative planning, engage in collaborative problem solving  
Relationship: Both concepts highlight the cooperative efforts of users and designers in planning and addressing challenges together.  
Criteria: Designers and users collaboratively discuss and plan the software development while addressing issues together.  
Phrase: Engage in collaborative planning.

5.
Concepts: co-design with users, involving users in design  
Relationship: Both concepts emphasize the active participation of users in the design process, allowing for shared decision-making.  
Criteria: Designers involve users in the design process through feedback and testing, fostering collaboration.  
Phrase: Involve users in design.

6.
Concepts: consult the community, invite feature suggestions  
Relationship: Both concepts involve engaging the community for input on features, fostering a collaborative environment.  
Criteria: Designers consult the community and invite suggestions, encouraging participation in feature discussions.  
Phrase: Engage the community.

7.
Concepts: acknowledging designer's efforts, expressing gratitude for community support  
Relationship: Both concepts focus on expressions of appreciation towards designers and the community, reinforcing positive interactions.  
Criteria: Users express gratitude for the designer's efforts and acknowledge community support, fostering a positive atmosphere.  
Phrase: Express appreciation.

8.
Concepts: emoji, expressive  
Relationship: Both concepts relate to the use of emojis as a means of expressing emotions and contributing to the conversation's tone.  
Criteria: Users and designers use emojis to convey emotions and reactions, enhancing the informal tone of discussions.  
Phrase: Use emojis expressively.

9.
Concepts: suggest new features, providing user feedback  
Relationship: Both concepts involve users actively contributing to the improvement of the software through suggestions and feedback.  
Criteria: Users suggest new features and provide feedback to enhance their experience with the software.  
Phrase: Provide feature suggestions.

10.
Concepts: visual design appreciation, compliment software features  
Relationship: Both concepts involve users expressing positive sentiments towards the software's design and functionality.  
Criteria: Users appreciate the visual design and compliment the software features, indicating satisfaction with usability.  
Phrase: Appreciate design features.

11.
Concepts: provide context, discuss context of use  
Relationship: Both concepts involve sharing contextual information to improve understanding of the software's application and usability.  
Criteria: Users share contextual information and describe specific usage scenarios to enhance understanding of the software.  
Phrase: Share contextual information.

12.
Concepts: request assistance, seek support and information  
Relationship: Both concepts emphasize users' needs for help and information to better understand the software.  
Criteria: Users request assistance and seek support to clarify their understanding of the platform.  
Phrase: Seek support and information.
---