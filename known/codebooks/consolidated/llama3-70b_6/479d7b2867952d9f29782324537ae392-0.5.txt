You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: outlining ideal functionality, explains ideal component behavior
- A user outlines or describes ideal functionality or features.
- A designer explains how a component or feature should ideally function.

2.
Concepts: educational alignment, aligning with educational standards
- Aligning with educational needs or requirements.
- Ensuring the software aligns with educational standards or norms.

3.
Concepts: teaching, teacher-designer interaction
- Designers provide instructional or teaching content related to the online community.
- A designer interacts with a teacher in the online community.

4.
Concepts: addressing educational needs, demonstrating familiarity with educational settings
- Designer addresses specific educational needs or requirements.
- Designers demonstrate familiarity with educational settings or contexts.

5.
Concepts: emphasizing educational relevance, demonstrating educational relevance
- The conversation emphasizes the importance of educational relevance.
- The speaker explains how a feature or concept is relevant to educational applications.

6.
Concepts: suggesting educational enhancements, suggesting features for educational convenience
- A user suggests improvements or new features for the platform, often related to educational enhancements.
- User suggests a feature for convenience in educational settings.

7.
Concepts: educational content suggestion, requesting educational features
- Suggesting educational content or features for the software.
- Requesting specific features or demonstrations for educational purposes.

8.
Concepts: highlight educational needs, highlighting teacher specific needs
- A user highlights a specific educational need or requirement.
- User expresses specific needs or requirements for the platform

9.
Concepts: explain school policy, explaining common practice
- A user explains a school policy or institutional rule.
- A user explains a common practice or norm in their school or environment.

10.
Concepts: sharing technical context, sharing institutional context
- A user shares technical information or context related to their school or system.
- A user shares information about their institutional or organizational context, such as school policies or initiatives.

11.
Concepts: explaining institutional needs, explaining institutional goals
- Explaining or describing institutional needs or goals
- User explains the goals or initiatives of their institution.

12.
Concepts: school context, school needs
- A user provides context about their school's focus or priorities.
- A user mentions needs or requirements related to their school or educational context.

13.
Concepts: explaining school infrastructure, describing school computer system
- A user explains the school's infrastructure or technical limitations.
- A user describes their school's computer system or infrastructure.

14.
Concepts: internet access limitations, explaining technical constraint
- User explains the lack of internet access in their school.
- A user explains a technical constraint, such as the school disabling the network.

15.
Concepts: sharing institutional constraints, sharing environmental constraints
- User shares institutional or organizational constraints or limitations.
- The user shares information about their environmental or institutional constraints.

16.
Concepts: mentioning software compatibility, suggesting checking compatibility of the system
- Mentioning compatibility with a specific operating system or software.
- Suggests checking compatibility of the system (e.g., XP compatibility).

17.
Concepts: wondering about compatibility, speculating about compatibility
- Users wonder about or inquire about compatibility.
- Speculating about the compatibility of the software with different devices or systems.

18.
Concepts: theoretical system compatibility, theoretically, it should be compatible
- Designer discusses system compatibility based on theoretical principles
- Designer mentions theoretical compatibility or feasibility of a feature.

19.
Concepts: outlining system requirements, mentions theoretical compatibility requirements for the software
- Designer mentions specific system requirements for the software.
- The designer mentions theoretical compatibility requirements for the software.

20.
Concepts: considers xp compatibility, considering future compatibility
- A designer considers or discusses compatibility with XP systems and technical possibilities.
- Designer considers compatibility with different systems or versions.

21.
Concepts: clarify compatibility, compatibility information, addressing compatibility issues
- Users or designers clarify system compatibility or technical requirements.
- A designer answers a question about compatibility or system requirements.
- Designers address and discuss compatibility issues or limitations.

22.
Concepts: clarifying release details, clarifying version details
- Clarifies release details or versions (e.g., PC version).
- Clarifying version details or differences between versions.

23.
Concepts: clarifying platform, clarifying platform differences
- Asking for clarification on the platform or version being used.
- The designer clarifies differences between platform versions.

24.
Concepts: inquiring about platform capabilities, inquiring about platform access
- User inquires about the capabilities or features of a platform.
- A user seeks information about downloading or accessing the platform, including different versions or formats.

25.
Concepts: seeking method confirmation, seeking clarification on availability
- A user seeks confirmation or clarification about using multiple approaches or features in the platform.
- A user seeks clarification on the availability of a resource or feature.

26.
Concepts: version inquiry, inquiring about software usage
- User inquires about the status of a specific software version
- The speaker asks about the usage or functionality of a specific version of the software.

27.
Concepts: seeking release confirmation, inquire about software development progress
- User seeks confirmation or updates on platform releases
- Users inquire about updates, new features, or releases.

28.
Concepts: software exploration, exploring alternative interfaces
- User explores or inquires about software functionality
- User explores alternative interfaces for the software.

29.
Concepts: exploring compatibility options, considering diverse hardware environments
- User explores compatibility options for the software.
- User considers diverse hardware environments for the software.

30.
Concepts: demonstrate interest, express software interest
- A user demonstrates interest in the software's development or progress.
- A user expresses interest in using the software.

31.
Concepts: express curiosity, seeking information
- A user expresses curiosity about a feature or component.
- A user or designer seeks information about a feature or component.

32.
Concepts: user needs catering, user needs consideration, user need adaptation
- Catering to user needs or preferences.
- Considering different user needs and use cases.
- Adapting to user needs or requirements
===
Here are the definitions for each code:

---
1.
Concepts: outlining ideal functionality, explains ideal component behavior
Relationship: The user and designer collaborate to describe the ideal functionality and behavior of a component.
Criteria: A user outlines ideal functionality, and a designer explains how a component should ideally function.
Phrase: Outlining ideal functionality and component behavior.

2.
Concepts: educational alignment, aligning with educational standards
Relationship: The design aligns with educational needs and standards.
Criteria: Aligning with educational needs or requirements, and ensuring the software aligns with educational standards.
Phrase: Aligning with educational standards and needs.

3.
Concepts: teaching, teacher-designer interaction
Relationship: Designers provide instructional content and interact with teachers in the online community.
Criteria: Designers provide teaching content, and designers interact with teachers.
Phrase: Providing teaching content and interacting with teachers.

4.
Concepts: addressing educational needs, demonstrating familiarity with educational settings
Relationship: Designers address specific educational needs and demonstrate familiarity with educational settings.
Criteria: Designers address specific educational needs, and designers demonstrate familiarity with educational settings.
Phrase: Addressing educational needs and demonstrating familiarity.

5.
Concepts: emphasizing educational relevance, demonstrating educational relevance
Relationship: The conversation emphasizes educational relevance, and speakers explain how features are relevant to education.
Criteria: Emphasizing educational relevance, and explaining educational relevance.
Phrase: Emphasizing and demonstrating educational relevance.

6.
Concepts: suggesting educational enhancements, suggesting features for educational convenience
Relationship: Users suggest improvements and features for educational convenience.
Criteria: Users suggest educational enhancements, and users suggest features for educational convenience.
Phrase: Suggesting educational enhancements and features.

7.
Concepts: educational content suggestion, requesting educational features
Relationship: Users suggest educational content and request specific features for education.
Criteria: Suggesting educational content, and requesting educational features.
Phrase: Suggesting educational content and requesting features.

8.
Concepts: highlight educational needs, highlighting teacher specific needs
Relationship: Users highlight specific educational needs and express specific needs for the platform.
Criteria: Highlighting educational needs, and expressing specific needs.
Phrase: Highlighting educational needs and expressing specific needs.

9.
Concepts: explain school policy, explaining common practice
Relationship: Users explain school policies and common practices in their schools.
Criteria: Explaining school policies, and explaining common practices.
Phrase: Explaining school policies and common practices.

10.
Concepts: sharing technical context, sharing institutional context
Relationship: Users share technical and institutional context about their schools or systems.
Criteria: Sharing technical context, and sharing institutional context.
Phrase: Sharing technical and institutional context.

11.
Concepts: explaining institutional needs, explaining institutional goals
Relationship: Users explain institutional needs and goals.
Criteria: Explaining institutional needs, and explaining institutional goals.
Phrase: Explaining institutional needs and goals.

12.
Concepts: school context, school needs
Relationship: Users provide context about their school's focus and mention needs related to their school.
Criteria: Providing school context, and mentioning school needs.
Phrase: Providing school context and mentioning needs.

13.
Concepts: explaining school infrastructure, describing school computer system
Relationship: Users explain their school's infrastructure and describe their computer systems.
Criteria: Explaining school infrastructure, and describing school computer systems.
Phrase: Explaining school infrastructure and describing computer systems.

14.
Concepts: internet access limitations, explaining technical constraint
Relationship: Users explain limitations in internet access and technical constraints.
Criteria: Explaining internet access limitations, and explaining technical constraints.
Phrase: Explaining internet access limitations and technical constraints.

15.
Concepts: sharing institutional constraints, sharing environmental constraints
Relationship: Users share institutional and environmental constraints.
Criteria: Sharing institutional constraints, and sharing environmental constraints.
Phrase: Sharing institutional and environmental constraints.

16.
Concepts: mentioning software compatibility, suggesting checking compatibility of the system
Relationship: Users mention software compatibility and suggest checking compatibility.
Criteria: Mentioning software compatibility, and suggesting checking compatibility.
Phrase: Mentioning software compatibility and suggesting checking.

17.
Concepts: wondering about compatibility, speculating about compatibility
Relationship: Users wonder and speculate about software compatibility.
Criteria: Wondering about compatibility, and speculating about compatibility.
Phrase: Wondering and speculating about compatibility.

18.
Concepts: theoretical system compatibility, theoretically, it should be compatible
Relationship: Designers discuss theoretical system compatibility based on principles.
Criteria: Discussing theoretical system compatibility, and mentioning theoretical compatibility.
Phrase: Discussing theoretical system compatibility.

19.
Concepts: outlining system requirements, mentions theoretical compatibility requirements for the software
Relationship: Designers outline system requirements and mention theoretical compatibility requirements.
Criteria: Outlining system requirements, and mentioning theoretical compatibility requirements.
Phrase: Outlining system requirements and mentioning theoretical compatibility.

20.
Concepts: considers xp compatibility, considering future compatibility
Relationship: Designers consider XP compatibility and future compatibility.
Criteria: Considering XP compatibility, and considering future compatibility.
Phrase: Considering XP and future compatibility.

21.
Concepts: clarify compatibility, compatibility information, addressing compatibility issues
Relationship: Users and designers clarify compatibility, provide information, and address issues.
Criteria: Clarifying compatibility, providing compatibility information, and addressing issues.
Phrase: Clarifying and addressing compatibility issues.

22.
Concepts: clarifying release details, clarifying version details
Relationship: Users and designers clarify release and version details.
Criteria: Clarifying release details, and clarifying version details.
Phrase: Clarifying release and version details.

23.
Concepts: clarifying platform, clarifying platform differences
Relationship: Users and designers clarify platform differences and versions.
Criteria: Clarifying platform, and clarifying platform differences.
Phrase: Clarifying platform and differences.

24.
Concepts: inquiring about platform capabilities, inquiring about platform access
Relationship: Users inquire about platform capabilities and access.
Criteria: Inquiring about platform capabilities, and inquiring about platform access.
Phrase: Inquiring about platform capabilities and access.

25.
Concepts: seeking method confirmation, seeking clarification on availability
Relationship: Users seek confirmation and clarification on methods and availability.
Criteria: Seeking method confirmation, and seeking clarification on availability.
Phrase: Seeking method confirmation and clarification.

26.
Concepts: version inquiry, inquiring about software usage
Relationship: Users inquire about software versions and usage.
Criteria: Inquiring about software versions, and inquiring about software usage.
Phrase: Inquiring about software versions and usage.

27.
Concepts: seeking release confirmation, inquire about software development progress
Relationship: Users seek confirmation and inquire about software development progress.
Criteria: Seeking release confirmation, and inquiring about software development progress.
Phrase: Seeking release confirmation and inquiring about progress.

28.
Concepts: software exploration, exploring alternative interfaces
Relationship: Users explore software functionality and alternative interfaces.
Criteria: Exploring software functionality, and exploring alternative interfaces.
Phrase: Exploring software functionality and interfaces.

29.
Concepts: exploring compatibility options, considering diverse hardware environments
Relationship: Users explore compatibility options and consider diverse hardware environments.
Criteria: Exploring compatibility options, and considering diverse hardware environments.
Phrase: Exploring compatibility options and considering environments.

30.
Concepts: demonstrate interest, express software interest
Relationship: Users demonstrate interest in software development and express interest in using the software.
Criteria: Demonstrating interest, and expressing interest in using the software.
Phrase: Demonstrating and expressing interest.

31.
Concepts: express curiosity, seeking information
Relationship: Users express curiosity and seek information about features and components.
Criteria: Expressing curiosity, and seeking information.
Phrase: Expressing curiosity and seeking information.

32.
Concepts: user needs catering, user needs consideration, user need adaptation
Relationship: Designers cater to, consider, and adapt to user needs and preferences.
Criteria: Catering to user needs, considering user needs, and adapting to user needs.
Phrase: Catering to, considering, and adapting to user needs.