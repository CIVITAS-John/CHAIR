You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: informing about testing phase, informing about testing phase and limitations, providing context for testing phase
- Designer informs about the testing phase, provides clarification, and clarifies the testing status.
- The designer informs users about the testing phase of a feature or version and provides advice on manual adjustments due to algorithm limitations.
- The designer provides context or background information about the testing phase of the software.

2.
Concepts: explains software focus, outlining the software's focus
- Designers outline or explain the focus or priorities of the software to users.
- Designers outline the focus or scope of the software.

3.
Concepts: explains development plans, explains development process
- Designers explain plans or provide information about the development process and download information.
- Designers provide insight into the development process or explain how the software is developed.

4.
Concepts: explaining update and release complexities, explaining development challenges
- A designer explains or communicates the complexity of updates or releases.
- Designers explain challenges or difficulties in the development process, expressing development difficulty and explaining complexity.

5.
Concepts: describes components, outline feature or assessment
- A designer discusses or references components or parts of the system and describes a specific component's features.
- A designer outlines or describes a specific feature or assessment tool, including its functionality and details.

6.
Concepts: providing special tips, providing usage guidance
- Designer provides special tips, shares practical tips, and provides special tips or shortcuts for using the software.
- Designer provides tips or guidance on using the software, and provides practical advice or tips for using the online community or software.

7.
Concepts: shares resources, shares information for design
- Designers share resources or information with users.
- A user shares information or context related to design or functionality.

8.
Concepts: offering content support, providing technical support
- Designers or developers offer to provide content, resources, or support to users.
- Designer offers ongoing support by providing technical support, and offers further support or targeted assistance to users.

9.
Concepts: guiding user behavior through prompts and guidance, guiding users on platform features
- Designers provide initial guidance, user prompts, and instructions to guide user behavior.
- User provides guidance or direction on how to use the app or a specific feature, and designer guides users on how to access specific features or functionalities of the platform.

10.
Concepts: informs about resources, provides feature information
- Designers inform users about available resources or features.
- Designers provide information about software features or device capabilities to users.

11.
Concepts: explains use cases, clarifying usage scenarios
- Designers explain or highlight potential use cases or applications of the software to users.
- The designer clarifies usage scenarios or guidelines for a feature or tool.

12.
Concepts: previews software functionality, explains software functionality, reiterates software functionality explanations
- Designers preview or highlight software functionality to users.
- Designers explain specific software functionalities, such as touch screens or drag and drop, to users.
- Designers provide explanations or reiterations of software functionality or features to users.

13.
Concepts: discussing hardware constraints, considering implementation constraints
- Designers mention memory or resource constraints, mentioning limitations or constraints of the hardware that affect the software's performance.
- Designers consider implementation limitations or constraints, considering practical constraints or limitations when designing or implementing a feature.

14.
Concepts: considers compatibility, addresses compatibility issues, discusses compatibility issues
- Designer considers compatibility and clarifies compatibility issues.
- Designer suggests compatibility checks and addresses compatibility issues.
- Designer discusses compatibility issues and acknowledges the need to investigate.

15.
Concepts: considering touch interface implications, addressing usability concerns
- The designer considers the implications of a touch interface on the software.
- Designer addresses usability concerns related to touch screens, and highlights the importance of touch screen functionality or compatibility.

16.
Concepts: discussing keyboard necessity, discussing input methods
- A designer discusses the need for soft keyboards in specific input fields.
- Designer discusses input methods or user interface elements, and addresses input methods for different devices.

17.
Concepts: reflective pause, demonstrates reflective thinking
- Designer pauses to reflect on user input or feedback.
- Designer demonstrates reflective thinking by showing contemplation.

18.
Concepts: considers broader implications, considers multiple perspectives
- Designer considers broader usability concerns and implications.
- Designer considers multiple perspectives and comprehensive approaches.

19.
Concepts: reports usability issues, confirming diagnoses and usability issues
- User reports accessibility concerns and usability issues.
- Users confirm diagnoses and usability issues.

20.
Concepts: analyzes the problem, tries to understand user needs
- Designer analyzes the problem and explores technical solutions.
- Designer tries to understand user needs through problem-solving and probing difficulties.

21.
Concepts: enables problem-solving, addresses functionality issues
- Designer enables problem-solving by describing functionality.
- Designers address or illustrate technical workarounds for software functionality issues to users.

22.
Concepts: simplifying complexity, seeking efficiency
- Designer simplifies or reduces complexity in software or design.
- Designer seeks to simplify or improve software efficiency, suggests simplification, and considers design simplification.

23.
Concepts: aiming for usability, promoting ease of use
- Designer aims to design software to be user-friendly and self-explanatory.
- Designer promotes ease of use and emphasizes the importance of ease of understanding.

24.
Concepts: balancing user needs, balancing conflicting goals
- Designer balances user needs, complexity, and usability to create a functional product.
- Designer balances realism and usability, and automation and manual control.

25.
Concepts: adapting to user context, responding to diverse user needs
- Designer adapts to user context and constraints, and tailors responses based on user role or context.
- Designer responds to diverse user needs, and considers user environments and different user needs.

26.
Concepts: improving user experience, prioritizing user experience
- Designer improves user experience, specifies details for enhanced user experience, and considers user experience and usability.
- Designer prioritizes user experience and ease of use, and prioritizes user-friendly design in educational contexts.

27.
Concepts: discusses long-term stability, highlights long-term benefits
- A designer mentions long-term stability as a goal and discusses the long-term stability of a feature or the software.
- A designer highlights the long-term benefits of a feature or functionality and demonstrates long-term thinking or consideration for future development.

28.
Concepts: announcing new ideal components, labels ideal components
- The designer announces the addition of new ideal components or features.
- A designer labels a component as ideal or suitable, provides information about ideal components, and highlights ideal components or features.

29.
Concepts: contributes to design refinement, refines design.
let me know if you need any further assistance!
- A user promotes iterative refinement or incremental improvement and contributes to design refinement.
- Designer refines design and highlights iterative design.

30.
Concepts: seeks precision, component accuracy improvement
- A designer seeks precision or clarification on details and strives for perfection or improvement in the design.
- The designer aims to improve component accuracy.

31.
Concepts: explains optimization efforts, explains component improvements
- Designers emphasize optimization by explaining efforts to improve the simulation.
- Designers explain technical improvements or adjustments made to components.

32.
Concepts: managing project scope and resources, setting priorities and allocating tasks
- Designers manage project scope and allocate resources.
- Designers prioritize development tasks and explain priorities.
- Designers set priorities and allocate tasks.
===
Here are the definitions for each code:

---
1.
Concepts: informing about testing phase, informing about testing phase and limitations, providing context for testing phase
Relationship: The concepts are related to providing information about the testing phase, including its limitations and context.
Criteria: Designers inform users about the testing phase, its limitations, and provide context.
Phrase: Informing about testing phase.

2.
Concepts: explains software focus, outlining the software's focus
Relationship: The concepts are related to explaining the focus of the software.
Criteria: Designers explain the software's focus and priorities to users.
Phrase: Explaining software focus.

3.
Concepts: explains development plans, explains development process
Relationship: The concepts are related to explaining the development process and plans.
Criteria: Designers explain development plans and provide insight into the development process.
Phrase: Explaining development plans.

4.
Concepts: explaining update and release complexities, explaining development challenges
Relationship: The concepts are related to explaining the complexities and challenges of development.
Criteria: Designers explain the complexities of updates and releases, and development challenges.
Phrase: Explaining development complexities.

5.
Concepts: describes components, outline feature or assessment
Relationship: The concepts are related to describing components and features.
Criteria: Designers describe components and outline features or assessment tools.
Phrase: Describing components.

6.
Concepts: providing special tips, providing usage guidance
Relationship: The concepts are related to providing guidance on using the software.
Criteria: Designers provide special tips and guidance on using the software.
Phrase: Providing usage guidance.

7.
Concepts: shares resources, shares information for design
Relationship: The concepts are related to sharing resources and information.
Criteria: Designers share resources and information with users.
Phrase: Sharing resources.

8.
Concepts: offering content support, providing technical support
Relationship: The concepts are related to offering support to users.
Criteria: Designers offer content and technical support to users.
Phrase: Offering support.

9.
Concepts: guiding user behavior through prompts and guidance, guiding users on platform features
Relationship: The concepts are related to guiding users on the platform.
Criteria: Designers guide users through prompts and guidance on platform features.
Phrase: Guiding user behavior.

10.
Concepts: informs about resources, provides feature information
Relationship: The concepts are related to informing users about resources and features.
Criteria: Designers inform users about available resources and features.
Phrase: Informing about resources.

11.
Concepts: explains use cases, clarifying usage scenarios
Relationship: The concepts are related to explaining use cases and scenarios.
Criteria: Designers explain use cases and clarify usage scenarios.
Phrase: Explaining use cases.

12.
Concepts: previews software functionality, explains software functionality, reiterates software functionality explanations
Relationship: The concepts are related to explaining software functionality.
Criteria: Designers preview, explain, and reiterate software functionality explanations.
Phrase: Explaining software functionality.

13.
Concepts: discussing hardware constraints, considering implementation constraints
Relationship: The concepts are related to discussing constraints on implementation.
Criteria: Designers discuss hardware constraints and consider implementation constraints.
Phrase: Discussing hardware constraints.

14.
Concepts: considers compatibility, addresses compatibility issues, discusses compatibility issues
Relationship: The concepts are related to considering and addressing compatibility issues.
Criteria: Designers consider and address compatibility issues.
Phrase: Addressing compatibility issues.

15.
Concepts: considering touch interface implications, addressing usability concerns
Relationship: The concepts are related to considering the implications of touch interfaces on usability.
Criteria: Designers consider touch interface implications and address usability concerns.
Phrase: Addressing usability concerns.

16.
Concepts: discussing keyboard necessity, discussing input methods
Relationship: The concepts are related to discussing input methods and keyboard necessity.
Criteria: Designers discuss input methods and keyboard necessity.
Phrase: Discussing input methods.

17.
Concepts: reflective pause, demonstrates reflective thinking
Relationship: The concepts are related to demonstrating reflective thinking.
Criteria: Designers pause to reflect and demonstrate reflective thinking.
Phrase: Demonstrating reflective thinking.

18.
Concepts: considers broader implications, considers multiple perspectives
Relationship: The concepts are related to considering broader implications and multiple perspectives.
Criteria: Designers consider broader implications and multiple perspectives.
Phrase: Considering broader implications.

19.
Concepts: reports usability issues, confirming diagnoses and usability issues
Relationship: The concepts are related to reporting and confirming usability issues.
Criteria: Users report and confirm usability issues.
Phrase: Reporting usability issues.

20.
Concepts: analyzes the problem, tries to understand user needs
Relationship: The concepts are related to analyzing problems and understanding user needs.
Criteria: Designers analyze problems and try to understand user needs.
Phrase: Analyzing problems.

21.
Concepts: enables problem-solving, addresses functionality issues
Relationship: The concepts are related to enabling problem-solving and addressing functionality issues.
Criteria: Designers enable problem-solving and address functionality issues.
Phrase: Enabling problem-solving.

22.
Concepts: simplifying complexity, seeking efficiency
Relationship: The concepts are related to simplifying complexity and seeking efficiency.
Criteria: Designers simplify complexity and seek efficiency.
Phrase: Simplifying complexity.

23.
Concepts: aiming for usability, promoting ease of use
Relationship: The concepts are related to aiming for usability and promoting ease of use.
Criteria: Designers aim for usability and promote ease of use.
Phrase: Aiming for usability.

24.
Concepts: balancing user needs, balancing conflicting goals
Relationship: The concepts are related to balancing user needs and conflicting goals.
Criteria: Designers balance user needs and conflicting goals.
Phrase: Balancing user needs.

25.
Concepts: adapting to user context, responding to diverse user needs
Relationship: The concepts are related to adapting to user context and responding to diverse user needs.
Criteria: Designers adapt to user context and respond to diverse user needs.
Phrase: Adapting to user context.

26.
Concepts: improving user experience, prioritizing user experience
Relationship: The concepts are related to improving and prioritizing user experience.
Criteria: Designers improve and prioritize user experience.
Phrase: Improving user experience.

27.
Concepts: discusses long-term stability, highlights long-term benefits
Relationship: The concepts are related to discussing long-term stability and benefits.
Criteria: Designers discuss long-term stability and highlight long-term benefits.
Phrase: Discussing long-term stability.

28.
Concepts: announcing new ideal components, labels ideal components
Relationship: The concepts are related to announcing and labeling ideal components.
Criteria: Designers announce and label ideal components.
Phrase: Announcing ideal components.

29.
Concepts: contributes to design refinement, refines design
Relationship: The concepts are related to contributing to and refining design.
Criteria: Designers contribute to design refinement and refine design.
Phrase: Refining design.

30.
Concepts: seeks precision, component accuracy improvement
Relationship: The concepts are related to seeking precision and improving component accuracy.
Criteria: Designers seek precision and improve component accuracy.
Phrase: Seeking precision.

31.
Concepts: explains optimization efforts, explains component improvements
Relationship: The concepts are related to explaining optimization efforts and component improvements.
Criteria: Designers explain optimization efforts and component improvements.
Phrase: Explaining optimization efforts.

32.
Concepts: managing project scope and resources, setting priorities and allocating tasks
Relationship: The concepts are related to managing project scope and resources, and setting priorities.
Criteria: Designers manage project scope and resources, and set priorities and allocate tasks.
Phrase: Managing project scope.