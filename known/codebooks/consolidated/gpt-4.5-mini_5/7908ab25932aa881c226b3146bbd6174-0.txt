You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (23 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
23. 
Concepts: {Repeat the input 23}
Relationship: {What is logical relationship between concepts in code 23, or N/A if not applicable}
Criteria: {Who did what, and how for code 23}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: provide short responses, agree and provide positive responses
- Users give short affirmative responses to indicate their interest or agreement and indicate agreement in discussions.
- Users agree with the focus areas discussed, confirm statements made by others, and support previous comments in discussions.

2.
Concepts: compliment on the app's evolution, compare favorably and express satisfaction
- Users compliment the progress and development of the application, indicating satisfaction.
- Users compare the software favorably to similar applications and express their approval or satisfaction with its features.

3.
Concepts: express support, appreciate community support
- Users express acknowledgment and encouragement to foster a positive community atmosphere.
- Users express gratitude for the support and contributions of others in the community.

4.
Concepts: inquire about platform compatibility, specify platform and seek clarification
- Users inquire about the app's compatibility across different platforms.
- Users specify the platform version they are inquiring about and communicate their need for clarification regarding software versions.

5.
Concepts: express needs and seek assistance, seek information and ask questions
- Users communicate their needs for assistance and support regarding the software and resources.
- Users communicate their inquiries to gain knowledge about the software, including usage and technical questions.

6.
Concepts: discuss context of use, suggest practical use cases
- Instances where users describe the specific contexts in which they use the software.
- Users communicate practical use cases and alternative suggestions for the software.

7.
Concepts: promote resource sharing, utilize and share resources
- Designers encourage community members to share resources and knowledge collaboratively.
- Users acknowledge the availability and usefulness of resources shared in the community and request or share resources that assist in using the software.

8.
Concepts: sharing identity per request, share background information
- A user shares their teaching background in response to a request for information.
- Users share their professional or personal backgrounds and provide comprehensive information about their teaching experiences.

9.
Concepts: confirm professional roles, establish professional credibility
- Users affirm their identity as teachers and confirm their professional roles within the community.
- Users share their teaching and professional experiences to demonstrate expertise.

10.
Concepts: share stories and anecdotes, compliment and share experiences
- Users share stories about past experiences with the software and personal experiences related to its use in education.
- Users compliment the software and describe positive student responses during class while sharing their experiences and feedback about its impact on teaching or learning.

11.
Concepts: share teaching experiences, provide contextual experiences
- Users identify as teachers and discuss their experiences and needs in response to inquiries.
- Users share contextual information about their experiences and challenges in education.

12.
Concepts: acknowledging community expertise, consult on educational standards
- Designer and users discuss educational standards and practices.
- Designer consults with educators about current educational standards in circuit diagrams.

13.
Concepts: facilitate user interaction, express comprehension and facilitate communication
- The collaborative interaction between users and designers contributes to the design process.
- Designers and users express comprehension of each other's challenges and engage in direct communication about features and feedback.

14.
Concepts: provide user guidance, instruction and updates
- A designer provides detailed guidance and instructions on new features and functionalities of the software.
- Designers providing updates and instructions to help users understand and use the software effectively.

15.
Concepts: offer technical support, request technical assistance
- Designers provide help and technical support to users in need.
- Users report technical issues and request assistance from designers or other community members.

16.
Concepts: suggest simplification and refinement, commit to improvement and propose refinements
- Designers communicate the importance of usability and suggest simplifications and refinements in the design process.
- Designers commit to addressing user needs and communicate necessary adjustments in the software's design.

17.
Concepts: clarify status and version details, highlight progress and assure users
- The designer communicates the testing status and clarifies version details to ensure users have accurate information.
- The designer highlights progress made in updates, communicates ongoing updates, and explains current focus of development efforts.

18.
Concepts: provide platform-specific updates, inform about software updates
- The designer communicates platform-specific updates and information to users.
- The designer communicates updates regarding component specifications and software versions to users.

19.
Concepts: share development updates, share update progress
- The designer shares updates and development information with the community.
- A designer informs the community about the expected timing of an update and the status of software updates.

20.
Concepts: confirm planned updates, provide development updates
- Information shared by designers about upcoming features or updates.
- Information shared by designers about the current status, updates, and future plans for the Physics Lab software.

21.
Concepts: give an intro to the update content, preview updates and explain features
- Designers provide an introduction to the content of upcoming updates, outlining new features.
- A designer previews upcoming features and explains the updates that will be included in future releases.

22.
Concepts: discuss challenges and explain delays, discuss limitations and constraints
- The designer communicates issues faced during development and explains reasons for delays.
- The designer communicates limitations of solutions and discusses technical constraints impacting development.

23.
Concepts: clarify compatibility issues, provide information and consider requirements
- The designer communicates software limitations and compatibility issues to users.
- The designer shares technical information about system compatibility and communicates technical considerations for the app.
===
---
Definitions for each code (23 in total):
1.
Concepts: provide short responses, agree and provide positive responses
Relationship: Users express agreement and positivity through brief affirmations.
Criteria: Users give short affirmative responses to indicate their interest or agreement and support previous comments in discussions.
Phrase: Affirm agreement succinctly.

2.
Concepts: compliment on the app's evolution, compare favorably and express satisfaction
Relationship: Users express satisfaction by comparing the app favorably to others and acknowledging its progress.
Criteria: Users compliment the progress and development of the application while expressing approval of its features.
Phrase: Praise app development positively.

3.
Concepts: express support, appreciate community support
Relationship: Users acknowledge and encourage each other, fostering a supportive atmosphere.
Criteria: Users express acknowledgment and gratitude for the support and contributions of others in the community.
Phrase: Foster community support.

4.
Concepts: inquire about platform compatibility, specify platform and seek clarification
Relationship: Users seek information about compatibility by specifying their platform.
Criteria: Users inquire about the app's compatibility across different platforms and communicate their need for clarification regarding software versions.
Phrase: Seek compatibility clarification.

5.
Concepts: express needs and seek assistance, seek information and ask questions
Relationship: Users communicate their needs and inquiries to gain support and knowledge.
Criteria: Users communicate their needs for assistance and support regarding the software and ask questions to gain knowledge.
Phrase: Request assistance and information.

6.
Concepts: discuss context of use, suggest practical use cases
Relationship: Users describe their usage contexts and suggest practical applications of the software.
Criteria: Users describe the specific contexts in which they use the software and communicate practical use cases.
Phrase: Suggest practical applications.

7.
Concepts: promote resource sharing, utilize and share resources
Relationship: Users and designers encourage collaborative sharing of resources and knowledge.
Criteria: Designers encourage community members to share resources, and users acknowledge and request resources that assist in using the software.
Phrase: Encourage resource sharing.

8.
Concepts: sharing identity per request, share background information
Relationship: Users share their backgrounds in response to requests for information.
Criteria: A user shares their teaching background and provides comprehensive information about their teaching experiences.
Phrase: Share personal background.

9.
Concepts: confirm professional roles, establish professional credibility
Relationship: Users affirm their professional identities and share experiences to establish credibility.
Criteria: Users affirm their identity as teachers and share their professional experiences to demonstrate expertise.
Phrase: Establish professional identity.

10.
Concepts: share stories and anecdotes, compliment and share experiences
Relationship: Users share personal experiences and positive feedback about the software.
Criteria: Users share stories about past experiences with the software and describe positive student responses while sharing their experiences.
Phrase: Share positive experiences.

11.
Concepts: share teaching experiences, provide contextual experiences
Relationship: Users discuss their teaching experiences in response to inquiries.
Criteria: Users identify as teachers and share contextual information about their experiences and challenges in education.
Phrase: Discuss teaching experiences.

12.
Concepts: acknowledging community expertise, consult on educational standards
Relationship: Designers and users engage in discussions about educational standards and practices.
Criteria: Designer and users discuss educational standards and consult on current practices in circuit diagrams.
Phrase: Consult on educational standards.

13.
Concepts: facilitate user interaction, express comprehension and facilitate communication
Relationship: Collaborative interaction enhances understanding and communication between users and designers.
Criteria: The collaborative interaction between users and designers contributes to the design process and facilitates communication about features and feedback.
Phrase: Facilitate user interaction.

14.
Concepts: provide user guidance, instruction and updates
Relationship: Designers offer guidance and updates to help users understand the software.
Criteria: A designer provides detailed guidance and instructions on new features and updates to help users effectively use the software.
Phrase: Provide user guidance.

15.
Concepts: offer technical support, request technical assistance
Relationship: Designers provide support while users seek assistance for technical issues.
Criteria: Designers provide help and technical support to users who report issues and request assistance.
Phrase: Offer technical support.

16.
Concepts: suggest simplification and refinement, commit to improvement and propose refinements
Relationship: Designers communicate the need for usability improvements and commit to addressing user needs.
Criteria: Designers suggest simplifications and refinements in the design process while committing to necessary adjustments.
Phrase: Propose design refinements.

17.
Concepts: clarify status and version details, highlight progress and assure users
Relationship: Designers communicate updates and progress to ensure users are informed.
Criteria: The designer communicates the testing status and highlights progress made in updates to assure users.
Phrase: Clarify update status.

18.
Concepts: provide platform-specific updates, inform about software updates
Relationship: Designers communicate specific updates relevant to different platforms.
Criteria: The designer communicates platform-specific updates and information regarding component specifications to users.
Phrase: Inform about software updates.

19.
Concepts: share development updates, share update progress
Relationship: Designers keep the community informed about development and update timelines.
Criteria: The designer shares updates and development information with the community about the expected timing of updates.
Phrase: Share development updates.

20.
Concepts: confirm planned updates, provide development updates
Relationship: Designers share information about upcoming features and current status.
Criteria: Information shared by designers about upcoming features and the current status of the Physics Lab software.
Phrase: Confirm planned updates.

21.
Concepts: give an intro to the update content, preview updates and explain features
Relationship: Designers provide previews and explanations of upcoming features to inform users.
Criteria: Designers provide an introduction to the content of upcoming updates and explain the features included.
Phrase: Preview upcoming updates.

22.
Concepts: discuss challenges and explain delays, discuss limitations and constraints
Relationship: Designers communicate challenges faced during development and the reasons for delays.
Criteria: The designer communicates issues faced during development and discusses limitations impacting progress.
Phrase: Explain development challenges.

23.
Concepts: clarify compatibility issues, provide information and consider requirements
Relationship: Designers communicate technical information regarding compatibility to users.
Criteria: The designer communicates software limitations and compatibility issues while sharing technical considerations for the app.
Phrase: Clarify compatibility issues.
---