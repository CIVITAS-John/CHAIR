You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (16 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
16. 
Concepts: {Repeat the input 16}
Relationship: {What is logical relationship between concepts in code 16, or N/A if not applicable}
Criteria: {Who did what, and how for code 16}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: iterative development, describing iterative development
- The development process involves iterative improvements based on user feedback.
- The conversation implies that the development process is ongoing, with iterative improvements.

2.
Concepts: promoting iterative approach, suggesting focused approach
- User advises or encourages an iterative approach to development or problem-solving.
- User advises or encourages a focused, step-by-step approach to development or problem-solving.

3.
Concepts: advising on development approach, considering development approach
- Guidance on development approach is given.
- The designer considers a development approach or responds to development advice.

4.
Concepts: information sharing, providing development information
- Sharing information related to design or development
- Information about software development is provided.

5.
Concepts: provide development insights, explaining development process
- The designer provides insights into the development process.
- Designer explains the development process or technical details.

6.
Concepts: user-driven development, development balance discussion
- A designer explains how user feedback influences the development process.
- Discussing the balance between designer-led development and user input

7.
Concepts: ongoing project development, ongoing work acknowledgment
- Designer mentions ongoing work on a specific aspect of the project.
- The designer acknowledges that work is being done on a specific part or feature.

8.
Concepts: indicating development stage, showcasing development progress
- Designer indicates the current stage of development or progress.
- Designer showcases development progress or updates.

9.
Concepts: apologizing for delays, explaining delays and development issues
- A designer or developer apologizes for delays or issues in the development process.
- The designer explains delays or issues in the development process.

10.
Concepts: acknowledging communication timing, apologizing for late-night communication
- Designer acknowledges or apologizes for the timing of a message or update.
- The designer apologizes for late-night communication or disturbance.

11.
Concepts: correct previous statements, correcting previous responses
- A designer corrects or clarifies their previous statement.
- Correcting or retracting previous statements or responses.

12.
Concepts: avoiding conflict, acknowledging mistake
- A user avoids conflict or apologizes for a mistake.
- A user acknowledges a mistake or apologizes for an error.

13.
Concepts: expressing caution, expressing confusion
- User expresses caution or warning about an aspect of the software.
- The user expresses confusion or uncertainty about using the software.

14.
Concepts: indirect rejection, vague response to feature request
- A designer responds to a suggestion or request in a way that implies it may not be feasible or is not a priority.
- A designer provides a vague or non-committal response to a user's feature request or question.

15.
Concepts: explaining internet limitations, explaining lack of internet access
- A user explains limitations or restrictions due to internet connectivity or access.
- Users explain why they don't have internet access in their classrooms.

16.
Concepts: highlighting limitations, discussing classroom technology limitations, describing constraints
- Users highlight limitations, constraints, or difficulties they face while using the software.
- Users discuss how classroom technology limitations affect software design.
- The user describes limitations or constraints related to the use of the software in educational settings.
===
Here are the definitions for each code:

---
1.
Concepts: iterative development, describing iterative development
Relationship: The concepts are related as they both describe the iterative development process.
Criteria: The development process involves iterative improvements based on user feedback.
Phrase: Describing iterative development.

2.
Concepts: promoting iterative approach, suggesting focused approach
Relationship: The concepts are related as they both provide advice on development approaches.
Criteria: User advises on approaches to development or problem-solving.
Phrase: Advising on development approach.

3.
Concepts: advising on development approach, considering development approach
Relationship: The concepts are related as they both involve guidance and consideration of development approaches.
Criteria: Guidance on development approach is given or considered.
Phrase: Guiding development approach.

4.
Concepts: information sharing, providing development information
Relationship: The concepts are related as they both involve sharing information related to development.
Criteria: Information about software development is shared or provided.
Phrase: Sharing development information.

5.
Concepts: provide development insights, explaining development process
Relationship: The concepts are related as they both provide explanations about the development process.
Criteria: The designer provides insights into the development process or explains technical details.
Phrase: Explaining development process.

6.
Concepts: user-driven development, development balance discussion
Relationship: The concepts are related as they both involve user feedback and development balance.
Criteria: The designer discusses the balance between user input and designer-led development.
Phrase: Discussing development balance.

7.
Concepts: ongoing project development, ongoing work acknowledgment
Relationship: The concepts are related as they both acknowledge ongoing work on the project.
Criteria: The designer acknowledges ongoing work on a specific part or feature of the project.
Phrase: Acknowledging ongoing work.

8.
Concepts: indicating development stage, showcasing development progress
Relationship: The concepts are related as they both involve sharing development progress.
Criteria: The designer indicates the current stage of development or showcases progress.
Phrase: Showcasing development progress.

9.
Concepts: apologizing for delays, explaining delays and development issues
Relationship: The concepts are related as they both involve apologizing for and explaining development issues.
Criteria: The designer apologizes for delays or explains development issues.
Phrase: Apologizing for delays.

10.
Concepts: acknowledging communication timing, apologizing for late-night communication
Relationship: The concepts are related as they both involve apologizing for communication timing.
Criteria: The designer acknowledges or apologizes for the timing of a message or update.
Phrase: Apologizing for communication timing.

11.
Concepts: correct previous statements, correcting previous responses
Relationship: The concepts are related as they both involve correcting previous statements.
Criteria: A designer corrects or clarifies their previous statement.
Phrase: Correcting previous statements.

12.
Concepts: avoiding conflict, acknowledging mistake
Relationship: The concepts are related as they both involve apologizing or avoiding conflict.
Criteria: A user avoids conflict or acknowledges a mistake.
Phrase: Avoiding conflict.

13.
Concepts: expressing caution, expressing confusion
Relationship: The concepts are related as they both involve expressing uncertainty or caution.
Criteria: The user expresses caution or uncertainty about using the software.
Phrase: Expressing caution.

14.
Concepts: indirect rejection, vague response to feature request
Relationship: The concepts are related as they both involve responding to feature requests in a non-committal way.
Criteria: A designer provides a vague or non-committal response to a user's feature request or question.
Phrase: Providing vague response.

15.
Concepts: explaining internet limitations, explaining lack of internet access
Relationship: The concepts are related as they both involve explaining limitations due to internet connectivity.
Criteria: Users explain limitations or restrictions due to internet connectivity or access.
Phrase: Explaining internet limitations.

16.
Concepts: highlighting limitations, discussing classroom technology limitations, describing constraints
Relationship: The concepts are related as they all involve discussing limitations or constraints related to software use.
Criteria: Users highlight limitations, constraints, or difficulties they face while using the software.
Phrase: Highlighting limitations.