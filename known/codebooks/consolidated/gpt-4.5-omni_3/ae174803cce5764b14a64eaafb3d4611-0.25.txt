You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (46 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
46. 
Concepts: {Repeat the input 46}
Relationship: {What is logical relationship between concepts in code 46, or N/A if not applicable}
Criteria: {Who did what, and how for code 46}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: prioritize feedback for development, discuss development prioritization
- Designers prioritize user feedback and plan iterative development based on it.
- Users suggest prioritizing features, and developers provide feedback on development prioritization.

2.
Concepts: promise future features, promise future feedback
- Developers promise to implement and perfect features in the future.
- Developers promise to invite feedback and gather opinions from the community for future projects.

3.
Concepts: apologize for interruptions, apologize for timing and inconvenience
- Designers or users apologize for potential interruptions or inconveniences.
- Developers apologize for the timing of messages or updates and acknowledge potential inconvenience.

4.
Concepts: reassure users, mitigate user concerns
- Designers reassure users about progress and future availability of features.
- Designers respond to user concerns with reassurances about ongoing work.

5.
Concepts: communicating ongoing work, provide development updates
- Developers inform users about ongoing work, progress, and plans for future updates.
- Designers describe their current research and development efforts, providing status information and updates.

6.
Concepts: highlight update progress, communicate updates and progress
- Designers share visual updates and highlight the progress of an update.
- Designers confirm and announce updates, sharing timelines and progress.

7.
Concepts: discuss release schedules, provide development timelines
- Designers provide schedules and discuss the process and timeline for version releases.
- Designers set expectations and provide timelines for the development and release of features.

8.
Concepts: describe update scope, provide update overview
- Designers describe the extent and magnitude of an update.
- Designers provide a detailed overview and introduction to the content of an update.

9.
Concepts: provide update schedule, describe update process
- Designers provide internal updates and schedules for the software.
- Designers describe the process and timeline for software updates and downloads.

10.
Concepts: confirm collaboration, acknowledge understanding
- Users and designers express agreement and confirm collaborative efforts on design ideas.
- Users and designers acknowledge understanding and the points made by each other.

11.
Concepts: following up, elaborate on suggestions
- Designers and users follow up on previous discussions or statements.
- Users and designers provide further suggestions and elaborate on specific points.

12.
Concepts: solicit and accept feedback, acknowledging and responding to user feedback
- Designers acknowledge and accept user suggestions and solicit feedback for future updates.
- Designers acknowledge and respond to user feedback and suggestions.

13.
Concepts: ask design questions, provide design support answers
- Users and designers ask questions or seek information about design elements or features.
- Users ask questions and receive answers providing design support.

14.
Concepts: transparent developer discussion, ensure development transparency
- Designers discuss development transparently with the community.
- Designers provide and maintain transparency about the development process by sharing detailed information.

15.
Concepts: encourage further questions, encourage user interaction
- A designer invites users to ask more questions and encourages future discussions.
- A designer encourages users to provide more detailed information and facilitates further engagement and interaction.

16.
Concepts: propose solutions, address user concerns
- Designers make suggestions and propose potential solutions to issues.
- Designers address user concerns and offer problem-solving solutions.

17.
Concepts: adapt design for local export, consider local export functionality
- Designers mention the need to adapt the design to support local export.
- A designer considers the need for a specific functionality, such as local export.

18.
Concepts: consider technical requirements, discuss hardware and technical constraints
- Designers consider specific aspects and technical requirements.
- Users and designers consider and highlight hardware and technical limitations when designing features.

19.
Concepts: acknowledging feature necessity, explain feature necessity and importance
- Designers acknowledge and conclude the necessity of a feature based on user feedback.
- Designers explain the need and importance of certain features or developments.

20.
Concepts: direct users to resources, provide access information
- A designer directs users to resources for downloading software.
- A designer provides information about accessing the software or resources.

21.
Concepts: share information, share knowledge and resources
- Instances where participants share information or resources to solve a problem or answer a question.
- Users engage in collaborative learning by sharing knowledge and resources.

22.
Concepts: gather user context, gather teachers' needs
- Designers seek and gather context about the user's teaching environment.
- A designer interacts with teachers to ask about their needs for specific features.

23.
Concepts: discuss design refinement, discuss feature adjustments
- Designers and developers discuss refining and various aspects of the design.
- Designers discuss adjustments and the flexibility of features or layouts.

24.
Concepts: appreciate mutual support, shared experiences and support
- Designers appreciate user support, and users appreciate the designers' efforts.
- Users and designers sharing experiences and supporting each other in using and improving the software.

25.
Concepts: collaborative planning, collaborate on problem solving
- Designers and users collaboratively discussing and planning the development of the software.
- Instances where users and designers work together to address issues or improve the software.

26.
Concepts: discuss software compatibility, discuss system requirements and development
- Developers assure and discuss the software's compatibility with certain hardware and systems.
- Designers discuss system requirements and explain the development process for compatibility.

27.
Concepts: explain technical details, provide technical clarifications
- Designers and developers discuss and explain technical details or artifacts of the software.
- Designers provide detailed information and technical clarifications about software versions and capabilities.

28.
Concepts: diagnose issues, engage in troubleshooting
- A user or designer confirms and diagnoses an issue with the software.
- Participants troubleshoot issues with the software.

29.
Concepts: share educational experiences, share classroom experiences
- Users share their experiences and the impact of the software in educational contexts.
- A user shares their classroom experience and discusses the application of the software in a classroom setting.

30.
Concepts: share info about old systems, highlight outdated technology
- Sharing information about outdated computer systems in schools.
- Users mention and highlight the outdated technology used in their school.

31.
Concepts: explain design focus and limitations, acknowledge and explain limitations
- Designers explain the focus and limitations of the subject matter and app design.
- Designers acknowledge and explain the limitations or constraints of the software or process.

32.
Concepts: mention technical limitations, explain current version's limitation
- Mentioning technical issues or limitations with existing systems.
- Explanations of the current version's limitations or issues.

33.
Concepts: explaining the plans, explain design rationale
- Explaining the plans or rationale behind certain features.
- Designers explain the rationale, goals, and principles behind design decisions.

34.
Concepts: subject expansion, discuss feature expansion and improvement
- Participants discuss the expansion of subject matter within the software.
- Designers mention the expansion of features and upcoming improvements to the software.

35.
Concepts: on-screen keyboard functionality, discuss touch screen functionality
- Discussion about the functionality of on-screen keyboards in the software.
- Developers discuss and inform users about touch screen functionality and on-screen keyboards.

36.
Concepts: seek help and support, request technical support, make technical inquiries
- Users seek help and express the need for usage support and documentation.
- Users request assistance or technical support and seek guidance on using the software.
- Users ask technical questions to gain knowledge or resources related to the software.

37.
Concepts: express concern, inquire about updates
- Users express concern or ask about the status of updates.
- Users inquire about recent updates, feature updates, and the status of updates.

38.
Concepts: seek version and platform clarification, inquire about platform compatibility
- Users seek clarification about software versions and platforms.
- Users inquire about using the software across different platforms and its compatibility.

39.
Concepts: provide rationale, provide and confirm reasons
- Users and designers provide rationale or justifications for actions, decisions, or suggestions.
- Users provide reasons for actions or decisions and confirm given reasons.

40.
Concepts: seek request clarification, seek and provide clarification
- A designer expresses understanding and questions a user's request for more details.
- Users and designers seek clarification and provide answers to questions.

41.
Concepts: share user reviews, provide comparative feedback
- Users share their experiences or opinions about using the software.
- Users provide feedback by comparing the software to other similar products.

42.
Concepts: acknowledge craftsmanship, express satisfaction with software
- Users appreciate and acknowledge the craftsmanship and quality of the software.
- Users praise the software, share positive feedback, express satisfaction, and appreciate specific features.

43.
Concepts: use emojis for engagement, express emotions non-verbally
- Users express themselves and engage with the community using emojis.
- Users express emotions using emojis or other non-verbal forms of communication.

44.
Concepts: express community gratitude, acknowledge community support
- Users express gratitude and encouragement, fostering a positive community atmosphere.
- Users express support, encouragement, or appreciation for the community's efforts.

45.
Concepts: user identity, confirm teacher identity
- Confirming user identity or role.
- Users confirm their roles and identities as teachers.

46.
Concepts: self-introduction, initiate community interaction
- A user introduces themselves to the community.
- A user initiates interaction with the community, particularly as a new user.
===
---
Definitions for each code (46 in total):
1.
Concepts: prioritize feedback for development, discuss development prioritization
Relationship: Both concepts involve prioritizing and discussing user feedback for development.
Criteria: Designers and users prioritize and discuss user feedback for iterative development.
Phrase: Prioritize and discuss feedback

2.
Concepts: promise future features, promise future feedback
Relationship: Both concepts involve developers making promises about future actions.
Criteria: Developers promise future implementation of features and gathering community feedback.
Phrase: Promise future actions

3.
Concepts: apologize for interruptions, apologize for timing and inconvenience
Relationship: Both concepts involve apologies for potential disruptions.
Criteria: Designers or developers apologize for interruptions, timing, and potential inconveniences.
Phrase: Apologize for disruptions

4.
Concepts: reassure users, mitigate user concerns
Relationship: Both concepts involve addressing user concerns with reassurances.
Criteria: Designers reassure users and mitigate their concerns about ongoing work and future features.
Phrase: Reassure and mitigate concerns

5.
Concepts: communicating ongoing work, provide development updates
Relationship: Both concepts involve informing users about development progress.
Criteria: Developers communicate ongoing work and provide updates on development progress.
Phrase: Communicate development progress

6.
Concepts: highlight update progress, communicate updates and progress
Relationship: Both concepts involve sharing information about updates and their progress.
Criteria: Designers highlight and communicate the progress and timelines of updates.
Phrase: Highlight and communicate updates

7.
Concepts: discuss release schedules, provide development timelines
Relationship: Both concepts involve discussing and providing timelines for releases.
Criteria: Designers discuss release schedules and provide development timelines for features.
Phrase: Discuss and provide timelines

8.
Concepts: describe update scope, provide update overview
Relationship: Both concepts involve describing the content and extent of updates.
Criteria: Designers describe the scope and provide an overview of updates.
Phrase: Describe and overview updates

9.
Concepts: provide update schedule, describe update process
Relationship: Both concepts involve providing information about update schedules and processes.
Criteria: Designers provide schedules and describe the process for software updates.
Phrase: Provide and describe update process

10.
Concepts: confirm collaboration, acknowledge understanding
Relationship: Both concepts involve mutual agreement and understanding in collaborative efforts.
Criteria: Users and designers confirm collaboration and acknowledge mutual understanding.
Phrase: Confirm and acknowledge collaboration

11.
Concepts: following up, elaborate on suggestions
Relationship: Both concepts involve continuing discussions and providing additional details.
Criteria: Designers and users follow up on discussions and elaborate on suggestions.
Phrase: Follow up and elaborate

12.
Concepts: solicit and accept feedback, acknowledging and responding to user feedback
Relationship: Both concepts involve engaging with user feedback.
Criteria: Designers solicit, accept, acknowledge, and respond to user feedback.
Phrase: Engage with user feedback

13.
Concepts: ask design questions, provide design support answers
Relationship: Both concepts involve a question-and-answer interaction about design.
Criteria: Users ask design-related questions and receive support answers from designers.
Phrase: Ask and answer design questions

14.
Concepts: transparent developer discussion, ensure development transparency
Relationship: Both concepts involve maintaining transparency in development discussions.
Criteria: Designers discuss development transparently and ensure ongoing transparency.
Phrase: Maintain development transparency

15.
Concepts: encourage further questions, encourage user interaction
Relationship: Both concepts involve encouraging user engagement and interaction.
Criteria: Designers encourage users to ask more questions and interact with the community.
Phrase: Encourage user engagement

16.
Concepts: propose solutions, address user concerns
Relationship: Both concepts involve addressing user concerns with proposed solutions.
Criteria: Designers propose solutions and address user concerns.
Phrase: Propose and address concerns

17.
Concepts: adapt design for local export, consider local export functionality
Relationship: Both concepts involve considering and adapting design for local export functionality.
Criteria: Designers adapt and consider the design for local export functionality.
Phrase: Adapt and consider local export

18.
Concepts: consider technical requirements, discuss hardware and technical constraints
Relationship: Both concepts involve considering and discussing technical aspects and constraints.
Criteria: Designers and users consider technical requirements and discuss hardware constraints.
Phrase: Consider and discuss technical aspects

19.
Concepts: acknowledging feature necessity, explain feature necessity and importance
Relationship: Both concepts involve recognizing and explaining the importance of features.
Criteria: Designers acknowledge and explain the necessity and importance of features.
Phrase: Acknowledge and explain feature necessity

20.
Concepts: direct users to resources, provide access information
Relationship: Both concepts involve providing users with information to access resources.
Criteria: Designers direct users to resources and provide access information.
Phrase: Provide access information

21.
Concepts: share information, share knowledge and resources
Relationship: Both concepts involve sharing information and resources for problem-solving.
Criteria: Participants share information, knowledge, and resources collaboratively.
Phrase: Share information and resources

22.
Concepts: gather user context, gather teachers' needs
Relationship: Both concepts involve gathering contextual information from users, particularly teachers.
Criteria: Designers gather user context and teachers' needs for specific features.
Phrase: Gather user context and needs

23.
Concepts: discuss design refinement, discuss feature adjustments
Relationship: Both concepts involve discussing improvements and adjustments to design features.
Criteria: Designers and developers discuss refining and adjusting design features.
Phrase: Discuss design improvements

24.
Concepts: appreciate mutual support, shared experiences and support
Relationship: Both concepts involve mutual appreciation and sharing of support and experiences.
Criteria: Users and designers appreciate mutual support and share experiences.
Phrase: Appreciate and share support

25.
Concepts: collaborative planning, collaborate on problem solving
Relationship: Both concepts involve collaborative efforts in planning and problem-solving.
Criteria: Designers and users collaborate on planning and solving problems.
Phrase: Collaborate on planning and problem-solving

26.
Concepts: discuss software compatibility, discuss system requirements and development
Relationship: Both concepts involve discussing compatibility and system requirements.
Criteria: Developers discuss software compatibility and system requirements for development.
Phrase: Discuss compatibility and requirements

27.
Concepts: explain technical details, provide technical clarifications
Relationship: Both concepts involve providing detailed technical explanations and clarifications.
Criteria: Designers and developers explain technical details and provide clarifications.
Phrase: Provide technical explanations

28.
Concepts: diagnose issues, engage in troubleshooting
Relationship: Both concepts involve identifying and resolving software issues.
Criteria: Participants diagnose issues and engage in troubleshooting.
Phrase: Diagnose and troubleshoot issues

29.
Concepts: share educational experiences, share classroom experiences
Relationship: Both concepts involve sharing experiences in educational and classroom contexts.
Criteria: Users share their educational and classroom experiences with the software.
Phrase: Share educational experiences

30.
Concepts: share info about old systems, highlight outdated technology
Relationship: Both concepts involve discussing outdated technology and systems.
Criteria: Users share information and highlight outdated technology in their environments.
Phrase: Discuss outdated technology

31.
Concepts: explain design focus and limitations, acknowledge and explain limitations
Relationship: Both concepts involve explaining the focus and limitations of design.
Criteria: Designers explain the focus and acknowledge limitations of the design.
Phrase: Explain design focus and limitations

32.
Concepts: mention technical limitations, explain current version's limitation
Relationship: Both concepts involve discussing limitations of the current version.
Criteria: Designers mention and explain technical limitations of the current version.
Phrase: Discuss current limitations

33.
Concepts: explaining the plans, explain design rationale
Relationship: Both concepts involve explaining plans and rationale behind design decisions.
Criteria: Designers explain their plans and the rationale behind design decisions.
Phrase: Explain plans and rationale

34.
Concepts: subject expansion, discuss feature expansion and improvement
Relationship: Both concepts involve discussing the expansion and improvement of features.
Criteria: Participants discuss subject and feature expansion and upcoming improvements.
Phrase: Discuss expansion and improvement

35.
Concepts: on-screen keyboard functionality, discuss touch screen functionality
Relationship: Both concepts involve discussing functionalities related to touch screens and on-screen keyboards.
Criteria: Developers discuss on-screen keyboard and touch screen functionalities.
Phrase: Discuss touch screen functionalities

36.
Concepts: seek help and support, request technical support, make technical inquiries
Relationship: All concepts involve seeking and requesting technical support and information.
Criteria: Users seek help, request technical support, and make technical inquiries.
Phrase: Seek technical support

37.
Concepts: express concern, inquire about updates
Relationship: Both concepts involve users expressing concerns and inquiring about updates.
Criteria: Users express concerns and inquire about the status of updates.
Phrase: Inquire about updates

38.
Concepts: seek version and platform clarification, inquire about platform compatibility
Relationship: Both concepts involve seeking clarification about software versions and platform compatibility.
Criteria: Users seek clarification about software versions and platform compatibility.
Phrase: Seek version and compatibility clarification

39.
Concepts: provide rationale, provide and confirm reasons
Relationship: Both concepts involve providing and confirming reasons for decisions or actions.
Criteria: Users and designers provide and confirm rationale for decisions or actions.
Phrase: Provide and confirm rationale

40.
Concepts: seek request clarification, seek and provide clarification
Relationship: Both concepts involve seeking and providing clarification on requests.
Criteria: Users and designers seek and provide clarification on requests and questions.
Phrase: Seek and provide clarification

41.
Concepts: share user reviews, provide comparative feedback
Relationship: Both concepts involve sharing user reviews and comparative feedback.
Criteria: Users share reviews and provide comparative feedback on the software.
Phrase: Share reviews and feedback

42.
Concepts: acknowledge craftsmanship, express satisfaction with software
Relationship: Both concepts involve users expressing appreciation and satisfaction with the software.
Criteria: Users acknowledge craftsmanship and express satisfaction with the software.
Phrase: Express satisfaction

43.
Concepts: use emojis for engagement, express emotions non-verbally
Relationship: Both concepts involve using non-verbal forms of communication for engagement.
Criteria: Users use emojis and other non-verbal forms to express emotions and engage.
Phrase: Use non-verbal communication

44.
Concepts: express community gratitude, acknowledge community support
Relationship: Both concepts involve expressing gratitude and acknowledging community support.
Criteria: Users express gratitude and acknowledge support within the community.
Phrase: Express community gratitude

45.
Concepts: user identity, confirm teacher identity
Relationship: Both concepts involve confirming user identity, particularly as teachers.
Criteria: Users confirm their identity and roles, especially as teachers.
Phrase: Confirm user identity

46.
Concepts: self-introduction, initiate community interaction
Relationship: Both concepts involve introducing oneself and initiating interaction within the community.
Criteria: Users introduce themselves and initiate interaction with the community.
Phrase: Initiate community interaction
---