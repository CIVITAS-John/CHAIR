You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (17 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
17. 
Concepts: {Repeat the input 17}
Relationship: {What is logical relationship between concepts in code 17, or N/A if not applicable}
Criteria: {Who did what, and how for code 17}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: express user appreciation, express appreciation for support
- Users express appreciation and gratitude within the community.
- Users and designers express appreciation for ideas and support within the community.

2.
Concepts: share professional background, share teaching background
- Users share their professional background to establish credibility and context.
- A user shares their teaching experience, background, and identity, often including specific details like grade level and years of experience.

3.
Concepts: request clarification, provide detailed clarification
- Users express uncertainty and request clarification on specific aspects or features.
- A user provides additional context or details to clarify a question, and a detailed response is given.

4.
Concepts: system compatibility, confirm system compatibility
- A team member discusses the compatibility of the software with different systems.
- Designers confirm and discuss the software's compatibility with different systems.

5.
Concepts: software updates and downloads, provide download instructions
- Designers provide information about software updates and download links.
- Designers provide instructions and information on how to download and access the software.

6.
Concepts: inquire about platform updates, engage with development process
- Users ask questions about the platform and inquire about recent or upcoming updates.
- A user inquires about the development process or expresses interest in the platform's development.

7.
Concepts: make community announcement, notify community about updates
- A designer makes a general announcement to the community.
- Designers announce and notify the community about new software versions and updates.

8.
Concepts: update schedule, outline update timeline
- Providing a schedule for upcoming updates.
- Team members provide a timeline and describe the process for software updates, including a feature roadmap.

9.
Concepts: share development updates, share detailed update information
- Designers share detailed information about current status, updates, and future plans for the software.
- A designer shares visual updates, announces component updates, and provides detailed notes on new features in a software version.

10.
Concepts: reassure about updates, highlight ongoing progress
- Designers reassure users about progress and confirm that a feature or update is forthcoming.
- A designer promises that updates are ongoing and highlights progress, expressing hope for specific tasks.

11.
Concepts: discuss design refinement, discuss feature adjustments and flexibility
- Designers discuss refining the design and suggest simplifying features or processes.
- Designers discuss adjustments to features and their flexibility within the software.

12.
Concepts: propose solutions and workarounds, discuss and address solution limitations
- Designers offer and propose potential solutions, workarounds, and alternatives for specific issues.
- Designers talk about the limitations of a proposed solution and explain how they can be addressed or worked around.

13.
Concepts: clarify user requests, seek and confirm understanding
- Designers ask follow-up questions to clarify and gather more details about user requests.
- Designers seek confirmation from users about specific details, confirm understanding, and use visual aids to clarify information.

14.
Concepts: ask design questions, answering for design support
- Users and designers ask questions about design considerations or requirements.
- Users answer questions or provide feedback on design support.

15.
Concepts: address user concerns, understanding user needs
- Designers respond to and address user concerns, including usability issues.
- Designers inquire about user needs to understand the problems users encountered and their preferences.

16.
Concepts: plan future updates, discuss future plans
- Team members discuss and plan future updates, listing features to be included.
- Designers discuss plans for future features, compatibility, and potential developments.

17.
Concepts: explain rationale, explain design rationale
- A team member provides a reason and explains the plans or rationale behind a feature or decision.
- Designers explain the principles guiding the software design and provide the rationale for development decisions.
===
---
Definitions for each code (17 in total):
1.
Concepts: express user appreciation, express appreciation for support
Relationship: Both concepts involve expressing gratitude within the community.
Criteria: Users and designers express appreciation and gratitude for ideas and support within the community.
Phrase: Expressing appreciation

2.
Concepts: share professional background, share teaching background
Relationship: Both concepts involve sharing personal and professional information to establish credibility.
Criteria: Users share their professional and teaching backgrounds to establish credibility and context within the community.
Phrase: Sharing professional background

3.
Concepts: request clarification, provide detailed clarification
Relationship: Both concepts involve the process of seeking and providing clarity on specific aspects.
Criteria: Users request and provide detailed clarification on specific aspects or features within the community.
Phrase: Clarifying uncertainties

4.
Concepts: system compatibility, confirm system compatibility
Relationship: Both concepts involve discussing and confirming software compatibility with different systems.
Criteria: Team members and designers discuss and confirm the software's compatibility with different systems.
Phrase: Confirming system compatibility

5.
Concepts: software updates and downloads, provide download instructions
Relationship: Both concepts involve providing information and instructions related to software updates and downloads.
Criteria: Designers provide information and instructions on software updates and how to download and access the software.
Phrase: Providing update instructions

6.
Concepts: inquire about platform updates, engage with development process
Relationship: Both concepts involve users engaging with the development process by inquiring about updates.
Criteria: Users inquire about platform updates and engage with the development process by asking questions.
Phrase: Inquiring about updates

7.
Concepts: make community announcement, notify community about updates
Relationship: Both concepts involve making announcements to the community about updates.
Criteria: Designers make announcements and notify the community about new software versions and updates.
Phrase: Announcing updates

8.
Concepts: update schedule, outline update timeline
Relationship: Both concepts involve providing a schedule or timeline for software updates.
Criteria: Team members provide a schedule and outline the timeline for upcoming software updates.
Phrase: Outlining update timeline

9.
Concepts: share development updates, share detailed update information
Relationship: Both concepts involve sharing detailed information about software development and updates.
Criteria: Designers share detailed information about the current status, updates, and future plans for the software.
Phrase: Sharing development updates

10.
Concepts: reassure about updates, highlight ongoing progress
Relationship: Both concepts involve reassuring users about ongoing progress and forthcoming updates.
Criteria: Designers reassure users about progress and highlight ongoing updates, expressing hope for specific tasks.
Phrase: Reassuring about progress

11.
Concepts: discuss design refinement, discuss feature adjustments and flexibility
Relationship: Both concepts involve discussing design improvements and feature adjustments.
Criteria: Designers discuss refining the design and adjusting features for flexibility within the software.
Phrase: Discussing design refinement

12.
Concepts: propose solutions and workarounds, discuss and address solution limitations
Relationship: Both concepts involve proposing solutions and addressing their limitations.
Criteria: Designers propose solutions and workarounds for issues and discuss the limitations of these solutions.
Phrase: Proposing solutions

13.
Concepts: clarify user requests, seek and confirm understanding
Relationship: Both concepts involve clarifying and confirming user requests and understanding.
Criteria: Designers clarify user requests by asking follow-up questions and seek confirmation to ensure understanding.
Phrase: Clarifying user requests

14.
Concepts: ask design questions, answering for design support
Relationship: Both concepts involve asking and answering questions related to design support.
Criteria: Users and designers ask and answer questions about design considerations and support.
Phrase: Discussing design questions

15.
Concepts: address user concerns, understanding user needs
Relationship: Both concepts involve addressing and understanding user concerns and needs.
Criteria: Designers address user concerns and inquire about user needs to understand encountered problems and preferences.
Phrase: Addressing user concerns

16.
Concepts: plan future updates, discuss future plans
Relationship: Both concepts involve discussing and planning future updates and features.
Criteria: Team members discuss and plan future updates, including features, compatibility, and potential developments.
Phrase: Planning future updates

17.
Concepts: explain rationale, explain design rationale
Relationship: Both concepts involve explaining the rationale behind design decisions.
Criteria: Team members explain the rationale and principles guiding software design and development decisions.
Phrase: Explaining design rationale
---