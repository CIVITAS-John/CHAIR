You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (7 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
7. {Repeat the input 7}
Relationship: {The logical relationship between concepts in input 7}
Criteria: {A sentence of consolidated criteria for code 7}
Label: {A consolidated label of code 7}
Category: {2-4 words for code 7}
---
~~~
1. use of emojis, engagement indicators.
- Use of emojis to express feelings or reactions within the conversation.
- Use of emojis and brief responses that indicate active participation but minimal verbal interaction.

2. information dissemination, community information sharing.
- How information about software usage or updates is shared within the community.
- Exchanges where information about the tool, its updates, or usage is shared among community members.

3. technical inquiry, technical support provision.
- Instances where participants ask for technical assistance or clarification regarding the platform's functionalities.
- Guidance or solutions provided for technical problems related to the platform.

4. collaborative decision-making, collaborative development.
- Instances where the designer involves users in the decision-making process regarding software features.
- Elements in the conversation that show a collaborative approach to software development, involving users in the design process.

5. feedback solicitation, designer feedback responsiveness.
- Instances where designers actively seek user feedback to refine or evaluate features.
- Instances where designers actively respond to or consider user feedback in their communications or software design decisions.

6. interface usability feedback, usability improvement discussions.
- Discussions or feedback addressing difficulties, design, and usability of the software interface.
- Discussions or mentions of usability improvements or challenges faced by users.

7. practical feedback, user feedback and interaction.
- Direct comments from users about the software's usability and functionality.
- Instances where users communicate their experiences, suggestions, or issues regarding the software's features or performance, either directly or through interactive sessions with developers.
===
---
Categories: 
* Community Engagement
* Information Exchange
* Technical Assistance
* Collaborative Design
* Feedback Dynamics
* Usability Feedback
* User Experience Feedback

Definitions for each code (7 in total):
1. Use of emojis, engagement indicators.
Relationship: The two concepts are parallel, both indicating forms of engagement but focusing on different aspects.
Criteria: Instances where emojis are used to express emotions or reactions and brief responses that show active but minimal verbal participation.
Label: Minimal Engagement Indicators
Category: Community Engagement

2. Information dissemination, community information sharing.
Relationship: The two concepts are synonymous, both involving the sharing of information within the community.
Criteria: The process through which members share and receive updates or knowledge about the platform's use or features.
Label: Community Information Sharing
Category: Information Exchange

3. Technical inquiry, technical support provision.
Relationship: These concepts are complementary; one is about seeking help, and the other about providing it.
Criteria: Interactions involving requests for technical help and the corresponding support provided to address these issues.
Label: Technical Support Dynamics
Category: Technical Assistance

4. Collaborative decision-making, collaborative development.
Relationship: These concepts are closely related, both focusing on user involvement in the development process.
Criteria: Instances where users participate in decision-making or in the development process to influence software features.
Label: Collaborative Software Development
Category: Collaborative Design

5. Feedback solicitation, designer feedback responsiveness.
Relationship: These concepts are complementary, focusing on the interaction between user feedback and designer responses.
Criteria: Instances where designers seek out and respond to user feedback to refine software features.
Label: Feedback Responsiveness
Category: Feedback Dynamics

6. Interface usability feedback, usability improvement discussions.
Relationship: These concepts are parallel, focusing on different aspects of usability feedback.
Criteria: Discussions that address interface design and usability, including specific user challenges and suggested improvements.
Label: Usability Feedback and Improvement
Category: Usability Feedback

7. Practical feedback, user feedback and interaction.
Relationship: These concepts are synonymous, both focusing on direct user feedback regarding software use.
Criteria: Direct user comments and interactions that provide insights into their experiences, challenges, and suggestions for the software.
Label: User Experience Feedback
Category: User Experience Feedback
---