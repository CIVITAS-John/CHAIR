You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (14 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
14. 
Concepts: {Repeat the input 14}
Relationship: {What is logical relationship between concepts in code 14, or N/A if not applicable}
Criteria: {Who did what, and how for code 14}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: request new features, requesting specific features
- Users request specific new features or additional experiments for the software.
- Users request specific features or functionalities to be added to the software.

2.
Concepts: ask about update status, inquire about updates
- Users ask about the current status or recent updates of the software.
- Users seek information about the schedule or details of upcoming software updates.

3.
Concepts: clarify software version, provide version details
- Designers clarify which version of the software is being discussed or updated.
- Designers provide detailed information about the status and availability of a specific software version.

4.
Concepts: announce software release, announce community updates
- Designers announce the release of new software versions and provide updates about the software.
- Designers inform the community about software updates, changes, and the availability of new versions.

5.
Concepts: announce development plans, announce development updates
- Designers make announcements about development plans or updates.
- Designers share information about the current status, updates, and future plans for the software.

6.
Concepts: share release schedule, communicate release plans
- Designers provide a schedule or timeline for upcoming software updates or releases.
- Designers communicate plans, progress, and updates for software releases to users.

7.
Concepts: confirm future feature, confirm feature update
- Designers confirm or promise the inclusion of future features.
- Designers confirm the addition or implementation of a feature.

8.
Concepts: discuss future directions, share future development plans
- Designers discuss potential future directions and planning for design and feature development.
- Designers outline and discuss future development priorities and plans.

9.
Concepts: integrate user feedback, implementing a feedback loop
- User feedback is acknowledged, actively sought, and incorporated into the design process.
- A process where user feedback is solicited, considered, and incorporated into design decisions.

10.
Concepts: acknowledge and implement feedback, accepting and implementing suggestions
- Designers acknowledge user feedback and discuss plans to incorporate it in future updates.
- A designer accepts a user's suggestion or request and indicates it will be implemented in a future update.

11.
Concepts: encourage user feedback, cultivating community feedback
- Designers encourage users to provide feedback, suggestions, and interact with the community.
- Designers invite feedback and encourage community participation.

12.
Concepts: explain functionality, explain feature functionality
- Explaining the functionality or capabilities of a component.
- Designers provide examples and explanations to illustrate the functionality of features.

13.
Concepts: suggesting usability improvements
- Suggesting improvements or enhancements to the software's usability.
- Users or designers propose enhancements or new features for the software.

14.
Concepts: confirm agreement
- Confirming agreement with a developer's argument or statement.
- Users and designers express or confirm agreement with each other.
===
---
Definitions for each code (14 in total):
1.
Concepts: request new features, requesting specific features
Relationship: N/A
Criteria: Users request specific new features or functionalities to be added to the software.
Phrase: Requesting new features

2.
Concepts: ask about update status, inquire about updates
Relationship: N/A
Criteria: Users seek information about the current status or schedule of software updates.
Phrase: Inquiring about updates

3.
Concepts: clarify software version, provide version details
Relationship: N/A
Criteria: Designers clarify and provide detailed information about the status and availability of specific software versions.
Phrase: Clarifying software version

4.
Concepts: announce software release, announce community updates
Relationship: N/A
Criteria: Designers announce the release of new software versions and provide updates about the software to the community.
Phrase: Announcing software releases

5.
Concepts: announce development plans, announce development updates
Relationship: N/A
Criteria: Designers make announcements about current development status, updates, and future plans for the software.
Phrase: Announcing development plans

6.
Concepts: share release schedule, communicate release plans
Relationship: N/A
Criteria: Designers provide and communicate a schedule or timeline for upcoming software updates or releases.
Phrase: Sharing release schedule

7.
Concepts: confirm future feature, confirm feature update
Relationship: N/A
Criteria: Designers confirm or promise the inclusion or implementation of future features.
Phrase: Confirming future features

8.
Concepts: discuss future directions, share future development plans
Relationship: N/A
Criteria: Designers discuss and outline potential future directions and development priorities for the software.
Phrase: Discussing future directions

9.
Concepts: integrate user feedback, implementing a feedback loop
Relationship: N/A
Criteria: User feedback is actively sought, acknowledged, and incorporated into the design process.
Phrase: Integrating user feedback

10.
Concepts: acknowledge and implement feedback, accepting and implementing suggestions
Relationship: N/A
Criteria: Designers acknowledge user feedback and indicate plans to incorporate it in future updates.
Phrase: Acknowledging and implementing feedback

11.
Concepts: encourage user feedback, cultivating community feedback
Relationship: N/A
Criteria: Designers encourage users to provide feedback, suggestions, and interact with the community.
Phrase: Encouraging user feedback

12.
Concepts: explain functionality, explain feature functionality
Relationship: N/A
Criteria: Designers provide explanations and examples to illustrate the functionality of features.
Phrase: Explaining feature functionality

13.
Concepts: suggesting usability improvements
Relationship: N/A
Criteria: Users or designers propose enhancements or new features to improve the software's usability.
Phrase: Suggesting usability improvements

14.
Concepts: confirm agreement
Relationship: N/A
Criteria: Users and designers express or confirm agreement with each other.
Phrase: Confirming agreement
---