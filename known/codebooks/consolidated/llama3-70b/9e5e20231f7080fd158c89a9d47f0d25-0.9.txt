You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (16 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
16. {Repeat the input 16}
Relationship: {The logical relationship between concepts in input 16}
Criteria: {A sentence of consolidated criteria for code 16}
Label: {A consolidated label of code 16}
Category: {2-4 words for code 16}
---
~~~
1. emojis, emoji usage for engagement.
- Use of emojis in communication.
- Instances where emojis are used to express emotions, reactions, or to signify engagement in conversations with minimal use of words.

2. emotional expression, user interaction: expressing emotions.
- Instances of community members using emojis or language to express emotions or convey emotional tone.
- Users expressing emotions or reactions through emojis or other means.

3. appreciation for software, positive user feedback.
- Users expressing satisfaction or positive feedback about the software.
- Instances where users express satisfaction, approval, or enthusiasm for the software and its features.

4. questions and clarifications, user queries and requests.
- Instances where users ask questions or seek clarification.
- Instances where users ask questions or make specific requests for new features or content to gain information or clarify doubts.

5. collaboration and consultation, consultation and inclusion.
- Designer soliciting input or feedback from community members.
- Examples of the designer seeking opinions, preferences, or information from the community to guide design decisions.

6. user interaction, designer-user interaction.
- Users engaging with each other or the designer.
- Instances of communication or collaboration between designers and users.

7. feature planning, development prioritization.
- Discussions or decisions related to planned software features, capabilities, or prioritizing their development.
- Discussions that focus on the decision-making process regarding which software features or sections to develop or enhance first.

8. version release, update announcements.
- Updates and announcements about the software version.
- Announcements regarding new software updates, changes, or enhancements shared with the community.

9. feature updates, feature development.
- Includes updates, features, and components discussions.
- Discussion of new features or updates to the platform.

10. learning affordances, learning experience.
- Features or aspects of the software that facilitate active learning, experimentation, or conceptual understanding of physics concepts.
- The features and mechanisms within the software that enable users to actively engage in hands-on experiments, explore physics concepts, and receive feedback on their understanding and actions.

11. compatibility issues, system compatibility.
- Users discussing compatibility issues with different operating systems.
- Discussions about the software's compatibility with different operating systems and hardware.
- Instances where users discuss technical issues related to system compatibility.

12. download instructions, download and installation.
- Users ask questions about how to download the software.
- Instructions or clarifications on how to download or install the app.
- Community members asking about or receiving instructions on how to download or install the software.

13. active community participation.
- Evidence of community members actively engaging in discussions, sharing resources, or providing feedback.
- The level of active involvement and contribution from the community members in the development and use of the software, including providing feedback, requesting features, and collaborating with the designer.

14. recognition of effort.
- Acknowledgment of hard work put in by members of the community.
- Instances where users acknowledge the effort or work done by others, often showing appreciation.

15. usability concerns.
- Instances where ease of use, practical aspects, and user experience of the software are discussed.
- Includes discussions or queries about difficulties, design choices, and usability aspects of the software interface.

16. user experience.
- Features that enhance the overall experience and satisfaction of using the software.
- Considerations, discussions, or aspects related to the user experience, interface design, and usability of the software or application.
===
---
Categories:
* Community Engagement
* Software Development
* User Experience
* Learning Experience
* Technical Issues
* User Interaction
* Feedback and Appreciation

Definitions for each code:

1. Emotional Expression
Relationship: Inclusion (emotional expression is a part of user interaction)
Criteria: Expressing emotions or reactions through language or emojis.
Label: Emotional Expression
Category: User Interaction

2. Emotional Expression
Relationship: Parallel (similar to code 1)
Criteria: Instances of expressing emotions or reactions through language or emojis.
Label: Emotional Expression
Category: User Interaction

3. Positive Feedback
Relationship: Broader concept (includes appreciation for software)
Criteria: Expressing satisfaction or positive feedback about the software.
Label: Positive Feedback
Category: Feedback and Appreciation

4. User Queries
Relationship: Parallel (similar to code 5)
Criteria: Instances where users ask questions or seek clarification.
Label: User Queries
Category: User Interaction

5. Designer-Community Interaction
Relationship: Broader concept (includes collaboration and consultation)
Criteria: Designer soliciting input or feedback from community members.
Label: Designer-Community Interaction
Category: Community Engagement

6. User Interaction
Relationship: Inclusion (includes designer-user interaction)
Criteria: Users engaging with each other or the designer.
Label: User Interaction
Category: User Interaction

7. Feature Development
Relationship: Broader concept (includes feature planning and prioritization)
Criteria: Discussions or decisions related to planned software features or capabilities.
Label: Feature Development
Category: Software Development

8. Version Updates
Relationship: Parallel (similar to code 9)
Criteria: Updates and announcements about the software version.
Label: Version Updates
Category: Software Development

9. Feature Updates
Relationship: Parallel (similar to code 8)
Criteria: Discussions of new features or updates to the platform.
Label: Feature Updates
Category: Software Development

10. Learning Affordances
Relationship: Broader concept (includes learning experience)
Criteria: Features or aspects of the software that facilitate active learning or conceptual understanding.
Label: Learning Affordances
Category: Learning Experience

11. Compatibility Issues
Relationship: Parallel (similar to code 12)
Criteria: Users discussing compatibility issues with different operating systems.
Label: Compatibility Issues
Category: Technical Issues

12. Download Instructions
Relationship: Parallel (similar to code 11)
Criteria: Instructions or clarifications on how to download or install the app.
Label: Download Instructions
Category: Technical Issues

13. Active Community Participation
Relationship: Broader concept (includes community engagement)
Criteria: Evidence of community members actively engaging in discussions or providing feedback.
Label: Active Community Participation
Category: Community Engagement

14. Recognition of Effort
Relationship: Parallel (similar to code 3)
Criteria: Acknowledgment of hard work put in by members of the community.
Label: Recognition of Effort
Category: Feedback and Appreciation

15. Usability Concerns
Relationship: Parallel (similar to code 16)
Criteria: Instances where ease of use or user experience of the software are discussed.
Label: Usability Concerns
Category: User Experience

16. User Experience
Relationship: Broader concept (includes usability concerns)
Criteria: Features that enhance the overall experience and satisfaction of using the software.
Label: User Experience
Category: User Experience