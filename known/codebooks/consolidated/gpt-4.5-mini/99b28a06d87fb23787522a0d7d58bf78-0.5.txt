You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (18 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
18. 
Concepts: {Repeat the input 18}
Relationship: {What is logical relationship between concepts in code 18, or N/A if not applicable}
Criteria: {Who did what, and how for code 18}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: highlight outdated technology, highlight system limitations
- Users highlight the limitations posed by outdated technology in their environments.
- Users describe limitations of their outdated computer systems impacting software functionality.

2.
Concepts: request technical support, request usage instructions
- Users express the need for additional support in using the software.
- Users inquire about resources and help related to software features and usage instructions.

3.
Concepts: express user satisfaction, share user reviews on usability
- Users express satisfaction and appreciation for the software's features and practicality.
- Users provide positive reviews focusing on the software's usability and practicality.

4.
Concepts: seek user feedback, solicit user feedback
- Designers prompt users to provide feedback and suggestions for improvement.
- Designers request user feedback regarding their experiences with the software.

5.
Concepts: acknowledge feedback, appreciation of feedback, respond to feedback
- Designers acknowledge comments or suggestions made by users.
- Designers express gratitude for user suggestions and encourage further feedback for product improvements.
- Instances where designers respond to user feedback or suggestions.

6.
Concepts: incorporate user feedback, acknowledge user suggestions
- Designers outline priorities for future updates based on user feedback.
- Designers agree to incorporate user requests and suggestions in future updates.

7.
Concepts: confirm reasoning, confirm understanding
- Users confirm or agree with statements posed, and designers affirm those confirmations.
- Users and designers express agreement or validation of comments made.

8.
Concepts: discussion of further interests, share future development plans
- Designers discuss potential future interests or projects that may involve the community.
- Designers discuss future plans and share insights about potential developments to engage users.

9.
Concepts: apologize for inconvenience, apologies and politeness
- Designers apologize for any inconvenience caused by timing or actions.
- Expressions of politeness, apologies, or acknowledgment of potential inconvenience by the designers.

10.
Concepts: welcome users, maintain community interaction
- Designers greet users in the community to foster connection.
- Designers initiate interaction with users in a friendly manner.

11.
Concepts: announce update details, announce planned updates
- Designers make announcements about development plans and specific product version updates.
- Designers communicate planned updates, invite feedback, and inform about component usability changes.

12.
Concepts: list new features, provide feature previews
- Designers list new features added to the software and outline specific features planned for future updates.
- Designers share visual updates and outline features that will be included in future software versions.

13.
Concepts: announce software updates, announce feature updates
- Designers announce new features and improvements in software versions and their releases.
- Designers announce new features, updates, or bug fixes based on user input to enhance the software.

14.
Concepts: potential update, promise future improvements
- Designers mention potential future updates or improvements that may be necessary.
- Designers assure users of certain features in future updates and mention possibilities for future developments.

15.
Concepts: communicate release status, provide development timelines
- Designers communicate updates and expected timelines regarding software releases to users.
- Designers communicate timelines and expectations for software development progress to keep users informed.

16.
Concepts: transparency, explain feature complexities
- Designer communicates the complexity and expected timeline for a feature.
- Designers explain the complexities involved in developing features and set expectations for completion timelines.

17.
Concepts: provide feedback, suggest new features
- Users provide suggestions and feedback on features and improvements for the software.
- Users provide suggestions for specific functionalities to enhance the software's usability.

18.
Concepts: explain design rationale, explain intention of the app design
- Designers explain the objectives and rationale behind the software's design and user experience.
- A designer explains the rationale behind the app's design and its focus areas.
===
---
Definitions for each code (18 in total):
1. 
Concepts: highlight outdated technology, highlight system limitations  
Relationship: Both concepts relate to users identifying and discussing the constraints imposed by their current technological setups.  
Criteria: Users highlight the limitations posed by outdated technology and describe how these limitations impact software functionality.  
Phrase: Identify technological constraints.

2. 
Concepts: request technical support, request usage instructions  
Relationship: Both concepts involve users seeking assistance to enhance their understanding and use of the software.  
Criteria: Users express the need for additional support and inquire about resources related to software features and usage instructions.  
Phrase: Seek assistance for software usage.

3. 
Concepts: express user satisfaction, share user reviews on usability  
Relationship: Both concepts reflect user sentiments regarding the software's effectiveness and usability.  
Criteria: Users express satisfaction with the software's features and provide positive reviews focusing on usability.  
Phrase: Share positive user experiences.

4. 
Concepts: seek user feedback, solicit user feedback  
Relationship: Both concepts involve designers actively engaging users to gather insights for improvement.  
Criteria: Designers prompt users for feedback and request their experiences with the software.  
Phrase: Request user insights.

5. 
Concepts: acknowledge feedback, appreciation of feedback, respond to feedback  
Relationship: All concepts center on how designers recognize and value user contributions.  
Criteria: Designers acknowledge user comments, express gratitude, and respond to feedback for improvements.  
Phrase: Recognize and respond to user feedback.

6. 
Concepts: incorporate user feedback, acknowledge user suggestions  
Relationship: Both concepts highlight the importance of user input in shaping software updates.  
Criteria: Designers prioritize updates based on user feedback and agree to incorporate user suggestions.  
Phrase: Integrate user suggestions.

7. 
Concepts: confirm reasoning, confirm understanding  
Relationship: Both concepts involve mutual agreement and validation between users and designers.  
Criteria: Users confirm statements, and designers affirm those confirmations, indicating shared understanding.  
Phrase: Validate mutual understanding.

8. 
Concepts: discussion of further interests, share future development plans  
Relationship: Both concepts involve designers engaging with the community about potential future projects.  
Criteria: Designers discuss future interests and share insights about potential developments to engage users.  
Phrase: Engage in future planning discussions.

9. 
Concepts: apologize for inconvenience, apologies and politeness  
Relationship: Both concepts focus on the designers' approach to addressing user concerns with courtesy.  
Criteria: Designers apologize for any inconvenience and express politeness in their communications.  
Phrase: Express apologies for inconveniences.

10. 
Concepts: welcome users, maintain community interaction  
Relationship: Both concepts emphasize the importance of fostering a welcoming community atmosphere.  
Criteria: Designers greet users and initiate friendly interactions to build community connection.  
Phrase: Foster community engagement.

11. 
Concepts: announce update details, announce planned updates  
Relationship: Both concepts involve designers informing users about software developments and updates.  
Criteria: Designers announce development plans and communicate updates to invite user feedback.  
Phrase: Communicate update announcements.

12. 
Concepts: list new features, provide feature previews  
Relationship: Both concepts involve designers sharing information about current and upcoming software features.  
Criteria: Designers list new features and outline specific features planned for future updates.  
Phrase: Outline new software features.

13. 
Concepts: announce software updates, announce feature updates  
Relationship: Both concepts pertain to informing users about enhancements and fixes in the software.  
Criteria: Designers announce new features and improvements based on user input to enhance the software.  
Phrase: Inform about software enhancements.

14. 
Concepts: potential update, promise future improvements  
Relationship: Both concepts involve designers discussing the possibility of future enhancements.  
Criteria: Designers mention potential updates and assure users of future developments.  
Phrase: Discuss potential improvements.

15. 
Concepts: communicate release status, provide development timelines  
Relationship: Both concepts focus on keeping users informed about the progress of software releases.  
Criteria: Designers communicate updates and expected timelines regarding software releases and development progress.  
Phrase: Update on release timelines.

16. 
Concepts: transparency, explain feature complexities  
Relationship: Both concepts emphasize the need for open communication about software development challenges.  
Criteria: Designers explain the complexities of developing features and set expectations for completion timelines.  
Phrase: Clarify development complexities.

17. 
Concepts: provide feedback, suggest new features  
Relationship: Both concepts involve users contributing their thoughts to enhance the software's functionality.  
Criteria: Users provide suggestions and feedback on features to improve software usability.  
Phrase: Offer feature suggestions.

18. 
Concepts: explain design rationale, explain intention of the app design  
Relationship: Both concepts involve designers articulating the thought process behind the software's design.  
Criteria: Designers explain the objectives and rationale behind the app's design and user experience.  
Phrase: Articulate design rationale.
---