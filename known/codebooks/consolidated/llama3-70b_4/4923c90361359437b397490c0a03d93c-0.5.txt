You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: announcing new versions, announcing feature updates, introducing new features
- Designers announce new versions or updates with details.
- Designers discuss or announce expansions or updates of software features.
- A designer introduces or explains new features or updates.

2.
Concepts: describing updates, making announcements, announcing community updates
- Designers describe or clarify updates or changes to the community.
- Designers make announcements about the community or software.
- Designers update the community about progress, changes, or plans.

3.
Concepts: describing update scope, notify users of changes
- Designers describe the scope or content of an update.
- Designers inform users about changes, updates, or modifications to a feature or system.

4.
Concepts: updating task status, providing status updates
- Designers provide information about the current status of a task, update, or project.
- Designers provide updates on the progress of tasks, features, or updates.

5.
Concepts: announcing plans, setting development timelines
- Designers announce plans or schedules for updates or features.
- Designers establish or discuss timelines for tasks, features, or updates.

6.
Concepts: encouraging community discussion, encouraging community participation
- A designer encourages discussion or debate within the community, encouraging users to discuss or ask questions in the future.
- A designer encourages community engagement, invites feedback, or thanks users for their support, expressing appreciation for the designers' efforts.

7.
Concepts: confirming design ideas, validating user requests
- A designer confirms, acknowledges, or agrees with something.
- A designer validates or acknowledges a user's request or point.

8.
Concepts: accept feedback, responding to feedback
- Designers accept a user's suggestion or feedback.
- A designer reacts to user feedback or suggestions.

9.
Concepts: prioritizing user feedback, creating a feedback loop
- A designer takes, aligns with, and prioritizes user feedback or suggestions.
- A designer collects, considers, and implements user feedback, planning to gather feedback iteratively.

10.
Concepts: engaging in conversation, interacting with users
- A designer engages with users through conversation or dialogue.
- A designer interacts with users, responding to their comments or engaging in conversation, communicating with users, providing updates, or responding to their concerns.

11.
Concepts: open communication, direct communication
- A designer encourages open communication and feedback from users.
- Direct interactions between designers and users to discuss features, updates, and feedback.

12.
Concepts: express satisfaction, sharing positive feedback
- Users express thanks or appreciation for the software or its developers.
- Users provide positive comments or feedback about the software or its features.

13.
Concepts: sharing user experiences, commenting on software effectiveness
- Users share experiences or opinions about using the software.
- A user comments on the effectiveness of the software.

14.
Concepts: comparison, comparing software
- A user or designer compares two or more things, ideas, or concepts.
- A user compares the software with other similar software.

15.
Concepts: elaborates on ideas, suggests expansion
- Elaborating or expanding on a suggestion or idea.
- A user or designer suggests expanding the subject or topic.

16.
Concepts: offering suggestions, proposing design ideas
- A user or designer suggests improving or refining a feature or design.
- A user or designer proposes a design idea or concept, sharing potential solutions or ideas for a problem or feature.

17.
Concepts: confirming compatibility, system compatibility confirmation
- Designers confirm or verify compatibility or functionality.
- A designer confirms the compatibility of the software with a specific system or platform.

18.
Concepts: discussing system requirements, speculating on future compatibility
- Designers discuss system requirements or compatibility issues.
- A designer considers or discusses potential compatibility issues with future updates.

19.
Concepts: feature adjustment, optimizing features
- A designer discusses adjusting or refining a feature or system.
- Designers discuss the optimization or implementation of features or functionalities.

20.
Concepts: improving usability, discussing usability
- Designers discuss or propose improvements to a product or feature.
- Designers discuss the usability or user experience of the platform.

21.
Concepts: developing features, discussing design
- Designers discuss research and development activities.
- Designers discuss or consider design elements, features, or functionalities.

22.
Concepts: sharing knowledge, collaborative learning
- A designer shares knowledge or information about the software or its features.
- A designer mentions or promotes collaborative learning or sharing features in the software.

23.
Concepts: explaining the need, aligning with user needs
- A designer explains or acknowledges the need for a feature or development.
- A designer discusses aligning features or development with user needs or requirements.

24.
Concepts: explaining design philosophy, explaining design rationale
- Designers share design thoughts or philosophies behind the software.
- Designers explain plans or rationales behind a feature or development decision.

25.
Concepts: identifies as teacher, introduce teacher identity with grade-level and number of years
- A user or designer identifies themselves as a teacher or educator.
- A user introduces themselves as a teacher, including their grade level and years of experience.

26.
Concepts: shares professional background, ask about user's professional background
- Information provided by users about their professional or personal background, which helps in understanding the community's composition.
- Inquiring about a community member's professional background or experience in the Physics Lab online community.

27.
Concepts: complimenting features, appreciation of plans
- A user compliments or appreciates features of the Physics Lab online community.
- User expresses appreciation or approval of the plans or developments in the Physics Lab online community.

28.
Concepts: confirm action, express agreement
- Users or designers confirm or acknowledge a statement, request, or action.
- Users or designers express agreement or confirmation with someone else's statement.

29.
Concepts: provides update overviews, announcing new version release
- Providing a detailed overview of updates, features, or changes to the Physics Lab.
- Announcing the release of a new version of the Physics Lab.

30.
Concepts: shares development plans, discusses development goals
- A user shares or discusses development plans or priorities in the Physics Lab online community.
- Designer discusses the long-term goals or objectives of the Physics Lab online community.

31.
Concepts: discuss technical constraints, considering technical aspects
- Technical limitations or requirements are discussed.
- Designers consider hardware limitations or technical constraints.

32.
Concepts: inquiring about usage, asking about the app
- A user asks about how to use a feature or version, expressing interest in a product or feature.
- A user asks a question about the app or its features, asking a question about the platform or its features.
===
Here are the definitions for each code:

---
1.
Concepts: announcing new versions, announcing feature updates, introducing new features
Relationship: These concepts are related as they all involve designers sharing information about updates or new features.
Criteria: Designers announce or introduce new versions, features, or updates to the community.
Phrase: Announcing new developments.

2.
Concepts: describing updates, making announcements, announcing community updates
Relationship: These concepts are related as they all involve designers sharing information about updates or changes.
Criteria: Designers describe or announce updates, changes, or progress to the community.
Phrase: Making community announcements.

3.
Concepts: describing update scope, notify users of changes
Relationship: These concepts are related as they both involve designers informing users about updates or changes.
Criteria: Designers describe the scope of updates or notify users of changes.
Phrase: Notifying users of updates.

4.
Concepts: updating task status, providing status updates
Relationship: These concepts are related as they both involve designers providing information about the status of tasks or projects.
Criteria: Designers provide updates on the status of tasks, features, or updates.
Phrase: Providing status updates.

5.
Concepts: announcing plans, setting development timelines
Relationship: These concepts are related as they both involve designers sharing information about future developments.
Criteria: Designers announce plans or set timelines for updates or features.
Phrase: Announcing development plans.

6.
Concepts: encouraging community discussion, encouraging community participation
Relationship: These concepts are related as they both involve designers encouraging user engagement.
Criteria: Designers encourage discussion, debate, or participation within the community.
Phrase: Encouraging community engagement.

7.
Concepts: confirming design ideas, validating user requests
Relationship: These concepts are related as they both involve designers acknowledging or agreeing with users.
Criteria: Designers confirm or validate user requests or ideas.
Phrase: Validating user input.

8.
Concepts: accept feedback, responding to feedback
Relationship: These concepts are related as they both involve designers reacting to user feedback.
Criteria: Designers accept or respond to user feedback or suggestions.
Phrase: Responding to feedback.

9.
Concepts: prioritizing user feedback, creating a feedback loop
Relationship: These concepts are related as they both involve designers incorporating user feedback into the development process.
Criteria: Designers prioritize and implement user feedback, creating a feedback loop.
Phrase: Prioritizing user feedback.

10.
Concepts: engaging in conversation, interacting with users
Relationship: These concepts are related as they both involve designers communicating with users.
Criteria: Designers engage in conversation or interact with users.
Phrase: Engaging with users.

11.
Concepts: open communication, direct communication
Relationship: These concepts are related as they both involve open and direct exchange of information.
Criteria: Designers encourage open and direct communication with users.
Phrase: Fostering open communication.

12.
Concepts: express satisfaction, sharing positive feedback
Relationship: These concepts are related as they both involve users expressing positive sentiments.
Criteria: Users express thanks or appreciation for the software or its developers.
Phrase: Expressing gratitude.

13.
Concepts: sharing user experiences, commenting on software effectiveness
Relationship: These concepts are related as they both involve users sharing their experiences or opinions.
Criteria: Users share experiences or opinions about using the software.
Phrase: Sharing user experiences.

14.
Concepts: comparison, comparing software
Relationship: These concepts are related as they both involve comparing the software to others.
Criteria: Users or designers compare the software with other similar software.
Phrase: Making comparisons.

15.
Concepts: elaborates on ideas, suggests expansion
Relationship: These concepts are related as they both involve building upon or expanding ideas.
Criteria: Users or designers elaborate on or suggest expanding ideas or topics.
Phrase: Elaborating on ideas.

16.
Concepts: offering suggestions, proposing design ideas
Relationship: These concepts are related as they both involve users or designers suggesting improvements or new ideas.
Criteria: Users or designers suggest improving or refining features or designs.
Phrase: Offering suggestions.

17.
Concepts: confirming compatibility, system compatibility confirmation
Relationship: These concepts are related as they both involve designers verifying compatibility.
Criteria: Designers confirm the compatibility of the software with specific systems or platforms.
Phrase: Confirming compatibility.

18.
Concepts: discussing system requirements, speculating on future compatibility
Relationship: These concepts are related as they both involve designers discussing compatibility issues.
Criteria: Designers discuss system requirements or potential compatibility issues.
Phrase: Discussing system requirements.

19.
Concepts: feature adjustment, optimizing features
Relationship: These concepts are related as they both involve designers refining or improving features.
Criteria: Designers discuss adjusting or optimizing features or functionalities.
Phrase: Refining features.

20.
Concepts: improving usability, discussing usability
Relationship: These concepts are related as they both involve designers discussing or improving the user experience.
Criteria: Designers discuss or propose improvements to usability or user experience.
Phrase: Improving usability.

21.
Concepts: developing features, discussing design
Relationship: These concepts are related as they both involve designers discussing or developing features or functionalities.
Criteria: Designers discuss research and development activities or design elements.
Phrase: Developing features.

22.
Concepts: sharing knowledge, collaborative learning
Relationship: These concepts are related as they both involve designers sharing information or promoting collaborative learning.
Criteria: Designers share knowledge or promote collaborative learning or sharing features.
Phrase: Sharing knowledge.

23.
Concepts: explaining the need, aligning with user needs
Relationship: These concepts are related as they both involve designers explaining or aligning with user needs.
Criteria: Designers explain or align features or development with user needs or requirements.
Phrase: Aligning with user needs.

24.
Concepts: explaining design philosophy, explaining design rationale
Relationship: These concepts are related as they both involve designers explaining their design thoughts or philosophies.
Criteria: Designers share design thoughts or philosophies behind the software.
Phrase: Explaining design philosophy.

25.
Concepts: identifies as teacher, introduce teacher identity with grade-level and number of years
Relationship: These concepts are related as they both involve users identifying themselves as teachers.
Criteria: Users introduce themselves as teachers, including their grade level and years of experience.
Phrase: Introducing teacher identity.

26.
Concepts: shares professional background, ask about user's professional background
Relationship: These concepts are related as they both involve users sharing or inquiring about professional backgrounds.
Criteria: Users share or inquire about professional backgrounds or experience in the Physics Lab online community.
Phrase: Sharing professional background.

27.
Concepts: complimenting features, appreciation of plans
Relationship: These concepts are related as they both involve users expressing positive sentiments.
Criteria: Users compliment or appreciate features or plans in the Physics Lab online community.
Phrase: Expressing appreciation.

28.
Concepts: confirm action, express agreement
Relationship: These concepts are related as they both involve users or designers confirming or agreeing with each other.
Criteria: Users or designers confirm or express agreement with statements or requests.
Phrase: Confirming agreement.

29.
Concepts: provides update overviews, announcing new version release
Relationship: These concepts are related as they both involve designers sharing information about updates or new releases.
Criteria: Designers provide overviews of updates or announce new version releases.
Phrase: Announcing updates.

30.
Concepts: shares development plans, discusses development goals
Relationship: These concepts are related as they both involve designers sharing or discussing development plans or goals.
Criteria: Designers share or discuss development plans or long-term goals.
Phrase: Sharing development plans.

31.
Concepts: discuss technical constraints, considering technical aspects
Relationship: These concepts are related as they both involve designers discussing or considering technical limitations.
Criteria: Designers discuss or consider technical constraints or limitations.
Phrase: Discussing technical constraints.

32.
Concepts: inquiring about usage, asking about the app
Relationship: These concepts are related as they both involve users inquiring about the software or its features.
Criteria: Users ask about how to use features or versions, or inquire about the app or its features.
Phrase: Inquiring about usage.