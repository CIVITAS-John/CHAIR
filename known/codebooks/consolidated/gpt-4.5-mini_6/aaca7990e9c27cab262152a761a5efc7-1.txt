You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (7 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
7. 
Concepts: {Repeat the input 7}
Relationship: {What is logical relationship between concepts in code 7, or N/A if not applicable}
Criteria: {Who did what, and how for code 7}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: outline development plans, discuss future development
- Designers share specific details and communicate future development plans.
- Designers share information about ongoing and future development projects.

2.
Concepts: share new features, share product improvements
- Designers announce updates and new features based on user input.
- Designers communicate forthcoming improvements based on user feedback and collective input.

3.
Concepts: communicate updates, communicate updates to the community
- Designers provide information about updates and new features consistently.
- Designers inform the community about software updates and progress to facilitate clear communication.

4.
Concepts: explain software versions, explaining technical artifacts
- Designers clarify software versions and details for users seeking information.
- Designers clarify the nature of particular software versions or tools available to users.

5.
Concepts: follow up on requests, respond to inquiries
- Designers ask follow-up questions to clarify specific user requests.
- Designers respond to user inquiries with relevant information or suggestions.

6.
Concepts: communicate release timelines
- Designers provide and communicate timelines for future software releases.
- Designers share visual updates and progress reports about project changes.

7.
Concepts: inquiring for usage instructions
- Users request clarification on how to operate specific features or obtain guidance on usage.
- Users request guidance or documentation for better understanding of the software.
===
---
Definitions for each code (7 in total):
1.
Concepts: outline development plans, discuss future development  
Relationship: Both concepts involve active sharing and communication among designers about future initiatives.  
Criteria: Designers share specific details and discuss future development plans and ongoing projects.  
Phrase: Outline and discuss development plans.

2.
Concepts: share new features, share product improvements  
Relationship: These concepts relate to informing users about enhancements based on their feedback.  
Criteria: Designers announce updates and improvements derived from user input and collective feedback.  
Phrase: Share new features and improvements.

3.
Concepts: communicate updates, communicate updates to the community  
Relationship: Both concepts emphasize the importance of consistency in sharing information with the community.  
Criteria: Designers consistently provide information about updates and new features to keep the community informed.  
Phrase: Communicate updates to the community.

4.
Concepts: explain software versions, explaining technical artifacts  
Relationship: These concepts focus on clarification provided by designers regarding software and tools.  
Criteria: Designers clarify software version details and explain the nature of available tools to users.  
Phrase: Explain software versions and technical artifacts.

5.
Concepts: follow up on requests, respond to inquiries  
Relationship: The concepts represent a dialogue between designers and users where clarification is sought and provided.  
Criteria: Designers ask follow-up questions and respond to user inquiries with relevant information or suggestions.  
Phrase: Follow up on requests and respond to inquiries.

6.
Concepts: communicate release timelines  
Relationship: This concept focuses solely on the scheduling and transparency of software releases.  
Criteria: Designers provide and communicate timelines for future software releases and share progress updates.  
Phrase: Communicate release timelines.

7.
Concepts: inquiring for usage instructions  
Relationship: The concepts relate to users seeking assistance or information for better software utilization.  
Criteria: Users request clarification on how to operate specific features and seek guidance for understanding the software.  
Phrase: Inquire for usage instructions.
---