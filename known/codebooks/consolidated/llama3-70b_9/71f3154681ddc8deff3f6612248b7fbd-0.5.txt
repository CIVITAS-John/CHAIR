You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: manages expectations, managing anticipation
- Designer manages user expectations.
- Designer manages expectations by providing information.
- A designer manages user anticipation or expectations.

2.
Concepts: considers usability, prioritizes usability, demonstrates user-centered design, emphasizes usability
- A designer considers usability or user experience.
- A designer prioritizes usability or user experience.
- A designer prioritizes user needs or demonstrates a user-centered approach.
- A designer emphasizes usability or a user-centered approach.

3.
Concepts: caters to user needs, supports user needs
- A designer caters to or aligns with user needs.
- A designer supports or demonstrates responsiveness to user needs.

4.
Concepts: considers user needs, acknowledges user needs
- A designer considers or assesses user needs.
- A designer acknowledges user needs.

5.
Concepts: considers diverse user environments, designers' responsiveness to diverse user needs
- A designer considers or demonstrates awareness of diverse user environments.
- A designer's response or action that takes into account diverse user needs and environments.

6.
Concepts: design flexibility options, demonstrating design flexibility
- Designer provides design flexibility or customization options.
- Designer shows flexibility in design process or openness to ideas.

7.
Concepts: outlining simulation plans, planning for simulation details
- Outlining plans or features for simulation or experimentation.
- Designers plan and discuss details of simulations or experiments.

8.
Concepts: offering manual adjustment options, highlighting manual adjustment options
- Designers offer manual adjustment options for a feature or layout.
- Designers mention the option for manual adjustments or customization.

9.
Concepts: expresses iterative development, engaging in iterative development
- User or designer expresses iterative development process.
- Designers engage in an iterative development process influenced by user feedback, including an iterative design process with feedback and refinement.

10.
Concepts: providing examples, illustrating concepts
- Designers provide examples of a feature or its applications, providing visual examples or illustrations to clarify a concept or feature.
- Designers share an image to illustrate a concept or idea, sharing visual references or examples to clarify a concept or feature.

11.
Concepts: providing development context, explaining development process
- Designers provide context or background information about the development process, sharing insights or behind-the-scenes information.
- Designers explain the development process, including technical details or timelines, providing insight into the development process.

12.
Concepts: clarifying existing features, clarifying functionality
- Designer clarifies the existence or functionality of a feature, and explains how an existing feature works or is used.
- Designer clarifies how a feature or functionality will work, and addresses functionality, often by explaining or clarifying how something works.

13.
Concepts: clarifying design choices, providing explanations and clarification
- Designers clarify or explain design choices or decisions, explaining the reasoning or thought process behind a design choice, and promoting understanding of design decisions.
- Designer provides an explanation or clarification, and clarifies information to facilitate understanding.

14.
Concepts: functionality emphasis, emphasizing importance
- Designer emphasizes the importance of a specific feature or functionality.
- Designer stresses the importance of a task, feature, or action, and highlights the importance or significance of a particular feature or functionality.

15.
Concepts: emphasizing benefits, highlighting feature benefits, emphasizing long-term benefits
- Designer highlights the benefits or advantages of a feature or system, and explains the benefits or advantages of a feature or design decision.
- Designer highlights the benefits of a feature for long-term stability and ease of use, and emphasizes the advantages of a feature.
- Designer emphasizes the long-term benefits of a particular feature or design decision, and emphasizes the long-term benefits or value of a feature or function.

16.
Concepts: illustrates software capabilities, demonstrating software value
- The designer illustrates the software's capabilities, showcasing its potential uses and benefits.
- Designer highlights the benefits or value of the software, and highlights the benefits or advantages of using the software.

17.
Concepts: outlining functionality, highlighting functionality
- Designer outlines the functionality or features of the platform.
- Designer highlights the functionality or features of the application, and highlights the capabilities of a specific component or feature.

18.
Concepts: explaining design functionality, providing feature details, describing functionality
- Designer explains how a design feature functions, and explains or demonstrates a design principle or feature.
- Designer provides a detailed description or explanation of a feature, functionality, or component, and provides detailed information about a feature or functionality.
- Designer describes the functionality or features of a product or service, and explains or describes a feature or functionality of a product or service.

19.
Concepts: expresses desire for convenience, requesting convenience features
- User expresses a desire for convenience or ease of use.
- User expresses the need for features or functionalities that prioritize user convenience, and requests a feature or functionality that would make a task more convenient or efficient.

20.
Concepts: highlighting usability, highlight practicality or user experience
- User highlights the usability or practicality of something, and highlights the practical applications or uses of a feature.
- A user highlights the software's practicality or user experience.

21.
Concepts: justifying development priorities, highlighting development priorities
- Designer justifies development priorities or decisions.
- A designer outlines priorities for development.

22.
Concepts: setting development priorities, managing development timelines
- Designer sets priorities for development tasks.
- Designer prioritizes tasks or delays other tasks.

23.
Concepts: promoting transparency, maintaining transparency
- The designer shares information about updates, releases, or plans, promoting transparency.
- The designer maintains transparency by sharing information about the development process.

24.
Concepts: sharing future development plans, sharing development progress and plans
- A designer shares or opens up their plans for future development.
- A designer shares information about the development process or plans.

25.
Concepts: communicating progress, providing a progress report
- A designer communicates progress or updates about the tool.
- A designer provides a progress report or communicates ongoing work.

26.
Concepts: explaining development plans, outlining development plans
- A person explains development plans.
- Designer explains or clarifies plans or goals for the platform.
- A person outlines development plans or schedules.

27.
Concepts: announcing plans, announcing development roadmap
- A person announces plans for future updates or features.
- The speaker is announcing or outlining a development roadmap or future plans.

28.
Concepts: committing to updates, planning future updates
- Designer commits to implementing changes or updates in the future.
- A designer plans or commits to incorporating user suggestions in future updates.

29.
Concepts: promising future updates, promising future improvement
- A designer promises updates or developments.
- A designer promises to improve or perfect a feature in the future.

30.
Concepts: future improvement planning, considering future development
- A designer plans or discusses improvements to be made in the future.
- A designer considers or plans for future development or features.

31.
Concepts: indicating future features, confirming future features
- A designer indicates future features or updates.
- A designer confirms a future feature or functionality.

32.
Concepts: confirming feature updates, confirming feature implementation
- A designer confirms a feature update or development.
- Designer confirms the implementation of a feature or function.
- A person confirms that a requested feature will be added.
===
Here are the definitions for each code:

---
1.
Concepts: manages expectations, managing anticipation
Relationship: The concepts are related as they both involve setting users' expectations and anticipating their needs.
Criteria: Designers manage user expectations by providing information.
Phrase: Managing user expectations.

2.
Concepts: considers usability, prioritizes usability, demonstrates user-centered design, emphasizes usability
Relationship: The concepts are related as they all involve prioritizing user needs and usability in design.
Criteria: Designers prioritize user needs and usability in their design approach.
Phrase: Prioritizing usability.

3.
Concepts: caters to user needs, supports user needs
Relationship: The concepts are related as they both involve meeting user needs and providing support.
Criteria: Designers cater to and support user needs.
Phrase: Catering to user needs.

4.
Concepts: considers user needs, acknowledges user needs
Relationship: The concepts are related as they both involve recognizing and considering user needs.
Criteria: Designers consider and acknowledge user needs.
Phrase: Considering user needs.

5.
Concepts: considers diverse user environments, designers' responsiveness to diverse user needs
Relationship: The concepts are related as they both involve considering diverse user needs and environments.
Criteria: Designers consider diverse user environments and respond to user needs.
Phrase: Considering diverse user environments.

6.
Concepts: design flexibility options, demonstrating design flexibility
Relationship: The concepts are related as they both involve providing flexibility in design.
Criteria: Designers provide design flexibility options.
Phrase: Providing design flexibility.

7.
Concepts: outlining simulation plans, planning for simulation details
Relationship: The concepts are related as they both involve planning and outlining simulation details.
Criteria: Designers outline and plan simulation details.
Phrase: Outlining simulation plans.

8.
Concepts: offering manual adjustment options, highlighting manual adjustment options
Relationship: The concepts are related as they both involve providing manual adjustment options.
Criteria: Designers offer manual adjustment options.
Phrase: Offering manual adjustment options.

9.
Concepts: expresses iterative development, engaging in iterative development
Relationship: The concepts are related as they both involve engaging in an iterative development process.
Criteria: Designers engage in iterative development influenced by user feedback.
Phrase: Engaging in iterative development.

10.
Concepts: providing examples, illustrating concepts
Relationship: The concepts are related as they both involve providing visual examples to clarify concepts.
Criteria: Designers provide examples to illustrate concepts.
Phrase: Providing examples.

11.
Concepts: providing development context, explaining development process
Relationship: The concepts are related as they both involve providing context and explanations about the development process.
Criteria: Designers provide context and explain the development process.
Phrase: Providing development context.

12.
Concepts: clarifying existing features, clarifying functionality
Relationship: The concepts are related as they both involve clarifying how features work or are used.
Criteria: Designers clarify existing features and functionality.
Phrase: Clarifying features.

13.
Concepts: clarifying design choices, providing explanations and clarification
Relationship: The concepts are related as they both involve providing explanations and clarification about design choices.
Criteria: Designers clarify design choices and provide explanations.
Phrase: Clarifying design choices.

14.
Concepts: functionality emphasis, emphasizing importance
Relationship: The concepts are related as they both involve emphasizing the importance of features or functionality.
Criteria: Designers emphasize the importance of features or functionality.
Phrase: Emphasizing importance.

15.
Concepts: emphasizing benefits, highlighting feature benefits, emphasizing long-term benefits
Relationship: The concepts are related as they all involve highlighting the benefits of features or design decisions.
Criteria: Designers emphasize the benefits of features or design decisions.
Phrase: Emphasizing benefits.

16.
Concepts: illustrates software capabilities, demonstrating software value
Relationship: The concepts are related as they both involve showcasing the capabilities and value of software.
Criteria: Designers illustrate software capabilities and demonstrate value.
Phrase: Illustrating software capabilities.

17.
Concepts: outlining functionality, highlighting functionality
Relationship: The concepts are related as they both involve highlighting the functionality of a platform or application.
Criteria: Designers outline and highlight functionality.
Phrase: Outlining functionality.

18.
Concepts: explaining design functionality, providing feature details, describing functionality
Relationship: The concepts are related as they all involve explaining how design features function.
Criteria: Designers explain design functionality and provide feature details.
Phrase: Explaining design functionality.

19.
Concepts: expresses desire for convenience, requesting convenience features
Relationship: The concepts are related as they both involve expressing a desire for convenience or ease of use.
Criteria: Users express a desire for convenience or request convenience features.
Phrase: Expressing desire for convenience.

20.
Concepts: highlighting usability, highlight practicality or user experience
Relationship: The concepts are related as they both involve highlighting the usability or practicality of a feature.
Criteria: Users highlight usability or practicality.
Phrase: Highlighting usability.

21.
Concepts: justifying development priorities, highlighting development priorities
Relationship: The concepts are related as they both involve justifying or highlighting development priorities.
Criteria: Designers justify and highlight development priorities.
Phrase: Justifying development priorities.

22.
Concepts: setting development priorities, managing development timelines
Relationship: The concepts are related as they both involve setting priorities and managing timelines for development.
Criteria: Designers set development priorities and manage timelines.
Phrase: Setting development priorities.

23.
Concepts: promoting transparency, maintaining transparency
Relationship: The concepts are related as they both involve sharing information about updates, releases, or plans.
Criteria: Designers promote and maintain transparency.
Phrase: Promoting transparency.

24.
Concepts: sharing future development plans, sharing development progress and plans
Relationship: The concepts are related as they both involve sharing information about development plans and progress.
Criteria: Designers share future development plans and progress.
Phrase: Sharing development plans.

25.
Concepts: communicating progress, providing a progress report
Relationship: The concepts are related as they both involve communicating updates or progress about the tool.
Criteria: Designers communicate progress and provide reports.
Phrase: Communicating progress.

26.
Concepts: explaining development plans, outlining development plans
Relationship: The concepts are related as they both involve explaining or outlining development plans.
Criteria: Designers explain and outline development plans.
Phrase: Explaining development plans.

27.
Concepts: announcing plans, announcing development roadmap
Relationship: The concepts are related as they both involve announcing or outlining future plans or roadmaps.
Criteria: Designers announce plans and development roadmaps.
Phrase: Announcing plans.

28.
Concepts: committing to updates, planning future updates
Relationship: The concepts are related as they both involve committing to or planning future updates.
Criteria: Designers commit to and plan future updates.
Phrase: Committing to updates.

29.
Concepts: promising future updates, promising future improvement
Relationship: The concepts are related as they both involve promising updates or improvements in the future.
Criteria: Designers promise future updates and improvements.
Phrase: Promising future updates.

30.
Concepts: future improvement planning, considering future development
Relationship: The concepts are related as they both involve planning or considering future improvements or development.
Criteria: Designers plan and consider future improvements.
Phrase: Planning future improvements.

31.
Concepts: indicating future features, confirming future features
Relationship: The concepts are related as they both involve indicating or confirming future features or updates.
Criteria: Designers indicate and confirm future features.
Phrase: Indicating future features.

32.
Concepts: confirming feature updates, confirming feature implementation
Relationship: The concepts are related as they both involve confirming the implementation of features or updates.
Criteria: Designers confirm feature updates and implementation.
Phrase: Confirming feature implementation.