You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. If a sub-code includes another, use the broader one. If sub-codes are parallel, write one that covers both.
Write clear and generalizable labels and criteria for each code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization (e.g. "social interaction" instead of "interaction", "communication approach" instead of "communication").
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (19 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {Consolidated criteria of code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
19.
Relationship: {The logical relationship between sub-codes in code 19}
Criteria: {Consolidated criteria of code 19}
Label: {A consolidated label of code 19}
Category: {2-4 words for code 19}
---
~~~
1. user interest alignment, user interest exploration.
- Alignment of potential future software development with user interests
- Exploration of user interest in additional subjects or features

2. user needs, user constraints.
- Expressions of needs or desires from users.
- Noting limitations or constraints for users.

3. user roles, user role inquiry.
- Roles assigned to users within the community.
- Inquiries about the role of community members

4. user contributions, user collaboration.
- Contributions made by users to the community or software.
- Seeking input from all group members for decision-making.

5. user action, user engagement.
- Actions taken by users related to updates or changes.
- Engagement or involvement of users with the software.

6. user involvement in design, user consultation on design elements.
- Involving users in the design process of products or services.
- Seeking feedback from users on specific design elements.

7. user interface, interaction design.
- Elements related to the visual layout and design of the software.
- Design considerations related to user interactions within the software.

8. design feature explanation, design element clarification.
- Explaining features of the design for better understanding.
- Providing clarification on specific design elements.

9. design element preference, design element consideration.
- Expressing preferences for specific design elements.
- Considering different options for design elements.

10. design simplicity, user-friendly design.
- Emphasis on keeping the design and features simple.
- Focus on designing for intuitive and easy use, with minimal need for guidance

11. design decision making prompt, design decision consensus.
- Prompting decision-making on design elements.
- Involves consensus and agreement among users on design decisions and elements.

12. network accessibility, network access restrictions.
- Inquiries and discussions regarding network availability
- Imposing restrictions on network access, including classroom networks.

13. manual adjustments, technical adjustments.
- Making manual adjustments to design elements.
- Making technical adjustments for compatibility or functionality.

14. technical challenges, technical limitations.
- Issues and obstacles related to technology use
- Constraints or limitations related to the technology used.

15. automated features, technology features.
- Improving automated features for enhanced user experience.
- Features or functionalities of the technology used in the software.

16. experimental setups, experiment assessment design.
- Configurations and arrangements for experiments.
- Design plans for assessing experiments within the software

17. component functionality, functionality explanation.
- Focusing on the functionality of a specific part or element.
- Detailed explanations of software functions and capabilities.

18. product optimization, design optimization.
- Optimizing the product for better performance.
- Optimizing design elements for better functionality.

19. practicality, practical applications.
- Assessing the practicality and usefulness of software.
- Mentioning real-world applications or uses.
===
Categories:
* User Engagement
* User Needs and Constraints
* User Roles
* Design Collaboration
* Design Elements
* Design Clarity
* Interface Design
* Design Decision Making
* Network Accessibility
* Design Adjustments
* Technical Challenges
* Technology Features
* Experiment Design
* Functionality
* Product Optimization
* Practical Applications

Definitions for each code (19 in total):
1.
Relationship: Both codes involve understanding and aligning with user interests.
Criteria: Involves aligning software development with user interests and exploring new subjects or features.
Label: User Interest Alignment
Category: User Engagement

2.
Relationship: Both codes focus on understanding user requirements.
Criteria: Expressing user needs and desires, as well as noting constraints or limitations.
Label: User Needs and Constraints
Category: User Needs and Constraints

3.
Relationship: Both codes relate to user roles within the community.
Criteria: Discussing assigned roles or inquiring about the roles of community members.
Label: User Roles
Category: User Roles

4.
Relationship: Both codes pertain to user contributions and collaboration.
Criteria: Involves user contributions to the community or software, as well as seeking input from all members.
Label: User Collaboration
Category: Design Collaboration

5.
Relationship: Both codes involve user actions and engagement.
Criteria: Actions taken by users related to software updates or changes, as well as user engagement with the software.
Label: User Action
Category: User Engagement

6.
Relationship: Both codes involve user involvement in the design process.
Criteria: Involving users in product design and seeking feedback on design elements.
Label: User Involvement in Design
Category: Design Collaboration

7.
Relationship: Both codes relate to the visual and interactive aspects of the software.
Criteria: Elements related to the visual layout and design, as well as considerations for user interactions.
Label: User Interface
Category: Interface Design

8.
Relationship: Both codes focus on explaining and clarifying design features.
Criteria: Explaining design features for better understanding and clarifying specific design elements.
Label: Design Clarity
Category: Design Clarity

9.
Relationship: Both codes involve preferences and considerations for design elements.
Criteria: Expressing preferences for design elements and considering different options.
Label: Design Element Preference
Category: Design Elements

10.
Relationship: Both codes emphasize simple and user-friendly design.
Criteria: Focus on simplicity in design and user-friendly features for intuitive use.
Label: Design Simplicity
Category: Design Elements

11.
Relationship: Both codes involve decision-making on design elements.
Criteria: Prompting decision-making and seeking consensus on design decisions.
Label: Design Decision Making
Category: Design Decision Making

12.
Relationship: Both codes relate to network accessibility.
Criteria: Discussions on network availability and restrictions on network access.
Label: Network Accessibility
Category: Network Accessibility

13.
Relationship: Both codes involve making adjustments to design elements.
Criteria: Manual adjustments for design elements and technical adjustments for compatibility.
Label: Design Adjustments
Category: Design Adjustments

14.
Relationship: Both codes pertain to challenges and limitations related to technology.
Criteria: Issues and obstacles in technology use, as well as constraints in technology.
Label: Technical Challenges
Category: Technical Challenges

15.
Relationship: Both codes focus on features and functionalities of technology.
Criteria: Improving automated features and discussing technology features.
Label: Technology Features
Category: Technology Features

16.
Relationship: Both codes involve experimental setups and assessment design.
Criteria: Configurations for experiments and design plans for assessing experiments.
Label: Experiment Design
Category: Experiment Design

17.
Relationship: Both codes relate to the functionality of software.
Criteria: Focusing on specific functionalities and providing explanations on software capabilities.
Label: Functionality
Category: Functionality

18.
Relationship: Both codes involve optimization of products and designs.
Criteria: Optimizing product performance and design elements for better functionality.
Label: Product Optimization
Category: Product Optimization

19.
Relationship: Both codes focus on practicality and real-world applications.
Criteria: Assessing software practicality and mentioning real-world uses.
Label: Practicality
Category: Practical Applications