You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: expressing time constraints, time constraints in human effort
- Users express limitations or constraints due to lack of time or resources.
- Identifies time constraints as a limitation of human effort.

2.
Concepts: recognize time constraints, acknowledging the challenge of not having much time to spend on any single programming language as an expert
- Users recognize the limitations of time and expertise in learning multiple programming languages.
- Acknowledging the challenge of not having enough time to spend on any single programming language as an expert.

3.
Concepts: limited time for learning, acknowledging time constraints for language learning
- The participant acknowledges limited time for learning new extensions.
- The interviewee mentions the constraints of time when it comes to learning new languages.

4.
Concepts: limited time for each language, reflecting on limitations of being a multi-language expert
- Notes the limited time available for each language, as an expert who knows many languages.
- The participant reflects on the limitations of being an expert in multiple languages, including time constraints.

5.
Concepts: human-effort: debug, human-effort (negative): debug conceptual error
- Highlights the need for human effort and expertise in debugging, particularly for less experienced users.
- Highlighting the limitations of human effort in debugging conceptual errors

6.
Concepts: limitations of formal documentation, recognizing limitations of documented knowledge
- Recognizing the limitations of formal documentation.
- The participant recognizes the limitations of documented knowledge and the importance of oral tradition.

7.
Concepts: human-effort (negative): limited memory, limitation: human's ability is limited
- Acknowledging human limitations, such as limited memory.
- Acknowledging human limitations in understanding and problem-solving

8.
Concepts: identify "scope" challenges, including understanding concepts like "scope"
- Users identify "scope" as a challenging concept in NetLogo programming.
- Highlights challenges in understanding concepts like "scope"

9.
Concepts: needing system support, highlights need for reminders
- Users need system support to remind them of their progress and learn in fragments.
- The interviewee highlights the need for reminders or support from a system to help them remember where they were in a learning process.

10.
Concepts: need for system support for learning continuity, identifying need for context retention in learning tools
- Identifying the need for system support to recall previous work, facilitating learning continuity.
- Identifying the need for context retention in learning tools

11.
Concepts: describing fragmented learning sessions, describing fragmented learning patterns, reflect on fragmented learning experiences
- The interviewee reflects on the fragmented nature of learning sessions and the need for support.
- The participant describes fragmented learning patterns, where professionals learn in short, disconnected sessions.
- Professionals reflect on their learning process, identifying fragmented learning experiences.

12.
Concepts: suggesting need for efficient learning tools, identifying need for efficient learning tools
- The participant suggests the need for efficient learning tools to accommodate their limited time.
- The interviewee expresses the need for efficient learning tools or mentions the challenges of learning multiple languages.

13.
Concepts: knowledge in pieces, reflecting on knowledge in pieces
- Users recognize that knowledge is often fragmented and contained in oral tradition.
- Participant reflects on the importance of knowledge in pieces, such as oral tradition or undocumented knowledge.

14.
Concepts: recognizing knowledge preservation, value oral tradition and undocumented knowledge
- Users recognize the importance of preserving knowledge, particularly in oral tradition.
- Professionals value oral tradition and reflect on the importance of undocumented knowledge.

15.
Concepts: interviewee, as an expert
- Provides context about their own experiences and expertise.
- Participant speaks from the perspective of an expert, drawing on their extensive experience and knowledge.

16.
Concepts: e01's expertise in multiple languages, familiar with multiple software languages
- Displaying expertise in multiple programming languages
- Participant has experience with multiple programming languages.

17.
Concepts: sharing eclectic programming experience, familiarity with diverse software environments
- Sharing eclectic programming background, highlighting diverse experience.
- Indicating familiarity with diverse software development environments.

18.
Concepts: multilingual expertise, diverse language knowledge
- The participant has expertise in multiple languages.
- Participant demonstrates diverse language knowledge

19.
Concepts: balancing expertise across languages, juggling multiple languages and time constraints
- The participant balances expertise across multiple programming languages with time constraints.
- Juggles multiple languages and time constraints.

20.
Concepts: noticing adherence to best practices, valuing adherence to best practices
- Noticing adherence to best practices in coding.
- The participant values the interface's adherence to best practices in coding.

21.
Concepts: following best practices, acknowledging best practices adherence
- Emphasizes following best practices over creating a model.
- Emphasizing the importance of following best practices and conventions

22.
Concepts: advocating for accessible code, advocating for clear code writing
- Advocating for plain, accessible code that is easy to maintain.
- Participants advocate for clear and straightforward code writing.

23.
Concepts: emphasize code quality, discuss code simplicity
- Participants discuss the importance of code quality and maintainability.
- Participants discuss code complexity and the importance of simplicity.

24.
Concepts: need for external information integration, recognizing the importance of integrating external information
- Identifying the need for external information integration in AI systems.
- Recognizing the importance of integrating external information to improve AI performance.

25.
Concepts: error reporting improvement, recognizing the need for improvement
- Identifying the need for better error reporting and troubleshooting in AI systems.
- Identifies the need for improvement in AI's performance.

26.
Concepts: need for expert-friendly features, advocating for expert-oriented design
- The participant notes the need for expert-friendly features in the interface.
- Interviewees recognize the need for fine-tuned, expert-oriented design.

27.
Concepts: advanced error detection, future development focus
- The participant expresses the need for advanced error detection capabilities.
- The participant suggests improving error detection accuracy and providing more flexible interaction options for experienced users.

28.
Concepts: valuing clear instruction writing, highlighting the importance of clear instruction writing
- Users value the importance of writing instructions for AI collaboration, and emphasize clear instruction writing.
- Users highlight the importance of writing instructions for AI, a capability many people lack.

29.
Concepts: providing clear explanations, noting clear, non technical explanations
- Provides clear, less technical explanations of complex concepts.
- Noting clear, non-technical explanations provided by AI.

30.
Concepts: switches to simpler task, avoiding complex tasks
- Switching to a simpler task when faced with difficulties.
- Participants avoid complexity, switching to simpler tasks when faced with difficulties.

31.
Concepts: need for reset commands, identifying need for reset
- The participant realizes the need for reset commands.
- Participants identify the need to reset the setup based on the AI's generated code.

32.
Concepts: seeking clarification, seeking informative feedback
- Users clarify or seek clarification on errors or parameters.
- Participant seeks more informative feedback from AI or others to resolve issues.
===
Here are the definitions for each code:

---
1.
Concepts: expressing time constraints, time constraints in human effort
Relationship: Causal (time constraints lead to limitations in human effort)
Criteria: Users express limitations due to lack of time or resources, affecting their human effort.
Phrase: Expressing time constraints in human effort.

2.
Concepts: recognize time constraints, acknowledging the challenge of not having much time to spend on any single programming language as an expert
Relationship: Associative (recognizing time constraints is associated with being an expert)
Criteria: Users recognize the limitations of time and expertise in learning multiple programming languages.
Phrase: Recognizing time constraints as an expert.

3.
Concepts: limited time for learning, acknowledging time constraints for language learning
Relationship: Causal (limited time leads to constraints in language learning)
Criteria: Participants acknowledge limited time for learning new extensions, affecting their language learning.
Phrase: Acknowledging time constraints for language learning.

4.
Concepts: limited time for each language, reflecting on limitations of being a multi-language expert
Relationship: Associative (limited time is associated with being a multi-language expert)
Criteria: Users reflect on the limitations of being an expert in multiple languages, including time constraints.
Phrase: Reflecting on limitations of being a multi-language expert.

5.
Concepts: human-effort: debug, human-effort (negative): debug conceptual error
Relationship: Causal (human effort leads to debugging, which can be limited by conceptual errors)
Criteria: Users highlight the need for human effort and expertise in debugging, particularly for less experienced users.
Phrase: Highlighting human effort in debugging.

6.
Concepts: limitations of formal documentation, recognizing limitations of documented knowledge
Relationship: Associative (limitations of formal documentation are associated with recognized limitations of documented knowledge)
Criteria: Users recognize the limitations of formal documentation and the importance of oral tradition.
Phrase: Recognizing limitations of formal documentation.

7.
Concepts: human-effort (negative): limited memory, limitation: human's ability is limited
Relationship: Causal (human effort is limited by human ability, including limited memory)
Criteria: Users acknowledge human limitations, such as limited memory, affecting their effort.
Phrase: Acknowledging human limitations.

8.
Concepts: identify "scope" challenges, including understanding concepts like "scope"
Relationship: Associative (identifying "scope" challenges is associated with understanding concepts like "scope")
Criteria: Users identify "scope" as a challenging concept in NetLogo programming.
Phrase: Identifying "scope" challenges.

9.
Concepts: needing system support, highlights need for reminders
Relationship: Causal (needing system support leads to the need for reminders)
Criteria: Users need system support to remind them of their progress and learn in fragments.
Phrase: Highlighting need for system support.

10.
Concepts: need for system support for learning continuity, identifying need for context retention in learning tools
Relationship: Causal (need for system support leads to identifying need for context retention)
Criteria: Users identify the need for system support to recall previous work, facilitating learning continuity.
Phrase: Identifying need for system support.

11.
Concepts: describing fragmented learning sessions, describing fragmented learning patterns, reflect on fragmented learning experiences
Relationship: Associative (describing fragmented learning sessions is associated with reflecting on fragmented learning experiences)
Criteria: Users reflect on the fragmented nature of learning sessions and the need for support.
Phrase: Describing fragmented learning experiences.

12.
Concepts: suggesting need for efficient learning tools, identifying need for efficient learning tools
Relationship: Causal (suggesting need for efficient learning tools leads to identifying the need)
Criteria: Users suggest the need for efficient learning tools to accommodate their limited time.
Phrase: Suggesting need for efficient learning tools.

13.
Concepts: knowledge in pieces, reflecting on knowledge in pieces
Relationship: Associative (knowledge in pieces is associated with reflecting on knowledge in pieces)
Criteria: Users recognize that knowledge is often fragmented and contained in oral tradition.
Phrase: Reflecting on knowledge in pieces.

14.
Concepts: recognizing knowledge preservation, value oral tradition and undocumented knowledge
Relationship: Associative (recognizing knowledge preservation is associated with valuing oral tradition and undocumented knowledge)
Criteria: Users recognize the importance of preserving knowledge, particularly in oral tradition.
Phrase: Recognizing knowledge preservation.

15.
Concepts: interviewee, as an expert
Relationship: N/A
Criteria: Participants speak from the perspective of an expert, drawing on their extensive experience and knowledge.
Phrase: Speaking as an expert.

16.
Concepts: e01's expertise in multiple languages, familiar with multiple software languages
Relationship: Associative (expertise in multiple languages is associated with being familiar with multiple software languages)
Criteria: Participants display expertise in multiple programming languages.
Phrase: Displaying expertise in multiple languages.

17.
Concepts: sharing eclectic programming experience, familiarity with diverse software environments
Relationship: Associative (sharing eclectic programming experience is associated with familiarity with diverse software environments)
Criteria: Users share eclectic programming background, highlighting diverse experience.
Phrase: Sharing eclectic programming experience.

18.
Concepts: multilingual expertise, diverse language knowledge
Relationship: Associative (multilingual expertise is associated with diverse language knowledge)
Criteria: Participants demonstrate diverse language knowledge.
Phrase: Demonstrating multilingual expertise.

19.
Concepts: balancing expertise across languages, juggling multiple languages and time constraints
Relationship: Causal (balancing expertise leads to juggling multiple languages and time constraints)
Criteria: Users balance expertise across multiple programming languages with time constraints.
Phrase: Balancing expertise across languages.

20.
Concepts: noticing adherence to best practices, valuing adherence to best practices
Relationship: Associative (noticing adherence is associated with valuing adherence to best practices)
Criteria: Users notice adherence to best practices in coding.
Phrase: Noticing adherence to best practices.

21.
Concepts: following best practices, acknowledging best practices adherence
Relationship: Causal (following best practices leads to acknowledging adherence)
Criteria: Users emphasize following best practices over creating a model.
Phrase: Emphasizing best practices adherence.

22.
Concepts: advocating for accessible code, advocating for clear code writing
Relationship: Associative (advocating for accessible code is associated with advocating for clear code writing)
Criteria: Users advocate for plain, accessible code that is easy to maintain.
Phrase: Advocating for accessible code.

23.
Concepts: emphasize code quality, discuss code simplicity
Relationship: Associative (emphasizing code quality is associated with discussing code simplicity)
Criteria: Users discuss the importance of code quality and maintainability.
Phrase: Emphasizing code quality.

24.
Concepts: need for external information integration, recognizing the importance of integrating external information
Relationship: Causal (need for external information integration leads to recognizing importance)
Criteria: Users identify the need for external information integration in AI systems.
Phrase: Recognizing need for external information integration.

25.
Concepts: error reporting improvement, recognizing the need for improvement
Relationship: Causal (error reporting improvement leads to recognizing the need for improvement)
Criteria: Users identify the need for better error reporting and troubleshooting in AI systems.
Phrase: Recognizing need for error reporting improvement.

26.
Concepts: need for expert-friendly features, advocating for expert-oriented design
Relationship: Causal (need for expert-friendly features leads to advocating for expert-oriented design)
Criteria: Users note the need for expert-friendly features in the interface.
Phrase: Advocating for expert-friendly features.

27.
Concepts: advanced error detection, future development focus
Relationship: Causal (advanced error detection leads to future development focus)
Criteria: Users express the need for advanced error detection capabilities.
Phrase: Advocating for advanced error detection.

28.
Concepts: valuing clear instruction writing, highlighting the importance of clear instruction writing
Relationship: Associative (valuing clear instruction writing is associated with highlighting importance)
Criteria: Users value the importance of writing instructions for AI collaboration, and emphasize clear instruction writing.
Phrase: Valuing clear instruction writing.

29.
Concepts: providing clear explanations, noting clear, non technical explanations
Relationship: Associative (providing clear explanations is associated with noting clear, non-technical explanations)
Criteria: Users provide clear, less technical explanations of complex concepts.
Phrase: Providing clear explanations.

30.
Concepts: switches to simpler task, avoiding complex tasks
Relationship: Causal (switching to simpler task leads to avoiding complex tasks)
Criteria: Users switch to a simpler task when faced with difficulties.
Phrase: Switching to simpler tasks.

31.
Concepts: need for reset commands, identifying need for reset
Relationship: Causal (need for reset commands leads to identifying need for reset)
Criteria: Users realize the need for reset commands.
Phrase: Identifying need for reset commands.

32.
Concepts: seeking clarification, seeking informative feedback
Relationship: Causal (seeking clarification leads to seeking informative feedback)
Criteria: Users clarify or seek clarification on errors or parameters.
Phrase: Seeking clarification and feedback.