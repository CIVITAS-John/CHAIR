You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: user engagement
- Instances where users actively participate in the conversation, showing interest or involvement in the community.
- Instances where users engage with designers through questions, feedback, or expressions of anticipation.
- Instances where users actively participate in the conversation, showing interest and involvement.

2.
Concepts: confirmation
- Confirmation or agreement is expressed, often in response to a question or statement.
- Confirming or agreeing with a statement or argument made by another user.

3.
Concepts: user response
- Input and suggestions provided by users regarding the design and functionality of the product.
- Instances where users provide feedback or ask questions that influence the design process.
- Instances where users provide feedback or suggestions to improve the software.
- Instances where users provide suggestions or feedback on features and functionalities.
- Instances where users provide feedback or ask questions about the app's development and updates.

4.
Concepts: resources sharing
- Instances where designers or users share resources, such as download links, development plans, or announcements.
- Information about where and how to access resources, files, or downloads related to Physics Lab.
- Instances where users or designers share files, images, or other resources with the community.

5.
Concepts: promote participatory design
- Instances where the community contributes to the design and development of the Physics Lab by providing suggestions or feedback that influence the development process.
- Instances where designers seek or consider user input in the design and development process.
- Instances where users are invited to participate in the design process or provide input.
- Instances where users and designers collaboratively discuss features and usability, reflecting a user-centered design approach.
- The involvement of users in the design and development process, contributing their insights and needs.
- Encouragement by designers for users to contribute ideas, feedback, and suggestions for the development of Physics Lab.
- Active involvement of users in the design process to ensure the product meets their needs and preferences.
- The involvement of users in the design process to ensure the product meets their needs and preferences.
- Instances where users and designers collaboratively discuss or work on design improvements.

6.
Concepts: feature update
- Instances where designers announce new features, updates, or bug fixes based on user input.
- Information about new features and updates being added to the product.

7.
Concepts: iterative development
- Instances where designers discuss updates, new features, or bug fixes.
- The process of repeatedly refining and improving a product based on feedback and testing.
- The process of continuously improving the product based on feedback and testing.
- Instances where the design process is described as iterative, with ongoing optimizations and updates.

8.
Concepts: designer responsiveness
- Instances where designers respond to user queries or engage with user comments, indicating active communication between designers and users.
- Instances where designers respond to user inquiries, suggestions, or feedback.
- Instances where designers respond to user feedback or suggestions.
- Instances where designers acknowledge user feedback and discuss potential solutions or updates.
- Designers responding to user feedback and addressing their concerns or suggestions.
- Instances where designers respond to user queries or feedback, showing attentiveness to user needs.

9.
Concepts: development transparency
- Instances where designers provide detailed information about development processes, challenges, and progress.
- Keeping the community informed about the development process and upcoming changes.

10.
Concepts: practical application
- Instances where the practical application of the software in educational settings is discussed.
- Highlighting the practical applications or benefits of the Physics Lab software.

11.
Concepts: technical constraints
- Instances where technical limitations or requirements are discussed.
- Instances where limitations or constraints of the software are mentioned.

12.
Concepts: user feedback integration
- Instances where user feedback is acknowledged and incorporated into the design process.
- Instances where user feedback is actively sought and incorporated into the design process.
===
Here are the definitions for each code:

---
1.
Concepts: user engagement
Relationship: The concepts are related as they all describe instances of users actively participating in the conversation, showing interest, and involvement in the community.
Criteria: Users actively participate in the conversation, showing interest and involvement in the community.
Phrase: Engaging in the conversation.

2.
Concepts: confirmation
Relationship: The concepts are related as they both describe instances of agreement or confirmation expressed by users.
Criteria: Users express confirmation or agreement with a statement or argument made by another user.
Phrase: Confirming or agreeing.

3.
Concepts: user response
Relationship: The concepts are related as they all describe instances of users providing input, suggestions, or feedback that influence the design process.
Criteria: Users provide input, suggestions, or feedback that influence the design process.
Phrase: Providing feedback or suggestions.

4.
Concepts: resources sharing
Relationship: The concepts are related as they all describe instances of sharing resources, files, or information within the community.
Criteria: Designers or users share resources, files, or information with the community.
Phrase: Sharing resources.

5.
Concepts: promote participatory design
Relationship: The concepts are related as they all describe instances of involving users in the design and development process.
Criteria: Designers involve users in the design and development process, seeking their input and feedback.
Phrase: Involving users in design.

6.
Concepts: feature update
Relationship: The concepts are related as they both describe instances of announcing new features or updates based on user input.
Criteria: Designers announce new features or updates based on user input.
Phrase: Announcing updates.

7.
Concepts: iterative development
Relationship: The concepts are related as they all describe the process of refining and improving the product based on feedback and testing.
Criteria: Designers refine and improve the product based on feedback and testing.
Phrase: Refining the product.

8.
Concepts: designer responsiveness
Relationship: The concepts are related as they all describe instances of designers responding to user queries, comments, or feedback.
Criteria: Designers respond to user queries, comments, or feedback, indicating active communication.
Phrase: Responding to users.

9.
Concepts: development transparency
Relationship: The concepts are related as they both describe instances of providing detailed information about development processes and progress.
Criteria: Designers provide detailed information about development processes and progress.
Phrase: Providing development updates.

10.
Concepts: practical application
Relationship: The concepts are related as they both describe instances of discussing the practical application of the software in educational settings.
Criteria: Users discuss the practical application of the software in educational settings.
Phrase: Discussing practical applications.

11.
Concepts: technical constraints
Relationship: The concepts are related as they both describe instances of discussing technical limitations or requirements.
Criteria: Users discuss technical limitations or requirements of the software.
Phrase: Discussing technical constraints.

12.
Concepts: user feedback integration
Relationship: The concepts are related as they both describe instances of acknowledging and incorporating user feedback into the design process.
Criteria: Designers acknowledge and incorporate user feedback into the design process.
Phrase: Integrating user feedback.