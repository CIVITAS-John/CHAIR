You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (19 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
19. 
Concepts: {Repeat the input 19}
Relationship: {What is logical relationship between concepts in code 19, or N/A if not applicable}
Criteria: {Who did what, and how for code 19}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: offering user support, offering personalized assistance
- The designer offers assistance and support to users encountering problems.
- A designer offers personalized assistance to a user.

2.
Concepts: understanding and addressing user needs, confirming understanding and alignment with user needs
- A designer expresses comprehension of user needs, emphasizes their importance, and identifies specific needs.
- Users or the designer confirm understanding or agreement that user needs will be addressed.

3.
Concepts: encouraging communication and problem reporting, encouraging engagement and promoting communication
- The designer encourages group communication and users to report problems for resolution.
- Designers encourage user interaction and feedback, promoting open dialogue and in-group discussions.

4.
Concepts: adapting design based on feedback, suggesting alternatives and seeking design consensus
- Designers adapt or modify the design plan based on user feedback.
- Designers make suggestions and discuss providing alternatives based on feedback, propose new design ideas, and seek consensus or agreement on design ideas.

5.
Concepts: previewing updates, describing and detailing updates
- Designers preview updates, detail new features, and list improvements.
- Designers describe the scope and introduce the content of updates, providing detailed descriptions of new features, components, updates, and bug fixes.

6.
Concepts: confirming update status, confirming and committing to updates
- Users or designers confirm the status or completion of updates.
- Designers confirm the timeline for upcoming updates and commit to future updates and feature implementations.

7.
Concepts: collaborative planning, discussing future plans and project planning
- Designers and users collaboratively discussing and planning the development of the software.
- Designers and participants discuss and describe future plans, development goals, and project management before starting new projects.

8.
Concepts: providing feature guidance, explaining features with examples
- A designer provides detailed guidance on how to use features.
- A designer provides examples to clarify how a feature functions and explains its intended use.

9.
Concepts: describing long-term benefits, explaining design rationale and principles
- Designers explain the rationale and long-term benefits of particular designs or features.
- Designers explain the design rationale for user experience and the design goals and principles behind features or tools.

10.
Concepts: user experience in educational contexts, discussing educational context and challenges
- User experiences and challenges in using the software within educational settings.
- Users and designers discuss the educational context and its challenges, including technical or infrastructural challenges faced in educational settings.

11.
Concepts: discussing and addressing technical constraints, discussing workarounds and platform-specific constraints
- Individuals discuss specific technical considerations or constraints of the software and mention technical issues or limitations, addressing them accordingly.
- Designers explain how a limitation can be addressed or worked around and discuss solution limitations, mentioning platform limitations and adapting the software to meet these constraints.

12.
Concepts: inquiring about updates and software versions, clarifying software version and discussing updates
- Users inquire about the availability or timeline of software updates and specific software versions or platforms.
- Users or designers clarify the type or version of software or updates being discussed, sharing information about platform-specific updates and downloads.

13.
Concepts: engaging in technical q&a, making technical inquiries
- Users and designers ask and answer technical questions related to design or support.
- Users ask technical questions about the platform, seeking knowledge or resources related to specific software platforms.

14.
Concepts: requesting resources, requesting help and seeking support
- Users request resources such as download links or manuals and ask for their location.
- Users or designers request guidance, technical help, or support for software usage, seeking help and inquiring about download instructions or software access.

15.
Concepts: encouraging participatory design, involving community and encouraging participation
- Instances where the community contributes to the design and development process.
- Designers consult the community for input and offer co-designing opportunities, encouraging community participation and feedback.

16.
Concepts: community response, community feedback
- Users respond to each other within the community.
- Users providing feedback and suggestions to improve the product.

17.
Concepts: praising software quality, admiring design effort and visual appreciation
- Users express satisfaction and admiration for the software's quality and craftsmanship.
- Users express appreciation and admiration for the designers' efforts and the visual design aspects of the software.

18.
Concepts: appreciation of features, acknowledging features and requests
- A user appreciates specific features and requests additional ones.
- Users acknowledge and appreciate specific features or updates, including requested features.

19.
Concepts: expressing gratitude, appreciating in positive interactions
- Users express gratitude for resources and contributions.
- Users express thanks or appreciation during positive interactions.
===
---
Definitions for each code (19 in total):
1.
Concepts: offering user support, offering personalized assistance
Relationship: Both concepts involve providing help to users.
Criteria: Designers offer general and personalized assistance to users encountering problems.
Phrase: Providing user support

2.
Concepts: understanding and addressing user needs, confirming understanding and alignment with user needs
Relationship: Both concepts involve recognizing and validating user needs.
Criteria: Designers and users confirm and align on understanding and addressing specific user needs.
Phrase: Aligning on user needs

3.
Concepts: encouraging communication and problem reporting, encouraging engagement and promoting communication
Relationship: Both concepts involve fostering communication among users.
Criteria: Designers encourage users to communicate, report problems, and engage in discussions.
Phrase: Promoting communication

4.
Concepts: adapting design based on feedback, suggesting alternatives and seeking design consensus
Relationship: Both concepts involve modifying design based on user input.
Criteria: Designers adapt designs based on feedback and propose alternatives to reach consensus.
Phrase: Adapting design with feedback

5.
Concepts: previewing updates, describing and detailing updates
Relationship: Both concepts involve communicating information about updates.
Criteria: Designers preview and provide detailed descriptions of updates, including new features and improvements.
Phrase: Detailing updates

6.
Concepts: confirming update status, confirming and committing to updates
Relationship: Both concepts involve verifying and committing to updates.
Criteria: Designers confirm the status and timeline of updates, committing to future implementations.
Phrase: Confirming updates

7.
Concepts: collaborative planning, discussing future plans and project planning
Relationship: Both concepts involve planning and discussing future development.
Criteria: Designers and users collaboratively discuss and plan future development goals and projects.
Phrase: Planning collaboratively

8.
Concepts: providing feature guidance, explaining features with examples
Relationship: Both concepts involve explaining how to use features.
Criteria: Designers provide detailed guidance and examples to clarify feature usage.
Phrase: Explaining feature usage

9.
Concepts: describing long-term benefits, explaining design rationale and principles
Relationship: Both concepts involve explaining the reasoning behind design choices.
Criteria: Designers explain the rationale, principles, and long-term benefits of design choices.
Phrase: Explaining design rationale

10.
Concepts: user experience in educational contexts, discussing educational context and challenges
Relationship: Both concepts involve discussing the use of software in educational settings.
Criteria: Users and designers discuss experiences and challenges of using the software in educational contexts.
Phrase: Discussing educational use

11.
Concepts: discussing and addressing technical constraints, discussing workarounds and platform-specific constraints
Relationship: Both concepts involve addressing technical limitations.
Criteria: Designers and users discuss technical constraints and workarounds specific to different platforms.
Phrase: Addressing technical constraints

12.
Concepts: inquiring about updates and software versions, clarifying software version and discussing updates
Relationship: Both concepts involve seeking information about updates and versions.
Criteria: Users and designers inquire about and clarify information regarding software updates and versions.
Phrase: Inquiring about updates

13.
Concepts: engaging in technical q&a, making technical inquiries
Relationship: Both concepts involve asking and answering technical questions.
Criteria: Users and designers engage in technical Q&A sessions to address specific platform-related questions.
Phrase: Engaging in technical Q&A

14.
Concepts: requesting resources, requesting help and seeking support
Relationship: Both concepts involve seeking assistance or resources.
Criteria: Users request resources, help, or support for software usage.
Phrase: Requesting support

15.
Concepts: encouraging participatory design, involving community and encouraging participation
Relationship: Both concepts involve community involvement in design.
Criteria: Designers encourage community participation and co-design opportunities.
Phrase: Encouraging participatory design

16.
Concepts: community response, community feedback
Relationship: Both concepts involve feedback from the community.
Criteria: Users provide feedback and respond to each other within the community.
Phrase: Providing community feedback

17.
Concepts: praising software quality, admiring design effort and visual appreciation
Relationship: Both concepts involve expressing admiration for the software.
Criteria: Users express satisfaction and admiration for the software's quality and design efforts.
Phrase: Praising software quality

18.
Concepts: appreciation of features, acknowledging features and requests
Relationship: Both concepts involve appreciation and acknowledgment of features.
Criteria: Users appreciate specific features and acknowledge requests for additional ones.
Phrase: Appreciating features

19.
Concepts: expressing gratitude, appreciating in positive interactions
Relationship: Both concepts involve expressing thanks and appreciation.
Criteria: Users express gratitude and appreciation during positive interactions.
Phrase: Expressing gratitude
---