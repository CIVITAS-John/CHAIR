You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (21 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
21. 
Concepts: {Repeat the input 21}
Relationship: {What is logical relationship between concepts in code 21, or N/A if not applicable}
Criteria: {Who did what, and how for code 21}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: expressing frustration, express frustration humorously
- The designer expresses frustration with current limitations or constraints.
- A designer expresses frustration or humorously comments on a situation.
- A user expresses frustration or disappointment.

2.
Concepts: identifying usability issues, identifying software limitations
- A user identifies a usability issue or problem with the software.
- A user identifies a gap or limitation in the current software.

3.
Concepts: raising concerns, noting potential issues, acknowledged potential issue
- The designer raises a potential issue or problem.
- The designer notes a potential bug or issue.
- Designer acknowledges a potential issue or problem that needs to be addressed.
- Designer acknowledges potential issue with XP compatibility.

4.
Concepts: acknowledge user need, acknowledge need for feature
- Designer acknowledges a user's need or concern
- A designer acknowledges the need for a feature.

5.
Concepts: acknowledge usability issue, acknowledging usability challenges
- Designer acknowledges usability issue.
- The designer acknowledges a usability challenge or issue.

6.
Concepts: build rapport
- A designer builds rapport with users, often through casual conversations or personal questions.
- User shares personal information to build rapport with others.

7.
Concepts: justify efforts
- Designer gives opinion on why something is important for future perfection.
- Designer justifies efforts to make something better.

8.
Concepts: providing practical advice
- A designer provides practical advice or a solution.
- The designer provides practical advice or tips for using the application.

9.
Concepts: considering future compatibility
- A designer considers or discusses potential future developments or compatibility issues.
- Considering future compatibility or potential issues with the software.

10.
Concepts: immediate help
- Designer offers immediate assistance or support.
- Designer provides immediate assistance or support.

11.
Concepts: emphasizing quality
- The designer emphasizes the importance of quality in the development process.
- Designer emphasizes the importance of quality in the development process.
- Designer emphasizes the importance of a particular aspect (e.g., auto-generated layout).

12.
Concepts: access information
- Designer answers a question about access or availability
- User asks about accessing a specific feature or functionality.

13.
Concepts: elaborate
- A designer elaborates on a topic or provides additional information or context.
- A designer provides additional information or clarification on a topic.

14.
Concepts: maintaining engagement
- A designer maintains engagement with users, often through humor or light conversation.
- A user maintains engagement or responds to a designer's question.
- Designer maintains engagement with users through regular updates or messages.

15.
Concepts: inclusive planning
- Designer ensures inclusivity in planning or decision-making.
- Involving the community in decision-making or planning processes.

16.
Concepts: gave usage instructions
- Designer provides instructions or guidance on how to use a product or tool.
- Designer provides instructions on how to use the app or a specific feature.

17.
Concepts: engaging in dialogue
- A user engages in a dialogue or conversation with others.
- User and designer engage in a dialogue or conversation.
- A designer engages in a dialogue with a user, responding to their questions or concerns.
- Engaging in a dialogue or conversation with the designer or community.

18.
Concepts: user engagement
- Designer maintains user engagement or encourages participation
- Designer engages with users, shares interests, or builds relationships.

19.
Concepts: self-rebuttal
- Designer corrects or refutes their previous response or statement.
- Questioning or rebutting one's own previous statement.

20.
Concepts: seeking community input
- Designer solicits opinions or feedback from the community before making decisions.
- The designer acknowledges or seeks expertise from the community.

21.
Concepts: version clarification
- A designer clarifies the type or version of a product or feature.
- A designer clarifies version information or differences.
- Designer clarifies version release or update information.
===
Here are the definitions for each code:

---
1.
Concepts: expressing frustration, express frustration humorously
Relationship: The concepts are related as they both convey a sense of frustration, with the latter adding a humorous tone.
Criteria: A designer or user expresses frustration or disappointment, possibly with a humorous tone.
Phrase: Expressing frustration humorously.

2.
Concepts: identifying usability issues, identifying software limitations
Relationship: The concepts are related as they both involve recognizing problems or gaps in the software.
Criteria: A user identifies a problem or limitation with the software.
Phrase: Identifying software limitations.

3.
Concepts: raising concerns, noting potential issues, acknowledged potential issue
Relationship: The concepts are related as they all involve bringing attention to potential problems or issues.
Criteria: A designer raises, notes, or acknowledges a potential issue or problem.
Phrase: Raising concerns about potential issues.

4.
Concepts: acknowledge user need, acknowledge need for feature
Relationship: The concepts are related as they both involve recognizing the importance of a feature or need.
Criteria: A designer acknowledges a user's need or concern for a feature.
Phrase: Acknowledging user needs.

5.
Concepts: acknowledge usability issue, acknowledging usability challenges
Relationship: The concepts are related as they both involve recognizing usability problems.
Criteria: A designer acknowledges a usability issue or challenge.
Phrase: Acknowledging usability issues.

6.
Concepts: build rapport
Relationship: N/A
Criteria: A designer or user builds rapport with others through casual conversations or personal questions.
Phrase: Building rapport with users.

7.
Concepts: justify efforts
Relationship: N/A
Criteria: A designer explains why something is important for future perfection.
Phrase: Justifying efforts.

8.
Concepts: providing practical advice
Relationship: N/A
Criteria: A designer provides practical advice or a solution.
Phrase: Providing practical advice.

9.
Concepts: considering future compatibility
Relationship: N/A
Criteria: A designer considers or discusses potential future developments or compatibility issues.
Phrase: Considering future compatibility.

10.
Concepts: immediate help
Relationship: N/A
Criteria: A designer offers immediate assistance or support.
Phrase: Providing immediate help.

11.
Concepts: emphasizing quality
Relationship: N/A
Criteria: A designer emphasizes the importance of quality in the development process.
Phrase: Emphasizing quality.

12.
Concepts: access information
Relationship: N/A
Criteria: A designer answers a question about access or availability.
Phrase: Providing access information.

13.
Concepts: elaborate
Relationship: N/A
Criteria: A designer elaborates on a topic or provides additional information or context.
Phrase: Elaborating on a topic.

14.
Concepts: maintaining engagement
Relationship: N/A
Criteria: A designer maintains engagement with users through humor, light conversation, or regular updates.
Phrase: Maintaining user engagement.

15.
Concepts: inclusive planning
Relationship: N/A
Criteria: A designer ensures inclusivity in planning or decision-making.
Phrase: Planning inclusively.

16.
Concepts: gave usage instructions
Relationship: N/A
Criteria: A designer provides instructions or guidance on how to use a product or tool.
Phrase: Providing usage instructions.

17.
Concepts: engaging in dialogue
Relationship: N/A
Criteria: A user or designer engages in a conversation or dialogue with others.
Phrase: Engaging in dialogue.

18.
Concepts: user engagement
Relationship: N/A
Criteria: A designer maintains user engagement or encourages participation.
Phrase: Encouraging user engagement.

19.
Concepts: self-rebuttal
Relationship: N/A
Criteria: A designer corrects or refutes their previous response or statement.
Phrase: Correcting oneself.

20.
Concepts: seeking community input
Relationship: N/A
Criteria: A designer solicits opinions or feedback from the community before making decisions.
Phrase: Seeking community input.

21.
Concepts: version clarification
Relationship: N/A
Criteria: A designer clarifies the type or version of a product or feature.
Phrase: Clarifying version information.