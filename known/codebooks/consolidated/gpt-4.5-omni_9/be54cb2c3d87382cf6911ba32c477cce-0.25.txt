You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (11 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
11. 
Concepts: {Repeat the input 11}
Relationship: {What is logical relationship between concepts in code 11, or N/A if not applicable}
Criteria: {Who did what, and how for code 11}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: communicating development progress, communicating update timelines and delays
- Designers communicate development progress and provide status updates.
- Designers explain delays and communicate update timelines.

2.
Concepts: prioritizing and gathering user feedback, discuss feature development and prioritization
- Designers prioritize and gather user feedback in their development plans.
- Designers discuss feature development and its prioritization.

3.
Concepts: design adaptation, discussing feature adjustments
- Designers discuss the need for design adaptations.
- Designers discuss the flexibility of features and manual adjustments to components.

4.
Concepts: discussing technical constraints, addressing technical constraints
- Designers discuss system requirements, technical constraints, and ensure compatibility.
- Designers explain team, feature, platform, and version limitations, highlighting technical constraints.

5.
Concepts: clarifying requests, seeking and providing clarification
- Users restate requests for clarity, and designers respond to questions or clarifications about functionality.
- Designers express understanding, seek more information, or provide technical clarification.

6.
Concepts: encouraging detailed feedback, engaging with feature requests
- Designers encourage open communication and detailed feedback from users.
- Designers respond to or invite feedback and suggestions for new features or improvements.

7.
Concepts: acknowledging user feedback, acknowledging suggestions
- Designers acknowledge a user's experience, observation, or feedback.
- Users or designers affirm or acknowledge each other's points, suggestions, or responses.

8.
Concepts: educational challenges, user experience in educational contexts
- Users and designers discuss technical and infrastructural challenges in educational settings.
- User experiences and challenges in using the software within educational settings.

9.
Concepts: inquiring about the app, seeking guidance and support
- Users ask questions about the app or its features, seeking information or clarification.
- Users seek guidance and request technical support for using the application.

10.
Concepts: proposing new features, suggesting educational enhancements
- Users propose and request additional features for the software.
- Users suggest further educational enhancements or new features for the application.

11.
Concepts: soliciting user needs, highlighting community needs
- Users or designers solicit suggestions, indicate potential needs, or highlight usability requirements.
- Users make detailed requests for specific features or functionalities needed by the community.
===
---
Definitions for each code (11 in total):
1.
Concepts: communicating development progress, communicating update timelines and delays
Relationship: Both involve the communication of project status and timelines.
Criteria: Designers communicate development progress and explain delays or update timelines.
Phrase: Communicating project status

2.
Concepts: prioritizing and gathering user feedback, discuss feature development and prioritization
Relationship: Both involve user feedback and its role in feature development.
Criteria: Designers prioritize and gather user feedback while discussing feature development and its prioritization.
Phrase: Integrating user feedback

3.
Concepts: design adaptation, discussing feature adjustments
Relationship: Both involve discussions about changes and adjustments to design features.
Criteria: Designers discuss the need for design adaptations and the flexibility of features for adjustments.
Phrase: Discussing design changes

4.
Concepts: discussing technical constraints, addressing technical constraints
Relationship: Both involve identifying and addressing technical limitations.
Criteria: Designers discuss and address technical constraints related to system requirements and compatibility.
Phrase: Addressing technical limitations

5.
Concepts: clarifying requests, seeking and providing clarification
Relationship: Both involve the process of seeking and providing clarity on requests.
Criteria: Users and designers seek and provide clarification on requests and functionality.
Phrase: Clarifying requests

6.
Concepts: encouraging detailed feedback, engaging with feature requests
Relationship: Both involve encouraging and responding to user feedback and feature requests.
Criteria: Designers encourage detailed feedback and engage with users' feature requests.
Phrase: Engaging with user feedback

7.
Concepts: acknowledging user feedback, acknowledging suggestions
Relationship: Both involve recognizing and affirming user input.
Criteria: Designers acknowledge user feedback and suggestions.
Phrase: Acknowledging user input

8.
Concepts: educational challenges, user experience in educational contexts
Relationship: Both involve discussing challenges and experiences in educational settings.
Criteria: Users and designers discuss educational challenges and user experiences with the software.
Phrase: Discussing educational challenges

9.
Concepts: inquiring about the app, seeking guidance and support
Relationship: Both involve users seeking information and support for the app.
Criteria: Users inquire about the app and seek guidance or technical support.
Phrase: Seeking app support

10.
Concepts: proposing new features, suggesting educational enhancements
Relationship: Both involve users suggesting new features or enhancements.
Criteria: Users propose new features and suggest educational enhancements for the application.
Phrase: Suggesting new features

11.
Concepts: soliciting user needs, highlighting community needs
Relationship: Both involve identifying and highlighting the needs of the user community.
Criteria: Users or designers solicit and highlight specific needs or usability requirements of the community.
Phrase: Identifying community needs
---