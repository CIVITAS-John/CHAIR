You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: consulting teachers or experts, inquiring about teachers' needs
- Designers consult or seek input from teachers or experts in the field.
- Designers inquire about teachers' needs or consult and involve teachers in the design process.

2.
Concepts: consulting on educational standards, aligning with educational requirements
- Designers consult with users or experts on educational standards or best practices.
- Designers align with curriculum, educational needs, or educational standards.

3.
Concepts: planning for future engagement, announcing and promising future consultation, planning and promising feedback gathering
- A designer plans or proposes to consult with users or the community and plans or announces future engagement or interaction with the community.
- Designers announce future consultation or collaboration and promise future consultation with the community.
- Designers plan to gather opinions and feedback in the future and promise to invite feedback from everyone in the group.

4.
Concepts: suggesting future possibilities, planning and acknowledging future development
- A designer suggests or explores future possibilities or opportunities.
- A designer plans for future improvement or refinement, acknowledges plans or intentions for future development, and suggests or considers future expansion or development of the project.

5.
Concepts: confirming updates and releases, confirming updates and completion
- Designers confirm update schedules or release dates and confirm or announce updates or releases of new features or versions.
- Designers provide confirmations of updates or changes and acknowledge completion or fulfillment of tasks or updates.

6.
Concepts: informing about platform updates, introducing and informing about updates, communicating changes and updates, providing update information
- Designers inform about updates or changes specific to a particular platform and inform about platform-specific releases or updates.
- A designer introduces or summarizes the content of an update, informs users about changes or prepares them for upcoming changes, and provides information about the product, such as updates, features, or changes.
- Designers communicate the availability of new versions, updates, or features and communicate changes, updates, or adjustments to software components or features.
- Designers provide notifications about technical changes or updates, provide notes or updates on software versions or releases, and inform about internal updates or changes to the software.

7.
Concepts: promising future development, promising and expressing hope for progress
- A designer promises to develop an app or feature in the future and promises to perfect or improve a feature in the future.
- Designer assures users that an update is in progress and expresses hope or optimism for progress or completion of a feature.

8.
Concepts: clarifying version details, clarifying software versions
- Designer clarifies or provides details about a specific version of Physics Lab.
- A designer clarifies the type, releases, or information about a software version.

9.
Concepts: explain development process, providing detailed explanations
- Explaining the development process or technical aspects of the software.
- Provision of detailed information about a feature, process, or project.

10.
Concepts: clarifying and explaining testing, explaining and updating review process
- Designer clarifies the testing status of a feature and explains the testing phase or process of a software or feature.
- A designer explains the review process for updates and updates users on the review status of the software.

11.
Concepts: clarifying existing features, clarifying feature purposes
- Designer clarifies existing features and provides information about them.
- Designer clarifies the purpose and functionality of a feature on a specific device.

12.
Concepts: explaining feature support, explaining and describing features
- A designer explains or describes the features or characteristics of a component or tool.
- Designer explains the focus areas of the platform and describes a feature or component of the platform.

13.
Concepts: feature reinforcement, emphasizing feature importance
- Designer reinforces an explanation of a feature.
- Designer explains and emphasizes feature importance.

14.
Concepts: sharing design insights, sharing technical insights
- A designer shares their thoughts or design philosophy behind the software.
- The designer shares knowledge or information about the software or its features.

15.
Concepts: highlighting ideal uses, highlighted component features
- Designer highlights ideal use and informs about ideal components.
- Designer highlights key features or benefits of a component.

16.
Concepts: highlighting educational utility, details educational benefits
- Designer highlights educational utility.
- Designer explains or highlights the educational benefits or features of Physics Lab.

17.
Concepts: informative about touch screens, referencing device capabilities
- Designer provides information about touch screens or related features.
- Designer references device capabilities and highlights touch screen usage.

18.
Concepts: providing rationales, explaining intentions
- User or designer provides a rationale.
- User or designer explains intentions.

19.
Concepts: explained design priorities, outlining focus areas and priorities
- Prioritizing design goals or objectives.
- Designer outlines focus areas or priorities for Physics Lab development and outlines development priorities or objectives.

20.
Concepts: explaining optimization, emphasizing optimization
- Designer explains optimization and adjusts components.
- Designer emphasizes the importance of optimizing a specific aspect of the software.

21.
Concepts: managing project scope, setting scope
- Designer manages the scope of the project by gathering opinions.
- Defining or setting the scope of a project or product from a designer's perspective and defining or setting the scope of development or features.

22.
Concepts: committing to improvement, making promises and commitments
- Commitments to adding features or implementing changes and expressing commitment to improving or enhancing a product or service.
- Designer promises to improve or make changes and makes a promise or commitment to implement a feature or fix an issue.

23.
Concepts: lists bug fixes, addressing and fixing issues
- A designer lists bug fixes or updates to the software.
- Designers mention or list specific bug fixes or improvements made to the software and address previous issues or bugs in the software.

24.
Concepts: considering multiple options, considering comprehensive solution
- Designer considers multiple options and explores solutions.
- Designer considers a comprehensive solution or approach.

25.
Concepts: analyzes the problem, discussing problem-solving approaches
- Designer analyzes a problem or issue or offers a diagnosis.
- Designer discusses and explains problem-solving approaches.

26.
Concepts: discussing and considering input methods, discussing and preparing for further discussion
- A designer discusses and considers input methods and mechanisms.
- A designer discusses further interests or potential features and prepares for further discussion or inquiry.

27.
Concepts: discuss design implications, questioning feasibility and implications
- Discussing design implications or potential consequences.
- A designer questions or discusses the necessity or feasibility of a specific feature or design and questions the broader implications of a feature or suggestion.

28.
Concepts: addressing concerns, resolves user concerns
- Designers address user concerns or worries.
- Designers resolve user concerns or inquire about user issues.

29.
Concepts: development difficulty, explaining complexity
- Designer expresses difficulty or challenge in developing a feature.
- A designer explains or acknowledges the complexity of a feature or task.

30.
Concepts: apologizing, apologizing for timing
- Designers or users apologize for any inconvenience or interruption caused.
- A designer apologizes for the timing of a message or action.

31.
Concepts: manage user expectations, setting user expectations
- Designer communicates expectations about the project's scope, timeline, or features.
- The designer sets clear expectations about the system's performance, compatibility, or release timeline.

32.
Concepts: discussing technical constraints, inquiring about technical details
- Users or designers discuss technical constraints.
- Users or designers inquire about technical conditions or requirements.
===
Here are the definitions for each code:

---
1.
Concepts: consulting teachers or experts, inquiring about teachers' needs
Relationship: The concepts are related in that they both involve seeking input from teachers or experts to inform design decisions.
Criteria: Designers seek input from teachers or experts to understand their needs and inform design decisions.
Phrase: Seek input from teachers or experts.

2.
Concepts: consulting on educational standards, aligning with educational requirements
Relationship: The concepts are related in that they both involve ensuring that the design meets educational standards and requirements.
Criteria: Designers consult on educational standards and align with educational requirements to ensure the design meets educational needs.
Phrase: Align with educational standards.

3.
Concepts: planning for future engagement, announcing and promising future consultation, planning and promising feedback gathering
Relationship: The concepts are related in that they all involve planning for future interactions with the community.
Criteria: Designers plan for future engagement, announce future consultation, and promise to gather feedback from the community.
Phrase: Plan for future engagement.

4.
Concepts: suggesting future possibilities, planning and acknowledging future development
Relationship: The concepts are related in that they both involve considering future possibilities and planning for development.
Criteria: Designers suggest future possibilities and plan for future development, acknowledging intentions for growth.
Phrase: Suggest future possibilities.

5.
Concepts: confirming updates and releases, confirming updates and completion
Relationship: The concepts are related in that they both involve confirming the status of updates or releases.
Criteria: Designers confirm update schedules, release dates, and completion of tasks or updates.
Phrase: Confirm updates and releases.

6.
Concepts: informing about platform updates, introducing and informing about updates, communicating changes and updates, providing update information
Relationship: The concepts are related in that they all involve informing users about updates or changes.
Criteria: Designers inform about updates, introduce new features, communicate changes, and provide update information.
Phrase: Inform about updates.

7.
Concepts: promising future development, promising and expressing hope for progress
Relationship: The concepts are related in that they both involve making promises or expressing hope for future development.
Criteria: Designers promise to develop features, express hope for progress, and assure users that updates are in progress.
Phrase: Promise future development.

8.
Concepts: clarifying version details, clarifying software versions
Relationship: The concepts are related in that they both involve providing clear information about software versions.
Criteria: Designers clarify specific versions, releases, or information about software versions.
Phrase: Clarify software versions.

9.
Concepts: explain development process, providing detailed explanations
Relationship: The concepts are related in that they both involve providing detailed information about the development process.
Criteria: Designers explain the development process, provide detailed information about features, and offer technical explanations.
Phrase: Explain development process.

10.
Concepts: clarifying and explaining testing, explaining and updating review process
Relationship: The concepts are related in that they both involve explaining the testing or review process.
Criteria: Designers clarify testing status, explain the review process, and update users on review status.
Phrase: Explain testing and review process.

11.
Concepts: clarifying existing features, clarifying feature purposes
Relationship: The concepts are related in that they both involve providing clear information about existing features.
Criteria: Designers clarify existing features, provide information about them, and explain their purpose.
Phrase: Clarify existing features.

12.
Concepts: explaining feature support, explaining and describing features
Relationship: The concepts are related in that they both involve explaining features or characteristics.
Criteria: Designers explain features, describe components, and explain focus areas of the platform.
Phrase: Explain features.

13.
Concepts: feature reinforcement, emphasizing feature importance
Relationship: The concepts are related in that they both involve emphasizing the importance of features.
Criteria: Designers reinforce feature explanations, emphasize feature importance, and highlight key benefits.
Phrase: Emphasize feature importance.

14.
Concepts: sharing design insights, sharing technical insights
Relationship: The concepts are related in that they both involve sharing knowledge or information about the software.
Criteria: Designers share design philosophy, technical knowledge, or information about software features.
Phrase: Share design insights.

15.
Concepts: highlighting ideal uses, highlighted component features
Relationship: The concepts are related in that they both involve highlighting key aspects of features.
Criteria: Designers highlight ideal uses, inform about ideal components, and emphasize key benefits.
Phrase: Highlight ideal uses.

16.
Concepts: highlighting educational utility, details educational benefits
Relationship: The concepts are related in that they both involve highlighting the educational value of Physics Lab.
Criteria: Designers highlight educational utility, explain educational benefits, and emphasize the educational value of Physics Lab.
Phrase: Highlight educational utility.

17.
Concepts: informative about touch screens, referencing device capabilities
Relationship: The concepts are related in that they both involve providing information about device capabilities.
Criteria: Designers inform about touch screens, reference device capabilities, and highlight touch screen usage.
Phrase: Inform about touch screens.

18.
Concepts: providing rationales, explaining intentions
Relationship: The concepts are related in that they both involve providing explanations or justifications.
Criteria: Designers provide rationales, explain intentions, and offer explanations for design decisions.
Phrase: Provide rationales.

19.
Concepts: explained design priorities, outlining focus areas and priorities
Relationship: The concepts are related in that they both involve explaining design priorities or focus areas.
Criteria: Designers explain design priorities, outline focus areas, and set development priorities.
Phrase: Explain design priorities.

20.
Concepts: explaining optimization, emphasizing optimization
Relationship: The concepts are related in that they both involve explaining or emphasizing optimization.
Criteria: Designers explain optimization, adjust components, and emphasize the importance of optimization.
Phrase: Explain optimization.

21.
Concepts: managing project scope, setting scope
Relationship: The concepts are related in that they both involve defining or managing the scope of the project.
Criteria: Designers manage project scope, define scope, and outline development priorities.
Phrase: Manage project scope.

22.
Concepts: committing to improvement, making promises and commitments
Relationship: The concepts are related in that they both involve making promises or commitments to improve or enhance the product.
Criteria: Designers commit to adding features, promise to improve, and make commitments to implement changes.
Phrase: Commit to improvement.

23.
Concepts: lists bug fixes, addressing and fixing issues
Relationship: The concepts are related in that they both involve addressing or fixing issues.
Criteria: Designers list bug fixes, address previous issues, and make improvements to the software.
Phrase: Address and fix issues.

24.
Concepts: considering multiple options, considering comprehensive solution
Relationship: The concepts are related in that they both involve considering different options or approaches.
Criteria: Designers consider multiple options, explore solutions, and consider comprehensive approaches.
Phrase: Consider multiple options.

25.
Concepts: analyzes the problem, discussing problem-solving approaches
Relationship: The concepts are related in that they both involve analyzing problems or discussing solutions.
Criteria: Designers analyze problems, discuss problem-solving approaches, and offer diagnoses.
Phrase: Analyze problems.

26.
Concepts: discussing and considering input methods, discussing and preparing for further discussion
Relationship: The concepts are related in that they both involve discussing or considering input methods or preparing for further discussion.
Criteria: Designers discuss input methods, consider options, and prepare for further discussion or inquiry.
Phrase: Discuss input methods.

27.
Concepts: discuss design implications, questioning feasibility and implications
Relationship: The concepts are related in that they both involve discussing design implications or feasibility.
Criteria: Designers discuss design implications, question feasibility, and consider broader implications.
Phrase: Discuss design implications.

28.
Concepts: addressing concerns, resolves user concerns
Relationship: The concepts are related in that they both involve addressing or resolving user concerns.
Criteria: Designers address user concerns, resolve issues, and inquire about user problems.
Phrase: Address user concerns.

29.
Concepts: development difficulty, explaining complexity
Relationship: The concepts are related in that they both involve explaining development challenges or complexity.
Criteria: Designers express development difficulty, explain complexity, and acknowledge challenges.
Phrase: Explain development difficulty.

30.
Concepts: apologizing, apologizing for timing
Relationship: The concepts are related in that they both involve apologizing for inconvenience or interruption.
Criteria: Designers apologize for inconvenience, apologize for timing, and express regret.
Phrase: Apologize for inconvenience.

31.
Concepts: manage user expectations, setting user expectations
Relationship: The concepts are related in that they both involve managing or setting user expectations.
Criteria: Designers communicate expectations, set clear expectations, and manage user expectations.
Phrase: Manage user expectations.

32.
Concepts: discussing technical constraints, inquiring about technical details
Relationship: The concepts are related in that they both involve discussing technical constraints or inquiring about technical details.
Criteria: Designers discuss technical constraints, inquire about technical requirements, and explore technical possibilities.
Phrase: Discuss technical constraints.