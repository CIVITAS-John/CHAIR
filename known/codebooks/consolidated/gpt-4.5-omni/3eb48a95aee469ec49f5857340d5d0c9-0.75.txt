You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (15 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
15. 
Concepts: {Repeat the input 15}
Relationship: {What is logical relationship between concepts in code 15, or N/A if not applicable}
Criteria: {Who did what, and how for code 15}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: sharing plans, announcing planned updates
- Designers announce and share future development plans and updates.
- Designers share detailed information about upcoming features and development updates.

2.
Concepts: announcing releases, announcing updates
- Designers announce the release of a new software version and its updates.
- Designers provide updates or announcements about the software to the community.

3.
Concepts: inform about changes, communicating updates to users
- A designer informs users about changes in components or features.
- Designers communicate updates, release schedules, or new features to users.

4.
Concepts: providing updates, providing status updates
- Designers provide information about the current status, updates, and future plans for the software.
- Designers provide updates on the current status of a feature or software version.

5.
Concepts: explaining features, functionality explanation
- Designers provide examples, details, and explanations about a feature's capabilities.
- Explaining the functionality or capabilities of a feature or component.

6.
Concepts: apologize for interruption, apologizing for inconvenience
- A designer or user apologizes for a potential interruption.
- Designers apologize for any inconvenience caused to users and express politeness.

7.
Concepts: requesting guidance, seeking usage guidance
- Users request a manual or guide to assist with using the software.
- Users request guidance or instructions on how to use a specific version of the software.

8.
Concepts: requesting features, requesting specific features
- Users request the addition of specific experiments or new features.
- Users make detailed requests for specific features or functionalities.

9.
Concepts: create feedback loop, integrating user feedback
- User feedback is solicited, considered, and implemented into design decisions.
- User feedback is acknowledged and incorporated into the design process.

10.
Concepts: expressive, expressing emotion
- Users and designers using expressive language or emojis to convey emotions.
- Expressing emotions through emojis or text.

11.
Concepts: use emojis, user reactions
- Users use emojis to express emotions or reactions.
- Instances where users express their reactions to updates or announcements, often using emojis.

12.
Concepts: user appreciation, user interaction and gratitude
- Expressions of thanks or appreciation from users.
- Users engage in interaction and express gratitude.

13.
Concepts: showing gratitude, expressing appreciation
- Users or designers express gratitude or appreciation for contributions and support.
- Users or designers acknowledge and appreciate community support and express gratitude.

14.
Concepts: outlining future plans
- A designer outlines plans for future product design and development.
- Designers mention plans for future updates and outline development goals.

15.
Concepts: encouraging member participation
- Inviting or encouraging members to participate in discussions or provide feedback.
- Designers solicit and encourage users to provide feedback or suggestions.
===
---
Definitions for each code (15 in total):
1.
Concepts: sharing plans, announcing planned updates
Relationship: Both involve communicating future intentions.
Criteria: Designers announce and share detailed information about upcoming features and development plans.
Phrase: Announcing future updates

2.
Concepts: announcing releases, announcing updates
Relationship: Both involve communicating current product statuses.
Criteria: Designers announce the release of new software versions and provide updates to the community.
Phrase: Announcing software releases

3.
Concepts: inform about changes, communicating updates to users
Relationship: Both involve updating users about modifications.
Criteria: Designers inform users about changes in components or features and communicate updates to the community.
Phrase: Informing users about changes

4.
Concepts: providing updates, providing status updates
Relationship: Both involve sharing current information.
Criteria: Designers provide information about the current status and future plans of the software.
Phrase: Providing status updates

5.
Concepts: explaining features, functionality explanation
Relationship: Both involve detailing the capabilities of components.
Criteria: Designers provide examples and explanations about a feature's functionalities and capabilities.
Phrase: Explaining features

6.
Concepts: apologize for interruption, apologizing for inconvenience
Relationship: Both involve expressing regret.
Criteria: Designers or users apologize for potential interruptions or inconveniences.
Phrase: Apologizing for inconvenience

7.
Concepts: requesting guidance, seeking usage guidance
Relationship: Both involve seeking help for usage.
Criteria: Users request guides or instructions for using the software.
Phrase: Requesting usage guidance

8.
Concepts: requesting features, requesting specific features
Relationship: Both involve users asking for additions.
Criteria: Users request the addition of specific experiments or new features.
Phrase: Requesting features

9.
Concepts: create feedback loop, integrating user feedback
Relationship: Both involve considering user input.
Criteria: User feedback is solicited, acknowledged, and integrated into design decisions.
Phrase: Integrating user feedback

10.
Concepts: expressive, expressing emotion
Relationship: Both involve conveying emotions.
Criteria: Users and designers use expressive language or emojis to convey emotions.
Phrase: Expressing emotions

11.
Concepts: use emojis, user reactions
Relationship: Both involve expressing reactions through symbols.
Criteria: Users use emojis to express their emotions or reactions to updates or announcements.
Phrase: Using emojis for reactions

12.
Concepts: user appreciation, user interaction and gratitude
Relationship: Both involve positive user engagement.
Criteria: Users express thanks or appreciation and engage in interactions.
Phrase: Showing user appreciation

13.
Concepts: showing gratitude, expressing appreciation
Relationship: Both involve acknowledging contributions.
Criteria: Users or designers express gratitude and appreciation for community support.
Phrase: Expressing gratitude

14.
Concepts: outlining future plans
Relationship: N/A
Criteria: Designers outline plans for future product design and development.
Phrase: Outlining future plans

15.
Concepts: encouraging member participation
Relationship: N/A
Criteria: Designers invite and encourage members to participate in discussions and provide feedback.
Phrase: Encouraging participation
---