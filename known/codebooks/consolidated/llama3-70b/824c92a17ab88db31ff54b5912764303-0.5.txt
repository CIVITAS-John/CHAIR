You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. If a sub-code includes another, use the broader one. If sub-codes are parallel, write one that covers both.
Write clear and generalizable labels and criteria for each code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization (e.g. "social interaction" instead of "interaction", "communication approach" instead of "communication").
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (27 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {Consolidated criteria of code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
27.
Relationship: {The logical relationship between sub-codes in code 27}
Criteria: {Consolidated criteria of code 27}
Label: {A consolidated label of code 27}
Category: {2-4 words for code 27}
---
~~~
1. progress updates, software development progress..
- Updates on project and software development progress
- Discussing software development processes or progress.

2. simplicity, design simplicity.
- Emphasizing simplicity or minimalism in the design
- Design simplicity and strategy

3. customization options, configuration options.
- Customization options and preset settings
- Describing configuration options, settings, or customization capabilities

4. alternative solutions, alternative suggestion.
- Proposing alternative solutions or approaches
- Suggesting an alternative design approach or solution

5. community feedback, incorporating community feedback.
- Community feedback, platform evolution
- Understanding how the community's needs and suggestions are being incorporated into the platform's development

6. feature requests, feature request and user needs.
- Instances where users request new features or demonstrations
- Requesting a new feature or update, expressing needs or requirements

7. user support, technical support and troubleshooting.
- User assistance, troubleshooting, and technical support
- Discussing technical issues, offering support, and troubleshooting

8. community integration, welcoming new members.
- Welcoming new members, community integration
- How new members are greeted and integrated into the group.

9. playful communication, humorous interaction.
- Humor, casual tone, positive sentiment
- Use of humor, informal language, or playful interaction

10. community norms, community values.
- Community values, norms, expected behaviors
- Reflects shared principles or common goals that define the community.

11. introduction.
- Providing background information about oneself
- Introduction or description of oneself

12. pedagogical approaches.
- Discussions around teaching methods, learning strategies, or educational philosophies.
- Discussions about teaching methods, classroom practices, or strategies for using the software effectively.

13. announcement.
- Designers or moderators share information about the project or its progress
- Announcements, updates, milestones, or official announcements

14. design interest.
- Expressions of interest in design
- Designer's personal interests, expressing gratitude towards designers.

15. user guidance.
- Requests or inquiries about software usage or documentation
- Offering guidance on feature usage or functionalities

16. design and user constraints..
- Design constraints, user limitations, sharing limitations.
- Expressing user needs, noting constraints, and exploring usability challenges

17. technical challenges..
- Trouble, difficulty, technical complexity, confusion.
- Discussing technical limitations, obstacles, and development challenges

18. knowledge gaps.
- Admitting lack of experience or knowledge
- Lack of knowledge, incomplete thoughts, limitations.

19. gratitude.
- Expressions of gratitude
- Expressions of appreciation and gratitude among community members

20. user experience.
- Comments about the usability or user-friendliness of a system
- Discussing user manuals, user experience, and technical environment

21. knowledge sharing.
- Instances of expertise sharing, knowledge sharing, and technical knowledge
- Sharing expertise, personal experiences

22. experiment design.
- Discussions on experiment design, component connectivity, and collaboration
- Experiment configurations and design plans

23. resource sharing.
- Resource sharing, external links
- Sharing resources, seeking or offering assistance

24. feedback loop.
- Indicates a cycle of feedback and response regarding an issue
- Creating feedback loops, positive feedback

25. version control.
- References to controlling or updating software versions
- Discussions about managing different versions of the software

26. user preferences.
- Expressing personal preferences or choices.
- Preferences expressed by users regarding the software.

27. categorization.
- Categorizing or classifying concepts, components or phenomena
- Recommending categorization or organization of features
===
Here is the output format with the definitions for each code:

---
Categories: 
* Community Building
* Design and Development
* Learning and Pedagogy
* Communication and Feedback
* User Experience
* Technical Aspects

Definitions for each code:

1.
Relationship: Parallel sub-codes
Criteria: Updates on project and software development progress
Label: Project Progress Updates
Category: Design and Development

2.
Relationship: Hierarchical ( simplicity is a broader concept)
Criteria: Emphasizing simplicity or minimalism in the design
Label: Design Simplicity
Category: Design and Development

3.
Relationship: Parallel sub-codes
Criteria: Customization options and preset settings
Label: Customization Options
Category: Design and Development

4.
Relationship: Hierarchical (alternative solutions is a broader concept)
Criteria: Proposing alternative solutions or approaches
Label: Alternative Solutions
Category: Design and Development

5.
Relationship: Hierarchical (community feedback is a broader concept)
Criteria: Community feedback, platform evolution
Label: Community Feedback
Category: Community Building

6.
Relationship: Parallel sub-codes
Criteria: Requesting a new feature or update, expressing needs or requirements
Label: Feature Requests
Category: User Experience

7.
Relationship: Hierarchical (user support is a broader concept)
Criteria: User assistance, troubleshooting, and technical support
Label: User Support
Category: Technical Aspects

8.
Relationship: Hierarchical (community integration is a broader concept)
Criteria: Welcoming new members, community integration
Label: Community Integration
Category: Community Building

9.
Relationship: Parallel sub-codes
Criteria: Use of humor, informal language, or playful interaction
Label: Playful Communication
Category: Communication and Feedback

10.
Relationship: Hierarchical (community norms is a broader concept)
Criteria: Community values, norms, expected behaviors
Label: Community Norms
Category: Community Building

11.
Relationship: Standalone code
Criteria: Providing background information about oneself
Label: Introductions
Category: Community Building

12.
Relationship: Parallel sub-codes
Criteria: Discussions around teaching methods, learning strategies, or educational philosophies
Label: Pedagogical Approaches
Category: Learning and Pedagogy

13.
Relationship: Hierarchical (announcement is a broader concept)
Criteria: Designers or moderators share information about the project or its progress
Label: Announcements
Category: Design and Development

14.
Relationship: Parallel sub-codes
Criteria: Expressions of interest in design
Label: Design Interest
Category: Design and Development

15.
Relationship: Hierarchical (user guidance is a broader concept)
Criteria: Requests or inquiries about software usage or documentation
Label: User Guidance
Category: User Experience

16.
Relationship: Hierarchical (design and user constraints is a broader concept)
Criteria: Design constraints, user limitations, sharing limitations
Label: Design Constraints
Category: Design and Development

17.
Relationship: Parallel sub-codes
Criteria: Discussing technical limitations, obstacles, and development challenges
Label: Technical Challenges
Category: Technical Aspects

18.
Relationship: Hierarchical (knowledge gaps is a broader concept)
Criteria: Admitting lack of experience or knowledge
Label: Knowledge Gaps
Category: Learning and Pedagogy

19.
Relationship: Standalone code
Criteria: Expressions of gratitude
Label: Gratitude
Category: Communication and Feedback

20.
Relationship: Parallel sub-codes
Criteria: Discussing user manuals, user experience, and technical environment
Label: User Experience
Category: User Experience

21.
Relationship: Hierarchical (knowledge sharing is a broader concept)
Criteria: Sharing expertise, personal experiences
Label: Knowledge Sharing
Category: Learning and Pedagogy

22.
Relationship: Parallel sub-codes
Criteria: Discussions on experiment design, component connectivity, and collaboration
Label: Experiment Design
Category: Design and Development

23.
Relationship: Hierarchical (resource sharing is a broader concept)
Criteria: Sharing resources, seeking or offering assistance
Label: Resource Sharing
Category: Communication and Feedback

24.
Relationship: Hierarchical (feedback loop is a broader concept)
Criteria: Creating feedback loops, positive feedback
Label: Feedback Loop
Category: Communication and Feedback

25.
Relationship: Standalone code
Criteria: Discussions about managing different versions of the software
Label: Version Control
Category: Technical Aspects

26.
Relationship: Parallel sub-codes
Criteria: Preferences expressed by users regarding the software
Label: User Preferences
Category: User Experience

27.
Relationship: Hierarchical (categorization is a broader concept)
Criteria: Recommending categorization or organization of features
Label: Categorization
Category: Design and Development