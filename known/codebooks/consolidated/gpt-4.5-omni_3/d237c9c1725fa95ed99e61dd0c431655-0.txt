You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (64 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
64. 
Concepts: {Repeat the input 64}
Relationship: {What is logical relationship between concepts in code 64, or N/A if not applicable}
Criteria: {Who did what, and how for code 64}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: version clarification, update clarification
- Clarifying the version of the software being discussed.
- A designer clarifies which version of the software is being discussed.

2.
Concepts: version details, explain version type
- A designer details the features and changes in a specific software version.
- A designer explains the type or version of the software being discussed.

3.
Concepts: software release, version release announcement, announce new version release, announce software version update
- A designer announces a software release.
- A designer announces the release of a new version and its updates.
- A designer announces the release of a new software version.
- A designer announces a new software version update.

4.
Concepts: new components, announcing new features
- Designers announce new components and features added to the software.
- Designer lists new features and updates in the software.

5.
Concepts: software update, software update announcement, software updates and downloads
- Designers announce and describe software updates.
- Designers provide updates about the software versions and new features.
- A designer announces software updates and download information.

6.
Concepts: general announcement, making community announcement
- A designer makes a general announcement.
- Designer makes a community announcement.

7.
Concepts: detailed update notes, technical details
- Designers provide detailed notes on software updates and new features.
- A designer provides detailed information about new features, components, adjustments, and bug fixes.

8.
Concepts: bug fixes and updates, detailed update announcement, feature and bug fix announcement
- A designer lists new features, components, adjustments, and bug fixes.
- A designer lists updates and bug fixes in detail.
- A designer lists new features, components, adjustments, and bug fixes in the application.

9.
Concepts: component adjustments, emphasize continuous improvement
- A designer lists new features, updates, and adjustments to components.
- A designer lists new features, components, adjustments, and bug fixes to show ongoing improvements.

10.
Concepts: update description, detailed overview of update
- A designer describes the scope or size of an update.
- A designer provides a detailed overview of an update.

11.
Concepts: update community, community update
- A designer informs the community about upcoming changes or improvements.
- Instances where designers provide updates or announcements about the software.

12.
Concepts: update announcement, communication of updates
- Instances where designers provide information about upcoming updates and new features.
- Instances where designers communicate updates, release schedules, or new features to users.

13.
Concepts: inform about updates, communicate new features and improvements
- A designer informs users about the release of a new version and its updates.
- A designer communicates new features and improvements in an update.

14.
Concepts: engage users with update, preparing users for updates
- Designers engage users by announcing upcoming updates.
- Designer informs users about significant upcoming changes.

15.
Concepts: product update, technical updates
- Instances where designers provide information about updates or changes to the Physics Lab software.
- Instances where designers provide updates or technical changes to the Physics Lab tool.

16.
Concepts: component update, announce component change
- A designer discusses updates and changes to components within the software.
- Designers announce changes to existing components in the software.

17.
Concepts: update schedule, release schedule, give a timeline for release
- A designer provides information about when an update will occur.
- A designer provides specific dates for future updates or releases.
- A designer provides a timeline for the release of an update.

18.
Concepts: android version timeline, version update announcement
- A designer provides an update on the timeline for the Android version release.
- A designer announces a version update and its expected timeline.

19.
Concepts: give a timeline, give timeline of feature development
- A developer provides a timeline for updates or features.
- A designer provides a timeline for when a feature will be developed.

20.
Concepts: development communication, communicating development progress
- A designer communicates updates and development progress to the community.
- Designer communicates development progress.

21.
Concepts: share progress, communicate progress
- Designers share updates and progress on the software development.
- Designers communicate progress and updates on software development.

22.
Concepts: providing progress report, providing progress update
- Designer provides a progress report.
- Designer provides an update on progress.

23.
Concepts: development plan, share info about future development plan
- A designer shares information about the development plan and download links.
- A designer shares information about future development plans.

24.
Concepts: release process, update on release process
- Instances where the process of releasing a product or update is described.
- Instances where updates on the release process are provided.

25.
Concepts: updates, update preview
- Information about changes or new features in upcoming updates.
- Providing a preview of upcoming updates.

26.
Concepts: user anticipation, show anticipation
- Expressing anticipation for an update or feature.
- A user shows anticipation or eagerness for an update.

27.
Concepts: planned updates, announcement of plans
- Information shared by designers about upcoming features or updates.
- Designers announce plans for future updates and features.

28.
Concepts: feature complexity, development complexity, complexity explanation
- Designers describe the complexity of certain features and the time required to implement them.
- A designer explains the complexity and time required for a specific development task.
- A designer explains that a complex feature will take more time to complete.
- A designer explains the complexity of a feature and the time needed to complete it.

29.
Concepts: affirm planned feature, confirm future feature, commit to future update
- A designer affirms that a planned feature will be included.
- A designer confirms that a feature will be available in the future.
- A designer commits to including a feature in a future update.

30.
Concepts: confirm update, confirm feature update
- A user or designer confirms that an update has been or will be released.
- A designer confirms that a feature update will occur.

31.
Concepts: upcoming features, explanation of upcoming features, feature preview, list upcoming features
- A designer announces upcoming features.
- A designer explains upcoming features or functionalities in the software.
- A designer previews upcoming features or updates.
- A designer lists features that will be included in future updates.

32.
Concepts: feature implementation, feature implementation plans
- A designer discusses the implementation of a feature in future updates.
- A designer explains the plans for feature implementation.

33.
Concepts: examples of features, future feature plans, planned feature description
- A designer provides examples of planned features.
- A designer outlines future plans for specific features and optimizations.
- A designer describes a planned feature in detail.

34.
Concepts: feature optimization, communicate ongoing optimization
- A designer mentions ongoing efforts to optimize a feature.
- A designer communicates ongoing efforts to optimize a feature.

35.
Concepts: feature development, update on feature development, feature development information
- A designer discusses the development of new features.
- A designer provides an update on the development of a feature.
- A designer shares information about current feature development.

36.
Concepts: project planning, feedback gathering plan, collaboration agreement
- A designer discusses plans for future project phases and the need to gather opinions.
- A designer mentions the plan to gather opinions before starting a new project phase.
- A designer confirms the plan to gather opinions before starting a new project phase.

37.
Concepts: future planning, future planning and development
- A designer discusses future planning or compatibility issues.
- A designer discusses future planning and development of the project.

38.
Concepts: development priorities, development prioritization
- A designer outlines the development priorities for different sections of the project.
- Instances where designers discuss the prioritization of different features or sections to be developed.

39.
Concepts: answer about compatibility, system compatibility discussion
- Designers and users discuss compatibility with different operating systems.
- A designer and user discuss the compatibility of the application with different systems or versions.

40.
Concepts: future compatibility, considering future compatibility
- A designer considers future compatibility with older systems.
- Designer considers future compatibility solutions.

41.
Concepts: feature limitation explanation, explain current version's limitation
- A designer explains the current limitations or testing status of a feature.
- A designer explains the limitations of the current version.

42.
Concepts: discuss limitation, address limitation
- A designer discusses a limitation or drawback of a solution.
- A designer discusses how a limitation can be addressed or worked around.

43.
Concepts: platform limitation, platform constraint explanation
- Designers mention the limitations of the platform, such as compatibility issues.
- A designer mentions platform-specific constraints affecting the release or availability of the application.

44.
Concepts: explaining design rationale, giving development rationale, explaining development rationale
- Designer explains the design rationale.
- Designer gives rationale for a development decision.
- Designer explains the rationale behind a decision.

45.
Concepts: subject focus, explaining focus areas
- A designer discusses the focus of the software on specific subjects.
- Designer explains the focus areas of the software.

46.
Concepts: usability explanation, describe usability features
- A designer explains the usability features or design philosophy of the application.
- A designer describes usability features designed to enhance user experience.

47.
Concepts: explaining design goals, explain app design intention
- A designer explains the goals behind the design of the software.
- A developer explains the intention behind the app's design.

48.
Concepts: provide technical details, explaining technical artifacts
- A designer shares specific technical specifications of a component.
- A designer explains technical artifacts or details.

49.
Concepts: provide example, feature explanation, providing information
- A designer provides an example to clarify a feature.
- A designer explains the functionality of a feature.
- Designer provides information about a feature.

50.
Concepts: design decision, design suggestion
- A designer makes a design decision or suggestion.
- Instances where design suggestions are made.

51.
Concepts: potential solution, compatibility solution
- A designer suggests a potential solution to a compatibility issue.
- A designer offers a solution or workaround for a compatibility issue.

52.
Concepts: user interface, usability discussion
- Discussing aspects of the user interface.
- A discussion about usability or interface features.

53.
Concepts: decision-making, interface layout decisions
- A designer and user discuss the order of feature development.
- A user and designer discuss interface layout preferences.

54.
Concepts: touch screen consideration, considering touch screen use
- Instances where touch screen considerations are mentioned.
- Designer considers implications of touch screen use.

55.
Concepts: input methods, soft keyboard consideration
- A designer discusses the need for input methods like a soft keyboard.
- A designer considers the need for a soft keyboard for numerical input.

56.
Concepts: classroom setup inquiry, inquire about classroom internet
- A designer inquires about the classroom's internet setup.
- A designer inquires about the availability of internet in classrooms.

57.
Concepts: questioning identity, questioning user identity
- Designer questions the user's identity.
- Designer asks about the user's identity or role.

58.
Concepts: user background inquiry, inquire about user's teaching background
- A designer inquires about the user's background or professional role.
- A designer asks about a user's teaching background.

59.
Concepts: role inquiry, teacher identity
- A designer asks if the user is a teacher.
- A designer inquires about a user's teaching level.

60.
Concepts: followup, follow-up on design information
- A user or designer follows up on a previous message or discussion.
- Users provide follow-up information related to design or feature implementation.

61.
Concepts: followup question, ask follow-up question on user request, usage scenario inquiry, follow-up inquiry
- A user or designer asks a follow-up question to gather more information.
- A designer asks a follow-up question to clarify a user's preference or request.
- A designer asks a follow-up question regarding a user's request.
- A designer asks a follow-up question about the user's usage scenario.
- A designer asks a follow-up question about the user's request or context.

62.
Concepts: user needs inquiry, identify user needs, designer inquiry
- A designer asks about user needs.
- A designer asks questions to understand the user's needs or role.
- Instances where designers seek input or clarification from users to better understand their needs.

63.
Concepts: seeking context, gather additional information
- Designer seeks context for better understanding.
- A designer asks for additional information to understand the context better.

64.
Concepts: issue inquiry, user experience feedback, problem inquiry, engaging in problem solving
- A designer asks users to specify the issues they encountered.
- A designer asks users about the problems they encountered while using the application.
- A developer inquires about problems users encountered.
- Designer asks users about problems they encountered.
===
---
Definitions for each code (64 in total):
1.
Concepts: version clarification, update clarification
Relationship: Both concepts involve clarifying information about software versions.
Criteria: A designer clarifies which version of the software is being discussed.
Phrase: Clarifying software version

2.
Concepts: version details, explain version type
Relationship: Both concepts involve providing detailed information about a specific software version.
Criteria: A designer details the features and changes in a specific software version and explains its type.
Phrase: Detailing software version

3.
Concepts: software release, version release announcement, announce new version release, announce software version update
Relationship: All concepts involve announcing the release of a new software version.
Criteria: A designer announces the release of a new software version and its updates.
Phrase: Announcing software release

4.
Concepts: new components, announcing new features
Relationship: Both concepts involve announcing new additions to the software.
Criteria: Designers announce new components and features added to the software.
Phrase: Announcing new features

5.
Concepts: software update, software update announcement, software updates and downloads
Relationship: All concepts involve announcing and describing software updates.
Criteria: Designers announce and describe software updates and provide download information.
Phrase: Announcing software updates

6.
Concepts: general announcement, making community announcement
Relationship: Both concepts involve making announcements to the community.
Criteria: A designer makes a general or community announcement.
Phrase: Making community announcement

7.
Concepts: detailed update notes, technical details
Relationship: Both concepts involve providing detailed information about software updates.
Criteria: Designers provide detailed notes on software updates and new features.
Phrase: Providing detailed update notes

8.
Concepts: bug fixes and updates, detailed update announcement, feature and bug fix announcement
Relationship: All concepts involve listing new features, updates, and bug fixes.
Criteria: A designer lists new features, components, adjustments, and bug fixes in detail.
Phrase: Announcing detailed updates

9.
Concepts: component adjustments, emphasize continuous improvement
Relationship: Both concepts involve listing updates and adjustments to show ongoing improvements.
Criteria: A designer lists new features, updates, and adjustments to components to show ongoing improvements.
Phrase: Emphasizing continuous improvement

10.
Concepts: update description, detailed overview of update
Relationship: Both concepts involve providing a detailed description of an update.
Criteria: A designer describes the scope or size of an update and provides a detailed overview.
Phrase: Describing update in detail

11.
Concepts: update community, community update
Relationship: Both concepts involve informing the community about updates.
Criteria: A designer informs the community about upcoming changes or improvements.
Phrase: Updating the community

12.
Concepts: update announcement, communication of updates
Relationship: Both concepts involve communicating information about updates.
Criteria: Designers provide information about upcoming updates and new features.
Phrase: Communicating updates

13.
Concepts: inform about updates, communicate new features and improvements
Relationship: Both concepts involve informing users about updates and new features.
Criteria: A designer informs users about the release of a new version and its updates, including new features and improvements.
Phrase: Informing about updates

14.
Concepts: engage users with update, preparing users for updates
Relationship: Both concepts involve engaging and preparing users for upcoming updates.
Criteria: Designers engage users by announcing and informing them about significant upcoming changes.
Phrase: Engaging users with updates

15.
Concepts: product update, technical updates
Relationship: Both concepts involve providing information about updates to the software.
Criteria: Designers provide information about updates or technical changes to the Physics Lab software.
Phrase: Providing product updates

16.
Concepts: component update, announce component change
Relationship: Both concepts involve discussing updates and changes to software components.
Criteria: Designers discuss and announce changes to existing components in the software.
Phrase: Announcing component updates

17.
Concepts: update schedule, release schedule, give a timeline for release
Relationship: All concepts involve providing a timeline for updates or releases.
Criteria: A designer provides specific dates or a timeline for future updates or releases.
Phrase: Providing update schedule

18.
Concepts: android version timeline, version update announcement
Relationship: Both concepts involve providing a timeline and announcement for a version update.
Criteria: A designer provides an update on the timeline for the Android version release and announces the version update.
Phrase: Announcing version timeline

19.
Concepts: give a timeline, give timeline of feature development
Relationship: Both concepts involve providing a timeline for updates or feature development.
Criteria: A developer provides a timeline for updates or when a feature will be developed.
Phrase: Providing development timeline

20.
Concepts: development communication, communicating development progress
Relationship: Both concepts involve communicating development progress to the community.
Criteria: A designer communicates updates and development progress to the community.
Phrase: Communicating development progress

21.
Concepts: share progress, communicate progress
Relationship: Both concepts involve sharing and communicating progress on software development.
Criteria: Designers share and communicate progress and updates on software development.
Phrase: Sharing development progress

22.
Concepts: providing progress report, providing progress update
Relationship: Both concepts involve providing updates on progress.
Criteria: A designer provides a progress report or update.
Phrase: Providing progress updates

23.
Concepts: development plan, share info about future development plan
Relationship: Both concepts involve sharing information about development plans.
Criteria: A designer shares information about the development plan and future plans.
Phrase: Sharing development plans

24.
Concepts: release process, update on release process
Relationship: Both concepts involve describing the process of releasing a product or update.
Criteria: Instances where the process of releasing a product or update is described or updated.
Phrase: Describing release process

25.
Concepts: updates, update preview
Relationship: Both concepts involve providing information about upcoming updates.
Criteria: Information about changes or new features in upcoming updates is provided.
Phrase: Previewing updates

26.
Concepts: user anticipation, show anticipation
Relationship: Both concepts involve expressing anticipation for an update or feature.
Criteria: A user shows anticipation or eagerness for an update.
Phrase: Expressing anticipation

27.
Concepts: planned updates, announcement of plans
Relationship: Both concepts involve announcing plans for future updates.
Criteria: Designers announce plans for future updates and features.
Phrase: Announcing planned updates

28.
Concepts: feature complexity, development complexity, complexity explanation
Relationship: All concepts involve explaining the complexity and time required for feature development.
Criteria: A designer explains the complexity of a feature and the time needed to complete it.
Phrase: Explaining feature complexity

29.
Concepts: affirm planned feature, confirm future feature, commit to future update
Relationship: All concepts involve confirming or committing to future features or updates.
Criteria: A designer affirms, confirms, or commits to including a feature in a future update.
Phrase: Confirming future features

30.
Concepts: confirm update, confirm feature update
Relationship: Both concepts involve confirming that an update or feature update will occur.
Criteria: A user or designer confirms that an update or feature update has been or will be released.
Phrase: Confirming updates

31.
Concepts: upcoming features, explanation of upcoming features, feature preview, list upcoming features
Relationship: All concepts involve announcing or explaining upcoming features.
Criteria: A designer announces, explains, previews, or lists upcoming features or functionalities in the software.
Phrase: Previewing upcoming features

32.
Concepts: feature implementation, feature implementation plans
Relationship: Both concepts involve discussing the implementation of features in future updates.
Criteria: A designer discusses and explains the plans for feature implementation.
Phrase: Discussing feature implementation

33.
Concepts: examples of features, future feature plans, planned feature description
Relationship: All concepts involve providing examples or descriptions of planned features.
Criteria: A designer provides examples, outlines future plans, or describes a planned feature in detail.
Phrase: Describing planned features

34.
Concepts: feature optimization, communicate ongoing optimization
Relationship: Both concepts involve communicating efforts to optimize a feature.
Criteria: A designer mentions and communicates ongoing efforts to optimize a feature.
Phrase: Communicating feature optimization

35.
Concepts: feature development, update on feature development, feature development information
Relationship: All concepts involve discussing or providing updates on feature development.
Criteria: A designer discusses, provides updates, or shares information about current feature development.
Phrase: Updating feature development

36.
Concepts: project planning, feedback gathering plan, collaboration agreement
Relationship: All concepts involve planning and gathering feedback for future project phases.
Criteria: A designer discusses plans for future project phases and the need to gather opinions before starting.
Phrase: Planning project phases

37.
Concepts: future planning, future planning and development
Relationship: Both concepts involve discussing future planning and development.
Criteria: A designer discusses future planning or compatibility issues and development of the project.
Phrase: Discussing future planning

38.
Concepts: development priorities, development prioritization
Relationship: Both concepts involve outlining or discussing development priorities.
Criteria: A designer outlines or discusses the prioritization of different features or sections to be developed.
Phrase: Prioritizing development

39.
Concepts: answer about compatibility, system compatibility discussion
Relationship: Both concepts involve discussing compatibility with different systems.
Criteria: Designers and users discuss the compatibility of the application with different operating systems or versions.
Phrase: Discussing system compatibility

40.
Concepts: future compatibility, considering future compatibility
Relationship: Both concepts involve considering future compatibility with older systems.
Criteria: A designer considers future compatibility solutions with older systems.
Phrase: Considering future compatibility

41.
Concepts: feature limitation explanation, explain current version's limitation
Relationship: Both concepts involve explaining the limitations of the current version.
Criteria: A designer explains the current limitations or testing status of a feature.
Phrase: Explaining feature limitations

42.
Concepts: discuss limitation, address limitation
Relationship: Both concepts involve discussing and addressing limitations.
Criteria: A designer discusses a limitation or drawback and how it can be addressed or worked around.
Phrase: Addressing limitations

43.
Concepts: platform limitation, platform constraint explanation
Relationship: Both concepts involve mentioning platform-specific limitations or constraints.
Criteria: Designers mention the limitations or constraints of the platform affecting the release or availability of the application.
Phrase: Explaining platform constraints

44.
Concepts: explaining design rationale, giving development rationale, explaining development rationale
Relationship: All concepts involve explaining the rationale behind design or development decisions.
Criteria: A designer explains the rationale behind a design or development decision.
Phrase: Explaining design rationale

45.
Concepts: subject focus, explaining focus areas
Relationship: Both concepts involve discussing the focus areas of the software.
Criteria: A designer discusses and explains the focus areas of the software.
Phrase: Explaining focus areas

46.
Concepts: usability explanation, describe usability features
Relationship: Both concepts involve explaining usability features.
Criteria: A designer explains and describes usability features designed to enhance user experience.
Phrase: Describing usability features

47.
Concepts: explaining design goals, explain app design intention
Relationship: Both concepts involve explaining the goals or intentions behind the app's design.
Criteria: A designer explains the goals and intentions behind the design of the software.
Phrase: Explaining design goals

48.
Concepts: provide technical details, explaining technical artifacts
Relationship: Both concepts involve sharing and explaining technical details.
Criteria: A designer shares specific technical specifications and explains technical artifacts or details.
Phrase: Providing technical details

49.
Concepts: provide example, feature explanation, providing information
Relationship: All concepts involve providing information to clarify a feature.
Criteria: A designer provides an example, explains the functionality, and provides information about a feature.
Phrase: Explaining features

50.
Concepts: design decision, design suggestion
Relationship: Both concepts involve making design decisions or suggestions.
Criteria: A designer makes a design decision or suggestion.
Phrase: Making design decisions

51.
Concepts: potential solution, compatibility solution
Relationship: Both concepts involve suggesting solutions to compatibility issues.
Criteria: A designer suggests a potential solution or workaround for a compatibility issue.
Phrase: Suggesting compatibility solutions

52.
Concepts: user interface, usability discussion
Relationship: Both concepts involve discussing aspects of the user interface and usability.
Criteria: Discussing aspects of the user interface and usability features.
Phrase: Discussing user interface

53.
Concepts: decision-making, interface layout decisions
Relationship: Both concepts involve discussing decisions about the interface layout.
Criteria: A designer and user discuss the order of feature development and interface layout preferences.
Phrase: Making interface layout decisions

54.
Concepts: touch screen consideration, considering touch screen use
Relationship: Both concepts involve considering the implications of touch screen use.
Criteria: Instances where touch screen considerations are mentioned.
Phrase: Considering touch screen use

55.
Concepts: input methods, soft keyboard consideration
Relationship: Both concepts involve discussing the need for input methods like a soft keyboard.
Criteria: A designer discusses and considers the need for a soft keyboard for numerical input.
Phrase: Considering input methods

56.
Concepts: classroom setup inquiry, inquire about classroom internet
Relationship: Both concepts involve inquiring about the classroom's internet setup.
Criteria: A designer inquires about the availability of internet in classrooms.
Phrase: Inquiring about classroom setup

57.
Concepts: questioning identity, questioning user identity
Relationship: Both concepts involve questioning the user's identity or role.
Criteria: A designer questions the user's identity or role.
Phrase: Questioning user identity

58.
Concepts: user background inquiry, inquire about user's teaching background
Relationship: Both concepts involve inquiring about the user's background or professional role.
Criteria: A designer inquires about the user's background or teaching role.
Phrase: Inquiring about user background

59.
Concepts: role inquiry, teacher identity
Relationship: Both concepts involve inquiring about the user's teaching role.
Criteria: A designer asks if the user is a teacher and inquires about their teaching level.
Phrase: Inquiring about teaching role

60.
Concepts: followup, follow-up on design information
Relationship: Both concepts involve following up on previous messages or discussions.
Criteria: A user or designer follows up on a previous message or discussion related to design or feature implementation.
Phrase: Following up on design information

61.
Concepts: followup question, ask follow-up question on user request, usage scenario inquiry, follow-up inquiry
Relationship: All concepts involve asking follow-up questions to gather more information.
Criteria: A designer asks a follow-up question to clarify a user's preference, request, or usage scenario.
Phrase: Asking follow-up questions

62.
Concepts: user needs inquiry, identify user needs, designer inquiry
Relationship: All concepts involve inquiring to understand user needs.
Criteria: A designer asks questions to understand the user's needs or role.
Phrase: Inquiring about user needs

63.
Concepts: seeking context, gather additional information
Relationship: Both concepts involve seeking additional information to understand the context better.
Criteria: A designer seeks context and asks for additional information to understand the situation better.
Phrase: Seeking additional context

64.
Concepts: issue inquiry, user experience feedback, problem inquiry, engaging in problem solving
Relationship: All concepts involve inquiring about user issues and engaging in problem-solving.
Criteria: A designer asks users to specify the issues they encountered and engages in problem-solving.
Phrase: Inquiring about user issues
---