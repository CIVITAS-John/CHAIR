You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (64 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
64. 
Concepts: {Repeat the input 64}
Relationship: {What is logical relationship between concepts in code 64, or N/A if not applicable}
Criteria: {Who did what, and how for code 64}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: emoji, emoji expression, emoji communication, emoji use
- A user communicates using an emoji.
- Users express themselves using emojis.
- Users communicate using emojis to express emotions or reactions.
- Users engage with the conversation using emojis to express emotions or reactions.

2.
Concepts: transparency, development transparency
- A designer provides transparency about the development process.
- Instances where designers provide detailed information about development processes, challenges, and progress.
- Keeping the community informed about the development process and upcoming changes.

3.
Concepts: development plan, share development plans
- A designer shares the development plan and download information.
- A designer shares the development plans and download information.

4.
Concepts: group sharing, suggest group sharing
- Sharing information or resources within the group.
- A designer suggests sharing resources or information within the group.

5.
Concepts: information retrieval, confirm information retrieval
- Retrieving or acknowledging the retrieval of information.
- Confirming the finding or retrieval of information.

6.
Concepts: politeness, user etiquette
- Users or designers exhibit politeness in communication.
- Users demonstrate etiquette or politeness in their interactions.

7.
Concepts: paying respect, pay respect to experts
- A user pays respect to experts before making a request.
- Users pay respect to experts before making requests or suggestions.

8.
Concepts: teacher role confirmation, confirm professional role
- A user confirms their role as a teacher.
- A user confirms their professional role.

9.
Concepts: engage with community, promote community engagement
- Engaging with the community through questions or comments.
- Instances where members of the community actively participate in discussions, ask questions, or provide feedback.
- Instances where users or designers engage in discussions that foster community interaction and participation.
- Active participation and interaction among community members, including both users and designers.
- Efforts made by designers to actively involve and communicate with the user community.

10.
Concepts: invite participation, encourage participation
- Inviting or encouraging community members to participate or contribute.
- Encouraging community members to participate or provide input.

11.
Concepts: community response, acknowledgment and support
- Community members respond to each other, often providing support or acknowledgment.
- Instances where support and acknowledgment are expressed within the community.

12.
Concepts: craftsmanship, acknowledge craftsmanship
- A user appreciates the craftsmanship and attention to detail in the platform.
- A user acknowledges the craftsmanship or quality of the software.

13.
Concepts: feature appreciation, appreciation of features
- Users appreciate specific features of the software.
- A user appreciates specific features of the platform.

14.
Concepts: compliment on 3d effect, compliment software's 3d effect
- Compliments from users about the software's 3D effects.
- A user compliments the 3D effect of the software.

15.
Concepts: software effectiveness, usability and practicality
- A user comments on the effectiveness of the software.
- User comments on the ease of use and practicality of the software.

16.
Concepts: positive feedback, share positive feedback
- Users provide positive feedback or praise for the software.
- A user shares positive feedback about the software.

17.
Concepts: praise software, software compliment
- A user praises the software for its practicality or effectiveness.
- Praising the software's performance or features.

18.
Concepts: software comparison, comparison to similar apps
- A user compares the software favorably to other applications.
- Users compare the software to other similar software, highlighting differences in usability or functionality.
- A user compares the software to similar applications, highlighting its advantages.

19.
Concepts: positive response, positive interaction
- Users provide a positive response or agreement.
- Users engage in positive interactions, such as agreeing or expressing gratitude.

20.
Concepts: appreciation, user appreciation
- A user expresses appreciation or gratitude.
- Expressions of thanks or appreciation from users.

21.
Concepts: greeting, greet community, greet the community
- Users or developers greet the community.
- A user or designer greets the community.
- A user greets the community.

22.
Concepts: greeting back, reciprocate greeting
- A designer responds to a greeting from a user.
- A designer reciprocates a greeting from a user.

23.
Concepts: gratitude to the community, community support acknowledgment
- A designer expresses gratitude to the community.
- A designer thanks the community for their support.

24.
Concepts: designer appreciation, appreciate dedication
- Appreciating the designers' efforts and craftsmanship.
- A user appreciates the dedication or craftsmanship of the designers.

25.
Concepts: user support appreciation, appreciation for teachers' help
- Designers appreciate user support.
- Designers express appreciation for the support and help from users.

26.
Concepts: gratitude, express gratitude, gratitude and acknowledgment
- Users and designers express gratitude or appreciation.
- Instances where users express thanks or appreciation for the work done by the designers or other community members.
- Instances where users or designers express gratitude or acknowledge contributions.
- Users expressing gratitude or acknowledgment for the designers' work.
- Expressions of gratitude and recognition of user contributions.

27.
Concepts: self answer, self-sufficiency
- A user acknowledges finding information independently.
- A user indicates they found the necessary information on their own.

28.
Concepts: self-solved, self-help
- A user acknowledges finding a solution independently.
- A user expresses gratitude for resources that helped them solve a problem independently.

29.
Concepts: agreement, confirm understanding
- Users or developers express agreement or acknowledgment.
- Users or developers confirm their understanding or agreement.

30.
Concepts: user acknowledgment, acknowledge receipt
- Users acknowledge receipt or understanding of information.
- A user acknowledges receipt or understanding of information.

31.
Concepts: confirmation, confirm agreement
- Confirming or agreeing with a statement or question.
- Confirming or agreeing with another member's argument or statement.

32.
Concepts: update confirmation, confirm update completion
- A user confirms that an update has been applied.
- A user confirms that an update has been completed.

33.
Concepts: teaching experience, share teaching experience
- A user shares their teaching experience.
- Users mention their teaching experience or background.
- A user provides their teaching experience and background.

34.
Concepts: past incident, share past incident
- A user shares a past incident or experience.
- A user shares a past incident or experience related to the software or its use.

35.
Concepts: context of use, usability and context of use
- Instances where users describe the specific contexts in which they use the software.
- Discussions about how the software is used in different contexts and its usability.

36.
Concepts: user experience, user experience and impact
- Instances where users share their experiences or opinions about using the software.
- Users sharing their experiences and the impact of the software on their teaching or learning.

37.
Concepts: student engagement, describe students' positive responses
- A user shares positive feedback about student engagement with the software.
- Users describe positive reactions or feedback from students when using the software in class.

38.
Concepts: pc version, pc version inquiry
- A user asks about the PC version of the software.
- Inquiring about the PC version of the software.

39.
Concepts: compatibility confirmation, system compatibility confirmation
- A designer confirms that a specific version is compatible.
- Designers confirm system compatibility.

40.
Concepts: system requirements, system compatibility
- A designer discusses the system requirements for compatibility.
- A designer discusses the compatibility of the software with different systems.

41.
Concepts: consider future compatibility, future compatibility consideration
- A designer considers future compatibility of the software.
- Considering future compatibility or technical requirements.

42.
Concepts: technical consideration, technical requirement consideration
- Discussing technical considerations or requirements.
- Considering technical requirements for software use.

43.
Concepts: simulated experiment, simulated experiment assessment
- Discussing simulated experiments or assessments.
- Detailing the assessment of simulated experiments.

44.
Concepts: user inquiry, request for information
- Questions or requests for information made by users regarding the use or functionalities of Physics Lab.
- Instances where users ask for specific information or help regarding the use or features of Physics Lab.

45.
Concepts: feature request, feature requests for physics experiments
- Instances where users request new features or improvements for the Physics Lab tool.
- Suggestions from users about desired features or improvements for the software.
- Users request additional experiments or features.
- A user requests specific features for physics experiments.

46.
Concepts: touch screen information, touch screen functionality
- Information provided by the developer about touch screen capabilities.
- Information about the functionality of touch screens within the software.

47.
Concepts: usability discussion, software usability
- Discussing the usability of a feature or interface.
- Users discuss the practical usability and functionality of the software.

48.
Concepts: input methods discussion, discuss input methods
- Designers discuss input methods for the software.
- Designers discuss potential methods for user input, particularly regarding numerical entries.

49.
Concepts: elicit feedback, invite feedback
- Eliciting feedback or suggestions from the community.
- Developers invite feedback or suggestions from the community.

50.
Concepts: feedback loop, community feedback loop
- Processes where user feedback is solicited and incorporated into design decisions.
- The process of collecting, considering, and implementing user feedback.
- Instances where users provide feedback on the software and designers respond to it.

51.
Concepts: feedback, feedback prioritization
- Designers provide feedback on the development process and feature prioritization.
- Designers prioritize user feedback for future updates.

52.
Concepts: provide feedback, user feedback and suggestions, suggestion and feedback
- Users provide feedback on the software, suggesting improvements or changes.
- Instances where users provide feedback or suggestions about the software.
- Users providing feedback or suggestions on features and improvements for the software.
- Users providing feedback or suggestions to improve the software.
- Users providing suggestions or feedback on the software's features or development direction.

53.
Concepts: encouraging feedback, feedback encouragement, encouragement of user feedback
- A designer encourages users to provide feedback or suggestions.
- Encouraging users to provide feedback and suggestions.
- Instances where designers encourage users to provide suggestions or feedback.

54.
Concepts: suggestion, design/feature suggestion, feature suggestion, user suggestion, design suggestion
- Users or developers make suggestions for improvements or new features.
- Users suggest new features or design improvements.
- A user suggests a feature or improvement for the software.
- A user provides a suggestion for a feature or improvement.
- A user provides a design suggestion for improvement.

55.
Concepts: suggest new feature, propose another feature
- A user suggests adding new features to the platform.
- A user proposes additional features for the platform.

56.
Concepts: accept suggestion, accepting the suggestion
- Accepting a suggestion made by a community member.
- Developers accept suggestions or feedback from the community.

57.
Concepts: request justification, feature request justification
- Users explain the reasons behind their requests for features or changes.
- Giving reasons for a feature request or suggestion.

58.
Concepts: user needs, highlight usability need
- Users express specific needs or requirements related to the software or the context in which it is used.
- Users highlight specific usability needs or suggest improvements to the software.

59.
Concepts: request, user requests, request specific features
- A user makes a specific request for new features or demonstrations.
- Instances where users request new features or improvements.
- Specific features or improvements requested by users.
- A user requests specific features or functionalities to be added to the software.

60.
Concepts: question about request, follow-up questions on needs
- Developers ask questions to clarify user requests or needs.
- Developers ask follow-up questions to better understand user needs.

61.
Concepts: ask about user needs, understanding user needs
- Developers ask the community about their needs or preferences.
- Inquiries from the developer seeking to understand user needs or issues.

62.
Concepts: further question, explain the intention of follow-up question
- A designer asks a follow-up question to clarify a previous statement.
- A designer explains the intention behind a follow-up question or action.

63.
Concepts: encouraging elaboration, ask follow-up question on user request
- A designer encourages a user to provide more details or elaborate on a request.
- Designers ask users for more details about their requests or needs.

64.
Concepts: contextualizing response, contextualization of question
- Users provide context or background information to support their responses.
- A user provides context for their question or statement.
===
---
Definitions for each code (64 in total):
1.
Concepts: emoji, emoji expression, emoji communication, emoji use
Relationship: All concepts revolve around the use of emojis for communication and expression.
Criteria: Users communicate and express emotions or reactions using emojis.
Phrase: Use emojis for communication

2.
Concepts: transparency, development transparency
Relationship: Both concepts involve providing clear and detailed information about the development process.
Criteria: Designers provide detailed information about the development process and upcoming changes.
Phrase: Provide development transparency

3.
Concepts: development plan, share development plans
Relationship: Both concepts involve sharing information about development plans.
Criteria: Designers share development plans and download information.
Phrase: Share development plans

4.
Concepts: group sharing, suggest group sharing
Relationship: Both concepts involve sharing resources or information within a group.
Criteria: Designers suggest sharing resources or information within the group.
Phrase: Suggest group sharing

5.
Concepts: information retrieval, confirm information retrieval
Relationship: Both concepts involve the process of retrieving or confirming the retrieval of information.
Criteria: Users retrieve or confirm the retrieval of information.
Phrase: Confirm information retrieval

6.
Concepts: politeness, user etiquette
Relationship: Both concepts involve exhibiting politeness and proper etiquette in communication.
Criteria: Users exhibit politeness and proper etiquette in their interactions.
Phrase: Demonstrate politeness

7.
Concepts: paying respect, pay respect to experts
Relationship: Both concepts involve showing respect to experts before making requests.
Criteria: Users pay respect to experts before making requests or suggestions.
Phrase: Pay respect to experts

8.
Concepts: teacher role confirmation, confirm professional role
Relationship: Both concepts involve confirming one's professional role, particularly as a teacher.
Criteria: Users confirm their role as a teacher or professional.
Phrase: Confirm professional role

9.
Concepts: engage with community, promote community engagement
Relationship: Both concepts involve active participation and interaction within the community.
Criteria: Users and designers actively participate in discussions and foster community interaction.
Phrase: Promote community engagement

10.
Concepts: invite participation, encourage participation
Relationship: Both concepts involve encouraging community members to participate or contribute.
Criteria: Users and designers invite and encourage community members to participate or provide input.
Phrase: Encourage participation

11.
Concepts: community response, acknowledgment and support
Relationship: Both concepts involve community members responding to and supporting each other.
Criteria: Community members provide support and acknowledgment to each other.
Phrase: Provide community support

12.
Concepts: craftsmanship, acknowledge craftsmanship
Relationship: Both concepts involve appreciating the quality and attention to detail in the platform.
Criteria: Users acknowledge and appreciate the craftsmanship of the software.
Phrase: Acknowledge craftsmanship

13.
Concepts: feature appreciation, appreciation of features
Relationship: Both concepts involve users appreciating specific features of the software.
Criteria: Users appreciate specific features of the software.
Phrase: Appreciate software features

14.
Concepts: compliment on 3d effect, compliment software's 3d effect
Relationship: Both concepts involve users complimenting the software's 3D effects.
Criteria: Users compliment the 3D effects of the software.
Phrase: Compliment 3D effects

15.
Concepts: software effectiveness, usability and practicality
Relationship: Both concepts involve users commenting on the software's effectiveness and usability.
Criteria: Users comment on the effectiveness, ease of use, and practicality of the software.
Phrase: Comment on software usability

16.
Concepts: positive feedback, share positive feedback
Relationship: Both concepts involve users providing positive feedback about the software.
Criteria: Users share positive feedback or praise for the software.
Phrase: Share positive feedback

17.
Concepts: praise software, software compliment
Relationship: Both concepts involve users praising the software for its performance or features.
Criteria: Users praise the software for its practicality, effectiveness, or features.
Phrase: Praise software

18.
Concepts: software comparison, comparison to similar apps
Relationship: Both concepts involve users comparing the software to other similar applications.
Criteria: Users compare the software to other applications, highlighting its advantages.
Phrase: Compare software to others

19.
Concepts: positive response, positive interaction
Relationship: Both concepts involve users engaging in positive interactions and responses.
Criteria: Users provide positive responses or engage in positive interactions.
Phrase: Engage in positive interactions

20.
Concepts: appreciation, user appreciation
Relationship: Both concepts involve users expressing appreciation or gratitude.
Criteria: Users express appreciation or gratitude.
Phrase: Express appreciation

21.
Concepts: greeting, greet community, greet the community
Relationship: All concepts involve users or developers greeting the community.
Criteria: Users or developers greet the community.
Phrase: Greet the community

22.
Concepts: greeting back, reciprocate greeting
Relationship: Both concepts involve responding to a greeting from another user.
Criteria: Designers reciprocate a greeting from a user.
Phrase: Reciprocate greeting

23.
Concepts: gratitude to the community, community support acknowledgment
Relationship: Both concepts involve designers expressing gratitude to the community.
Criteria: Designers express gratitude to the community for their support.
Phrase: Express gratitude to the community

24.
Concepts: designer appreciation, appreciate dedication
Relationship: Both concepts involve users appreciating the designers' efforts and craftsmanship.
Criteria: Users appreciate the dedication and craftsmanship of the designers.
Phrase: Appreciate designers' efforts

25.
Concepts: user support appreciation, appreciation for teachers' help
Relationship: Both concepts involve designers appreciating the support and help from users.
Criteria: Designers express appreciation for the support and help from users.
Phrase: Appreciate user support

26.
Concepts: gratitude, express gratitude, gratitude and acknowledgment
Relationship: All concepts involve users and designers expressing gratitude or acknowledgment.
Criteria: Users and designers express gratitude or acknowledgment for contributions and support.
Phrase: Express gratitude

27.
Concepts: self answer, self-sufficiency
Relationship: Both concepts involve users finding information independently.
Criteria: Users acknowledge finding information on their own.
Phrase: Acknowledge self-sufficiency

28.
Concepts: self-solved, self-help
Relationship: Both concepts involve users finding solutions independently.
Criteria: Users acknowledge finding a solution independently and express gratitude for resources.
Phrase: Acknowledge self-help

29.
Concepts: agreement, confirm understanding
Relationship: Both concepts involve users or developers expressing agreement or understanding.
Criteria: Users or developers confirm their understanding or agreement.
Phrase: Confirm understanding

30.
Concepts: user acknowledgment, acknowledge receipt
Relationship: Both concepts involve users acknowledging receipt or understanding of information.
Criteria: Users acknowledge receipt or understanding of information.
Phrase: Acknowledge receipt

31.
Concepts: confirmation, confirm agreement
Relationship: Both concepts involve confirming or agreeing with a statement or question.
Criteria: Users confirm or agree with a statement or question.
Phrase: Confirm agreement

32.
Concepts: update confirmation, confirm update completion
Relationship: Both concepts involve confirming that an update has been applied or completed.
Criteria: Users confirm that an update has been completed.
Phrase: Confirm update completion

33.
Concepts: teaching experience, share teaching experience
Relationship: Both concepts involve users sharing their teaching experience or background.
Criteria: Users share their teaching experience and background.
Phrase: Share teaching experience

34.
Concepts: past incident, share past incident
Relationship: Both concepts involve users sharing a past incident or experience.
Criteria: Users share a past incident or experience related to the software.
Phrase: Share past incident

35.
Concepts: context of use, usability and context of use
Relationship: Both concepts involve discussing the specific contexts in which the software is used.
Criteria: Users describe the specific contexts and usability of the software.
Phrase: Describe context of use

36.
Concepts: user experience, user experience and impact
Relationship: Both concepts involve users sharing their experiences and the impact of the software.
Criteria: Users share their experiences and the impact of the software on their teaching or learning.
Phrase: Share user experience

37.
Concepts: student engagement, describe students' positive responses
Relationship: Both concepts involve users sharing positive feedback about student engagement with the software.
Criteria: Users describe positive reactions from students when using the software.
Phrase: Describe student engagement

38.
Concepts: pc version, pc version inquiry
Relationship: Both concepts involve users inquiring about the PC version of the software.
Criteria: Users ask about the PC version of the software.
Phrase: Inquire about PC version

39.
Concepts: compatibility confirmation, system compatibility confirmation
Relationship: Both concepts involve designers confirming system compatibility.
Criteria: Designers confirm that a specific version is compatible.
Phrase: Confirm system compatibility

40.
Concepts: system requirements, system compatibility
Relationship: Both concepts involve discussing the system requirements for compatibility.
Criteria: Designers discuss the system requirements and compatibility of the software.
Phrase: Discuss system requirements

41.
Concepts: consider future compatibility, future compatibility consideration
Relationship: Both concepts involve considering future compatibility of the software.
Criteria: Designers consider future compatibility and technical requirements.
Phrase: Consider future compatibility

42.
Concepts: technical consideration, technical requirement consideration
Relationship: Both concepts involve discussing technical considerations or requirements.
Criteria: Designers discuss technical requirements for software use.
Phrase: Discuss technical requirements

43.
Concepts: simulated experiment, simulated experiment assessment
Relationship: Both concepts involve discussing simulated experiments or assessments.
Criteria: Users discuss and assess simulated experiments.
Phrase: Assess simulated experiments

44.
Concepts: user inquiry, request for information
Relationship: Both concepts involve users requesting information about the software.
Criteria: Users ask for specific information or help regarding the software.
Phrase: Request information

45.
Concepts: feature request, feature requests for physics experiments
Relationship: Both concepts involve users requesting new features or improvements for the software.
Criteria: Users request new features or improvements for the Physics Lab tool.
Phrase: Request new features

46.
Concepts: touch screen information, touch screen functionality
Relationship: Both concepts involve providing information about touch screen capabilities.
Criteria: Developers provide information about touch screen functionality within the software.
Phrase: Provide touch screen information

47.
Concepts: usability discussion, software usability
Relationship: Both concepts involve discussing the usability of the software.
Criteria: Users discuss the practical usability and functionality of the software.
Phrase: Discuss software usability

48.
Concepts: input methods discussion, discuss input methods
Relationship: Both concepts involve discussing potential methods for user input.
Criteria: Designers discuss input methods for the software.
Phrase: Discuss input methods

49.
Concepts: elicit feedback, invite feedback
Relationship: Both concepts involve inviting feedback or suggestions from the community.
Criteria: Developers invite feedback or suggestions from the community.
Phrase: Invite feedback

50.
Concepts: feedback loop, community feedback loop
Relationship: Both concepts involve the process of collecting and incorporating user feedback.
Criteria: Designers collect, consider, and implement user feedback.
Phrase: Implement feedback loop

51.
Concepts: feedback, feedback prioritization
Relationship: Both concepts involve prioritizing user feedback for future updates.
Criteria: Designers prioritize user feedback for future updates.
Phrase: Prioritize feedback

52.
Concepts: provide feedback, user feedback and suggestions, suggestion and feedback
Relationship: All concepts involve users providing feedback or suggestions for the software.
Criteria: Users provide feedback or suggestions to improve the software.
Phrase: Provide feedback

53.
Concepts: encouraging feedback, feedback encouragement, encouragement of user feedback
Relationship: All concepts involve encouraging users to provide feedback or suggestions.
Criteria: Designers encourage users to provide feedback and suggestions.
Phrase: Encourage feedback

54.
Concepts: suggestion, design/feature suggestion, feature suggestion, user suggestion, design suggestion
Relationship: All concepts involve making suggestions for improvements or new features.
Criteria: Users or developers make suggestions for improvements or new features.
Phrase: Make suggestions

55.
Concepts: suggest new feature, propose another feature
Relationship: Both concepts involve suggesting additional features for the platform.
Criteria: Users suggest adding new features to the platform.
Phrase: Suggest new features

56.
Concepts: accept suggestion, accepting the suggestion
Relationship: Both concepts involve accepting a suggestion made by a community member.
Criteria: Developers accept suggestions or feedback from the community.
Phrase: Accept suggestions

57.
Concepts: request justification, feature request justification
Relationship: Both concepts involve users explaining the reasons behind their feature requests.
Criteria: Users explain the reasons for their feature requests or suggestions.
Phrase: Justify feature requests

58.
Concepts: user needs, highlight usability need
Relationship: Both concepts involve users expressing specific needs or requirements related to the software.
Criteria: Users highlight specific usability needs or suggest improvements.
Phrase: Highlight user needs

59.
Concepts: request, user requests, request specific features
Relationship: All concepts involve users making specific requests for new features or improvements.
Criteria: Users request specific features or functionalities to be added to the software.
Phrase: Request specific features

60.
Concepts: question about request, follow-up questions on needs
Relationship: Both concepts involve developers asking questions to clarify user requests or needs.
Criteria: Developers ask follow-up questions to better understand user needs.
Phrase: Clarify user requests

61.
Concepts: ask about user needs, understanding user needs
Relationship: Both concepts involve developers inquiring about user needs or preferences.
Criteria: Developers ask the community about their needs or preferences.
Phrase: Inquire about user needs

62.
Concepts: further question, explain the intention of follow-up question
Relationship: Both concepts involve designers asking follow-up questions to clarify previous statements.
Criteria: Designers ask follow-up questions and explain their intentions.
Phrase: Ask follow-up questions

63.
Concepts: encouraging elaboration, ask follow-up question on user request
Relationship: Both concepts involve designers encouraging users to provide more details about their requests.
Criteria: Designers ask users for more details about their requests or needs.
Phrase: Encourage elaboration

64.
Concepts: contextualizing response, contextualization of question
Relationship: Both concepts involve users providing context or background information to support their responses.
Criteria: Users provide context for their questions or statements.
Phrase: Provide context
---