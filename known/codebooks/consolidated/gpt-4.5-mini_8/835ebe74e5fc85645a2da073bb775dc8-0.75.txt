You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (40 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
40. 
Concepts: {Repeat the input 40}
Relationship: {What is logical relationship between concepts in code 40, or N/A if not applicable}
Criteria: {Who did what, and how for code 40}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: discussion of further interests, exploring new subjects
- Discussion of personal interests or potential topics for future exploration.
- Designers discuss exploration of new subjects or features based on community interest and express personal interest in expansion.

2.
Concepts: outlining design decisions, discussing development prioritization, outlining development priorities
- Designers outline strategic decisions regarding software features and development priorities.
- Designers discuss the order of tasks or features to be developed and outline prioritization strategies.
- Designers outline future plans and priorities for development while emphasizing feature significance.

3.
Concepts: planning for future development, suggesting future possibilities
- Designers discuss future plans for development while expressing flexibility in design considerations.
- Designers suggest potential future features or developments for the product and express interest in additional subjects.

4.
Concepts: sharing review status, updating on release status
- Designers update the community on the review status of the application and share release information.
- Designers outline the current status of the software release process and provide updates on progress.

5.
Concepts: announce software updates, informing about new updates
- Designers communicate and announce updates to keep users informed about software changes and enhancements.
- Designers announce new features and provide information about updates and components added to the software.

6.
Concepts: detailing technical updates, describing the scope of updates
- Designers share technical details about new features and bug fixes included in an update.
- Designers outline the extent of changes included in an upcoming software update and describe its significance.

7.
Concepts: instruction and updates, provide version information, software updates and downloads
- Designers providing updates and instructions to help users understand and use the software effectively.
- Designers provide and give comprehensive information about version updates to inform users of new features.
- Designers communicate information regarding software updates, downloads, and related technical details.

8.
Concepts: explaining delays, discussing feature complexity
- Designers explain the reasons behind delays in software updates or feature completions.
- Designers elaborate on the complexities involved in software development and anticipate delays in feature releases.

9.
Concepts: teaching, discussing technical limitations
- The designer explains the current state of a feature in progress and its limitations.
- Designers explain the technical limitations affecting the software and discuss their implications.

10.
Concepts: evaluating system compatibility, diagnosing compatibility issues
- Designers evaluate and confirm software compatibility across various devices and operating systems.
- Designers analyze compatibility issues and offer clear explanations regarding software-related problems.

11.
Concepts: providing access information, provide download instructions
- Designers share access information for the development plan and download instructions.
- Designers provide instructions and information on how to download the software and where to find links.

12.
Concepts: sharing design knowledge, responding to feature requests
- Designers share technical information relevant to the software's features and past design considerations.
- Designers share information about ongoing research relevant to software features while responding to feature requests.

13.
Concepts: design thoughts, providing design rationale, explaining design philosophy
- A designer shares their design philosophy or approach towards developing the software.
- Designers describe design philosophies aimed at enhancing user experience and explain the rationale behind specific decisions.
- Designers explain the guiding principles behind their design decisions and approaches.

14.
Concepts: proposing design ideas, proposing and committing to solutions
- Designers offer suggestions or alternatives in response to user inquiries and propose potential improvements.
- Designers propose theoretical or practical solutions to user issues while expressing a commitment to addressing users' needs and concerns.

15.
Concepts: discussing input methods, on-screen keyboard functionality
- Designers discuss requirements related to user input methods and their implications for software design.
- Users and designers discuss the need for on-screen keyboard functionality in the application.

16.
Concepts: design refinement, improving usability through adaptation
- Designers emphasize the need for refining design elements based on user preferences.
- Designers highlight the need for adaptations to improve software usability based on user feedback.

17.
Concepts: confirm professional roles, share professional background
- Users confirm their professional roles in response to inquiries about their backgrounds.
- Users share professional and personal backgrounds to establish context and credibility.

18.
Concepts: sharing identity per request, share teaching background
- A user shares their teaching experience as requested in the conversation.
- Users share their teaching backgrounds and experiences, including grade levels and years of experience.

19.
Concepts: identify school needs, highlight educational needs
- Users express specific needs for technology and resources in their schools.
- A user expresses specific needs related to the functionality of the software for educational purposes.

20.
Concepts: highlight technical constraints, share experiences of restrictions
- Users share information about technological limitations in their schools.
- Users share stories about network restrictions in educational settings.

21.
Concepts: technical issue, explain outdated technology issues
- User describes technical challenges associated with using the software on outdated systems.
- Users describe outdated technology affecting educational usability.

22.
Concepts: illustrate classroom success, discuss software applications
- Users share successful experiences using the software in classrooms.
- Users discuss how the software can be used effectively in classrooms.

23.
Concepts: articulate user needs, highlight usability needs
- Users express needs and request details about functionalities.
- Users suggest functionalities that accommodate current hardware trends.

24.
Concepts: make feature requests, request additional features
- Users articulate requests for specific features to improve functionality.
- Users request new features for experimentation within the software.

25.
Concepts: propose software enhancements, suggest improvements and features
- Users propose functionalities to improve software use in education.
- Designers and users suggest improvements and new features for the software.

26.
Concepts: question, ask technical questions, seek information
- Various users ask questions related to updates and features of the software.
- Users ask questions related to the softwareâ€™s technical capabilities.
- Users ask questions to gain knowledge about the software.

27.
Concepts: use humorous communication, express humor in conversation
- Designers use humor when communicating with users.
- Users express humor or amusement in their interactions.

28.
Concepts: self-help, acknowledge self-sufficiency
- User expresses gratitude for resources that help them solve their own issues.
- Users acknowledge finding solutions on their own through group resources.

29.
Concepts: express appreciation and gratitude, foster community through encouragement
- Users express gratitude and appreciation during their interactions in the community.
- Users express gratitude and encouragement, fostering a supportive atmosphere.

30.
Concepts: acknowledge help, acknowledge shared resources
- User expresses gratitude for assistance received in the community.
- Users acknowledge and appreciate resources shared by the community.

31.
Concepts: confirm user acknowledgment, acknowledge receipt of information
- Users confirm and acknowledge messages or statements made by others.
- Users acknowledge understanding or receipt of shared information.

32.
Concepts: confirm shared understanding, seek consensus and express agreement
- Users and designers affirm understanding in discussions.
- Designers and users seek and express agreement on proposed design ideas.

33.
Concepts: promise to improve, reassuring users
- A designer expresses gratitude for user support and promises improvements.
- Designers reassure users about progress and address their concerns while expressing gratitude.

34.
Concepts: engage with community interests, engage and maintain community interaction
- Designers share interests that connect them with the community.
- Designers engage and maintain interaction with community members to foster collaboration.

35.
Concepts: request user feedback, engage users for feedback
- Designers request and validate user suggestions for the software.
- Designers actively solicit and gather user feedback to create an inclusive development environment that addresses software development needs.

36.
Concepts: involve and co-design with users, offer collaborative design opportunities
- Designers actively involve users in the design process for better product relevance.
- Designers express intent to involve users in future design tasks.

37.
Concepts: clarify user roles, gather contextual information
- Designers inquire about and clarify usersâ€™ roles and backgrounds to better address their needs within the community.
- Designers seek additional information about user roles and needs.

38.
Concepts: consult with educators, acknowledging community expertise
- Designers seek input from educators to inform project content.
- Designer consults educators for expertise, while users provide feedback on diagram standards.

39.
Concepts: clarifying software versions, expanding on a user's question
- Users seek clarification about specific software versions, which designers subsequently clarify for the community.
- A designer provides a comprehensive and specific answer to a user's inquiry regarding software access, including compatibility details based on user questions.

40.
Concepts: clarify existing feature, clarifying suggestions through elaboration
- Designer clarifies how existing features work in relation to specific hardware.
- A designer clarifies usage instructions by elaborating on prior experiences and offering concrete examples to enhance suggestions.
===
---
Definitions for each code (40 in total):
1.  
Concepts: discussion of further interests, exploring new subjects  
Relationship: The discussion of personal interests leads to exploration of new subjects based on community feedback.  
Criteria: Designers engage in discussions about personal interests and explore new subjects for potential community expansion.  
Phrase: Explore new subjects.  

2.  
Concepts: outlining design decisions, discussing development prioritization, outlining development priorities  
Relationship: Outlining design decisions informs development prioritization, which in turn outlines development priorities.  
Criteria: Designers strategically outline their design decisions and prioritize development tasks based on significance.  
Phrase: Prioritize development tasks.  

3.  
Concepts: planning for future development, suggesting future possibilities  
Relationship: Planning for future development includes suggesting possibilities for enhancements based on community needs.  
Criteria: Designers plan future developments while suggesting potential features or design possibilities.  
Phrase: Suggest future possibilities.  

4.  
Concepts: sharing review status, updating on release status  
Relationship: Sharing review status provides context for updates on the overall release status.  
Criteria: Designers keep the community informed by sharing the review and release status of the software.  
Phrase: Update on release status.  

5.  
Concepts: announce software updates, informing about new updates  
Relationship: Announcing software updates serves as a means to inform users about new changes and enhancements.  
Criteria: Designers communicate updates to keep users informed about software changes and new features.  
Phrase: Announce new updates.  

6.  
Concepts: detailing technical updates, describing the scope of updates  
Relationship: Detailing technical updates involves outlining the scope of changes included in software updates.  
Criteria: Designers share technical details and the extent of changes in upcoming software updates.  
Phrase: Detail technical updates.  

7.  
Concepts: instruction and updates, provide version information, software updates and downloads  
Relationship: Providing instructions and updates includes sharing version information and download details.  
Criteria: Designers give updates and instructions that help users navigate software updates and downloads.  
Phrase: Provide software updates.  

8.  
Concepts: explaining delays, discussing feature complexity  
Relationship: Explaining delays often relates to discussions about the complexity of features being developed.  
Criteria: Designers explain delays in updates while discussing the complexities involved in development.  
Phrase: Explain delays in features.  

9.  
Concepts: teaching, discussing technical limitations  
Relationship: Teaching involves discussing the current state of features, including their limitations.  
Criteria: Designers explain the state of features in development, highlighting their technical limitations.  
Phrase: Discuss technical limitations.  

10.  
Concepts: evaluating system compatibility, diagnosing compatibility issues  
Relationship: Evaluating compatibility involves diagnosing issues related to various devices and systems.  
Criteria: Designers evaluate software compatibility while diagnosing and explaining related issues.  
Phrase: Diagnose compatibility issues.  

11.  
Concepts: providing access information, provide download instructions  
Relationship: Providing access information includes giving clear download instructions for users.  
Criteria: Designers share access and download instructions for the software effectively.  
Phrase: Provide download instructions.  

12.  
Concepts: sharing design knowledge, responding to feature requests  
Relationship: Sharing design knowledge often occurs in response to specific feature requests from users.  
Criteria: Designers share relevant technical information while addressing user feature requests.  
Phrase: Share design knowledge.  

13.  
Concepts: design thoughts, providing design rationale, explaining design philosophy  
Relationship: Sharing design thoughts involves providing rationale and explaining the overall design philosophy.  
Criteria: Designers articulate their design philosophies and the rationale behind their decisions.  
Phrase: Explain design philosophy.  

14.  
Concepts: proposing design ideas, proposing and committing to solutions  
Relationship: Proposing design ideas often involves committing to solutions that address user needs.  
Criteria: Designers propose and commit to solutions that improve user experience based on inquiries.  
Phrase: Propose design solutions.  

15.  
Concepts: discussing input methods, on-screen keyboard functionality  
Relationship: Discussion about input methods includes considerations for on-screen keyboard functionality.  
Criteria: Designers and users discuss input methods and the need for on-screen keyboard features.  
Phrase: Discuss input methods.  

16.  
Concepts: design refinement, improving usability through adaptation  
Relationship: Design refinement is aimed at improving usability, often based on user feedback.  
Criteria: Designers refine design elements and adapt features to enhance usability based on feedback.  
Phrase: Improve usability through adaptation.  

17.  
Concepts: confirm professional roles, share professional background  
Relationship: Confirming professional roles allows users to share their backgrounds to establish credibility.  
Criteria: Users confirm their professional roles and share backgrounds to enhance community context.  
Phrase: Share professional background.  

18.  
Concepts: sharing identity per request, share teaching background  
Relationship: Sharing identity often includes discussing teaching backgrounds when requested.  
Criteria: Users share their teaching experiences and backgrounds in response to inquiries.  
Phrase: Share teaching background.  

19.  
Concepts: identify school needs, highlight educational needs  
Relationship: Identifying school needs highlights specific educational requirements for technology.  
Criteria: Users express specific technological and resource needs within educational contexts.  
Phrase: Highlight educational needs.  

20.  
Concepts: highlight technical constraints, share experiences of restrictions  
Relationship: Highlighting technical constraints involves sharing personal experiences related to restrictions.  
Criteria: Users share experiences of technological limitations and restrictions in their educational environments.  
Phrase: Share experiences of restrictions.  

21.  
Concepts: technical issue, explain outdated technology issues  
Relationship: Describing technical issues often includes discussing challenges related to outdated technology.  
Criteria: Users describe technical challenges they face due to outdated systems affecting usability.  
Phrase: Explain outdated technology issues.  

22.  
Concepts: illustrate classroom success, discuss software applications  
Relationship: Illustrating classroom success often involves discussing effective applications of software.  
Criteria: Users share successful experiences using the software in educational settings.  
Phrase: Illustrate classroom success.  

23.  
Concepts: articulate user needs, highlight usability needs  
Relationship: Articulating user needs allows users to highlight specific usability requirements.  
Criteria: Users express their needs and suggest functionalities that accommodate current hardware trends.  
Phrase: Articulate user needs.  

24.  
Concepts: make feature requests, request additional features  
Relationship: Making feature requests involves articulating specific desires for additional functionalities.  
Criteria: Users articulate requests for specific features to enhance software functionality.  
Phrase: Request additional features.  

25.  
Concepts: propose software enhancements, suggest improvements and features  
Relationship: Proposing enhancements involves suggesting improvements and new features for the software.  
Criteria: Users and designers collaboratively propose functionalities to improve the software.  
Phrase: Suggest software enhancements.  

26.  
Concepts: question, ask technical questions, seek information  
Relationship: Questioning encompasses asking technical questions to seek information about the software.  
Criteria: Users ask various questions related to software updates and technical capabilities.  
Phrase: Seek information.  

27.  
Concepts: use humorous communication, express humor in conversation  
Relationship: Using humor in communication fosters a light-hearted atmosphere in conversations.  
Criteria: Designers and users express humor during their interactions.  
Phrase: Use humorous communication.  

28.  
Concepts: self-help, acknowledge self-sufficiency  
Relationship: Acknowledging self-sufficiency is often a result of successfully finding solutions independently.  
Criteria: Users express gratitude for resources that enable them to solve their own issues.  
Phrase: Acknowledge self-sufficiency.  

29.  
Concepts: express appreciation and gratitude, foster community through encouragement  
Relationship: Expressing appreciation fosters a supportive community atmosphere through encouragement.  
Criteria: Users express gratitude and encouragement to foster community support.  
Phrase: Foster community through encouragement.  

30.  
Concepts: acknowledge help, acknowledge shared resources  
Relationship: Acknowledging help involves appreciating resources shared by the community.  
Criteria: Users express gratitude for assistance and resources provided by the community.  
Phrase: Acknowledge shared resources.  

31.  
Concepts: confirm user acknowledgment, acknowledge receipt of information  
Relationship: Confirming acknowledgment involves recognizing the receipt of shared information.  
Criteria: Users confirm their understanding and receipt of messages or information.  
Phrase: Acknowledge receipt of information.  

32.  
Concepts: confirm shared understanding, seek consensus and express agreement  
Relationship: Confirming shared understanding helps in seeking consensus and expressing agreement.  
Criteria: Users and designers affirm understanding and agreement on design ideas.  
Phrase: Seek consensus and agreement.  

33.  
Concepts: promise to improve, reassuring users  
Relationship: Promising to improve reassures users about ongoing developments and progress.  
Criteria: Designers reassure users about progress while expressing gratitude for their support.  
Phrase: Reassure users about progress.  

34.  
Concepts: engage with community interests, engage and maintain community interaction  
Relationship: Engaging with community interests facilitates ongoing interaction and collaboration.  
Criteria: Designers engage with community members to maintain interaction and collaboration.  
Phrase: Maintain community interaction.  

35.  
Concepts: request user feedback, engage users for feedback  
Relationship: Requesting feedback involves engaging users to gather their suggestions and insights.  
Criteria: Designers actively solicit user feedback to create an inclusive development environment.  
Phrase: Engage users for feedback.  

36.  
Concepts: involve and co-design with users, offer collaborative design opportunities  
Relationship: Involving users in co-design tasks enhances product relevance and user satisfaction.  
Criteria: Designers express intent to involve users in collaborative design opportunities.  
Phrase: Offer collaborative design opportunities.  

37.  
Concepts: clarify user roles, gather contextual information  
Relationship: Clarifying user roles helps gather contextual information to better address needs.  
Criteria: Designers seek to clarify user roles and gather information regarding their backgrounds.  
Phrase: Gather contextual information.  

38.  
Concepts: consult with educators, acknowledging community expertise  
Relationship: Consulting with educators acknowledges their expertise and informs project content.  
Criteria: Designers seek input from educators and acknowledge their feedback during projects.  
Phrase: Consult with educators.  

39.  
Concepts: clarifying software versions, expanding on a user's question  
Relationship: Clarifying software versions is often a response to specific user inquiries.  
Criteria: Designers provide clarification about software versions and related inquiries effectively.  
Phrase: Clarify software versions.  

40.  
Concepts: clarify existing feature, clarifying suggestions through elaboration  
Relationship: Clarifying existing features involves elaborating on suggestions to enhance understanding.  
Criteria: Designers clarify how existing features work and elaborate on suggestions based on experiences.  
Phrase: Clarify existing features.  
---