You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (7 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
7. 
Concepts: {Repeat the input 7}
Relationship: {What is logical relationship between concepts in code 7, or N/A if not applicable}
Criteria: {Who did what, and how for code 7}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: answer about compatibility, suggest checking compatibility, confirming compatibility
- A designer answers questions about software compatibility.
- A designer suggests checking system compatibility.
- A designer or developer confirms the software's compatibility with specific systems or platforms.

2.
Concepts: limitation frustration, expressing user frustration
- A developer expressing frustration with current limitations.
- A user or designer expresses frustration with outdated systems or limitations.

3.
Concepts: technical issue, system limitations
- A user mentions a technical issue with their computer system.
- A user mentions limitations or issues with their computer system.

4.
Concepts: compare feature complexities, explaining feature complexity
- A designer compares the complexity of different features or tasks.
- A designer explains the complexity and development time required for a feature.

5.
Concepts: explain focus areas, explaining feature limitations
- The designer explains the focus areas of the software and its limitations.
- A participant explains the limitations of a feature or the current version of the software.

6.
Concepts: platform limitation, system limitation explanation
- A designer mentions the software's limitation concerning older operating systems or platforms.
- A designer explains why a feature cannot be supported due to system limitations.

7.
Concepts: discussing technical constraints, highlight technical constraints
- Addressing technical considerations or requirements for the software.
- Users highlight technical constraints or limitations faced by the community.
===
---
Definitions for each code (7 in total):
1.
Concepts: answer about compatibility, suggest checking compatibility, confirming compatibility
Relationship: All concepts revolve around verifying and communicating software compatibility.
Criteria: A designer or developer provides information, suggestions, or confirmations regarding the software's compatibility with various systems or platforms.
Phrase: Discussing software compatibility

2.
Concepts: limitation frustration, expressing user frustration
Relationship: Both concepts involve expressing dissatisfaction due to limitations.
Criteria: A developer, user, or designer expresses frustration with current system limitations or outdated systems.
Phrase: Expressing frustration with limitations

3.
Concepts: technical issue, system limitations
Relationship: Both concepts pertain to problems or constraints with computer systems.
Criteria: A user mentions technical issues or limitations with their computer system.
Phrase: Reporting system issues

4.
Concepts: compare feature complexities, explaining feature complexity
Relationship: Both concepts deal with the complexity of software features.
Criteria: A designer compares or explains the complexity and development time required for different features or tasks.
Phrase: Analyzing feature complexity

5.
Concepts: explain focus areas, explaining feature limitations
Relationship: Both concepts involve explaining aspects of the software, including its focus and limitations.
Criteria: A designer or participant explains the focus areas and limitations of the software or its features.
Phrase: Clarifying software focus and limitations

6.
Concepts: platform limitation, system limitation explanation
Relationship: Both concepts relate to limitations due to system or platform constraints.
Criteria: A designer mentions or explains why certain features cannot be supported due to system or platform limitations.
Phrase: Explaining system and platform constraints

7.
Concepts: discussing technical constraints, highlight technical constraints
Relationship: Both concepts involve addressing technical limitations or requirements.
Criteria: Users or designers discuss or highlight technical constraints or limitations faced by the community.
Phrase: Addressing technical constraints
---