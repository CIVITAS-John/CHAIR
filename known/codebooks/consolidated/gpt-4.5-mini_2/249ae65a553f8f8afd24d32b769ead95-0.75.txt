You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (64 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
64. 
Concepts: {Repeat the input 64}
Relationship: {What is logical relationship between concepts in code 64, or N/A if not applicable}
Criteria: {Who did what, and how for code 64}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: greet community, greet the community
- Participants offer greetings or initiate communication within the community.
- Participants greet the community, contributing to a friendly and welcoming environment.

2.
Concepts: greeting, welcome
- Users and designer use greetings to foster a friendly community atmosphere.
- Welcoming statements made by the designer to foster a friendly community atmosphere.

3.
Concepts: appreciation, appreciation of designers
- A user expressed gratitude for the designer's efforts and acknowledged their work.
- A user expresses appreciation for the quality and dedication of the designers' work.

4.
Concepts: acknowledge help, acknowledge response
- User expresses gratitude towards the designer or community for assistance.
- A user acknowledges the efforts of the designer and expresses appreciation.

5.
Concepts: gratitude, demonstrate appreciation
- Users express gratitude towards the software and the efforts of the designers.
- User expresses gratitude for the efforts and work of the developers.

6.
Concepts: express gratitude, gratitude and acknowledgment
- Instances where users express thanks or appreciation for the work done by the designers or other community members.
- Instances where users or designers express gratitude or acknowledge contributions.
- Users expressing gratitude or acknowledgment for the designers' work.
- Expressions of gratitude and recognition of user contributions.

7.
Concepts: acknowledge community support, gratitidue to the community
- The designer expresses gratitude to the community for their support.
- The designer expressed appreciation for community support and encouraged further efforts.

8.
Concepts: close interaction, community building
- A user expresses gratitude towards the community or the designer.
- User or designer expresses gratitude or camaraderie within the community.

9.
Concepts: community support, appreciate support from users
- Instances where users express support, encouragement, or appreciation for the designers' efforts.
- Designer thanks users for their support and encourages continued engagement.

10.
Concepts: positive interaction, user interaction and gratitude
- Users engage in friendly exchanges, expressing agreement or gratitude.
- Users interact positively, expressing gratitude and appreciation for the community's efforts.

11.
Concepts: user appreciation, appreciation of feedback
- Expressions of thanks or appreciation from users.
- Users express gratitude or acknowledgment for the feedback or suggestions received.

12.
Concepts: user confirmation, confirm understanding
- Users affirm or confirm previous statements or queries made within the conversation.
- Users confirm understanding or agreement with statements made in discussions.

13.
Concepts: short response, positive response
- A user provides a brief affirmative response.
- User provides a simple affirmative response to a statement or question.

14.
Concepts: update confirmation, confirm update completion
- User confirms they have successfully updated the software.
- User confirms that they have received the latest software update.

15.
Concepts: information retrieval, confirm finding information
- A user acknowledges having accessed group files, indicating retrieval of information.
- A user acknowledges receipt of information from group files.

16.
Concepts: expressive, express emotion, user expression
- User expresses feelings, emotions, or reactions using text or emojis.
- A user expresses feelings using emojis to convey their emotions.
- User shares personal feelings or emotions through the use of emojis.

17.
Concepts: emoji use, emoji communication
- Users engage with the conversation using emojis to express emotions or reactions.
- Use of emojis in communication to convey emotions or reactions within the discussion.

18.
Concepts: clarification, clarification request, seek clarification
- Participants seek clarification on technical details or previous statements.
- Participants seek clarification on specific aspects of the design or discussion.
- Participants seek clarification on previous statements or technical details.

19.
Concepts: feature request, request specific features
- Instances where users request new features or improvements for the Physics Lab tool.
- Suggestions from users about desired features or improvements for the software.
- Users express specific software features they wish to see in the Physics Lab.

20.
Concepts: physics concepts, feature requests for physics experiments
- User requests specific physics-related demonstrations or features for the software.
- Users request specific features or demonstrations related to physics experiments.

21.
Concepts: provide context for need, explain reasons for the request
- User explains the context or rationale for their feature requests based on institutional needs.
- User articulates reasons for requesting specific software features based on practical needs.

22.
Concepts: request, user requests
- User formally requests specific features or functionalities to be developed.
- Instances where users request new features or improvements.
- Specific features or improvements requested by users.

23.
Concepts: suggest alternative solution, provide alternative suggestion
- Suggestions from users about alternative solutions or options available.
- A user suggests a preferred approach for a specific function within the software.

24.
Concepts: suggest improvements, gives reason for it, highlight usability need, user input/feedback/suggestion with justifications
- A user offers suggestions aimed at improving software usability for specific tasks.
- A user suggests features that would improve usability and convenience within the software.
- User suggests the addition of a usability feature for the software interface.
- A user provided a suggestion for improving the software's functionality, along with justification.

25.
Concepts: feature improvement, usability improvement
- Suggestions made to enhance features or improve existing functionalities.
- Instances where suggestions or changes are made to improve the usability of the software.

26.
Concepts: user suggestion, design suggestion, design/feature suggestion
- Users propose enhancements or features based on personal experiences or needs.
- Users offer design ideas or enhancements that could improve usability or functionality.
- Suggestions made by users regarding features that could enhance usability or functionality.

27.
Concepts: feature suggestion, suggest new feature, propose another feature
- Users suggest specific approaches or methodologies for improving the software.
- Users suggest additional features that could enhance the software's functionality.
- Users propose additional features that would aid their teaching and usage of the software.

28.
Concepts: asking for update, ask for feature update
- Users ask about recent changes or improvements in the software.
- User inquires about upcoming updates or new features in the software.

29.
Concepts: update status inquiry, inquire about recent updates
- Inquiries made by users about the status of updates for specific versions of the software.
- A user asks about the status of recent updates to the software.

30.
Concepts: user anticipation, express anticipation
- User inquires about the status or timeline of updates for the software.
- A user expresses eagerness or anticipation regarding upcoming updates to the software.

31.
Concepts: update inquiry, checking for updates, inquire about update timeline
- A user inquired about the timing of the next software update.
- Users inquire about the timing of software updates.
- Users inquire about the timing of the next software update.

32.
Concepts: software access, download inquiry, ask for download information, inquire about download process
- A user asks about the process to download the software.
- A user sought assistance regarding the download process for the software.
- A user asked for information regarding the download process for the software.
- Users inquire about the process to download the software.

33.
Concepts: usage inquiry, ask a question about how to use, seek usage instructions
- User asks for guidance on how to use specific software features.
- Users inquire about specific operational procedures for the software.
- User asks for guidance on how to navigate or utilize the software.

34.
Concepts: request guidance, user assistance request, technical support request
- Requests from users seeking guidance on how to use the software.
- Users express requests for assistance with using the software.
- User requests assistance or instructions on using the software.

35.
Concepts: seek help, need for usage support, express need for help
- Users express their need for assistance or clarification regarding the software.
- A user expresses a need for support in using the software effectively.
- Users articulate their difficulties with understanding or using the software.

36.
Concepts: resource request, ask for resources
- Users request specific resources or documentation for the software.
- A user asks for guidance on where to obtain software resources.

37.
Concepts: user manual request, restate the request, reiterate need for user manual
- Users request a user manual for the software.
- A user reiterated their request for a user manual related to the software.
- A user expresses a need for a user manual to assist with software use.

38.
Concepts: pc version, pc version inquiries
- Users inquire specifically about the features or usage of the PC version of the software.
- Users inquire specifically about the functionality or access related to the PC version of the software.

39.
Concepts: cross platform usage, inquire about platform compatibility
- A user inquires about the application’s compatibility across different operating systems or platforms.
- A user asked for clarity regarding the compatibility of the software with a specific platform.

40.
Concepts: user inquiry, request for information
- Questions or requests for information made by users regarding the use or functionalities of Physics Lab.
- Instances where users ask for specific information or help regarding the use or features of Physics Lab.

41.
Concepts: share positive feedback, compliments the software
- A user shared positive feedback regarding the software's effectiveness in their teaching.
- A user praises the software for its effectiveness and impact during educational use.

42.
Concepts: student engagement, describe students' positive responses in class, illustrate classroom success, sharing classroom experiences, software effectiveness
- User shares positive feedback about the software's effectiveness in a classroom setting.
- A user shares positive feedback regarding student responses to the software in a classroom setting.
- User shares positive experiences of software usage in a classroom setting and its impact on students.
- Users share positive classroom experiences related to the software's performance.
- Users describe the software's positive impact or performance in educational settings.

43.
Concepts: comparison to similar apps, comparison with other applications
- Users compare the software favorably against other similar applications.
- A user compares the software favorably against other applications.

44.
Concepts: comparative feedback, compare with other software
- User compares the current software to other software, highlighting its practicality versus inconvenience.
- A user compares the software with other applications, evaluating its practicality and usability.

45.
Concepts: user reviews, software usability, usability and practicality
- Users provide positive reviews and feedback on the software's practicality.
- Users evaluate the software as practical and user-friendly in contrast to other software.
- User comments on the ease of use and practicality of the software.

46.
Concepts: user satisfaction, user satisfaction with software features
- Users express overall satisfaction with the software's usability and features.
- Users express their satisfaction with the software's practicality and specific features.

47.
Concepts: feature appreciation, appreciation of features
- User expresses positive reactions to the software's development and features.
- Users express appreciation for specific features of the software.

48.
Concepts: positive, express approval, praise software, positive feedback
- Users express positive feedback about the software's functionality and design.
- Users express approval or positive feedback about the software or its features.
- Users express positive sentiments about the software's utility or effectiveness.
- Users express satisfaction and appreciation for the software's performance and features.

49.
Concepts: compliment on the 3d effect, compliment software's 3d effect
- Compliments given by users regarding the visual effects of the software.
- A user complimented the quality of the 3D effect in the software.

50.
Concepts: outdated technology, highlight outdated technology
- A user comments on the outdated technology used in their school.
- User highlights the outdated nature of technology used in their educational environment.

51.
Concepts: explain situation, system limitations, sharing info about old computer systems in school
- A user described the limitations of the computer system in use at their school.
- A user mentioned the outdated status of the school's computer system, affecting its functionality.
- A user described the limitations of the computer system being used in their educational setting.

52.
Concepts: classroom setup, inquire about classroom conditions
- Designer asks about the availability of internet resources in educational settings.
- The designer inquired about the presence of internet connectivity in the classroom.

53.
Concepts: share teaching experience, provide background information
- A user shared their teaching experience to provide context about their background.
- The user shares their teaching experience and background in education.

54.
Concepts: paying respect, pay respect to experts
- A user pays homage to experts while making a request for specific features.
- User shows respect to experts while making a request for advanced features.

55.
Concepts: craftsmanship, acknowledge craftsmanship
- A user highlights the importance of craftsmanship in the development of the software.
- Users express recognition of the quality and skill involved in the software development.

56.
Concepts: consultation, consult on educational standards
- Designer seeks input from teachers on specific technical details related to educational materials.
- Designer seeks input from educators on educational standards related to circuit diagrams.

57.
Concepts: school needs, highlight educational needs
- Users express the specific needs of their schools related to the software.
- User statements highlighting specific educational needs or desires for the software.

58.
Concepts: teaching experience, user experience and impact
- Users share their teaching experiences to provide context for their engagement with the software.
- Users sharing their experiences and the impact of the software on their teaching or learning.

59.
Concepts: story sharing, personal anecdote
- Users share stories that contextualize their experiences with the software.
- User shares a personal experience relevant to the software's context.

60.
Concepts: classroom application, practical application
- User discusses practical applications of the software in educational settings.
- Instances where the practical application of the software in educational settings is discussed.

61.
Concepts: context of use, usability and context of use
- Instances where users describe the specific contexts in which they use the software.
- Discussions about how the software is used in different contexts and its usability.

62.
Concepts: outline development priorities, development prioritization
- Designers prioritize topics or features for development based on community input.
- Instances where designers discuss the prioritization of different features or sections to be developed.

63.
Concepts: project management, provide future plans
- Designer outlines a planned sequence for developing different sections of the software.
- A designer outlines the planned sequence for completing different sections of the software.

64.
Concepts: future plans, share info about future development plan
- Discussions about potential future developments and directions for the product.
- Discussions about future development plans and focus areas in software enhancement.
===
---
Definitions for each code (64 in total):
1.
Concepts: greet community, greet the community
Relationship: Both concepts involve initiating communication to create a welcoming atmosphere.
Criteria: Participants greet the community to foster a friendly and inclusive environment.
Phrase: Initiate greetings within the community.

2.
Concepts: greeting, welcome
Relationship: Both concepts aim to create a friendly atmosphere within the community.
Criteria: Users and designers use welcoming statements to enhance community engagement.
Phrase: Foster a welcoming atmosphere.

3.
Concepts: appreciation, appreciation of designers
Relationship: The concepts relate to acknowledging the efforts and quality of designers' work.
Criteria: Users express gratitude for the designers' hard work and dedication.
Phrase: Express appreciation for designers.

4.
Concepts: acknowledge help, acknowledge response
Relationship: Both concepts involve recognizing and appreciating assistance received from others.
Criteria: Users express gratitude towards the designer or community for their support.
Phrase: Acknowledge assistance received.

5.
Concepts: gratitude, demonstrate appreciation
Relationship: Both concepts focus on expressing thankfulness for contributions made.
Criteria: Users express gratitude towards the software and the efforts of its designers.
Phrase: Demonstrate gratitude for contributions.

6.
Concepts: express gratitude, gratitude and acknowledgment
Relationship: The concepts involve recognizing contributions and expressing thanks.
Criteria: Users express gratitude or acknowledge contributions from designers and community members.
Phrase: Express gratitude and acknowledgment.

7.
Concepts: acknowledge community support, gratitude to the community
Relationship: Both concepts focus on recognizing and appreciating support from the community.
Criteria: Designers express gratitude for community support and encourage ongoing engagement.
Phrase: Acknowledge community support.

8.
Concepts: close interaction, community building
Relationship: The concepts relate to fostering connections and a sense of belonging within the community.
Criteria: Users express gratitude and camaraderie, contributing to community building.
Phrase: Foster close interaction.

9.
Concepts: community support, appreciate support from users
Relationship: Both concepts involve recognizing and valuing support received from users.
Criteria: Users express appreciation for designers' efforts, while designers thank users for their support.
Phrase: Appreciate community support.

10.
Concepts: positive interaction, user interaction and gratitude
Relationship: The concepts highlight friendly exchanges that strengthen community ties.
Criteria: Users engage positively, expressing gratitude and appreciation for community efforts.
Phrase: Engage in positive interactions.

11.
Concepts: user appreciation, appreciation of feedback
Relationship: Both concepts focus on recognizing the value of feedback received.
Criteria: Users express gratitude or acknowledgment for the feedback they receive.
Phrase: Acknowledge user feedback.

12.
Concepts: user confirmation, confirm understanding
Relationship: The concepts involve affirming statements or understanding within discussions.
Criteria: Users confirm their understanding or agreement with previous statements.
Phrase: Confirm understanding.

13.
Concepts: short response, positive response
Relationship: Both concepts focus on providing brief affirmations in communication.
Criteria: Users give affirmative responses to statements or questions.
Phrase: Provide brief affirmative responses.

14.
Concepts: update confirmation, confirm update completion
Relationship: The concepts relate to verifying the status of software updates.
Criteria: Users confirm successful updates or receipt of the latest software version.
Phrase: Confirm update completion.

15.
Concepts: information retrieval, confirm finding information
Relationship: Both concepts involve acknowledging the successful access of information.
Criteria: Users acknowledge retrieval of information from group files.
Phrase: Confirm information retrieval.

16.
Concepts: expressive, express emotion, user expression
Relationship: The concepts involve conveying emotions or reactions through communication.
Criteria: Users express their feelings or emotions using text or emojis.
Phrase: Express emotions through communication.

17.
Concepts: emoji use, emoji communication
Relationship: Both concepts focus on using emojis as a means of expressing reactions.
Criteria: Users utilize emojis to convey emotions or reactions within discussions.
Phrase: Engage in emoji communication.

18.
Concepts: clarification, clarification request, seek clarification
Relationship: The concepts involve the need to understand details better.
Criteria: Participants seek clarification on technical details or previous statements.
Phrase: Request clarification.

19.
Concepts: feature request, request specific features
Relationship: Both concepts focus on users communicating their desired software improvements.
Criteria: Users request new features or improvements for the Physics Lab tool.
Phrase: Request specific features.

20.
Concepts: physics concepts, feature requests for physics experiments
Relationship: Both concepts relate to requesting specific features pertinent to physics.
Criteria: Users request features or demonstrations related to physics experiments.
Phrase: Request physics-related features.

21.
Concepts: provide context for need, explain reasons for the request
Relationship: Both concepts involve articulating the rationale behind a request.
Criteria: Users explain the context or needs behind their feature requests.
Phrase: Explain rationale for requests.

22.
Concepts: request, user requests
Relationship: Both concepts emphasize users formally communicating their needs.
Criteria: Users formally request specific features or improvements for development.
Phrase: Formally request features.

23.
Concepts: suggest alternative solution, provide alternative suggestion
Relationship: Both concepts involve proposing different options or approaches.
Criteria: Users suggest alternative solutions or preferred approaches for software functions.
Phrase: Suggest alternative solutions.

24.
Concepts: suggest improvements, give reason for it, highlight usability need, user input/feedback/suggestion with justifications
Relationship: The concepts focus on proposing enhancements while justifying their necessity.
Criteria: Users suggest improvements aimed at enhancing software usability and provide justifications.
Phrase: Suggest usability improvements with justifications.

25.
Concepts: feature improvement, usability improvement
Relationship: Both concepts focus on enhancing existing features for better user experience.
Criteria: Suggestions are made to enhance features or improve software usability.
Phrase: Propose feature improvements.

26.
Concepts: user suggestion, design suggestion, design/feature suggestion
Relationship: The concepts involve users proposing enhancements or features based on their needs.
Criteria: Users propose design ideas or enhancements to improve software usability.
Phrase: Propose design suggestions.

27.
Concepts: feature suggestion, suggest new feature, propose another feature
Relationship: Both concepts relate to users proposing additional functionalities for the software.
Criteria: Users suggest specific approaches or features that could enhance software performance.
Phrase: Suggest new features.

28.
Concepts: asking for update, ask for feature update
Relationship: Both concepts focus on users inquiring about recent changes or improvements.
Criteria: Users ask about recent software changes or upcoming feature updates.
Phrase: Inquire about updates.

29.
Concepts: update status inquiry, inquire about recent updates
Relationship: The concepts involve users seeking information about software updates.
Criteria: Users inquire about the status of recent updates to the software.
Phrase: Inquire about update status.

30.
Concepts: user anticipation, express anticipation
Relationship: Both concepts relate to users expressing eagerness for future updates.
Criteria: Users express anticipation regarding the status or timeline of updates.
Phrase: Express anticipation.

31.
Concepts: update inquiry, checking for updates, inquire about update timeline
Relationship: The concepts involve users seeking information about upcoming software updates.
Criteria: Users inquire about the timing of software updates.
Phrase: Inquire about update timing.

32.
Concepts: software access, download inquiry, ask for download information, inquire about download process
Relationship: The concepts focus on users seeking information regarding software download processes.
Criteria: Users ask for guidance on how to download the software.
Phrase: Inquire about software download.

33.
Concepts: usage inquiry, ask a question about how to use, seek usage instructions
Relationship: The concepts involve users seeking guidance on software functionalities.
Criteria: Users inquire about how to use specific software features.
Phrase: Seek usage instructions.

34.
Concepts: request guidance, user assistance request, technical support request
Relationship: All concepts focus on users asking for help with software usage.
Criteria: Users request assistance or instructions on using the software.
Phrase: Request user assistance.

35.
Concepts: seek help, need for usage support, express need for help
Relationship: The concepts relate to users expressing their need for clarification or assistance.
Criteria: Users express their need for help in using the software effectively.
Phrase: Seek help.

36.
Concepts: resource request, ask for resources
Relationship: Both concepts involve users requesting specific resources for software use.
Criteria: Users request documentation or resources related to the software.
Phrase: Request resources.

37.
Concepts: user manual request, restate the request, reiterate need for user manual
Relationship: The concepts involve users emphasizing their need for a user manual.
Criteria: Users request a user manual to assist with software use.
Phrase: Request user manual.

38.
Concepts: pc version, pc version inquiries
Relationship: Both concepts focus on users asking about the PC version of the software.
Criteria: Users inquire about features or usage of the PC version of the software.
Phrase: Inquire about PC version.

39.
Concepts: cross platform usage, inquire about platform compatibility
Relationship: The concepts involve users seeking information on software compatibility across platforms.
Criteria: Users inquire about compatibility of the software with different operating systems.
Phrase: Inquire about platform compatibility.

40.
Concepts: user inquiry, request for information
Relationship: Both concepts focus on users asking questions regarding software functionalities.
Criteria: Users request specific information about the software's features.
Phrase: Request information.

41.
Concepts: share positive feedback, compliments the software
Relationship: Both concepts involve users providing positive evaluations of the software.
Criteria: Users share positive feedback regarding the software's effectiveness.
Phrase: Share positive feedback.

42.
Concepts: student engagement, describe students' positive responses in class, illustrate classroom success, sharing classroom experiences, software effectiveness
Relationship: The concepts relate to sharing experiences that highlight the software's impact on education.
Criteria: Users share positive feedback about the software's effectiveness in classroom settings.
Phrase: Share classroom experiences.

43.
Concepts: comparison to similar apps, comparison with other applications
Relationship: Both concepts involve users evaluating the software against competitors.
Criteria: Users compare the software favorably against other similar applications.
Phrase: Compare with similar applications.

44.
Concepts: comparative feedback, compare with other software
Relationship: The concepts involve users evaluating the software's practicality in relation to others.
Criteria: Users compare the software with other applications, assessing usability.
Phrase: Provide comparative feedback.

45.
Concepts: user reviews, software usability, usability and practicality
Relationship: The concepts involve users evaluating and providing feedback on software usability.
Criteria: Users provide reviews on the software's practicality and user-friendliness.
Phrase: Review software usability.

46.
Concepts: user satisfaction, user satisfaction with software features
Relationship: Both concepts focus on users expressing their contentment with software functionalities.
Criteria: Users express overall satisfaction with the usability and features of the software.
Phrase: Express user satisfaction.

47.
Concepts: feature appreciation, appreciation of features
Relationship: The concepts involve users recognizing and valuing specific aspects of the software.
Criteria: Users express positive reactions to the software's development and features.
Phrase: Appreciate software features.

48.
Concepts: positive, express approval, praise software, positive feedback
Relationship: Both concepts highlight users expressing their approval and satisfaction with the software.
Criteria: Users express positive feedback about the software's utility and design.
Phrase: Express positive feedback.

49.
Concepts: compliment on the 3d effect, compliment software's 3d effect
Relationship: Both concepts focus on users praising the visual aspects of the software.
Criteria: Users compliment the quality of the 3D effects in the software.
Phrase: Compliment the 3D effect.

50.
Concepts: outdated technology, highlight outdated technology
Relationship: Both concepts involve users commenting on the obsolescence of technology in their environment.
Criteria: Users highlight the outdated nature of technology used in their educational settings.
Phrase: Highlight outdated technology.

51.
Concepts: explain situation, system limitations, sharing info about old computer systems in school
Relationship: The concepts involve users describing the limitations of their current systems.
Criteria: Users describe the limitations of the computer systems used in their educational settings.
Phrase: Explain system limitations.

52.
Concepts: classroom setup, inquire about classroom conditions
Relationship: Both concepts involve inquiries regarding the technical conditions in classrooms.
Criteria: Designers inquire about internet resources and connectivity availability in classrooms.
Phrase: Inquire about classroom conditions.

53.
Concepts: share teaching experience, provide background information
Relationship: Both concepts involve users sharing their teaching history to give context.
Criteria: Users share their teaching experience to provide relevant background information.
Phrase: Share teaching experiences.

54.
Concepts: paying respect, pay respect to experts
Relationship: Both concepts involve users showing honor and recognition towards experts.
Criteria: Users pay homage to experts while making feature requests.
Phrase: Pay respect to experts.

55.
Concepts: craftsmanship, acknowledge craftsmanship
Relationship: The concepts relate to recognizing the skill involved in software development.
Criteria: Users express recognition of the quality and craftsmanship in the software development.
Phrase: Acknowledge craftsmanship.

56.
Concepts: consultation, consult on educational standards
Relationship: The concepts involve designers seeking input from educators on standards.
Criteria: Designers consult with teachers regarding specific technical details and educational standards.
Phrase: Consult on educational standards.

57.
Concepts: school needs, highlight educational needs
Relationship: Both concepts focus on expressing the specific requirements of educational settings.
Criteria: Users express the educational needs related to the software in their schools.
Phrase: Highlight educational needs.

58.
Concepts: teaching experience, user experience and impact
Relationship: The concepts involve users sharing their experiences to illustrate software impact.
Criteria: Users share their teaching experiences and the software's impact on their work.
Phrase: Share user experiences.

59.
Concepts: story sharing, personal anecdote
Relationship: Both concepts involve users sharing personal stories that relate to their experiences.
Criteria: Users share stories that contextualize their experiences with the software.
Phrase: Share personal anecdotes.

60.
Concepts: classroom application, practical application
Relationship: Both concepts relate to discussing how the software can be effectively used in education.
Criteria: Users discuss practical applications of the software in educational settings.
Phrase: Discuss classroom applications.

61.
Concepts: context of use, usability and context of use
Relationship: The concepts involve describing how the software is used in different contexts.
Criteria: Users provide descriptions of specific contexts in which they use the software.
Phrase: Outline context of use.

62.
Concepts: outline development priorities, development prioritization
Relationship: Both concepts focus on prioritizing development tasks based on community input.
Criteria: Designers prioritize features or topics for development based on community feedback.
Phrase: Outline development priorities.

63.
Concepts: project management, provide future plans
Relationship: The concepts involve outlining planned sequences for software development.
Criteria: Designers outline a sequence for developing different sections of the software.
Phrase: Provide future development plans.

64.
Concepts: future plans, share info about future development plan
Relationship: Both concepts focus on discussing potential future enhancements for the software.
Criteria: Discussions occur about future development plans and focus areas for software improvement.
Phrase: Share future development plans.
---