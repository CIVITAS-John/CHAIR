You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (11 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
11. 
Concepts: {Repeat the input 11}
Relationship: {What is logical relationship between concepts in code 11, or N/A if not applicable}
Criteria: {Who did what, and how for code 11}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: resolve user concerns, prioritize user feedback
- Designers respond to user concerns regarding usability and commit to providing solutions.
- Designers prioritize and commit to user feedback, proposing specific design refinements.

2.
Concepts: announce new updates, announce upcoming features
- The designer lists new components and features added in an update and announces changes to component specifications.
- The designer lists and previews upcoming features and indicates significant updates that include new capabilities.

3.
Concepts: promise ongoing improvements, communicate ongoing progress
- Designers reassure users about future improvements and confirm that updates are in progress.
- The designer highlights significant progress made in the software update and communicates ongoing work on specific aspects.

4.
Concepts: community feedback, support community suggestions
- Users providing feedback and suggestions to improve the product.
- Users agree with and support suggestions made by others in the community.

5.
Concepts: acknowledgment, acknowledge expertise
- Users acknowledge the contributions of experts and make specific requests for software features.
- A user pays respect to experts before making a request for new features to show appreciation.

6.
Concepts: engage in polite exchanges, maintain community interaction
- Designers acknowledge community norms and engage in polite exchanges with users.
- Designers engage in casual conversations to maintain interaction and rapport with users.

7.
Concepts: technical issue, highlight technical challenges
- A user describes issues related to the outdated computer system, indicating a technical problem.
- Users describe technical constraints and challenges posed by outdated technology in schools.

8.
Concepts: provide feedback, propose features
- Users provide feedback or suggestions on features to guide enhancements.
- Users request new features or improvements based on their experiences to enhance functionality.

9.
Concepts: express user needs, make feature requests
- Users articulate their needs and those of their schools regarding software functionality.
- Users express a need for specific features and make requests explaining their reasons.

10.
Concepts: seek user input, involve users in the design process
- Designers actively solicit and encourage user input to guide software development.
- Designers actively involve users in the design process, allowing them to contribute ideas and decisions through feedback and testing.

11.
Concepts: visual design appreciation, express satisfaction with software
- A user appreciates the visual design aspects of the software.
- Users express gratitude for the software and satisfaction with its design and capabilities.
===
---
Definitions for each code (11 in total):
1.
Concepts: resolve user concerns, prioritize user feedback  
Relationship: Designers address user concerns while also valuing and acting on user feedback.  
Criteria: Designers respond to user concerns regarding usability and prioritize user feedback by proposing specific design refinements.  
Phrase: Address user concerns and prioritize feedback  

2.
Concepts: announce new updates, announce upcoming features  
Relationship: Designers communicate both current updates and future enhancements to keep users informed.  
Criteria: The designer lists new components and features added in an update while also previewing upcoming features and significant updates.  
Phrase: Communicate updates and future features  

3.
Concepts: promise ongoing improvements, communicate ongoing progress  
Relationship: Designers assure users of future enhancements while also providing updates on current progress.  
Criteria: Designers reassure users about future improvements and highlight significant progress made in the software update.  
Phrase: Assure improvements and communicate progress  

4.
Concepts: community feedback, support community suggestions  
Relationship: Users contribute feedback and collectively support suggestions to enhance the product.  
Criteria: Users provide feedback and support suggestions made by others in the community to improve the product.  
Phrase: Provide feedback and support suggestions  

5.
Concepts: acknowledgment, acknowledge expertise  
Relationship: Users recognize the contributions of experts while also making requests for features.  
Criteria: Users acknowledge the contributions of experts and show appreciation before making requests for new features.  
Phrase: Acknowledge expertise and make requests  

6.
Concepts: engage in polite exchanges, maintain community interaction  
Relationship: Designers foster a respectful environment while ensuring ongoing interaction with users.  
Criteria: Designers engage in polite exchanges and casual conversations to maintain interaction and rapport with users.  
Phrase: Engage in exchanges and maintain interaction  

7.
Concepts: technical issue, highlight technical challenges  
Relationship: Users identify specific technical problems and challenges related to outdated technology.  
Criteria: A user describes issues related to the outdated computer system and highlights technical constraints posed by outdated technology in schools.  
Phrase: Identify technical issues and challenges  

8.
Concepts: provide feedback, propose features  
Relationship: Users offer feedback and suggestions to guide the development of new features.  
Criteria: Users provide feedback or suggestions on features and request new improvements based on their experiences.  
Phrase: Provide feedback and propose features  

9.
Concepts: express user needs, make feature requests  
Relationship: Users articulate their needs and formally request specific features based on those needs.  
Criteria: Users express their needs regarding software functionality and make requests explaining their reasons.  
Phrase: Articulate needs and request features  

10.
Concepts: seek user input, involve users in the design process  
Relationship: Designers actively solicit user input and integrate it into the design process.  
Criteria: Designers actively seek user input and involve users in the design process through feedback and testing.  
Phrase: Seek input and involve users  

11.
Concepts: visual design appreciation, express satisfaction with software  
Relationship: Users recognize and appreciate the visual design while expressing overall satisfaction with the software.  
Criteria: A user appreciates the visual design aspects of the software and expresses gratitude for its design and capabilities.  
Phrase: Appreciate design and express satisfaction  
---