You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (62 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
62. 
Concepts: {Repeat the input 62}
Relationship: {What is logical relationship between concepts in code 62, or N/A if not applicable}
Criteria: {Who did what, and how for code 62}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: testing phase, clarify testing status
- Indicating that the current phase is testing a feature or tool.
- Clarifying the testing nature and current status of a feature or tool.

2.
Concepts: development prioritization, prioritize development sequence
- Instances where designers discuss the prioritization of different features or sections to be developed.
- A designer prioritizes the development sequence of different sections of the software.

3.
Concepts: development focus, development priorities
- Designer explains the current focus and sequence of development.
- Someone outlines the development priorities for the project.

4.
Concepts: planning feature development, outlining feature roadmap
- Indicating plans for expanding, enhancing, or developing features.
- Designer outlines the development priorities and provides a list of features for future updates.

5.
Concepts: introducing and detailing new features, explaining plans and upcoming features
- Designers introduce and provide a detailed overview of new software features and components.
- Designers explain plans or provide detailed descriptions of upcoming features and functionalities.

6.
Concepts: communicate release plans, outlining update schedules, confirming updates
- A designer communicates plans for future software releases.
- Designers provide timelines and outline the schedule for software updates across platforms.
- Designers confirm and provide information on the implementation and release schedules of features.

7.
Concepts: design discussion, discussing design aspects
- Detailed discussions about design decisions and feature development plans.
- Designers discuss the visual, technical, and usability aspects of the software.

8.
Concepts: discussing feature details, discussing feature optimization
- Someone discusses the details or considerations of a feature.
- A designer communicates ongoing efforts to optimize and improve features.

9.
Concepts: outlining future plans, discussing future updates
- Designers outline and share plans and goals for future design improvements or additions.
- Designers discuss the planning, timelines, and potential developments for future updates and features.
- Individuals mention potential future updates or considerations for compatibility.

10.
Concepts: r&d efforts, ongoing research, discussing current efforts
- Designer talks about ongoing research and development efforts.
- When mentioning ongoing research or development efforts.
- Someone discusses current research or efforts towards a feature.

11.
Concepts: communicate ongoing work, share information about feature development
- Communicating ongoing work or development activities.
- Sharing current development efforts or progress on features.

12.
Concepts: providing status updates, communicating progress and plans
- A designer provides status information about updates, progress, or ongoing research and development.
- Designers communicate the progress and status of updates, along with future plans of the project.

13.
Concepts: ask about user needs, trying to understand needs
- Questions aimed at understanding user needs or preferences.
- Attempting to understand user issues or requirements.

14.
Concepts: address user needs, explaining feature necessity
- A designer discusses the importance of meeting user needs through feature enhancements.
- Someone explains the need or reason for a particular feature or task.

15.
Concepts: user need, highlight usability need
- Stating specific user needs or requirements.
- Highlighting the need for specific usability features.

16.
Concepts: input methods, input methods discussion
- A designer suggests the need for specific input methods in the software.
- Discussing methods or requirements for inputting data, particularly regarding interface design.

17.
Concepts: make design decision, interface layout decisions
- A designer makes a decision regarding the design or features of the software.
- Decisions regarding the layout or interface of the software.

18.
Concepts: align with user needs, align with educational needs
- Tailoring software features to meet the specific needs of users.
- Designers aligning software features with specific educational requirements.

19.
Concepts: dual solution proposal, suggesting dual approaches
- Proposing dual solutions to address multiple user needs.
- A designer suggests using both options to meet user needs or preferences.

20.
Concepts: design idea proposal, propose potential solution, sharing potential solutions
- A designer proposes a design idea for feedback.
- Designer proposes a technical solution to a potential problem.
- Someone shares potential solutions based on feedback or design principles.

21.
Concepts: suggest alternatives, openness to alternatives
- A user provides alternative suggestions to improve usability or features.
- Being open to alternative solutions or suggestions from users to improve usability.

22.
Concepts: design refinement, suggesting feature simplification, simplification and refinement
- Recommendation or effort to make a design simpler and more understandable.
- A designer suggests making a feature or design element simpler.
- Someone discusses the importance of simplification and refinement in design.

23.
Concepts: workaround, practical advice
- Designer shares a workaround or tip for using the software.
- Designer offers practical advice or a workaround.

24.
Concepts: usability workaround, providing workarounds
- Providing a workaround for usability issues.
- Someone provides step-by-step instructions for a workaround based on previous experience.

25.
Concepts: troubleshooting, inquiring about specific problems
- Designer engages in troubleshooting user issues.
- A designer inquires about specific problems users have encountered.

26.
Concepts: analyzing the problem, acknowledge compatibility limitations
- Designer provides an analysis of a compatibility issue.
- A designer acknowledges compatibility limitations and suggests potential solutions.

27.
Concepts: comprehensive usability solution, addressing usability concerns
- Designer considers a comprehensive solution for usability issues.
- A designer addresses and mitigates user concerns about usability or compatibility.

28.
Concepts: requesting technical support, providing technical support
- Users request help or technical support for specific software or hardware issues.
- Instances where designers or users provide technical assistance or address technical issues with the software.

29.
Concepts: user support, personalized assistance
- Assistance and support provided by designers to help users effectively use the product.
- A designer offers personalized assistance to a user.

30.
Concepts: compatibility assurance, system requirements
- Assuring users about the compatibility of the software.
- Providing information about the software’s system requirements for compatibility.

31.
Concepts: discussing system compatibility, inquiring about platform compatibility
- Answers addressing questions about system and software compatibility.
- A user asks about the compatibility of the software with a specific platform.

32.
Concepts: confirming system compatibility, specifying compatibility requirements
- A designer confirms the software’s compatibility with specified systems or hardware.
- Designer specifies compatibility requirements and considers technical solutions for compatibility.

33.
Concepts: current version limitation, discussing solution limitations, explaining system limitations
- Someone explains the limitations of the current version.
- Someone talks about the limitations of a proposed solution.
- Users or designers explain the limitations of their current system or platform.

34.
Concepts: technical specificity, consider technical requirements
- Providing specific technical conditions or requirements for using the application.
- Considering technical requirements for the use of the software.

35.
Concepts: explaining follow-up intentions, explain intention of question
- Someone explains the intention behind a follow-up question.
- Designer explains the reason or intention behind a certain question or action.

36.
Concepts: design principles, explain design philosophy
- Someone discusses design principles or philosophies.
- The underlying principles and approaches guiding the design and development of the product.

37.
Concepts: give reason, providing rationale
- Designer explains why they need to gather opinions before proceeding.
- A user or designer provides rationale for a request or decision.

38.
Concepts: explain design rationale, provide development rationale
- A designer explains the rationale behind the design choices made for the software.
- A designer provides the rationale for development decisions and feature implementations.

39.
Concepts: future chemistry app, mention potential chemistry experiments
- Designer hints at possible future development of a chemistry app.
- Designer mentions the possibility of future chemistry-related experiments.

40.
Concepts: function example, explaining functionalities
- Designer provides examples to illustrate functionality.
- Designers provide detailed explanations and clarifications about the functionalities of specific features.

41.
Concepts: subject focus, explain content focus
- Discussion pointing to the specific focus areas or main topics covered by the lab’s physics experiments.
- Someone explains the focus areas or limitations of the physics content.

42.
Concepts: feature stability, discussing long-term stability
- Discussing the reliability or stability of a feature.
- Someone discusses the long-term stability of a feature once implemented.

43.
Concepts: give examples of feature, explain feature importance
- Giving specific examples or details about a feature.
- Explaining the significance or importance of a feature.

44.
Concepts: functionality explanation, discussing component functionality
- Someone addresses the functionality of a feature or device.
- Someone discusses the functionality of components.

45.
Concepts: sharing user experience, providing comparative feedback
- Users provide feedback or reviews on their experience with the software.
- Users compare the software favorably against other applications and provide feedback on its practicality.

46.
Concepts: expressing satisfaction and approval, praising software usability and effectiveness
- Users express approval and satisfaction with the software and its features.
- Users highlight the software's ease of use and praise its practicality and effectiveness.

47.
Concepts: user tips, feature guidance, usage instructions
- Designer provides tips or special instructions related to new features.
- Someone provides guidance on how to use a feature.
- Designer provides instructions for using specific features or components.

48.
Concepts: instruction and updates, providing download instructions
- Designers providing updates and instructions to help users understand and use the software effectively.
- Designers provide instructions and information about how to download the software.

49.
Concepts: technical details, provide technical information
- Detailing technical features, new updates, and bug fixes for the application.
- Providing specific technical details or limitations of the software.

50.
Concepts: clarifying version details, describing update specifics
- Someone clarifies the type or usage of the software version being referred to.
- Someone provides detailed information about features and changes in a specific software version.

51.
Concepts: platform clarification, inquiring about software downloads
- A user asks where to download different versions of the software.
- Users ask for help with downloading software or inquire about where to find specific versions.

52.
Concepts: information seeking, inquiring about software use, inquiring about software usage
- Users asking questions to gain knowledge or resources related to the software.
- Questions or requests for information made by users regarding the use or functionalities of Physics Lab.
- A user inquires and seeks instructions on how to use a specific version of the software.

53.
Concepts: seeking guidance, request guidance
- Someone seeks guidance or a user manual.
- Requesting guidance or instructions on usage.

54.
Concepts: user manual request, express need for documentation
- Individuals asking for the user manual, either directly or inquiring if one is available.
- Requests for documentation or user manuals.

55.
Concepts: platform use question, technical inquiry
- When users ask questions related to platform use or updates.
- Instances where users ask technical questions about the platform, indicating areas of user interest or potential issues.

56.
Concepts: confirmation seeking, requesting clarification
- When seeking confirmation about a specific item or detail.
- Someone asks for clarification about a specific detail or request.

57.
Concepts: sharing classroom impact, illustrating classroom success
- Users share their experiences and the impact of the software on their teaching or learning.
- A user describes their successful application of the software in a classroom setting.

58.
Concepts: educational context, provide educational context
- Users and designers discuss the educational context and technological environment.
- Users provide context about the technology and practices in their schools or environments.

59.
Concepts: internet restriction, classroom environment description
- Explaining restrictions related to internet connectivity in classrooms.
- When describing the classroom environment, particularly regarding internet usage policies.

60.
Concepts: express concern, raise related issue, raise concern for new feature
- Expressing concerns or issues related to the software.
- Someone raises an issue related to the design or functionality.
- Raising concerns or questions about new features.

61.
Concepts: limitation frustration, expressing user frustration
- Expressing frustration or dissatisfaction with the current limitations of the platform.
- Users express frustration and dissatisfaction with outdated systems or technical issues.

62.
Concepts: school computer system issue, explaining technical issues
- A user mentions the outdated state of their school's computer systems.
- A user describes and explains a technical issue with their school's computer system.
===
---
Definitions for each code (62 in total):
1.
Concepts: testing phase, clarify testing status
Relationship: Both concepts pertain to identifying and explaining the current stage of testing.
Criteria: A designer indicates and clarifies the status and nature of the current testing phase of a feature or tool.
Phrase: Clarifying testing status

2.
Concepts: development prioritization, prioritize development sequence
Relationship: Both concepts involve setting the order of development tasks based on priority.
Criteria: Designers discuss and prioritize the sequence in which different features or sections should be developed.
Phrase: Prioritizing development sequence

3.
Concepts: development focus, development priorities
Relationship: Both concepts relate to determining the main areas and order of development efforts.
Criteria: Designers explain the current focus and outline the priorities for the development of the project.
Phrase: Outlining development priorities

4.
Concepts: planning feature development, outlining feature roadmap
Relationship: Both concepts involve setting plans and priorities for future features.
Criteria: Designers plan and outline a roadmap for developing and prioritizing future features.
Phrase: Planning feature development

5.
Concepts: introducing and detailing new features, explaining plans and upcoming features
Relationship: Both concepts involve presenting new features and providing detailed plans and descriptions.
Criteria: Designers introduce and provide detailed explanations of new features and plans for upcoming functionalities.
Phrase: Introducing and detailing new features

6.
Concepts: communicate release plans, outlining update schedules, confirming updates
Relationship: All concepts relate to informing users about future software releases and updates.
Criteria: Designers communicate and confirm the release plans, schedules, and timelines for software updates.
Phrase: Outlining update schedules

7.
Concepts: design discussion, discussing design aspects
Relationship: Both concepts involve detailed conversations about design elements.
Criteria: Designers discuss various aspects of the software's design, including visual, technical, and usability considerations.
Phrase: Discussing design aspects

8.
Concepts: discussing feature details, discussing feature optimization
Relationship: Both concepts relate to in-depth discussions about features and their improvements.
Criteria: Designers discuss the details and ongoing optimization efforts for specific features.
Phrase: Discussing feature details

9.
Concepts: outlining future plans, discussing future updates
Relationship: Both concepts involve sharing plans and goals for future developments.
Criteria: Designers outline and discuss plans, timelines, and potential developments for future updates and features.
Phrase: Discussing future updates

10.
Concepts: r&d efforts, ongoing research, discussing current efforts
Relationship: All concepts pertain to current research and development activities.
Criteria: Designers discuss ongoing research and development efforts related to the project.
Phrase: Discussing ongoing research

11.
Concepts: communicate ongoing work, share information about feature development
Relationship: Both concepts involve sharing current progress and work on features.
Criteria: Designers communicate and share information about ongoing work and development activities.
Phrase: Sharing information about feature development

12.
Concepts: providing status updates, communicating progress and plans
Relationship: Both concepts involve updating users on progress and future plans.
Criteria: Designers provide status updates and communicate progress and future plans for the project.
Phrase: Providing status updates

13.
Concepts: ask about user needs, trying to understand needs
Relationship: Both concepts involve efforts to understand user requirements.
Criteria: Designers ask questions to understand user needs and preferences.
Phrase: Asking about user needs

14.
Concepts: address user needs, explaining feature necessity
Relationship: Both concepts focus on meeting user needs through features.
Criteria: Designers discuss and explain the necessity of features to address user needs.
Phrase: Addressing user needs

15.
Concepts: user need, highlight usability need
Relationship: Both concepts pertain to identifying and emphasizing user requirements.
Criteria: Designers state and highlight specific user needs and usability requirements.
Phrase: Highlighting usability need

16.
Concepts: input methods, input methods discussion
Relationship: Both concepts involve discussing data input methods.
Criteria: Designers discuss and suggest specific input methods for the software.
Phrase: Discussing input methods

17.
Concepts: make design decision, interface layout decisions
Relationship: Both concepts involve decisions about the software’s design and layout.
Criteria: Designers make decisions regarding the design and layout of the software.
Phrase: Making design decisions

18.
Concepts: align with user needs, align with educational needs
Relationship: Both concepts involve aligning software features with specific needs.
Criteria: Designers align software features to meet user and educational needs.
Phrase: Aligning with user needs

19.
Concepts: dual solution proposal, suggesting dual approaches
Relationship: Both concepts involve proposing multiple solutions to address needs.
Criteria: Designers propose dual solutions to address multiple user needs or preferences.
Phrase: Proposing dual solutions

20.
Concepts: design idea proposal, propose potential solution, sharing potential solutions
Relationship: All concepts involve proposing and sharing design ideas and solutions.
Criteria: Designers propose and share potential design ideas and solutions for feedback.
Phrase: Proposing potential solutions

21.
Concepts: suggest alternatives, openness to alternatives
Relationship: Both concepts involve considering alternative solutions.
Criteria: Designers suggest and show openness to alternative solutions for improving usability.
Phrase: Suggesting alternatives

22.
Concepts: design refinement, suggesting feature simplification, simplification and refinement
Relationship: All concepts involve refining and simplifying design features.
Criteria: Designers recommend and discuss the simplification and refinement of design elements.
Phrase: Suggesting feature simplification

23.
Concepts: workaround, practical advice
Relationship: Both concepts involve providing practical solutions and tips.
Criteria: Designers share practical advice or workarounds for using the software.
Phrase: Providing practical advice

24.
Concepts: usability workaround, providing workarounds
Relationship: Both concepts involve providing solutions for usability issues.
Criteria: Designers provide step-by-step instructions or workarounds for usability issues.
Phrase: Providing workarounds

25.
Concepts: troubleshooting, inquiring about specific problems
Relationship: Both concepts involve identifying and solving user problems.
Criteria: Designers engage in troubleshooting and inquire about specific user problems.
Phrase: Troubleshooting user issues

26.
Concepts: analyzing the problem, acknowledge compatibility limitations
Relationship: Both concepts involve recognizing and analyzing compatibility issues.
Criteria: Designers analyze and acknowledge compatibility limitations and suggest potential solutions.
Phrase: Analyzing compatibility limitations

27.
Concepts: comprehensive usability solution, addressing usability concerns
Relationship: Both concepts involve considering and addressing usability concerns.
Criteria: Designers consider comprehensive solutions to address and mitigate usability concerns.
Phrase: Addressing usability concerns

28.
Concepts: requesting technical support, providing technical support
Relationship: Both concepts involve seeking and offering technical assistance.
Criteria: Users request and designers provide technical support for software issues.
Phrase: Providing technical support

29.
Concepts: user support, personalized assistance
Relationship: Both concepts involve offering help and personalized assistance to users.
Criteria: Designers provide personalized assistance and support to help users effectively use the product.
Phrase: Offering personalized assistance

30.
Concepts: compatibility assurance, system requirements
Relationship: Both concepts involve ensuring and detailing software compatibility.
Criteria: Designers assure users about compatibility and provide system requirements information.
Phrase: Assuring compatibility

31.
Concepts: discussing system compatibility, inquiring about platform compatibility
Relationship: Both concepts involve addressing and inquiring about compatibility.
Criteria: Users ask and designers discuss the software's compatibility with various systems and platforms.
Phrase: Discussing system compatibility

32.
Concepts: confirming system compatibility, specifying compatibility requirements
Relationship: Both concepts involve confirming and specifying compatibility details.
Criteria: Designers confirm and specify the software's compatibility requirements and solutions.
Phrase: Confirming compatibility requirements

33.
Concepts: current version limitation, discussing solution limitations, explaining system limitations
Relationship: All concepts involve explaining limitations of software versions, solutions, and systems.
Criteria: Users or designers explain the limitations of current versions, proposed solutions, or systems.
Phrase: Explaining system limitations

34.
Concepts: technical specificity, consider technical requirements
Relationship: Both concepts involve detailing and considering technical conditions.
Criteria: Designers provide specific technical conditions and consider requirements for using the software.
Phrase: Considering technical requirements

35.
Concepts: explaining follow-up intentions, explain intention of question
Relationship: Both concepts involve explaining the reasons behind questions or actions.
Criteria: Designers explain the intention behind follow-up questions or actions.
Phrase: Explaining follow-up intentions

36.
Concepts: design principles, explain design philosophy
Relationship: Both concepts involve discussing the guiding principles of design.
Criteria: Designers discuss the underlying principles and philosophy guiding the product's design.
Phrase: Explaining design philosophy

37.
Concepts: give reason, providing rationale
Relationship: Both concepts involve explaining the reasons behind requests or decisions.
Criteria: Designers explain the rationale behind gathering opinions or making decisions.
Phrase: Providing rationale

38.
Concepts: explain design rationale, provide development rationale
Relationship: Both concepts involve explaining the reasons behind design and development choices.
Criteria: Designers explain the rationale behind specific design and development decisions.
Phrase: Providing development rationale

39.
Concepts: future chemistry app, mention potential chemistry experiments
Relationship: Both concepts involve hinting at future developments related to chemistry.
Criteria: Designers mention potential future developments of a chemistry app or related experiments.
Phrase: Mentioning future developments

40.
Concepts: function example, explaining functionalities
Relationship: Both concepts involve illustrating and explaining software functionalities.
Criteria: Designers provide examples and detailed explanations of specific software functionalities.
Phrase: Explaining functionalities

41.
Concepts: subject focus, explain content focus
Relationship: Both concepts involve discussing the main topics covered by the software.
Criteria: Designers explain the specific focus areas and main topics of the physics lab's experiments.
Phrase: Explaining content focus

42.
Concepts: feature stability, discussing long-term stability
Relationship: Both concepts involve discussing the reliability and longevity of features.
Criteria: Designers discuss the reliability and long-term stability of implemented features.
Phrase: Discussing feature stability

43.
Concepts: give examples of feature, explain feature importance
Relationship: Both concepts involve providing details and significance of features.
Criteria: Designers give specific examples and explain the importance of certain features.
Phrase: Explaining feature importance

44.
Concepts: functionality explanation, discussing component functionality
Relationship: Both concepts involve addressing the functionality of software components.
Criteria: Designers explain and discuss the functionality of various software components.
Phrase: Discussing component functionality

45.
Concepts: sharing user experience, providing comparative feedback
Relationship: Both concepts involve users sharing experiences and comparing the software.
Criteria: Users provide feedback on their experience and compare the software with other applications.
Phrase: Sharing user experience

46.
Concepts: expressing satisfaction and approval, praising software usability and effectiveness
Relationship: Both concepts involve users expressing positive feedback about the software.
Criteria: Users express satisfaction and praise the usability and effectiveness of the software.
Phrase: Praising software usability

47.
Concepts: user tips, feature guidance, usage instructions
Relationship: All concepts involve providing guidance and instructions for using features.
Criteria: Designers provide tips, guidance, and instructions on using specific features of the software.
Phrase: Providing usage instructions

48.
Concepts: instruction and updates, providing download instructions
Relationship: Both concepts involve giving instructions and updates to users.
Criteria: Designers provide updates and instructions, including how to download the software.
Phrase: Providing download instructions

49.
Concepts: technical details, provide technical information
Relationship: Both concepts involve detailing technical aspects of the software.
Criteria: Designers provide specific technical details, updates, and information about the software.
Phrase: Providing technical information

50.
Concepts: clarifying version details, describing update specifics
Relationship: Both concepts involve providing details about software versions and updates.
Criteria: Designers clarify and describe specific details and changes in software versions.
Phrase: Describing update specifics

51.
Concepts: platform clarification, inquiring about software downloads
Relationship: Both concepts involve questions about software availability and versions.
Criteria: Users ask for clarification about platform compatibility and where to download different software versions.
Phrase: Inquiring about software downloads

52.
Concepts: information seeking, inquiring about software use, inquiring about software usage
Relationship: All concepts involve users seeking knowledge or resources about software use.
Criteria: Users ask questions to gain information and resources related to the software's functionalities and usage.
Phrase: Inquiring about software usage

53.
Concepts: seeking guidance, request guidance
Relationship: Both concepts involve users asking for help or instructions.
Criteria: Users request guidance or instructions on how to use the software.
Phrase: Requesting guidance

54.
Concepts: user manual request, express need for documentation
Relationship: Both concepts involve requests for user manuals or documentation.
Criteria: Users ask for and express the need for user manuals or documentation.
Phrase: Requesting user manual

55.
Concepts: platform use question, technical inquiry
Relationship: Both concepts involve users asking technical questions about platform use.
Criteria: Users ask technical questions related to the use and updates of the platform.
Phrase: Making technical inquiries

56.
Concepts: confirmation seeking, requesting clarification
Relationship: Both concepts involve users seeking confirmation or clarification.
Criteria: Users ask for confirmation and clarification about specific details or requests.
Phrase: Requesting clarification

57.
Concepts: sharing classroom impact, illustrating classroom success
Relationship: Both concepts involve users sharing the positive impact of the software in an educational setting.
Criteria: Users share their experiences and illustrate the success of using the software in classrooms.
Phrase: Illustrating classroom success

58.
Concepts: educational context, provide educational context
Relationship: Both concepts involve discussing the educational environment and its characteristics.
Criteria: Users and designers discuss the educational context and technological environment of the software's use.
Phrase: Providing educational context

59.
Concepts: internet restriction, classroom environment description
Relationship: Both concepts involve describing classroom conditions and internet usage policies.
Criteria: Users explain internet restrictions and describe the classroom environment.
Phrase: Describing classroom environment

60.
Concepts: express concern, raise related issue, raise concern for new feature
Relationship: All concepts involve expressing and raising concerns about software.
Criteria: Users express concerns and raise issues related to the design or functionality of the software, including new features.
Phrase: Raising concerns

61.
Concepts: limitation frustration, expressing user frustration
Relationship: Both concepts involve users expressing dissatisfaction with software limitations.
Criteria: Users express frustration and dissatisfaction with the current limitations and technical issues of the software.
Phrase: Expressing user frustration

62.
Concepts: school computer system issue, explaining technical issues
Relationship: Both concepts involve users describing technical problems with their school’s computer systems.
Criteria: Users mention and explain technical issues related to their school's computer systems.
Phrase: Explaining technical issues
---