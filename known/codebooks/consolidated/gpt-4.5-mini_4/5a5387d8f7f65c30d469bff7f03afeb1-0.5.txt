You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (40 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
40. 
Concepts: {Repeat the input 40}
Relationship: {What is logical relationship between concepts in code 40, or N/A if not applicable}
Criteria: {Who did what, and how for code 40}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: highlight progress, communicate progress
- Designers communicate the significant progress made in software updates.
- Designers share visual updates and outline current research efforts related to software.

2.
Concepts: internal update, describe product improvements, provide update information
- Designers provide updates on internal changes or feature adjustments.
- Designers provide updates regarding changes or improvements in software.
- Designers provide detailed notes on updates, including new features and changes.

3.
Concepts: announce updates, confirm upcoming changes
- Designers announce software updates and notify the community about new releases.
- Designers confirm and announce upcoming software updates and releases.

4.
Concepts: outline feature roadmap, outline development priorities
- Designers outline the sequence of project development and completion priorities.
- Designers outline current development priorities and timelines.

5.
Concepts: discuss future plans, share future directions
- Designers discuss potential future developments and planning for updates.
- Designers engage in discussions about potential future interests and directions.

6.
Concepts: share access information, share development resources
- Designers share access information and specific objectives for future software development.
- Designers share resources related to the development plan and relevant information.

7.
Concepts: visual and functional design, discuss design usability
- Discussions about the visual and functional aspects of the software.
- Designers discuss technical considerations that may impact software functionality and usability.

8.
Concepts: share knowledge, teach about feature development
- Designers share factual information or knowledge about the software's features or limitations.
- Designers share information about the current state of software testing and feature development.

9.
Concepts: provide feature guidance, explain features and simulations
- Designers provide explanations and instructions on feature functionalities and usage.
- Designers give specific instructions for proper operation of features after setup.
- Designers explain features and simulation details related to software functionality.

10.
Concepts: explain design rationale, explain design principles
- Designers explain the rationale behind user-friendly design choices and goals.
- Designers explain the principles guiding their design decisions related to usability.

11.
Concepts: indirect reject, implicitly reject suggestions
- The designer expresses a need to gather further opinions before proceeding with mechanics.
- Designers express a lack of agreement with certain suggestions, indicating further discussion is needed.

12.
Concepts: acknowledge limitations, explain platform limitations
- Designers explain and acknowledge limitations faced by the development team.
- Designers explain system compatibility limitations and their impact on the software.

13.
Concepts: propose design ideas, offers a diagnose for the problem
- Designers propose solutions to identified issues during software development.
- Designers diagnose technical issues or limitations related to the software.

14.
Concepts: suggest alternative solutions, inquire about platform compatibility, express hope for compatibility
- Users suggest that specific operating systems should work with the software.
- Users provide details and inquire about software compatibility with their operating systems.
- Users express compatibility of their operating systems or hope for it with specific software.

15.
Concepts: ease of use, highlight practicality and convenience
- Discussions related to the ease of use and user-friendliness of the software.
- Users express appreciation for practical and convenient software functionalities.

16.
Concepts: feature suggestion, provide suggestions with justifications, suggest practical use cases
- Users suggest specific approaches to feature development, advocating for a systematic and organized method.
- Users suggest features and provide justifications for their usability.
- Users suggest practical use cases and alternative recommendations for software features.

17.
Concepts: submit feature requests, request additional experiments
- Users request new features or improvements for the Physics Lab tool.
- Users suggest the inclusion of additional experimental areas in the software.

18.
Concepts: commit to improvement, acknowledge feature improvement
- Designers commit to enhancing the software based on user feedback and support.
- Designers emphasize the importance of improving specific features in the software.

19.
Concepts: design adaptation, balance user needs
- Designers address the need for specific functionalities or features in the software.
- Designers seek to balance and cater to user needs through software improvements.

20.
Concepts: share professional backgrounds, provide teaching background information
- Users provide information about their professional backgrounds to establish context.
- Users share their teaching backgrounds when prompted.

21.
Concepts: share past experiences, share teaching experiences
- Users share past incidents that highlight challenges in educational contexts.
- Users share their teaching experiences in high school and middle school.

22.
Concepts: classroom environment, explain internet restrictions
- Users describe restrictions in classroom environments affecting software use.
- Users discuss restrictions imposed on internet access during classes.

23.
Concepts: highlight educational needs, express user and school needs
- A user highlights specific educational needs related to the software's functionality.
- Users express their needs related to the software and their school's technological developments.

24.
Concepts: invite user participation, encourage community participation
- Designers invite and encourage users to contribute to development.
- A designer encourages community participation and feedback in the development process.

25.
Concepts: welcome, greet and engage community members
- A designer greets users in a friendly manner.
- Users and designers greet each other to maintain a friendly atmosphere.

26.
Concepts: user support, offer technical support
- Assistance and support provided by designers to help users effectively use the product.
- Designers offer assistance and technical support to users facing challenges.

27.
Concepts: address user concerns, resolve user concerns
- Designers address and respond to user concerns about features or updates.
- Designers resolve user concerns by inquiring about specific issues experienced.

28.
Concepts: clarify user needs, pose design questions
- Designers ask clarifying questions to understand user contexts.
- Designers ask questions related to design specifications, and users provide supportive answers.

29.
Concepts: provide clarification, provide follow-up clarification, clarify and elaborate
- Designers seek to clarify misunderstandings or details in discussions.
- Users or designers provide additional information following an inquiry, clarifying intentions.
- Designers clarify existing features and elaborate on user suggestions for better comprehension.

30.
Concepts: provide detailed answers, encourage elaboration and questions
- Designers offer specific and detailed responses to user queries.
- Designers encourage users to provide detailed feedback and ask further questions.

31.
Concepts: seek information and resources, inquire about software functionalities
- Users inquire about resources and support related to the software.
- Users initiate interactions by asking about software functionalities.

32.
Concepts: community resource, request usage guidance and support
- Users request resources such as manuals or guides, indicating a need for support materials within the community.
- Users request guidance and reiterate their need for support materials.

33.
Concepts: seek clarification through inquiry, provide information in response to questions
- Users express uncertainty and seek clarification on specific topics by asking questions.
- Users provide answers or clarifications in response to inquiries.

34.
Concepts: elaborate on questions, provide contextual information
- Users provide additional context or clarification during discussions.
- Users share contextual information that clarifies previous statements or requests.

35.
Concepts: express emotions with emojis, express reactions through emojis
- Users utilize emojis to express emotions and facilitate discussions.
- Users express their reactions to updates or announcements, frequently using emojis.

36.
Concepts: acknowledge user experiences, share experiences and support
- Designers recognize user experiences and express understanding of challenges.
- Users and designers share experiences that inform design decisions and support each other.

37.
Concepts: compliment with enthusiasm, foster support and gratitude
- Users express enthusiasm for ideas and compliment contributions, enhancing community morale.
- Users express support and gratitude, contributing to a positive community atmosphere.

38.
Concepts: express agreement, seek consensus
- Users express agreement with design ideas proposed by others.
- Designers seek agreement on proposed ideas to confirm collaborative intentions.

39.
Concepts: acknowledge and confirm, confirm and acknowledge user needs
- Designers acknowledge user points during discussions to confirm mutual understanding.
- Users affirm statements and indicate their needs by confirming previous comments.

40.
Concepts: acknowledge receipt of information, confirm retrieval of information
- Users acknowledge receipt of shared information or resources.
- Users express gratitude for accessing shared resources and acknowledge receipt of information.
===
---
Definitions for each code (40 in total):
1.
Concepts: highlight progress, communicate progress
Relationship: Both concepts involve the act of sharing information about advancements or updates.
Criteria: Designers communicate and highlight significant progress made in software updates through visual and research-related updates.
Phrase: Communicate and highlight progress.

2.
Concepts: internal update, describe product improvements, provide update information
Relationship: These concepts are interconnected as they all pertain to informing about changes and improvements within the software.
Criteria: Designers provide internal updates and detailed information regarding product improvements and new features.
Phrase: Provide detailed internal updates.

3.
Concepts: announce updates, confirm upcoming changes
Relationship: Both concepts focus on informing the community about current and future software updates.
Criteria: Designers announce software updates and confirm upcoming changes and releases to the community.
Phrase: Announce and confirm updates.

4.
Concepts: outline feature roadmap, outline development priorities
Relationship: These concepts relate to planning and prioritizing project development.
Criteria: Designers outline the feature development roadmap and current priorities for project completion.
Phrase: Outline development roadmap.

5.
Concepts: discuss future plans, share future directions
Relationship: Both concepts involve engaging in conversations about potential developments and planning.
Criteria: Designers discuss future plans and share directions for upcoming software updates.
Phrase: Discuss and share future plans.

6.
Concepts: share access information, share development resources
Relationship: These concepts are related as they both involve providing information necessary for software development.
Criteria: Designers share access information and relevant development resources for future software projects.
Phrase: Share access and resources.

7.
Concepts: visual and functional design, discuss design usability
Relationship: Both concepts are about evaluating and discussing the design aspects of the software.
Criteria: Discussions about visual and functional design are accompanied by considerations of usability.
Phrase: Discuss design usability.

8.
Concepts: share knowledge, teach about feature development
Relationship: These concepts are linked as they both involve disseminating information about the software.
Criteria: Designers share knowledge about software features and provide teaching on feature development.
Phrase: Share knowledge and teach.

9.
Concepts: provide feature guidance, explain features and simulations
Relationship: Both concepts focus on offering explanations and guidance on software functionalities.
Criteria: Designers provide guidance on features and explain their functionalities and simulations.
Phrase: Provide feature guidance.

10.
Concepts: explain design rationale, explain design principles
Relationship: These concepts are related as they both involve articulating the reasoning behind design choices.
Criteria: Designers explain the rationale and principles guiding user-friendly design decisions.
Phrase: Explain design rationale.

11.
Concepts: indirect reject, implicitly reject suggestions
Relationship: Both concepts involve a non-direct way of expressing disagreement with suggestions.
Criteria: Designers indirectly reject suggestions by indicating a need for further discussion or opinions.
Phrase: Indirectly reject suggestions.

12.
Concepts: acknowledge limitations, explain platform limitations
Relationship: These concepts relate to recognizing and explaining constraints faced during development.
Criteria: Designers acknowledge and explain limitations of the platform and system compatibility.
Phrase: Acknowledge and explain limitations.

13.
Concepts: propose design ideas, offers a diagnose for the problem
Relationship: Both concepts involve identifying issues and suggesting solutions.
Criteria: Designers propose design ideas and diagnose technical issues during software development.
Phrase: Propose design solutions.

14.
Concepts: suggest alternative solutions, inquire about platform compatibility, express hope for compatibility
Relationship: These concepts are interconnected as they involve discussing compatibility and potential solutions.
Criteria: Users suggest alternative solutions while inquiring and expressing hope regarding platform compatibility.
Phrase: Suggest and inquire about compatibility.

15.
Concepts: ease of use, highlight practicality and convenience
Relationship: Both concepts emphasize user experience and functionality.
Criteria: Discussions focus on the ease of use and highlight the practicality of the software's functionalities.
Phrase: Highlight ease of use.

16.
Concepts: feature suggestion, provide suggestions with justifications, suggest practical use cases
Relationship: These concepts are linked through the act of recommending features and providing reasoning.
Criteria: Users suggest features with justifications and practical use cases for development.
Phrase: Suggest features with justifications.

17.
Concepts: submit feature requests, request additional experiments
Relationship: Both concepts involve users reaching out for enhancements or expansions in the software.
Criteria: Users submit requests for new features and suggest additional experimental areas in the software.
Phrase: Submit feature requests.

18.
Concepts: commit to improvement, acknowledge feature improvement
Relationship: These concepts involve a commitment to enhancing the software based on feedback.
Criteria: Designers commit to improving the software while acknowledging the importance of specific feature enhancements.
Phrase: Commit to improvement.

19.
Concepts: design adaptation, balance user needs
Relationship: Both concepts focus on adjusting design to meet user requirements.
Criteria: Designers adapt the design to balance and cater to user needs through software improvements.
Phrase: Adapt design to user needs.

20.
Concepts: share professional backgrounds, provide teaching background information
Relationship: These concepts relate to establishing credibility and context through personal experiences.
Criteria: Users share their professional and teaching backgrounds to provide context within discussions.
Phrase: Share background information.

21.
Concepts: share past experiences, share teaching experiences
Relationship: Both concepts involve recounting personal experiences that may inform discussions.
Criteria: Users share past and teaching experiences that highlight challenges in educational contexts.
Phrase: Share experiences.

22.
Concepts: classroom environment, explain internet restrictions
Relationship: These concepts involve discussing the context in which the software is used.
Criteria: Users describe classroom environments and explain internet restrictions affecting software use.
Phrase: Explain classroom restrictions.

23.
Concepts: highlight educational needs, express user and school needs
Relationship: Both concepts focus on identifying and articulating specific requirements.
Criteria: Users highlight educational needs related to software functionality and express technological needs of their schools.
Phrase: Highlight educational needs.

24.
Concepts: invite user participation, encourage community participation
Relationship: These concepts are related to fostering a collaborative environment.
Criteria: Designers invite and encourage user participation and feedback in the development process.
Phrase: Encourage community participation.

25.
Concepts: welcome, greet and engage community members
Relationship: Both concepts involve creating a friendly and inviting atmosphere.
Criteria: Designers greet users and engage the community to maintain a friendly environment.
Phrase: Welcome and engage community members.

26.
Concepts: user support, offer technical support
Relationship: These concepts are linked through the provision of assistance to users.
Criteria: Designers provide user support and offer technical assistance to help users effectively use the product.
Phrase: Offer technical support.

27.
Concepts: address user concerns, resolve user concerns
Relationship: Both concepts focus on responding to and resolving issues raised by users.
Criteria: Designers address and resolve user concerns regarding features or updates.
Phrase: Address and resolve concerns.

28.
Concepts: clarify user needs, pose design questions
Relationship: These concepts involve seeking understanding through inquiry.
Criteria: Designers clarify user needs by posing questions related to design specifications.
Phrase: Clarify user needs.

29.
Concepts: provide clarification, provide follow-up clarification, clarify and elaborate
Relationship: These concepts are interconnected as they all pertain to enhancing understanding.
Criteria: Designers seek to clarify misunderstandings and provide follow-up information in discussions.
Phrase: Provide clarification.

30.
Concepts: provide detailed answers, encourage elaboration and questions
Relationship: Both concepts involve fostering communication and understanding.
Criteria: Designers provide detailed answers and encourage users to elaborate and ask questions.
Phrase: Provide detailed answers.

31.
Concepts: seek information and resources, inquire about software functionalities
Relationship: These concepts relate to users actively seeking knowledge and resources.
Criteria: Users seek information about software functionalities and request relevant resources.
Phrase: Seek information and resources.

32.
Concepts: community resource, request usage guidance and support
Relationship: Both concepts involve users looking for support materials within the community.
Criteria: Users request community resources and guidance for using the software effectively.
Phrase: Request community support.

33.
Concepts: seek clarification through inquiry, provide information in response to questions
Relationship: These concepts involve the exchange of information through questioning.
Criteria: Users seek clarification through inquiries, prompting responses from others.
Phrase: Seek and provide clarification.

34.
Concepts: elaborate on questions, provide contextual information
Relationship: Both concepts involve enhancing discussions through additional context.
Criteria: Users elaborate on questions and provide contextual information to clarify discussions.
Phrase: Elaborate on questions.

35.
Concepts: express emotions with emojis, express reactions through emojis
Relationship: These concepts relate to the use of emojis as a means of communication.
Criteria: Users express emotions and reactions to updates using emojis in discussions.
Phrase: Express emotions with emojis.

36.
Concepts: acknowledge user experiences, share experiences and support
Relationship: Both concepts involve recognizing and sharing experiences to foster understanding.
Criteria: Designers acknowledge and share user experiences to provide support.
Phrase: Acknowledge and share experiences.

37.
Concepts: compliment with enthusiasm, foster support and gratitude
Relationship: These concepts relate to enhancing community morale through positive interactions.
Criteria: Users express enthusiasm and gratitude, fostering a supportive community atmosphere.
Phrase: Foster support and gratitude.

38.
Concepts: express agreement, seek consensus
Relationship: Both concepts involve reaching a mutual understanding or agreement.
Criteria: Users express agreement with design ideas while designers seek consensus on proposed ideas.
Phrase: Seek consensus and agreement.

39.
Concepts: acknowledge and confirm, confirm and acknowledge user needs
Relationship: These concepts are related as they both involve recognition and understanding.
Criteria: Designers acknowledge and confirm user needs during discussions.
Phrase: Acknowledge and confirm needs.

40.
Concepts: acknowledge receipt of information, confirm retrieval of information
Relationship: Both concepts involve recognizing the receipt of shared information.
Criteria: Users acknowledge receipt and confirm retrieval of shared resources and information.
Phrase: Acknowledge receipt of information.
---