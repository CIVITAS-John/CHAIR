You are an expert in thematic analysis clarifying the criteria of qualitative codes. Do not attempt to merge codes now.
Consider provided quotes, and note that each quote is independent of others.
Write clear and generalizable criteria for each code and do not introduce unnecessary details.
If necessary, refine labels to be more accurate, but do not repeat yourself.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1. 
Criteria: {Who did what, and how for code 1}
Label: {A descriptive label of code 1}
...
32.
Criteria: {Who did what, and how for code 32}
Label: {A descriptive label of code 32}
---
~~~
1.
Label: encourage community participation
Quotes:
- Designer: We will also update the multimeter and powered solenoid this week. If there are any other features, characteristics, or electronic components you hope to include in the production plan, please leave a message in the group, and we will consider it as much as possible. The previously mentioned feature of saving experiments to the cloud/local is also in the plan. Thank you, everyone!
- Designer: If you have any suggestions or requirements, feel free to bring them up.

2.
Label: but not too old
Quotes:
- Designer: Theoretically, it should be compatible (but the machine itself shouldn't be too old, probably from 2008 onwards).

3.
Label: clarifying documentation needs
Quotes:
- User: Need the user manual for this software

4.
Label: proposing compromise in design choices
Quotes:
- Designer: So, use both?

5.
Label: tempering excitement with realism
Quotes:
- Designer: This is quite complex, so it will take more time... Hopefully, it can be released this week

6.
Label: inquiring about development progress
Quotes:
- User: Are there any other updates recently?

7.
Label: directs user to message privately for manual needs
Quotes:
- Designer: Oh, please message me privately and tell me what you roughly need

8.
Label: emphasizing simplicity
Quotes:
- Designer: This belongs to the kind of feature that, once done, will ensure long-term stability... Adding various components is actually simpler

9.
Label: encourage feedback
Quotes:
- Designer: Okay. Please give more suggestions!

10.
Label: communicating through images
Quotes:
- Designer: [Image] Updates in preparation

11.
Label: confirm feature update
Quotes:
- Designer: There will be an update. Submitting to the app store / releasing the Android version next Monday, and releasing the Windows version over the weekend.

12.
Label: supporting advanced feature plans
Quotes:
- User: This idea is really good

13.
Label: share past incident
Quotes:
- User: Generally not. Ever since an adult image popped up during a major city-level open class, the school has disabled the network on classroom computers [Emoji].

14.
Label: comparison
Quotes:
- User: Yes, the spirit of craftsmanship that strives for perfection ðŸ¤”

15.
Label: provide practical advice
Quotes:
- Designer: Last time I tried it in middle school, there's a trick where you click the link button in the top right, and when the browser pops up, it's no longer full screen... = =

16.
Label: seeking access to physics lab versions
Quotes:
- User: [Emoji] Hello everyone, may I ask where I can download the PC / interactive whiteboard version of Physics Lab?

17.
Label: give reason
Quotes:
- Designer: Before starting mechanics, we will gather opinions again~ Otherwise, I'm afraid I won't remember everything.

18.
Label: expressing uncertainty
Quotes:
- Designer: Uh... left side or right side
- User: Is there a user manual?
- User: How to download?

19.
Label: the designers appear to be using a participatory design approach
Quotes:
- User: @John Chen (3) Yes, yes.
- User: Thank you.
- User: Excuse me.

20.
Label: provide alternative suggestion
Quotes:
- User: But it's better to use the right side for non-crossing

21.
Label: reacting positively to the software's progress
Quotes:
- User: It's already starting to take shape [Emoji]

22.
Label: acknowledging the suggestion
Quotes:
- Designer: Hmm.

23.
Label: inquiring about user experience
Quotes:
- Designer: What problems did you encounter during use?

24.
Label: exploring software functionality
Quotes:
- User: How do you use the PC version?

25.
Label: highlighting strengths
Quotes:
- User: This software is great! It's quite practical, unlike some software that tries to be comprehensive but ends up being inconvenient to use.

26.
Label: clarifying on screen keyboard behavior
Quotes:
- Designer: Touch screens have their own on-screen keyboards.

27.
Label: detailing experimental features
Quotes:
- Designer: For electricity, we plan to create a function for simulated experiment assessment; it will add many experimental details, such as zero adjustment (of course, only useful in specific modes, otherwise it would be cumbersome to use regularly)

28.
Label: promoting collaborative learning
Quotes:
- Designer: Group sharing.

29.
Label: confirming technical information
Quotes:
- Designer: 7 is okay.

30.
Label: ensuring collective input
Quotes:
- Designer: When we are ready to start, we will consult everyone in the group

31.
Label: outlining feature development
Quotes:
- Designer: For electricity, we plan to create a function for simulated experiment assessment; it will add many experimental details, such as zero adjustment (of course, only useful in specific modes, otherwise it would be cumbersome to use regularly)

32.
Label: considers offline functionality
Quotes:
- Designer: Does the class have internet?
===
Here are the definitions for each code:

---
1. 
Criteria: Designer invites users to contribute to the development process by sharing their ideas and opinions.
Label: Encouraging user input

2. 
Criteria: Designer sets a boundary or limitation for compatibility or functionality.
Label: Setting technical limitations

3. 
Criteria: User requests documentation or user manual for the software.
Label: Requesting documentation

4. 
Criteria: Designer suggests finding a middle ground or compromise in design choices.
Label: Proposing compromise

5. 
Criteria: Designer manages expectations by tempering excitement with realistic timelines or limitations.
Label: Managing expectations

6. 
Criteria: User inquires about the progress of development or updates.
Label: Inquiring about progress

7. 
Criteria: Designer directs user to communicate privately for specific needs or requests.
Label: Directing private communication

8. 
Criteria: Designer emphasizes the importance of simplicity in design or functionality.
Label: Emphasizing simplicity

9. 
Criteria: Designer encourages users to provide feedback or suggestions.
Label: Encouraging feedback

10. 
Criteria: Designer communicates through visual aids such as images.
Label: Visual communication

11. 
Criteria: Designer confirms updates or releases of new features.
Label: Confirming updates

12. 
Criteria: User shows support or enthusiasm for advanced feature plans.
Label: Supporting feature plans

13. 
Criteria: User shares a past experience or incident related to the software or topic.
Label: Sharing past experience

14. 
Criteria: User makes a comparison between the software and other similar tools or concepts.
Label: Making comparisons

15. 
Criteria: Designer provides practical advice or tips for using the software.
Label: Providing practical advice

16. 
Criteria: User requests access to specific versions of the Physics Lab software.
Label: Requesting software access

17. 
Criteria: Designer provides a reason or explanation for a design choice or decision.
Label: Providing reasons

18. 
Criteria: Designer or user expresses uncertainty or confusion about a topic.
Label: Expressing uncertainty

19. 
Criteria: Users engage in a participatory design approach, responding to each other's comments.
Label: Participatory design

20. 
Criteria: User suggests an alternative solution or approach.
Label: Providing alternative solutions

21. 
Criteria: User reacts positively to the progress or development of the software.
Label: Expressing enthusiasm

22. 
Criteria: Designer acknowledges or responds to user suggestions or feedback.
Label: Acknowledging feedback

23. 
Criteria: Designer inquires about user experiences or difficulties with the software.
Label: Inquiring about user experience

24. 
Criteria: User explores or inquires about the functionality of the software.
Label: Exploring software functionality

25. 
Criteria: User highlights the strengths or benefits of the software.
Label: Highlighting strengths

26. 
Criteria: Designer clarifies the behavior or functionality of a specific feature.
Label: Clarifying feature behavior

27. 
Criteria: Designer outlines or explains the details of experimental features.
Label: Detailing experimental features

28. 
Criteria: Designer promotes or suggests collaborative learning or sharing.
Label: Promoting collaboration

29. 
Criteria: Designer confirms technical information or specifications.
Label: Confirming technical information

30. 
Criteria: Designer ensures that all users have a say in the development process.
Label: Ensuring collective input

31. 
Criteria: Designer outlines or explains the development plans or roadmap for a feature.
Label: Outlining feature development

32. 
Criteria: Designer considers or inquires about offline functionality or access.
Label: Considering offline functionality