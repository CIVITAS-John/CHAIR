You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: critique teaching quality in system development, critiquing developers' teaching skills
- Critiques teaching quality in system development
- Participants critique developers' teaching skills and recognize the gap between system developers and good teachers.

2.
Concepts: critiques current documentation, critiquing current learning methods and educational systems
- Participants critique current documentation and learning processes and criticize current technical documentation.
- Participants critique existing learning methods, educational systems, and linear learning methods.

3.
Concepts: emphasize oral tradition, highlight oral tradition in knowledge retention
- Participants emphasize the importance of oral tradition in knowledge sharing.
- Participants reflect on the oral tradition in knowledge retention and the need for system support.

4.
Concepts: reflect on undocumented knowledge, noting lack of documentation
- Participants reflect on the importance of undocumented knowledge in software development.
- Participants note the lack of documentation in software development and the importance of oral tradition in knowledge transfer.

5.
Concepts: describe fragmented learning, acknowledges fragmented learning experiences
- Participants describe fragmented learning experiences across multiple languages.
- Acknowledges fragmented learning experiences

6.
Concepts: seek efficient learning, implies need for efficient learning tools
- Participants seek efficient learning methods or tools that can save time and effort.
- Implies the need for efficient learning tools and strategies, given the limitations of time and expertise.

7.
Concepts: advocates for skill development, values skilled inquiry and iterative questioning
- Advocates for skill development and iterative questioning.
- Participants value skilled inquiry and believe in iterative questioning.

8.
Concepts: acknowledge breadth of knowledge, mentioning multiple language experience
- The participant acknowledges the breadth of their knowledge and expertise in multiple languages.
- Participants mention diverse language knowledge, having experience with multiple programming languages.

9.
Concepts: reflects on decision-making and evaluates practically, reflects on practical choices and makes informed decisions
- Participants reflect on decision-making and evaluate practical decisions.
- Participants reflect on practical choices and make informed decisions.

10.
Concepts: emphasizing iterative learning, emphasizing contextual learning and understanding
- Participants emphasize the importance of iterative learning or clarification in working with AI.
- Participants emphasize the importance of contextual learning, user context, and contextual understanding in AI-assisted development.

11.
Concepts: emphasizes effective collaboration, highlight the value of collaboration
- Interviewees emphasize effective collaboration and highlight efficiency benefits.
- Participants highlight the value of collaboration and emphasize the benefit of diverse perspectives.

12.
Concepts: reflect on learning opportunities, recognizes learning opportunities and reflects on collaborative learning
- Participants reflect on the learning process, including iterative debugging and practice, and reflect on the learning opportunities provided by AI systems.
- Participants recognize learning opportunities and reflect on collaborative learning opportunities.

13.
Concepts: considers familiarity and reflects on prior experience, reflects on user capabilities and considers expertise level
- Participants consider familiarity with AI tools and reflect on prior experience.
- Participants reflect on user capabilities and consider expertise level and experience.

14.
Concepts: communication skills, highlighting user skills
- Emphasizes the importance of communication skills in working with AI-generated code.
- Participants highlight the importance of user skills and practice when working with AI-generated code.

15.
Concepts: understand and clarify ai-generated code, learn from ai-generated code through comparison
- Participants summarize AI-generated code, reflect on AI's understanding, and seek clarity in execution.
- Participants compare AI-generated code with their own understanding to learn from it.

16.
Concepts: ask ai for coding assistance, seek ai assistance for coding and debugging
- Participants ask AI for syntax help and query AI for code structures.
- Participants seek AI assistance for coding and debugging tasks.

17.
Concepts: figures out syntax and error, relies on ai for code structures
- The participant figures out syntax and error messages with the help of the AI, highlighting the importance of understanding code structure.
- The participant relies on AI to reinforce learning, especially for syntax and coding concepts, and relies on AI for code structures and syntax.

18.
Concepts: recognize the option to run code, appreciate the option to run code
- Participants recognize the option to run code and find AI-generated code runnable.
- Participants appreciate the option to run code and value testing AI-generated code.

19.
Concepts: iteratively builds models, create code skeletons and construct code iteratively
- Participants iteratively build models or code structures.
- Participants create code skeletons and engage in iterative code construction.

20.
Concepts: integrate ai-generated code, integrate ai-generated code cautiously
- Participants integrate AI-generated code, curate AI outputs, and selectively copy code.
- Participants integrate AI-generated code selectively and cautiously.

21.
Concepts: customize ai-generated code, propose modifications to ai-generated code, override previous work with ai-generated code
- Participants customize AI-generated code and adapt it for immediate needs.
- Participants propose modifications to AI-generated code and suggest changes to the AI-driven interface.
- Participants override previous work and overwrite with AI-generated code.

22.
Concepts: decides to use ai code, balances ai output with personal input, makes pragmatic coding decisions
- Participants make decisions about using AI-generated code, weighing the benefits and trade-offs of copying and executing code.
- Participants balance AI-generated code with their own input and judgment, weighing the benefits of copying and executing code.
- Participants exercise careful decision-making when using AI-generated code, weighing the benefits and trade-offs of different approaches.

23.
Concepts: set up a structured process, follow a structured modeling approach
- Participants set up an initial process and follow a structured setup process.
- Participants follow a structured modeling approach and establish a coding process.

24.
Concepts: articulates specific modeling goals, requests specific model structure
- Participant articulates specific modeling goals.
- The participant requests a specific model structure, expressing a specific goal for model creation.

25.
Concepts: stating a coding task, articulates specific task
- Participants state a simple coding task or request, clearly articulating a specific task.
- The participant states a specific programming task, articulating clear requirements.

26.
Concepts: focuses on task specifics, engages in thoughtful task specification
- The participant focuses on task specifics, highlighting the importance of specificity in task definitions.
- The participant engages in thoughtful task specification, recognizing the importance of specificity in task definitions.

27.
Concepts: clarifies phrasing, clarifies initial request, refines task details
- The participant clarifies phrasing, refining instructions for clarity and accuracy.
- The participant clarifies their initial request, refining the programming request for clarity.
- The participant refines task details, refining the task request for clarity and specificity.

28.
Concepts: specifies neural network task, specifies neural network intention
- The participant desires to create a neural network, specifying a task related to neural network creation.
- The participant specifies their intention to create a neural network, planning to build a basic neural network.

29.
Concepts: sets up ai task, provides parameter details, dictates task parameters
- The participant sets up an AI task, defining parameters and requirements.
- The participant provides parameter details or specifications for the AI-driven interface to work with.
- The participant dictates parameters for the task, setting up and defining requirements.

30.
Concepts: communicates precise task, directs ai to implement task
- The participant communicates a precise task to the AI-driven interface, stating a specific programming request.
- The participant requests a specific task from the AI-driven interface, directing it to implement the task.

31.
Concepts: begins ai interaction, demonstrates task execution, engages in task initiation
- Participant begins interaction with AI by providing a task example.
- The participant demonstrates hands-on interaction with the AI-driven interface, executing tasks and engaging in structured interaction.
- The participant engages in a new task with the AI-driven interface, requiring detailed instructions and expressing clear task intentions.

32.
Concepts: expresses clear goals, communicates clear project goals
- The participant expresses clear task goals, ensuring clarity in objectives.
- The user communicates clear project goals and technical objectives.
===
Here are the definitions for each code:

---
1.
Concepts: critique teaching quality in system development, critiquing developers' teaching skills
Relationship: The concepts are related in that they both involve evaluating the quality of teaching in system development.
Criteria: Participants critique the teaching quality of system developers and their skills.
Phrase: Critiquing teaching quality.

2.
Concepts: critiques current documentation, critiquing current learning methods and educational systems
Relationship: The concepts are related in that they both involve evaluating the effectiveness of current documentation and learning methods.
Criteria: Participants critique current documentation and learning processes, recognizing the limitations of current educational systems.
Phrase: Critiquing current documentation.

3.
Concepts: emphasize oral tradition, highlight oral tradition in knowledge retention
Relationship: The concepts are related in that they both highlight the importance of oral tradition in knowledge sharing and retention.
Criteria: Participants emphasize the importance of oral tradition in knowledge sharing and retention.
Phrase: Emphasizing oral tradition.

4.
Concepts: reflect on undocumented knowledge, noting lack of documentation
Relationship: The concepts are related in that they both involve recognizing the importance of undocumented knowledge and the lack of documentation.
Criteria: Participants reflect on the importance of undocumented knowledge and note the lack of documentation.
Phrase: Reflecting on undocumented knowledge.

5.
Concepts: describe fragmented learning, acknowledges fragmented learning experiences
Relationship: The concepts are related in that they both describe the fragmented nature of learning experiences.
Criteria: Participants describe fragmented learning experiences across multiple languages and acknowledge the challenges of fragmented learning.
Phrase: Describing fragmented learning.

6.
Concepts: seek efficient learning, implies need for efficient learning tools
Relationship: The concepts are related in that they both involve seeking efficient learning methods and tools.
Criteria: Participants seek efficient learning methods or tools that can save time and effort.
Phrase: Seeking efficient learning.

7.
Concepts: advocates for skill development, values skilled inquiry and iterative questioning
Relationship: The concepts are related in that they both involve promoting skill development and inquiry.
Criteria: Participants advocate for skill development and value skilled inquiry and iterative questioning.
Phrase: Advocating for skill development.

8.
Concepts: acknowledge breadth of knowledge, mentioning multiple language experience
Relationship: The concepts are related in that they both involve recognizing the breadth of knowledge and experience.
Criteria: Participants acknowledge the breadth of their knowledge and expertise in multiple languages.
Phrase: Acknowledging breadth of knowledge.

9.
Concepts: reflects on decision-making and evaluates practically, reflects on practical choices and makes informed decisions
Relationship: The concepts are related in that they both involve reflecting on decision-making and evaluating practical choices.
Criteria: Participants reflect on decision-making, evaluate practical decisions, and make informed choices.
Phrase: Reflecting on decision-making.

10.
Concepts: emphasizing iterative learning, emphasizing contextual learning and understanding
Relationship: The concepts are related in that they both involve emphasizing the importance of iterative and contextual learning.
Criteria: Participants emphasize the importance of iterative learning, contextual learning, and understanding in AI-assisted development.
Phrase: Emphasizing iterative learning.

11.
Concepts: emphasizes effective collaboration, highlight the value of collaboration
Relationship: The concepts are related in that they both involve highlighting the importance of collaboration.
Criteria: Participants emphasize effective collaboration and highlight the benefits of collaboration.
Phrase: Emphasizing effective collaboration.

12.
Concepts: reflect on learning opportunities, recognizes learning opportunities and reflects on collaborative learning
Relationship: The concepts are related in that they both involve reflecting on learning opportunities and collaborative learning.
Criteria: Participants reflect on learning opportunities, recognize collaborative learning opportunities, and value collaborative learning.
Phrase: Reflecting on learning opportunities.

13.
Concepts: considers familiarity and reflects on prior experience, reflects on user capabilities and considers expertise level
Relationship: The concepts are related in that they both involve considering familiarity and prior experience.
Criteria: Participants consider familiarity with AI tools, reflect on prior experience, and evaluate user capabilities and expertise level.
Phrase: Considering familiarity.

14.
Concepts: communication skills, highlighting user skills
Relationship: The concepts are related in that they both involve highlighting the importance of communication skills.
Criteria: Participants emphasize the importance of communication skills and highlight user skills.
Phrase: Highlighting communication skills.

15.
Concepts: understand and clarify ai-generated code, learn from ai-generated code through comparison
Relationship: The concepts are related in that they both involve understanding and clarifying AI-generated code.
Criteria: Participants understand and clarify AI-generated code, comparing it to their own understanding.
Phrase: Understanding AI-generated code.

16.
Concepts: ask ai for coding assistance, seek ai assistance for coding and debugging
Relationship: The concepts are related in that they both involve seeking AI assistance for coding and debugging.
Criteria: Participants ask AI for coding assistance and seek AI help for debugging tasks.
Phrase: Seeking AI assistance.

17.
Concepts: figures out syntax and error, relies on ai for code structures
Relationship: The concepts are related in that they both involve relying on AI for code structures and syntax.
Criteria: Participants figure out syntax and error messages with AI help, relying on AI for code structures.
Phrase: Relying on AI for code structures.

18.
Concepts: recognize the option to run code, appreciate the option to run code
Relationship: The concepts are related in that they both involve recognizing and appreciating the option to run code.
Criteria: Participants recognize and appreciate the option to run code, valuing the ability to test AI-generated code.
Phrase: Appreciating the option to run code.

19.
Concepts: iteratively builds models, create code skeletons and construct code iteratively
Relationship: The concepts are related in that they both involve iterative code construction and model building.
Criteria: Participants iteratively build models, create code skeletons, and construct code iteratively.
Phrase: Iteratively building models.

20.
Concepts: integrate ai-generated code, integrate ai-generated code cautiously
Relationship: The concepts are related in that they both involve integrating AI-generated code, with caution.
Criteria: Participants integrate AI-generated code, curate AI outputs, and selectively copy code with caution.
Phrase: Integrating AI-generated code.

21.
Concepts: customize ai-generated code, propose modifications to ai-generated code, override previous work with ai-generated code
Relationship: The concepts are related in that they both involve customizing and modifying AI-generated code.
Criteria: Participants customize AI-generated code, propose modifications, and override previous work with AI-generated code.
Phrase: Customizing AI-generated code.

22.
Concepts: decides to use ai code, balances ai output with personal input, makes pragmatic coding decisions
Relationship: The concepts are related in that they both involve making decisions about using AI-generated code.
Criteria: Participants make decisions about using AI-generated code, balancing AI output with personal input and judgment.
Phrase: Making pragmatic coding decisions.

23.
Concepts: set up a structured process, follow a structured modeling approach
Relationship: The concepts are related in that they both involve setting up and following a structured process.
Criteria: Participants set up an initial process and follow a structured setup process for modeling.
Phrase: Setting up a structured process.

24.
Concepts: articulates specific modeling goals, requests specific model structure
Relationship: The concepts are related in that they both involve articulating specific modeling goals and requests.
Criteria: Participants articulate specific modeling goals and request specific model structures.
Phrase: Articulating specific modeling goals.

25.
Concepts: stating a coding task, articulates specific task
Relationship: The concepts are related in that they both involve stating and articulating specific coding tasks.
Criteria: Participants state and articulate specific coding tasks, clearly defining requirements.
Phrase: Articulating specific coding tasks.

26.
Concepts: focuses on task specifics, engages in thoughtful task specification
Relationship: The concepts are related in that they both involve focusing on task specifics and specification.
Criteria: Participants focus on task specifics, engaging in thoughtful task specification and refinement.
Phrase: Focusing on task specifics.

27.
Concepts: clarifies phrasing, clarifies initial request, refines task details
Relationship: The concepts are related in that they both involve clarifying and refining task requests.
Criteria: Participants clarify phrasing, refine task details, and clarify initial requests for clarity and accuracy.
Phrase: Clarifying task requests.

28.
Concepts: specifies neural network task, specifies neural network intention
Relationship: The concepts are related in that they both involve specifying neural network tasks and intentions.
Criteria: Participants specify neural network tasks and intentions, planning to build a basic neural network.
Phrase: Specifying neural network tasks.

29.
Concepts: sets up ai task, provides parameter details, dictates task parameters
Relationship: The concepts are related in that they both involve setting up AI tasks and providing parameter details.
Criteria: Participants set up AI tasks, provide parameter details, and dictate task parameters.
Phrase: Setting up AI tasks.

30.
Concepts: communicates precise task, directs ai to implement task
Relationship: The concepts are related in that they both involve communicating precise tasks and directing AI implementation.
Criteria: Participants communicate precise tasks to the AI-driven interface, directing it to implement the task.
Phrase: Communicating precise tasks.

31.
Concepts: begins ai interaction, demonstrates task execution, engages in task initiation
Relationship: The concepts are related in that they both involve initiating and executing tasks with AI.
Criteria: Participants begin interaction with AI, demonstrate task execution, and engage in task initiation.
Phrase: Initiating AI interaction.

32.
Concepts: expresses clear goals, communicates clear project goals
Relationship: The concepts are related in that they both involve expressing and communicating clear goals and objectives.
Criteria: Participants express clear task goals, ensuring clarity in objectives, and communicate clear project goals.
Phrase: Expressing clear goals.