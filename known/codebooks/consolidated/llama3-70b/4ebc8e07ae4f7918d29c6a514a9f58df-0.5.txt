You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. If a sub-code includes another, use the broader one. If sub-codes are parallel, write one that covers both.
Write clear and generalizable labels and criteria for each code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization (e.g. "social interaction" instead of "interaction", "communication approach" instead of "communication").
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (32 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {Consolidated criteria of code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
32.
Relationship: {The logical relationship between sub-codes in code 32}
Criteria: {Consolidated criteria of code 32}
Label: {A consolidated label of code 32}
Category: {2-4 words for code 32}
---
~~~
1. understanding, express comprehension.
- Indications of understanding or comprehension
- Expressing understanding or comprehension of a concept or idea.

2. positive feedback provision, software feedback.
- Complimenting software design and functionality.
- Offering positive feedback or praise about the software's design, functionality, or user experience

3. user appreciation, appreciate support from users.
- Acknowledging user feedback and shared resources.
- Expressing gratitude or appreciation for user support

4. social greeting, greeting.
- Welcoming or acknowledging others
- Greeting or welcoming message, polite expression or courtesy, expressions of gratitude or appreciation

5. user engagement, proactive user engagement.
- Encouraging or promoting user engagement
- User-initiated interactions that enhance engagement and participation within the community.

6. community feedback, community feedback solicitation.
- Collecting opinions or suggestions from the community
- Active engagement of the community in decision-making through feedback solicitation.

7. emoji, emotive visual communication.
- Using emojis or other non-verbal cues to express reactions or emotions
- Use of emojis or emoticons
- Expressing emotions and reactions through emojis.
- Use of emojis, emoticons to convey emotional responses
- Use of non-verbal symbols such as emojis to express emotions or emphasize communication.

8. release notes & new features, feature list and introduction.
- Listing changes in new releases, introducing new features
- Detailed introduction of new or revised features in software updates.

9. software release planning, release planning.
- Outlining plans for platform updates, release timelines
- Involves sharing a schedule or projected timeframe for a future update, release, or deployment of a digital artifact.

10. share update timeline, update schedule.
- Sharing information about the timeline for updates or releases
- Outlining a schedule or timeline for updates or releases, mention of a specific version release

11. update communication, update communication details.
- Acknowledgment of update completion and communication of update schedules.
- Detailed communication regarding the timing and content of software updates.

12. update information, update confirmations.
- Announcing new versions, changes, and features in the system.
- Confirming update releases, mentioning new version availability

13. update inquiry & details, update inquiries & timelines.
- Involves inquiries about updates and providing details on new releases.
- Asking about update timing, indicating upcoming updates

14. update sharing, share the magnitude of update.
- Sharing updates or information within a community or group, description of an update as substantial or significant
- Describing the magnitude or significance of an update

15. community announcement, community updates.
- Announcing updates, new information to community members
- Involves exchanging greetings and sharing official messages within the community.
- Updates shared within the community about ongoing projects, new resources, or significant events.

16. progress updates, development status updates.
- Updates on project and software development progress.
- Sharing visual updates, providing development status

17. transparency, process transparency.
- Being transparent about the development process, release timelines, or upcoming changes.
- Openness in sharing details about the development processes.

18. feature stability, long term stability.
- Ensuring the stability of product features.
- Discusses aspects of a feature that contribute to the system's durability or reliability over time.
- Ensuring the long-term stability and reliability of a system or feature.

19. craftsmanship, craftspersonship mindset.
- Emphasizing the importance of skill and attention to detail.
- Embracing a mindset of craftsmanship, attention to detail, and a commitment to quality.

20. subject focus areas, physics focus.
- Mentions focus on electricity, mechanics, optics experiment types
- Focus on physics, particularly electricity and mechanics, topics or concepts related to electromagnetics

21. feature enhancement, feature development inquiry.
- Discussions about adding new features, implementing new features, suggestions or ideas for new features
- Enhancements and refinements made to software features to optimize performance and user experience.
- Inquiries and discussions about the development of new features based on user feedback.

22. use case, software use case.
- Describes a specific use case or application for the product.
- Description of a specific use case or scenario
- Describing the intended use cases or target audience for the software

23. feature discussion and explanation, feature design and functionality.
- Discussing or providing feedback on specific features, explaining functionality or rationale behind features.
- Discussing the design considerations and rationale behind specific software features or functionalities, as well as the specific features, functionalities, or components included in the software.

24. software functionality, feature usage and explanation.
- Explaining software capabilities and discussing functionalities.
- Detailed explanation and discussion on the utility and application of specific software features.

25. user-centered design, user-centric development.
- Emphasis on user feedback and involvement in design.
- Design approach prioritizing user needs and experiences
- Design processes that heavily consider user input and needs.

26. user feedback on design, design response.
- User feedback specifically related to design choices, reflecting personal preferences.
- Responses to user feedback, feedback or critique on design, users' opinions or suggestions, integrating user feedback into design

27. needs assessment, understanding user needs.
- Identifying or assessing user needs
- Discussing, understanding, or identifying the specific needs or requirements of users.

28. simplicity, design simplicity.
- Emphasizing simplicity or minimalism in the design
- Emphasis on simplicity or ease of use in the online community.
- Focus on simplicity in design and user-friendly features for intuitive use.
- Principles and explanations focusing on simplicity in design

29. design explanation, design principles and rationale.
- Explanations or clarifications of design decisions, guiding principles for design.
- Stating general design principles or guidelines, providing reasoning behind design decisions or approaches.

30. configuration options, user customization options.
- Describing configuration options, settings, or customization capabilities available in the software.
- Options available for users to manually edit or customize software settings and features.

31. download instructions, technology download guidance.
- Providing instructions or steps for downloading or accessing the product.
- Providing instructions or guidance on downloading or accessing resources
- Instructions provided for downloading specific software or tools.

32. user guidance, user manual requests.
- Involves guidance provision and inquiries about user manuals.
- Inquiries and requests for user manuals, guides, or instructional content.
===
Here is the output format with categories, definitions for each code, and relationships between sub-codes:

---
Categories:
* Community Building
* Software Development
* User Experience
* Communication Approach
* Design Principles
* Physics Focus

Definitions for each code:

1.
Relationship: Inclusive
Criteria: Expressions of understanding or comprehension
Label: Understanding and Comprehension
Category: Community Building

2.
Relationship: Parallel
Criteria: Positive feedback on software design and functionality
Label: Positive Feedback Provision
Category: User Experience

3.
Relationship: Inclusive
Criteria: Expressions of gratitude or appreciation for user support
Label: User Appreciation
Category: Community Building

4.
Relationship: Parallel
Criteria: Welcoming or acknowledging others
Label: Social Greeting
Category: Community Building

5.
Relationship: Inclusive
Criteria: Encouraging or promoting user engagement
Label: User Engagement
Category: Community Building

6.
Relationship: Inclusive
Criteria: Collecting opinions or suggestions from the community
Label: Community Feedback
Category: Community Building

7.
Relationship: Inclusive
Criteria: Using emojis or non-verbal cues to express emotions
Label: Emotive Visual Communication
Category: Communication Approach

8.
Relationship: Inclusive
Criteria: Listing changes in new releases, introducing new features
Label: Release Notes and New Features
Category: Software Development

9.
Relationship: Parallel
Criteria: Outlining plans for platform updates, release timelines
Label: Software Release Planning
Category: Software Development

10.
Relationship: Inclusive
Criteria: Sharing information about the timeline for updates or releases
Label: Share Update Timeline
Category: Software Development

11.
Relationship: Inclusive
Criteria: Acknowledgment of update completion and communication of update schedules
Label: Update Communication
Category: Software Development

12.
Relationship: Inclusive
Criteria: Announcing new versions, changes, and features in the system
Label: Update Information
Category: Software Development

13.
Relationship: Inclusive
Criteria: Inquiries about updates and providing details on new releases
Label: Update Inquiry and Details
Category: Software Development

14.
Relationship: Inclusive
Criteria: Sharing updates or information within a community or group
Label: Update Sharing
Category: Community Building

15.
Relationship: Inclusive
Criteria: Announcing updates, new information to community members
Label: Community Announcement
Category: Community Building

16.
Relationship: Inclusive
Criteria: Updates on project and software development progress
Label: Progress Updates
Category: Software Development

17.
Relationship: Inclusive
Criteria: Being transparent about the development process, release timelines, or upcoming changes
Label: Transparency
Category: Software Development

18.
Relationship: Inclusive
Criteria: Ensuring the stability of product features
Label: Feature Stability
Category: Software Development

19.
Relationship: Inclusive
Criteria: Emphasizing the importance of skill and attention to detail
Label: Craftsmanship
Category: Software Development

20.
Relationship: Inclusive
Criteria: Focus on physics, particularly electricity and mechanics
Label: Subject Focus Areas
Category: Physics Focus

21.
Relationship: Inclusive
Criteria: Discussions about adding new features, implementing new features
Label: Feature Enhancement
Category: Software Development

22.
Relationship: Inclusive
Criteria: Describes a specific use case or application for the product
Label: Use Case
Category: Software Development

23.
Relationship: Inclusive
Criteria: Discussing or providing feedback on specific features, explaining functionality or rationale
Label: Feature Discussion and Explanation
Category: Software Development

24.
Relationship: Inclusive
Criteria: Explaining software capabilities and discussing functionalities
Label: Software Functionality
Category: Software Development

25.
Relationship: Inclusive
Criteria: Emphasis on user feedback and involvement in design
Label: User-Centered Design
Category: Design Principles

26.
Relationship: Inclusive
Criteria: User feedback specifically related to design choices, reflecting personal preferences
Label: User Feedback on Design
Category: Design Principles

27.
Relationship: Inclusive
Criteria: Identifying or assessing user needs
Label: Needs Assessment
Category: Design Principles

28.
Relationship: Inclusive
Criteria: Emphasizing simplicity or minimalism in the design
Label: Simplicity
Category: Design Principles

29.
Relationship: Inclusive
Criteria: Explanations or clarifications of design decisions, guiding principles for design
Label: Design Explanation
Category: Design Principles

30.
Relationship: Inclusive
Criteria: Describing configuration options, settings, or customization capabilities
Label: Configuration Options
Category: User Experience

31.
Relationship: Inclusive
Criteria: Providing instructions or steps for downloading or accessing the product
Label: Download Instructions
Category: User Experience

32.
Relationship: Inclusive
Criteria: Involves guidance provision and inquiries about user manuals
Label: User Guidance
Category: User Experience