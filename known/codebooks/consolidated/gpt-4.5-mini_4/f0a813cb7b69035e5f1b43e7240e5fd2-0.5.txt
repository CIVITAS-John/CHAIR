You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (7 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
7. 
Concepts: {Repeat the input 7}
Relationship: {What is logical relationship between concepts in code 7, or N/A if not applicable}
Criteria: {Who did what, and how for code 7}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: explain design rationale, give rationale to development decision
- Designers articulate the rationale and intentions guiding user-friendly design and future plans.
- A designer provides a rationale for decisions made during development for stability.

2.
Concepts: development timeline, share update timeline for releases
- A designer communicates expected timelines for various stages of software development.
- Designers communicate the expected timeline and status of upcoming software features and releases.

3.
Concepts: integrate user feedback, acknowledge and implement feedback
- Designers acknowledge and prioritize user feedback in the development process.
- Designers react to user feedback and commit to considering suggestions in their implementation plans.

4.
Concepts: establish feedback loop, mention feedback-based prompts
- Instances where users provide feedback on the software and designers respond to it.
- Designers indicate that user feedback will inform the development of prompts or instructions in the software.

5.
Concepts: maintain engagement, engage responsively with users
- Designers express engagement through responses and acknowledge user input.
- Designers actively respond to user feedback and inquiries to improve the design.

6.
Concepts: foster open communication, acknowledge and share experiences
- Designers encourage users to share problems and suggestions openly.
- Designers acknowledge and share user experiences to provide support.

7.
Concepts: offer user guidance, instruction and updates
- Designers provide guidance and tips to help users navigate new features and software updates.
- Designers providing updates and instructions to help users understand and use the software effectively.
===
---
Definitions for each code (7 in total):
1.
Concepts: explain design rationale, give rationale to development decision
Relationship: Both concepts relate to the designers articulating their intentions and reasoning behind design choices and development decisions.
Criteria: Designers articulate the rationale and intentions guiding user-friendly design and provide reasoning for decisions made during development for stability.
Phrase: Articulate design rationale.

2.
Concepts: development timeline, share update timeline for releases
Relationship: Both concepts involve communication regarding the expected timelines for software development and feature releases.
Criteria: Designers communicate expected timelines for various stages of software development and the status of upcoming software features and releases.
Phrase: Communicate development timelines.

3.
Concepts: integrate user feedback, acknowledge and implement feedback
Relationship: Both concepts emphasize the importance of user feedback in the development process and the designers' commitment to addressing it.
Criteria: Designers acknowledge and prioritize user feedback in the development process and commit to implementing suggestions in their plans.
Phrase: Integrate user feedback.

4.
Concepts: establish feedback loop, mention feedback-based prompts
Relationship: Both concepts highlight the interaction between users providing feedback and designers responding to it in the context of software development.
Criteria: Users provide feedback on the software, and designers indicate that this feedback will inform the development of prompts or instructions in the software.
Phrase: Establish feedback loop.

5.
Concepts: maintain engagement, engage responsively with users
Relationship: Both concepts focus on the designers' active engagement with users through responses and acknowledgment of their input.
Criteria: Designers express engagement through responses to user feedback and inquiries to improve the design.
Phrase: Maintain user engagement.

6.
Concepts: foster open communication, acknowledge and share experiences
Relationship: Both concepts involve creating an environment where users feel comfortable sharing their problems and suggestions, and designers recognizing these contributions.
Criteria: Designers encourage users to share problems and suggestions openly and acknowledge user experiences to provide support.
Phrase: Foster open communication.

7.
Concepts: offer user guidance, instruction and updates
Relationship: Both concepts pertain to the designers providing assistance and information to help users navigate the software effectively.
Criteria: Designers provide guidance and tips to help users navigate new features and updates, along with instructions for effective software use.
Phrase: Offer user guidance. 
---