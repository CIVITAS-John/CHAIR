You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (19 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
19. 
Concepts: {Repeat the input 19}
Relationship: {What is logical relationship between concepts in code 19, or N/A if not applicable}
Criteria: {Who did what, and how for code 19}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: promote collaborative learning, acknowledging community expertise
- Designers share knowledge and promote collaborative learning within the community.
- A designer and users acknowledge the expertise within the community and consult each other.

2.
Concepts: responding to inquiries, ask and answer design questions
- Designers respond directly or indirectly to user inquiries and questions.
- Designers ask questions related to design or feature implementation, and users provide support.

3.
Concepts: seeking clarification, clarifying points
- Users ask questions to seek clarification and engage in follow-up questioning.
- Users or designers seek or provide clarification on specific points, including follow-up questions and their intentions.

4.
Concepts: gather user input, invite and accept user input
- Designers interact with users to gather input on design elements or features.
- Designers seek user input, invite users to participate, and accept user suggestions for future activities.

5.
Concepts: engaging community feedback, involve users in co-designing
- Designers consult the community for input and encourage participation.
- Designers offer and involve community members in the design process, allowing them to contribute ideas and make decisions.

6.
Concepts: integrating user feedback, gather user experience feedback
- Designers collect, consider, and implement user feedback into the design process.
- Designers seek and gather feedback from users about their experiences with the software.

7.
Concepts: resolving user concerns, addressing user needs
- Designers respond to and resolve user concerns.
- Designers inquire about specific user problems and address usability concerns.

8.
Concepts: proposing solutions, considering alternative solutions
- Designers offer solutions and share potential design ideas based on user feedback.
- Users or designers propose and show openness to alternative solutions.

9.
Concepts: guiding feature use, providing user guidance
- Designers provide guidance and specific instructions on how to use certain features.
- Designers provide detailed instructions and guidance on using the software.

10.
Concepts: describe software update process, discussing release and system updates
- Participants describe the process or timeline for software updates and provide detailed overviews.
- Designers discuss the process of releasing updates and share information about system requirements and software updates.

11.
Concepts: promising future consultation, promise to improve based on feedback
- Designers promise to invite feedback and consult users before making significant changes.
- Designers promise to improve the software and commit to implementing changes based on user feedback.

12.
Concepts: communicating release schedules, manage timeline expectations
- A designer provides or communicates plans for software release schedules.
- Designers set and manage user expectations for the timeline of feature releases or updates.

13.
Concepts: user interface, discuss avatar customization
- A designer discusses aspects of the user interface, such as uploading an avatar.
- Users or designers discuss customization and management of avatars or personal images.

14.
Concepts: explaining the plans, explaining situations
- A participant explains the plans or rationale behind a feature or decision.
- Participants explain situations and confirm reasons for planned actions or decisions.

15.
Concepts: acknowledging and agreeing, confirm agreement and understanding
- Users and designers affirm each other's points, agree on suggestions, and confirm collaboration.
- Users express agreement with statements or ideas and confirm their understanding.

16.
Concepts: share information, encouraging discussion and feedback
- Instances where participants share information or resources to solve a problem or answer a question.
- Participants encourage others to discuss issues, provide feedback, and share resources.

17.
Concepts: providing context, background information
- Users provide context for their responses and about the community or environment.
- Users provide background information relevant to the discussion.

18.
Concepts: user reviews, expressing positive feedback
- A user provides a review of the software, highlighting its strengths.
- Users praise the software's usability and express positive feedback.

19.
Concepts: sharing software experiences, shared experiences and support
- Users share past incidents and experiences about the software's effectiveness.
- Users and designers sharing experiences and supporting each other in using and improving the software.
===
---
Definitions for each code (19 in total):
1.
Concepts: promote collaborative learning, acknowledging community expertise
Relationship: Both concepts involve the exchange and recognition of knowledge within the community.
Criteria: Designers and users share knowledge, promote collaborative learning, and acknowledge each other's expertise.
Phrase: Promoting collaborative learning and acknowledging expertise

2.
Concepts: responding to inquiries, ask and answer design questions
Relationship: Both concepts involve a question-and-answer dynamic between designers and users.
Criteria: Designers respond to user inquiries and ask design-related questions, with users providing support.
Phrase: Engaging in Q&A about design

3.
Concepts: seeking clarification, clarifying points
Relationship: Both concepts involve the process of seeking and providing clarification.
Criteria: Users and designers ask questions to seek clarification and provide detailed follow-up explanations.
Phrase: Seeking and providing clarification

4.
Concepts: gather user input, invite and accept user input
Relationship: Both concepts involve the collection and acceptance of user input.
Criteria: Designers interact with users to gather, invite, and accept input on design elements or features.
Phrase: Gathering and accepting user input

5.
Concepts: engaging community feedback, involve users in co-designing
Relationship: Both concepts involve user participation in the design process.
Criteria: Designers consult the community for feedback and involve users in co-designing.
Phrase: Engaging users in co-designing

6.
Concepts: integrating user feedback, gather user experience feedback
Relationship: Both concepts involve the collection and integration of user feedback.
Criteria: Designers gather and implement user feedback about their experiences with the software.
Phrase: Integrating user experience feedback

7.
Concepts: resolving user concerns, addressing user needs
Relationship: Both concepts involve addressing and resolving user issues.
Criteria: Designers respond to and resolve user concerns and address specific user needs.
Phrase: Addressing and resolving user concerns

8.
Concepts: proposing solutions, considering alternative solutions
Relationship: Both concepts involve the suggestion and consideration of solutions.
Criteria: Designers and users propose solutions and show openness to alternative ideas.
Phrase: Proposing and considering solutions

9.
Concepts: guiding feature use, providing user guidance
Relationship: Both concepts involve providing instructions and guidance.
Criteria: Designers provide detailed instructions and guidance on how to use software features.
Phrase: Providing user guidance

10.
Concepts: describe software update process, discussing release and system updates
Relationship: Both concepts involve communication about software updates.
Criteria: Participants describe the update process and discuss release timelines and system requirements.
Phrase: Discussing software updates

11.
Concepts: promising future consultation, promise to improve based on feedback
Relationship: Both concepts involve commitments to future actions based on user feedback.
Criteria: Designers promise to consult users and improve the software based on feedback.
Phrase: Committing to future consultation and improvements

12.
Concepts: communicating release schedules, manage timeline expectations
Relationship: Both concepts involve managing expectations about timelines.
Criteria: Designers communicate release schedules and manage user expectations for feature updates.
Phrase: Managing release schedules and expectations

13.
Concepts: user interface, discuss avatar customization
Relationship: Both concepts involve aspects of the user interface.
Criteria: Designers and users discuss user interface elements, including avatar customization.
Phrase: Discussing user interface customization

14.
Concepts: explaining the plans, explaining situations
Relationship: Both concepts involve providing explanations.
Criteria: Participants explain plans, rationales, and situations behind features or decisions.
Phrase: Explaining plans and situations

15.
Concepts: acknowledging and agreeing, confirm agreement and understanding
Relationship: Both concepts involve mutual affirmation and understanding.
Criteria: Users and designers affirm each other's points, agree on suggestions, and confirm understanding.
Phrase: Confirming agreement and understanding

16.
Concepts: share information, encouraging discussion and feedback
Relationship: Both concepts involve the exchange of information and encouragement of discussion.
Criteria: Participants share information and encourage discussion and feedback.
Phrase: Sharing information and encouraging discussion

17.
Concepts: providing context, background information
Relationship: Both concepts involve giving context and background.
Criteria: Users provide context and background information relevant to discussions.
Phrase: Providing context and background information

18.
Concepts: user reviews, expressing positive feedback
Relationship: Both concepts involve user evaluations and positive feedback.
Criteria: Users provide reviews and express positive feedback about the software.
Phrase: Expressing positive feedback

19.
Concepts: sharing software experiences, shared experiences and support
Relationship: Both concepts involve sharing experiences and offering support.
Criteria: Users and designers share experiences and support each other in using and improving the software.
Phrase: Sharing experiences and support
---