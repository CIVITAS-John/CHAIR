You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (16 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
16. 
Concepts: {Repeat the input 16}
Relationship: {What is logical relationship between concepts in code 16, or N/A if not applicable}
Criteria: {Who did what, and how for code 16}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: detail updates and fixes, describe and overview updates
- Designers detail specific updates and list new features, components, and bug fixes.
- Designers describe the scope and provide an overview of updates.

2.
Concepts: communicating changes, announce new versions and features
- Designers inform users about changes or updates to the software.
- Designers announce upcoming updates, features, software versions, and changes to software components.

3.
Concepts: follow up and elaborate, acknowledgment and implementation
- Designers and users follow up on discussions and elaborate on suggestions.
- Designers acknowledging user feedback and discussing plans to implement suggested features.

4.
Concepts: discussion of further interests, outline future development plans
- A designer discusses potential future interests or projects.
- Designers share potential future directions and outline goals for future development.

5.
Concepts: align features with needs, gather user context and needs
- Designers align feature development with user and educational needs.
- Designers gather user context and teachers' needs for specific features.

6.
Concepts: discuss task prioritization, prioritize and discuss feedback
- Designers discuss the order in which tasks or features will be developed.
- Designers and users prioritize and discuss user feedback for iterative development.

7.
Concepts: discuss compatibility and requirements, consider and discuss technical aspects
- Developers discuss software compatibility and system requirements for development.
- Designers and users consider technical requirements and discuss hardware constraints.

8.
Concepts: discuss design improvements, discuss usability and design
- Designers and developers discuss refining and adjusting design features.
- Designers discuss user interface, usability, and visual and functional aspects of the software.

9.
Concepts: limitation of the team, explain design focus and limitations, discuss current limitations
- A designer mentions the limitations of the team.
- Designers explain the focus and acknowledge limitations of the design.
- Designers mention and explain technical limitations of the current version.

10.
Concepts: provide user guidance, instruction and updates
- A designer provides detailed guidance on new features and updates.
- Designers providing updates and instructions to help users understand and use the software effectively.

11.
Concepts: share past incidents, share educational experiences
- Users share stories or past incidents related to the software or its use.
- Users share their educational and classroom experiences with the software.

12.
Concepts: engage with user feedback, integrate user feedback
- Designers solicit, accept, acknowledge, and respond to user feedback.
- Designers solicit and incorporate user feedback into design decisions, acknowledging user input.

13.
Concepts: greet the community, initiate community interaction
- Users and designers welcome and greet each other or the community.
- Users introduce themselves and initiate interaction with the community.

14.
Concepts: inquire about pc version, seek version and compatibility clarification
- Users inquire about the PC version of the software.
- Users seek clarification about software versions and platform compatibility.

15.
Concepts: request clarification, seek and provide clarification
- Users ask questions to seek information, express uncertainty, or request clarification.
- Users and designers seek and provide clarification on requests and questions.

16.
Concepts: request additional experiments, request physics features
- A user requests the inclusion of additional experiments.
- Users request the addition of specific physics concepts or features for physics experiments.
===
---
Definitions for each code (16 in total):
1.
Concepts: detail updates and fixes, describe and overview updates
Relationship: Both concepts involve providing information about updates.
Criteria: Designers detail specific updates, list new features, and provide an overview of updates.
Phrase: Detailing updates and fixes

2.
Concepts: communicating changes, announce new versions and features
Relationship: Both concepts involve informing users about changes.
Criteria: Designers inform users about changes and announce new versions and features.
Phrase: Announcing changes and new versions

3.
Concepts: follow up and elaborate, acknowledgment and implementation
Relationship: Both concepts involve interaction between designers and users regarding feedback.
Criteria: Designers and users follow up on discussions, elaborate on suggestions, and acknowledge and discuss implementing feedback.
Phrase: Following up and elaborating on feedback

4.
Concepts: discussion of further interests, outline future development plans
Relationship: Both concepts involve discussing future directions.
Criteria: Designers discuss potential future interests and outline future development plans.
Phrase: Discussing future development plans

5.
Concepts: align features with needs, gather user context and needs
Relationship: Both concepts involve understanding and aligning with user needs.
Criteria: Designers gather user context and align features with user and educational needs.
Phrase: Aligning features with user needs

6.
Concepts: discuss task prioritization, prioritize and discuss feedback
Relationship: Both concepts involve prioritizing tasks and feedback.
Criteria: Designers discuss task prioritization and prioritize user feedback for development.
Phrase: Prioritizing tasks and feedback

7.
Concepts: discuss compatibility and requirements, consider and discuss technical aspects
Relationship: Both concepts involve discussing technical aspects of the software.
Criteria: Designers and developers discuss software compatibility, system requirements, and technical aspects.
Phrase: Discussing technical requirements

8.
Concepts: discuss design improvements, discuss usability and design
Relationship: Both concepts involve discussing design aspects.
Criteria: Designers and developers discuss design improvements, usability, and visual and functional aspects.
Phrase: Discussing design and usability

9.
Concepts: limitation of the team, explain design focus and limitations, discuss current limitations
Relationship: All concepts involve discussing limitations.
Criteria: Designers mention team limitations, explain design focus and limitations, and discuss current technical limitations.
Phrase: Discussing limitations

10.
Concepts: provide user guidance, instruction and updates
Relationship: Both concepts involve providing guidance and updates to users.
Criteria: Designers provide detailed guidance, instructions, and updates to help users understand and use the software.
Phrase: Providing user guidance and updates

11.
Concepts: share past incidents, share educational experiences
Relationship: Both concepts involve sharing experiences.
Criteria: Users share past incidents and educational experiences related to the software.
Phrase: Sharing experiences

12.
Concepts: engage with user feedback, integrate user feedback
Relationship: Both concepts involve handling user feedback.
Criteria: Designers solicit, acknowledge, and integrate user feedback into design decisions.
Phrase: Engaging with and integrating user feedback

13.
Concepts: greet the community, initiate community interaction
Relationship: Both concepts involve initiating interaction within the community.
Criteria: Users and designers greet each other and initiate community interaction.
Phrase: Initiating community interaction

14.
Concepts: inquire about pc version, seek version and compatibility clarification
Relationship: Both concepts involve seeking information about software versions and compatibility.
Criteria: Users inquire about the PC version and seek clarification on software versions and compatibility.
Phrase: Seeking version and compatibility information

15.
Concepts: request clarification, seek and provide clarification
Relationship: Both concepts involve seeking and providing clarification.
Criteria: Users and designers ask questions and provide clarification on requests and uncertainties.
Phrase: Seeking and providing clarification

16.
Concepts: request additional experiments, request physics features
Relationship: Both concepts involve requesting additional content.
Criteria: Users request the inclusion of additional experiments and specific physics features.
Phrase: Requesting additional experiments and features
---