You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (29 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
29. 
Concepts: {Repeat the input 29}
Relationship: {What is logical relationship between concepts in code 29, or N/A if not applicable}
Criteria: {Who did what, and how for code 29}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: involving users, user involvement
- Instances where designers actively involve users in the design process.
- Instances where users are involved in the design process, either through feedback or testing.

2.
Concepts: co-designing with users, offering co-designing
- Involving users in the design process, allowing them to contribute ideas and make decisions.
- Designers indicate their intention to involve the community in the development process by seeking input or collaboration.

3.
Concepts: upload image, user interface
- The designer requests assistance with uploading an image.
- Designer asks for assistance regarding uploading an image.

4.
Concepts: open communication, user feedback and communication
- Designers promote open communication and encourage users to share their concerns or suggestions.
- Designers encourage open communication about issues users face while using the software.

5.
Concepts: encouraging discussion, encourage in-group discussion
- A designer encourages users to share their issues openly to foster a supportive environment.
- A designer encourages users to voice any issues directly in the group.

6.
Concepts: user interaction, engage in dialogue
- The designer engages in dialogue with users, discussing specific aspects of the application.
- Users and designers engage in back-and-forth communication to clarify preferences or choices.

7.
Concepts: private messaging, request private message
- Designer invites users to communicate privately for more detailed discussions.
- The designer requests a user to send a private message for further discussion.

8.
Concepts: designer confirmation, feature implementation
- Designer confirms the existence of a feature or update.
- A designer confirms that a feature will be implemented in the next update.

9.
Concepts: acceptance of request, accepting suggestion, agree to implement suggestion, accepting the suggestion
- Designer agrees to incorporate a user request in the next software update.
- A designer acknowledges a user's suggestion and commits to implementing it in a future update.
- Designer agrees to implement a user's suggestion in future updates.
- Designers acknowledge and agree to implement user suggestions or requests.

10.
Concepts: promise to improve, designer acknowledgment
- The designer expresses gratitude for user support and commits to improvement.
- The designer acknowledges user suggestions and commits to future updates.

11.
Concepts: respond to user feedback, align with user feedback
- The designer acknowledges user feedback regarding software functionality.
- The designer aligns their actions with user feedback to improve the software.

12.
Concepts: confirmation, agreement, confirm understanding
- Users and designers confirm understanding or agreement in discussions.
- Users and designers express agreement or validation of each other's statements or ideas.
- Users and designers confirm their understanding of previous statements or agreements.

13.
Concepts: seek consensus, confirmation/agreement of collaboration
- The designer seeks agreement or consensus on a proposed idea or approach.
- Designer confirms the need for collaboration and gathering opinions before proceeding.

14.
Concepts: acknowledge feedback, acknowledge user experience, acknowledge understanding
- Designer acknowledges user feedback with simple affirmations.
- Designer acknowledges a user's experience or issue, validating their concerns.
- Designers acknowledge user input or feedback, indicating understanding and consideration.

15.
Concepts: affirm user's point, acknowledge designer's point
- The designer acknowledges a user's point or statement during a discussion.
- User acknowledges and supports the designer's point or suggestion.

16.
Concepts: seeking input, gather user feedback, user experience feedback, user feedback request
- Designers actively seek feedback or suggestions from users to improve the software.
- A designer actively seeks input from users regarding their experiences with the software.
- Designers solicit user feedback regarding their experiences with the software.
- Designer requests feedback from users to improve the software.

17.
Concepts: gather user input, inquiring user input for future iterations
- The designer seeks input from users regarding specific technical aspects of the software.
- Designers invite users to provide input for future software iterations.

18.
Concepts: seeking feedback, prompting user feedback
- The designer prompts users to provide feedback on desired features.
- The designer prompts users to provide feedback and suggestions for improvement.

19.
Concepts: encourage feedback, encouragement of user feedback, encouraging interaction, encouraging feedback
- The designer actively solicits input and suggestions from users to improve the product.
- Instances where designers encourage users to provide suggestions or feedback.
- The designer encourages users to share their thoughts and suggestions for future updates.
- The designer actively invites users to provide more suggestions for improvement.

20.
Concepts: solicit suggestions, suggestions of interactions, elicit feedback, solicit suggestions and requirements
- The designer requests suggestions from users to enhance the application.
- The designer invites users to share their suggestions or requirements for the software.
- A designer invites users to share additional features or components they wish to see in the software.
- A designer invites users to share their suggestions and requirements for the software.

21.
Concepts: invite feedback, feature request invitation, feedback solicitation
- Designers invite users to provide feedback and suggestions for future updates and features.
- Designers invite users to suggest new features or improvements.
- Designers solicit feedback or suggestions from users regarding features or improvements.

22.
Concepts: feedback, prioritize user feedback
- The designer indicates prioritization of certain features based on user feedback.
- Designers prioritize user feedback in the development process.

23.
Concepts: user input, plan for iterative feedback, opinion gathering
- Designer indicates plans to gather user opinions before proceeding with development.
- A designer indicates plans to gather user opinions before further development.
- Designers express the need to gather user opinions before proceeding with new developments.

24.
Concepts: taking feedback, plan future update, iterative development based on user feedback, reaction to feedback
- A designer indicates that user feedback will be incorporated into future updates.
- The designer outlines plans for future updates to the application based on user feedback.
- A designer outlines plans for updates based on user feedback and suggestions.
- The designer reacts to user feedback and outlines plans for future updates.

25.
Concepts: promise future consultation, announce future consultation
- The designer commits to consulting the community before making significant decisions.
- Designers indicate their intention to consult the community before making decisions or starting new projects.

26.
Concepts: development transparency
- Instances where designers provide detailed information about development processes, challenges, and progress.
- Keeping the community informed about the development process and upcoming changes.

27.
Concepts: technical constraints
- Instances where technical limitations or requirements are discussed.
- Instances where limitations or constraints of the software are mentioned.

28.
Concepts: promote community engagement
- Instances where members of the community actively participate in discussions, ask questions, or provide feedback.
- Instances where users or designers engage in discussions that foster community interaction and participation.
- Active participation and interaction among community members, including both users and designers.
- Efforts made by designers to actively involve and communicate with the user community.

29.
Concepts: collaborative problem solving
- Moments where designers and users work together to address issues.
- Collaborative efforts between users and designers to solve issues and improve the product.
- Instances where users and designers work together to address issues or improve the software.
===
---
Definitions for each code (29 in total):

1.  
Concepts: involving users, user involvement  
Relationship: Both concepts emphasize the active participation of users in the design process.  
Criteria: Designers actively involve users through feedback or testing in the design process.  
Phrase: Involve users in design.

2.  
Concepts: co-designing with users, offering co-designing  
Relationship: Both concepts focus on collaboration and input from users during the design process.  
Criteria: Designers allow users to contribute ideas and seek collaboration in development.  
Phrase: Co-design with users.

3.  
Concepts: upload image, user interface  
Relationship: Both concepts relate to the process of image uploading within a user interface context.  
Criteria: The designer requests assistance from users regarding the image uploading process.  
Phrase: Request assistance for image upload.

4.  
Concepts: open communication, user feedback and communication  
Relationship: Both concepts highlight the importance of communication and feedback between designers and users.  
Criteria: Designers promote open communication for users to share concerns and suggestions.  
Phrase: Promote open communication.

5.  
Concepts: encouraging discussion, encourage in-group discussion  
Relationship: Both concepts focus on fostering a supportive environment for users to express issues.  
Criteria: A designer encourages users to share their issues openly within the group.  
Phrase: Encourage group discussion.

6.  
Concepts: user interaction, engage in dialogue  
Relationship: Both concepts involve active communication between designers and users.  
Criteria: The designer engages in dialogue with users to discuss application aspects.  
Phrase: Engage in user dialogue.

7.  
Concepts: private messaging, request private message  
Relationship: Both concepts relate to private communication between designers and users.  
Criteria: The designer invites users to communicate privately for detailed discussions.  
Phrase: Invite private messaging.

8.  
Concepts: designer confirmation, feature implementation  
Relationship: Both concepts involve the designer confirming features or updates.  
Criteria: The designer confirms the implementation of features or updates.  
Phrase: Confirm feature implementation.

9.  
Concepts: acceptance of request, accepting suggestion, agree to implement suggestion, accepting the suggestion  
Relationship: All concepts revolve around the designer's agreement to incorporate user suggestions.  
Criteria: The designer agrees to implement user suggestions in future updates.  
Phrase: Accept user suggestions.

10.  
Concepts: promise to improve, designer acknowledgment  
Relationship: Both concepts emphasize the designer's commitment to improvement based on user support.  
Criteria: The designer expresses gratitude and commits to future improvements.  
Phrase: Acknowledge and promise improvement.

11.  
Concepts: respond to user feedback, align with user feedback  
Relationship: Both concepts focus on the designer's response to user feedback for software improvement.  
Criteria: The designer acknowledges and aligns actions with user feedback.  
Phrase: Respond to user feedback.

12.  
Concepts: confirmation, agreement, confirm understanding  
Relationship: All concepts relate to mutual understanding and agreement in discussions.  
Criteria: Users and designers confirm understanding and agreement during discussions.  
Phrase: Confirm mutual understanding.

13.  
Concepts: seek consensus, confirmation/agreement of collaboration  
Relationship: Both concepts involve the designer's efforts to achieve agreement on proposed ideas.  
Criteria: The designer seeks consensus and confirms the need for collaboration.  
Phrase: Seek consensus for collaboration.

14.  
Concepts: acknowledge feedback, acknowledge user experience, acknowledge understanding  
Relationship: All concepts focus on the designer's recognition of user feedback and experiences.  
Criteria: The designer acknowledges user feedback and validates their concerns.  
Phrase: Acknowledge user feedback.

15.  
Concepts: affirm user's point, acknowledge designer's point  
Relationship: Both concepts emphasize mutual acknowledgment during discussions.  
Criteria: The designer and user acknowledge each other's points in discussions.  
Phrase: Affirm mutual points.

16.  
Concepts: seeking input, gather user feedback, user experience feedback, user feedback request  
Relationship: All concepts emphasize the designer's active efforts to solicit user feedback.  
Criteria: Designers actively seek and request feedback from users to improve software.  
Phrase: Seek user feedback.

17.  
Concepts: gather user input, inquiring user input for future iterations  
Relationship: Both concepts focus on the designer's efforts to gather user input for future developments.  
Criteria: The designer seeks user input for specific technical aspects and future iterations.  
Phrase: Gather user input.

18.  
Concepts: seeking feedback, prompting user feedback  
Relationship: Both concepts involve the designer prompting users for their feedback.  
Criteria: The designer prompts users to provide feedback on desired features and improvements.  
Phrase: Prompt user feedback.

19.  
Concepts: encourage feedback, encouragement of user feedback, encouraging interaction, encouraging feedback  
Relationship: All concepts emphasize the designer's efforts to solicit and encourage user feedback.  
Criteria: The designer actively invites users to share suggestions for improvement.  
Phrase: Encourage user feedback.

20.  
Concepts: solicit suggestions, suggestions of interactions, elicit feedback, solicit suggestions and requirements  
Relationship: All concepts focus on the designer's efforts to gather user suggestions for enhancements.  
Criteria: The designer invites users to share suggestions and requirements for the software.  
Phrase: Solicit user suggestions.

21.  
Concepts: invite feedback, feature request invitation, feedback solicitation  
Relationship: All concepts involve the designer inviting user feedback and suggestions for features.  
Criteria: Designers invite users to provide feedback and suggest new features.  
Phrase: Invite user feedback.

22.  
Concepts: feedback, prioritize user feedback  
Relationship: Both concepts emphasize the importance of user feedback in the development process.  
Criteria: The designer indicates prioritization of features based on user feedback.  
Phrase: Prioritize user feedback.

23.  
Concepts: user input, plan for iterative feedback, opinion gathering  
Relationship: All concepts focus on gathering user opinions before proceeding with development.  
Criteria: The designer plans to gather user opinions before further development.  
Phrase: Plan for user input.

24.  
Concepts: taking feedback, plan future update, iterative development based on user feedback, reaction to feedback  
Relationship: All concepts emphasize the designer's response to user feedback in future updates.  
Criteria: A designer outlines plans for updates based on user feedback.  
Phrase: Plan updates from feedback.

25.  
Concepts: promise future consultation, announce future consultation  
Relationship: Both concepts emphasize the designer's commitment to consult the community before decisions.  
Criteria: The designer commits to consulting the community before significant decisions.  
Phrase: Promise future consultation.

26.  
Concepts: development transparency  
Relationship: N/A  
Criteria: Designers provide detailed information about development processes and progress.  
Phrase: Ensure development transparency.

27.  
Concepts: technical constraints  
Relationship: N/A  
Criteria: Instances where technical limitations or requirements are discussed.  
Phrase: Discuss technical constraints.

28.  
Concepts: promote community engagement  
Relationship: All concepts emphasize active participation and interaction within the community.  
Criteria: Instances where community members actively participate in discussions and feedback.  
Phrase: Promote community engagement.

29.  
Concepts: collaborative problem solving  
Relationship: Both concepts focus on joint efforts between designers and users to address issues.  
Criteria: Designers and users work together to solve issues and improve the product.  
Phrase: Engage in collaborative problem solving.
---