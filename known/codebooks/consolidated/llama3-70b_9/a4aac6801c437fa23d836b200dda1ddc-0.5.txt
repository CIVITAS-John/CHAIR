You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (18 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
18. 
Concepts: {Repeat the input 18}
Relationship: {What is logical relationship between concepts in code 18, or N/A if not applicable}
Criteria: {Who did what, and how for code 18}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: providing visual updates, sharing progress
- Designers share visual updates or previews.
- Designers share or highlight updates, progress, or milestones in the development process.

2.
Concepts: announce new features, announcing new versions and feature updates
- Designers highlight, explain, and announce new features.
- Designers announce new versions and feature updates, describing new features and components.

3.
Concepts: explaining updates and sharing enhancements, explaining existing design and features
- Designers explain updates and share enhancements.
- Designers explain existing design and clarify features and their explanations.

4.
Concepts: listing and planning updates, announcing development plans and update status
- A designer lists updates and plans for future updates.
- A designer announces development plans and confirms the status of updates.

5.
Concepts: updating users on changes and updates, updating users on app store status and software updates
- Designers update users on changes and updates.
- Designers update users on app store status and software updates.

6.
Concepts: sharing news and announcements, sharing updates through announcements
- Designers share news, make announcements, and update users on the software or community.
- Updates are shared with the community through announcements.

7.
Concepts: managing dependencies, allocating resources to prioritized tasks
- A designer manages dependencies or prioritizes tasks.
- Designers allocate resources to prioritized tasks, emphasizing categorization and prioritization.

8.
Concepts: shares timelines, describes timelines
- A designer shares a timeline or schedule for an update or release.
- A designer describes a timeline or roadmap for the software's development.

9.
Concepts: apologizing for delays, explaining delays and development delays
- A designer apologizes for delays or setbacks in the development process.
- Designers explain delays and development delays.

10.
Concepts: allow manual editing, acknowledging manual editing capabilities
- Designers allow or plan to allow manual editing of certain features or components.
- Designers acknowledge manual editing capabilities and manual adjustments.

11.
Concepts: proposing design ideas, proposing simulation features and new experiments
- A designer proposes a new idea or feature for the Physics Lab project.
- Designers propose simulation features, suggest new experiments, and propose new simulations.

12.
Concepts: outlining and promising future features, planning advanced features and detailing plans
- Designers outline and list features, promising future features.
- Designers plan advanced features, detail plans, and add details to experimental features.

13.
Concepts: stating and explaining focus areas, explaining design goals and software focus
- Designers state focus areas, explain them, and communicate development strategy.
- Designers explain design goals, principles, and software focus on specific physics domains.

14.
Concepts: sharing future plans and directions, sharing research directions and goals
- Designers open up plans and outline future directions.
- Designers share research directions and explain research goals.

15.
Concepts: exploring options and compatibility, exploring and considering design implications
- Designers explore options, consider compatibility, and future possibilities.
- The designer explores implications of design decisions, considering broader implications or applications.

16.
Concepts: engaging with the community
- A designer or user engages with the community by sharing updates, features, or news about the Physics Lab project.
- Users engage in community discussions and promote community engagement.

17.
Concepts: maintaining polite communication
- Users or designers show respect or politeness in their communication.
- Users express respect for experts and show deference.

18.
Concepts: gathering feedback
- Opinions or feedback are gathered or solicited from users, and designers respond to user feedback and adapt to user needs.
- Designers respond to feedback and provide community answers.
===
Here are the definitions for each code:

---
1.
Concepts: providing visual updates, sharing progress
Relationship: Visual updates and progress sharing are interrelated as they both provide insight into the development process.
Criteria: Designers share visual updates and progress to keep users informed.
Phrase: Share visual progress updates.

2.
Concepts: announce new features, announcing new versions and feature updates
Relationship: Announcing new features and versions are closely related as they both introduce new aspects of the software.
Criteria: Designers announce new features and versions to inform users of changes.
Phrase: Announce new features and versions.

3.
Concepts: explaining updates and sharing enhancements, explaining existing design and features
Relationship: Explaining updates and existing design are related as they both provide clarity on the software's functionality.
Criteria: Designers explain updates and existing design to clarify software functionality.
Phrase: Explain updates and design.

4.
Concepts: listing and planning updates, announcing development plans and update status
Relationship: Listing updates and planning are closely related as they both involve preparing for future changes.
Criteria: Designers list and plan updates to inform users of future changes.
Phrase: Plan and list updates.

5.
Concepts: updating users on changes and updates, updating users on app store status and software updates
Relationship: Updating users on changes and app store status are related as they both provide information on the software's availability.
Criteria: Designers update users on changes and app store status to keep them informed.
Phrase: Update users on changes and status.

6.
Concepts: sharing news and announcements, sharing updates through announcements
Relationship: Sharing news and announcements are closely related as they both involve disseminating information to users.
Criteria: Designers share news and announcements to keep users informed.
Phrase: Share news and announcements.

7.
Concepts: managing dependencies, allocating resources to prioritized tasks
Relationship: Managing dependencies and allocating resources are related as they both involve prioritizing tasks for efficient development.
Criteria: Designers manage dependencies and allocate resources to prioritize tasks.
Phrase: Manage dependencies and allocate resources.

8.
Concepts: shares timelines, describes timelines
Relationship: Sharing and describing timelines are closely related as they both provide insight into the development schedule.
Criteria: Designers share and describe timelines to inform users of the development schedule.
Phrase: Share and describe timelines.

9.
Concepts: apologizing for delays, explaining delays and development delays
Relationship: Apologizing for delays and explaining delays are related as they both involve acknowledging and clarifying development setbacks.
Criteria: Designers apologize for and explain delays to maintain transparency.
Phrase: Apologize for and explain delays.

10.
Concepts: allow manual editing, acknowledging manual editing capabilities
Relationship: Allowing and acknowledging manual editing are closely related as they both involve providing users with editing capabilities.
Criteria: Designers allow and acknowledge manual editing capabilities to empower users.
Phrase: Allow and acknowledge manual editing.

11.
Concepts: proposing design ideas, proposing simulation features and new experiments
Relationship: Proposing design ideas and simulation features are related as they both involve suggesting new aspects of the software.
Criteria: Designers propose design ideas and simulation features to innovate the software.
Phrase: Propose design ideas and features.

12.
Concepts: outlining and promising future features, planning advanced features and detailing plans
Relationship: Outlining and promising future features are closely related as they both involve planning for the software's future development.
Criteria: Designers outline and promise future features to inform users of upcoming changes.
Phrase: Outline and promise future features.

13.
Concepts: stating and explaining focus areas, explaining design goals and software focus
Relationship: Stating and explaining focus areas are related as they both involve clarifying the software's development strategy.
Criteria: Designers state and explain focus areas to clarify software goals.
Phrase: State and explain focus areas.

14.
Concepts: sharing future plans and directions, sharing research directions and goals
Relationship: Sharing future plans and research directions are related as they both involve providing insight into the software's future development.
Criteria: Designers share future plans and research directions to inform users of upcoming changes.
Phrase: Share future plans and directions.

15.
Concepts: exploring options and compatibility, exploring and considering design implications
Relationship: Exploring options and design implications are related as they both involve considering the broader implications of design decisions.
Criteria: Designers explore options and design implications to consider compatibility and future possibilities.
Phrase: Explore options and implications.

16.
Concepts: engaging with the community
Relationship: Engaging with the community involves sharing updates, features, or news about the Physics Lab project.
Criteria: Designers and users engage with the community to promote discussion and feedback.
Phrase: Engage with the community.

17.
Concepts: maintaining polite communication
Relationship: Maintaining polite communication involves showing respect and deference in communication.
Criteria: Users and designers maintain polite communication to promote respectful dialogue.
Phrase: Maintain polite communication.

18.
Concepts: gathering feedback
Relationship: Gathering feedback involves soliciting opinions and adapting to user needs.
Criteria: Designers gather feedback to respond to user needs and adapt the software.
Phrase: Gather and respond to feedback.