You are an expert in thematic analysis clarifying the criteria of qualitative codes. Do not attempt to merge codes now.
Consider provided quotes, and note that each quote is independent of others.
Write clear and generalizable criteria for each code and do not introduce unnecessary details.
If necessary, refine labels to be more accurate, but do not repeat yourself.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1. 
Criteria: {Who did what, and how for code 1}
Label: {A descriptive label of code 1}
...
32.
Criteria: {Who did what, and how for code 32}
Label: {A descriptive label of code 32}
---
~~~
1.
Label: explain version type
Quotes:
- Designer: The one in the group is the PC version

2.
Label: access
Quotes:
- Designer: Hello everyone~ The development plan and PC download address are in the group announcement.

3.
Label: gives reason for it
Quotes:
- User: If there could be an export function, or the ability to save or import experiments, it would be convenient. We could set up the parameters in the office and directly import them in class.

4.
Label: agree with focus areas
Quotes:
- User: Indeed

5.
Label: respond
Quotes:
- Designer: It seems that local export needs to be supported.
- Designer: You can download Windows in the group files.
- Designer: It does not support the XP system.
- Designer: [Image] Updates in preparation
- Designer: Group sharing.

6.
Label: consider technical requirements
Quotes:
- Designer: Does the class have internet?

7.
Label: express anticipation
Quotes:
- User: Will there be an update this week? [Emoji]

8.
Label: pc version inquiries
Quotes:
- User: How do you use the PC version?
- User: PC version?

9.
Label: acknowledge provided resources
Quotes:
- User: I saw the group files, thank you.

10.
Label: consider usability
Quotes:
- User: But it's better to use the right side for non-crossing

11.
Label: sharing identity per request
Quotes:
- User: I taught high school for seven years, and now I've been teaching middle school for eight years.

12.
Label: reaction to feedback
Quotes:
- Designer: Hmm... I'll add it in the next update. PC updates are usually the fastest, so there will probably be another round this weekend.
- Designer: Hmm... We will probably prioritize completing the electrical section first, then magnetism, and then other parts.

13.
Label: designer engagement
Quotes:
- Designer: I myself have some interest in chemistry
- Designer: Hmm hmm.

14.
Label: student
Quotes:
- User: [Emoji]

15.
Label: detail simulated experiment assessment
Quotes:
- Designer: For electricity, we plan to create a function for simulated experiment assessment; it will add many experimental details, such as zero adjustment (of course, only useful in specific modes, otherwise it would be cumbersome to use regularly)

16.
Label: confirm common style
Quotes:
- User: Yes, the common one is still the old style

17.
Label: user need
Quotes:
- User: Mainly, the school is building an information-based school
- User: Need the user manual for this software

18.
Label: compare with other software
Quotes:
- User: This software is great! It's quite practical, unlike some software that tries to be comprehensive but ends up being inconvenient to use.

19.
Label: interface layout decisions
Quotes:
- User: But it's better to use the right side for non-crossing
- Designer: Uh... left side or right side
- User: Left side

20.
Label: transparent developer discussion*
Quotes:
- Designer: Last time I tried it in middle school, there's a trick where you click the link button in the top right, and when the browser pops up, it's no longer full screen... = =
- Designer: Speaking of which, doesn't that mean every place where numbers are input should have a soft keyboard?
- Designer: But you can't bring it up without touching the input, that's probably the case.
- Designer: Touch screens have their own on-screen keyboards.

21.
Label: community answer
Quotes:
- Designer: It does not support the XP system.

22.
Label: follow-up on design information
Quotes:
- User: Most schools will disable the network on classroom computers to prevent students from going online or to avoid various software auto-downloads from slowing down the computers.

23.
Label: plan future update
Quotes:
- Designer: Hmm... I'll add it in the next update. PC updates are usually the fastest, so there will probably be another round this weekend.

24.
Label: network policy
Quotes:
- User: Most schools will disable the network on classroom computers to prevent students from going online or to avoid various software auto-downloads from slowing down the computers.

25.
Label: asking for future help
Quotes:
- Designer: When we are ready to start, we will consult everyone in the group

26.
Label: clarify preference
Quotes:
- User: Left side

27.
Label: inquire about user's background
Quotes:
- Designer: Haha. Are you a middle school or high school teacher?

28.
Label: describe students'positive responses in class
Quotes:
- User: The simulation effect of this software is really good. When I used it in class yesterday, the students were amazed.

29.
Label: express need for documentation
Quotes:
- User: Is there a user manual?

30.
Label: long term planning
Quotes:
- Designer: This belongs to the kind of feature that, once done, will ensure long-term stability... Adding various components is actually simpler

31.
Label: community response
Quotes:
- User: Generally not. Ever since an adult image popped up during a major city-level open class, the school has disabled the network on classroom computers [Emoji].
- User: Okay, okay~ Thank you for your hard work.

32.
Label: share the magnitude of update
Quotes:
- Designer: The update is quite large...
===
Here are the definitions for each code:

---
1. 
Criteria: The code explains the type of version being referred to in the conversation.
Label: Version Type Explanation

2. 
Criteria: The code provides access to resources, such as download links or announcements.
Label: Resource Access

3. 
Criteria: The code gives a reason or justification for a particular feature or functionality.
Label: Reasoning for Feature

4. 
Criteria: The code expresses agreement or confirmation with a previous statement or idea.
Label: Agreement

5. 
Criteria: The code responds to a question, comment, or concern raised by another user.
Label: Response

6. 
Criteria: The code considers or inquires about technical requirements or limitations.
Label: Technical Considerations

7. 
Criteria: The code expresses anticipation or expectation for a future update or feature.
Label: Anticipation

8. 
Criteria: The code inquires about the PC version of the software or its usage.
Label: PC Version Inquiry

9. 
Criteria: The code acknowledges or expresses gratitude for resources provided.
Label: Resource Acknowledgement

10. 
Criteria: The code considers or suggests improvements to the usability of the software.
Label: Usability Feedback

11. 
Criteria: The code shares information about the user's identity or background upon request.
Label: Identity Sharing

12. 
Criteria: The code reacts to feedback or suggestions by acknowledging or addressing them.
Label: Feedback Response

13. 
Criteria: The code shows the designer's engagement or interest in a particular topic.
Label: Designer Engagement

14. 
Criteria: The code is a student's response or comment, often indicated by an emoji.
Label: Student Response

15. 
Criteria: The code details or explains the assessment of simulated experiments.
Label: Simulated Experiment Assessment

16. 
Criteria: The code confirms or agrees upon a common style or approach.
Label: Style Confirmation

17. 
Criteria: The code expresses a need or requirement for a particular feature or functionality.
Label: User Need

18. 
Criteria: The code compares the software with other similar software.
Label: Software Comparison

19. 
Criteria: The code discusses or decides on the layout or design of the interface.
Label: Interface Layout

20. 
Criteria: The code involves transparent discussion among developers about design decisions or issues.
Label: Transparent Developer Discussion

21. 
Criteria: The code provides an answer or solution to a question or problem raised by another user.
Label: Community Answer

22. 
Criteria: The code follows up on design information or provides additional context.
Label: Design Follow-up

23. 
Criteria: The code plans or discusses future updates or features.
Label: Future Update Planning

24. 
Criteria: The code discusses or explains network policies or restrictions.
Label: Network Policy

25. 
Criteria: The code asks for future help or assistance from the community.
Label: Future Help Request

26. 
Criteria: The code clarifies or confirms a preference for a particular option or feature.
Label: Preference Clarification

27. 
Criteria: The code inquires about the user's background or identity.
Label: User Background Inquiry

28. 
Criteria: The code describes students' positive responses or reactions to the software in class.
Label: Student Response Description

29. 
Criteria: The code expresses a need for documentation or user manuals.
Label: Documentation Need

30. 
Criteria: The code discusses or plans for long-term goals or features.
Label: Long-term Planning

31. 
Criteria: The code responds to or engages with the community, often with a positive tone.
Label: Community Response

32. 
Criteria: The code shares information about the magnitude or scope of an update.
Label: Update Magnitude