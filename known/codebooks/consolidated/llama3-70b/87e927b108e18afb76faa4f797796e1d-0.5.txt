You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (22 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
22. 
Concepts: {Repeat the input 22}
Relationship: {What is logical relationship between concepts in code 22, or N/A if not applicable}
Criteria: {Who did what, and how for code 22}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: developer announcement, development plan announcement
- Making announcements or updates about the developer's plans or progress.
- Informing about development plans, resources, or announcements

2.
Concepts: clarifying update details, providing detailed update information
- The designer clarifies details about a specific update or feature.
- Designer provides detailed information about specific updates or features.

3.
Concepts: clarifying user needs and understanding, building and facilitating user understanding
- Designers clarify user needs and understanding.
- Designers build and facilitate user understanding.

4.
Concepts: illustrating technical points, providing technical explanations
- A designer illustrates technical points or concepts with an example.
- Designers provide technical or theoretical explanations for features or concepts.

5.
Concepts: providing examples, detailing features and providing examples
- Designers provide examples or visual aids to illustrate concepts or ideas.
- Designers detail features and provide examples.

6.
Concepts: outlining future plans, illustrating development goals
- The designer outlines future plans or updates for Physics Lab.
- The designer shares long-term goals or objectives for the development of Physics Lab.

7.
Concepts: highlight limitations, explain limitations
- Users or designers highlight limitations or constraints.
- Designers address, explain, or describe limitations of the software, system, or design.

8.
Concepts: sharing solutions, exploring technical solutions
- Designers share solutions or workarounds to technical issues.
- Designers explore technical solutions or workarounds to technical issues.

9.
Concepts: seeking user input, gathering user feedback
- Designers seek user input and suggestions to inform design decisions.
- Designers inquire about user experiences and gather feedback to inform design decisions.

10.
Concepts: requesting feedback, mentioning feedback-based prompts
- The designer explicitly asks users for feedback or suggestions.
- A designer mentions feedback-based prompts or instructions.

11.
Concepts: acknowledges feedback, responding to feedback
- Designer acknowledges and responds to user feedback and suggestions.
- Designers consider and respond to user requests, incorporating user feedback into design decisions.
- Designers accept and respond to user feedback, demonstrating responsiveness to user input.

12.
Concepts: design dialogue, engaging in conversation
- Users engage in a dialogue or discussion about design or development.
- Designers initiate or participate in conversations with users or moderators.

13.
Concepts: sharing teacher experiences, share teaching experience
- User shares their experience as a teacher, providing context for Physics Lab.
- A user shares their teaching experience or background, providing context for their needs.

14.
Concepts: offer assistance, offering ongoing support
- The designer offers assistance or support to users.
- Designer offers ongoing support or assistance to users.

15.
Concepts: seek help, engaging with the community for assistance
- Users request help or assistance from others.
- User seeks assistance or help from the community.

16.
Concepts: apologizing for imperfections, apologizing for inconvenience
- Designer apologizes for imperfections or limitations
- Designers apologize for inconvenience or disturbance.

17.
Concepts: validate ideas, concurs on design ideas
- User validates and agrees with designer ideas or plans.
- User concurs and supports design ideas and decisions.

18.
Concepts: appreciates effort, encouraging designers
- User appreciates and acknowledges the designer's efforts.
- A user encourages and appreciates the designers' work.

19.
Concepts: gives a compliment, praises usability
- User compliments the app's design or features.
- User praises the software, its functionality, or user experience, and expresses satisfaction or approval.

20.
Concepts: promise future features, promise a future perfection of a feature
- Designer promises or assures future features or updates.
- Assuring that a feature or functionality will be available in the future

21.
Concepts: seeking collective input, seeking consensus
- Designer seeks opinions or suggestions from the group
- The designer seeks consensus or agreement from users on a specific topic or design decision.

22.
Concepts: initiate conversation, establishing connection
- User initiates a conversation or asks a question, establishing a social connection.
- A user initiates or responds to a conversation, indicating a connection with others in the online community.
===
Here are the definitions for each code:

---
1.
Concepts: developer announcement, development plan announcement
Relationship: The two concepts are closely related as they both involve sharing information about the development process.
Criteria: Designers share information about their plans or progress.
Phrase: Announcing development plans

2.
Concepts: clarifying update details, providing detailed update information
Relationship: The two concepts are complementary, as clarifying details requires providing detailed information.
Criteria: Designers provide clear and detailed information about updates.
Phrase: Clarifying update details

3.
Concepts: clarifying user needs and understanding, building and facilitating user understanding
Relationship: The two concepts are interconnected, as clarifying user needs helps build and facilitate understanding.
Criteria: Designers clarify and facilitate user understanding of their needs.
Phrase: Facilitating user understanding

4.
Concepts: illustrating technical points, providing technical explanations
Relationship: The two concepts are closely related, as illustrating technical points involves providing explanations.
Criteria: Designers provide clear and detailed technical explanations.
Phrase: Illustrating technical points

5.
Concepts: providing examples, detailing features and providing examples
Relationship: The two concepts are complementary, as providing examples helps detail features.
Criteria: Designers provide examples to illustrate concepts or features.
Phrase: Providing examples

6.
Concepts: outlining future plans, illustrating development goals
Relationship: The two concepts are closely related, as outlining future plans involves illustrating development goals.
Criteria: Designers share their long-term goals and objectives.
Phrase: Outlining future plans

7.
Concepts: highlight limitations, explain limitations
Relationship: The two concepts are complementary, as highlighting limitations requires explaining them.
Criteria: Designers acknowledge and explain limitations.
Phrase: Explaining limitations

8.
Concepts: sharing solutions, exploring technical solutions
Relationship: The two concepts are interconnected, as sharing solutions involves exploring technical solutions.
Criteria: Designers explore and share solutions to technical issues.
Phrase: Sharing solutions

9.
Concepts: seeking user input, gathering user feedback
Relationship: The two concepts are closely related, as seeking user input involves gathering feedback.
Criteria: Designers seek and gather user input and feedback.
Phrase: Seeking user input

10.
Concepts: requesting feedback, mentioning feedback-based prompts
Relationship: The two concepts are complementary, as requesting feedback involves mentioning prompts.
Criteria: Designers request and mention feedback-based prompts.
Phrase: Requesting feedback

11.
Concepts: acknowledges feedback, responding to feedback
Relationship: The two concepts are interconnected, as acknowledging feedback involves responding to it.
Criteria: Designers acknowledge and respond to user feedback.
Phrase: Responding to feedback

12.
Concepts: design dialogue, engaging in conversation
Relationship: The two concepts are closely related, as design dialogue involves engaging in conversation.
Criteria: Users and designers engage in conversations about design.
Phrase: Engaging in conversation

13.
Concepts: sharing teacher experiences, share teaching experience
Relationship: The two concepts are identical, as sharing teacher experiences involves sharing teaching experience.
Criteria: Users share their teaching experience and background.
Phrase: Sharing teaching experience

14.
Concepts: offer assistance, offering ongoing support
Relationship: The two concepts are closely related, as offering assistance involves providing ongoing support.
Criteria: Designers offer ongoing support and assistance.
Phrase: Offering assistance

15.
Concepts: seek help, engaging with the community for assistance
Relationship: The two concepts are complementary, as seeking help involves engaging with the community.
Criteria: Users seek help and assistance from the community.
Phrase: Seeking help

16.
Concepts: apologizing for imperfections, apologizing for inconvenience
Relationship: The two concepts are closely related, as apologizing for imperfections involves apologizing for inconvenience.
Criteria: Designers apologize for imperfections and inconvenience.
Phrase: Apologizing for imperfections

17.
Concepts: validate ideas, concurs on design ideas
Relationship: The two concepts are closely related, as validating ideas involves concurring on design ideas.
Criteria: Users validate and concur with design ideas.
Phrase: Validating ideas

18.
Concepts: appreciates effort, encouraging designers
Relationship: The two concepts are closely related, as appreciating effort involves encouraging designers.
Criteria: Users appreciate and encourage designers' efforts.
Phrase: Appreciating effort

19.
Concepts: gives a compliment, praises usability
Relationship: The two concepts are closely related, as giving a compliment involves praising usability.
Criteria: Users compliment and praise the software's design and features.
Phrase: Giving compliments

20.
Concepts: promise future features, promise a future perfection of a feature
Relationship: The two concepts are closely related, as promising future features involves promising future perfection.
Criteria: Designers promise future features and updates.
Phrase: Promising future features

21.
Concepts: seeking collective input, seeking consensus
Relationship: The two concepts are closely related, as seeking collective input involves seeking consensus.
Criteria: Designers seek collective input and consensus.
Phrase: Seeking collective input

22.
Concepts: initiate conversation, establishing connection
Relationship: The two concepts are interconnected, as initiating conversation involves establishing a connection.
Criteria: Users initiate conversations and establish connections.
Phrase: Initiating conversation