You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: defining an initial task, setting up initial parameters
- Participants define an initial task for AI.
- Participants set up initial parameters and use AI for basic commands.

2.
Concepts: human-ai collaboration (emphasis), emphasizes human judgment and augmentation
- Emphasizes the importance of human-AI collaboration rather than replacement.
- Participants value human judgment and augmentation in AI-assisted work.

3.
Concepts: valuing clear ai communication, valuing accessible language and clear explanations
- Participants value clear and comprehensible AI communication and responses.
- Participants value simple and understandable explanations, preferring clear and concise language.

4.
Concepts: prioritize code quality, prioritizing code readability and simplicity
- Participants prioritize maintaining control over code quality and emphasize the importance of clear and accessible code.
- Participants prefer or value simple, maintainable code over complex or tricky code, prioritizing code readability and simplicity.

5.
Concepts: faces time constraints, relies on ai for quick solutions
- Participants face time constraints and constraints in AI usage.
- Participants rely on AI for quick solutions and adapt to time constraints.

6.
Concepts: critiques limited ai options, finds explanation options insufficient and is frustrated with ai limitations
- Participants critique limited AI options and response options.
- Participants express dissatisfaction with limited options provided by AI interfaces and frustration with AI limitations.

7.
Concepts: deals with legacy code issues, adapts to outdated functionality
- Participants deal with legacy code issues and notice legacy functionality.
- Participants adapt to outdated functionality in AI-generated code.

8.
Concepts: identifying a key challenge in working with ai, seeks ai support for complex concepts like scope
- Participants identify a key challenge in working with AI and highlight the need for explicit problem conceptualization.
- Participants identify scope as a challenge and seek AI support, recognizing the need for AI support in complex concepts.

9.
Concepts: highlights learning needs, shares debugging experiences
- Participants highlight learning needs and emphasize debugging practice.
- Participants share debugging experiences and describe lack of debugging skills.

10.
Concepts: critiques lazy inquiries and help-seeking, emphasize proper help request etiquette
- Participants critique lazy queries and improper practices when seeking online help.
- Participants critique improper help requests and emphasize the importance of polite and gracious requests.

11.
Concepts: seeking ai assistance, seeking ai help with troubleshooting
- Participants seek AI assistance by referring to error messages.
- The expert seeks AI help with troubleshooting, copying and pasting error messages for assistance.

12.
Concepts: critiques error messages, describes unhelpful feedback, describes resulting errors
- Participants critique error messages and highlight error reporting needs.
- Participants describe unhelpful feedback, critiquing NetLogo's error messages.
- Participants describe resulting errors and express frustration.
===
Here are the definitions for each code:

---
1.
Concepts: defining an initial task, setting up initial parameters
Relationship: Setting up initial parameters is a necessary step in defining an initial task for AI.
Criteria: Participants define an initial task and set up initial parameters for AI-assisted work.
Phrase: Define and set up initial tasks.

2.
Concepts: human-ai collaboration (emphasis), emphasizes human judgment and augmentation
Relationship: Human-AI collaboration is essential for effective judgment and augmentation.
Criteria: Participants value human-AI collaboration and emphasize human judgment and augmentation in AI-assisted work.
Phrase: Emphasize human-AI collaboration.

3.
Concepts: valuing clear ai communication, valuing accessible language and clear explanations
Relationship: Clear AI communication and accessible language are necessary for clear explanations.
Criteria: Participants value clear AI communication and accessible language for understandable explanations.
Phrase: Value clear AI communication.

4.
Concepts: prioritize code quality, prioritizing code readability and simplicity
Relationship: Prioritizing code readability and simplicity is essential for maintaining code quality.
Criteria: Participants prioritize code quality by valuing readability and simplicity.
Phrase: Prioritize code quality.

5.
Concepts: faces time constraints, relies on ai for quick solutions
Relationship: Time constraints lead to reliance on AI for quick solutions.
Criteria: Participants face time constraints and rely on AI for quick solutions.
Phrase: Rely on AI for quick solutions.

6.
Concepts: critiques limited ai options, finds explanation options insufficient and is frustrated with ai limitations
Relationship: Limited AI options lead to frustration with AI limitations.
Criteria: Participants critique limited AI options and express frustration with AI limitations.
Phrase: Critique AI limitations.

7.
Concepts: deals with legacy code issues, adapts to outdated functionality
Relationship: Dealing with legacy code issues requires adapting to outdated functionality.
Criteria: Participants deal with legacy code issues and adapt to outdated functionality.
Phrase: Adapt to legacy code issues.

8.
Concepts: identifying a key challenge in working with ai, seeks ai support for complex concepts like scope
Relationship: Identifying key challenges leads to seeking AI support for complex concepts.
Criteria: Participants identify key challenges and seek AI support for complex concepts like scope.
Phrase: Seek AI support for complex concepts.

9.
Concepts: highlights learning needs, shares debugging experiences
Relationship: Sharing debugging experiences highlights learning needs.
Criteria: Participants highlight learning needs and share debugging experiences.
Phrase: Share debugging experiences.

10.
Concepts: critiques lazy inquiries and help-seeking, emphasize proper help request etiquette
Relationship: Critiquing lazy inquiries emphasizes the importance of proper help request etiquette.
Criteria: Participants critique lazy inquiries and emphasize proper help request etiquette.
Phrase: Emphasize proper help request etiquette.

11.
Concepts: seeking ai assistance, seeking ai help with troubleshooting
Relationship: Seeking AI assistance is necessary for troubleshooting.
Criteria: Participants seek AI assistance for troubleshooting and error resolution.
Phrase: Seek AI assistance for troubleshooting.

12.
Concepts: critiques error messages, describes unhelpful feedback, describes resulting errors
Relationship: Critiquing error messages leads to describing unhelpful feedback and resulting errors.
Criteria: Participants critique error messages, describe unhelpful feedback, and express frustration with resulting errors.
Phrase: Critique error messages and feedback.