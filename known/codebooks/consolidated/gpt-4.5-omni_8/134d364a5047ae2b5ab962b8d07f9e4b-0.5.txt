You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (53 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
53. 
Concepts: {Repeat the input 53}
Relationship: {What is logical relationship between concepts in code 53, or N/A if not applicable}
Criteria: {Who did what, and how for code 53}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: accepting user suggestions, inviting user suggestions
- Designers accept user suggestions and confirm future implementation.
- Designers seek input and invite suggestions for new features and design improvements.

2.
Concepts: encouraging detailed feedback, requesting and providing specific feedback
- Designers encourage users to provide detailed feedback and respond in detail.
- Users provide specific feedback, or designers request detailed feedback.

3.
Concepts: seeking user context, inquiring about user needs
- Designers ask for more information to understand user context better.
- Designers ask questions to identify user needs and specific issues.

4.
Concepts: user guidance, providing feature guidance
- A designer provides guidance on using features and compatibility.
- Designers provide guidance and instructions on using features.

5.
Concepts: sharing workarounds, providing usability workarounds
- Designers share workarounds or tricks based on personal experience.
- Designers offer workarounds to improve usability.

6.
Concepts: offering solutions, suggesting compatibility solutions
- Designers offer and share potential solutions to user problems.
- Designers consider and suggest solutions for compatibility issues.

7.
Concepts: address user concerns, seeking consensus or compromise
- Designers provide responses to address and mitigate user concerns.
- Designers seek agreement or propose compromises to address user concerns.

8.
Concepts: suggesting usability features, suggesting feature simplifications
- Designers suggest broader usability features for the software.
- Designers suggest or implement simplifications.

9.
Concepts: providing component details, explaining component capabilities
- Designers describe functionality, provide examples, and technical details of components.
- Designers explain new component capabilities and simulation features.

10.
Concepts: teaching, providing technical clarification
- A designer provides instructions or clarifications for teaching purposes.
- Designers provide technical clarification or explanations.

11.
Concepts: explaining design goals, explaining design rationale
- Designers explain the goals and intentions of the app design.
- Designers explain the development process, principles, and rationale behind design decisions.

12.
Concepts: explaining question intention, explain reason for feedback gathering
- Designers explain the intention behind their questions or follow-up inquiries.
- The designer explains the reason behind gathering opinions or feedback.

13.
Concepts: elaborating on suggestions, reflect on past experiences
- Designers elaborate on past experiences or suggestions.
- Designers reference past experiences to explain current situations.

14.
Concepts: listing update details, providing version details
- Designers provide detailed notes listing features and bug fixes.
- Designers provide information and details about software versions.

15.
Concepts: announcing new features, announcing and introducing new features
- Developers announce and describe new features and updates.
- Designers describe and introduce new features or updates, and announce them to the community.

16.
Concepts: communicating ongoing optimizations, communicate new features and improvements
- Designers mention and communicate ongoing optimizations.
- Communicating new features, improvements, and future updates.

17.
Concepts: announcing future updates, announcing plans and gathering feedback
- Designers announce and confirm upcoming updates.
- Designers announce plans for future updates and solicit user input.

18.
Concepts: providing product updates, communicate updates to users
- Designers provide information about product updates or technical changes.
- Designers communicate updates, release schedules, or new features to users.

19.
Concepts: progress update, development update
- Providing updates on the progress or status of the software.
- Information shared by designers about the current status, updates, and future plans for the Physics Lab software.

20.
Concepts: committing to future updates, committing to product improvements
- Designers take feedback and commit to including features in future updates.
- Designers discuss and commit to improving the product.

21.
Concepts: prioritizing development tasks, collaboratively planning development
- Designers and users discuss priorities and decisions in the development process.
- Designers and users collaboratively discuss and plan software development.

22.
Concepts: discussing feature development, planning feature implementation
- Participants discuss the design and development of features.
- Designers discuss planning for future updates and feature implementation.

23.
Concepts: considering design and usability, discussing instructional design
- Designers share thoughts on design and usability.
- Designers discuss instructional design principles and input methods.

24.
Concepts: confirming future plans, discussing future project plans, explaining future plans
- Designers detail and confirm planned future features.
- Designers discuss plans for future project stages and gather opinions.
- Designers discuss and explain plans or potential future actions.

25.
Concepts: share update timelines, outlining feature roadmap
- Designers provide and share the timeline for upcoming updates.
- Designers outline the timeline and roadmap for feature completion.

26.
Concepts: expressing development interest, appreciating development progress
- Users express interest in development progress or specific features.
- Users express appreciation for development progress or specific ideas.

27.
Concepts: update preview, previewing upcoming features
- Providing a preview of upcoming updates.
- Designers preview and list upcoming features.

28.
Concepts: promising future features, ongoing update promise
- Designers promise to implement features at a later time.
- Instances where the designer promises that updates are ongoing or in preparation.

29.
Concepts: emphasizing user needs, enhancing user experience
- Designers emphasize and align updates with user needs.
- Designers consider and describe usability features.

30.
Concepts: expressing support and gratitude, showing appreciation for support
- Instances where support, gratitude, and encouragement are expressed.
- Users show appreciation for help or support, particularly from teachers.

31.
Concepts: expressive communication, expressing reactions using emojis
- Users and designers use expressive language or emojis.
- Users convey sentiment or emotion through emojis or brief text.

32.
Concepts: use of special characters, using humor and informal tone
- Users use special characters or informal language to convey their messages.
- Users use humor and an informal tone in their communication.

33.
Concepts: reciprocate greeting, engaging in positive interactions
- Users respond to a greeting.
- Users respond positively to statements or engage in positive interactions.

34.
Concepts: community feedback, expressing community needs
- Users providing feedback and suggestions to improve the product.
- Users express the community's needs for specific features or functionalities.

35.
Concepts: requesting community input, encouraging community participation
- Designers request suggestions or future assistance from the community.
- Designers encourage community involvement and interaction by updating features and soliciting input.

36.
Concepts: community involvement, engaging community in design
- Involving the community in the development process by seeking feedback and suggestions.
- Designers seek community input or consultation before starting new projects.

37.
Concepts: offer co-designing, engage community member
- The designer offers to involve the community in co-designing features.
- A designer engages a community member for assistance.

38.
Concepts: identify as teacher, stating teaching experience
- Users identify themselves as teachers.
- Users mention their teaching experience in high school or middle school.

39.
Concepts: sharing resources and information, sharing and retrieving community resources
- Users or designers share resources, such as files or links, with the community.
- Users request or retrieve information and resources from the community.

40.
Concepts: accepting and agreeing with suggestions, agreeing and acknowledging design ideas
- Users or designers accept or agree with suggestions made by others.
- Users or designers agree with design ideas and acknowledge understanding.

41.
Concepts: providing confirmation, confirming or seconding responses
- Users or designers confirm or acknowledge a statement or suggestion.
- Users confirm or agree with previous statements or responses.

42.
Concepts: follow-up on design information, conducting follow-up inquiries
- Users provide additional context or follow up on previous design information.
- Participants ask follow-up questions to clarify user requests or understand needs.

43.
Concepts: additional reasoning, providing context and elaboration
- Users offer additional reasons or perspectives in response to a developer's question.
- Users provide context or additional information to elaborate on a question or conversation.

44.
Concepts: information seeking, asking technical questions
- Users asking questions to gain knowledge or resources related to the software.
- Users ask technical questions about the software and platform.

45.
Concepts: inquire about software access, inquiring about updates
- Users inquire about downloading or accessing the software.
- Users inquire about the status or availability of software updates and platform versions.

46.
Concepts: ask for download instructions, providing download instructions
- Asking for instructions on how to download something.
- Designers give instructions and solutions for downloading the software.

47.
Concepts: educational tools, requesting educational features
- Users request or discuss specific features and tools for educational purposes in the software.
- Users request specific features for educational purposes.

48.
Concepts: describing usage scenarios, user experience in educational contexts
- Users describe scenarios and contexts in which they use the software, particularly in educational settings.
- User experiences and challenges in using the software within educational settings.

49.
Concepts: compare with other applications, discussing software effectiveness and usability
- Users compare the software with other similar software, pointing out practical differences.
- Users discuss the software's effectiveness and usability.

50.
Concepts: confirming compatibility, discussing system compatibility
- Designers ensure and confirm software compatibility with systems.
- Designers discuss system requirements and compatibility.

51.
Concepts: acknowledging limitations, explaining solution limitations
- Designers acknowledge potential issues or limitations in usability.
- Designers explain why certain problems cannot be solved due to system limitations.

52.
Concepts: discussing platform limitations, discussing and addressing technical constraints
- Designers discuss constraints and limitations of the platform.
- Users discuss, and designers address, the software's technical limitations.

53.
Concepts: praising software features
- Users express positive opinions and satisfaction by praising or complimenting specific features and the software's quality.
- Users express approval or provide positive feedback about ideas or features.
===
---
Definitions for each code (53 in total):
1.
Concepts: accepting user suggestions, inviting user suggestions
Relationship: Sequential actions where designers first invite and then accept suggestions.
Criteria: Designers seek and accept user suggestions for new features and design improvements.
Phrase: Inviting and accepting user suggestions

2.
Concepts: encouraging detailed feedback, requesting and providing specific feedback
Relationship: Designers encourage and request feedback, and users provide it.
Criteria: Designers encourage and request detailed feedback, and users provide specific responses.
Phrase: Encouraging and requesting detailed feedback

3.
Concepts: seeking user context, inquiring about user needs
Relationship: Sequential actions where designers first seek context and then inquire about needs.
Criteria: Designers ask for information to understand user context and identify needs.
Phrase: Seeking user context and needs

4.
Concepts: user guidance, providing feature guidance
Relationship: Overlapping actions where designers provide general and feature-specific guidance.
Criteria: Designers provide guidance and instructions on using features.
Phrase: Providing user and feature guidance

5.
Concepts: sharing workarounds, providing usability workarounds
Relationship: Synonymous actions where designers share usability workarounds.
Criteria: Designers offer workarounds to improve usability.
Phrase: Providing usability workarounds

6.
Concepts: offering solutions, suggesting compatibility solutions
Relationship: Overlapping actions where designers offer solutions, including for compatibility.
Criteria: Designers offer and suggest potential solutions to user problems, including compatibility issues.
Phrase: Offering and suggesting solutions

7.
Concepts: address user concerns, seeking consensus or compromise
Relationship: Sequential actions where designers address concerns and seek consensus.
Criteria: Designers address user concerns and seek agreement or propose compromises.
Phrase: Addressing concerns and seeking consensus

8.
Concepts: suggesting usability features, suggesting feature simplifications
Relationship: Overlapping actions where designers suggest usability improvements and simplifications.
Criteria: Designers suggest usability features and simplifications.
Phrase: Suggesting usability features and simplifications

9.
Concepts: providing component details, explaining component capabilities
Relationship: Overlapping actions where designers provide details and explanations of components.
Criteria: Designers describe and explain component capabilities and features.
Phrase: Explaining component details and capabilities

10.
Concepts: teaching, providing technical clarification
Relationship: Overlapping actions where designers teach and provide technical clarifications.
Criteria: Designers provide instructions and technical clarifications for teaching purposes.
Phrase: Teaching and providing technical clarification

11.
Concepts: explaining design goals, explaining design rationale
Relationship: Overlapping actions where designers explain goals and rationale.
Criteria: Designers explain the goals, development process, and rationale behind design decisions.
Phrase: Explaining design goals and rationale

12.
Concepts: explaining question intention, explain reason for feedback gathering
Relationship: Overlapping actions where designers explain intentions behind questions and feedback gathering.
Criteria: Designers explain the intention behind their questions and the reason for gathering feedback.
Phrase: Explaining question intentions and feedback reasons

13.
Concepts: elaborating on suggestions, reflect on past experiences
Relationship: Overlapping actions where designers elaborate on suggestions and reflect on past experiences.
Criteria: Designers elaborate on suggestions and reference past experiences.
Phrase: Elaborating on suggestions and past experiences

14.
Concepts: listing update details, providing version details
Relationship: Overlapping actions where designers list update and version details.
Criteria: Designers provide detailed notes on features, bug fixes, and software versions.
Phrase: Listing update and version details

15.
Concepts: announcing new features, announcing and introducing new features
Relationship: Overlapping actions where designers announce and introduce new features.
Criteria: Designers announce and describe new features and updates to the community.
Phrase: Announcing and introducing new features

16.
Concepts: communicating ongoing optimizations, communicate new features and improvements
Relationship: Overlapping actions where designers communicate optimizations and new features.
Criteria: Designers communicate ongoing optimizations, new features, and improvements.
Phrase: Communicating optimizations and new features

17.
Concepts: announcing future updates, announcing plans and gathering feedback
Relationship: Sequential actions where designers announce updates and gather feedback.
Criteria: Designers announce upcoming updates and solicit user input.
Phrase: Announcing updates and gathering feedback

18.
Concepts: providing product updates, communicate updates to users
Relationship: Synonymous actions where designers provide and communicate updates.
Criteria: Designers provide and communicate product updates and technical changes to users.
Phrase: Communicating product updates

19.
Concepts: progress update, development update
Relationship: Synonymous actions where designers provide progress and development updates.
Criteria: Designers provide updates on the progress and status of the software.
Phrase: Providing progress and development updates

20.
Concepts: committing to future updates, committing to product improvements
Relationship: Overlapping actions where designers commit to updates and improvements.
Criteria: Designers commit to including features in future updates and improving the product.
Phrase: Committing to updates and improvements

21.
Concepts: prioritizing development tasks, collaboratively planning development
Relationship: Sequential actions where designers and users prioritize and plan development.
Criteria: Designers and users discuss priorities and collaboratively plan software development.
Phrase: Prioritizing and planning development

22.
Concepts: discussing feature development, planning feature implementation
Relationship: Overlapping actions where participants discuss and plan feature development.
Criteria: Participants discuss and plan the design and implementation of features.
Phrase: Discussing and planning feature development

23.
Concepts: considering design and usability, discussing instructional design
Relationship: Overlapping actions where designers consider usability and discuss instructional design.
Criteria: Designers consider design and usability and discuss instructional design principles.
Phrase: Considering design and instructional usability

24.
Concepts: confirming future plans, discussing future project plans, explaining future plans
Relationship: Overlapping actions where designers confirm, discuss, and explain future plans.
Criteria: Designers confirm, discuss, and explain planned future features and project stages.
Phrase: Confirming and explaining future plans

25.
Concepts: share update timelines, outlining feature roadmap
Relationship: Sequential actions where designers share timelines and outline the roadmap.
Criteria: Designers share the timeline and outline the roadmap for feature completion.
Phrase: Sharing timelines and outlining roadmap

26.
Concepts: expressing development interest, appreciating development progress
Relationship: Overlapping actions where users express interest and appreciation for development.
Criteria: Users express interest in and appreciation for development progress or features.
Phrase: Expressing interest and appreciation

27.
Concepts: update preview, previewing upcoming features
Relationship: Synonymous actions where designers provide a preview of updates.
Criteria: Designers provide a preview and list upcoming features.
Phrase: Previewing upcoming features

28.
Concepts: promising future features, ongoing update promise
Relationship: Overlapping actions where designers promise future features and ongoing updates.
Criteria: Designers promise to implement features and ensure ongoing updates.
Phrase: Promising future features and updates

29.
Concepts: emphasizing user needs, enhancing user experience
Relationship: Sequential actions where designers emphasize needs and enhance experience.
Criteria: Designers emphasize updates aligned with user needs to enhance the user experience.
Phrase: Emphasizing needs and enhancing experience

30.
Concepts: expressing support and gratitude, showing appreciation for support
Relationship: Overlapping actions where users express support and gratitude.
Criteria: Users express support, gratitude, and appreciation for help or support.
Phrase: Expressing support and gratitude

31.
Concepts: expressive communication, expressing reactions using emojis
Relationship: Overlapping actions where users express reactions through emojis and language.
Criteria: Users and designers use expressive language and emojis to convey sentiment.
Phrase: Expressing reactions through emojis and language

32.
Concepts: use of special characters, using humor and informal tone
Relationship: Overlapping actions where users use special characters and humor.
Criteria: Users use special characters, humor, and an informal tone in communication.
Phrase: Using humor and informal tone

33.
Concepts: reciprocate greeting, engaging in positive interactions
Relationship: Sequential actions where users respond to greetings and engage positively.
Criteria: Users respond to greetings and engage in positive interactions.
Phrase: Engaging in positive interactions

34.
Concepts: community feedback, expressing community needs
Relationship: Overlapping actions where users provide feedback and express needs.
Criteria: Users provide feedback and express the community's needs for features or functionalities.
Phrase: Providing feedback and expressing needs

35.
Concepts: requesting community input, encouraging community participation
Relationship: Sequential actions where designers request input and encourage participation.
Criteria: Designers request suggestions and encourage community involvement.
Phrase: Requesting input and encouraging participation

36.
Concepts: community involvement, engaging community in design
Relationship: Overlapping actions where designers involve and engage the community in design.
Criteria: Designers involve the community in development by seeking feedback and suggestions.
Phrase: Engaging community in design

37.
Concepts: offer co-designing, engage community member
Relationship: Sequential actions where designers offer co-designing and engage members.
Criteria: Designers offer to involve the community in co-designing features and engage members.
Phrase: Offering co-designing and engaging members

38.
Concepts: identify as teacher, stating teaching experience
Relationship: Overlapping actions where users identify as teachers and mention experience.
Criteria: Users identify themselves as teachers and mention their teaching experience.
Phrase: Identifying as teachers with experience

39.
Concepts: sharing resources and information, sharing and retrieving community resources
Relationship: Overlapping actions where users share and retrieve resources.
Criteria: Users or designers share and retrieve resources and information within the community.
Phrase: Sharing and retrieving resources

40.
Concepts: accepting and agreeing with suggestions, agreeing and acknowledging design ideas
Relationship: Overlapping actions where users accept and agree with suggestions.
Criteria: Users or designers accept and agree with suggestions and design ideas.
Phrase: Accepting and agreeing with suggestions

41.
Concepts: providing confirmation, confirming or seconding responses
Relationship: Synonymous actions where users confirm statements or suggestions.
Criteria: Users or designers confirm or second responses and statements.
Phrase: Confirming statements or suggestions

42.
Concepts: follow-up on design information, conducting follow-up inquiries
Relationship: Overlapping actions where users follow up on information and inquiries.
Criteria: Users provide additional context or follow-up on design information and inquiries.
Phrase: Following up on information and inquiries

43.
Concepts: additional reasoning, providing context and elaboration
Relationship: Overlapping actions where users provide reasoning and context.
Criteria: Users offer additional reasons and context to elaborate on questions or conversations.
Phrase: Providing reasoning and context

44.
Concepts: information seeking, asking technical questions
Relationship: Overlapping actions where users seek information and ask technical questions.
Criteria: Users ask questions to gain knowledge or resources related to the software.
Phrase: Seeking information through questions

45.
Concepts: inquire about software access, inquiring about updates
Relationship: Overlapping actions where users inquire about access and updates.
Criteria: Users inquire about downloading, accessing the software, and updates.
Phrase: Inquiring about access and updates

46.
Concepts: ask for download instructions, providing download instructions
Relationship: Sequential actions where users ask for and designers provide instructions.
Criteria: Users ask for and designers provide instructions for downloading the software.
Phrase: Providing download instructions

47.
Concepts: educational tools, requesting educational features
Relationship: Overlapping actions where users request educational tools and features.
Criteria: Users request or discuss specific educational features and tools in the software.
Phrase: Requesting educational features

48.
Concepts: describing usage scenarios, user experience in educational contexts
Relationship: Overlapping actions where users describe scenarios and experiences.
Criteria: Users describe usage scenarios and experiences in educational contexts.
Phrase: Describing educational usage scenarios

49.
Concepts: compare with other applications, discussing software effectiveness and usability
Relationship: Overlapping actions where users compare and discuss software effectiveness.
Criteria: Users compare the software with others and discuss its effectiveness and usability.
Phrase: Comparing and discussing software usability

50.
Concepts: confirming compatibility, discussing system compatibility
Relationship: Overlapping actions where designers confirm and discuss compatibility.
Criteria: Designers ensure and discuss software compatibility with various systems.
Phrase: Confirming and discussing compatibility

51.
Concepts: acknowledging limitations, explaining solution limitations
Relationship: Overlapping actions where designers acknowledge and explain limitations.
Criteria: Designers acknowledge and explain limitations in usability and solutions.
Phrase: Acknowledging and explaining limitations

52.
Concepts: discussing platform limitations, discussing and addressing technical constraints
Relationship: Overlapping actions where designers discuss and address limitations.
Criteria: Designers discuss and address platform and technical limitations.
Phrase: Discussing and addressing limitations

53.
Concepts: praising software features
Relationship: N/A
Criteria: Users express positive opinions and satisfaction by praising specific features.
Phrase: Praising software features
---