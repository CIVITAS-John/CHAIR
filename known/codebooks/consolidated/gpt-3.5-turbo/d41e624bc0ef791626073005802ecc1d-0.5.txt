You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (7 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
7. {Repeat the input 7}
Relationship: {The logical relationship between concepts in input 7}
Criteria: {A sentence of consolidated criteria for code 7}
Label: {A consolidated label of code 7}
Category: {2-4 words for code 7}
---
~~~
1. teaching experience, educational background.
- Discussion or mention of users' teaching backgrounds.
- Understanding the participants' teaching experience and how it influences their use of educational technology.

2. feature updates.
- Announcements or updates regarding changes to the Physics Lab software.
- Discussion surrounding updates, features, and components of the software.

3. feature requests.
- Users requesting new features or updates.
- Discussing desired features like export functions and their importance for user experience.

4. prioritization of content.
- Examining how the designer plans to prioritize different sections of educational content on the platform.
- Discussions related to prioritizing certain sections of the physics lab for development.

5. community involvement in decision-making.
- Assessing how the designer involves the community in decision-making processes and prioritization of content development.
- Conversations highlighting the involvement of community members in decision-making processes and platform development.

6. user feedback.
- Users providing feedback or suggestions for improvements to Physics Lab.
- Users providing feedback and suggestions for improvements.
- Considering how user suggestions and requests shape the development and implementation of educational software.
- Interactions where users provide feedback or suggestions for the software's development.
- Analyzing users' feedback on the editor's auto-layout algorithm and how they perceive the tool's usability.

7. software updates.
- Users adapting to changes in the software and discussing the implications.
- Designer announcements regarding software updates, new features, adjustments, and bug fixes.
===
Categories: 
* User Engagement
* Software Development
* Community Collaboration

Definitions for each code (7 in total):
1. Teaching Background and Experience
Relationship: Teaching experience is a subset of users' educational background.
Criteria: Mentions of users' teaching backgrounds and how it influences their use of educational technology.
Label: Teaching Background and Experience
Category: User Engagement

2. Feature Updates
Relationship: Feature updates are announcements or discussions regarding changes to the Physics Lab software.
Criteria: Announcements or discussions about updates, features, and components of the software.
Label: Feature Updates
Category: Software Development

3. Feature Requests
Relationship: Feature requests involve users requesting new features or updates for the software.
Criteria: User discussions about desired features and their importance for user experience.
Label: Feature Requests
Category: Software Development

4. Prioritization of Content
Relationship: Prioritization of content involves planning to prioritize different sections of educational content on the platform.
Criteria: Discussions related to prioritizing certain sections of the physics lab for development.
Label: Prioritization of Content
Category: Software Development

5. Community Involvement in Decision-Making
Relationship: Community involvement in decision-making processes and content development prioritization.
Criteria: Conversations highlighting the involvement of community members in decision-making processes.
Label: Community Involvement in Decision-Making
Category: Community Collaboration

6. User Feedback
Relationship: User feedback shapes the development and implementation of educational software.
Criteria: Users providing feedback, suggestions, and how they perceive the tool's usability.
Label: User Feedback
Category: User Engagement

7. Software Updates
Relationship: Users adapting to changes in the software and designer announcements regarding updates.
Criteria: Discussions about software updates, new features, adjustments, and bug fixes.
Label: Software Updates
Category: Software Development