You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: context of use, usability and context of use
- Instances where users describe the specific contexts in which they use the software.
- Discussions about how the software is used in different contexts and its usability.

2.
Concepts: explain limitation, explain current version's limitation
- Explaining limitations or constraints of the software or its features.
- Explaining the limitations or constraints of the current version.

3.
Concepts: system compatibility, system requirements
- Discussing compatibility or technical requirements.
- Discussing or specifying system requirements or technical specifications.

4.
Concepts: answer about compatibility, system compatibility confirmation
- Designers or users answer questions about the software's compatibility with different systems or devices.
- A designer confirms or responds to questions about the software's compatibility with different systems or devices.

5.
Concepts: confirm compatibility, compatibility assurance
- Designer confirms or verifies compatibility with specific devices, systems, or versions.
- Designer assures the user about the platform's compatibility with specific devices or systems.

6.
Concepts: platform-specific communication, platform-specific information
- Communicating information specific to a particular platform or device.
- Providing information specific to a particular platform, such as iOS, Android, or Windows.

7.
Concepts: platform compatibility inquiry, platform specification
- User inquires about platform compatibility.
- User inquires about the platform's compatibility or availability on a specific device (e.g., PC).

8.
Concepts: feature stability, long-term stability
- Discussing the stability or reliability of features or components.
- Discussing the long-term stability or maintenance of a feature.

9.
Concepts: design challenges, development challenges
- Issues and obstacles faced by designers during the development process.
- Designer mentions difficulties or challenges in development.

10.
Concepts: feature complexity, compare feature complexities
- Commenting on the complexity of a feature or task.
- Comparisons or discussions about the complexity of different features.

11.
Concepts: feature simplification, simplification and refinement in design
- Simplifying or refining a feature or design element.
- Focusing on simplification and refinement in design or development.

12.
Concepts: feature improvement, feature optimization
- Designer or user suggests improving a feature or functionality.
- Designer mentions or works on improving or refining a feature or functionality.

13.
Concepts: touch screen functionality, inform about touch screens
- Designer discusses touch screen functionality or limitations.
- Designer informs users about the platform's touch screen capabilities or limitations.

14.
Concepts: input methods, discuss input methods
- A designer discusses or explores different input methods or options for the software.
- Designer or user discusses input methods or options.

15.
Concepts: manual editing, manual adjustment
- Designer mentions or allows for manual editing or customization of features or content.
- A designer mentions the possibility of manual adjustments or customization options.

16.
Concepts: technical support, technical support and guidance
- Instances where designers or users provide technical assistance or address technical issues.
- Instances where designers provide technical support or information about the software.
- Instances where designers provide technical support or guidance to users.

17.
Concepts: help offer, personalized assistance
- A designer offers assistance or support to a user.
- A designer offers personalized assistance or support to a user.

18.
Concepts: feature guidance, usage instruction, usage instructions
- Providing guidance on using a specific feature or functionality.
- Designer provides instructions or guidance on how to use a feature or functionality.
- Providing instructions or guidance on how to use a feature.

19.
Concepts: feature example, give examples of feature
- Providing an example or illustration of a feature's functionality.
- Designer provides examples or demonstrations of a feature or update.

20.
Concepts: feature explanation, introduce feature functions
- Designer explains the functionality or features of the software.
- The designer introduces or explains the functions or features of the platform.

21.
Concepts: technical detail, technical information
- Designer shares technical details or specifications about a feature or system.
- Providing technical information or specifications about a feature or component.

22.
Concepts: design discussion, explain development process
- Designer discusses or explains design decisions, features, or technical aspects of the Physics Lab.
- A designer explains the development process or technical aspects of the Physics Lab.

23.
Concepts: design goal explanation, explain intention of app design
- A designer explains the design goals or philosophy behind the software.
- Designers explain the intentions or goals behind the software's design or features.

24.
Concepts: user input, user input/feedback/suggestion with justifications
- Provision of input, opinions, or feedback from users.
- Providing input, feedback, or suggestions with explanations or justifications.

25.
Concepts: suggestion and feedback, user feedback and suggestions
- Users providing suggestions or feedback on the software's features or development direction.
- Instances where users provide feedback or suggestions about the software.
- Users providing feedback or suggestions on features and improvements for the software.
- Users providing feedback or suggestions to improve the software.

26.
Concepts: encouraging feedback, encouragement of user feedback, feedback encouragement
- Encouraging or soliciting feedback or suggestions.
- Instances where designers encourage users to provide suggestions or feedback.
- Encouraging users to provide feedback, suggestions, or ideas.

27.
Concepts: feedback solicitation, invitation to feedback
- Soliciting feedback, suggestions, or requirements from users.
- Encouraging users to ask questions or report issues they encounter.

28.
Concepts: user need, highlight usability need
- Users express their needs or requirements for the software or community.
- Users emphasize the need for usability features or improvements in the software.

29.
Concepts: local export necessity, local export functionality
- Identifying or discussing the necessity of a specific feature or functionality.
- Considering or discussing the need for local export functionality.

30.
Concepts: feature suggestion, design/feature suggestion, suggest new feature
- A user suggests a new feature or functionality for the software.
- Suggesting improvements or new features.
- User suggests a new design or feature idea.
- A user suggests or recommends new features or functionalities for the platform.

31.
Concepts: suggestion, suggesting collaboration
- User or designer makes a suggestion or proposes an idea.
- User suggests a new feature or collaboration with the designer.

32.
Concepts: feature request, feature requests for physics experiments
- Instances where users request new features or improvements for the Physics Lab tool.
- Suggestions from users about desired features or improvements for the software.
- User requests specific features.
- A user requests or suggests new features or functionalities for physics experiments.
===
Here are the definitions for each code:

---
1.
Concepts: context of use, usability and context of use
Relationship: The concepts are related as they both describe the environment and conditions in which the software is used.
Criteria: Users describe the specific contexts in which they use the software and discuss its usability in those contexts.
Phrase: Describing software use in context.

2.
Concepts: explain limitation, explain current version's limitation
Relationship: The concepts are related as they both describe the constraints of the software or its features.
Criteria: Designers explain the limitations or constraints of the software or its features, specifically in the current version.
Phrase: Explaining software limitations.

3.
Concepts: system compatibility, system requirements
Relationship: The concepts are related as they both describe the technical aspects of the software's functionality.
Criteria: Designers discuss compatibility or technical requirements of the software.
Phrase: Discussing system compatibility.

4.
Concepts: answer about compatibility, system compatibility confirmation
Relationship: The concepts are related as they both involve designers responding to questions about compatibility.
Criteria: Designers answer questions about the software's compatibility with different systems or devices.
Phrase: Confirming system compatibility.

5.
Concepts: confirm compatibility, compatibility assurance
Relationship: The concepts are related as they both involve designers verifying or ensuring compatibility.
Criteria: Designers confirm or verify compatibility with specific devices, systems, or versions, and assure users about the platform's compatibility.
Phrase: Assuring compatibility.

6.
Concepts: platform-specific communication, platform-specific information
Relationship: The concepts are related as they both involve providing information specific to a particular platform.
Criteria: Designers communicate information specific to a particular platform or device.
Phrase: Providing platform-specific information.

7.
Concepts: platform compatibility inquiry, platform specification
Relationship: The concepts are related as they both involve users asking about platform compatibility.
Criteria: Users inquire about platform compatibility or availability on a specific device.
Phrase: Inquiring about platform compatibility.

8.
Concepts: feature stability, long-term stability
Relationship: The concepts are related as they both describe the reliability of features or components.
Criteria: Designers discuss the stability or reliability of features or components, including long-term maintenance.
Phrase: Discussing feature stability.

9.
Concepts: design challenges, development challenges
Relationship: The concepts are related as they both describe obstacles faced during development.
Criteria: Designers mention difficulties or challenges in development.
Phrase: Discussing design challenges.

10.
Concepts: feature complexity, compare feature complexities
Relationship: The concepts are related as they both describe the complexity of features or tasks.
Criteria: Designers comment on the complexity of a feature or task, and compare the complexity of different features.
Phrase: Comparing feature complexities.

11.
Concepts: feature simplification, simplification and refinement in design
Relationship: The concepts are related as they both involve simplifying or refining design elements.
Criteria: Designers simplify or refine a feature or design element, focusing on simplification and refinement in design or development.
Phrase: Simplifying features.

12.
Concepts: feature improvement, feature optimization
Relationship: The concepts are related as they both involve improving or refining features or functionality.
Criteria: Designers suggest improving a feature or functionality, and work on improving or refining a feature or functionality.
Phrase: Improving features.

13.
Concepts: touch screen functionality, inform about touch screens
Relationship: The concepts are related as they both describe the functionality or limitations of touch screens.
Criteria: Designers discuss touch screen functionality or limitations, and inform users about the platform's touch screen capabilities or limitations.
Phrase: Discussing touch screen functionality.

14.
Concepts: input methods, discuss input methods
Relationship: The concepts are related as they both describe different input options for the software.
Criteria: Designers discuss or explore different input methods or options for the software.
Phrase: Discussing input methods.

15.
Concepts: manual editing, manual adjustment
Relationship: The concepts are related as they both involve manual customization or editing of features or content.
Criteria: Designers mention or allow for manual editing or customization of features or content.
Phrase: Allowing manual editing.

16.
Concepts: technical support, technical support and guidance
Relationship: The concepts are related as they both involve providing assistance or addressing technical issues.
Criteria: Designers provide technical assistance or address technical issues, and provide technical support or information about the software.
Phrase: Providing technical support.

17.
Concepts: help offer, personalized assistance
Relationship: The concepts are related as they both involve designers offering assistance or support to users.
Criteria: Designers offer assistance or support to users, providing personalized assistance or support.
Phrase: Offering help.

18.
Concepts: feature guidance, usage instruction, usage instructions
Relationship: The concepts are related as they both involve providing guidance on using features or functionality.
Criteria: Designers provide guidance on using a specific feature or functionality, and provide instructions or guidance on how to use a feature.
Phrase: Providing feature guidance.

19.
Concepts: feature example, give examples of feature
Relationship: The concepts are related as they both involve providing illustrations or demonstrations of a feature's functionality.
Criteria: Designers provide examples or illustrations of a feature's functionality, and provide examples or demonstrations of a feature or update.
Phrase: Providing feature examples.

20.
Concepts: feature explanation, introduce feature functions
Relationship: The concepts are related as they both involve explaining the functionality or features of the software.
Criteria: Designers explain the functionality or features of the software, and introduce or explain the functions or features of the platform.
Phrase: Explaining features.

21.
Concepts: technical detail, technical information
Relationship: The concepts are related as they both involve sharing technical aspects of the software or system.
Criteria: Designers share technical details or specifications about a feature or system.
Phrase: Sharing technical details.

22.
Concepts: design discussion, explain development process
Relationship: The concepts are related as they both involve designers discussing design decisions or technical aspects of the software.
Criteria: Designers discuss or explain design decisions, features, or technical aspects of the Physics Lab, and explain the development process or technical aspects of the Physics Lab.
Phrase: Discussing design decisions.

23.
Concepts: design goal explanation, explain intention of app design
Relationship: The concepts are related as they both involve designers explaining the design goals or philosophy behind the software.
Criteria: Designers explain the design goals or philosophy behind the software, and explain the intentions or goals behind the software's design or features.
Phrase: Explaining design goals.

24.
Concepts: user input, user input/feedback/suggestion with justifications
Relationship: The concepts are related as they both involve users providing input, opinions, or feedback.
Criteria: Users provide input, opinions, or feedback, and provide input, feedback, or suggestions with explanations or justifications.
Phrase: Providing user input.

25.
Concepts: suggestion and feedback, user feedback and suggestions
Relationship: The concepts are related as they both involve users providing suggestions or feedback on the software's features or development direction.
Criteria: Users provide suggestions or feedback on the software's features or development direction, and provide feedback or suggestions about the software.
Phrase: Providing feedback.

26.
Concepts: encouraging feedback, encouragement of user feedback, feedback encouragement
Relationship: The concepts are related as they both involve encouraging or soliciting feedback or suggestions.
Criteria: Designers encourage or solicit feedback or suggestions, and encourage users to provide feedback, suggestions, or ideas.
Phrase: Encouraging feedback.

27.
Concepts: feedback solicitation, invitation to feedback
Relationship: The concepts are related as they both involve soliciting feedback or suggestions from users.
Criteria: Designers solicit feedback, suggestions, or requirements from users, and encourage users to ask questions or report issues they encounter.
Phrase: Soliciting feedback.

28.
Concepts: user need, highlight usability need
Relationship: The concepts are related as they both involve users expressing their needs or requirements for the software or community.
Criteria: Users express their needs or requirements for the software or community, and emphasize the need for usability features or improvements in the software.
Phrase: Expressing user needs.

29.
Concepts: local export necessity, local export functionality
Relationship: The concepts are related as they both involve discussing the necessity of a specific feature or functionality.
Criteria: Designers identify or discuss the necessity of a specific feature or functionality, and consider or discuss the need for local export functionality.
Phrase: Discussing feature necessity.

30.
Concepts: feature suggestion, design/feature suggestion, suggest new feature
Relationship: The concepts are related as they both involve users suggesting new features or functionality for the software.
Criteria: Users suggest new features or functionality for the software, and suggest improvements or new features.
Phrase: Suggesting new features.

31.
Concepts: suggestion, suggesting collaboration
Relationship: The concepts are related as they both involve users or designers making suggestions or proposing ideas.
Criteria: Users or designers make suggestions or propose ideas, and suggest new features or collaboration with the designer.
Phrase: Making suggestions.

32.
Concepts: feature request, feature requests for physics experiments
Relationship: The concepts are related as they both involve users requesting new features or improvements for the Physics Lab tool.
Criteria: Users request new features or improvements for the Physics Lab tool, and suggest desired features or improvements for the software.
Phrase: Requesting features.