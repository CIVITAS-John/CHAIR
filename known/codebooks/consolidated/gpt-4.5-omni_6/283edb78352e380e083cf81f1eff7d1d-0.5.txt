You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (58 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
58. 
Concepts: {Repeat the input 58}
Relationship: {What is logical relationship between concepts in code 58, or N/A if not applicable}
Criteria: {Who did what, and how for code 58}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: outdated technology, technical issue
- Users mention outdated technology in their context.
- A user mentions issues related to outdated or problematic computer systems.

2.
Concepts: describe outdated school system, express frustration about system limitations
- A user describes an outdated school system.
- A user expresses frustration due to the outdated state of the computer systems at their school.

3.
Concepts: network policy, explain common practice in schools
- A participant discusses network policies within schools.
- User explains common practices in schools regarding network usage.

4.
Concepts: explain lack of internet, reference past incident
- User explains why internet access is disabled in classrooms.
- A user references a past incident to explain why classroom computers are restricted from internet access.

5.
Concepts: share workaround, provide workaround
- Sharing a workaround or alternative method to achieve a goal.
- Providing temporary solutions or workarounds for issues.

6.
Concepts: trying to understand the needs, inquiring about specific issues
- A designer tries to understand user needs or problems.
- A designer asks about specific issues encountered by the user to understand the problem.

7.
Concepts: troubleshooting, engaging in problem-solving through interaction
- A designer troubleshoots or addresses user issues.
- A designer interacts with users to clarify or resolve issues through problem-solving.

8.
Concepts: identify usability issue, address usability concern
- Identifying an issue related to usability.
- Designer addresses a concern about usability.

9.
Concepts: acknowledge potential issue, raise a concern for new feature
- Designer acknowledges a potential issue with a feature.
- Designers raise concerns about new features.

10.
Concepts: inviting more questions, encourage problem reporting
- A designer invites users to ask more questions or report problems.
- A designer encourages users to report problems.

11.
Concepts: address technical limitation, recognize usability limitation
- Designer addresses a technical limitation of the software.
- Designer acknowledges a limitation in the software's usability.

12.
Concepts: explain focus areas, explaining current limitations
- A designer explains focus areas or limitations.
- A designer explains current limitations of the software.

13.
Concepts: platform limitation, suggesting why it cannot be solved due to system used, talk about limitation of the solution
- A designer mentions limitations or incompatibilities of the platform.
- A designer suggests why an issue cannot be solved due to system limitations.
- A designer discusses limitations of a solution related to input methods.

14.
Concepts: consideration, consider future compatibility
- A designer considers future system compatibility.
- Discussing future compatibility considerations.

15.
Concepts: theorize compatibility, analyzing compatibility
- Theorizing about compatibility with certain systems or setups.
- Describing the compatibility or theoretical aspects of a problem or solution.

16.
Concepts: compatibility assurance, confirming compatibility
- A participant assures compatibility of the software.
- Designers confirm compatibility with specific systems or platforms and discuss system requirements.

17.
Concepts: platform-specific update, providing platform-specific information
- Designers provide updates specific to different platforms.
- A designer communicates information specific to a platform.

18.
Concepts: improve avatar quality, seek to improve visual representation
- Discussing ways to improve the quality of an avatar.
- Users seek ways to improve the visual representation of avatars or images.

19.
Concepts: considering user experience, user experience prioritization
- Considering usability and user experience in design decisions.
- Prioritizing the user experience or interface quality.

20.
Concepts: emphasize importance, describe feature importance
- A user emphasizes the importance of a particular feature or resource.
- A participant describes the importance of a feature.

21.
Concepts: feature adjustment, component adjustments
- A designer discusses the need for supporting a specific feature or adjustment.
- Someone discusses changes or adjustments to components within the product.

22.
Concepts: proposing design idea, indicating local export necessity
- A designer proposes a design idea related to export functionality.
- A designer indicates the necessity of supporting local export functionality.

23.
Concepts: explain bidirectional conversion feature, reiterate bidirectional conversion feature
- Designer explains a bidirectional conversion feature.
- A designer reiterates the feature of converting between physical and circuit diagrams.

24.
Concepts: component functionality, component capabilities explanation
- Designer explains the functionality of a specific component.
- Explaining the capabilities of new components.

25.
Concepts: inform about ideal components, inform about simulation capability
- Designer informs about ideal components in the software.
- Designer informs about the simulation capabilities of the software.

26.
Concepts: give examples of feature, explaining feature functions, give an example of the feature's functions
- A participant gives examples of a feature.
- Designer explains or provides examples of a feature or introduces new feature functions.
- Someone gives an example of how a feature functions.

27.
Concepts: memory aid, manage memory and task organization
- A designer mentions the need to gather opinions before starting a new project due to memory concerns.
- A designer discusses managing memory and organizing tasks before starting a new project.

28.
Concepts: explaining design rationale, explain intention of the app design
- Designer explains the design rationale behind a feature.
- Designer explains the intention behind the app's design.

29.
Concepts: design thoughts, design discussion
- A designer shares thoughts or ideas about the design.
- Discussing design elements and their implications.

30.
Concepts: discussing user interface, interface layout decisions
- Users or designers discuss user interface elements.
- Someone discusses decisions related to interface layout.

31.
Concepts: instructional design, discussing usability goals
- A designer discusses the instructional design approach to make the software user-friendly.
- A designer explains design goals or discusses usability features aiming for ease of use.

32.
Concepts: research and development, circuit diagram tool development
- A designer discusses research and development efforts.
- A designer discusses the development of a circuit diagram tool.

33.
Concepts: identifying user roles, show interest in user context
- A designer inquires about a user's professional role to identify their needs.
- A designer shows interest in the user's professional context.

34.
Concepts: response to question, inquiring about teaching background
- A user responds to a question about their teaching background, and a designer confirms with an image.
- A designer inquires about a user's teaching level or background.

35.
Concepts: promoting group communication, promoting collaborative learning
- A designer encourages group communication or interaction.
- A designer mentions or suggests group sharing for collaborative learning.

36.
Concepts: real-time communication, direct communication
- Users or designers engage in real-time communication.
- Direct interactions between designers and users to discuss features, updates, and feedback.

37.
Concepts: sharing information for design, shared experiences and support
- A user shares information relevant to the design or usage of the software.
- Users and designers sharing experiences and supporting each other in using and improving the software.

38.
Concepts: private messaging, request private message
- A participant suggests private messaging for further discussion.
- Designer requests a private message for further discussion.

39.
Concepts: query and response, answering for design support
- Instances where users ask questions and receive answers from designers or other community members.
- A user provides answers or support related to design queries.

40.
Concepts: gives an answer, quick response
- User or designer provides a direct answer to a question.
- A designer responds quickly to a user query and asks a follow-up question.

41.
Concepts: seek consensus, make a suggestion
- Designer seeks consensus on using both options.
- Designer makes a suggestion for using both options.

42.
Concepts: propose compromise, offering solution
- A designer proposes a compromise solution.
- A designer offers a solution to a problem or compatibility issue.

43.
Concepts: acceptance of request, confirm alignment with user needs, respond to feature request
- Designer accepts a user's request and confirms future updates.
- A designer confirms that a requested feature will be included.
- A designer responds to a feature request.

44.
Concepts: plan to gather feedback, confirmation of collaboration
- Designer mentions the intention to gather opinions before starting a new task.
- Designer confirms the plan to gather user opinions.

45.
Concepts: encouragement, appreciate design effort
- User provides encouragement to the designers.
- A participant shows appreciation for the design efforts.

46.
Concepts: compliment, providing positive feedback
- Complimenting the software or the efforts of developers.
- Users compliment or praise the software for its features and usability.

47.
Concepts: acknowledge craftsmanship, appreciate designers' craftsmanship
- User acknowledges the craftsmanship in the software development.
- Users praise the designers' craftsmanship and dedication to quality.

48.
Concepts: give reason, reason for suggestion, explain reasons for the request
- Someone gives a reason for gathering opinions or feedback.
- Users provide reasons for their suggestions.
- User explains the reasons behind a request for a feature.

49.
Concepts: user need, express need for specific features, requesting features, explaining the need
- Users express their needs or requirements related to the software.
- Expressing the need for specific features or functionalities.
- A participant makes a request for additional or specific features for the software.
- A participant explains the need for a particular feature or action.

50.
Concepts: school needs, describe educational needs, describe institutional needs
- Users discuss the needs and initiatives of their educational institutions.
- A user describes specific educational needs or requests for features.
- User describes the needs of their institution.

51.
Concepts: make feature requests, feature requests for physics experiments
- Users suggest new features or improvements for the Physics Lab tool.
- Requesting specific features or experiments for physics education.

52.
Concepts: share user reviews, provide comparative feedback
- Users share their experiences or opinions about using the software.
- Users compare the software favorably against similar applications or other software.

53.
Concepts: user communication, user feedback and communication
- A participant communicates updates or information about the software.
- Someone invites user feedback and communication about the product.

54.
Concepts: user adjustment, usability improvement
- User provides an adjustment or suggestion related to usability.
- Instances where suggestions or changes are made to improve the usability of the software.

55.
Concepts: propose workflow improvement, suggest broader usability feature
- A user suggests improvements to the workflow or functionality of the platform.
- Someone suggests a feature that would enhance the usability of the product.

56.
Concepts: suggest potential solution, share potential solutions
- A participant suggests a potential solution to a problem.
- Sharing potential solutions or improvements based on feedback.

57.
Concepts: further suggestion, provide alternative suggestion
- A user provides further suggestions or preferences for features.
- Users provide alternative suggestions.

58.
Concepts: announcing updates
- Designers update the community about changes or make general announcements.
- Designers announce new features or updates and provide relevant information based on user input.
===
---
Definitions for each code (58 in total):
1.
Concepts: outdated technology, technical issue
Relationship: Both concepts relate to problems arising from old or problematic systems.
Criteria: Users mention issues related to outdated or problematic technology in their context.
Phrase: Mention technical issues

2.
Concepts: describe outdated school system, express frustration about system limitations
Relationship: Both concepts involve discussing and reacting to outdated systems.
Criteria: A user describes an outdated school system and expresses frustration due to its limitations.
Phrase: Express frustration about system limitations

3.
Concepts: network policy, explain common practice in schools
Relationship: Both concepts involve discussing rules and practices in schools.
Criteria: A participant discusses network policies and explains common practices in schools.
Phrase: Discuss network policies

4.
Concepts: explain lack of internet, reference past incident
Relationship: Both concepts explain why internet access is restricted.
Criteria: User explains why internet access is disabled in classrooms by referencing a past incident.
Phrase: Explain lack of internet access

5.
Concepts: share workaround, provide workaround
Relationship: Both concepts involve offering alternative solutions.
Criteria: Sharing or providing temporary solutions or workarounds for issues.
Phrase: Provide workarounds

6.
Concepts: trying to understand the needs, inquiring about specific issues
Relationship: Both concepts involve gathering information about user needs.
Criteria: A designer tries to understand user needs by inquiring about specific issues encountered.
Phrase: Inquire about user needs

7.
Concepts: troubleshooting, engaging in problem-solving through interaction
Relationship: Both concepts involve resolving issues through interaction.
Criteria: A designer troubleshoots and engages in problem-solving through interaction with users.
Phrase: Engage in problem-solving

8.
Concepts: identify usability issue, address usability concern
Relationship: Both concepts involve recognizing and dealing with usability problems.
Criteria: Identifying and addressing issues related to usability.
Phrase: Address usability concerns

9.
Concepts: acknowledge potential issue, raise a concern for new feature
Relationship: Both concepts involve recognizing potential problems.
Criteria: Designer acknowledges potential issues and raises concerns about new features.
Phrase: Raise concerns about features

10.
Concepts: inviting more questions, encourage problem reporting
Relationship: Both concepts involve prompting users to communicate issues.
Criteria: A designer invites users to ask more questions and encourages them to report problems.
Phrase: Encourage problem reporting

11.
Concepts: address technical limitation, recognize usability limitation
Relationship: Both concepts involve acknowledging software limitations.
Criteria: Designer addresses technical limitations and acknowledges usability limitations.
Phrase: Recognize software limitations

12.
Concepts: explain focus areas, explaining current limitations
Relationship: Both concepts involve discussing the scope and limitations of the software.
Criteria: A designer explains focus areas and current limitations of the software.
Phrase: Explain software limitations

13.
Concepts: platform limitation, suggesting why it cannot be solved due to system used, talk about limitation of the solution
Relationship: All concepts involve discussing the constraints of the platform or solution.
Criteria: A designer discusses platform limitations and why issues cannot be solved due to system constraints.
Phrase: Discuss platform limitations

14.
Concepts: consideration, consider future compatibility
Relationship: Both concepts involve thinking about future system compatibility.
Criteria: A designer considers and discusses future compatibility considerations.
Phrase: Consider future compatibility

15.
Concepts: theorize compatibility, analyzing compatibility
Relationship: Both concepts involve examining system compatibility.
Criteria: Theorizing and analyzing compatibility with certain systems or setups.
Phrase: Analyze compatibility

16.
Concepts: compatibility assurance, confirming compatibility
Relationship: Both concepts involve verifying system compatibility.
Criteria: A participant assures and confirms compatibility with specific systems or platforms.
Phrase: Confirm compatibility

17.
Concepts: platform-specific update, providing platform-specific information
Relationship: Both concepts involve communicating updates or information specific to a platform.
Criteria: Designers provide platform-specific updates and information.
Phrase: Provide platform-specific updates

18.
Concepts: improve avatar quality, seek to improve visual representation
Relationship: Both concepts involve enhancing visual elements.
Criteria: Discussing ways to improve avatar quality and visual representation.
Phrase: Improve visual representation

19.
Concepts: considering user experience, user experience prioritization
Relationship: Both concepts involve focusing on user experience in design decisions.
Criteria: Considering and prioritizing user experience in design decisions.
Phrase: Prioritize user experience

20.
Concepts: emphasize importance, describe feature importance
Relationship: Both concepts involve highlighting the significance of a feature.
Criteria: A user emphasizes and describes the importance of a particular feature.
Phrase: Highlight feature importance

21.
Concepts: feature adjustment, component adjustments
Relationship: Both concepts involve making changes to features or components.
Criteria: Discussing the need for adjustments to features or components.
Phrase: Discuss feature adjustments

22.
Concepts: proposing design idea, indicating local export necessity
Relationship: Both concepts involve suggesting design ideas related to export functionality.
Criteria: A designer proposes a design idea and indicates the necessity of supporting local export functionality.
Phrase: Propose export functionality

23.
Concepts: explain bidirectional conversion feature, reiterate bidirectional conversion feature
Relationship: Both concepts involve discussing a bidirectional conversion feature.
Criteria: Designer explains and reiterates the bidirectional conversion feature.
Phrase: Explain conversion feature

24.
Concepts: component functionality, component capabilities explanation
Relationship: Both concepts involve explaining the functionalities of components.
Criteria: Designer explains the functionality and capabilities of specific components.
Phrase: Explain component functionality

25.
Concepts: inform about ideal components, inform about simulation capability
Relationship: Both concepts involve providing information about software capabilities.
Criteria: Designer informs about ideal components and simulation capabilities of the software.
Phrase: Inform about software capabilities

26.
Concepts: give examples of feature, explaining feature functions, give an example of the feature's functions
Relationship: All concepts involve providing examples and explanations of features.
Criteria: A participant gives examples and explanations of feature functions.
Phrase: Explain feature functions

27.
Concepts: memory aid, manage memory and task organization
Relationship: Both concepts involve managing memory and organizing tasks.
Criteria: A designer discusses managing memory and organizing tasks before starting a new project.
Phrase: Discuss task organization

28.
Concepts: explaining design rationale, explain intention of the app design
Relationship: Both concepts involve explaining the reasoning behind design choices.
Criteria: Designer explains the design rationale and intention behind the app's design.
Phrase: Explain design rationale

29.
Concepts: design thoughts, design discussion
Relationship: Both concepts involve discussing design elements and ideas.
Criteria: A designer shares thoughts and engages in discussions about design elements.
Phrase: Discuss design elements

30.
Concepts: discussing user interface, interface layout decisions
Relationship: Both concepts involve discussing user interface and layout decisions.
Criteria: Users or designers discuss user interface elements and layout decisions.
Phrase: Discuss interface layout

31.
Concepts: instructional design, discussing usability goals
Relationship: Both concepts involve discussing design approaches for usability.
Criteria: A designer discusses instructional design and usability goals for ease of use.
Phrase: Discuss usability goals

32.
Concepts: research and development, circuit diagram tool development
Relationship: Both concepts involve discussing development efforts.
Criteria: A designer discusses research and development efforts for a circuit diagram tool.
Phrase: Discuss development efforts

33.
Concepts: identifying user roles, show interest in user context
Relationship: Both concepts involve understanding user roles and contexts.
Criteria: A designer inquires about a user's professional role and shows interest in their context.
Phrase: Inquire about user roles

34.
Concepts: response to question, inquiring about teaching background
Relationship: Both concepts involve discussing a user's teaching background.
Criteria: A user responds to a question about their teaching background, and a designer confirms with an image.
Phrase: Inquire about teaching background

35.
Concepts: promoting group communication, promoting collaborative learning
Relationship: Both concepts involve encouraging group interaction and learning.
Criteria: A designer encourages group communication and collaborative learning.
Phrase: Promote collaborative learning

36.
Concepts: real-time communication, direct communication
Relationship: Both concepts involve engaging in direct, real-time interactions.
Criteria: Users or designers engage in real-time, direct communication.
Phrase: Engage in real-time communication

37.
Concepts: sharing information for design, shared experiences and support
Relationship: Both concepts involve sharing information and support among users and designers.
Criteria: Users and designers share information and experiences to support each other.
Phrase: Share design-related information

38.
Concepts: private messaging, request private message
Relationship: Both concepts involve suggesting private discussions.
Criteria: A participant suggests or requests private messaging for further discussion.
Phrase: Suggest private messaging

39.
Concepts: query and response, answering for design support
Relationship: Both concepts involve asking and answering questions for design support.
Criteria: Users ask questions and receive answers related to design support.
Phrase: Provide design support

40.
Concepts: gives an answer, quick response
Relationship: Both concepts involve providing answers promptly.
Criteria: User or designer provides a direct and quick response to a question.
Phrase: Provide quick answers

41.
Concepts: seek consensus, make a suggestion
Relationship: Both concepts involve proposing ideas and seeking agreement.
Criteria: Designer seeks consensus and makes suggestions for using both options.
Phrase: Seek consensus on suggestions

42.
Concepts: propose compromise, offering solution
Relationship: Both concepts involve offering solutions and compromises.
Criteria: A designer proposes a compromise solution to a problem or compatibility issue.
Phrase: Propose compromise solutions

43.
Concepts: acceptance of request, confirm alignment with user needs, respond to feature request
Relationship: Both concepts involve responding to and accepting user requests.
Criteria: Designer accepts a user's request and confirms alignment with user needs.
Phrase: Accept feature requests

44.
Concepts: plan to gather feedback, confirmation of collaboration
Relationship: Both concepts involve planning and confirming user collaboration.
Criteria: Designer mentions the plan to gather feedback and confirms collaboration.
Phrase: Plan for user feedback

45.
Concepts: encouragement, appreciate design effort
Relationship: Both concepts involve showing support and appreciation for design efforts.
Criteria: User provides encouragement and appreciates the designers' efforts.
Phrase: Appreciate design efforts

46.
Concepts: compliment, providing positive feedback
Relationship: Both concepts involve giving positive feedback.
Criteria: Users compliment and provide positive feedback about the software.
Phrase: Provide positive feedback

47.
Concepts: acknowledge craftsmanship, appreciate designers' craftsmanship
Relationship: Both concepts involve recognizing and appreciating the quality of work.
Criteria: User acknowledges and appreciates the craftsmanship of the designers.
Phrase: Appreciate craftsmanship

48.
Concepts: give reason, reason for suggestion, explain reasons for the request
Relationship: Both concepts involve explaining reasons behind suggestions or requests.
Criteria: Users give reasons and explain the reasons behind their suggestions or requests.
Phrase: Explain reasons for suggestions

49.
Concepts: user need, express need for specific features, requesting features, explaining the need
Relationship: Both concepts involve expressing and explaining needs for specific features.
Criteria: Users express and explain their needs for specific features or functionalities.
Phrase: Express need for features

50.
Concepts: school needs, describe educational needs, describe institutional needs
Relationship: Both concepts involve discussing educational or institutional needs.
Criteria: Users describe the needs and initiatives of their educational institutions.
Phrase: Describe educational needs

51.
Concepts: make feature requests, feature requests for physics experiments
Relationship: Both concepts involve suggesting new features for physics education.
Criteria: Users suggest new features or improvements for the Physics Lab tool.
Phrase: Request new features

52.
Concepts: share user reviews, provide comparative feedback
Relationship: Both concepts involve sharing opinions and comparing software.
Criteria: Users share their experiences and provide comparative feedback about the software.
Phrase: Share user reviews

53.
Concepts: user communication, user feedback and communication
Relationship: Both concepts involve communicating updates and inviting feedback.
Criteria: A participant communicates updates and invites user feedback.
Phrase: Invite user feedback

54.
Concepts: user adjustment, usability improvement
Relationship: Both concepts involve suggesting changes to improve usability.
Criteria: User provides adjustments or suggestions to improve the usability of the software.
Phrase: Suggest usability improvements

55.
Concepts: propose workflow improvement, suggest broader usability feature
Relationship: Both concepts involve suggesting improvements to workflow or usability.
Criteria: A user suggests improvements to the workflow and broader usability features.
Phrase: Propose workflow improvements

56.
Concepts: suggest potential solution, share potential solutions
Relationship: Both concepts involve suggesting solutions to problems.
Criteria: A participant suggests and shares potential solutions to problems.
Phrase: Suggest potential solutions

57.
Concepts: further suggestion, provide alternative suggestion
Relationship: Both concepts involve offering additional or alternative suggestions.
Criteria: A user provides further or alternative suggestions for features.
Phrase: Provide alternative suggestions

58.
Concepts: announcing updates
Relationship: N/A
Criteria: Designers update the community about changes or make general announcements.
Phrase: Announce updates
---