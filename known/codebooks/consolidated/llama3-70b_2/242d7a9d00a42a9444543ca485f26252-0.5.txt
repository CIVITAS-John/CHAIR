You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: avoids direct code copying, avoids blind copying and pasting
- Participants avoid direct code copying from AI.
- Participant avoids direct copying and pasting of AI-generated code.

2.
Concepts: is self-reliant in debugging, relies on own debugging skills, takes initiative in debugging
- Participants are self-reliant in fixing errors and debugging.
- Participants rely on their own debugging skills and prefer hands-on debugging.
- Participants take initiative in debugging and solve problems independently.

3.
Concepts: debugs ai code, debugs code independently, works independently
- Participants debug AI code and engage in independent troubleshooting.
- Participants debug code independently and troubleshoot code issues independently.
- Participants work independently and debug code independently.

4.
Concepts: manual error fixing, avoids "explain it" option
- Participants fix errors manually without relying on the "explain it" option.
- Participants avoid the "explain it" option and attempt to fix errors manually.

5.
Concepts: suggests ai support for "scope", identifies "scope" as a learning challenge, identifying ai support needs for netlogo learning
- The participant requests AI support for understanding "scope" concept in NetLogo.
- The participant identifies "scope" as a challenging concept to learn in NetLogo and requires AI support.
- Participants imply a need for AI support in learning NetLogo, identifying "scope" as a common issue and recognizing the potential of AI to address this need.

6.
Concepts: reflecting on personal competence, expressing confidence in netlogo skills
- Participants reflect on their own competence and confidence in using NetLogo.
- Participants express confidence in their NetLogo skills, feeling competent in NetLogo programming.

7.
Concepts: using ai for netlogo syntax support, using netlogo dictionary with ai support
- Participants use AI for targeted assistance, relying on it for syntax support in NetLogo coding tasks.
- Participants use the NetLogo dictionary for support and appreciate AI support in coding tasks, despite forgetting syntax.

8.
Concepts: setting specific modeling goals, expressing specific modeling goals
- Participants have specific modeling goals, such as creating a simple neural network in NetLogo.
- Participants express a specific goal or objective they want to achieve in NetLogo.

9.
Concepts: sets clear goals, clarifies intentions
- Users set clear goals or tasks for AI-driven interfaces.
- Users clarify their intentions or goals for AI-driven interfaces.

10.
Concepts: envisioning simple neural networks, envisioning straightforward tasks
- Participants envision a simple neural network or AI-driven system.
- Participants envision a straightforward task, such as creating a simple neural network.

11.
Concepts: establishes a coding process, creating code skeletons
- The code establishes a coding process, such as creating a code skeleton before asking ChatGPT.
- Participants create code skeletons or outlines before interacting with AI, implying a structured approach to development.

12.
Concepts: follows ai steps, writes code manually with ai guidance
- Participant follows the AI's steps and guidance when writing code.
- Participants write code manually with AI guidance.

13.
Concepts: overwrites existing code with ai output, overwrites existing work with ai code
- Participants overwrite existing code with AI output.
- The participant overwrites existing work with AI code, implying a practical approach.

14.
Concepts: integrates ai-generated code, integrates ai-generated code fully
- Participant integrates AI-generated code into their work.
- The participant integrates AI-generated code fully into their work, especially when faced with time constraints.

15.
Concepts: reads error messages, reads error messages carefully
- The participant reads error messages before making a choice, implying a careful and deliberate approach.
- Participant demonstrates careful attention to error messages.

16.
Concepts: debugs code manually, analyzes code for errors
- Participant reads through code manually to debug.
- Participant reads and analyzes code for errors.

17.
Concepts: evaluates ai-generated code, reviews ai-generated code
- Participants evaluate AI-generated code.
- Participant reviews and analyzes AI-generated code.

18.
Concepts: summarizes ai-generated code, comments on ai-generated code
- Participant summarizes AI-generated code.
- Participant reads and comments on AI-generated code.

19.
Concepts: seeks feedback on coding practices, ai feedback for self-correction
- Participant seeks feedback on coding practices from AI.
- The participant uses AI feedback to correct their own mistakes or improve their code.

20.
Concepts: engages in iterative problem solving, sharing iterative problem-solving
- Participants engage in iterative problem solving with AI.
- Shares experiences or strategies for iterative problem-solving when using the AI-driven interface.

21.
Concepts: sets up tasks, sets up ai tasks
- Sets up tasks for AI assistance
- Users set up tasks for AI-driven interfaces to perform.

22.
Concepts: dictates parameters, articulates programming tasks
- Users dictate parameters for coding tasks to AI-driven interfaces.
- Users articulate specific programming tasks or requests to AI-driven interfaces.

23.
Concepts: engages in ai-assisted model creation, engages directly with ai for model development
- Engages in structured model development with AI systems or tools.
- Engages directly with an AI-driven interface to develop models or solve problems.

24.
Concepts: uses ai for equation development, uses llm for equation development
- Uses AI for equation development and mathematical formulation in agent-based models.
- Describes a specific use case of LLM-driven interfaces in developing equations for agent-based models.

25.
Concepts: integrates ai into agent-based models, leverages ai for agent-based model creation
- Integrates AI into agent-based models for specific tasks.
- Leverages AI for agent-based model creation

26.
Concepts: suggesting ai-assisted help requests, proposing ai-assisted help requests
- Participants suggest that AI could help users write "help" posts that summarize their situation, code, and error.
- Participants suggest AI-assisted features to facilitate help requests or debugging processes.
- Participants propose that the AI-driven interface could facilitate help requests by summarizing the situation and providing a clear explanation of the problem.

27.
Concepts: requests ai assistance, seeking ai assistance
- Users request specific tasks or outputs from AI-driven interfaces.
- Participants seek straightforward assistance from the AI-driven interface.

28.
Concepts: using ai for plotting, seeking plotting guidance
- Participants use AI to plot the output of a model, seeking guidance or assistance.
- Participants ask AI for help with plotting, seeking guidance or instructions.

29.
Concepts: visualization support need, seeking visualization guidance
- Seeks visualization support or help with plotting output from the AI-generated code.
- Participants seek AI guidance on visualization, seeking assistance for output visualization.

30.
Concepts: asks ai to modify code, requesting ai adaptation, proposing code modifications
- Requests AI to modify code
- Participants request the AI to fix code with their own ideas or suggestions.
- Participants propose modifications to AI-generated code to better suit their needs.

31.
Concepts: requests ai verification, seeks assurance in outputs
- Participant requests AI verification of code and solutions.
- Participant seeks assurance or verification of AI-generated code or outputs.

32.
Concepts: seeks ai-generated code, provides specific coding requests
- Participant seeks AI-generated code for specific tasks.
- Participant requests specific coding tasks or outputs from AI.
===
Here are the definitions for each code:

---
1.
Concepts: avoids direct code copying, avoids blind copying and pasting
Relationship: The concepts are related as they both describe a participant's behavior of not relying on AI-generated code without understanding.
Criteria: Participants refrain from directly copying and pasting AI-generated code without making an effort to understand it.
Phrase: Avoids blind copying and pasting of AI-generated code.

2.
Concepts: is self-reliant in debugging, relies on own debugging skills, takes initiative in debugging
Relationship: The concepts are related as they all describe a participant's ability to debug code independently.
Criteria: Participants take initiative in debugging and rely on their own skills to fix errors.
Phrase: Takes initiative in debugging independently.

3.
Concepts: debugs ai code, debugs code independently, works independently
Relationship: The concepts are related as they all describe a participant's ability to debug code independently.
Criteria: Participants debug AI-generated code independently and work on their own to troubleshoot issues.
Phrase: Debugs AI-generated code independently.

4.
Concepts: manual error fixing, avoids "explain it" option
Relationship: The concepts are related as they both describe a participant's behavior of fixing errors manually.
Criteria: Participants fix errors manually without relying on the "explain it" option.
Phrase: Fixes errors manually without relying on the "explain it" option.

5.
Concepts: suggests ai support for "scope", identifies "scope" as a learning challenge, identifying ai support needs for netlogo learning
Relationship: The concepts are related as they all describe a participant's need for AI support in learning NetLogo.
Criteria: Participants identify "scope" as a challenging concept in NetLogo and suggest AI support to address this need.
Phrase: Identifies "scope" as a challenging concept in NetLogo and suggests AI support.

6.
Concepts: reflecting on personal competence, expressing confidence in netlogo skills
Relationship: The concepts are related as they both describe a participant's self-assessment of their NetLogo skills.
Criteria: Participants reflect on their own competence and express confidence in their NetLogo skills.
Phrase: Reflects on personal competence and expresses confidence in NetLogo skills.

7.
Concepts: using ai for netlogo syntax support, using netlogo dictionary with ai support
Relationship: The concepts are related as they both describe a participant's use of AI for NetLogo syntax support.
Criteria: Participants use AI for targeted assistance in NetLogo coding tasks, relying on it for syntax support.
Phrase: Uses AI for NetLogo syntax support.

8.
Concepts: setting specific modeling goals, expressing specific modeling goals
Relationship: The concepts are related as they both describe a participant's goal-setting in NetLogo modeling.
Criteria: Participants set specific goals or objectives for their NetLogo modeling tasks.
Phrase: Sets specific modeling goals.

9.
Concepts: sets clear goals, clarifies intentions
Relationship: The concepts are related as they both describe a participant's goal-setting behavior.
Criteria: Participants set clear goals or tasks for AI-driven interfaces.
Phrase: Sets clear goals for AI-driven interfaces.

10.
Concepts: envisioning simple neural networks, envisioning straightforward tasks
Relationship: The concepts are related as they both describe a participant's vision for AI-driven interfaces.
Criteria: Participants envision simple neural networks or AI-driven systems for straightforward tasks.
Phrase: Envisions simple neural networks or straightforward tasks.

11.
Concepts: establishes a coding process, creating code skeletons
Relationship: The concepts are related as they both describe a participant's approach to coding with AI.
Criteria: Participants establish a coding process, creating code skeletons before interacting with AI.
Phrase: Establishes a coding process with AI guidance.

12.
Concepts: follows ai steps, writes code manually with ai guidance
Relationship: The concepts are related as they both describe a participant's use of AI guidance in coding.
Criteria: Participants follow AI steps and write code manually with AI guidance.
Phrase: Follows AI steps and writes code manually.

13.
Concepts: overwrites existing code with ai output, overwrites existing work with ai code
Relationship: The concepts are related as they both describe a participant's use of AI-generated code in their work.
Criteria: Participants overwrite existing code with AI output, implying a practical approach.
Phrase: Overwrites existing code with AI output.

14.
Concepts: integrates ai-generated code, integrates ai-generated code fully
Relationship: The concepts are related as they both describe a participant's integration of AI-generated code.
Criteria: Participants integrate AI-generated code fully into their work, especially when faced with time constraints.
Phrase: Integrates AI-generated code fully.

15.
Concepts: reads error messages, reads error messages carefully
Relationship: The concepts are related as they both describe a participant's attention to error messages.
Criteria: Participants read error messages carefully before making a choice.
Phrase: Reads error messages carefully.

16.
Concepts: debugs code manually, analyzes code for errors
Relationship: The concepts are related as they both describe a participant's manual debugging approach.
Criteria: Participants debug code manually, reading and analyzing code for errors.
Phrase: Debugs code manually.

17.
Concepts: evaluates ai-generated code, reviews ai-generated code
Relationship: The concepts are related as they both describe a participant's evaluation of AI-generated code.
Criteria: Participants evaluate AI-generated code, reviewing and analyzing it.
Phrase: Evaluates AI-generated code.

18.
Concepts: summarizes ai-generated code, comments on ai-generated code
Relationship: The concepts are related as they both describe a participant's summarization of AI-generated code.
Criteria: Participants summarize AI-generated code, commenting on its functionality.
Phrase: Summarizes AI-generated code.

19.
Concepts: seeks feedback on coding practices, ai feedback for self-correction
Relationship: The concepts are related as they both describe a participant's use of AI feedback for self-improvement.
Criteria: Participants seek feedback on coding practices from AI to correct their own mistakes.
Phrase: Seeks AI feedback for self-correction.

20.
Concepts: engages in iterative problem solving, sharing iterative problem-solving
Relationship: The concepts are related as they both describe a participant's iterative problem-solving approach.
Criteria: Participants engage in iterative problem-solving with AI, sharing their experiences.
Phrase: Engages in iterative problem-solving with AI.

21.
Concepts: sets up tasks, sets up ai tasks
Relationship: The concepts are related as they both describe a participant's task-setting behavior.
Criteria: Participants set up tasks for AI assistance, clarifying their needs.
Phrase: Sets up tasks for AI assistance.

22.
Concepts: dictates parameters, articulates programming tasks
Relationship: The concepts are related as they both describe a participant's articulation of programming tasks.
Criteria: Participants dictate parameters for coding tasks to AI-driven interfaces.
Phrase: Dictates parameters for AI-driven interfaces.

23.
Concepts: engages in ai-assisted model creation, engages directly with ai for model development
Relationship: The concepts are related as they both describe a participant's engagement with AI for model development.
Criteria: Participants engage directly with AI-driven interfaces to develop models or solve problems.
Phrase: Engages directly with AI for model development.

24.
Concepts: uses ai for equation development, uses llm for equation development
Relationship: The concepts are related as they both describe a participant's use of AI for equation development.
Criteria: Participants use AI for equation development and mathematical formulation in agent-based models.
Phrase: Uses AI for equation development.

25.
Concepts: integrates ai into agent-based models, leverages ai for agent-based model creation
Relationship: The concepts are related as they both describe a participant's integration of AI into agent-based models.
Criteria: Participants integrate AI into agent-based models for specific tasks, leveraging its capabilities.
Phrase: Integrates AI into agent-based models.

26.
Concepts: suggesting ai-assisted help requests, proposing ai-assisted help requests
Relationship: The concepts are related as they both describe a participant's suggestion for AI-assisted help requests.
Criteria: Participants suggest AI-assisted features to facilitate help requests or debugging processes.
Phrase: Suggests AI-assisted help requests.

27.
Concepts: requests ai assistance, seeking ai assistance
Relationship: The concepts are related as they both describe a participant's request for AI assistance.
Criteria: Participants request specific tasks or outputs from AI-driven interfaces.
Phrase: Requests AI assistance.

28.
Concepts: using ai for plotting, seeking plotting guidance
Relationship: The concepts are related as they both describe a participant's use of AI for plotting guidance.
Criteria: Participants use AI for plotting the output of a model, seeking guidance or assistance.
Phrase: Uses AI for plotting guidance.

29.
Concepts: visualization support need, seeking visualization guidance
Relationship: The concepts are related as they both describe a participant's need for visualization support.
Criteria: Participants seek AI guidance on visualization, seeking assistance for output visualization.
Phrase: Seeks visualization guidance.

30.
Concepts: asks ai to modify code, requesting ai adaptation, proposing code modifications
Relationship: The concepts are related as they both describe a participant's request for AI code modification.
Criteria: Participants request the AI to fix code with their own ideas or suggestions.
Phrase: Requests AI code modification.

31.
Concepts: requests ai verification, seeks assurance in outputs
Relationship: The concepts are related as they both describe a participant's request for AI verification.
Criteria: Participants request AI verification of code and solutions, seeking assurance.
Phrase: Requests AI verification.

32.
Concepts: seeks ai-generated code, provides specific coding requests
Relationship: The concepts are related as they both describe a participant's request for AI-generated code.
Criteria: Participants seek AI-generated code for specific tasks, providing clear requests.
Phrase: Seeks AI-generated code.