You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (12 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
12. {Repeat the input 12}
Relationship: {The logical relationship between concepts in input 12}
Criteria: {A sentence of consolidated criteria for code 12}
Label: {A consolidated label of code 12}
Category: {2-4 words for code 12}
---
~~~
1. emotional responses, emotional expressions.
- Expressions of emotions, such as excitement, enthusiasm, or playfulness.
- Use of emojis or emotional language to express excitement, enthusiasm, or playfulness.

2. appreciation, expressions of gratitude.
- Expressions of gratitude or appreciation towards others.
- Members express gratitude or appreciation for others' work.
- Expressions of gratitude or appreciation from the designer or community members.

3. feedback on development, feedback and suggestions.
- Community members providing feedback on the development process or software updates.
- Community members providing feedback or suggestions on the development process.

4. user feedback, user experience.
- Instances where users provide feedback on their experience with the software.
- Users provide feedback on the usability and practicality of the software.

5. inquiry.
- Questions asked by community members to clarify or seek information.
- Questions or requests for information about the development process or feature updates.

6. feature requests.
- Instances where users request or discuss platform features.
- Instances where users request new features or changes to the software.
- Users suggest new features or improvements to the software.
- Instances where users request new features or functionalities.
- Community members suggesting or requesting new features or functionalities.
- Community members requesting new features or functionalities in the software.
- Members request new features or functionalities for the Physics Lab platform.

7. prioritization.
- Instances where the designer explains their priorities or plans for Physics Lab.
- Designers prioritize tasks or features for development.

8. request for resources.
- Instances where users ask for resources or guidance on using Physics Lab.
- Requests for access to resources, such as downloads or information about the platform.

9. technical issues.
- Reports of technical problems or limitations with the platform.
- Users and designers discuss technical limitations or constraints of the software.

10. encouragement.
- Instances where users or the designer express appreciation or encouragement.
- Expressions of gratitude, appreciation, or motivational statements that foster a sense of community.

11. software updates.
- Instances where the designer announces updates or changes to the software.
- Instances where designers discuss updates or changes to the software.
- The Designer sharing updates on the software development process.

12. design decisions.
- Instances where designers discuss or justify design decisions.
- The Designer explaining design decisions or trade-offs.
- Discussion of design choices and trade-offs.
===
Here is the output:

---
Categories:
* Community Engagement
* Feedback and Development
* Resource Exchange
* Design and Planning
* Technical Discussion
* Appreciation and Encouragement

Definitions for each code:

1. emotional responses, emotional expressions.
Relationship: Parallel concepts
Criteria: Expressions of emotions, such as excitement, enthusiasm, or playfulness, through language or emojis.
Label: Emotional Expressions
Category: Community Engagement

2. appreciation, expressions of gratitude.
Relationship: Inclusion (appreciation includes gratitude)
Criteria: Expressions of gratitude or appreciation towards others.
Label: Expressions of Gratitude
Category: Appreciation and Encouragement

3. feedback on development, feedback and suggestions.
Relationship: Inclusion (feedback on development is a type of feedback and suggestions)
Criteria: Community members providing feedback or suggestions on the development process.
Label: Feedback on Development
Category: Feedback and Development

4. user feedback, user experience.
Relationship: Inclusion (user feedback is a type of user experience)
Criteria: Users provide feedback on their experience with the software.
Label: User Feedback
Category: Feedback and Development

5. inquiry.
Relationship: Standalone concept
Criteria: Questions asked by community members to clarify or seek information.
Label: Inquiries
Category: Resource Exchange

6. feature requests.
Relationship: Parallel concepts
Criteria: Instances where users request or discuss platform features.
Label: Feature Requests
Category: Feedback and Development

7. prioritization.
Relationship: Standalone concept
Criteria: Designers prioritize tasks or features for development.
Label: Prioritization
Category: Design and Planning

8. request for resources.
Relationship: Standalone concept
Criteria: Requests for access to resources, such as downloads or information about the platform.
Label: Resource Requests
Category: Resource Exchange

9. technical issues.
Relationship: Standalone concept
Criteria: Reports of technical problems or limitations with the platform.
Label: Technical Issues
Category: Technical Discussion

10. encouragement.
Relationship: Inclusion (encouragement includes appreciation)
Criteria: Expressions of gratitude, appreciation, or motivational statements that foster a sense of community.
Label: Encouragement
Category: Appreciation and Encouragement

11. software updates.
Relationship: Standalone concept
Criteria: Instances where the designer announces updates or changes to the software.
Label: Software Updates
Category: Design and Planning

12. design decisions.
Relationship: Standalone concept
Criteria: Instances where designers discuss or justify design decisions.
Label: Design Decisions
Category: Design and Planning