You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (4 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
4. 
Concepts: {Repeat the input 4}
Relationship: {What is logical relationship between concepts in code 4, or N/A if not applicable}
Criteria: {Who did what, and how for code 4}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: clarify software features, explaining software functionalities
- Designers explain existing software features and updates to resolve user inquiries.
- Designers clarify how to use specific software features effectively.

2.
Concepts: designer acknowledgment, acknowledge user feedback
- A designer acknowledges user suggestions and informs them of likely upcoming updates or changes.
- Designers express gratitude for user feedback and align future improvements based on their input.

3.
Concepts: community interaction, build community connections
- Instances of interaction that foster a sense of community among users and designers.
- Users and designers engage in social interactions to foster a welcoming community environment.

4.
Concepts: announcing new features
- Designers announce new features and updates about software versions.
- Designers inform the community of upcoming functionalities and software updates.
===
---
Definitions for each code (4 in total):
1. 
Concepts: clarify software features, explaining software functionalities
Relationship: The concepts are interrelated as both focus on the communication of software functionalities, with one emphasizing clarification of features and the other on the explanation of how to use these features.
Criteria: Designers explain and clarify software features and functionalities to resolve user inquiries effectively.
Phrase: Explaining and clarifying software functionalities.

2. 
Concepts: designer acknowledgment, acknowledge user feedback
Relationship: The concepts are connected through the mutual recognition of user input, where acknowledgment from designers creates a feedback loop for future improvements.
Criteria: Designers acknowledge user feedback and express gratitude, which aligns future developments with user suggestions.
Phrase: Acknowledging and responding to user feedback.

3. 
Concepts: community interaction, build community connections
Relationship: The concepts are linked as they both pertain to the interactions that enhance relationships within the community, fostering a collaborative environment.
Criteria: Users and designers engage in social interactions to build connections and foster a sense of community.
Phrase: Engaging in community interactions.

4. 
Concepts: announcing new features
Relationship: This concept refers to a straightforward communication process where designers share updates, and thus it naturally aligns as a singular aspect of community engagement regarding software.
Criteria: Designers announce new features and updates to keep the community informed about the software's functionalities.
Phrase: Announcing new software features.