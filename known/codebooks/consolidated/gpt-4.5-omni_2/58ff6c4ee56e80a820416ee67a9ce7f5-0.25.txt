You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: sharing development plans, communicating development progress
- A team member shares information about current and future development plans or directions.
- A team member communicates ongoing work, future plans, or expected timelines for development.

2.
Concepts: general announcements, announce community updates
- Developers make general announcements to the community.
- Provide updates or announcements about the software to the community.

3.
Concepts: feature release, announce new features
- Designers announce the release of new features or versions.
- Announce or introduce new features in the software.

4.
Concepts: announce new version release, announcing software updates, announcing new version updates
- A team member announces the release of a new software version.
- A team member announces and provides detailed information about new software updates or versions.
- A team member announces the availability and details of a new software version update.

5.
Concepts: update planning, discussing future updates
- A team member discusses plans for future updates.
- A team member discusses future updates, plans, or potential updates for the software.

6.
Concepts: give a timeline, confirming future feature updates
- A team member provides a timeline for upcoming updates.
- A team member confirms the implementation of a feature in future updates and provides a timeline.

7.
Concepts: approval expression, expressing satisfaction with the software
- Users express their approval or satisfaction with the software or ideas.
- Users compliment the software, share positive feedback, or express satisfaction with its features and usability.

8.
Concepts: user support appreciation, appreciating designers' efforts
- Designers express gratitude for user support.
- Users express gratitude or appreciation for the designers' efforts and dedication.

9.
Concepts: acknowledge understanding, confirming understanding
- Users or designers acknowledge understanding of a point or statement.
- Users acknowledge or affirm a statement, question, agreement, or understanding.

10.
Concepts: information seeking, inquiring about software usage
- Users asking questions to gain knowledge or resources related to the software.
- Users ask questions about various aspects or usage of the software.

11.
Concepts: offering user support, providing technical support
- Designers offer help or assistance to users to effectively use the product.
- Designers or users provide technical support or guidance to address technical issues.

12.
Concepts: explaining system limitations, highlighting technical constraints
- A designer explains the limitations of the platform, current version, or a particular solution.
- A user or designer highlights or discusses technical constraints or limitations.
===
---
Definitions for each code (12 in total):
1.
Concepts: sharing development plans, communicating development progress
Relationship: Both involve the dissemination of information regarding development activities.
Criteria: A team member shares information about current and future development plans or directions and communicates ongoing work, future plans, or expected timelines for development.
Phrase: Sharing development updates

2.
Concepts: general announcements, announce community updates
Relationship: Both involve making announcements to the community.
Criteria: Developers make general announcements to the community and provide updates or announcements about the software.
Phrase: Making community announcements

3.
Concepts: feature release, announce new features
Relationship: Both involve the introduction of new features.
Criteria: Designers announce the release of new features or versions and introduce new features in the software.
Phrase: Announcing new features

4.
Concepts: announce new version release, announcing software updates, announcing new version updates
Relationship: All involve announcing new software versions or updates.
Criteria: A team member announces the release of a new software version, provides detailed information about new software updates or versions, and announces the availability and details of a new software version update.
Phrase: Announcing software updates

5.
Concepts: update planning, discussing future updates
Relationship: Both involve discussions about future updates.
Criteria: A team member discusses plans for future updates and potential updates for the software.
Phrase: Discussing future updates

6.
Concepts: give a timeline, confirming future feature updates
Relationship: Both involve providing information about the timing of future updates.
Criteria: A team member provides a timeline for upcoming updates and confirms the implementation of a feature in future updates.
Phrase: Confirming update timelines

7.
Concepts: approval expression, expressing satisfaction with the software
Relationship: Both involve users expressing positive feedback.
Criteria: Users express their approval or satisfaction with the software or ideas and share positive feedback about its features and usability.
Phrase: Expressing satisfaction

8.
Concepts: user support appreciation, appreciating designers' efforts
Relationship: Both involve expressions of gratitude.
Criteria: Designers express gratitude for user support, and users express appreciation for the designers' efforts and dedication.
Phrase: Expressing appreciation

9.
Concepts: acknowledge understanding, confirming understanding
Relationship: Both involve acknowledging comprehension.
Criteria: Users or designers acknowledge understanding of a point or statement and affirm a statement, question, agreement, or understanding.
Phrase: Confirming understanding

10.
Concepts: information seeking, inquiring about software usage
Relationship: Both involve users seeking information.
Criteria: Users ask questions to gain knowledge or resources related to the software and inquire about various aspects or usage of the software.
Phrase: Seeking information

11.
Concepts: offering user support, providing technical support
Relationship: Both involve providing assistance.
Criteria: Designers offer help or assistance to users to effectively use the product and provide technical support or guidance to address technical issues.
Phrase: Providing support

12.
Concepts: explaining system limitations, highlighting technical constraints
Relationship: Both involve discussing limitations.
Criteria: A designer explains the limitations of the platform, current version, or a particular solution, and a user or designer highlights or discusses technical constraints or limitations.
Phrase: Highlighting limitations
---