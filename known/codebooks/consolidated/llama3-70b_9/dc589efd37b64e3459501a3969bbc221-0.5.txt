You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: proposing compromises, exploring compromise in design
- Designers propose compromises.
- Designer considers or explores compromise in the design process.

2.
Concepts: reflect on past experience, reflecting on experiences
- Reflecting on past experiences or lessons learned
- Designer reflects on past experiences or lessons learned.

3.
Concepts: user interface design insight, understanding user interaction
- A designer provides insight into user interface design decisions.
- A designer explains or considers user interaction or experience.

4.
Concepts: consider input interface, considering input methods
- The designer considers the input interface or user input experience.
- A designer considers or discusses input methods or user interface design.

5.
Concepts: engaging users in development, engaging in ongoing development, engaging in development discussions
- Designers engage users in the development process, seeking feedback or input.
- Designers continue to engage in a conversation or development process with users.
- A designer engages with users about development process.

6.
Concepts: engaging in dialogue, engage users in discussion
- Designers engage in dialogue or conversation with users, asking or responding to questions.
- Designer engages users in relevant discussions or asks for feedback.

7.
Concepts: considering interface design, discuss interface design
- The designer raises considerations for software interface.
- Discussing or exploring ideas related to the user interface or design of the software.

8.
Concepts: discussing design implications, initiating design discussion
- Designer discusses design implications or considerations.
- Designer initiates a discussion about design specifics or functionality.

9.
Concepts: share future directions, suggest future directions
- Designer shares potential future directions or ideas for the app.
- User or designer suggests potential future directions or opportunities for the software.

10.
Concepts: discussing research focus, sharing ongoing research
- Designer discusses and shares research focus or goals.
- Designer shares and discusses ongoing research or development.

11.
Concepts: share information, sharing information
- The designer or developer shares information or updates in the online community.
- A user shares information or context relevant to the design or development process.

12.
Concepts: sharing development plans, sharing feature development information
- Designer shares the development plan or roadmap for the software.
- Designers share information about current feature development.

13.
Concepts: emphasize quality, emphasis on quality assurance
- Designers and users emphasize the importance of quality in software development.
- A designer emphasizes the importance of quality assurance in software development.

14.
Concepts: justify effort, justifying optimization efforts
- Designers justify the effort and resources invested in developing or improving software.
- The designer justifies efforts to optimize the software.

15.
Concepts: long-term thinking, explaining long-term benefits
- Mentioning the long-term benefits or stability of a feature or design choice.
- Designer explains the long-term benefits of a feature or design choice.

16.
Concepts: simplifying usage, suggesting simplification
- A designer expresses the intent to simplify the usage or user experience.
- A designer suggests simplifying a process or feature.
- A community member suggests simplifying a process or feature.

17.
Concepts: emphasizing usability, emphasizing user experience, emphasizing intuitive design
- A designer emphasizes the importance of usability in problem-solving.
- A designer emphasizes the importance of prioritizing user experience.
- A designer emphasizes the importance of intuitive and user-friendly design.

18.
Concepts: user experience focus, emphasizing user-centered design
- Prioritizing the user's experience and ease of use when designing features or interfaces.
- A designer prioritizes a user-focused approach, considering user needs and experiences.

19.
Concepts: consider local export, offline access consideration
- Designers consider and recognize the need for local export or offline capabilities.
- Acknowledging the need for local export or offline access to features.

20.
Concepts: commitment to user needs, reinforcing commitment to user needs
- A designer expresses commitment to meeting user needs.
- A designer reinforces commitment to user needs and community input.

21.
Concepts: validate community knowledge, seeking community validation
- A designer validates community knowledge or expertise.
- A designer seeks validation from the community to confirm understanding of design elements or ideas.

22.
Concepts: understanding user needs, seeking detailed user needs
- Designer tries to understand the needs or problems of users.
- A designer seeks detailed information about user needs or requirements.

23.
Concepts: emphasizing user needs, explaining user needs, recognizing user needs
- A designer emphasizes or highlights user requirements.
- A designer explains or identifies the need for a particular feature or development.
- A designer recognizes or acknowledges user needs or requirements.

24.
Concepts: adapting to user needs, accommodating user needs
- A designer adapts development to meet user needs or requests.
- A designer adapts to a user's constraints or limitations.

25.
Concepts: practicing user-centered design, aligning software with user needs
- A designer connects user needs to the development of the software.
- A designer aligns the software's capabilities with the needs or requests of the users.

26.
Concepts: encouraging exploration, encouraging exploration of updates
- Designers encourage users to explore new features or updates, or experiment with features or functionalities.
- Designer encourages users to explore and test updated functionalities or features.

27.
Concepts: demonstrating user engagement, encouraging user engagement
- Designers maintain user engagement and encourage participation.
- Designers encourage users to engage with a specific feature or aspect of the software.

28.
Concepts: outline assessment features, explaining assessment features
- Designer outlines plans or features for assessment or evaluation.
- Designer explains and plans detailed simulated experiment assessment features.

29.
Concepts: providing detailed information, providing detailed feature information
- Designer provides additional details about a feature, functionality, or update
- Designer provides detailed information about a specific feature or functionality

30.
Concepts: explaining components, explaining component capabilities
- A designer explains or describes the features or characteristics of a software component.
- A designer explains the capabilities of a component.

31.
Concepts: promoting feature significance, explain feature significance
- A designer explains or promotes the significance of a feature.
- Designers explain the importance or rationale behind specific software features.

32.
Concepts: emphasizing features, emphasizing importance
- A designer reiterates or emphasizes the importance of a specific feature.
- A user or designer emphasizes the importance of a particular aspect or feature.
===
Here are the definitions for each code:

---
1.
Concepts: proposing compromises, exploring compromise in design
Relationship: The concepts are related as they both involve finding middle ground in the design process.
Criteria: Designers propose or explore compromises in design decisions.
Phrase: Propose design compromises.

2.
Concepts: reflect on past experience, reflecting on experiences
Relationship: The concepts are related as they both involve looking back on previous events or lessons learned.
Criteria: Designers reflect on past experiences or lessons learned to inform design decisions.
Phrase: Reflect on past experiences.

3.
Concepts: user interface design insight, understanding user interaction
Relationship: The concepts are related as they both involve understanding how users interact with the design.
Criteria: Designers provide insight into user interface design decisions based on understanding user interaction.
Phrase: Provide user interface design insight.

4.
Concepts: consider input interface, considering input methods
Relationship: The concepts are related as they both involve thinking about how users input data into the system.
Criteria: Designers consider the input interface or user input experience when making design decisions.
Phrase: Consider input interface.

5.
Concepts: engaging users in development, engaging in ongoing development, engaging in development discussions
Relationship: The concepts are related as they all involve involving users in the development process.
Criteria: Designers engage users in the development process through ongoing discussions and feedback.
Phrase: Engage users in development.

6.
Concepts: engaging in dialogue, engage users in discussion
Relationship: The concepts are related as they both involve having conversations with users.
Criteria: Designers engage users in relevant discussions or ask for feedback to inform design decisions.
Phrase: Engage users in dialogue.

7.
Concepts: considering interface design, discuss interface design
Relationship: The concepts are related as they both involve thinking about the user interface.
Criteria: Designers consider and discuss interface design decisions.
Phrase: Discuss interface design.

8.
Concepts: discussing design implications, initiating design discussion
Relationship: The concepts are related as they both involve talking about design decisions and their consequences.
Criteria: Designers discuss design implications and initiate discussions about design specifics.
Phrase: Discuss design implications.

9.
Concepts: share future directions, suggest future directions
Relationship: The concepts are related as they both involve thinking about the future of the software.
Criteria: Designers share potential future directions or ideas for the software.
Phrase: Share future directions.

10.
Concepts: discussing research focus, sharing ongoing research
Relationship: The concepts are related as they both involve sharing information about the research process.
Criteria: Designers discuss and share research focus or goals with the community.
Phrase: Share research focus.

11.
Concepts: share information, sharing information
Relationship: The concepts are related as they both involve sharing knowledge or updates.
Criteria: Designers or users share information or updates in the online community.
Phrase: Share information.

12.
Concepts: sharing development plans, sharing feature development information
Relationship: The concepts are related as they both involve sharing information about the development process.
Criteria: Designers share development plans or information about current feature development.
Phrase: Share development plans.

13.
Concepts: emphasize quality, emphasis on quality assurance
Relationship: The concepts are related as they both involve prioritizing quality in software development.
Criteria: Designers and users emphasize the importance of quality in software development.
Phrase: Emphasize quality.

14.
Concepts: justify effort, justifying optimization efforts
Relationship: The concepts are related as they both involve explaining the reasoning behind development decisions.
Criteria: Designers justify the effort and resources invested in developing or improving software.
Phrase: Justify effort.

15.
Concepts: long-term thinking, explaining long-term benefits
Relationship: The concepts are related as they both involve thinking about the long-term consequences of design decisions.
Criteria: Designers explain the long-term benefits of a feature or design choice.
Phrase: Explain long-term benefits.

16.
Concepts: simplifying usage, suggesting simplification
Relationship: The concepts are related as they both involve making the user experience easier.
Criteria: Designers suggest or intend to simplify the usage or user experience.
Phrase: Suggest simplification.

17.
Concepts: emphasizing usability, emphasizing user experience, emphasizing intuitive design
Relationship: The concepts are related as they all involve prioritizing the user's experience.
Criteria: Designers emphasize the importance of usability, user experience, and intuitive design.
Phrase: Emphasize user experience.

18.
Concepts: user experience focus, emphasizing user-centered design
Relationship: The concepts are related as they both involve prioritizing the user's needs.
Criteria: Designers prioritize a user-focused approach, considering user needs and experiences.
Phrase: Emphasize user-centered design.

19.
Concepts: consider local export, offline access consideration
Relationship: The concepts are related as they both involve thinking about how users access the software.
Criteria: Designers consider the need for local export or offline capabilities.
Phrase: Consider offline access.

20.
Concepts: commitment to user needs, reinforcing commitment to user needs
Relationship: The concepts are related as they both involve prioritizing the user's needs.
Criteria: Designers express commitment to meeting user needs and reinforce this commitment.
Phrase: Commit to user needs.

21.
Concepts: validate community knowledge, seeking community validation
Relationship: The concepts are related as they both involve seeking input from the community.
Criteria: Designers validate community knowledge or expertise and seek validation from the community.
Phrase: Validate community knowledge.

22.
Concepts: understanding user needs, seeking detailed user needs
Relationship: The concepts are related as they both involve trying to understand the user's needs.
Criteria: Designers try to understand the needs or problems of users and seek detailed information.
Phrase: Seek user needs.

23.
Concepts: emphasizing user needs, explaining user needs, recognizing user needs
Relationship: The concepts are related as they all involve highlighting the user's requirements.
Criteria: Designers emphasize, explain, or recognize user needs or requirements.
Phrase: Emphasize user needs.

24.
Concepts: adapting to user needs, accommodating user needs
Relationship: The concepts are related as they both involve changing the design to meet user needs.
Criteria: Designers adapt development to meet user needs or requests.
Phrase: Adapt to user needs.

25.
Concepts: practicing user-centered design, aligning software with user needs
Relationship: The concepts are related as they both involve prioritizing the user's needs in design decisions.
Criteria: Designers connect user needs to the development of the software and align the software's capabilities with user needs.
Phrase: Practice user-centered design.

26.
Concepts: encouraging exploration, encouraging exploration of updates
Relationship: The concepts are related as they both involve encouraging users to try new things.
Criteria: Designers encourage users to explore new features or updates, or experiment with features or functionalities.
Phrase: Encourage exploration.

27.
Concepts: demonstrating user engagement, encouraging user engagement
Relationship: The concepts are related as they both involve encouraging users to participate.
Criteria: Designers maintain user engagement and encourage participation in the development process.
Phrase: Encourage user engagement.

28.
Concepts: outline assessment features, explaining assessment features
Relationship: The concepts are related as they both involve explaining how the software will be evaluated.
Criteria: Designers outline plans or features for assessment or evaluation and explain detailed simulated experiment assessment features.
Phrase: Outline assessment features.

29.
Concepts: providing detailed information, providing detailed feature information
Relationship: The concepts are related as they both involve sharing detailed information about the software.
Criteria: Designers provide additional details about a feature, functionality, or update and provide detailed information about a specific feature or functionality.
Phrase: Provide detailed information.

30.
Concepts: explaining components, explaining component capabilities
Relationship: The concepts are related as they both involve explaining how different parts of the software work.
Criteria: Designers explain or describe the features or characteristics of a software component and explain the capabilities of a component.
Phrase: Explain component capabilities.

31.
Concepts: promoting feature significance, explain feature significance
Relationship: The concepts are related as they both involve highlighting the importance of a feature.
Criteria: Designers explain or promote the significance of a feature.
Phrase: Promote feature significance.

32.
Concepts: emphasizing features, emphasizing importance
Relationship: The concepts are related as they both involve highlighting the importance of a particular aspect of the software.
Criteria: Designers reiterate or emphasize the importance of a specific feature or aspect.
Phrase: Emphasize feature importance.