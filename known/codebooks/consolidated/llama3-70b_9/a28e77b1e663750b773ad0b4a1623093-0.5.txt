You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: personal interest
- Sharing personal interests or hobbies unrelated to the platform or software.
- Statements revealing personal interests or hobbies.
- A designer reveals personal interests or hobbies.

2.
Concepts: reinforcing communication
- User reinforces communication or agreements.
- User reinforces user-designer communication.

3.
Concepts: self-directed learning
- User engages in self-directed learning by exploring group files.
- User takes initiative to find information or solve a problem.

4.
Concepts: download inquiries
- Users ask about downloading the platform or specific versions (e.g., PC or interactive whiteboard).
- User inquires about the download process.

5.
Concepts: technical inquiry
- A user or designer inquires about technical functionality or asks a technical question.
- A designer seeks technical advice or guidance from others.
- A user asks a technical question about the software or its features.

6.
Concepts: engaging positively
- User engages positively with the community or designer.
- User engages positively with the software or idea.

7.
Concepts: community building
- Fostering a sense of community or inclusiveness.
- Creates a welcoming or accessible atmosphere in the community

8.
Concepts: direct address
- Developer addresses a specific user directly.
- The designer addresses a specific user or responds to their question.

9.
Concepts: valuing community input
- The designer values or acknowledges the input or opinions of the community.
- Designer values and seeks input from the community.

10.
Concepts: updating on review process
- Providing updates or information about the review process for new features or versions of the Physics Lab online community.
- Designer provides an update on a review process, such as an iOS review.

11.
Concepts: need clarification
- Users clarify their needs or requirements for the software.
- A designer asks follow-up questions to clarify user needs.

12.
Concepts: confirming understanding
- User confirms understanding of a concept or instruction.
- A designer confirms understanding or clarifies a point.
- The designer confirms understanding or acknowledges a user's request or suggestion.

13.
Concepts: provide community feedback
- User provides feedback or suggestions for the software.
- A designer considers or responds to community needs or requests.

14.
Concepts: showing consideration for users
- A designer shows consideration for users' needs or feelings.
- Designer shows consideration for users' feelings or needs.

15.
Concepts: teacher input solicitation
- Developer seeks input or feedback from teachers.
- A designer seeks input or feedback from teachers or educators.

16.
Concepts: explaining lack of internet access
- User explains a situation where internet access is not available.
- User explains the lack of internet access in schools due to specific reasons.

17.
Concepts: promoting problem-solving
- The designer promotes problem-solving or critical thinking, often through the software's features or functionality.
- The designer promotes problem-solving capabilities within the application.

18.
Concepts: seeking teacher input
- A designer seeks input or feedback from teachers on a specific topic (e.g. circuit diagrams).
- Designer consults teachers in the group about a specific aspect of the circuit diagrams.

19.
Concepts: highlighting teaching needs
- A user highlights their teaching needs or requirements, often related to the software's functionality.
- A user highlights teaching needs or requirements.

20.
Concepts: valuing user input
- Valuing or emphasizing the importance of user input in development.
- Designer values user input in the development of content or features.

21.
Concepts: explain school policy
- A user explains a common school policy or practice, such as disabling network access.
- User explains a common school policy or practice.

22.
Concepts: technical support
- Designer provides technical support or assistance to users.
- Designer provides direct technical support or troubleshooting.
- Designer provides technical support or assistance.

23.
Concepts: affirmation
- Affirming or agreeing with a user's point or concern.
- Affirming or agreeing with a previous statement
- Brief affirmations or agreements from users.

24.
Concepts: internet access inquiry
- Inquiring about internet availability or access in classrooms
- Inquiring about internet access or availability in a specific context.

25.
Concepts: showing consideration
- Designer shows consideration or apologies for an action.
- A designer or user shows consideration for other community members or users.

26.
Concepts: confirming teacher identity
- The designer confirms a user's identity as a teacher or inquires about their teaching context.
- A user confirms their identity as a teacher.

27.
Concepts: addressing user needs
- Designer addresses user needs or requirements by implementing new features or updates.
- A designer mentions new versions or updates addressing user needs.

28.
Concepts: acknowledging feedback
- Designer responds to user input or feedback with minimal acknowledgement.
- Designer acknowledges user input or feedback with minimal response.
- Acknowledgments or responses to user input or feedback.

29.
Concepts: usage tips
- Providing tips, guidance, or instructions on using the platform or software.
- Designer provides tips or instructions for using the software.

30.
Concepts: prioritizing pc version
- Designer prioritizes the PC version of the software over other versions.
- Prioritizing the release of the PC version over other platforms.

31.
Concepts: user identity inquiry
- Probing user identity or role to tailor responses or interactions.
- A designer inquires about a user's identity or role.

32.
Concepts: version clarification
- Designer clarifies the version type or platform of the simulation.
- Designer clarifies the purpose and limitations of a specific version of the circuit diagram.
- Clarification is provided about the version of the Physics Lab available in the group.
===
Here are the definitions for each code:

---
1.
Concepts: personal interest
Relationship: The concepts are related as they all describe instances where personal interests or hobbies are shared.
Criteria: A designer or user shares personal interests or hobbies unrelated to the platform or software.
Phrase: Sharing personal interests

2.
Concepts: reinforcing communication
Relationship: The concepts are related as they both describe instances of reinforcing communication or agreements between users and designers.
Criteria: A user reinforces communication or agreements with designers or other users.
Phrase: Reinforcing communication

3.
Concepts: self-directed learning
Relationship: The concepts are related as they both describe instances of users taking initiative to learn or find information.
Criteria: A user engages in self-directed learning by exploring group files or finding information.
Phrase: Engaging in self-directed learning

4.
Concepts: download inquiries
Relationship: The concepts are related as they both describe instances of users inquiring about downloading the platform or specific versions.
Criteria: A user inquires about downloading the platform or specific versions.
Phrase: Inquiring about downloads

5.
Concepts: technical inquiry
Relationship: The concepts are related as they all describe instances of technical questions or seeking technical advice.
Criteria: A user or designer inquires about technical functionality or seeks technical advice.
Phrase: Inquiring about technical functionality

6.
Concepts: engaging positively
Relationship: The concepts are related as they both describe instances of users engaging positively with the community or designer.
Criteria: A user engages positively with the community or designer.
Phrase: Engaging positively

7.
Concepts: community building
Relationship: The concepts are related as they both describe instances of fostering a sense of community or inclusiveness.
Criteria: A designer or user fosters a sense of community or inclusiveness.
Phrase: Building community

8.
Concepts: direct address
Relationship: The concepts are related as they both describe instances of direct address or response.
Criteria: A designer addresses a specific user directly or responds to their question.
Phrase: Addressing users directly

9.
Concepts: valuing community input
Relationship: The concepts are related as they both describe instances of valuing or seeking input from the community.
Criteria: A designer values or seeks input from the community.
Phrase: Valuing community input

10.
Concepts: updating on review process
Relationship: The concepts are related as they both describe instances of providing updates on the review process.
Criteria: A designer provides updates on the review process for new features or versions.
Phrase: Providing review process updates

11.
Concepts: need clarification
Relationship: The concepts are related as they both describe instances of clarifying user needs or requirements.
Criteria: A user clarifies their needs or requirements for the software.
Phrase: Clarifying user needs

12.
Concepts: confirming understanding
Relationship: The concepts are related as they both describe instances of confirming understanding or clarifying points.
Criteria: A user or designer confirms understanding of a concept or instruction.
Phrase: Confirming understanding

13.
Concepts: provide community feedback
Relationship: The concepts are related as they both describe instances of providing feedback or suggestions for the software.
Criteria: A user provides feedback or suggestions for the software.
Phrase: Providing community feedback

14.
Concepts: showing consideration for users
Relationship: The concepts are related as they both describe instances of showing consideration for users' needs or feelings.
Criteria: A designer shows consideration for users' needs or feelings.
Phrase: Showing consideration for users

15.
Concepts: teacher input solicitation
Relationship: The concepts are related as they both describe instances of seeking input or feedback from teachers.
Criteria: A designer seeks input or feedback from teachers.
Phrase: Soliciting teacher input

16.
Concepts: explaining lack of internet access
Relationship: The concepts are related as they both describe instances of explaining situations where internet access is not available.
Criteria: A user explains a situation where internet access is not available.
Phrase: Explaining lack of internet access

17.
Concepts: promoting problem-solving
Relationship: The concepts are related as they both describe instances of promoting problem-solving or critical thinking.
Criteria: A designer promotes problem-solving or critical thinking through the software's features or functionality.
Phrase: Promoting problem-solving

18.
Concepts: seeking teacher input
Relationship: The concepts are related as they both describe instances of seeking input or feedback from teachers on a specific topic.
Criteria: A designer seeks input or feedback from teachers on a specific topic.
Phrase: Seeking teacher input

19.
Concepts: highlighting teaching needs
Relationship: The concepts are related as they both describe instances of highlighting teaching needs or requirements.
Criteria: A user highlights their teaching needs or requirements.
Phrase: Highlighting teaching needs

20.
Concepts: valuing user input
Relationship: The concepts are related as they both describe instances of valuing or emphasizing the importance of user input.
Criteria: A designer values user input in the development of content or features.
Phrase: Valuing user input

21.
Concepts: explain school policy
Relationship: The concepts are related as they both describe instances of explaining common school policies or practices.
Criteria: A user explains a common school policy or practice.
Phrase: Explaining school policy

22.
Concepts: technical support
Relationship: The concepts are related as they all describe instances of providing technical support or assistance.
Criteria: A designer provides technical support or assistance to users.
Phrase: Providing technical support

23.
Concepts: affirmation
Relationship: The concepts are related as they all describe instances of affirming or agreeing with a user's point or concern.
Criteria: A designer or user affirms or agrees with a previous statement.
Phrase: Affirming user concerns

24.
Concepts: internet access inquiry
Relationship: The concepts are related as they both describe instances of inquiring about internet availability or access.
Criteria: A user inquires about internet availability or access in classrooms.
Phrase: Inquiring about internet access

25.
Concepts: showing consideration
Relationship: The concepts are related as they both describe instances of showing consideration or apologizing for an action.
Criteria: A designer or user shows consideration for other community members or users.
Phrase: Showing consideration

26.
Concepts: confirming teacher identity
Relationship: The concepts are related as they both describe instances of confirming a user's identity as a teacher.
Criteria: A designer confirms a user's identity as a teacher or inquires about their teaching context.
Phrase: Confirming teacher identity

27.
Concepts: addressing user needs
Relationship: The concepts are related as they both describe instances of addressing user needs or requirements.
Criteria: A designer addresses user needs or requirements by implementing new features or updates.
Phrase: Addressing user needs

28.
Concepts: acknowledging feedback
Relationship: The concepts are related as they both describe instances of acknowledging user input or feedback.
Criteria: A designer acknowledges user input or feedback with minimal response.
Phrase: Acknowledging feedback

29.
Concepts: usage tips
Relationship: The concepts are related as they both describe instances of providing tips or instructions for using the software.
Criteria: A designer provides tips or instructions for using the software.
Phrase: Providing usage tips

30.
Concepts: prioritizing pc version
Relationship: The concepts are related as they both describe instances of prioritizing the PC version of the software.
Criteria: A designer prioritizes the PC version of the software over other versions.
Phrase: Prioritizing PC version

31.
Concepts: user identity inquiry
Relationship: The concepts are related as they both describe instances of inquiring about a user's identity or role.
Criteria: A designer inquires about a user's identity or role to tailor responses or interactions.
Phrase: Inquiring about user identity

32.
Concepts: version clarification
Relationship: The concepts are related as they all describe instances of clarifying the version type or platform of the simulation.
Criteria: A designer clarifies the version type or platform of the simulation.
Phrase: Clarifying version type