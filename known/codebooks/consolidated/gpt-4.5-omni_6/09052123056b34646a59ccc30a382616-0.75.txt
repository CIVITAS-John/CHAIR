You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (3 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
3. 
Concepts: {Repeat the input 3}
Relationship: {What is logical relationship between concepts in code 3, or N/A if not applicable}
Criteria: {Who did what, and how for code 3}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: refining ai task details, refining queries based on ai responses
- The user refines their requests to AI for more detailed responses.
- Users follow up with specific queries or prompts further questions based on AI responses.

2.
Concepts: using ai for iterative debugging, sharing iterative debugging experiences
- Users engage in iterative debugging with AI's assistance by providing specific error messages and code lines.
- Users share their experiences and strategies in debugging code with the AI, emphasizing iterative problem-solving.

3.
Concepts: referring to ai-generated code, comparing ai-generated code with initial code
- Users refer to AI-generated code while writing their own code to identify and solve issues.
- Users compare own code with AI-generated code to identify necessary setup or corrections.
===
---
Definitions for each code (3 in total):
1.
Concepts: refining ai task details, refining queries based on ai responses
Relationship: Both involve users adjusting their interactions with AI to obtain more precise or useful information.
Criteria: Users refine their requests to the AI and follow up with specific queries or prompts based on the responses received.
Phrase: Refining AI interactions

2.
Concepts: using ai for iterative debugging, sharing iterative debugging experiences
Relationship: Both concepts involve the process of iterative debugging using AI, and the sharing of these experiences with others.
Criteria: Users engage in iterative debugging with AI's help by providing specific error messages and code lines, and share their experiences and strategies in iterative problem-solving.
Phrase: Engaging in iterative debugging

3.
Concepts: referring to ai-generated code, comparing ai-generated code with initial code
Relationship: Both involve the use of AI-generated code as a reference point for the user's own code.
Criteria: Users refer to AI-generated code while writing their own code and compare it with their initial code to identify necessary setup or corrections.
Phrase: Utilizing AI-generated code
---