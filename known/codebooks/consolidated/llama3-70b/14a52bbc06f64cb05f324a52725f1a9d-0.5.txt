You are an expert in thematic analysis clarifying the criteria of qualitative codes. Do not attempt to merge codes now.
Consider provided quotes, and note that each quote is independent of others.
Write clear and generalizable criteria for each code and do not introduce unnecessary details.
If necessary, refine labels to be more accurate, but do not repeat yourself.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1. 
Criteria: {Who did what, and how for code 1}
Label: {A descriptive label of code 1}
...
32.
Criteria: {Who did what, and how for code 32}
Label: {A descriptive label of code 32}
---
~~~
1.
Label: offer assistance
Quotes:
- Designer: What problems did you encounter during use?

2.
Label: confirm alignment with user needs
Quotes:
- Designer: There will be.

3.
Label: identify user needs
Quotes:
- Designer: I'll upload one now... Are you a teacher?
- User: Can you also include mechanics experiments?

4.
Label: explain feature importance
Quotes:
- Designer: This belongs to the kind of feature that, once done, will ensure long-term stability... Adding various components is actually simpler

5.
Label: clarify preference
Quotes:
- User: Left side

6.
Label: acknowledging community expertise
Quotes:
- Designer: Consulting the teachers in the group: which type of intersection is used in the circuit diagrams in the current textbooks?
[Image]
- User: But it's better to use the right side for non-crossing
- User: Yes, the common one is still the old style
- Designer: Uh... left side or right side
- Designer: We are working on this part

7.
Label: manage expectations on feature delivery
Quotes:
- Designer: Hope to figure out electromagnetism before the end of the year

8.
Label: compliment software visuals
Quotes:
- User: The 3D effect of your software is very good

9.
Label: compare feature complexity
Quotes:
- Designer: This belongs to the kind of feature that, once done, will ensure long-term stability... Adding various components is actually simpler

10.
Label: explain functionality and issues
Quotes:
- Designer: This version of the circuit diagram is for testing only... You can drag the Editor because the auto-layout algorithm is not very stable and may produce some odd results

11.
Label: elaboration of response
Quotes:
- Designer: This is quite complex, so it will take more time... Hopefully, it can be released this week

12.
Label: recount past personal experience
Quotes:
- Designer: Last time I tried it in middle school, there's a trick where you click the link button in the top right, and when the browser pops up, it's no longer full screen... = =

13.
Label: explain limitation
Quotes:
- Designer: This version of the circuit diagram is for testing only... You can drag the Editor because the auto-layout algorithm is not very stable and may produce some odd results
- User: Generally not. Ever since an adult image popped up during a major city-level open class, the school has disabled the network on classroom computers [Emoji].

14.
Label: indicate optimization actions
Quotes:
- Designer: Don't worry, don't worry, it will come, just optimizing the circuit diagram one last time.

15.
Label: share progress
Quotes:
- Designer: Hello everyone~ Version 1.01 has been released in the group files, the updates are as follows:

16.
Label: encourage user suggestions
Quotes:
- Designer: If you have any suggestions or requirements, feel free to bring them up.

17.
Label: communicate next steps
Quotes:
- Designer: The Apple Store is still reviewing, let's upload the PC version first

18.
Label: seek consensus
Quotes:
- Designer: So, use both?

19.
Label: provide visual aid
Quotes:
- Designer: Consulting the teachers in the group: which type of intersection is used in the circuit diagrams in the current textbooks?
[Image]
- Designer: [Image] This one, right?

20.
Label: encourage suggestions for development
Quotes:
- Designer: If you have any suggestions or requirements, feel free to bring them up.

21.
Label: plan for future feedback
Quotes:
- Designer: Before starting mechanics, we will gather opinions again~ Otherwise, I'm afraid I won't remember everything.

22.
Label: manage project scope
Quotes:
- Designer: Before starting mechanics, we will gather opinions again~ Otherwise, I'm afraid I won't remember everything.

23.
Label: plan for future development
Quotes:
- Designer: Does the class have internet?

24.
Label: new feature
Quotes:
- Designer: This version of the circuit diagram is for testing only... You can drag the Editor because the auto-layout algorithm is not very stable and may produce some odd results
- Designer: The student power supply supports both DC and AC and is an ideal component.

25.
Label: suggest adding exit button
Quotes:
- User: It is recommended to add an exit button function to the PC version. Many regions now use all-in-one touch screen machines without physical keyboards.

26.
Label: provide context for request
Quotes:
- User: Mainly, the school is building an information-based school

27.
Label: technical issue
Quotes:
- Designer: Last time I tried it in middle school, there's a trick where you click the link button in the top right, and when the browser pops up, it's no longer full screen... = =
- User: Dizzy, the computer system for teachers at our school is quite old.

28.
Label: support various power supplies
Quotes:
- Designer: The student power supply supports both DC and AC and is an ideal component.

29.
Label: reciprocate greeting
Quotes:
- Designer: Hello :)

30.
Label: accepting suggestion
Quotes:
- Designer: Hmm... I'll add it in the next update. PC updates are usually the fastest, so there will probably be another round this weekend.
- Designer: There will be.

31.
Label: use non verbal communication
Quotes:
- User: It's already starting to take shape [Emoji]
- User: [Emoji][Emoji]

32.
Label: praise software
Quotes:
- User: This software is great! It's quite practical, unlike some software that tries to be comprehensive but ends up being inconvenient to use.
- User: The simulation effect of this software is really good. When I used it in class yesterday, the students were amazed.
===
Here are the definitions for each code:

---
1. 
Criteria: The designer offers help or assistance to the user.
Label: Offer Assistance

2. 
Criteria: The designer confirms or acknowledges that a feature or design aligns with user needs.
Label: Confirm Alignment with User Needs

3. 
Criteria: The designer identifies or inquires about user needs or requirements.
Label: Identify User Needs

4. 
Criteria: The designer explains the importance or significance of a feature or design element.
Label: Explain Feature Importance

5. 
Criteria: The user or designer clarifies or expresses a preference for something.
Label: Clarify Preference

6. 
Criteria: The designer acknowledges or recognizes the expertise or knowledge of the community or users.
Label: Acknowledge Community Expertise

7. 
Criteria: The designer sets or manages expectations for the delivery of a feature or update.
Label: Manage Expectations on Feature Delivery

8. 
Criteria: The user compliments or praises the visual design or aesthetics of the software.
Label: Compliment Software Visuals

9. 
Criteria: The designer compares the complexity of different features or design elements.
Label: Compare Feature Complexity

10. 
Criteria: The designer explains how a feature or design element works, including any issues or limitations.
Label: Explain Functionality and Issues

11. 
Criteria: The designer provides additional information or elaboration on a previous response.
Label: Elaboration of Response

12. 
Criteria: The designer shares a personal experience or anecdote related to the software or design.
Label: Recount Personal Experience

13. 
Criteria: The designer explains or describes a limitation or constraint of the software or design.
Label: Explain Limitation

14. 
Criteria: The designer indicates actions being taken to optimize or improve the software or design.
Label: Indicate Optimization Actions

15. 
Criteria: The designer shares progress or updates on the development of the software or feature.
Label: Share Progress

16. 
Criteria: The designer encourages or invites users to provide suggestions or feedback.
Label: Encourage User Suggestions

17. 
Criteria: The designer communicates the next steps or actions to be taken in the development process.
Label: Communicate Next Steps

18. 
Criteria: The designer seeks consensus or agreement from the community or users on a particular issue.
Label: Seek Consensus

19. 
Criteria: The designer provides a visual aid, such as an image, to support a point or explanation.
Label: Provide Visual Aid

20. 
Criteria: The designer encourages users to provide suggestions or ideas for future development.
Label: Encourage Suggestions for Development

21. 
Criteria: The designer plans or prepares for future feedback or input from users.
Label: Plan for Future Feedback

22. 
Criteria: The designer manages or defines the scope of the project or feature development.
Label: Manage Project Scope

23. 
Criteria: The designer plans or prepares for future development or updates.
Label: Plan for Future Development

24. 
Criteria: The designer introduces or discusses a new feature or design element.
Label: Introduce New Feature

25. 
Criteria: The user suggests adding a new feature or functionality to the software.
Label: Suggest Adding Feature

26. 
Criteria: The user provides context or background information for a request or suggestion.
Label: Provide Context for Request

27. 
Criteria: The user or designer reports or discusses a technical issue or problem.
Label: Technical Issue

28. 
Criteria: The designer discusses or supports the use of various power supplies or components.
Label: Support Various Power Supplies

29. 
Criteria: The designer responds to a greeting or salutation from a user.
Label: Reciprocate Greeting

30. 
Criteria: The designer accepts or agrees to a user's suggestion or request.
Label: Accepting Suggestion

31. 
Criteria: The user or designer uses non-verbal communication, such as emojis, to convey a message or emotion.
Label: Use Non-Verbal Communication

32. 
Criteria: The user praises or compliments the software, its functionality, or its impact.
Label: Praise Software