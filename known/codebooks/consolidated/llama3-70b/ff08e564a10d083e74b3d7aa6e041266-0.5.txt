You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes a list of concepts and definitions. Do not attempt to merge codes now.
Determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable criteria for each code and do not introduce unnecessary details.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1. {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1}
Criteria: {Who did what, and how for code 1}
Label: {A consolidated label of code 1}
...
12. {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12}
Criteria: {Who did what, and how for code 12}
Label: {A consolidated label of code 12}
---
~~~
1. usability and practicality
- The users' perceptions of the software's usability and practicality.
- User comments on the ease of use and practicality of the software.

2. teacher feedback
- The discussion around the teacher's experience and feedback on using the software in their classes.
- User-4232 sharing their teaching experience and feedback on using the software in class.

3. designer-user communication
- How the designers communicate with and respond to users in the online message group.
- Exchanges between designers and users, facilitating a collaborative design process.

4. feature development
- The designers' introduction of new features and improvements to the application.
- Instances of designers discussing or planning the development of new features.

5. active participation
- Instances where users actively contribute ideas, requests, or feedback to shape the development of Physics Lab.
- Users actively participating in the discussion, asking questions, and providing feedback.
- Users actively engaging with the designers, asking questions, and expressing their thoughts or reactions.

6. feature explanation
- Designers explaining new features or changes in the software.
- Instances where Designer-1 explains or describes features of Physics Lab.

7. designer response
- Designers responding to user inquiries or providing relevant information.
- Designers acknowledge user feedback and provide insights into the development process and priorities.
- Instances where designers respond to user feedback or suggestions.
- Instances where designers respond to user feedback or queries.

8. download instructions
- Providing instructions or information on how to download or access the software.
- Designers provide instructions on how to download the software.

9. user support
- Expressions of user support, encouragement, or appreciation for the designers' work.
- Designers providing support and guidance to users.

10. role identification
- Instances where participants identify their roles or expertise, contributing to the problem-solving process.
- Identifying roles within the community, such as designers, teachers, or other users.

11. feedback loop
- Processes where user feedback is solicited and incorporated into design decisions.
- The process of collecting, considering, and implementing user feedback.
- Designers' responses to user feedback and suggestions.

12. technical issues
- Instances of users or designers discussing technical issues or difficulties.
- Discussion about technical problems, compatibility, or limitations of Physics Lab.
===
Here are the definitions for each code:

---
1. usability and practicality
Relationship: Concepts are parallel, covering both usability and practicality.
Criteria: Users comment on the ease of use and practicality of the software.
Label: Software Evaluation

2. teacher feedback
Relationship: Concepts are parallel, covering both teacher experience and feedback.
Criteria: Teachers share their experience and feedback on using the software in class.
Label: Teacher Insights

3. designer-user communication
Relationship: Concepts are parallel, covering both communication and response.
Criteria: Designers communicate with and respond to users in the online message group.
Label: Collaborative Design

4. feature development
Relationship: Concepts are parallel, covering both introduction and planning of new features.
Criteria: Designers introduce new features and improvements to the application.
Label: Feature Development

5. active participation
Relationship: Concepts are parallel, covering both contributing ideas and engaging with designers.
Criteria: Users actively contribute ideas, requests, or feedback to shape the development of Physics Lab.
Label: User Engagement

6. feature explanation
Relationship: Concepts are parallel, covering both explaining new features and describing changes.
Criteria: Designers explain new features or changes in the software.
Label: Feature Explanation

7. designer response
Relationship: Concepts are parallel, covering both responding to inquiries and providing information.
Criteria: Designers respond to user inquiries or provide relevant information.
Label: Designer Response

8. download instructions
Relationship: Concepts are parallel, covering both providing instructions and accessing the software.
Criteria: Designers provide instructions on how to download or access the software.
Label: Software Access

9. user support
Relationship: Concepts are parallel, covering both user appreciation and designer support.
Criteria: Expressions of user support, encouragement, or appreciation for the designers' work.
Label: Community Support

10. role identification
Relationship: Concepts are parallel, covering both identifying roles and contributing to problem-solving.
Criteria: Participants identify their roles or expertise, contributing to the problem-solving process.
Label: Role Identification

11. feedback loop
Relationship: Concepts are parallel, covering both soliciting and incorporating feedback.
Criteria: Processes where user feedback is solicited and incorporated into design decisions.
Label: Feedback Loop

12. technical issues
Relationship: Concepts are parallel, covering both discussing technical issues and limitations.
Criteria: Instances of users or designers discussing technical issues or difficulties.
Label: Technical Issues