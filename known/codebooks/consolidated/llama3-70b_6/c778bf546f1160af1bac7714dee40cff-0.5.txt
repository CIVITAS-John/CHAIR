You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: using visual aids, providing visual aids
- Designer uses visual aids to communicate with the community.
- The designer shares visual aids to facilitate understanding or discussion.

2.
Concepts: explaining design decisions, explaining user interface design
- The designer explains the reasoning behind design decisions.
- Designer explains user interface design decisions

3.
Concepts: justifying design decisions, justifying development decisions
- The designer justifies design decisions or choices.
- The designer justifies development decisions or design choices.

4.
Concepts: clarify details, clarifying technical details
- A designer clarifies details or responds to a request for clarification.
- The designer clarifies technical details or specifications.

5.
Concepts: clarify testing phase, providing context for testing phase
- A designer clarifies or informs users about the testing phase.
- A designer provides context or explains the purpose of a testing phase.

6.
Concepts: explaining version details, explaining differences, clarifying platform differences, clarifying version differences
- The designer clarifies details about a specific version or platform.
- Designers explain differences between versions, features, or functionalities of the software.
- The designer clarifies differences between platforms or versions.
- The designer clarifies differences between versions or features.

7.
Concepts: explaining functionality, explaining feature functionality, explaining component functionality
- The designer explains a feature's functionality or design.
- The designer explains or clarifies the functionality of new or existing features.
- The designer explains the purpose or functionality of specific components.

8.
Concepts: providing technical details, explaining technical artifacts
- The designer provides technical information about the software or its components.
- The designer explains technical concepts or artifacts related to the software.

9.
Concepts: explaining technicalities, providing design explanations, explaining development process
- The designer explains technical details or concepts.
- The designer explains or clarifies a concept or feature.
- A designer explains or clarifies the development process or technical details.

10.
Concepts: researching new features, describing research or development efforts
- Designer researches new features.
- A designer describes research or development efforts related to a specific feature or functionality.

11.
Concepts: providing examples, providing feature examples
- The designer provides concrete examples to illustrate a concept or feature.
- The designer provides examples or illustrations of a feature or function.

12.
Concepts: illustrating functionality, demonstrating feature capabilities
- The designer describes or demonstrates how a feature or product works.
- The designer demonstrates the capabilities or features of a feature or application.

13.
Concepts: elaborating on features, providing feature details, detailing software features
- Designer elaborates on a feature or functionality.
- The designer provides detailed information about features or functionalities.
- The designer details features or functionalities of the software.

14.
Concepts: discussing features, discussing technical features
- The designer engages in a discussion about a specific feature or functionality.
- Designer suggests the need for a specific technical feature.

15.
Concepts: highlighting feature benefits, highlighting software benefits
- The designer explains the advantages or benefits of a feature or product.
- The designer explains the advantages or benefits of using the software.

16.
Concepts: offering workarounds, offering alternative solutions
- Designers offer workarounds and explore alternative solutions.
- Designers offer alternative solutions and workarounds.

17.
Concepts: sharing workarounds, describing workarounds
- Designers share workarounds and troubleshooting tips.
- Designers describe workarounds and explain technical workarounds.

18.
Concepts: exploring solutions, exploring technical solutions
- Designer considers options and explores solutions.
- Designer explores technical solutions and design implications.

19.
Concepts: enhance realism, refining simulations and improving realism
- Designers enhance the realism of experiments or simulations.
- Designers refine or adjust simulation settings or components.

20.
Concepts: categorization and refinement, advising on categorical refinement
- User suggests categorizing or refining content or features.
- Users suggest categorizing or refining features or content in the Physics Lab tool.

21.
Concepts: weighing trade-offs, weighing design options
- Weighing the pros and cons of different options or approaches.
- Designer weighs design options and trade-offs.

22.
Concepts: assessing feasibility, confirming feasibility
- Designer assesses feasibility.
- Designer confirms technical feasibility.

23.
Concepts: theorizing technical possibilities, outlining technical possibilities
- Designer discusses technical possibilities.
- Designers outline technical possibilities by exploring technical constraints.

24.
Concepts: providing flexibility, demonstrating flexibility
- Designer provides flexibility.
- Designer demonstrates flexibility and adaptability.

25.
Concepts: suggesting development approach, advising on development approach
- Designer suggests development approach.
- Designer advises on development approach.

26.
Concepts: iterating on design, engaging in iterative development
- Designer iterates on design.
- Designer engages in iterative development.

27.
Concepts: considering offline functionality, recognizing need for offline functionality
- Designer considers offline functionality.
- Designer recognizes the need for offline functionality in the software.

28.
Concepts: considering diverse hardware and use cases, considering diverse user environments
- Designers consider diverse hardware environments and use cases.
- Designers consider diverse user environments and demonstrate awareness of those environments.

29.
Concepts: proposing a new feature, enhancing user experience
- A designer or user proposes a new feature or functionality for the Physics Lab tool.
- A designer or user suggests or promotes making the Physics Lab tool more accessible or user-friendly.

30.
Concepts: acknowledging progress, appreciating effort
- A user or designer acknowledges progress or improvement in the Physics Lab online community.
- A user or designer expresses gratitude or appreciation for the effort put into the Physics Lab online community.

31.
Concepts: inquiring about classroom context, classroom context understanding
- Designer inquires about the classroom context.
- Understanding or inquiring about the classroom context or environment.

32.
Concepts: seeking expertise, soliciting teacher input
- The designer seeks input or expertise from educators or teachers.
- Designer seeks input from teachers on software design.
===
Here are the definitions for each code:

---
1.
Concepts: using visual aids, providing visual aids
Relationship: The concepts are related as the designer uses visual aids to facilitate communication and understanding.
Criteria: The designer provides visual aids to communicate with the community.
Phrase: Providing visual aids.

2.
Concepts: explaining design decisions, explaining user interface design
Relationship: The concepts are related as the designer explains the reasoning behind design decisions, including user interface design.
Criteria: The designer explains the reasoning behind design decisions.
Phrase: Explaining design decisions.

3.
Concepts: justifying design decisions, justifying development decisions
Relationship: The concepts are related as the designer justifies both design and development decisions.
Criteria: The designer justifies design and development decisions.
Phrase: Justifying decisions.

4.
Concepts: clarify details, clarifying technical details
Relationship: The concepts are related as the designer clarifies details, including technical information.
Criteria: The designer clarifies details or responds to requests for clarification.
Phrase: Clarifying details.

5.
Concepts: clarify testing phase, providing context for testing phase
Relationship: The concepts are related as the designer provides context and clarifies the testing phase.
Criteria: The designer clarifies or informs users about the testing phase.
Phrase: Clarifying the testing phase.

6.
Concepts: explaining version details, explaining differences, clarifying platform differences, clarifying version differences
Relationship: The concepts are related as the designer explains and clarifies differences between versions, platforms, and features.
Criteria: The designer clarifies details about specific versions or platforms.
Phrase: Explaining version details.

7.
Concepts: explaining functionality, explaining feature functionality, explaining component functionality
Relationship: The concepts are related as the designer explains the functionality of features, components, and overall software.
Criteria: The designer explains the functionality of features or components.
Phrase: Explaining functionality.

8.
Concepts: providing technical details, explaining technical artifacts
Relationship: The concepts are related as the designer provides technical information and explains technical concepts.
Criteria: The designer provides technical information about the software or its components.
Phrase: Providing technical details.

9.
Concepts: explaining technicalities, providing design explanations, explaining development process
Relationship: The concepts are related as the designer explains technical details, design explanations, and the development process.
Criteria: The designer explains technical details or concepts.
Phrase: Explaining technicalities.

10.
Concepts: researching new features, describing research or development efforts
Relationship: The concepts are related as the designer researches new features and describes development efforts.
Criteria: The designer researches new features or describes research efforts.
Phrase: Researching new features.

11.
Concepts: providing examples, providing feature examples
Relationship: The concepts are related as the designer provides concrete examples to illustrate features or concepts.
Criteria: The designer provides examples to illustrate a concept or feature.
Phrase: Providing examples.

12.
Concepts: illustrating functionality, demonstrating feature capabilities
Relationship: The concepts are related as the designer illustrates and demonstrates how features or products work.
Criteria: The designer describes or demonstrates how a feature or product works.
Phrase: Illustrating functionality.

13.
Concepts: elaborating on features, providing feature details, detailing software features
Relationship: The concepts are related as the designer elaborates on features, provides detailed information, and details software features.
Criteria: The designer provides detailed information about features or functionalities.
Phrase: Elaborating on features.

14.
Concepts: discussing features, discussing technical features
Relationship: The concepts are related as the designer engages in discussions about features, including technical aspects.
Criteria: The designer engages in discussions about features or functionalities.
Phrase: Discussing features.

15.
Concepts: highlighting feature benefits, highlighting software benefits
Relationship: The concepts are related as the designer highlights the advantages of features or software.
Criteria: The designer explains the advantages or benefits of a feature or product.
Phrase: Highlighting benefits.

16.
Concepts: offering workarounds, offering alternative solutions
Relationship: The concepts are related as the designer offers workarounds and alternative solutions.
Criteria: The designer offers workarounds and alternative solutions.
Phrase: Offering workarounds.

17.
Concepts: sharing workarounds, describing workarounds
Relationship: The concepts are related as the designer shares and describes workarounds.
Criteria: The designer shares workarounds and troubleshooting tips.
Phrase: Sharing workarounds.

18.
Concepts: exploring solutions, exploring technical solutions
Relationship: The concepts are related as the designer explores solutions, including technical options.
Criteria: The designer considers options and explores solutions.
Phrase: Exploring solutions.

19.
Concepts: enhance realism, refining simulations and improving realism
Relationship: The concepts are related as the designer enhances realism by refining simulations and improving realism.
Criteria: The designer enhances the realism of experiments or simulations.
Phrase: Enhancing realism.

20.
Concepts: categorization and refinement, advising on categorical refinement
Relationship: The concepts are related as users suggest categorization and refinement, and designers advise on refinement.
Criteria: Users suggest categorizing or refining content or features.
Phrase: Advising on categorization.

21.
Concepts: weighing trade-offs, weighing design options
Relationship: The concepts are related as the designer weighs the pros and cons of different options or approaches.
Criteria: The designer weighs design options and trade-offs.
Phrase: Weighing trade-offs.

22.
Concepts: assessing feasibility, confirming feasibility
Relationship: The concepts are related as the designer assesses and confirms technical feasibility.
Criteria: The designer assesses feasibility.
Phrase: Assessing feasibility.

23.
Concepts: theorizing technical possibilities, outlining technical possibilities
Relationship: The concepts are related as the designer discusses and outlines technical possibilities.
Criteria: The designer discusses technical possibilities.
Phrase: Theorizing technical possibilities.

24.
Concepts: providing flexibility, demonstrating flexibility
Relationship: The concepts are related as the designer provides and demonstrates flexibility.
Criteria: The designer provides flexibility.
Phrase: Providing flexibility.

25.
Concepts: suggesting development approach, advising on development approach
Relationship: The concepts are related as the designer suggests and advises on development approaches.
Criteria: The designer suggests development approach.
Phrase: Suggesting development approach.

26.
Concepts: iterating on design, engaging in iterative development
Relationship: The concepts are related as the designer iterates on design and engages in iterative development.
Criteria: The designer iterates on design.
Phrase: Iterating on design.

27.
Concepts: considering offline functionality, recognizing need for offline functionality
Relationship: The concepts are related as the designer considers and recognizes the need for offline functionality.
Criteria: The designer considers offline functionality.
Phrase: Considering offline functionality.

28.
Concepts: considering diverse hardware and use cases, considering diverse user environments
Relationship: The concepts are related as the designer considers diverse hardware environments and user cases.
Criteria: The designer considers diverse hardware environments and use cases.
Phrase: Considering diverse environments.

29.
Concepts: proposing a new feature, enhancing user experience
Relationship: The concepts are related as the designer proposes new features to enhance user experience.
Criteria: A designer or user proposes a new feature or functionality.
Phrase: Proposing new features.

30.
Concepts: acknowledging progress, appreciating effort
Relationship: The concepts are related as users or designers acknowledge progress and express gratitude.
Criteria: A user or designer acknowledges progress or improvement.
Phrase: Acknowledging progress.

31.
Concepts: inquiring about classroom context, classroom context understanding
Relationship: The concepts are related as the designer inquires about and understands the classroom context.
Criteria: The designer inquires about the classroom context.
Phrase: Inquiring about context.

32.
Concepts: seeking expertise, soliciting teacher input
Relationship: The concepts are related as the designer seeks input and expertise from teachers.
Criteria: The designer seeks input or expertise from educators or teachers.
Phrase: Seeking expertise.