You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (21 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
21. 
Concepts: {Repeat the input 21}
Relationship: {What is logical relationship between concepts in code 21, or N/A if not applicable}
Criteria: {Who did what, and how for code 21}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: considering user modes, considering multiple modes
- The designer considers or discusses different user modes or scenarios for the online community.
- A designer considers different modes or scenarios for a feature or functionality.

2.
Concepts: long-term thinking, considering broader implications
- Designer thinks about the long-term implications or goals of the project.
- The designer considers broader implications or consequences.

3.
Concepts: explore compromises, consider design options
- Designers explore possible compromises or alternatives.
- Designers consider different options or approaches to a problem.

4.
Concepts: open to alternatives, suggesting alternative design approach
- Designers are open to alternative approaches or solutions.
- Proposals or discussions about alternative design approaches or methods.

5.
Concepts: expressing cross-platform interest, requesting multi-device support
- Users express interest in cross-platform access or functionality.
- A user expresses interest in accessing a feature or functionality on multiple devices.

6.
Concepts: clarifying platform differences, providing platform specific update information
- Clarifying differences between platforms or versions.
- Updates or information specific to a particular platform.

7.
Concepts: platform-specific releases, explaining release strategy
- Designer explains the difference between platform-specific releases.
- Designer explains the decision-making process behind releasing the PC version first.

8.
Concepts: platform clarification, providing platform information
- A designer clarifies that the version being discussed is the PC version, distinguishing it from other platforms.
- The speaker provides information about a platform, such as the PC version of a software.

9.
Concepts: soft keyboard need, suggesting soft keyboards
- A designer discusses the need for soft keyboards in specific contexts.
- Designer suggests including soft keyboards for input fields.

10.
Concepts: prioritizing local export, considering local export
- Designer prioritizes a specific feature (local export).
- A designer considers or mentions the need for local export functionality.

11.
Concepts: considering diverse hardware, designing for versatility
- A user or designer considers the diversity of hardware environments or devices.
- Considering multiple use cases, hardware environments, or compatibility issues when designing the software.

12.
Concepts: considering compatibility, considering future compatibility
- Designers discuss and consider compatibility with different platforms or systems.
- Considering or discussing future compatibility or updates

13.
Concepts: software limitations, hardware limitations
- Describing limitations or constraints of the software
- Considering limitations or constraints of hardware or devices.

14.
Concepts: platform limitations, managing limitations
- Acknowledging limitations or constraints of the platform.
- Management or acknowledgment of limitations, constraints, or trade-offs.

15.
Concepts: acknowledging limitations, highlight technical constraints
- Designer acknowledges limitations or constraints of the Physics Lab.
- Users or the designer highlight technical constraints or limitations in the Physics Lab.

16.
Concepts: justifying the limitations of free experiments, highlighting limitations of free experiments
- The designer explains or justifies the limitations of free experiments.
- The speaker highlights the limitations or constraints of free experiments in a specific area.

17.
Concepts: considering limitations, recognizing limitation in previous statement
- Designer expresses consideration for potential issues or limitations.
- The designer recognizes limitations or exceptions in their previous statements.

18.
Concepts: communicating complexity and timeline, mentions complexity of upcoming release
- Communicating the complexity of updates and expected release timelines.
- The designer mentions the complexity of an upcoming release or feature.

19.
Concepts: expressing frustration, expressing dissatisfaction with avatar
- Designers or users express frustration with limitations, features, or avatars.
- Designer expresses dissatisfaction with their current avatar quality.

20.
Concepts: product gap identification, identifying gaps in existing tools
- A user identifies a gap or limitation in the current software or market.
- A participant identifies a limitation or gap in existing tools or resources.

21.
Concepts: providing development updates
- A designer provides information about the software development process, timelines, or plans.
- Designers provide and communicate updates on ongoing development progress.
===
Here are the definitions for each code:

---
1.
Concepts: considering user modes, considering multiple modes
Relationship: The concepts are related in that they both involve designers thinking about different user scenarios or modes.
Criteria: Designers consider multiple user modes or scenarios for the online community.
Phrase: Considering user modes

2.
Concepts: long-term thinking, considering broader implications
Relationship: The concepts are related in that they both involve designers thinking about the bigger picture.
Criteria: Designers think about the long-term implications or goals of the project.
Phrase: Thinking long-term

3.
Concepts: explore compromises, consider design options
Relationship: The concepts are related in that they both involve designers finding alternative solutions.
Criteria: Designers explore possible compromises or alternatives to a problem.
Phrase: Exploring compromises

4.
Concepts: open to alternatives, suggesting alternative design approach
Relationship: The concepts are related in that they both involve designers being receptive to different approaches.
Criteria: Designers are open to alternative approaches or solutions.
Phrase: Suggesting alternatives

5.
Concepts: expressing cross-platform interest, requesting multi-device support
Relationship: The concepts are related in that they both involve users wanting to access the online community across different devices.
Criteria: Users express interest in accessing a feature or functionality on multiple devices.
Phrase: Requesting cross-platform support

6.
Concepts: clarifying platform differences, providing platform specific update information
Relationship: The concepts are related in that they both involve clarifying differences between platforms.
Criteria: Clarifying differences between platforms or versions.
Phrase: Clarifying platform differences

7.
Concepts: platform-specific releases, explaining release strategy
Relationship: The concepts are related in that they both involve designers explaining their release strategy.
Criteria: Designers explain the decision-making process behind releasing the PC version first.
Phrase: Explaining release strategy

8.
Concepts: platform clarification, providing platform information
Relationship: The concepts are related in that they both involve providing information about specific platforms.
Criteria: Providing information about a particular platform.
Phrase: Providing platform information

9.
Concepts: soft keyboard need, suggesting soft keyboards
Relationship: The concepts are related in that they both involve designers considering the need for soft keyboards.
Criteria: Designers discuss the need for soft keyboards in specific contexts.
Phrase: Suggesting soft keyboards

10.
Concepts: prioritizing local export, considering local export
Relationship: The concepts are related in that they both involve designers considering the importance of local export.
Criteria: Designers prioritize local export functionality.
Phrase: Prioritizing local export

11.
Concepts: considering diverse hardware, designing for versatility
Relationship: The concepts are related in that they both involve designers considering multiple use cases and hardware environments.
Criteria: Designers consider multiple use cases, hardware environments, or compatibility issues when designing the software.
Phrase: Designing for versatility

12.
Concepts: considering compatibility, considering future compatibility
Relationship: The concepts are related in that they both involve designers thinking about compatibility with different platforms or systems.
Criteria: Designers discuss and consider compatibility with different platforms or systems.
Phrase: Considering compatibility

13.
Concepts: software limitations, hardware limitations
Relationship: The concepts are related in that they both involve describing limitations or constraints.
Criteria: Describing limitations or constraints of the software or hardware.
Phrase: Describing limitations

14.
Concepts: platform limitations, managing limitations
Relationship: The concepts are related in that they both involve acknowledging and managing limitations.
Criteria: Acknowledging limitations or constraints of the platform.
Phrase: Managing limitations

15.
Concepts: acknowledging limitations, highlight technical constraints
Relationship: The concepts are related in that they both involve designers acknowledging limitations or constraints.
Criteria: Designers acknowledge limitations or constraints of the Physics Lab.
Phrase: Acknowledging limitations

16.
Concepts: justifying the limitations of free experiments, highlighting limitations of free experiments
Relationship: The concepts are related in that they both involve designers explaining or justifying limitations.
Criteria: Designers explain or justify the limitations of free experiments.
Phrase: Justifying limitations

17.
Concepts: considering limitations, recognizing limitation in previous statement
Relationship: The concepts are related in that they both involve designers expressing consideration for potential issues or limitations.
Criteria: Designers express consideration for potential issues or limitations.
Phrase: Considering limitations

18.
Concepts: communicating complexity and timeline, mentions complexity of upcoming release
Relationship: The concepts are related in that they both involve designers communicating the complexity of updates and timelines.
Criteria: Communicating the complexity of updates and expected release timelines.
Phrase: Communicating complexity

19.
Concepts: expressing frustration, expressing dissatisfaction with avatar
Relationship: The concepts are related in that they both involve designers expressing negative emotions.
Criteria: Designers express frustration with limitations, features, or avatars.
Phrase: Expressing frustration

20.
Concepts: product gap identification, identifying gaps in existing tools
Relationship: The concepts are related in that they both involve identifying gaps or limitations.
Criteria: A user identifies a gap or limitation in the current software or market.
Phrase: Identifying gaps

21.
Concepts: providing development updates
Relationship: N/A
Criteria: Designers provide information about the software development process, timelines, or plans.
Phrase: Providing updates