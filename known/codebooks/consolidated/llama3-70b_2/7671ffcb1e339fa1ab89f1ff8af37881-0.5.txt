You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: demonstrating expertise, establishing credibility
- Users demonstrate knowledge or expertise in physics or a specific area.
- A user establishes their credibility or expertise in a particular field or subject.

2.
Concepts: sharing images, sharing visual content
- Users upload or share images or offer to provide visual content.
- Designer uploads or shares high-definition avatars or images.

3.
Concepts: form online community, online community as support network
- The user or designer mentions or implies the formation of a community around the online platform.
- The online community functions as a support network and channel for user-driven development.

4.
Concepts: clarification acknowledgement, acknowledging and confirming updates
- Acknowledging or confirming understanding of a clarification or explanation.
- Users acknowledge and confirm updates or information.

5.
Concepts: agreeing with focus areas, agreeing with development focus
- Indicating agreement or confirmation with a statement or idea.
- Users agree with the development focus or direction and accept development priorities.

6.
Concepts: appreciating updates, appreciating app evolution
- Users appreciate frequent updates and react positively to software updates.
- A user compliments or appreciates the progress or evolution of the app.

7.
Concepts: showing support, expressing support
- User shows support or encouragement for the development of Physics Lab.
- Users or designers express support and provide encouragement.

8.
Concepts: hardware limitations, consider hardware limitations
- Highlighting hardware limitations or regional differences
- Users consider hardware limitations or request device-specific features.

9.
Concepts: consider technical issues, assess technical feasibility
- Designers consider technical issues or limitations.
- A designer assesses the technical feasibility of a feature or request.

10.
Concepts: clarifying feature functionality, clarifying system capabilities
- Designers clarify features by explaining the behavior or functionality of a specific feature.
- Designers clarify system capabilities by explaining the testing status of a feature and clarifying the purpose or scope of a feature or test.

11.
Concepts: considering new features, detailing experimental features
- Designers consider the possibility of incorporating new features or experiments based on user needs.
- Designers research innovative features by providing details about experimental features or functionalities.

12.
Concepts: specify software compatibility, theorize about system compatibility
- Designers confirm system compatibility or specify software compatibility.
- Designers consider or theorize about system compatibility.

13.
Concepts: inquiring about problems, inquiring about user experiences or feedback
- Designers inquire about specific problems or issues users encountered.
- Users inquire about or seek feedback on user difficulties or experiences.

14.
Concepts: discussing technical challenges, highlight technical challenges
- Discussing potential technical challenges or limitations.
- Users highlight technical challenges or reveal potential usability challenges.

15.
Concepts: raising concerns, noting potential bugs
- Designers raise concerns or warn about potential issues with a specific feature or version.
- The designer notes potential bugs or issues in the software, such as the auto-layout algorithm.

16.
Concepts: technology constraints, describe technical constraints
- Discussing the impact of classroom technology constraints on software design.
- Users describe technical constraints or classroom limitations.

17.
Concepts: provide school context, provides context or background information
- Users provide context about school resources or focus.
- User or designer provides context or background information related to the online community or school.

18.
Concepts: explain school policies, explain educational norms
- Users explain school policies or restrictions.
- Users explain educational norms or common practices.

19.
Concepts: seeking expert input and asking about teachers' needs, inquiring about infrastructure and classroom environment
- Designers seek expert input and ask about teachers' needs.
- Designers inquire about infrastructure and classroom environment.

20.
Concepts: confirming user status, confirming teacher identity
- Designers or users confirm user status and clarify user roles.
- Designers or users confirm user roles as teachers.

21.
Concepts: seek software access, inquire about availability
- Users inquire about the process of downloading software or express interest in accessing or downloading software.
- Users inquire about the availability of the software on specific platforms or features.

22.
Concepts: engage with development, engaging with the development process and promising user involvement
- Users engage with the development process or express interest in ongoing development or updates.
- Users engage with the development process and designers promise user involvement.

23.
Concepts: requesting platform expansion, explore software expansion possibilities
- User requests or suggests expanding the platform's scope.
- Users express interest in or inquire about expanding the software's capabilities to other domains or areas.

24.
Concepts: community need, acknowledge feature needs, express needs
- Users express a need or desire for a specific feature or functionality.
- Users highlight needs or designers acknowledge feature needs.
- Users express their needs or requirements from the platform, indicate potential needs, or provide context for a need.

25.
Concepts: suggestion rationale, explain reasons
- Providing a reason or justification for a suggestion
- Users explain the reason for a particular action or decision, or explain the reasons behind a request.

26.
Concepts: elaborating on a question, provide additional context
- User elaborates on a question with an image.
- Users explain their response or provide additional context, offering an additional reason or explanation.

27.
Concepts: user convenience, praise software practicality
- A user emphasizes the importance of user convenience in the Physics Lab software.
- Users praise the practicality or usefulness of the Physics Lab software and online community.

28.
Concepts: suggesting categorization and refinement, suggesting a focused approach and promoting iterative refinement
- Users suggest categorization and refinement of features or content.
- Users suggest a focused approach and promote iterative refinement.

29.
Concepts: suggest practical applications, highlighting practical application
- Users describe or suggest practical use cases for the software.
- User or designer highlights the practical application or usefulness of a feature.

30.
Concepts: prioritizing user needs and satisfaction
- Designers prioritize user feedback and satisfaction to ensure a positive experience.
- Designers prioritize categorization and feature development or prioritize features to be developed or supported in the software.

31.
Concepts: explaining focus areas
- Explaining or justifying the focus or direction of the software development.
- Designers explain the focus on electricity and mechanics by explaining the focus on specific physics domains.

32.
Concepts: offering suggestions and ideas for community development
- Users or designers provide suggestions or ideas for the community.
- Users suggest features or improvements for circuit diagrams or wave mechanics.
===
Here are the definitions for each code:

---
1.
Concepts: demonstrating expertise, establishing credibility
Relationship: Demonstrating expertise is a means to establish credibility.
Criteria: Users demonstrate knowledge or expertise to establish credibility in a particular field or subject.
Phrase: Establish credibility through expertise.

2.
Concepts: sharing images, sharing visual content
Relationship: Sharing images is a form of sharing visual content.
Criteria: Users share images or visual content to support discussions or explanations.
Phrase: Share visual content.

3.
Concepts: form online community, online community as support network
Relationship: Forming an online community implies the existence of a support network.
Criteria: Users form an online community that functions as a support network for user-driven development.
Phrase: Form a support network community.

4.
Concepts: clarification acknowledgement, acknowledging and confirming updates
Relationship: Acknowledging clarifications implies confirming understanding of updates.
Criteria: Users acknowledge and confirm understanding of clarifications or updates.
Phrase: Acknowledge clarifications.

5.
Concepts: agreeing with focus areas, agreeing with development focus
Relationship: Agreeing with focus areas implies agreeing with the development focus.
Criteria: Users agree with the development focus or direction and accept development priorities.
Phrase: Agree with development focus.

6.
Concepts: appreciating updates, appreciating app evolution
Relationship: Appreciating updates implies appreciating the app's evolution.
Criteria: Users appreciate frequent updates and react positively to software updates.
Phrase: Appreciate updates.

7.
Concepts: showing support, expressing support
Relationship: Showing support implies expressing support.
Criteria: Users show support or encouragement for the development of Physics Lab.
Phrase: Express support.

8.
Concepts: hardware limitations, consider hardware limitations
Relationship: Identifying hardware limitations implies considering them.
Criteria: Users consider hardware limitations or regional differences when requesting features.
Phrase: Consider hardware limitations.

9.
Concepts: consider technical issues, assess technical feasibility
Relationship: Considering technical issues implies assessing technical feasibility.
Criteria: Designers consider technical issues or limitations when developing features.
Phrase: Assess technical feasibility.

10.
Concepts: clarifying feature functionality, clarifying system capabilities
Relationship: Clarifying feature functionality implies clarifying system capabilities.
Criteria: Designers clarify features by explaining their behavior or functionality and system capabilities.
Phrase: Clarify feature functionality.

11.
Concepts: considering new features, detailing experimental features
Relationship: Considering new features implies detailing experimental features.
Criteria: Designers consider incorporating new features or experiments based on user needs.
Phrase: Consider new features.

12.
Concepts: specify software compatibility, theorize about system compatibility
Relationship: Specifying software compatibility implies theorizing about system compatibility.
Criteria: Designers confirm system compatibility or specify software compatibility.
Phrase: Specify software compatibility.

13.
Concepts: inquiring about problems, inquiring about user experiences or feedback
Relationship: Inquiring about problems implies inquiring about user experiences or feedback.
Criteria: Designers inquire about specific problems or issues users encountered.
Phrase: Inquire about problems.

14.
Concepts: discussing technical challenges, highlight technical challenges
Relationship: Discussing technical challenges implies highlighting them.
Criteria: Users highlight technical challenges or reveal potential usability challenges.
Phrase: Highlight technical challenges.

15.
Concepts: raising concerns, noting potential bugs
Relationship: Raising concerns implies noting potential bugs.
Criteria: Designers raise concerns or warn about potential issues with a specific feature or version.
Phrase: Raise concerns.

16.
Concepts: technology constraints, describe technical constraints
Relationship: Identifying technology constraints implies describing them.
Criteria: Users describe technical constraints or classroom limitations.
Phrase: Describe technical constraints.

17.
Concepts: provide school context, provides context or background information
Relationship: Providing school context implies providing background information.
Criteria: Users provide context about school resources or focus.
Phrase: Provide school context.

18.
Concepts: explain school policies, explain educational norms
Relationship: Explaining school policies implies explaining educational norms.
Criteria: Users explain school policies or restrictions and educational norms or common practices.
Phrase: Explain school policies.

19.
Concepts: seeking expert input and asking about teachers' needs, inquiring about infrastructure and classroom environment
Relationship: Seeking expert input implies inquiring about infrastructure and classroom environment.
Criteria: Designers seek expert input and ask about teachers' needs and inquire about infrastructure and classroom environment.
Phrase: Seek expert input.

20.
Concepts: confirming user status, confirming teacher identity
Relationship: Confirming user status implies confirming teacher identity.
Criteria: Designers or users confirm user status and clarify user roles as teachers.
Phrase: Confirm user status.

21.
Concepts: seek software access, inquire about availability
Relationship: Seeking software access implies inquiring about availability.
Criteria: Users inquire about the process of downloading software or express interest in accessing or downloading software.
Phrase: Seek software access.

22.
Concepts: engage with development, engaging with the development process and promising user involvement
Relationship: Engaging with development implies promising user involvement.
Criteria: Users engage with the development process or express interest in ongoing development or updates.
Phrase: Engage with development.

23.
Concepts: requesting platform expansion, explore software expansion possibilities
Relationship: Requesting platform expansion implies exploring software expansion possibilities.
Criteria: Users request or suggest expanding the platform's scope.
Phrase: Request platform expansion.

24.
Concepts: community need, acknowledge feature needs, express needs
Relationship: Identifying community needs implies acknowledging feature needs and expressing needs.
Criteria: Users express a need or desire for a specific feature or functionality.
Phrase: Express needs.

25.
Concepts: suggestion rationale, explain reasons
Relationship: Providing a suggestion rationale implies explaining reasons.
Criteria: Users explain the reason for a particular action or decision, or explain the reasons behind a request.
Phrase: Explain reasons.

26.
Concepts: elaborating on a question, provide additional context
Relationship: Elaborating on a question implies providing additional context.
Criteria: Users explain their response or provide additional context, offering an additional reason or explanation.
Phrase: Provide additional context.

27.
Concepts: user convenience, praise software practicality
Relationship: Emphasizing user convenience implies praising software practicality.
Criteria: Users emphasize the importance of user convenience in the Physics Lab software.
Phrase: Emphasize user convenience.

28.
Concepts: suggesting categorization and refinement, suggesting a focused approach and promoting iterative refinement
Relationship: Suggesting categorization and refinement implies suggesting a focused approach and promoting iterative refinement.
Criteria: Users suggest categorization and refinement of features or content.
Phrase: Suggest categorization.

29.
Concepts: suggest practical applications, highlighting practical application
Relationship: Suggesting practical applications implies highlighting practical application.
Criteria: Users describe or suggest practical use cases for the software.
Phrase: Suggest practical applications.

30.
Concepts: prioritizing user needs and satisfaction
Relationship: Prioritizing user needs implies prioritizing satisfaction.
Criteria: Designers prioritize user feedback and satisfaction to ensure a positive experience.
Phrase: Prioritize user needs.

31.
Concepts: explaining focus areas
Relationship: N/A
Criteria: Designers explain the focus or direction of the software development.
Phrase: Explain focus areas.

32.
Concepts: offering suggestions and ideas for community development
Relationship: Offering suggestions implies offering ideas for community development.
Criteria: Users or designers provide suggestions or ideas for the community.
Phrase: Offer suggestions.

Let me know if you need any further assistance!