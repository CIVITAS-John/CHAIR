You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (24 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
24. {Repeat the input 24}
Relationship: {The logical relationship between concepts in input 24}
Criteria: {A sentence of consolidated criteria for code 24}
Label: {A consolidated label of code 24}
Category: {2-4 words for code 24}
---
~~~
1. download instructions, download and installation.
- Users ask questions about how to download the software.
- Instructions or clarifications on how to download or install the app.
- Community members asking about or receiving instructions on how to download or install the software.

2. system compatibility, compatibility issues.
- Instances where users discuss technical issues related to system compatibility.
- Concerns about software compatibility across systems/versions or technical requirements.
- Discussions about software compatibility with different operating systems and hardware.

3. positive user feedback, appreciation for software, usability and praise.
- Positive user expressions about the software's features, usability, or updates.
- Users expressing satisfaction or positive feedback about the software.
- Users' comments on the software's ease of use, practicality, and sharing positive experiences and feedback.

4. user feedback, user feedback dynamics.
- Comments, suggestions or reports from users regarding their experience or issues with the software's usability.
- Instances where users express their opinions or suggestions concerning the software's features, performance, and their direct interactions with developers.

5. platform updates, design updates.
- Designers sharing information about changes or updates to the Physics Lab platform.
- Discussions related to updates, changes, or improvements made to the Physics Lab software, as well as insights into the overall development process of the software.

6. software updates, software announcements.
- Information, announcements, or sharing of updates, releases, or changes to the software components or functionality.
- Instances where the designer announces updates or changes to the software.
- Instances where the designer announces new features, improvements, or updates to the software, and shares descriptions regarding these updates with the community.

7. development planning, development prioritization.
- Discussions or decisions regarding planned features, capabilities, and prioritization of development tasks.
- Discussions that outline the order and importance of developing certain features or aspects of the software.

8. participatory problem-solving, collaborative decision-making and problem solving.
- Discussions where community members engage collectively to solve a problem or improve a system aspect, demonstrating participatory design.
- Moments where decisions are made collectively with input from multiple community members or where community members work together to solve issues or propose solutions.

9. collaboration and consultation, consultation and inclusion.
- Designer soliciting input or feedback from community members.
- Examples of the designer seeking opinions, preferences, or information from the community to guide design decisions.

10. designer responsiveness to feedback, feedback acknowledgment and interaction.
- Instances of the designer acknowledging, responding to, or incorporating user feedback.
- Instances where designers interact with users by acknowledging and incorporating their feedback.

11. soliciting user input, participatory feedback.
- Instances where designers or developers actively seek feedback, suggestions, or input from the community or stakeholders.
- Instances where designers or developers ask for user suggestions and feedback, and where users are directly involved in the design process.

12. resource access, resource location.
- Instances of providing or requesting access to resources, guidance, or information about the platform.
- Interactions where users share or request information on how to access resources related to the platform.

13. recognition of effort.
- Acknowledgment of hard work put in by members of the community.
- Instances where users acknowledge the effort or work done by others, often showing appreciation.

14. knowledge sharing.
- Instances where participants share information, knowledge, tips, or resources within the community.
- Instances where community members share knowledge, expertise or resources related to physics education.

15. user feature requests.
- A user requesting or suggesting a new feature to be added to the software.
- Instances where users make specific requests or suggestions for new features or functionalities to be included in the software.
- Instances where users request or discuss platform features.

16. learning experience.
- The software's development and features enable students to actively engage in hands-on experiments and explore physics concepts, positively impacting the community's learning experience.
- Understanding how users interact with the tool and engage with new features to enhance their learning experience, as well as how they acquire knowledge about the tool's functionalities and updates.

17. scaffolding.
- The support and guidance provided by the designer to help users understand and use the Physics Lab software effectively.
- Providing support to help community members understand or engage with the content.

18. role identification.
- Users explicitly or implicitly identifying their roles or affiliations within the community.
- References indicating the participant's role as a teacher, educator, designer, or creator of content.

19. simulated experiment assessment.
- The design and development of a simulated experiment assessment function for electricity concepts.
- Discussions related to the planned feature for simulated experiment assessment and its educational value.

20. compatibility discussions.
- Conversations on Physics Lab's compatibility with various operating systems, devices, and browsers.
- Discussions or concerns about how the software performs on various systems or hardware configurations.

21. user-centered design.
- User-initiated discussions on software features and usability improvements.
- Instances where design approaches and decisions focus on meeting user needs and preferences.
- The Designer prioritizing user needs and expectations in the design process.

22. software development.
- Discussing the upcoming release of a new version of the software and its potential impact on user experience.
- Adaptation to software changes and implications of updates.

23. expressions of gratitude.
- Instances where participants express appreciation, thanks, or support towards each other, the designers, or the community.
- Expressions of gratitude or appreciation towards others.

24. prioritization.
- Designers explaining the order in which they will address different sections or features.
- Designers prioritize tasks or features for development.
===
Here is the output:

---
Categories: 
* Community Engagement
* Software Development
* User Experience
* Design and Planning
* Social Interaction
* Learning and Education

Definitions for each code:

1. download instructions, download and installation.
Relationship: Inclusion
Criteria: Users ask questions or receive instructions on how to download or install the software.
Label: Download and Installation Support
Category: Community Engagement

2. system compatibility, compatibility issues.
Relationship: Inclusion
Criteria: Discussions about software compatibility across systems/versions or technical requirements.
Label: System Compatibility Issues
Category: Software Development

3. positive user feedback, appreciation for software, usability and praise.
Relationship: Inclusion
Criteria: Users express satisfaction or positive feedback about the software.
Label: Positive User Feedback
Category: User Experience

4. user feedback, user feedback dynamics.
Relationship: Inclusion
Criteria: Users provide comments, suggestions, or reports on their experience with the software.
Label: User Feedback
Category: User Experience

5. platform updates, design updates.
Relationship: Inclusion
Criteria: Designers share information about changes or updates to the Physics Lab platform.
Label: Platform Updates
Category: Software Development

6. software updates, software announcements.
Relationship: Inclusion
Criteria: Designers announce updates, releases, or changes to the software components or functionality.
Label: Software Updates
Category: Software Development

7. development planning, development prioritization.
Relationship: Inclusion
Criteria: Discussions or decisions regarding planned features, capabilities, and prioritization of development tasks.
Label: Development Planning
Category: Design and Planning

8. participatory problem-solving, collaborative decision-making and problem solving.
Relationship: Inclusion
Criteria: Community members engage collectively to solve a problem or improve a system aspect.
Label: Participatory Problem-Solving
Category: Social Interaction

9. collaboration and consultation, consultation and inclusion.
Relationship: Inclusion
Criteria: Designers solicit input or feedback from community members.
Label: Collaboration and Consultation
Category: Social Interaction

10. designer responsiveness to feedback, feedback acknowledgment and interaction.
Relationship: Inclusion
Criteria: Designers acknowledge, respond to, or incorporate user feedback.
Label: Designer Responsiveness
Category: Social Interaction

11. soliciting user input, participatory feedback.
Relationship: Inclusion
Criteria: Designers actively seek feedback, suggestions, or input from the community or stakeholders.
Label: Soliciting User Input
Category: Social Interaction

12. resource access, resource location.
Relationship: Inclusion
Criteria: Users provide or request access to resources, guidance, or information about the platform.
Label: Resource Access
Category: Community Engagement

13. recognition of effort.
Relationship: Inclusion
Criteria: Users acknowledge the effort or work done by others.
Label: Recognition of Effort
Category: Social Interaction

14. knowledge sharing.
Relationship: Inclusion
Criteria: Participants share information, knowledge, tips, or resources within the community.
Label: Knowledge Sharing
Category: Learning and Education

15. user feature requests.
Relationship: Inclusion
Criteria: Users request or suggest new features to be added to the software.
Label: User Feature Requests
Category: User Experience

16. learning experience.
Relationship: Inclusion
Criteria: The software's development and features enable students to engage in hands-on experiments and explore physics concepts.
Label: Learning Experience
Category: Learning and Education

17. scaffolding.
Relationship: Inclusion
Criteria: The designer provides support and guidance to help users understand and use the Physics Lab software effectively.
Label: Scaffolding
Category: Learning and Education

18. role identification.
Relationship: Inclusion
Criteria: Users explicitly or implicitly identify their roles or affiliations within the community.
Label: Role Identification
Category: Social Interaction

19. simulated experiment assessment.
Relationship: Inclusion
Criteria: Discussions related to the planned feature for simulated experiment assessment and its educational value.
Label: Simulated Experiment Assessment
Category: Learning and Education

20. compatibility discussions.
Relationship: Inclusion
Criteria: Conversations on Physics Lab's compatibility with various operating systems, devices, and browsers.
Label: Compatibility Discussions
Category: Software Development

21. user-centered design.
Relationship: Inclusion
Criteria: Design approaches and decisions focus on meeting user needs and preferences.
Label: User-Centered Design
Category: Design and Planning

22. software development.
Relationship: Inclusion
Criteria: Discussions about the upcoming release of a new version of the software and its potential impact on user experience.
Label: Software Development
Category: Software Development

23. expressions of gratitude.
Relationship: Inclusion
Criteria: Participants express appreciation, thanks, or support towards each other, the designers, or the community.
Label: Expressions of Gratitude
Category: Social Interaction

24. prioritization.
Relationship: Inclusion
Criteria: Designers prioritize tasks or features for development.
Label: Prioritization
Category: Design and Planning