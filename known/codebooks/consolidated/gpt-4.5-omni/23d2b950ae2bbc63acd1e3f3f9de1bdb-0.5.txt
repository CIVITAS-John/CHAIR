You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (11 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
11. {Repeat the input 11}
Relationship: {The logical relationship between concepts in input 11}
Criteria: {A sentence of consolidated criteria for code 11}
Label: {A consolidated label of code 11}
Category: {2-4 words for code 11}
---
~~~
1. usability concerns, user feedback.
- Issues or suggestions related to the ease of use and practical aspects of the software.
- Comments and contributions from users that provide suggestions, highlight issues, or express needs, especially focusing on the software's ease of use and practicality.

2. feature requests, implementing user feedback.
- Instances where users make specific requests or suggestions for new features or content to be included in the software.
- Changes or updates in the software that reflect user suggestions or needs.

3. feedback processes, collaborative design.
- Instances where designers or developers ask for user suggestions and feedback, and where user input influences design decisions and software development.
- Instances where users contribute to the design process through feedback, suggestions, or active participation, and where designers actively seek and incorporate this input.

4. providing updates, feature announcements.
- Designers sharing information about new features or changes in the software.
- Instances where designers announce new features, improvements, or updates about the software to the community.

5. asking for help, request for resources.
- Participants seeking assistance or information from the community.
- Instances where participants ask for specific resources or information.

6. user inquiry, inquiry and response.
- Instances where users ask questions to gain information or clarify doubts.
- Instances where participants ask questions and receive responses.

7. collaborative decision-making, collaborative problem solving.
- Moments where decisions are made collectively with input from multiple community members.
- Interactions where community members collectively work through issues or propose solutions.

8. information exchange, knowledge sharing.
- Instances where participants share useful information or resources with others.
- Instances where participants share information, tips, or resources that contribute to collective learning.

9. user gratitude, expressions of support.
- Expressions of thanks or acknowledgment from users towards designers or the community.
- Instances where users express support or appreciation for the designers and the project.

10. non-verbal communication, emojis and informal communication.
- Use of emojis or images to express reactions, emotions, or illustrate points.
- Use of emojis or informal language that adds a personal touch to the interaction.

11. teacher identity, designer identity.
- References indicating the participant's role as a teacher or educator.
- References indicating the participant's role as a designer or creator of content.
===
---
Categories: 
* User Experience
* Community Engagement
* Design Collaboration
* Communication Dynamics
* Role Identification

Definitions for each code (11 in total):
1. usability concerns, user feedback.
Relationship: Both concepts focus on user experience and the practical aspects of software use.
Criteria: Issues, suggestions, or contributions from users related to the ease of use and practical aspects of the software.
Label: Usability Feedback
Category: User Experience

2. feature requests, implementing user feedback.
Relationship: Both concepts involve user suggestions leading to changes or additions in the software.
Criteria: Instances where users request new features or content, and subsequent changes or updates in the software that reflect these suggestions.
Label: Feature Implementation
Category: Design Collaboration

3. feedback processes, collaborative design.
Relationship: Both concepts involve the process of gathering and incorporating user input into design decisions.
Criteria: Instances where user feedback influences design decisions, and where users actively participate in the design process.
Label: Participatory Design
Category: Design Collaboration

4. providing updates, feature announcements.
Relationship: Both concepts involve designers sharing information about changes or new features with the community.
Criteria: Instances where designers announce new features, improvements, or updates to the community.
Label: Update Announcements
Category: Communication Dynamics

5. asking for help, request for resources.
Relationship: Both concepts involve participants seeking assistance or information from the community.
Criteria: Instances where participants ask for help, specific resources, or information.
Label: Help Requests
Category: Community Engagement

6. user inquiry, inquiry and response.
Relationship: Both concepts involve users asking questions and receiving information or clarification.
Criteria: Instances where users ask questions and receive responses from the community.
Label: User Inquiries
Category: Community Engagement

7. collaborative decision-making, collaborative problem solving.
Relationship: Both concepts involve collective input and effort from community members to make decisions or solve problems.
Criteria: Interactions where community members collectively make decisions or work through issues.
Label: Collective Problem-Solving
Category: Community Engagement

8. information exchange, knowledge sharing.
Relationship: Both concepts involve participants sharing useful information or resources with others.
Criteria: Instances where participants share information, tips, or resources that contribute to collective learning.
Label: Knowledge Sharing
Category: Community Engagement

9. user gratitude, expressions of support.
Relationship: Both concepts involve expressions of thanks or acknowledgment from users towards designers or the community.
Criteria: Instances where users express support, appreciation, or thanks to designers or the community.
Label: User Appreciation
Category: Communication Dynamics

10. non-verbal communication, emojis and informal communication.
Relationship: Both concepts involve the use of non-verbal elements to express reactions or emotions.
Criteria: Use of emojis, images, or informal language to add a personal touch to interactions.
Label: Informal Communication
Category: Communication Dynamics

11. teacher identity, designer identity.
Relationship: Both concepts involve references to the participant's role within the community.
Criteria: References indicating the participant's role as a teacher, educator, designer, or content creator.
Label: Role Identification
Category: Role Identification
---