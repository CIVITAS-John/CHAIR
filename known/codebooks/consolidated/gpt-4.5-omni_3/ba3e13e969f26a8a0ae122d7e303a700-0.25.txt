You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (50 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
50. 
Concepts: {Repeat the input 50}
Relationship: {What is logical relationship between concepts in code 50, or N/A if not applicable}
Criteria: {Who did what, and how for code 50}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: describing educational use cases, describing classroom applications
- Users describe educational use cases and discuss the practical application of the software in educational settings.
- Users describe how the app is applied in classroom settings and the impact of the classroom environment on software use.

2.
Concepts: describing outdated systems, sharing info about old computer systems
- Users comment on outdated computer systems and describe the outdated state of school systems and technology.
- A user shares information about the old computer systems in their school.

3.
Concepts: identifying as a teacher, mentioning teaching experience
- Users or designers introduce their teaching experience and identify themselves or others as teachers.
- Users mention their experience teaching at the high school or middle school level.

4.
Concepts: sharing identity per request, sharing professional background
- Users share their professional background or teaching experience upon request.
- Users provide information about their professional background to help understand the community's composition.

5.
Concepts: contextualizing response, referencing past incidents
- Users provide context for their responses based on past experiences.
- Users describe past incidents to provide context for current practices.

6.
Concepts: requesting resources, resource location inquiry
- Users express needs and request specific resources or information.
- A user asks for the location of a resource.

7.
Concepts: requesting technical help, asking technical questions
- Users mention technical issues and request technical help.
- Users ask technical questions indicating areas of interest or potential issues.

8.
Concepts: new user interaction, seeking usage support
- User inquires about how to interact with or access the software.
- Users ask questions to gain knowledge or support related to the software's usage.

9.
Concepts: highlighting student engagement, sharing positive experiences
- Users comment on and highlight student engagement with the software.
- Users share their experiences and positive student responses when using the software.

10.
Concepts: praising software, commenting on usability and effectiveness
- Users provide comparative feedback, highlighting strengths, and express satisfaction and appreciation for specific features of the software.
- Users comment on the usability and practicality of the software, as well as the effectiveness of its simulation features.

11.
Concepts: expressing feature needs, expressing interest in software
- Users express their needs or preferences for specific software features.
- Users express interest or need for a specific version of the software.

12.
Concepts: visual confirmation, confirming developer's argument
- A developer seeks visual confirmation from a user.
- Users confirm developers' arguments, and developers reach conclusions based on user feedback.

13.
Concepts: acknowledging assistance, providing community context
- Users acknowledge assistance and express support within the community.
- Users respond to community discussions by providing context or expressing gratitude.

14.
Concepts: appreciation of plans, complimenting development progress
- User expresses appreciation for the current state of the project.
- Users show interest in development progress and compliment the updates.

15.
Concepts: appreciation of feedback, providing positive responses
- Instances where feedback is appreciated and users are encouraged to provide more.
- Users provide short, positive responses to statements or suggestions.

16.
Concepts: enthusiasm, agreeing with design ideas
- Users and designers express enthusiasm for ideas or support.
- Users agree with or support design ideas or suggestions made by others.

17.
Concepts: version release management, describing release and iteration process, describing software updates
- A designer discusses the management and release of different software versions.
- Designers describe the release and iteration process of different software versions.
- Designers describe the nature, scope, process, and timeline of software updates.

18.
Concepts: disseminating information, providing information and updates
- Designers share updates, resources, or information with the community.
- Designers provide information, updates, and instructions to help users understand and use the software.

19.
Concepts: discussing software updates, providing development updates
- Designers discuss updates to components and internal changes in the software.
- Designers share updates on the progress and current status of software development.

20.
Concepts: notifying about version updates, informing about significant updates
- Designers provide version update notes and notifications about new updates or versions.
- Designers inform and prepare the community for significant updates or changes to the platform.

21.
Concepts: share update timeline, announcing update schedule
- Sharing the timeline or schedule for upcoming updates.
- Designers announce the expected timing for updates and provide specific dates or timelines.

22.
Concepts: simulation enhancement, discussing experimental simulations
- Designers discuss enhancements to simulation features.
- Designers discuss plans and features related to simulated experiments.

23.
Concepts: emphasizing continuous improvement, discuss iterative development
- Designers discuss feature expansion, continuous improvement, and product enhancements.
- Designers discuss the process of continuously refining and improving the product based on feedback and testing.

24.
Concepts: providing development timeline, discussing development priorities
- Designers provide a timeline and outline the planned sequence for developing new features.
- Designers outline and discuss the sequence and priorities of development tasks.

25.
Concepts: setting development goals, explaining design goals and rationale
- Designers describe or set specific goals for software development.
- Designers explain the goals and rationale behind development plans and design strategies.

26.
Concepts: future update, promising future features
- A developer mentions future updates or features.
- Designers promise to implement or perfect a feature in the future.

27.
Concepts: advising on design refinement, simplification and refinement in design
- Designers and users suggest categorizing, refining, and simplifying software design.
- Users and designers discuss the importance of simplification and refinement in design.

28.
Concepts: catering to user needs, explaining feature needs
- Designers aim to improve features to better meet user needs.
- Designers or users explain why a certain feature or update is necessary or beneficial.

29.
Concepts: long-term stability, emphasizing feature stability and importance
- Instances where the long-term stability of a feature is discussed.
- Designers discuss the stability and emphasize the importance of features for long-term use.

30.
Concepts: ensuring system compatibility, suggest checking compatibility of the system
- Designers consider future actions, discuss system requirements, and ensure compatibility with older systems.
- Designers suggest checking system compatibility for older operating systems.

31.
Concepts: elaborating responses, explaining timelines and complexity
- Designers elaborate on responses, indicating complexity and time requirements.
- Designers provide estimated timelines and explain the complexity of tasks.

32.
Concepts: acknowledging limitations, addressing technical limitations, explaining limitations
- Designers acknowledge limitations or constraints in usability.
- Designers address technical limitations and explain how they can be addressed or worked around.
- Designers explain limitations, discuss drawbacks, and suggest why problems cannot be solved due to system constraints.

33.
Concepts: expressing community gratitude, committing to improvements
- Designers express gratitude to the community and commit to improving based on feedback.
- Designers promise to improve the product and acknowledge user feedback, committing to future updates and features.

34.
Concepts: gathering user opinions, provide reason for gathering opinions
- Teams gather opinions or feedback from users before starting new projects or features.
- The designer explains the reasoning behind gathering opinions before starting a new feature.

35.
Concepts: inviting feedback, elaborating and encouraging feedback, iterative development based on user feedback
- Designers invite users to provide feedback or suggest new features and improvements.
- Designers elaborate on suggestions and encourage users to provide more detailed feedback or requirements.
- The designer mentions upcoming updates and encourages user input for future development.

36.
Concepts: addressing user concerns, considering user experience, addressing usability concerns
- Designers interact with users and address their concerns to help resolve issues.
- Designers consider user experience in their responses and seek feedback on encountered issues.
- Designers address concerns and users identify usability issues, suggesting improvements.

37.
Concepts: suggesting usability features, seeking and accepting suggestions
- Designers make suggestions for features that could enhance usability.
- Designers seek consensus from users and accept or acknowledge their suggestions.

38.
Concepts: offering resources, sharing community resources
- Designers offer to provide or upload resources for the community.
- Designers or users share resources such as links, plans, or announcements.

39.
Concepts: demonstrating politeness, maintaining polite communication
- Users or designers express politeness or demonstrate etiquette in their interactions.
- Users or designers maintain social norms by using polite expressions and greetings.

40.
Concepts: classroom setup inquiry, inquiring about classroom internet
- The designer inquires about the classroom setup or environment.
- Designers inquire about the availability of internet in classrooms to consider implementation context.

41.
Concepts: seeking context, identifying user needs
- Designers seek context or background information from users.
- Designers identify user needs and seek to understand their roles to provide appropriate resources.

42.
Concepts: providing design support, confirming and responding to queries
- Designers provide confirmation or support in response to user queries or suggestions.
- Designers confirm their understanding of user requests and respond to clarifications.

43.
Concepts: discussing interface layout, discussing usability and interface
- Designers and users discuss the feasibility of group sharing and interface layout decisions.
- Participants discuss the user interface and usability in different contexts.

44.
Concepts: providing user support, offering personalized support
- Designers or users provide technical support and guidance about the software.
- Designers offer personalized assistance and support to users.

45.
Concepts: share tips from experience, reflecting on past experiences
- Designers share tips or tricks based on their past experiences.
- Designers reflect on and reference past experiences to explain points.

46.
Concepts: instructional design, highlighting educational utility
- Designers discuss the instructional design approach to make the software user-friendly.
- Designers discuss and highlight the educational tools and utility of the software.

47.
Concepts: explaining design philosophy, explaining software focus areas
- Designers discuss and explain the principles and philosophy guiding the software design.
- Designers discuss and explain the focus areas and subjects of the software.

48.
Concepts: using examples and images, highlighting practical applications
- Designers provide examples and use images to help demonstrate or explain features.
- Designers describe usage scenarios and highlight the practical applications of features.

49.
Concepts: explaining technical aspects, explaining usability and functionality
- Designers explain technical artifacts and aspects of the development process.
- Designers explain the usability features and the functionality and purpose of specific components or features.

50.
Concepts: previewing and introducing updates
- Designers share previews and introduce users to upcoming update content.
- Users or designers share images and visual updates.
===
---
Definitions for each code (50 in total):
1.
Concepts: describing educational use cases, describing classroom applications
Relationship: Both concepts involve users discussing how the software is utilized in educational settings.
Criteria: Users describe educational use cases and discuss the practical application of the software in classroom settings.
Phrase: Describing educational applications

2.
Concepts: describing outdated systems, sharing info about old computer systems
Relationship: Both concepts involve users discussing outdated technology in educational environments.
Criteria: Users comment on outdated computer systems and share information about the outdated state of school systems and technology.
Phrase: Discussing outdated technology

3.
Concepts: identifying as a teacher, mentioning teaching experience
Relationship: Both concepts involve users identifying themselves as teachers and mentioning their teaching experience.
Criteria: Users introduce their teaching experience and identify themselves as teachers.
Phrase: Identifying teaching experience

4.
Concepts: sharing identity per request, sharing professional background
Relationship: Both concepts involve users sharing their professional background upon request.
Criteria: Users share their professional background or teaching experience upon request.
Phrase: Sharing professional background

5.
Concepts: contextualizing response, referencing past incidents
Relationship: Both concepts involve users providing context for their responses by referencing past experiences.
Criteria: Users provide context for their responses based on past incidents.
Phrase: Contextualizing with past experiences

6.
Concepts: requesting resources, resource location inquiry
Relationship: Both concepts involve users requesting specific resources or information.
Criteria: Users express needs and request specific resources or information.
Phrase: Requesting resources

7.
Concepts: requesting technical help, asking technical questions
Relationship: Both concepts involve users seeking technical assistance.
Criteria: Users mention technical issues and request technical help.
Phrase: Seeking technical assistance

8.
Concepts: new user interaction, seeking usage support
Relationship: Both concepts involve new users seeking support for using the software.
Criteria: New users inquire about how to interact with or access the software.
Phrase: Seeking usage support

9.
Concepts: highlighting student engagement, sharing positive experiences
Relationship: Both concepts involve users sharing positive experiences related to student engagement with the software.
Criteria: Users highlight student engagement and share positive experiences with the software.
Phrase: Sharing positive engagement experiences

10.
Concepts: praising software, commenting on usability and effectiveness
Relationship: Both concepts involve users providing positive feedback on the software's usability and effectiveness.
Criteria: Users praise the software and comment on its usability and effectiveness.
Phrase: Praising software usability

11.
Concepts: expressing feature needs, expressing interest in software
Relationship: Both concepts involve users expressing their needs or interest in specific software features.
Criteria: Users express their needs or preferences for specific software features.
Phrase: Expressing feature needs

12.
Concepts: visual confirmation, confirming developer's argument
Relationship: Both concepts involve users providing visual confirmation to support developers' arguments.
Criteria: Users confirm developers' arguments through visual confirmation.
Phrase: Confirming with visual evidence

13.
Concepts: acknowledging assistance, providing community context
Relationship: Both concepts involve users acknowledging assistance and providing context within the community.
Criteria: Users acknowledge assistance and provide context or express gratitude within the community.
Phrase: Acknowledging community assistance

14.
Concepts: appreciation of plans, complimenting development progress
Relationship: Both concepts involve users expressing appreciation for development plans and progress.
Criteria: Users express appreciation for development plans and compliment the progress.
Phrase: Appreciating development progress

15.
Concepts: appreciation of feedback, providing positive responses
Relationship: Both concepts involve users appreciating feedback and providing positive responses.
Criteria: Users appreciate feedback and provide positive responses to suggestions.
Phrase: Appreciating feedback

16.
Concepts: enthusiasm, agreeing with design ideas
Relationship: Both concepts involve users expressing enthusiasm and agreement with design ideas.
Criteria: Users express enthusiasm and agree with design ideas.
Phrase: Expressing enthusiasm for design ideas

17.
Concepts: version release management, describing release and iteration process, describing software updates
Relationship: All concepts involve designers discussing the management and process of software updates and releases.
Criteria: Designers discuss the management, release, and iteration process of software updates.
Phrase: Managing software updates

18.
Concepts: disseminating information, providing information and updates
Relationship: Both concepts involve designers sharing information and updates with the community.
Criteria: Designers disseminate information and provide updates to the community.
Phrase: Providing updates

19.
Concepts: discussing software updates, providing development updates
Relationship: Both concepts involve designers discussing and providing updates on software development.
Criteria: Designers discuss and provide updates on software development.
Phrase: Discussing development updates

20.
Concepts: notifying about version updates, informing about significant updates
Relationship: Both concepts involve designers notifying the community about significant software updates.
Criteria: Designers notify the community about significant software updates.
Phrase: Notifying about updates

21.
Concepts: share update timeline, announcing update schedule
Relationship: Both concepts involve designers sharing the timeline or schedule for upcoming updates.
Criteria: Designers announce the timeline or schedule for upcoming updates.
Phrase: Announcing update schedule

22.
Concepts: simulation enhancement, discussing experimental simulations
Relationship: Both concepts involve designers discussing enhancements to simulation features.
Criteria: Designers discuss enhancements and experimental features related to simulations.
Phrase: Discussing simulation enhancements

23.
Concepts: emphasizing continuous improvement, discuss iterative development
Relationship: Both concepts involve designers discussing continuous improvement and iterative development.
Criteria: Designers discuss continuous improvement and iterative development of the software.
Phrase: Emphasizing continuous improvement

24.
Concepts: providing development timeline, discussing development priorities
Relationship: Both concepts involve designers providing a timeline and discussing development priorities.
Criteria: Designers provide a timeline and outline development priorities.
Phrase: Outlining development priorities

25.
Concepts: setting development goals, explaining design goals and rationale
Relationship: Both concepts involve designers setting and explaining development goals and rationale.
Criteria: Designers set and explain development goals and rationale.
Phrase: Setting development goals

26.
Concepts: future update, promising future features
Relationship: Both concepts involve designers mentioning and promising future updates or features.
Criteria: Designers mention and promise future updates or features.
Phrase: Promising future updates

27.
Concepts: advising on design refinement, simplification and refinement in design
Relationship: Both concepts involve advising on and discussing the importance of design refinement and simplification.
Criteria: Designers and users advise on and discuss the importance of design refinement and simplification.
Phrase: Advising on design refinement

28.
Concepts: catering to user needs, explaining feature needs
Relationship: Both concepts involve designers explaining and aiming to meet user needs through feature improvements.
Criteria: Designers explain and aim to improve features to better meet user needs.
Phrase: Catering to user needs

29.
Concepts: long-term stability, emphasizing feature stability and importance
Relationship: Both concepts involve discussing the stability and importance of features for long-term use.
Criteria: Designers discuss the stability and emphasize the importance of features for long-term use.
Phrase: Emphasizing feature stability

30.
Concepts: ensuring system compatibility, suggest checking compatibility of the system
Relationship: Both concepts involve ensuring and suggesting checking system compatibility.
Criteria: Designers ensure and suggest checking system compatibility with older systems.
Phrase: Ensuring system compatibility

31.
Concepts: elaborating responses, explaining timelines and complexity
Relationship: Both concepts involve designers elaborating on responses and explaining timelines and complexity.
Criteria: Designers elaborate on responses and explain timelines and complexity of tasks.
Phrase: Explaining task complexity

32.
Concepts: acknowledging limitations, addressing technical limitations, explaining limitations
Relationship: All concepts involve designers acknowledging, addressing, and explaining technical limitations.
Criteria: Designers acknowledge, address, and explain technical limitations.
Phrase: Addressing technical limitations

33.
Concepts: expressing community gratitude, committing to improvements
Relationship: Both concepts involve designers expressing gratitude to the community and committing to improvements.
Criteria: Designers express gratitude to the community and commit to improvements based on feedback.
Phrase: Committing to improvements

34.
Concepts: gathering user opinions, provide reason for gathering opinions
Relationship: Both concepts involve gathering user opinions and explaining the reason for it.
Criteria: Designers gather user opinions and explain the reason for doing so.
Phrase: Gathering user opinions

35.
Concepts: inviting feedback, elaborating and encouraging feedback, iterative development based on user feedback
Relationship: All concepts involve inviting, elaborating on, and encouraging feedback for iterative development.
Criteria: Designers invite, elaborate on, and encourage feedback for iterative development.
Phrase: Encouraging user feedback

36.
Concepts: addressing user concerns, considering user experience, addressing usability concerns
Relationship: All concepts involve addressing user concerns and considering user experience and usability.
Criteria: Designers address user concerns and consider user experience and usability.
Phrase: Addressing user concerns

37.
Concepts: suggesting usability features, seeking and accepting suggestions
Relationship: Both concepts involve suggesting usability features and seeking and accepting user suggestions.
Criteria: Designers suggest usability features and seek and accept user suggestions.
Phrase: Seeking usability suggestions

38.
Concepts: offering resources, sharing community resources
Relationship: Both concepts involve offering and sharing resources within the community.
Criteria: Designers or users offer and share resources within the community.
Phrase: Sharing community resources

39.
Concepts: demonstrating politeness, maintaining polite communication
Relationship: Both concepts involve demonstrating and maintaining politeness in communication.
Criteria: Users or designers demonstrate and maintain politeness in their interactions.
Phrase: Maintaining polite communication

40.
Concepts: classroom setup inquiry, inquiring about classroom internet
Relationship: Both concepts involve inquiring about the classroom setup and internet availability.
Criteria: Designers inquire about the classroom setup and internet availability.
Phrase: Inquiring about classroom setup

41.
Concepts: seeking context, identifying user needs
Relationship: Both concepts involve seeking context and identifying user needs.
Criteria: Designers seek context and identify user needs to provide appropriate resources.
Phrase: Identifying user needs

42.
Concepts: providing design support, confirming and responding to queries
Relationship: Both concepts involve providing design support and confirming and responding to user queries.
Criteria: Designers provide design support and confirm and respond to user queries.
Phrase: Providing design support

43.
Concepts: discussing interface layout, discussing usability and interface
Relationship: Both concepts involve discussing the interface layout and usability.
Criteria: Designers and users discuss the interface layout and usability.
Phrase: Discussing interface usability

44.
Concepts: providing user support, offering personalized support
Relationship: Both concepts involve providing and offering personalized user support.
Criteria: Designers or users provide and offer personalized support.
Phrase: Offering personalized support

45.
Concepts: share tips from experience, reflecting on past experiences
Relationship: Both concepts involve sharing tips and reflecting on past experiences.
Criteria: Designers share tips and reflect on past experiences.
Phrase: Sharing tips from experience

46.
Concepts: instructional design, highlighting educational utility
Relationship: Both concepts involve discussing instructional design and highlighting educational utility.
Criteria: Designers discuss instructional design and highlight the educational utility of the software.
Phrase: Highlighting educational utility

47.
Concepts: explaining design philosophy, explaining software focus areas
Relationship: Both concepts involve explaining the design philosophy and focus areas of the software.
Criteria: Designers explain the design philosophy and focus areas of the software.
Phrase: Explaining design philosophy

48.
Concepts: using examples and images, highlighting practical applications
Relationship: Both concepts involve using examples and images to highlight practical applications.
Criteria: Designers use examples and images to highlight practical applications.
Phrase: Highlighting practical applications

49.
Concepts: explaining technical aspects, explaining usability and functionality
Relationship: Both concepts involve explaining technical aspects and usability and functionality.
Criteria: Designers explain technical aspects and usability and functionality of the software.
Phrase: Explaining technical aspects

50.
Concepts: previewing and introducing updates
Relationship: Both concepts involve previewing and introducing upcoming updates.
Criteria: Designers preview and introduce upcoming updates.
Phrase: Previewing updates
---