You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (23 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
23. {Repeat the input 23}
Relationship: {The logical relationship between concepts in input 23}
Criteria: {A sentence of consolidated criteria for code 23}
Label: {A consolidated label of code 23}
Category: {2-4 words for code 23}
---
~~~
1. development planning, development prioritization.
- Discussions or decisions regarding planned features, capabilities, and prioritization of development tasks.
- Discussions that outline the order and importance of developing certain features or aspects of the software.

2. positive user feedback, appreciation for software.
- Positive user expressions about the software's features, usability, or updates.
- Users expressing satisfaction or positive feedback about the software.

3. system compatibility, compatibility issues.
- Instances where users discuss technical issues related to system compatibility.
- Concerns about software compatibility across systems/versions or technical requirements.
- Discussions about software compatibility with different operating systems and hardware.

4. download instructions, download and installation.
- Users ask questions about how to download the software.
- Instructions or clarifications on how to download or install the app.
- Community members asking about or receiving instructions on how to download or install the software.

5. software updates, software announcements, feature updates communication.
- Information, announcements, or sharing of updates, releases, or changes to the software components or functionality.
- Instances where the designer announces updates or changes to the software.
- Instances where the designer announces new features, improvements, or updates to the software, and shares descriptions regarding these updates with the community.
- Communications that inform the community about updates, new features, or changes in the software.

6. collaboration and consultation, consultation and inclusion.
- Designer soliciting input or feedback from community members.
- Examples of the designer seeking opinions, preferences, or information from the community to guide design decisions.

7. designer responsiveness to feedback, feedback acknowledgment and interaction.
- Instances of the designer acknowledging, responding to, or incorporating user feedback.
- Instances where designers interact with users by acknowledging and incorporating their feedback.

8. designer interaction, designer communication.
- Instances where the designer provides updates, information, or responds to user queries, requests, feedback, or suggestions.
- Interaction between the designer and the community, focusing on responses to inquiries, updates, and information sharing.

9. soliciting user input, participatory feedback.
- Instances where designers or developers actively seek feedback, suggestions, or input from the community or stakeholders.
- Instances where designers or developers ask for user suggestions and feedback, and where users are directly involved in the design process.

10. user-centered design, user-driven design suggestions.
- User-initiated discussions on software features and usability improvements.
- Instances where design approaches and decisions focus on meeting user needs and preferences.
- The Designer prioritizing user needs and expectations in the design process.
- User-provided suggestions that aim to influence the design and feature set of the platform.

11. resource access, resource location.
- Instances of providing or requesting access to resources, guidance, or information about the platform.
- Interactions where users share or request information on how to access resources related to the platform.

12. visual reactions, emotional expressions.
- Instances where participants use emojis or images to express reactions and emotions.
- Instances of community members expressing emotions through language or non-text elements.

13. recognition of effort.
- Acknowledgment of hard work put in by members of the community.
- Instances where users acknowledge the effort or work done by others, often showing appreciation.

14. knowledge sharing.
- Instances where participants share information, knowledge, tips, or resources within the community.
- Instances where community members share knowledge, expertise or resources related to physics education.
- Instances of users seeking or sharing information, knowledge, or resources within the online community.

15. user feature requests.
- A user requesting or suggesting a new feature to be added to the software.
- Instances where users make specific requests or suggestions for new features or functionalities to be included in the software.
- Instances where users request or discuss platform features.

16. learning experience.
- The software's development and features enable students to actively engage in hands-on experiments and explore physics concepts, positively impacting the community's learning experience.
- Understanding how users interact with the tool and engage with new features to enhance their learning experience, as well as how they acquire knowledge about the tool's functionalities and updates.

17. scaffolding.
- The support and guidance provided by the designer to help users understand and use the Physics Lab software effectively.
- Providing support to help community members understand or engage with the content.

18. role identification.
- Users explicitly or implicitly identifying their roles or affiliations within the community.
- References indicating the participant's role as a teacher, educator, designer, or creator of content.

19. simulated experiment assessment.
- The design and development of a simulated experiment assessment function for electricity concepts.
- Discussions related to the planned feature for simulated experiment assessment and its educational value.

20. compatibility discussions.
- Conversations on Physics Lab's compatibility with various operating systems, devices, and browsers.
- Discussions or concerns about how the software performs on various systems or hardware configurations.

21. software development.
- Discussing the upcoming release of a new version of the software and its potential impact on user experience.
- Adaptation to software changes and implications of updates.

22. expressions of gratitude.
- Instances where participants express appreciation, thanks, or support towards each other, the designers, or the community.
- Expressions of gratitude or appreciation towards others.

23. prioritization.
- Designers explaining the order in which they will address different sections or features.
- Designers prioritize tasks or features for development.
===
Here is the output format with the requested information:

---
Categories:
* Community Engagement
* Software Development
* User Experience
* Learning and Feedback
* Resource Sharing
* Emotional Expression
* Social Dynamics
* Role Identification

Definitions for each code:

1. development planning, development prioritization
Relationship: Inclusion
Criteria: Discussions or decisions regarding planned features, capabilities, and prioritization of development tasks.
Label: Development Planning
Category: Software Development

2. positive user feedback, appreciation for software
Relationship: Parallel
Criteria: Positive user expressions about the software's features, usability, or updates.
Label: Positive Feedback
Category: User Experience

3. system compatibility, compatibility issues
Relationship: Inclusion
Criteria: Instances where users discuss technical issues related to system compatibility.
Label: System Compatibility
Category: Software Development

4. download instructions, download and installation
Relationship: Inclusion
Criteria: Users ask questions about how to download the software.
Label: Download Instructions
Category: User Experience

5. software updates, software announcements, feature updates communication
Relationship: Inclusion
Criteria: Information, announcements, or sharing of updates, releases, or changes to the software components or functionality.
Label: Software Updates
Category: Software Development

6. collaboration and consultation, consultation and inclusion
Relationship: Inclusion
Criteria: Designer soliciting input or feedback from community members.
Label: Collaboration and Consultation
Category: Learning and Feedback

7. designer responsiveness to feedback, feedback acknowledgment and interaction
Relationship: Inclusion
Criteria: Instances of the designer acknowledging, responding to, or incorporating user feedback.
Label: Designer Responsiveness
Category: Learning and Feedback

8. designer interaction, designer communication
Relationship: Inclusion
Criteria: Instances where the designer provides updates, information, or responds to user queries, requests, feedback, or suggestions.
Label: Designer Interaction
Category: Learning and Feedback

9. soliciting user input, participatory feedback
Relationship: Inclusion
Criteria: Instances where designers or developers actively seek feedback, suggestions, or input from the community or stakeholders.
Label: Soliciting User Input
Category: Learning and Feedback

10. user-centered design, user-driven design suggestions
Relationship: Inclusion
Criteria: User-initiated discussions on software features and usability improvements.
Label: User-Centered Design
Category: User Experience

11. resource access, resource location
Relationship: Inclusion
Criteria: Instances of providing or requesting access to resources, guidance, or information about the platform.
Label: Resource Access
Category: Resource Sharing

12. visual reactions, emotional expressions
Relationship: Parallel
Criteria: Instances where participants use emojis or images to express reactions and emotions.
Label: Emotional Expressions
Category: Emotional Expression

13. recognition of effort
Relationship: Inclusion
Criteria: Acknowledgment of hard work put in by members of the community.
Label: Recognition of Effort
Category: Social Dynamics

14. knowledge sharing
Relationship: Inclusion
Criteria: Instances where participants share information, knowledge, tips, or resources within the community.
Label: Knowledge Sharing
Category: Resource Sharing

15. user feature requests
Relationship: Inclusion
Criteria: A user requesting or suggesting a new feature to be added to the software.
Label: User Feature Requests
Category: Software Development

16. learning experience
Relationship: Inclusion
Criteria: The software's development and features enable students to actively engage in hands-on experiments and explore physics concepts, positively impacting the community's learning experience.
Label: Learning Experience
Category: Learning and Feedback

17. scaffolding
Relationship: Inclusion
Criteria: The support and guidance provided by the designer to help users understand and use the Physics Lab software effectively.
Label: Scaffolding
Category: Learning and Feedback

18. role identification
Relationship: Inclusion
Criteria: Users explicitly or implicitly identifying their roles or affiliations within the community.
Label: Role Identification
Category: Role Identification

19. simulated experiment assessment
Relationship: Inclusion
Criteria: The design and development of a simulated experiment assessment function for electricity concepts.
Label: Simulated Experiment Assessment
Category: Software Development

20. compatibility discussions
Relationship: Inclusion
Criteria: Conversations on Physics Lab's compatibility with various operating systems, devices, and browsers.
Label: Compatibility Discussions
Category: Software Development

21. software development
Relationship: Inclusion
Criteria: Discussing the upcoming release of a new version of the software and its potential impact on user experience.
Label: Software Development
Category: Software Development

22. expressions of gratitude
Relationship: Inclusion
Criteria: Instances where participants express appreciation, thanks, or support towards each other, the designers, or the community.
Label: Expressions of Gratitude
Category: Social Dynamics

23. prioritization
Relationship: Inclusion
Criteria: Designers explaining the order in which they will address different sections or features.
Label: Prioritization
Category: Software Development