You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another and please do not merge them.
Determine the logical relationship between concepts within each code, such as inclusion, parallel, or intersection.
Write clear and generalizable criteria for each code and do not introduce unnecessary details. Then, write an accurate verb phrase as label for the combined concept.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Label: {A consolidated verb phrase of code 1}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Label: {A consolidated verb phrase of code 32}
---
~~~
1.
Concepts: identifying as educator, identify as teacher
- A user identifies as an educator.
- A community member is identified as a teacher or mentions their teaching experience.

2.
Concepts: share professional background, sharing professional identity
- User shares professional background or experience.
- User shares their professional background or experience upon request.

3.
Concepts: share background, provide personal background, sharing user background
- A user provides background information about themselves.
- A user shares personal background or experience related to the software or teaching.
- A user provides background information about their role or experience.

4.
Concepts: recount past personal experience, reference personal experience
- Designer shares a personal anecdote or experience related to the software.
- The designer shares a personal anecdote or experience related to the software or its development.

5.
Concepts: assessing feasibility, internet availability inquiry, inquire about classroom internet
- The designer inquires about the availability of internet in the class.
- A designer inquires about the availability of internet in a classroom or school.
- Designer inquires about the availability of internet in the classroom.

6.
Concepts: school needs, school need context
- User expresses needs or requirements related to their school or educational context.
- A user provides context or background information about their school's needs or goals.

7.
Concepts: context, context provision
- The user provides context or background information about their school or teaching environment.
- A user provides context or background information about their school or institution.

8.
Concepts: educational use case, align with educational use case
- Describing educational use cases or scenarios.
- Aligning with educational use cases or scenarios.

9.
Concepts: seek specific educational input, reference educational materials
- Designer seeks specific educational input from teachers or users.
- Designer references educational materials or seeks input from teachers.

10.
Concepts: feature explanation, functionality explanation
- Explaining or describing new features or functionalities
- Explaining the functionality or issues of a specific feature or tool.

11.
Concepts: feature descriptions, describe new components
- Describing new features or components in the software.
- Describing new components, features, or functionalities.

12.
Concepts: feature demonstration, provide examples of feature
- Providing examples or demonstrations of a feature or tool.
- Providing concrete examples or illustrations of a feature or functionality.

13.
Concepts: provide example, example of feature's functions
- Designer provides an example to illustrate a point or feature.
- Designer provides an example of a feature's functions or capabilities.

14.
Concepts: describing use cases, describe usage scenario
- User describes a use case or scenario.
- Describing a scenario or use case for a specific feature or component.

15.
Concepts: detail educational utility, highlighting educational value
- A designer details the educational utility or benefits of the software.
- The designer highlights the educational utility or benefits of a feature.

16.
Concepts: clarify feature, explain feature benefit
- The designer explains how a specific feature works or what it can do.
- Designer explains the benefits of a specific feature.

17.
Concepts: explain usage detail, clarify functionality
- Designer explains the details of software usage or functionality.
- Designer clarifies the functionality or features of the software.

18.
Concepts: explain simulation capability, inform about simulation capability
- The speaker explains the capabilities or features of a simulation.
- The designer mentions a specific feature or capability of the simulation.

19.
Concepts: image sharing, share visual reference
- Sharing images, diagrams, or visual aids.
- Sharing a visual reference or image

20.
Concepts: provide visual reference, using images to help demonstration
- Providing a visual aid to support a point or explanation
- Using images to help demonstrate a point

21.
Concepts: provide usage instruction, guide users to simulate accurately
- Designer provides instructions on how to use the software.
- Designer provides guidance on how to use the software accurately.

22.
Concepts: propose enhancement, suggesting feature enhancement
- The designer proposes a related enhancement or feature.
- The designer suggests a broader usability feature beyond the current context.

23.
Concepts: technical discussion, engage with technical details
- Designer shares technical details or troubleshooting steps.
- The designer engages with technical details or discusses specific features or technologies.

24.
Concepts: identify usability issue, focus on user experience, consider usability
- User or designer mentions a usability issue or suggests an improvement.
- The user suggests or recommends an improvement to enhance user experience.
- User or designer provides feedback on usability issues or suggests improvements for better user experience.

25.
Concepts: address concern, address user concerns
- The designer addresses a user's concern or worry.
- A designer addresses or responds to user concerns or issues.

26.
Concepts: usability issue, address usability issue, usability concern
- A user or designer highlights an issue with the software's usability.
- Designer or user addresses a usability issue or problem with the software.
- A designer raises a concern or issue related to the usability of the software.

27.
Concepts: support user needs, acknowledge user need
- Designer expresses support for user needs or requests.
- The designer acknowledges a user's need or request.

28.
Concepts: catering to user needs, show commitment to user needs
- A designer prioritizes catering to user needs and preferences.
- Designer prioritizes or commits to meeting user needs.

29.
Concepts: emphasis on usability, prioritize user experience
- Designer emphasizes the importance of usability in the design process.
- Designer prioritizes user experience in the development process.

30.
Concepts: emphasize convenience, express need for convenience
- A user emphasizes the importance of convenience in the software.
- User expresses the need for convenience or ease of use in the software.

31.
Concepts: highlight practicality, highlight practical use case
- User highlights the practicality or usability of the software.
- A user highlights a practical use case or scenario for the software.

32.
Concepts: long-term stability, communicating long-term benefits, highlight long-term benefits
- A designer mentions the long-term benefits of a feature.
- Discussing the importance of long-term stability or reliability.
- A designer communicates the long-term benefits of a feature.
- Designer highlights the long-term benefits of a feature or update.
===
Here are the definitions for each code:

---
1.
Concepts: identifying as educator, identify as teacher
Relationship: Parallel
Criteria: A user or community member self-identifies as an educator or teacher.
Label: Identify as Educator/Teacher

2.
Concepts: share professional background, sharing professional identity
Relationship: Inclusion
Criteria: A user shares information about their professional background or experience.
Label: Share Professional Background

3.
Concepts: share background, provide personal background, sharing user background
Relationship: Inclusion
Criteria: A user provides information about their personal or professional background.
Label: Share User Background

4.
Concepts: recount past personal experience, reference personal experience
Relationship: Inclusion
Criteria: A designer shares a personal anecdote or experience related to the software.
Label: Share Personal Experience

5.
Concepts: assessing feasibility, internet availability inquiry, inquire about classroom internet
Relationship: Inclusion
Criteria: A designer inquires about the availability of internet in a classroom or school.
Label: Inquire about Internet Availability

6.
Concepts: school needs, school need context
Relationship: Inclusion
Criteria: A user expresses needs or requirements related to their school or educational context.
Label: Express School Needs

7.
Concepts: context, context provision
Relationship: Inclusion
Criteria: A user provides context or background information about their school or teaching environment.
Label: Provide Context

8.
Concepts: educational use case, align with educational use case
Relationship: Inclusion
Criteria: Describing or aligning with educational use cases or scenarios.
Label: Align with Educational Use Case

9.
Concepts: seek specific educational input, reference educational materials
Relationship: Inclusion
Criteria: A designer seeks specific educational input from teachers or users.
Label: Seek Educational Input

10.
Concepts: feature explanation, functionality explanation
Relationship: Inclusion
Criteria: Explaining or describing new features or functionalities.
Label: Explain Feature

11.
Concepts: feature descriptions, describe new components
Relationship: Inclusion
Criteria: Describing new features or components in the software.
Label: Describe Feature

12.
Concepts: feature demonstration, provide examples of feature
Relationship: Inclusion
Criteria: Providing examples or demonstrations of a feature or tool.
Label: Demonstrate Feature

13.
Concepts: provide example, example of feature's functions
Relationship: Inclusion
Criteria: A designer provides an example to illustrate a point or feature.
Label: Provide Example

14.
Concepts: describing use cases, describe usage scenario
Relationship: Inclusion
Criteria: A user describes a use case or scenario.
Label: Describe Use Case

15.
Concepts: detail educational utility, highlighting educational value
Relationship: Inclusion
Criteria: A designer details the educational utility or benefits of the software.
Label: Highlight Educational Value

16.
Concepts: clarify feature, explain feature benefit
Relationship: Inclusion
Criteria: A designer explains how a specific feature works or what it can do.
Label: Clarify Feature

17.
Concepts: explain usage detail, clarify functionality
Relationship: Inclusion
Criteria: A designer explains the details of software usage or functionality.
Label: Explain Functionality

18.
Concepts: explain simulation capability, inform about simulation capability
Relationship: Inclusion
Criteria: A designer explains the capabilities or features of a simulation.
Label: Explain Simulation Capability

19.
Concepts: image sharing, share visual reference
Relationship: Inclusion
Criteria: Sharing images, diagrams, or visual aids.
Label: Share Visual Reference

20.
Concepts: provide visual reference, using images to help demonstration
Relationship: Inclusion
Criteria: Providing a visual aid to support a point or explanation.
Label: Provide Visual Aid

21.
Concepts: provide usage instruction, guide users to simulate accurately
Relationship: Inclusion
Criteria: A designer provides instructions on how to use the software.
Label: Provide Usage Instruction

22.
Concepts: propose enhancement, suggesting feature enhancement
Relationship: Inclusion
Criteria: A designer proposes a related enhancement or feature.
Label: Propose Enhancement

23.
Concepts: technical discussion, engage with technical details
Relationship: Inclusion
Criteria: A designer shares technical details or troubleshooting steps.
Label: Engage in Technical Discussion

24.
Concepts: identify usability issue, focus on user experience, consider usability
Relationship: Inclusion
Criteria: A user or designer mentions a usability issue or suggests an improvement.
Label: Identify Usability Issue

25.
Concepts: address concern, address user concerns
Relationship: Inclusion
Criteria: A designer addresses a user's concern or worry.
Label: Address Concern

26.
Concepts: usability issue, address usability issue, usability concern
Relationship: Inclusion
Criteria: A user or designer highlights an issue with the software's usability.
Label: Address Usability Issue

27.
Concepts: support user needs, acknowledge user need
Relationship: Inclusion
Criteria: A designer expresses support for user needs or requests.
Label: Support User Needs

28.
Concepts: catering to user needs, show commitment to user needs
Relationship: Inclusion
Criteria: A designer prioritizes catering to user needs and preferences.
Label: Cater to User Needs

29.
Concepts: emphasis on usability, prioritize user experience
Relationship: Inclusion
Criteria: A designer emphasizes the importance of usability in the design process.
Label: Prioritize User Experience

30.
Concepts: emphasize convenience, express need for convenience
Relationship: Inclusion
Criteria: A user emphasizes the importance of convenience in the software.
Label: Emphasize Convenience

31.
Concepts: highlight practicality, highlight practical use case
Relationship: Inclusion
Criteria: A user highlights the practicality or usability of the software.
Label: Highlight Practicality

32.
Concepts: long-term stability, communicating long-term benefits, highlight long-term benefits
Relationship: Inclusion
Criteria: A designer mentions the long-term benefits of a feature.
Label: Highlight Long-term Benefits