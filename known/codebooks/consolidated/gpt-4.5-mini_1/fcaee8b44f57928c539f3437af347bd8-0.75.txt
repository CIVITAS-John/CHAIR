You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (53 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
53. 
Concepts: {Repeat the input 53}
Relationship: {What is logical relationship between concepts in code 53, or N/A if not applicable}
Criteria: {Who did what, and how for code 53}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: direct users to resources, provide access and download information
- Designer directs users to specific resources for accessing software.
- Designers provide users with information regarding access to downloadable resources and development plans.

2.
Concepts: user-designer interaction, engage in collaborative problem solving
- The collaborative interaction between users and designers that contributes to the design process.
- Users and designers work together to address issues and improve the product.

3.
Concepts: share knowledge, consulting community
- Designers or users share specific technical information or knowledge relevant to the software.
- Designers and users consult each other about technical aspects or features based on shared knowledge.

4.
Concepts: discuss technical details, discuss feature development
- Designers discuss technical details and considerations for the functionalities of the software.
- Designers engage in discussions about design aspects and feature development for the software.

5.
Concepts: acknowledge feature needs, consider usability feedback
- Designers acknowledge the need for feature adjustments based on user input.
- Users provide input on usability preferences regarding interface layout to guide design decisions.

6.
Concepts: gather community input, identify community needs
- Designers seek user input on educational content and preferences to ensure community involvement.
- Designers seek input from teachers to understand their specific needs and users express needs for functionalities.

7.
Concepts: gather user context, inquire about classroom conditions
- Designers gather context by asking about users' teaching experiences to facilitate discussions.
- Designers inquire about classroom conditions and usage scenarios to understand software needs.

8.
Concepts: reassure users, address user concerns
- Designers reassure users about progress on upcoming features and respond to inquiries.
- Designers address user concerns and provide reassurance about software functionalities.

9.
Concepts: provide user support, troubleshoot user problems
- Designers offer assistance and technical support to users facing issues with the software.
- Designers encourage users to share problems they have encountered using the software.

10.
Concepts: elaborate on suggestions, elaborate for clarification
- Users elaborate on previous questions or offer additional suggestions to refine ideas.
- Designers elaborate on suggestions and clarify points raised in discussions.

11.
Concepts: ask follow-up questions, gathers user feedback
- Designers ask follow-up questions to clarify user experiences and ongoing issues.
- A designer asks clarification questions to understand users' problems encountered while using the app.

12.
Concepts: design question, engage in query and response
- Designers pose questions related to the technical specifications or requirements of the design elements.
- Users ask questions and receive answers from designers regarding design elements.

13.
Concepts: explain upcoming features, give an intro to the update content
- Designers explain specific new features and list previews of upcoming releases.
- Designers inform the community about specific content and features included in upcoming updates.

14.
Concepts: assure future updates, plan and announce future updates
- Designers assure the community that future updates will occur and are actively being worked on.
- Designers discuss and announce plans for future updates based on community input.

15.
Concepts: software release, announce software updates
- Designers announce the release of software versions and their expected availability.
- Designers announce new features and updates planned for the software.

16.
Concepts: announce product updates, announce component updates
- Designers announce the release of new versions and describe significant updates or improvements.
- Designers announce updates related to specific software components and their functionalities.

17.
Concepts: list updates and fixes, discuss potential updates
- Designers list new features and adjustments made in the software update, including bug fixes.
- Designers discuss potential compatibility or performance issues and note bugs in the software.

18.
Concepts: share info on app release, share platform-specific updates
- Designer provides updates about the app's release status on different platforms.
- Designers specify the version being discussed based on the platform and share relevant updates.

19.
Concepts: discuss update process, outline release schedules
- Designers discuss the update schedule and inform users about software version release timelines.
- Designers describe the current status of software versions and outline schedules for upcoming updates.

20.
Concepts: share design rationale, explain design principles, explaining design goals
- Designers explain their design approach and share thoughts on user-friendly solutions.
- Designers articulate and explain the guiding principles that shape their design decisions.
- Designers clarify their design intent to ensure user-friendliness and provide necessary instructions.

21.
Concepts: share development plans, share future development plans
- Designers share details about development plans and goals with the community.
- Designers discuss future development opportunities and share information about development plans.

22.
Concepts: share future plans, share potential future directions, discuss long-term planning
- Designers share and discuss potential future developments and directions for the software.
- Designers discuss their interests that may influence future software developments.
- Designers discuss long-term planning regarding software features and outline future functionalities.

23.
Concepts: enhance simulations, enhance simulated experiments
- Designers discuss enhancements made to simulations and new features in augmented reality.
- Designers outline plans for simulating experiments and detail assessment improvement features.

24.
Concepts: discuss feature stability, highlight feature importance
- Designers discuss how implemented features and component integration will enhance stability.
- Designers emphasize the importance of features for long-term stability and functionality.

25.
Concepts: suggest process simplification, simplification and refinement in design
- Designers express a desire for more efficient processes and suggest simplification of features.
- Designers discuss methods for improving the design through simplification and categorization.

26.
Concepts: clarify testing status, clarify version details
- Designers clarify the purpose of certain versions being intended for testing.
- Designers clarify the version types and provide additional details about the specific version available for download.

27.
Concepts: explain feature needs, respond to the feature request
- Designers explain ongoing efforts and rationale behind specific features for user experience.
- Designers respond to feature requests by detailing ongoing research or development efforts.

28.
Concepts: confirm feature implementation, gives a semi-promise of its completion date
- Designers confirm the release and implementation of features and address potential delays.
- A designer indicates a tentative timeline for a feature's completion while acknowledging potential delays.

29.
Concepts: compare feature complexities, explain feature complexities
- Designer compares the complexity of different features in development.
- Designers explain reasons for delays and communicate the complexity of feature development.

30.
Concepts: explain technical artifacts, clarify technical details
- Designer explains the purpose or type of a specific technical artifact.
- Designers clarify how devices function with the software and provide specific technical information.

31.
Concepts: provide feature examples, explain software functionalities
- Designers give specific examples of planned features and their functions.
- Designers detail how features work in relation to software simulation and introduce specific functions.

32.
Concepts: clarify compatibility issues, respond to community questions
- Designers clarify compatibility issues, while users inquire about software specifications.
- Designers respond to user questions regarding software compatibility or features.

33.
Concepts: initiate community engagement, engage community participation, demonstrate community engagement
- Designers initiate communication and users engage with the community.
- Designers interact with community members to foster engagement and participation actively.
- Designers show engagement through affirmative responses to community members.

34.
Concepts: confirm professional identity, establish professional credibility
- Users affirm their professional roles and share identity information in response to inquiries.
- Users share professional backgrounds and demonstrate engagement by affirming their identities.

35.
Concepts: share teaching experiences, introduce teacher identity
- Users share their teaching backgrounds and experiences, providing context for their contributions.
- Users specify their teaching experience at different educational levels and provide identity context.

36.
Concepts: achieve self-sufficiency, demonstrate self-sufficiency
- Users acknowledge finding solutions or resources independently within the community.
- Users acknowledge accessing resources from the group, indicating self-help.

37.
Concepts: express user appreciation, acknowledge and express gratitude for help
- Users express appreciation through thanks or emojis for contributions made by others.
- Users acknowledge received help and the usefulness of shared resources.

38.
Concepts: compliment 3d effects, appreciate visual design
- Users express their appreciation for the quality of the software's 3D visual effects.
- Users express appreciation for the software's visual design and craftsmanship.

39.
Concepts: express anticipation, respond positively to updates
- Users express anticipation for upcoming software updates.
- Users respond positively to information about future features or updates.

40.
Concepts: agree with suggestions, second the previous response
- Users express agreement with suggestions or focus areas raised by others.
- Users support or agree with previous comments regarding design or features.

41.
Concepts: express amusement, react playfully to humor
- Designer expresses humor or amusement in communication.
- Designers react playfully to humorous comments or stories shared by users.

42.
Concepts: confirm update completion, acknowledge resolution
- Users inform others about the successful completion of updates.
- Users acknowledge receipt of information and indicate that problems have been resolved.

43.
Concepts: confirm understanding and agreement, validate and acknowledge contributions
- Designers confirm users' statements and show agreement.
- Users and designers confirm statements through short affirmations in discussions and acknowledge each other's points in discussions.

44.
Concepts: provide brief confirmations, confirm understanding of information
- Users confirm information or respond affirmatively to points made.
- Users acknowledge and confirm the information shared within the group.

45.
Concepts: validate user request, validates information visually
- Designer validates a user's request or inquiry.
- The designer ensures the accuracy of decisions by seeking visual confirmation from users regarding specific points or references.

46.
Concepts: apologize for timing, issue apologies for disruptions
- The designer expresses regret for disturbing users at an inconvenient time.
- Designers express apologies for disruptions in community interactions.

47.
Concepts: context, explain internet restrictions
- User provides context regarding restrictions and educational environment.
- Users describe restrictions imposed by schools on internet access during classes and explain these limitations.

48.
Concepts: discuss context of use, discuss classroom applications
- Users and designers discuss the educational context of software usage and describe contexts of use.
- Users describe potential and practical applications of the software in educational settings.

49.
Concepts: request software resources, request usage support
- Users inquire about resources, access, and assistance related to the software.
- Users express and reiterate their need for specific documentation and support materials for software usage.

50.
Concepts: ask technical questions, report technical issues
- Users ask various technical questions regarding the software and its usage.
- Users report technical issues or ask for help regarding the software's technical features.

51.
Concepts: express interest in software, inquire about software updates
- Users express interest in accessing the software and inquiring about its technical specifications.
- Users inquire about upcoming software updates and functionalities on different platforms.

52.
Concepts: discuss school resource needs, identify and discuss technical challenges
- Users discuss their school's technological needs and limitations affecting software engagement.
- Users highlight technical constraints faced by educational institutions and engage in discussions about challenges in educational environments.

53.
Concepts: respond to inquiries
- Designers respond to user inquiries with informative updates or clarifications.
- Users respond to inquiries by sharing practices and preferences.
===
---
Definitions for each code (53 in total):
1.
Concepts: direct users to resources, provide access and download information
Relationship: Both concepts involve providing users with necessary information for accessing software resources.
Criteria: Designers direct users to specific resources and provide information regarding access to downloadable resources.
Phrase: Direct users to resources.

2.
Concepts: user-designer interaction, engage in collaborative problem solving
Relationship: Both concepts emphasize the interaction and collaboration between users and designers to enhance the design process.
Criteria: Users and designers engage in collaborative problem-solving through interaction.
Phrase: Engage in collaborative problem solving.

3.
Concepts: share knowledge, consulting community
Relationship: Both concepts involve the exchange of technical knowledge and consultation among community members.
Criteria: Designers and users share technical information and consult each other about software features.
Phrase: Share technical knowledge.

4.
Concepts: discuss technical details, discuss feature development
Relationship: Both concepts relate to discussions focused on the technical aspects and development of software features.
Criteria: Designers discuss technical details and aspects of feature development.
Phrase: Discuss technical and feature details.

5.
Concepts: acknowledge feature needs, consider usability feedback
Relationship: Both concepts involve recognizing user needs and integrating feedback into design decisions.
Criteria: Designers acknowledge feature needs based on user input and consider usability feedback.
Phrase: Acknowledge and consider feedback.

6.
Concepts: gather community input, identify community needs
Relationship: Both concepts focus on seeking input from the community to understand their needs.
Criteria: Designers gather input from users and identify community needs for functionalities.
Phrase: Gather and identify community input.

7.
Concepts: gather user context, inquire about classroom conditions
Relationship: Both concepts aim to understand users' specific teaching contexts to inform design decisions.
Criteria: Designers gather context and inquire about classroom conditions to understand software needs.
Phrase: Gather and inquire about context.

8.
Concepts: reassure users, address user concerns
Relationship: Both concepts involve addressing user fears and providing reassurance regarding software functionalities.
Criteria: Designers reassure users and address their concerns about upcoming features and software.
Phrase: Reassure and address concerns.

9.
Concepts: provide user support, troubleshoot user problems
Relationship: Both concepts are centered around assisting users in resolving issues they encounter with the software.
Criteria: Designers provide support and troubleshoot problems faced by users.
Phrase: Provide support and troubleshoot.

10.
Concepts: elaborate on suggestions, elaborate for clarification
Relationship: Both concepts involve expanding on ideas and suggestions for clarity.
Criteria: Users and designers elaborate on suggestions and clarify points raised in discussions.
Phrase: Elaborate for clarity.

11.
Concepts: ask follow-up questions, gather user feedback
Relationship: Both concepts focus on seeking clarification and gathering feedback from users.
Criteria: Designers ask follow-up questions to clarify user experiences and gather feedback.
Phrase: Ask follow-up questions.

12.
Concepts: design question, engage in query and response
Relationship: Both concepts emphasize the exchange of questions and answers related to design elements.
Criteria: Designers pose design-related questions and users engage in query and response.
Phrase: Engage in query and response.

13.
Concepts: explain upcoming features, give an intro to the update content
Relationship: Both concepts involve informing the community about new features and updates.
Criteria: Designers explain upcoming features and provide previews of update content.
Phrase: Explain upcoming features.

14.
Concepts: assure future updates, plan and announce future updates
Relationship: Both concepts center around communicating the commitment to future software updates.
Criteria: Designers assure the community of future updates and discuss plans based on input.
Phrase: Assure and announce future updates.

15.
Concepts: software release, announce software updates
Relationship: Both concepts involve communicating the status and availability of software releases.
Criteria: Designers announce software releases and updates.
Phrase: Announce software releases.

16.
Concepts: announce product updates, announce component updates
Relationship: Both concepts relate to communicating updates about the software and its components.
Criteria: Designers announce product updates and specific software component updates.
Phrase: Announce updates.

17.
Concepts: list updates and fixes, discuss potential updates
Relationship: Both concepts focus on communicating changes and potential improvements in the software.
Criteria: Designers list updates and fixes while discussing potential future updates.
Phrase: List updates and fixes.

18.
Concepts: share info on app release, share platform-specific updates
Relationship: Both concepts involve providing information about the app's release status across platforms.
Criteria: Designers share information about the app release and platform-specific updates.
Phrase: Share app release information.

19.
Concepts: discuss update process, outline release schedules
Relationship: Both concepts involve communicating the process and timeline for software updates.
Criteria: Designers discuss the update process and outline software release schedules.
Phrase: Discuss update process.

20.
Concepts: share design rationale, explain design principles, explaining design goals
Relationship: All concepts relate to articulating the reasoning and principles behind design decisions.
Criteria: Designers share design rationale and explain principles guiding their decisions.
Phrase: Share design rationale.

21.
Concepts: share development plans, share future development plans
Relationship: Both concepts focus on communicating current and future goals for software development.
Criteria: Designers share development plans and discuss future development opportunities.
Phrase: Share development plans.

22.
Concepts: share future plans, share potential future directions, discuss long-term planning
Relationship: All concepts emphasize discussing and planning for future developments of the software.
Criteria: Designers share and discuss potential future plans and long-term developments.
Phrase: Share and discuss future plans.

23.
Concepts: enhance simulations, enhance simulated experiments
Relationship: Both concepts focus on improvements made to simulations and experimental features.
Criteria: Designers discuss enhancements to simulations and improvements in simulated experiments.
Phrase: Enhance simulations and experiments.

24.
Concepts: discuss feature stability, highlight feature importance
Relationship: Both concepts concern the discussion of stability and significance of features.
Criteria: Designers discuss the stability of features and highlight their importance.
Phrase: Discuss feature stability.

25.
Concepts: suggest process simplification, simplification and refinement in design
Relationship: Both concepts focus on proposing improvements for efficiency in design processes.
Criteria: Designers suggest simplification processes and refinement in design.
Phrase: Suggest process simplification.

26.
Concepts: clarify testing status, clarify version details
Relationship: Both concepts involve providing clarity regarding testing purposes and version specifics.
Criteria: Designers clarify the purpose of test versions and provide details on version types.
Phrase: Clarify testing status.

27.
Concepts: explain feature needs, respond to the feature request
Relationship: Both concepts involve addressing user feature requests and explaining the rationale behind features.
Criteria: Designers explain feature needs and respond to feature requests.
Phrase: Explain and respond to feature requests.

28.
Concepts: confirm feature implementation, gives a semi-promise of its completion date
Relationship: Both concepts emphasize confirming the implementation status of features and timelines.
Criteria: Designers confirm implementation and indicate timelines for completion.
Phrase: Confirm feature implementation.

29.
Concepts: compare feature complexities, explain feature complexities
Relationship: Both concepts involve discussing and clarifying the complexities of different features.
Criteria: Designers compare and explain the complexities of features in development.
Phrase: Compare and explain feature complexities.

30.
Concepts: explain technical artifacts, clarify technical details
Relationship: Both concepts focus on providing information about technical aspects of the software.
Criteria: Designers explain technical artifacts and clarify technical details.
Phrase: Explain technical artifacts.

31.
Concepts: provide feature examples, explain software functionalities
Relationship: Both concepts involve detailing specific software features and their functionalities.
Criteria: Designers provide examples of features and explain their functionalities.
Phrase: Provide feature examples.

32.
Concepts: clarify compatibility issues, respond to community questions
Relationship: Both concepts center around addressing compatibility concerns and responding to inquiries.
Criteria: Designers clarify compatibility issues and respond to community questions.
Phrase: Clarify compatibility issues.

33.
Concepts: initiate community engagement, engage community participation, demonstrate community engagement
Relationship: All concepts involve fostering interaction and participation within the community.
Criteria: Designers initiate and engage the community actively to demonstrate participation.
Phrase: Engage community participation.

34.
Concepts: confirm professional identity, establish professional credibility
Relationship: Both concepts focus on affirming users’ professional roles and credibility.
Criteria: Users confirm their professional identities and establish credibility in discussions.
Phrase: Confirm professional identity.

35.
Concepts: share teaching experiences, introduce teacher identity
Relationship: Both concepts involve users sharing their educational backgrounds to provide context.
Criteria: Users share their teaching experiences and introduce their identities.
Phrase: Share teaching experiences.

36.
Concepts: achieve self-sufficiency, demonstrate self-sufficiency
Relationship: Both concepts emphasize users finding solutions independently.
Criteria: Users demonstrate self-sufficiency by accessing resources within the community.
Phrase: Achieve self-sufficiency.

37.
Concepts: express user appreciation, acknowledge and express gratitude for help
Relationship: Both concepts center around users showing gratitude for assistance received.
Criteria: Users express appreciation and gratitude for help shared by others.
Phrase: Express user appreciation.

38.
Concepts: compliment 3d effects, appreciate visual design
Relationship: Both concepts involve users expressing positive feedback about the visual aspects of the software.
Criteria: Users compliment the quality of 3D effects and visual design.
Phrase: Compliment visual design.

39.
Concepts: express anticipation, respond positively to updates
Relationship: Both concepts involve users showing excitement for upcoming updates.
Criteria: Users express anticipation and respond positively to information about updates.
Phrase: Express anticipation for updates.

40.
Concepts: agree with suggestions, second the previous response
Relationship: Both concepts focus on users supporting and agreeing with others' suggestions.
Criteria: Users agree with suggestions made by others and second responses.
Phrase: Agree with suggestions.

41.
Concepts: express amusement, react playfully to humor
Relationship: Both concepts involve the reaction to humor and amusement in conversations.
Criteria: Designers express amusement and react playfully to humorous comments.
Phrase: React playfully to humor.

42.
Concepts: confirm update completion, acknowledge resolution
Relationship: Both concepts involve users communicating the successful completion of updates.
Criteria: Users confirm and acknowledge the resolution of updates.
Phrase: Confirm update completion.

43.
Concepts: confirm understanding and agreement, validate and acknowledge contributions
Relationship: Both concepts involve confirming and validating contributions in discussions.
Criteria: Designers and users confirm understanding and validate contributions.
Phrase: Confirm understanding.

44.
Concepts: provide brief confirmations, confirm understanding of information
Relationship: Both concepts emphasize acknowledging information shared within the community.
Criteria: Users provide brief confirmations and confirm understanding of information.
Phrase: Provide brief confirmations.

45.
Concepts: validate user request, validates information visually
Relationship: Both concepts focus on ensuring the accuracy of user requests and information.
Criteria: Designers validate user requests and visually confirm information.
Phrase: Validate user requests.

46.
Concepts: apologize for timing, issue apologies for disruptions
Relationship: Both concepts involve expressing regret for any disturbances caused to users.
Criteria: Designers apologize for timing and disruptions in community interactions.
Phrase: Apologize for timing.

47.
Concepts: context, explain internet restrictions
Relationship: Both concepts involve users providing context about limitations in their educational environments.
Criteria: Users explain internet restrictions imposed by schools during classes.
Phrase: Explain internet restrictions.

48.
Concepts: discuss context of use, discuss classroom applications
Relationship: Both concepts focus on discussing how the software can be applied in educational contexts.
Criteria: Users and designers discuss the context of use and classroom applications of the software.
Phrase: Discuss context of use.

49.
Concepts: request software resources, request usage support
Relationship: Both concepts involve users seeking assistance and resources related to software.
Criteria: Users request software resources and support for usage.
Phrase: Request software resources.

50.
Concepts: ask technical questions, report technical issues
Relationship: Both concepts involve users seeking help regarding technical aspects of the software.
Criteria: Users ask technical questions and report technical issues encountered.
Phrase: Ask technical questions.

51.
Concepts: express interest in software, inquire about software updates
Relationship: Both concepts focus on users showing interest and seeking updates about the software.
Criteria: Users express interest in the software and inquire about updates.
Phrase: Express interest in software.

52.
Concepts: discuss school resource needs, identify and discuss technical challenges
Relationship: Both concepts involve users discussing educational technological needs and challenges.
Criteria: Users discuss their school's resource needs and technical challenges faced.
Phrase: Discuss resource needs.

53.
Concepts: respond to inquiries
Relationship: Both concepts involve providing answers and clarifications to user inquiries.
Criteria: Designers and users respond to inquiries with informative updates or clarifications.
Phrase: Respond to inquiries.