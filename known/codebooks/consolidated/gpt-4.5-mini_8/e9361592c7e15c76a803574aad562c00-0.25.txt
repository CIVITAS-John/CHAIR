You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (20 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
20. 
Concepts: {Repeat the input 20}
Relationship: {What is logical relationship between concepts in code 20, or N/A if not applicable}
Criteria: {Who did what, and how for code 20}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: provide status updates, highlight progress and share updates
- Designers provide information about the current status of software updates.
- Designers highlight the progress made in software updates and provide visual previews related to the software.

2.
Concepts: express hope and promise future features, promise ongoing updates and reassure users
- Designers express hope for progress in software development and indicate features that will be implemented later.
- Designers assure the community that updates are in progress and reassure users about timelines for upcoming features.

3.
Concepts: limitation of the team, discuss and acknowledge limitations
- Designers acknowledge the limitations of their team in addressing certain features.
- Designers explain limitations related to software compatibility with older operating systems and acknowledge potential issues with current solutions.

4.
Concepts: explain development process, consider and speculate on compatibility issues
- A designer discusses the theoretical compatibility of the application with different systems or devices.
- Designers discuss potential compatibility issues that may need future attention and speculate on compatibility with older systems.

5.
Concepts: ask follow-up questions for clarification, gather context and inquire for support
- Designers ask users about classroom conditions and teaching levels to clarify user issues.
- Designers gather context by asking users about their teaching backgrounds and inquire about users' roles for tailored support.

6.
Concepts: design question, discuss usability and design choices
- Designers pose questions related to design considerations, often about user interface elements.
- Designers address usability concerns and engage in discussions about input methods and their implications for user interface design.

7.
Concepts: long term planning, explain plans and feature importance
- A designer discusses long-term planning for features that will enhance the application's stability and functionality.
- The designer explains the significance of a feature for long-term stability and discusses how they will enhance stability once completed.

8.
Concepts: promise future consultation, acknowledge community needs
- Designers indicate intentions to consult the community before decisions.
- A designer acknowledges community needs and discusses future plans based on them.

9.
Concepts: inquire about updates, inquire about access and request downloads
- Users inquire about recent updates and the status of software versions.
- Users seek information on how to access specific versions of the software and request download information.

10.
Concepts: educational tools, request specific features
- A user requests specific educational tools and features to enhance teaching capabilities.
- Users express desires for specific functionalities in the software to enhance usability for educational purposes.

11.
Concepts: user experience in educational contexts, highlight limitations and provide context
- User experiences and challenges in using the software within educational settings.
- Users describe limitations of classroom environments affecting software use and provide context about their educational environment.

12.
Concepts: introduce and share teacher identity, share background and establish credibility
- Users specify their teaching background and share their teaching experience in response to a request for information.
- Users provide information about their professional or personal background to establish credibility and share their teaching experience.

13.
Concepts: internet restriction, technical and infrastructural challenges in educational settings
- Users discuss restrictions imposed by schools on internet access in classrooms.
- Users discuss challenges related to internet access and technology in schools.

14.
Concepts: user reactions, express emotions with emojis
- Instances where users express their reactions to updates or announcements, often using emojis.
- Users express emotions or reactions through the use of emojis in conversations.

15.
Concepts: praise software effectiveness, share reviews and express satisfaction
- Users praise the software's effectiveness and share experiences of enhanced student engagement.
- User provides a positive review of the software's practicality and compares it favorably to similar applications.

16.
Concepts: engage with community, query and response
- A designer engages with the community by answering questions.
- Instances where users ask questions and receive answers from designers or other community members.

17.
Concepts: make suggestions and share solutions, suggest simplification and discuss refinements
- A designer proposes a combined approach to using features and shares how the software will be designed for user-friendliness.
- Designers suggest simplifying features or processes and propose refinements based on user input.

18.
Concepts: respond, show designer responsiveness
- Designers respond to user inquiries or comments with relevant information or updates.
- Designers respond to user queries and feedback, showing attentiveness to user needs.

19.
Concepts: invite questions, raise concerns and inquire about problems
- Designers encourage users to seek clarification or raise concerns.
- Designers raise related issues or questions that pertain to the functionality of the software and ask users to specify issues they have encountered.

20.
Concepts: establish feedback loop, integrate user feedback
- Designers collect and implement user feedback in design processes.
- User feedback is acknowledged and integrated into the design process.
===
---
Definitions for each code (20 in total):
1.
Concepts: provide status updates, highlight progress and share updates
Relationship: The concepts are interconnected as they all pertain to the communication of current information regarding software updates.
Criteria: Designers provide information about the current status of software updates, highlight progress made, and share visual previews related to the software.
Phrase: Communicate software status and progress.

2.
Concepts: express hope and promise future features, promise ongoing updates and reassure users
Relationship: These concepts are related through the theme of maintaining user engagement and trust regarding future developments.
Criteria: Designers express hope for progress in software development, promise ongoing updates, and reassure users about timelines for upcoming features.
Phrase: Assure users of future updates.

3.
Concepts: limitation of the team, discuss and acknowledge limitations
Relationship: The concepts are linked as they both involve recognizing and communicating the constraints faced by the design team.
Criteria: Designers acknowledge the limitations of their team and explain issues related to software compatibility with older operating systems.
Phrase: Acknowledge team limitations.

4.
Concepts: explain development process, consider and speculate on compatibility issues
Relationship: These concepts are related as they both involve discussing the technical aspects of software development and potential challenges.
Criteria: A designer discusses the theoretical compatibility of the application with different systems and speculates on future compatibility issues.
Phrase: Discuss development and compatibility.

5.
Concepts: ask follow-up questions for clarification, gather context and inquire for support
Relationship: The concepts are interconnected as they all focus on understanding user needs and providing tailored assistance.
Criteria: Designers ask users about classroom conditions and teaching levels to clarify issues and gather context for support.
Phrase: Clarify user needs.

6.
Concepts: design question, discuss usability and design choices
Relationship: These concepts are related as they both involve evaluating and discussing the design aspects of the software.
Criteria: Designers pose questions related to design considerations and address usability concerns in discussions about user interface elements.
Phrase: Evaluate design usability.

7.
Concepts: long term planning, explain plans and feature importance
Relationship: The concepts are linked through the theme of strategic planning for future software enhancements.
Criteria: A designer discusses long-term planning for features that will enhance application stability and explains their significance.
Phrase: Plan for future features.

8.
Concepts: promise future consultation, acknowledge community needs
Relationship: These concepts are related as they both emphasize the importance of community involvement in decision-making.
Criteria: Designers indicate intentions to consult the community before decisions and acknowledge their needs in future plans.
Phrase: Consult the community.

9.
Concepts: inquire about updates, inquire about access and request downloads
Relationship: The concepts are interconnected as they both involve users seeking information about the software.
Criteria: Users inquire about recent updates, the status of software versions, and request information on how to access specific versions.
Phrase: Seek software information.

10.
Concepts: educational tools, request specific features
Relationship: These concepts are related as they both focus on enhancing educational experiences through software functionalities.
Criteria: A user requests specific educational tools and features to enhance teaching capabilities and usability.
Phrase: Request educational features.

11.
Concepts: user experience in educational contexts, highlight limitations and provide context
Relationship: The concepts are linked as they both involve discussing the challenges faced by users in educational settings.
Criteria: Users describe their experiences and challenges in using the software within educational environments and highlight limitations.
Phrase: Share educational experiences.

12.
Concepts: introduce and share teacher identity, share background and establish credibility
Relationship: These concepts are related as they both involve users providing personal information to establish their qualifications.
Criteria: Users specify their teaching background and share their experience to establish credibility in the community.
Phrase: Establish teaching identity.

13.
Concepts: internet restriction, technical and infrastructural challenges in educational settings
Relationship: The concepts are interconnected as they both address barriers to effective software use in educational environments.
Criteria: Users discuss restrictions on internet access in classrooms and challenges related to technology in schools.
Phrase: Discuss internet challenges.

14.
Concepts: user reactions, express emotions with emojis
Relationship: These concepts are related as they both involve users conveying their feelings about updates or announcements.
Criteria: Users express their reactions to updates or announcements, often using emojis to convey emotions.
Phrase: Express reactions with emojis.

15.
Concepts: praise software effectiveness, share reviews and express satisfaction
Relationship: The concepts are linked as they both involve users providing positive feedback about the software.
Criteria: Users praise the software's effectiveness, share experiences of enhanced engagement, and provide positive reviews.
Phrase: Share positive feedback.

16.
Concepts: engage with community, query and response
Relationship: These concepts are interconnected as they both involve interaction between designers and community members.
Criteria: A designer engages with the community by answering questions, and users ask questions and receive responses.
Phrase: Facilitate community engagement.

17.
Concepts: make suggestions and share solutions, suggest simplification and discuss refinements
Relationship: The concepts are related as they both involve improving the software based on user input.
Criteria: A designer proposes a combined approach to features and suggests refinements based on user feedback.
Phrase: Propose design improvements.

18.
Concepts: respond, show designer responsiveness
Relationship: These concepts are linked as they both emphasize the importance of timely communication from designers.
Criteria: Designers respond to user inquiries or comments with relevant information, showing attentiveness to user needs.
Phrase: Demonstrate designer responsiveness.

19.
Concepts: invite questions, raise concerns and inquire about problems
Relationship: The concepts are interconnected as they both involve encouraging user participation in discussions about the software.
Criteria: Designers encourage users to seek clarification, raise concerns, and specify issues they have encountered.
Phrase: Invite user inquiries.

20.
Concepts: establish feedback loop, integrate user feedback
Relationship: These concepts are related as they both focus on the importance of user input in the design process.
Criteria: Designers collect and implement user feedback in design processes, acknowledging and integrating it effectively.
Phrase: Integrate user feedback.