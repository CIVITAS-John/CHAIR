You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another and please do not merge them.
Determine the logical relationship between concepts within each code, such as inclusion, parallel, or intersection.
Write clear and generalizable criteria for each code and do not introduce unnecessary details. Then, write an accurate label for the combined concept.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (10 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Label: {A consolidated label of code 1}
...
10. 
Concepts: {Repeat the input 10}
Relationship: {What is logical relationship between concepts in code 10, or N/A if not applicable}
Criteria: {Who did what, and how for code 10}
Label: {A consolidated label of code 10}
---
~~~
1.
Concepts: pc platform, platform differences
- User discusses PC platform or version.
- User discusses differences between software platforms, or discusses platform-specific features or limitations.

2.
Concepts: hardware and system compatibility discussion, cross-platform development and hardware compatibility
- Designers discuss compatibility issues with different operating systems or hardware.
- Designers consider or discuss using the software on multiple platforms.

3.
Concepts: compatibility issues, compatibility information and discussions
- Discussion on XP compatibility and potential solutions, and user confirming or inquiring about compatibility with a specific operating system (Win7).
- Information provided about the software's compatibility with different systems or platforms.

4.
Concepts: design limitations, development limitations and prototype constraints
- Designers or users discuss or work within limitations, such as usability or technical constraints, related to the platform, system, or tool.
- Designers acknowledge limitations or constraints faced during development.

5.
Concepts: community tone, community building
- The user or designer expresses a tone or attitude that is encouraging or supportive.
- Users or designers engage in friendly or supportive interactions.

6.
Concepts: discussion of further interests, future plans and long-term planning
- Discussion or exploration of potential future interests or topics.
- Discussion of future plans or goals, discussion of long-term planning or goals

7.
Concepts: teacher role and online identity, teaching background and user background
- Indication that a user is a teacher, and the user or designer confirming or acknowledging a teacher's role, mention of online identities or usernames, identification or confirmation of user roles or identities, such as teachers.
- Users' teaching backgrounds influence their interactions with educational tools, user sharing their experience or background as a teacher, and users sharing their professional background to establish credibility and context.

8.
Concepts: development progress communication, ongoing development and progress updates
- Developers or moderators share information about the development process or progress.
- Discussing or highlighting ongoing development or updates, or discussions or updates about the progress of development or updates.

9.
Concepts: feature request invitation, feature confirmation and response
- Designers invite users to suggest new features or improvements.
- A designer confirms a requested feature, a developer responds to a feature request or suggestion.

10.
Concepts: design compromise, design decision-making
- Finding middle ground or compromising in design
- Decision-making or deliberation about design choices
===
Here are the definitions for each code:

---
1.
Concepts: pc platform, platform differences
Relationship: Inclusion (pc platform is a type of platform difference)
Criteria: User discusses PC platform or differences between software platforms.
Label: Platform Discussion

2.
Concepts: hardware and system compatibility discussion, cross-platform development and hardware compatibility
Relationship: Intersection (both concepts relate to compatibility)
Criteria: Designers discuss compatibility issues with different operating systems or hardware.
Label: Compatibility Concerns

3.
Concepts: compatibility issues, compatibility information and discussions
Relationship: Inclusion (compatibility issues are a type of compatibility information)
Criteria: Discussion on XP compatibility and potential solutions, and user confirming or inquiring about compatibility with a specific operating system.
Label: Compatibility Queries

4.
Concepts: design limitations, development limitations and prototype constraints
Relationship: Parallel (both concepts relate to limitations)
Criteria: Designers or users discuss or work within limitations related to the platform, system, or tool.
Label: Development Constraints

5.
Concepts: community tone, community building
Relationship: Inclusion (community tone is a part of community building)
Criteria: User or designer expresses a tone or attitude that is encouraging or supportive.
Label: Supportive Interactions

6.
Concepts: discussion of further interests, future plans and long-term planning
Relationship: Inclusion (future plans are a type of further interest)
Criteria: Discussion of potential future interests or topics, or discussion of future plans or goals.
Label: Future Planning

7.
Concepts: teacher role and online identity, teaching background and user background
Relationship: Intersection (both concepts relate to user identity)
Criteria: Indication that a user is a teacher, and the user or designer confirming or acknowledging a teacher's role.
Label: User Identity

8.
Concepts: development progress communication, ongoing development and progress updates
Relationship: Inclusion (progress updates are a type of development progress communication)
Criteria: Developers or moderators share information about the development process or progress.
Label: Development Updates

9.
Concepts: feature request invitation, feature confirmation and response
Relationship: Parallel (both concepts relate to feature requests)
Criteria: Designers invite users to suggest new features or improvements, or confirm a requested feature.
Label: Feature Requests

10.
Concepts: design compromise, design decision-making
Relationship: Inclusion (design compromise is a type of design decision-making)
Criteria: Finding middle ground or compromising in design, or decision-making about design choices.
Label: Design Decisions