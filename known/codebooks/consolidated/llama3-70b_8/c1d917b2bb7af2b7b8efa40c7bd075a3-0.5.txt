You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: previewing future updates, explaining and highlighting future features
- A designer provides a preview of upcoming updates or features.
- A designer explains and highlights a future feature or functionality to the community.

2.
Concepts: confirmed feature addition, confirming future features
- Designer confirms the addition of a feature.
- Designer confirms or promises a future feature or update.

3.
Concepts: shared update timeline, sharing a project timeline, communicating project timeline
- A designer shares a specific update timeline with the community.
- Designer 1 shares a timeline or schedule for updates.
- The designer communicates the project timeline or roadmap for the online community.

4.
Concepts: providing timeframe, managing a project timeline
- A designer provides a specific timeframe for completing a task or resolving an issue.
- A designer manages the timeline or schedule for the project or software.

5.
Concepts: providing a release timeline, gives estimated completion date
- The designer provides a timeline and sets expectations for future releases.
- Designer provides a tentative or estimated completion date for a feature or update.

6.
Concepts: maintain transparency, demonstrating transparency
- Maintains transparency by sharing development plans, timelines, or features with users.
- The designer shares information about the development process or design decisions.

7.
Concepts: responds to feature development, shared information about feature development
- Responding to earlier information or updates about feature development.
- Sharing information about current or future feature development.

8.
Concepts: shares ongoing research, discusses ongoing research
- The designer shares ongoing research or experimentation.
- Ongoing research or development is mentioned or discussed.

9.
Concepts: consider future compatibility, speculating about compatibility
- Designer considers future compatibility or potential issues with the software.
- A designer speculates about the software's compatibility with different systems.

10.
Concepts: specifying system requirements, clarifying platform requirements
- Designer specifies system requirements, setting hardware expectations.
- A designer clarifies the system requirements or compatibility of the software.

11.
Concepts: considers broader implications, questioned broader implications
- Considering the broader implications of a feature or design decision.
- A designer questions the broader implications of a suggestion or idea.

12.
Concepts: technical consideration, discussing technical requirements
- Designer considers a technical solution or approach.
- Designer discusses and considers technical requirements.

13.
Concepts: considering practical constraints, considering implementation context
- Designer 1 considers practical constraints or limitations.
- Designer considers the implementation context, feasibility, or practicality of a feature.

14.
Concepts: proposing design idea, elaboration of suggestion
- A designer proposes a new design idea or feature.
- A designer elaborates on a suggestion or idea.

15.
Concepts: solution exploration, consideration of comprehensive solution
- A designer explores potential solutions or ideas.
- A designer considers or explores a comprehensive solution.

16.
Concepts: iterating on design, planning iterative feedback
- Designer iterates on design or discusses design options.
- Designer plans for iterative feedback or improvement.

17.
Concepts: discussing future possibilities, prepared for further discussion
- The designer discusses and considers potential future developments.
- A designer prepares for further discussion or investigation of a topic.

18.
Concepts: discussing usability, identifying usability issues
- Designer discusses and acknowledges usability issues.
- A user identifies usability issues or software limitations.

19.
Concepts: raising concerns, raising related issue
- Designer raises concerns about new features or functionalities.
- Designer raises or points out a related issue or problem.

20.
Concepts: noting potential issues, input issue identification, acknowledging potential issues
- A designer notes a potential bug or issue with a feature or functionality.
- A designer identifies or acknowledges an input issue or problem.
- Designers acknowledge a potential issue or problem.

21.
Concepts: diagnosing problems, inquiring about problems
- Designer diagnoses and analyzes problems.
- A designer inquires about user problems and uses a problem-solving approach.

22.
Concepts: showed interest in user context, understanding designers' situation
- The designer shows interest in the user's context or situation.
- A user shows understanding or empathy towards the designer's situation or challenges.

23.
Concepts: supporting user needs, expressing understanding
- A designer supports and acknowledges user needs.
- Designer expresses understanding of user needs.

24.
Concepts: showing consideration, acknowledging user experience
- Designers show consideration or empathy towards users.
- A designer acknowledges a user's experience or perspective.

25.
Concepts: balancing user needs, align with user needs
- Designer balances different user needs.
- The designer aligns their plans or goals with the users' needs or expectations.

26.
Concepts: reflecting on feedback, aligning with user feedback
- A designer reflects on or considers user feedback or suggestions.
- A designer aligns with user feedback by incorporating their suggestions.

27.
Concepts: seeking expert input, involving teachers in design process, inquires about teacher needs
- A designer seeks expert input or advice from teachers or users.
- A designer involves teachers or users in the design process or decision-making.
- Designer inquires about teachers' needs or experiences.

28.
Concepts: user needs, identification of institutional requirements
- Indicating potential user needs or requirements.
- A user identifies institutional requirements or needs.

29.
Concepts: highlighting educational utility, highlights educational benefits
- A designer highlights the educational utility or value of a feature.
- Designer explains or highlights the educational benefits or features of Physics Lab.

30.
Concepts: educational emphasis, educational importance
- Highlighting the educational value or potential of the software.
- A user emphasizes the importance of the software for school or educational purposes.

31.
Concepts: aligning with curriculum, aligning with educational needs
- Designer aligns with curriculum or educational standards.
- A designer aligns the software with educational needs or goals.

32.
Concepts: linking to educational needs, linked to broader educational goals
- A user links a feature to educational needs or goals.
- Linking the software to broader educational goals or initiatives.
===
Here are the definitions for each code:

---
1.
Concepts: previewing future updates, explaining and highlighting future features
Relationship: The designer provides a preview of upcoming updates or features and explains or highlights their importance to the community.
Criteria: A designer shares information about future updates or features with the community.
Phrase: Shares future updates

2.
Concepts: confirmed feature addition, confirming future features
Relationship: The designer confirms the addition of a feature, which implies a promise to deliver it in the future.
Criteria: A designer confirms or promises a future feature or update.
Phrase: Confirms feature addition

3.
Concepts: shared update timeline, sharing a project timeline, communicating project timeline
Relationship: The designer shares a specific update timeline, which is part of the project timeline, to communicate with the community.
Criteria: A designer shares a timeline or schedule for updates with the community.
Phrase: Shares project timeline

4.
Concepts: providing timeframe, managing a project timeline
Relationship: The designer provides a specific timeframe for completing a task or resolving an issue, which is part of managing the project timeline.
Criteria: A designer provides a specific timeframe for completing a task or resolving an issue.
Phrase: Provides timeframe

5.
Concepts: providing a release timeline, gives estimated completion date
Relationship: The designer provides a timeline and sets expectations for future releases, including an estimated completion date.
Criteria: A designer provides a timeline and sets expectations for future releases.
Phrase: Provides release timeline

6.
Concepts: maintain transparency, demonstrating transparency
Relationship: The designer maintains transparency by sharing development plans, timelines, or features with users, demonstrating openness and honesty.
Criteria: A designer shares information about the development process or design decisions with the community.
Phrase: Demonstrates transparency

7.
Concepts: responds to feature development, shared information about feature development
Relationship: The designer responds to earlier information or updates about feature development, sharing more information about the process.
Criteria: A designer shares information about current or future feature development.
Phrase: Shares feature development information

8.
Concepts: shares ongoing research, discusses ongoing research
Relationship: The designer shares ongoing research or experimentation, discussing the process and findings.
Criteria: A designer shares ongoing research or experimentation with the community.
Phrase: Shares ongoing research

9.
Concepts: consider future compatibility, speculating about compatibility
Relationship: The designer considers future compatibility or potential issues with the software, speculating about possible outcomes.
Criteria: A designer considers the software's compatibility with different systems.
Phrase: Considers future compatibility

10.
Concepts: specifying system requirements, clarifying platform requirements
Relationship: The designer specifies system requirements, clarifying the hardware expectations, and ensuring compatibility.
Criteria: A designer specifies system requirements or clarifies platform requirements.
Phrase: Specifies system requirements

11.
Concepts: considers broader implications, questioned broader implications
Relationship: The designer considers the broader implications of a feature or design decision, questioning potential outcomes and effects.
Criteria: A designer considers the broader implications of a feature or design decision.
Phrase: Considers broader implications

12.
Concepts: technical consideration, discussing technical requirements
Relationship: The designer considers a technical solution or approach, discussing technical requirements and feasibility.
Criteria: A designer discusses technical requirements or feasibility.
Phrase: Discusses technical requirements

13.
Concepts: considering practical constraints, considering implementation context
Relationship: The designer considers practical constraints or limitations, taking into account the implementation context.
Criteria: A designer considers practical constraints or limitations.
Phrase: Considers practical constraints

14.
Concepts: proposing design idea, elaboration of suggestion
Relationship: The designer proposes a new design idea or feature, elaborating on a suggestion or idea.
Criteria: A designer proposes a new design idea or feature.
Phrase: Proposes design idea

15.
Concepts: solution exploration, consideration of comprehensive solution
Relationship: The designer explores potential solutions or ideas, considering a comprehensive solution.
Criteria: A designer explores potential solutions or ideas.
Phrase: Explores potential solutions

16.
Concepts: iterating on design, planning iterative feedback
Relationship: The designer iterates on design or discusses design options, planning for iterative feedback or improvement.
Criteria: A designer iterates on design or discusses design options.
Phrase: Iterates on design

17.
Concepts: discussing future possibilities, prepared for further discussion
Relationship: The designer discusses and considers potential future developments, preparing for further discussion or investigation.
Criteria: A designer discusses and considers potential future developments.
Phrase: Discusses future possibilities

18.
Concepts: discussing usability, identifying usability issues
Relationship: The designer discusses and acknowledges usability issues, identifying areas for improvement.
Criteria: A designer discusses and acknowledges usability issues.
Phrase: Discusses usability issues

19.
Concepts: raising concerns, raising related issue
Relationship: The designer raises concerns about new features or functionalities, pointing out related issues or problems.
Criteria: A designer raises concerns about new features or functionalities.
Phrase: Raises concerns

20.
Concepts: noting potential issues, input issue identification, acknowledging potential issues
Relationship: The designer notes a potential bug or issue with a feature or functionality, identifying or acknowledging an input issue or problem.
Criteria: A designer notes a potential bug or issue with a feature or functionality.
Phrase: Notes potential issues

21.
Concepts: diagnosing problems, inquiring about problems
Relationship: The designer diagnoses and analyzes problems, inquiring about user problems and using a problem-solving approach.
Criteria: A designer diagnoses and analyzes problems.
Phrase: Diagnoses problems

22.
Concepts: showed interest in user context, understanding designers' situation
Relationship: The designer shows interest in the user's context or situation, understanding or empathizing with their needs.
Criteria: A designer shows interest in the user's context or situation.
Phrase: Shows interest in user context

23.
Concepts: supporting user needs, expressing understanding
Relationship: The designer supports and acknowledges user needs, expressing understanding and empathy.
Criteria: A designer supports and acknowledges user needs.
Phrase: Supports user needs

24.
Concepts: showing consideration, acknowledging user experience
Relationship: The designer shows consideration or empathy towards users, acknowledging their experience or perspective.
Criteria: A designer shows consideration or empathy towards users.
Phrase: Shows consideration

25.
Concepts: balancing user needs, align with user needs
Relationship: The designer balances different user needs, aligning their plans or goals with the users' needs or expectations.
Criteria: A designer balances different user needs.
Phrase: Balances user needs

26.
Concepts: reflecting on feedback, aligning with user feedback
Relationship: The designer reflects on or considers user feedback or suggestions, aligning with user feedback.
Criteria: A designer reflects on or considers user feedback or suggestions.
Phrase: Reflects on feedback

27.
Concepts: seeking expert input, involving teachers in design process, inquires about teacher needs
Relationship: The designer seeks expert input or advice from teachers or users, involving them in the design process or decision-making.
Criteria: A designer seeks expert input or advice from teachers or users.
Phrase: Seeks expert input

28.
Concepts: user needs, identification of institutional requirements
Relationship: The designer identifies potential user needs or requirements, indicating institutional requirements or needs.
Criteria: A designer identifies potential user needs or requirements.
Phrase: Identifies user needs

29.
Concepts: highlighting educational utility, highlights educational benefits
Relationship: The designer highlights the educational utility or value of a feature, explaining or highlighting the educational benefits or features of Physics Lab.
Criteria: A designer highlights the educational utility or value of a feature.
Phrase: Highlights educational utility

30.
Concepts: educational emphasis, educational importance
Relationship: The designer emphasizes the educational value or potential of the software, highlighting its importance for school or educational purposes.
Criteria: A designer emphasizes the educational value or potential of the software.
Phrase: Emphasizes educational importance

31.
Concepts: aligning with curriculum, aligning with educational needs
Relationship: The designer aligns with curriculum or educational standards, aligning the software with educational needs or goals.
Criteria: A designer aligns with curriculum or educational standards.
Phrase: Aligns with curriculum

32.
Concepts: linking to educational needs, linked to broader educational goals
Relationship: The designer links a feature to educational needs or goals, linking the software to broader educational goals or initiatives.
Criteria: A designer links a feature to educational needs or goals.
Phrase: Links to educational needs