You are an expert in thematic analysis clarifying the criteria of qualitative codes. Do not attempt to merge codes now.
Consider provided quotes, and note that each quote is independent of others.
Write clear and generalizable criteria for each code and do not introduce unnecessary details.
If necessary, refine labels to be more accurate, but do not repeat yourself.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1. 
Criteria: {Who did what, and how for code 1}
Label: {A descriptive label of code 1}
...
32.
Criteria: {Who did what, and how for code 32}
Label: {A descriptive label of code 32}
---
~~~
1.
Label: informing
Quotes:
- Designer: Hello everyone~ The development plan and PC download address are in the group announcement.

2.
Label: inquiring about update schedule
Quotes:
- User: Will there be an update this week? [Emoji]

3.
Label: but not too old
Quotes:
- Designer: Theoretically, it should be compatible (but the machine itself shouldn't be too old, probably from 2008 onwards).

4.
Label: share info on app release
Quotes:
- Designer: iOS is waiting for review~

5.
Label: managing expectations for feature release
Quotes:
- Designer: Of course, manual editing will also be allowed, but it might be a bit later

6.
Label: promising updates
Quotes:
- Designer: Hmm... I'll add it in the next update. PC updates are usually the fastest, so there will probably be another round this weekend.
- Designer: There will be.

7.
Label: appreciating practicality
Quotes:
- User: This software is great! It's quite practical, unlike some software that tries to be comprehensive but ends up being inconvenient to use.
- Designer: No need to be polite, if you encounter any problems during use, you can directly mention them in the group.

8.
Label: the use of emojis by users indicates a casual and friendly community environment
Quotes:
- User: How to download?

9.
Label: acknowledging the need for manual editing and the timeline for implementation
Quotes:
- Designer: Of course, manual editing will also be allowed, but it might be a bit later

10.
Label: explain lack of internet
Quotes:
- User: Generally not. Ever since an adult image popped up during a major city-level open class, the school has disabled the network on classroom computers [Emoji].

11.
Label: highlighting the simplicity of adding various components
Quotes:
- Designer: This belongs to the kind of feature that, once done, will ensure long-term stability... Adding various components is actually simpler

12.
Label: seeking assistance with platform features
Quotes:
- Designer: @Morning Tea Moonlight How can I upload a high-definition, uncensored version of this crappy avatar?

13.
Label: comparing to other software
Quotes:
- User: This software is great! It's quite practical, unlike some software that tries to be comprehensive but ends up being inconvenient to use.

14.
Label: promising improvement
Quotes:
- Designer: Thank you all for your support. We will do better!

15.
Label: informs about simulation adjustments
Quotes:
- Designer: From the next update, dry batteries will no longer be ideal components (you can remove the internal resistance to simulate).

16.
Label: appreciate dedication
Quotes:
- User: Yes, the spirit of craftsmanship that strives for perfection ðŸ¤”

17.
Label: adapting to user feedback
Quotes:
- Designer: We try to design it so that it can be used without additional instructions, or we will provide some prompts when you open it for the first time based on feedback
- Designer: So, use both?

18.
Label: comparison with other applications
Quotes:
- User: This software is great! It's quite practical, unlike some software that tries to be comprehensive but ends up being inconvenient to use.

19.
Label: plans to incorporate the suggested exit button function in the next update
Quotes:
- Designer: Hmm... I'll add it in the next update. PC updates are usually the fastest, so there will probably be another round this weekend.

20.
Label: user friendly design in educational contexts
Quotes:
- Designer: It does not support the XP system.

21.
Label: school needs
Quotes:
- User: Mainly, the school is building an information-based school
- User: Need the user manual for this software

22.
Label: offer personalized assistance
Quotes:
- Designer: Oh, please message me privately and tell me what you roughly need

23.
Label: disclosing
Quotes:
- User: Yes.

24.
Label: elaboration of response
Quotes:
- Designer: This is quite complex, so it will take more time... Hopefully, it can be released this week

25.
Label: leaving room for evolution
Quotes:
- Designer: We'll see if there's a suitable opportunity to do one later

26.
Label: design thoughts
Quotes:
- Designer: Make it simpler...

27.
Label: acknowledging group files
Quotes:
- User: [Emoji] Hello everyone, may I ask where I can download the PC / interactive whiteboard version of Physics Lab?

28.
Label: showing satisfaction
Quotes:
- User: I saw the group files, thank you.
- User: Oh, this is nice
- User: Updated

29.
Label: showing interest in functionality
Quotes:
- User: PC version?

30.
Label: explaining limitations
Quotes:
- Designer: This version of the circuit diagram is for testing only... You can drag the Editor because the auto-layout algorithm is not very stable and may produce some odd results
- User: Dizzy, the computer system for teachers at our school is quite old.
- Designer: It does not support the XP system.

31.
Label: prioritizing feature development
Quotes:
- Designer: It seems that local export needs to be supported.

32.
Label: showing understanding
Quotes:
- User: @John Chen (3) Yes, yes.
- Designer: Hmm hmm.
- User: Indeed
- User: ok
===
Here are the definitions for each code:

---
1. 
Criteria: Providing information about the development plan and PC download address.
Label: Sharing project updates

2. 
Criteria: Asking about the schedule of upcoming updates.
Label: Inquiring about updates

3. 
Criteria: Specifying the minimum system requirements for the software.
Label: Defining system requirements

4. 
Criteria: Informing about the status of the iOS app release.
Label: Sharing app release updates

5. 
Criteria: Setting expectations for the release of manual editing features.
Label: Managing feature expectations

6. 
Criteria: Committing to implementing user-suggested features in future updates.
Label: Promising feature updates

7. 
Criteria: Expressing appreciation for the practicality and user-friendliness of the software.
Label: Appreciating software usability

8. 
Criteria: Using emojis to convey a casual and friendly tone in the community.
Label: Using casual tone

9. 
Criteria: Acknowledging the need for manual editing and providing a timeline for implementation.
Label: Acknowledging feature requests

10. 
Criteria: Explaining the lack of internet access due to school restrictions.
Label: Explaining technical limitations

11. 
Criteria: Highlighting the simplicity of adding various components to the software.
Label: Explaining software development

12. 
Criteria: Requesting assistance with platform features, such as uploading high-definition avatars.
Label: Seeking technical assistance

13. 
Criteria: Comparing the software to other, less practical alternatives.
Label: Comparing to other software

14. 
Criteria: Expressing gratitude and promising to improve the software.
Label: Promising improvement

15. 
Criteria: Informing about adjustments to the simulation, such as changes to dry batteries.
Label: Sharing simulation updates

16. 
Criteria: Expressing appreciation for the dedication to craftsmanship and perfection.
Label: Appreciating dedication

17. 
Criteria: Adapting to user feedback and incorporating it into the software design.
Label: Adapting to feedback

18. 
Criteria: Comparing the software to other applications in terms of practicality.
Label: Comparing to other software

19. 
Criteria: Planning to incorporate user-suggested features, such as an exit button, in future updates.
Label: Planning feature updates

20. 
Criteria: Designing the software with user-friendly features for educational contexts.
Label: Designing for education

21. 
Criteria: Expressing school-related needs, such as building an information-based school.
Label: Expressing school needs

22. 
Criteria: Offering personalized assistance to users with specific needs.
Label: Offering personalized help

23. 
Criteria: Disclosing or confirming information.
Label: Disclosing information

24. 
Criteria: Providing additional explanations or elaborations on previous responses.
Label: Elaborating on responses

25. 
Criteria: Leaving room for future development and evolution of the software.
Label: Leaving room for evolution

26. 
Criteria: Sharing thoughts and ideas about software design.
Label: Sharing design thoughts

27. 
Criteria: Acknowledging the existence of group files or resources.
Label: Acknowledging group resources

28. 
Criteria: Expressing satisfaction or gratitude towards the software or community.
Label: Expressing satisfaction

29. 
Criteria: Showing interest in the functionality or features of the software.
Label: Showing interest in features

30. 
Criteria: Explaining the limitations or constraints of the software or system.
Label: Explaining limitations

31. 
Criteria: Prioritizing the development of specific features, such as local export.
Label: Prioritizing feature development

32. 
Criteria: Expressing understanding or agreement with others in the community.
Label: Showing understanding