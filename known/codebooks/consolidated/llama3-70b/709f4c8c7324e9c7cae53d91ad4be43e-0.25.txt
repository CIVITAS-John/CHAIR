You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: update planning, software update process
- The designer is planning or discussing the next update or changes to be made to the software.
- The designer mentions the process of updating software or releasing new versions.

2.
Concepts: feature release, announce feature updates
- The designer announces the release of a new version or update of the app.
- A designer announces new features, updates, or bug fixes based on user input.

3.
Concepts: explain new features, introduce update content
- Designers explain or describe new features or functionalities in the app.
- Introductions or overviews of new features or updates provided by the designer or developer.

4.
Concepts: provide update notes, list updates and fixes, share visual updates
- Designers provide detailed notes or changelogs about software updates.
- Designers list or describe bug fixes, new features, or updates in the app.
- Designers share a visual representation of the updates or changes made to the software.

5.
Concepts: inform about updates, system update communication
- Information about updates, releases, or changes is shared.
- Communicating updates or information about the system or product.

6.
Concepts: general announcement, make announcements
- Making a general announcement or notification.
- The speaker updates the community on changes or developments.

7.
Concepts: community update, community communication
- Instances where designers provide updates or announcements about the software.
- A designer communicates with the community, sharing updates or information.

8.
Concepts: information dissemination, communication about progress and plans
- The act of sharing information, resources, or updates with the community.
- Progress, plans, or updates are shared with the community.

9.
Concepts: confirm updates, affirming planned features, confirm future feature
- Confirmation is given about an upcoming feature or update.
- A planned feature is affirmed or confirmed.
- The speaker confirms or verifies that a feature or functionality will be available in the future.

10.
Concepts: update timelines, share release timelines
- Providing updates on timelines or schedules.
- The speaker provides an update on the release process or timeline.

11.
Concepts: future project suggestion, subject expansion suggestion
- A designer or user suggests a potential future project or idea.
- A user or designer suggests expanding the subject or scope of a project.

12.
Concepts: potential update, hint at future possibilities
- The designer mentions a potential future update or feature.
- The designer hints at future possibilities or features.

13.
Concepts: request new features, feature requests for physics experiments
- Users express a need or desire for a specific feature or functionality.
- User requests or suggests new features or improvements related to physics experiments.

14.
Concepts: suggestions of interactions, suggesting collaboration
- Suggestions or ideas are solicited for interactions or features.
- Suggestions or proposals for collaboration or joint efforts between users or the community.

15.
Concepts: encouraging feedback, encouraging elaboration
- Encouragement is given to provide more feedback or suggestions.
- Encouragement is given to elaborate on a topic or provide more information.

16.
Concepts: open-ended invitation, inviting further discussion
- The speaker encourages future discussion or questions.
- Users are invited to ask more questions or share their thoughts.

17.
Concepts: user feedback consideration, show consideration for users
- The speaker considers or responds to user feedback or suggestions.
- The speaker expresses consideration or empathy for another user's needs or feelings.

18.
Concepts: offer solutions, solution offering
- Designers share a workaround or solution to a problem.
- Offering a solution or workaround to a problem.

19.
Concepts: suggest alternative system, providing an alternative solution
- Suggesting alternative systems or solutions.
- Users or designers provide alternative suggestions or solutions to a problem or issue.

20.
Concepts: solution suggestion, share potential solutions, proposing design idea
- Suggesting potential solutions or ideas.
- Designer offers potential solutions or ideas for improving the software.
- The designer is proposing or suggesting a design idea or solution.

21.
Concepts: request feedback, feature request invitation
- Designers ask users for opinions or suggestions.
- Designers invite users to suggest new features or improvements.

22.
Concepts: seek future input, respond to developer's earlier information on feature development, iterative development based on user feedback
- A designer asks for future help or input from users for software iterations.
- Users respond to designers' earlier information about feature development.
- The designer solicits or responds to user feedback for iterative development.

23.
Concepts: adapt design plan, design adaptation
- A designer adapts or adjusts their design plan based on user feedback.
- The speaker suggests or discusses adapting a design to meet user needs.

24.
Concepts: refine design, suggest simplification
- A designer refines or simplifies design elements to improve the software's usability or functionality.
- A designer suggests simplifying a feature or process to improve its usability or efficiency.

25.
Concepts: feature adjustment, feature optimization
- The designer discusses or adjusts features or functionalities in the app.
- The designer is optimizing or refining a feature or functionality.

26.
Concepts: express comprehension, understanding designers' situation
- Designers express comprehension or understanding of user requests or needs.
- User understands or acknowledges the designer's situation or challenges.

27.
Concepts: identify user needs, catering to user needs
- A designer identifies or tries to understand the needs of the user.
- The designer prioritizes meeting user needs in the design process.

28.
Concepts: user-centric design, focus on user experience
- Prioritizing the user experience or ease of use in a feature or application.
- The user or designer suggests or emphasizes the importance of user experience.

29.
Concepts: usability feedback, usability improvement
- Identifying a usability issue or suggesting improvement.
- Instances where suggestions or changes are made to improve the usability of the software.

30.
Concepts: address usability concern, considering usability
- The designer addresses a concern related to usability.
- A designer discusses and considers user experience or usability aspects of the software.

31.
Concepts: group communication, share resources with the group
- The designer or users communicate with each other within the group, sharing information or updates.
- A designer or user shares resources or information with the group or suggests doing so.

32.
Concepts: foster open communication, direct communication
- A designer encourages open communication or feedback from users.
- Direct interactions between designers and users to discuss features, updates, and feedback.
===
Here are the definitions for each code:

---
1.
Concepts: update planning, software update process
Relationship: The designer's planning and the software update process are closely linked, as planning is a necessary step in the update process.
Criteria: The designer plans or discusses the next software update.
Phrase: Planning software updates.

2.
Concepts: feature release, announce feature updates
Relationship: The release of new features and announcing updates are two sides of the same coin, as the release is often accompanied by an announcement.
Criteria: The designer announces new features or updates.
Phrase: Announcing feature releases.

3.
Concepts: explain new features, introduce update content
Relationship: Explaining new features and introducing update content are both essential steps in helping users understand the updates.
Criteria: The designer explains or introduces new features or updates.
Phrase: Explaining new features.

4.
Concepts: provide update notes, list updates and fixes, share visual updates
Relationship: Providing update notes, listing updates and fixes, and sharing visual updates are all ways to inform users about the changes made.
Criteria: The designer provides detailed information about software updates.
Phrase: Providing update notes.

5.
Concepts: inform about updates, system update communication
Relationship: Informing about updates and system update communication are closely linked, as communication is necessary to inform users about updates.
Criteria: The designer shares information about software updates.
Phrase: Informing about updates.

6.
Concepts: general announcement, make announcements
Relationship: General announcements and making announcements are similar, as both involve sharing information with the community.
Criteria: The designer makes a general announcement.
Phrase: Making announcements.

7.
Concepts: community update, community communication
Relationship: Community updates and community communication are closely linked, as updates are often communicated to the community.
Criteria: The designer provides updates or announcements to the community.
Phrase: Providing community updates.

8.
Concepts: information dissemination, communication about progress and plans
Relationship: Disseminating information and communicating about progress and plans are both essential for keeping the community informed.
Criteria: The designer shares information about progress or plans.
Phrase: Disseminating information.

9.
Concepts: confirm updates, affirming planned features, confirm future feature
Relationship: Confirming updates, affirming planned features, and confirming future features are all ways to provide assurance about upcoming changes.
Criteria: The designer confirms or verifies upcoming features or updates.
Phrase: Confirming updates.

10.
Concepts: update timelines, share release timelines
Relationship: Update timelines and sharing release timelines are closely linked, as timelines are essential for planning and communication.
Criteria: The designer provides updates on timelines or schedules.
Phrase: Sharing release timelines.

11.
Concepts: future project suggestion, subject expansion suggestion
Relationship: Suggesting future projects and expanding the subject are both ways to explore new ideas or possibilities.
Criteria: The designer or user suggests a potential future project or idea.
Phrase: Suggesting future projects.

12.
Concepts: potential update, hint at future possibilities
Relationship: Mentioning potential updates and hinting at future possibilities are both ways to provide a glimpse into future plans.
Criteria: The designer mentions potential future updates or features.
Phrase: Hinting at future possibilities.

13.
Concepts: request new features, feature requests for physics experiments
Relationship: Requesting new features and making feature requests for physics experiments are both ways to express user needs.
Criteria: Users express a need or desire for a specific feature or functionality.
Phrase: Requesting new features.

14.
Concepts: suggestions of interactions, suggesting collaboration
Relationship: Suggesting interactions and suggesting collaboration are both ways to explore new possibilities or work together.
Criteria: Users or designers suggest interactions or collaboration.
Phrase: Suggesting interactions.

15.
Concepts: encouraging feedback, encouraging elaboration
Relationship: Encouraging feedback and encouraging elaboration are both ways to solicit more information or input.
Criteria: The designer encourages feedback or elaboration.
Phrase: Encouraging feedback.

16.
Concepts: open-ended invitation, inviting further discussion
Relationship: Open-ended invitations and inviting further discussion are both ways to encourage users to engage in conversation.
Criteria: The designer invites users to ask more questions or share their thoughts.
Phrase: Inviting further discussion.

17.
Concepts: user feedback consideration, show consideration for users
Relationship: Considering user feedback and showing consideration for users are both essential for building trust and understanding user needs.
Criteria: The designer considers or responds to user feedback or suggestions.
Phrase: Considering user feedback.

18.
Concepts: offer solutions, solution offering
Relationship: Offering solutions and solution offering are similar, as both involve providing a way to address a problem.
Criteria: The designer shares a workaround or solution to a problem.
Phrase: Offering solutions.

19.
Concepts: suggest alternative system, providing an alternative solution
Relationship: Suggesting alternative systems and providing alternative solutions are both ways to explore different possibilities.
Criteria: Users or designers suggest alternative solutions or systems.
Phrase: Suggesting alternative systems.

20.
Concepts: solution suggestion, share potential solutions, proposing design idea
Relationship: Suggesting solutions, sharing potential solutions, and proposing design ideas are all ways to explore possibilities for addressing a problem.
Criteria: The designer suggests potential solutions or ideas.
Phrase: Suggesting solutions.

21.
Concepts: request feedback, feature request invitation
Relationship: Requesting feedback and inviting feature requests are both ways to solicit user input.
Criteria: The designer asks users for opinions or suggestions.
Phrase: Requesting feedback.

22.
Concepts: seek future input, respond to developer's earlier information on feature development, iterative development based on user feedback
Relationship: Seeking future input, responding to earlier information, and iterative development are all essential for continuous improvement.
Criteria: The designer solicits or responds to user feedback for iterative development.
Phrase: Seeking future input.

23.
Concepts: adapt design plan, design adaptation
Relationship: Adapting design plans and design adaptation are closely linked, as adaptation is necessary to adjust to changing user needs.
Criteria: The designer adapts or adjusts their design plan based on user feedback.
Phrase: Adapting design plans.

24.
Concepts: refine design, suggest simplification
Relationship: Refining design and suggesting simplification are both ways to improve the usability or functionality of a feature.
Criteria: The designer refines or simplifies design elements to improve usability or functionality.
Phrase: Refining design.

25.
Concepts: feature adjustment, feature optimization
Relationship: Adjusting features and optimizing features are both ways to improve the functionality or usability of a feature.
Criteria: The designer discusses or adjusts features or functionalities in the app.
Phrase: Adjusting features.

26.
Concepts: express comprehension, understanding designers' situation
Relationship: Expressing comprehension and understanding the designer's situation are both essential for building empathy and trust.
Criteria: The designer expresses comprehension or understanding of user requests or needs.
Phrase: Expressing comprehension.

27.
Concepts: identify user needs, catering to user needs
Relationship: Identifying user needs and catering to user needs are both essential for designing user-centered software.
Criteria: The designer identifies or tries to understand the needs of the user.
Phrase: Identifying user needs.

28.
Concepts: user-centric design, focus on user experience
Relationship: User-centric design and focusing on user experience are both essential for prioritizing user needs.
Criteria: The designer prioritizes meeting user needs in the design process.
Phrase: Focusing on user experience.

29.
Concepts: usability feedback, usability improvement
Relationship: Providing usability feedback and suggesting improvements are both essential for improving the user experience.
Criteria: The designer identifies a usability issue or suggests improvement.
Phrase: Providing usability feedback.

30.
Concepts: address usability concern, considering usability
Relationship: Addressing usability concerns and considering usability are both essential for improving the user experience.
Criteria: The designer addresses a concern related to usability.
Phrase: Addressing usability concerns.

31.
Concepts: group communication, share resources with the group
Relationship: Group communication and sharing resources are both essential for collaboration and information sharing.
Criteria: The designer or user communicates with each other within the group, sharing information or updates.
Phrase: Sharing resources.

32.
Concepts: foster open communication, direct communication
Relationship: Fostering open communication and direct communication are both essential for encouraging feedback and collaboration.
Criteria: The designer encourages open communication or feedback from users.
Phrase: Fostering open communication.