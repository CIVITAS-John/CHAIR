You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (5 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
5. 
Concepts: {Repeat the input 5}
Relationship: {What is logical relationship between concepts in code 5, or N/A if not applicable}
Criteria: {Who did what, and how for code 5}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: provide tips and updates, instruction and updates
- Designer shares tips, updates, or new features.
- Designers providing updates and instructions to help users understand and use the software effectively.

2.
Concepts: discussing compatibility, confirm compatibility
- A designer or user discusses software compatibility or technical issues.
- Designer confirms or verifies the compatibility of the software with a specific system or device.

3.
Concepts: planning and explaining simulated experiments and assessments, providing feature examples and explaining simulation details
- Designers plan or discuss simulated experiments, explaining assessment features.
- Designers provide examples or demonstrations of features, explaining details and functionalities.

4.
Concepts: feature clarification, explaining and acknowledging the need for features
- Designers clarify the functionality or purpose of existing features.
- Designers explain the purpose and need for specific features or functionalities.

5.
Concepts: compare feature complexities, explaining feature complexity and design challenges
- Comparing the complexity, feasibility, or difficulty of different features.
- Designers explain feature complexity, expressing challenges and difficulties in development.
===
Here are the labels and definitions for each code:

---
Definitions for each code:

1.
Concepts: provide tips and updates, instruction and updates
Relationship: The concepts are related as designers share updates and instructions to facilitate users' understanding and effective use of the software.
Criteria: Designers provide tips, updates, and instructions to support users in using the software.
Phrase: Share updates and instructions.

2.
Concepts: discussing compatibility, confirm compatibility
Relationship: The concepts are related as discussing compatibility leads to confirming whether the software is compatible with a specific system or device.
Criteria: Designers discuss and confirm software compatibility with specific systems or devices.
Phrase: Discuss and confirm compatibility.

3.
Concepts: planning and explaining simulated experiments and assessments, providing feature examples and explaining simulation details
Relationship: The concepts are related as planning and explaining simulated experiments involve providing feature examples and explaining simulation details.
Criteria: Designers plan and explain simulated experiments, providing feature examples and explaining simulation details.
Phrase: Plan and explain simulated experiments.

4.
Concepts: feature clarification, explaining and acknowledging the need for features
Relationship: The concepts are related as clarifying features involves explaining their purpose and acknowledging the need for them.
Criteria: Designers clarify features, explaining their purpose and acknowledging their need.
Phrase: Clarify feature purposes.

5.
Concepts: compare feature complexities, explaining feature complexity and design challenges
Relationship: The concepts are related as comparing feature complexities involves explaining the challenges and difficulties in development.
Criteria: Designers compare feature complexities, explaining development challenges and difficulties.
Phrase: Compare and explain feature complexities.