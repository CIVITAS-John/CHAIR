You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: announcing software updates, announcing new versions and features
- Designers announce new updates or versions of the software.
- A designer announces the release of a new feature or version and upcoming features or updates.

2.
Concepts: iterative development based on user feedback, engaging in iterative development
- Describing iterative development processes based on user feedback.
- Instances where the design process is described as iterative, with ongoing optimizations and updates based on feedback and testing.

3.
Concepts: feature roadmap, providing feature development timelines
- A designer outlines the roadmap for feature development.
- A designer provides a timeline for when specific features or updates will be added.

4.
Concepts: sharing development progress, communicating development progress
- Designers share detailed information about the progress of software and feature development.
- A designer provides updates on the progress of ongoing tasks and plans for future updates.

5.
Concepts: offering solutions, share potential solutions
- A participant or designer provides or suggests potential solutions to problems or questions.
- A designer shares potential solutions based on user feedback.

6.
Concepts: requesting user feedback, seeking user feedback
- Designers encourage and request feedback from users about their experience or specific details.
- Designers prompt users to provide feedback or report issues and seek their feedback on desired features or improvements.

7.
Concepts: explaining intentions, explaining design and development rationale
- A designer explains the intention behind a follow-up question or design decision.
- A designer explains the rationale and goals behind specific design and development decisions.

8.
Concepts: teaching, user guidance
- A designer provides instructions or guidance on using a feature.
- A designer provides guidance on using features.

9.
Concepts: praising software usability, expressing satisfaction with features
- Users praise the software and comment on its ease of use and practicality.
- Users express their satisfaction and appreciation for the specific features of the software.

10.
Concepts: suggesting new features, requesting new features
- A participant suggests new features or improvements.
- Users request or propose additional features or functionalities.

11.
Concepts: used emojis, used non-verbal communication
- Users engage with the conversation using emojis to express emotions or reactions.
- The user expresses themselves using emojis or other non-verbal symbols.

12.
Concepts: explaining suggestions, user input with justifications
- A user provides a reason for their suggestion or explains the rationale behind their request for a feature.
- A user provides input, feedback, or suggestions with justifications.
===
---
Definitions for each code (12 in total):
1.
Concepts: announcing software updates, announcing new versions and features
Relationship: Both concepts involve communication from designers about changes and additions to the software.
Criteria: Designers announce new updates, versions, or features of the software and upcoming changes.
Phrase: Announcing updates and features

2.
Concepts: iterative development based on user feedback, engaging in iterative development
Relationship: Both concepts describe an ongoing, cyclical process of improvement informed by user feedback.
Criteria: Designers engage in iterative development, continually optimizing and updating based on user feedback.
Phrase: Engaging in iterative development

3.
Concepts: feature roadmap, providing feature development timelines
Relationship: Both concepts involve outlining future plans for software development.
Criteria: Designers provide a roadmap and timeline for the development and release of specific features or updates.
Phrase: Outlining feature roadmap

4.
Concepts: sharing development progress, communicating development progress
Relationship: Both concepts involve the dissemination of information regarding the current state of development.
Criteria: Designers share detailed updates on the progress of software and feature development.
Phrase: Communicating development progress

5.
Concepts: offering solutions, share potential solutions
Relationship: Both concepts involve providing answers or suggestions to address problems or questions.
Criteria: Participants or designers offer or suggest potential solutions to problems or questions.
Phrase: Offering solutions

6.
Concepts: requesting user feedback, seeking user feedback
Relationship: Both concepts involve soliciting opinions and experiences from users.
Criteria: Designers encourage and request feedback from users about their experiences or specific details.
Phrase: Requesting user feedback

7.
Concepts: explaining intentions, explaining design and development rationale
Relationship: Both concepts involve providing reasons or explanations for decisions made.
Criteria: Designers explain the intentions and rationale behind specific design and development decisions.
Phrase: Explaining design rationale

8.
Concepts: teaching, user guidance
Relationship: Both concepts involve providing instructional information to users.
Criteria: Designers provide instructions or guidance on using features.
Phrase: Providing user guidance

9.
Concepts: praising software usability, expressing satisfaction with features
Relationship: Both concepts involve positive feedback from users regarding their experience with the software.
Criteria: Users praise the software for its usability and express satisfaction with its features.
Phrase: Expressing satisfaction with software

10.
Concepts: suggesting new features, requesting new features
Relationship: Both concepts involve proposing additions or improvements to the software.
Criteria: Users suggest or request new features or functionalities.
Phrase: Proposing new features

11.
Concepts: used emojis, used non-verbal communication
Relationship: Both concepts involve non-verbal forms of expression.
Criteria: Users express themselves using emojis or other non-verbal symbols.
Phrase: Using non-verbal communication

12.
Concepts: explaining suggestions, user input with justifications
Relationship: Both concepts involve providing reasons or explanations for suggestions or input.
Criteria: Users provide suggestions or feedback along with justifications or explanations.
Phrase: Justifying suggestions
---