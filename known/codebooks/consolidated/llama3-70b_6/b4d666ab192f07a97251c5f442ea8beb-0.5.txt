You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: considering diverse user environments, demonstrating awareness of diverse user environments
- Considering diverse user environments or scenarios.
- Acknowledging or considering diverse user environments or needs.

2.
Concepts: considering diverse hardware, considering diverse use cases
- User considers diverse hardware environments or scenarios.
- Considerations or discussions about the software's compatibility with different hardware environments or use cases.

3.
Concepts: considering user context, inquiring about context
- Designer considers user context or environment.
- The designer considers or asks about the user's context, limitations, or needs.
- Designer inquires about the context of the user's environment.

4.
Concepts: inquiring about user context, showing interest in user context
- Inquiring about users' context, background, or profession.
- Showing interest in the user's context, such as their profession or role.

5.
Concepts: informing design considerations, providing context for design constraints
- User informs design considerations with their experience.
- A user provides context or shares an experience that informs design constraints or limitations.

6.
Concepts: sharing institutional constraints, describes institutional constraints
- User shares institutional constraints or limitations
- User describes limitations imposed by their institution.

7.
Concepts: highlighting constraints, describing constraints
- Highlighting constraints or limitations of the Physics Lab online community.
- Describing constraints or limitations of the Physics Lab online community or its users.
- Explaining or providing context for a specific constraint or limitation.

8.
Concepts: highlighting technical limitations, stating technical limitations
- User highlights technical limitations or constraints.
- A user or designer mentions limitations or constraints related to the technical capabilities of the software or hardware.
- The designer describes the limitations or constraints of a specific technology or platform.

9.
Concepts: technical limitation, technical limitations
- Acknowledges a technical limitation or constraint.
- Identifying and discussing potential technical limitations or constraints.

10.
Concepts: considering limitations, considering implementation constraints, considering technical limitations, considering technical requirements
- A designer considers or mentions limitations or potential issues with a feature or platform.
- Designer considers constraints or limitations when implementing features.
- A designer considers or discusses potential technical limitations or constraints that need to be addressed.
- A designer or developer considers technical requirements or limitations.

11.
Concepts: outlining technical possibilities, exploring technical constraints
- Designer outlines technical possibilities or limitations.
- The designer or user explores or discusses technical constraints or limitations.

12.
Concepts: explaining limitations, explaining system limitations, explaining system constraints, explaining design limitations
- A designer explains limitations or constraints.
- The designer explains the limitations or constraints of the system or tool.
- The designer explains why a particular issue or problem cannot be solved due to system limitations.
- Explaining the limitations or constraints of a design or feature.

13.
Concepts: clarifying system capabilities, clarifying design constraints
- Designer clarifies the capabilities and limitations of the system.
- The designer clarifies limitations or constraints in the design or functionality of the software.

14.
Concepts: feature limitations, explaining feature limitations
- Designer explains current limitations of software features.
- Designer explains the purpose and limitations of a specific feature or version.

15.
Concepts: states limitations, describing software limitations, discussing limitations
- A designer states a limitation or incompatibility of the software.
- Designer explains or acknowledges limitations of the software.
- Designer mentions a limitation or constraint of the software.
- Discussing the limitations or challenges of exploring or implementing specific features or directions within the online community.

16.
Concepts: suggesting alternatives, suggesting alternative designs, suggesting alternative approaches
- A user suggests alternative solutions or options for technical limitations or constraints.
- Users suggest alternative designs, approaches, or solutions for specific scenarios.
- User suggests alternative approaches or solutions to a problem or issue.

17.
Concepts: offering alternative, alternative solution, offering alternative solutions
- Designer or user offers alternative solutions or workarounds.
- Offers or suggestions of alternative solutions, workarounds, or approaches.
- User suggests an alternative solution or option.
- Offering alternative solutions, workarounds, or suggestions to overcome challenges or limitations.

18.
Concepts: offering workarounds, exploring workarounds
- Offering alternative solutions or workarounds to overcome obstacles.
- Suggestions or ideas for finding alternative solutions to a problem.

19.
Concepts: describing workarounds, explaining technical workarounds
- A designer or developer describes workarounds or alternative solutions for a limitation.
- A designer explains technical workarounds or solutions to user problems.

20.
Concepts: sharing workarounds, shares troubleshooting tip
- Designer shares a tip or workaround for using the software.
- Designer shares a workaround for a known issue.

21.
Concepts: seeking solutions, offering solutions
- The designer seeks solutions to a problem or issue.
- Designer offers a solution to a problem or issue.

22.
Concepts: reassurance, user reassurance
- Designer reassures users about upcoming features, updates, or resolutions to issues.
- Reassuring users about the product's development or release.
- The designer reassures the user that an update or feature will be available soon.

23.
Concepts: concern resolution, addressing user concerns, addressing concerns
- Designer resolves user concerns.
- Designer addresses or responds to user concerns
- The designer addresses or responds to user concerns or issues.

24.
Concepts: inquiring about user issues, probing for user difficulties
- Inquiring about issues or problems faced by users
- Asking users about their difficulties or problems with the software.

25.
Concepts: acknowledging user time, considering users' time
- A designer acknowledges or apologizes for taking up a user's time.
- Designer shows consideration for users' time and apologizes for any inconvenience.

26.
Concepts: apologizing for disturbance, shows consideration for users
- Designer apologizes for disturbing the user.
- Designer apologizes for a disturbance or inconvenience caused.
- Designer apologizes for a disturbance.
- Designer apologizes for a potential disturbance.

27.
Concepts: apologizing for inconvenience, apologize for potential interruption, apologizing for delays
- A designer apologizes for any inconvenience caused.
- Expressing regret for a specific action or event that may have caused inconvenience.
- A designer apologizes for potential interruption or inconvenience caused.
- A designer or developer apologizes for delays or expresses regret for an inconvenience.

28.
Concepts: acknowledging disturbance, acknowledging potential inconvenience
- Acknowledging or apologizing for disturbances or inconvenience.
- Acknowledging or apologizing for potential inconvenience or disruption caused by a specific action or event.

29.
Concepts: acknowledging potential disruption, recognizing potential disruption
- Acknowledging potential disruptions or inconvenience caused by the software.
- Apologies or acknowledgments of potential disruptions or inconveniences caused by the software or its development process.

30.
Concepts: apologizing, acknowledging mistake
- A user apologizes or excuses themselves in the online community.
- A user acknowledges a mistake or apologizes.

31.
Concepts: identifying gaps, product gap identification
- Identifying gaps or limitations in existing tools or software.
- User identifies a gap in the software's functionality.

32.
Concepts: highlighting limitations, highlighting challenges
- Users highlight limitations, constraints, or challenges they face while using the software.
- Users or the designer mention challenges or difficulties faced in using the software or in educational settings.
===
Here are the definitions for each code:

---
1.
Concepts: considering diverse user environments, demonstrating awareness of diverse user environments
Relationship: The concepts are related as considering diverse user environments demonstrates awareness of those environments.
Criteria: Designers consider diverse user environments and demonstrate awareness of those environments.
Phrase: Considering diverse user environments.

2.
Concepts: considering diverse hardware, considering diverse use cases
Relationship: The concepts are related as considering diverse hardware and use cases are aspects of considering diverse user environments.
Criteria: Designers consider diverse hardware environments and use cases.
Phrase: Considering diverse hardware and use cases.

3.
Concepts: considering user context, inquiring about context
Relationship: The concepts are related as considering user context involves inquiring about that context.
Criteria: Designers consider user context and inquire about it.
Phrase: Considering user context.

4.
Concepts: inquiring about user context, showing interest in user context
Relationship: The concepts are related as inquiring about user context shows interest in that context.
Criteria: Designers inquire about user context and show interest in it.
Phrase: Inquiring about user context.

5.
Concepts: informing design considerations, providing context for design constraints
Relationship: The concepts are related as informing design considerations involves providing context for design constraints.
Criteria: Users inform design considerations by providing context for design constraints.
Phrase: Informing design considerations.

6.
Concepts: sharing institutional constraints, describes institutional constraints
Relationship: The concepts are related as sharing institutional constraints involves describing those constraints.
Criteria: Users share institutional constraints by describing them.
Phrase: Sharing institutional constraints.

7.
Concepts: highlighting constraints, describing constraints
Relationship: The concepts are related as highlighting constraints involves describing those constraints.
Criteria: Users highlight constraints by describing them.
Phrase: Highlighting constraints.

8.
Concepts: highlighting technical limitations, stating technical limitations
Relationship: The concepts are related as highlighting technical limitations involves stating those limitations.
Criteria: Users highlight technical limitations by stating them.
Phrase: Highlighting technical limitations.

9.
Concepts: technical limitation, technical limitations
Relationship: N/A
Criteria: Users acknowledge technical limitations.
Phrase: Acknowledging technical limitations.

10.
Concepts: considering limitations, considering implementation constraints, considering technical limitations, considering technical requirements
Relationship: The concepts are related as considering limitations involves considering implementation constraints, technical limitations, and technical requirements.
Criteria: Designers consider limitations, implementation constraints, technical limitations, and technical requirements.
Phrase: Considering limitations.

11.
Concepts: outlining technical possibilities, exploring technical constraints
Relationship: The concepts are related as outlining technical possibilities involves exploring technical constraints.
Criteria: Designers outline technical possibilities by exploring technical constraints.
Phrase: Outlining technical possibilities.

12.
Concepts: explaining limitations, explaining system limitations, explaining system constraints, explaining design limitations
Relationship: The concepts are related as explaining limitations involves explaining system limitations, system constraints, and design limitations.
Criteria: Designers explain limitations, system limitations, system constraints, and design limitations.
Phrase: Explaining limitations.

13.
Concepts: clarifying system capabilities, clarifying design constraints
Relationship: The concepts are related as clarifying system capabilities involves clarifying design constraints.
Criteria: Designers clarify system capabilities by clarifying design constraints.
Phrase: Clarifying system capabilities.

14.
Concepts: feature limitations, explaining feature limitations
Relationship: The concepts are related as feature limitations involve explaining those limitations.
Criteria: Designers explain feature limitations.
Phrase: Explaining feature limitations.

15.
Concepts: states limitations, describing software limitations, discussing limitations
Relationship: The concepts are related as stating limitations involves describing software limitations and discussing limitations.
Criteria: Designers state limitations, describe software limitations, and discuss limitations.
Phrase: Stating limitations.

16.
Concepts: suggesting alternatives, suggesting alternative designs, suggesting alternative approaches
Relationship: The concepts are related as suggesting alternatives involves suggesting alternative designs and approaches.
Criteria: Users suggest alternative designs, approaches, and solutions.
Phrase: Suggesting alternatives.

17.
Concepts: offering alternative, alternative solution, offering alternative solutions
Relationship: The concepts are related as offering alternatives involves offering alternative solutions.
Criteria: Designers offer alternative solutions and workarounds.
Phrase: Offering alternative solutions.

18.
Concepts: offering workarounds, exploring workarounds
Relationship: The concepts are related as offering workarounds involves exploring workarounds.
Criteria: Designers offer workarounds and explore alternative solutions.
Phrase: Offering workarounds.

19.
Concepts: describing workarounds, explaining technical workarounds
Relationship: The concepts are related as describing workarounds involves explaining technical workarounds.
Criteria: Designers describe workarounds and explain technical workarounds.
Phrase: Describing workarounds.

20.
Concepts: sharing workarounds, shares troubleshooting tip
Relationship: The concepts are related as sharing workarounds involves sharing troubleshooting tips.
Criteria: Designers share workarounds and troubleshooting tips.
Phrase: Sharing workarounds.

21.
Concepts: seeking solutions, offering solutions
Relationship: The concepts are related as seeking solutions involves offering solutions.
Criteria: Designers seek solutions and offer solutions.
Phrase: Seeking solutions.

22.
Concepts: reassurance, user reassurance
Relationship: The concepts are related as reassurance involves reassuring users.
Criteria: Designers reassure users about upcoming features, updates, or resolutions to issues.
Phrase: Reassuring users.

23.
Concepts: concern resolution, addressing user concerns, addressing concerns
Relationship: The concepts are related as concern resolution involves addressing user concerns.
Criteria: Designers resolve user concerns and address concerns.
Phrase: Resolving concerns.

24.
Concepts: inquiring about user issues, probing for user difficulties
Relationship: The concepts are related as inquiring about user issues involves probing for user difficulties.
Criteria: Designers inquire about user issues and probe for user difficulties.
Phrase: Inquiring about user issues.

25.
Concepts: acknowledging user time, considering users' time
Relationship: The concepts are related as acknowledging user time involves considering users' time.
Criteria: Designers acknowledge user time and consider users' time.
Phrase: Acknowledging user time.

26.
Concepts: apologizing for disturbance, shows consideration for users
Relationship: The concepts are related as apologizing for disturbance involves showing consideration for users.
Criteria: Designers apologize for disturbance and show consideration for users.
Phrase: Apologizing for disturbance.

27.
Concepts: apologizing for inconvenience, apologize for potential interruption, apologizing for delays
Relationship: The concepts are related as apologizing for inconvenience involves apologizing for potential interruption and delays.
Criteria: Designers apologize for inconvenience, potential interruption, and delays.
Phrase: Apologizing for inconvenience.

28.
Concepts: acknowledging disturbance, acknowledging potential inconvenience
Relationship: The concepts are related as acknowledging disturbance involves acknowledging potential inconvenience.
Criteria: Designers acknowledge disturbance and potential inconvenience.
Phrase: Acknowledging disturbance.

29.
Concepts: acknowledging potential disruption, recognizing potential disruption
Relationship: The concepts are related as acknowledging potential disruption involves recognizing potential disruption.
Criteria: Designers acknowledge potential disruption and recognize potential disruption.
Phrase: Acknowledging potential disruption.

30.
Concepts: apologizing, acknowledging mistake
Relationship: The concepts are related as apologizing involves acknowledging mistakes.
Criteria: Users apologize and acknowledge mistakes.
Phrase: Apologizing.

31.
Concepts: identifying gaps, product gap identification
Relationship: The concepts are related as identifying gaps involves identifying product gaps.
Criteria: Users identify gaps and product gaps.
Phrase: Identifying gaps.

32.
Concepts: highlighting limitations, highlighting challenges
Relationship: The concepts are related as highlighting limitations involves highlighting challenges.
Criteria: Users highlight limitations and challenges.
Phrase: Highlighting limitations.