You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: recognize need for clear explanations, appreciating clear explanations provided by ai-driven interfaces
- Participants recognize the need for clear explanations in AI-driven interfaces.
- Participants appreciate clear explanations provided by AI-driven interfaces.

2.
Concepts: request ai clarification, seeking clarification from ai and understanding system functions
- Participants request explanations or clarifications from AI-driven interfaces to understand code structures.
- Participants seek clarification from AI and understand system functions.

3.
Concepts: define ai-assisted tasks, sets up tasks for ai assistance
- Participants define specific tasks or goals for AI-driven interfaces to support their work.
- Participants set up tasks for AI assistance, clarifying their needs.

4.
Concepts: evaluation, evaluate ai output
- Evaluates AI-generated code, identifying errors and suggesting improvements.
- Participants review and analyze AI-generated code to identify errors or areas for improvement.

5.
Concepts: evaluates chatgpt code, engages in careful code evaluation
- Evaluates and assesses AI-generated code.
- Evaluates AI-generated code carefully.

6.
Concepts: expressing uncertainty about ai reliability, questioning and expressing uncertainty about ai capabilities
- Participants express uncertainty, reflect on, or question AI-driven interfaces.
- Participants question and express uncertainty about AI capabilities.

7.
Concepts: critiquing ai limitations, identifying gaps and limitations in ai outputs
- Participants critically evaluate and identify AI limitations, highlighting areas for improvement.
- Participants identify gaps and limitations in AI-generated code.

8.
Concepts: accepting ai's limitations, acknowledging ai limitations
- Participants acknowledge and understand the limitations and constraints of AI.
- Participants acknowledge and recognize AI limitations in output and debugging.

9.
Concepts: describes specific instance, describing ai's code processing limitations
- User describes a specific instance of using AI, including its limitations, such as processing large code pieces.
- Participants describe their experience with AI limitations when working with long code pieces.

10.
Concepts: expressing frustration with ai limitations and errors, expressing frustration with ai responses and false errors
- Participants express frustration with AI limitations and errors.
- Participants express frustration with AI responses and false errors.

11.
Concepts: highlighting novice struggles and challenges, highlighting novice struggles and frustration
- Participants highlight struggles and challenges faced by novices.
- Participants highlight novice struggles and frustration with beginners' approaches.

12.
Concepts: desire for linting features, linting feature request
- The participant desires linting features in NetLogo to support code quality and error detection.
- The participant mentions the need for a feature that checks for conceptual errors in the code, similar to linting in other languages.
===
Here are the definitions for each code:

---
1.
Concepts: recognize need for clear explanations, appreciating clear explanations provided by ai-driven interfaces
Relationship: The concepts are related as participants recognize the need for clear explanations and appreciate when AI-driven interfaces provide them.
Criteria: Participants recognize the need for clear explanations and appreciate AI-driven interfaces that provide them.
Phrase: Appreciate clear explanations from AI.

2.
Concepts: request ai clarification, seeking clarification from ai and understanding system functions
Relationship: The concepts are related as participants request clarification from AI to understand system functions.
Criteria: Participants request clarification from AI to understand system functions and code structures.
Phrase: Seek AI clarification.

3.
Concepts: define ai-assisted tasks, sets up tasks for ai assistance
Relationship: The concepts are related as participants define tasks and set them up for AI assistance.
Criteria: Participants define tasks and set them up for AI assistance, clarifying their needs.
Phrase: Define AI-assisted tasks.

4.
Concepts: evaluation, evaluate ai output
Relationship: The concepts are related as participants evaluate AI-generated code to identify errors or areas for improvement.
Criteria: Participants evaluate AI-generated code to identify errors or areas for improvement.
Phrase: Evaluate AI output.

5.
Concepts: evaluates chatgpt code, engages in careful code evaluation
Relationship: The concepts are related as participants carefully evaluate AI-generated code.
Criteria: Participants carefully evaluate AI-generated code to identify errors or areas for improvement.
Phrase: Carefully evaluate AI code.

6.
Concepts: expressing uncertainty about ai reliability, questioning and expressing uncertainty about ai capabilities
Relationship: The concepts are related as participants express uncertainty about AI capabilities and question their reliability.
Criteria: Participants question and express uncertainty about AI capabilities and reliability.
Phrase: Express uncertainty about AI.

7.
Concepts: critiquing ai limitations, identifying gaps and limitations in ai outputs
Relationship: The concepts are related as participants critically evaluate AI limitations and identify gaps in AI-generated code.
Criteria: Participants critically evaluate AI limitations and identify gaps in AI-generated code.
Phrase: Critique AI limitations.

8.
Concepts: accepting ai's limitations, acknowledging ai limitations
Relationship: The concepts are related as participants acknowledge and understand AI limitations.
Criteria: Participants acknowledge and understand AI limitations in output and debugging.
Phrase: Acknowledge AI limitations.

9.
Concepts: describes specific instance, describing ai's code processing limitations
Relationship: The concepts are related as participants describe specific instances of AI limitations, such as processing large code pieces.
Criteria: Participants describe specific instances of AI limitations, such as processing large code pieces.
Phrase: Describe AI limitations.

10.
Concepts: expressing frustration with ai limitations and errors, expressing frustration with ai responses and false errors
Relationship: The concepts are related as participants express frustration with AI limitations, errors, and false errors.
Criteria: Participants express frustration with AI limitations, errors, and false errors.
Phrase: Express frustration with AI.

11.
Concepts: highlighting novice struggles and challenges, highlighting novice struggles and frustration
Relationship: The concepts are related as participants highlight novice struggles and frustration with beginners' approaches.
Criteria: Participants highlight novice struggles and frustration with beginners' approaches.
Phrase: Highlight novice struggles.

12.
Concepts: desire for linting features, linting feature request
Relationship: The concepts are related as participants desire and request linting features in NetLogo.
Criteria: Participants desire and request linting features in NetLogo to support code quality and error detection.
Phrase: Request linting features.