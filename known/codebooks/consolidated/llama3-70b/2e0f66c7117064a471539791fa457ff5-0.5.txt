You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between sub-codes. If a sub-code includes another, use the broader one. If sub-codes are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (20 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {A sentence of consolidated criteria 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
20.
Relationship: {The logical relationship between sub-codes in code 20}
Criteria: {A sentence of consolidated criteria 20}
Label: {A consolidated label of code 20}
Category: {2-4 words for code 20}
---
~~~
1. technical adjustment, property adjustments.
- Changes and updates to application components and technical settings.
- Descriptions of modifications made to software components and features.

2. experience sharing, teaching experience and collaborative learning.
- Sharing personal teaching experiences.
- Discussions or descriptions of teaching experience or pedagogical approaches, and descriptions or discussions of social or collaborative learning experiences and approaches.

3. teacher input, consultation with teachers.
- Input or feedback from teachers or educators, identifying and interacting with teachers.
- Seeking input or feedback from teachers for the software design.

4. legacy support, compatibility management, future compatibility.
- Supporting or maintaining compatibility with older or legacy systems.
- Planning or confirming compatibility with legacy systems or versions.
- Considering future compatibility with older systems.

5. compatibility issues, compatibility inquiries.
- Issues or challenges related to software compatibility.
- Involves questions or confirmation about software compatibility with operating systems.

6. internet access, network accessibility.
- Discussing internet access or connectivity issues.
- Discussions or concerns related to network connectivity and availability.

7. technical limitations, system and hardware constraints.
- References to limitations or constraints in the software or project.
- Refers to limitations imposed by hardware, systems, or technical constraints.

8. layout limitations, software limitations acknowledgment.
- Acknowledging limitations or issues with the current layout algorithm.
- Acknowledging and addressing software limitations and technical restrictions.

9. equipment modeling, component simulation.
- Modeling or simulating specific equipment, apparatus or physical components.
- Statements describing the simulation or modeling of specific electronic components within the platform.

10. subject focus, scope and focus.
- Focus on a specific subject or area of study (e.g., physics).
- Delineation of the primary focus, scope, or subject matter of the software or platform, particularly in relation to the broader field of physics.

11. software features, feature utility description.
- Descriptions and suggestions for software features and functionalities.
- Discussion on the practical utility and applications of software features.

12. platform functionality, component functionality.
- Descriptions of functionalities specific to a platform.
- Explanations of component functionalities or features.

13. feature complexity, complexity of development.
- Discussions or descriptions of the complexity of software features.
- Descriptions of the complexity involved in development tasks.

14. technical advice, hardware guidance.
- Provision of technical advice or guidance on system requirements and usage.
- Providing guidance or recommendations related to hardware specifications or capabilities.

15. download guidance, download process.
- Instructions and information on how to download software or resources.
- Discussions or requests related to the process of downloading or accessing resources, including instructions or guides.

16. inclusive design, accessibility.
- Designing features to accommodate a wide range of user needs.
- Ensuring accessibility or usability for users with different needs or device configurations.

17. participatory process, participatory design.
- Involving users in design and decision-making processes.
- Statements indicating the involvement of users in the platform's design or development process.

18. usability consideration, interface design considerations.
- Discussions or considerations related to the accessibility, usability, or user experience of the software.
- Involves discussions on layout options and usability factors in interface design.

19. user experience, student experience.
- Relates to the user's experience with the software or application.
- Describing student engagement levels or experiences with the software.

20. chemistry, designer's interest in chemistry.
- Mention of chemistry as a specific area of interest or focus.
- Mentioning personal interest in the field of chemistry.
===
Here are the definitions for each code, including the logical relationship between sub-codes, criteria, label, and category:

---
Categories: 
* Technical Development
* Pedagogy and Learning
* User-Centered Design
* Community Engagement
* Subject Matter

Definitions for each code:

1.
Relationship: Inclusion (technical adjustment is a broader concept that includes property adjustments)
Criteria: Changes or updates to application components and technical settings.
Label: Technical Adjustments
Category: Technical Development

2.
Relationship: Parallel (experience sharing and teaching experience are related but distinct concepts)
Criteria: Sharing personal teaching experiences or discussing collaborative learning approaches.
Label: Teaching Experiences
Category: Pedagogy and Learning

3.
Relationship: Inclusion (teacher input is a broader concept that includes consultation with teachers)
Criteria: Seeking input or feedback from teachers for software design.
Label: Teacher Feedback
Category: Pedagogy and Learning

4.
Relationship: Inclusion (legacy support is a broader concept that includes compatibility management and future compatibility)
Criteria: Supporting or maintaining compatibility with older or legacy systems.
Label: Legacy Support
Category: Technical Development

5.
Relationship: Inclusion (compatibility issues is a broader concept that includes compatibility inquiries)
Criteria: Issues or challenges related to software compatibility.
Label: Compatibility Issues
Category: Technical Development

6.
Relationship: Parallel (internet access and network accessibility are related but distinct concepts)
Criteria: Discussing internet access or network connectivity issues.
Label: Network Accessibility
Category: Technical Development

7.
Relationship: Inclusion (technical limitations is a broader concept that includes system and hardware constraints)
Criteria: References to limitations or constraints in the software or project.
Label: Technical Limitations
Category: Technical Development

8.
Relationship: Inclusion (layout limitations is a broader concept that includes software limitations acknowledgment)
Criteria: Acknowledging limitations or issues with the current layout algorithm.
Label: Software Limitations
Category: Technical Development

9.
Relationship: Parallel (equipment modeling and component simulation are related but distinct concepts)
Criteria: Modeling or simulating specific equipment or physical components.
Label: Equipment Modeling
Category: Subject Matter

10.
Relationship: Parallel (subject focus and scope and focus are related but distinct concepts)
Criteria: Focus on a specific subject or area of study (e.g., physics).
Label: Subject Focus
Category: Subject Matter

11.
Relationship: Parallel (software features and feature utility description are related but distinct concepts)
Criteria: Descriptions and suggestions for software features and functionalities.
Label: Software Features
Category: Technical Development

12.
Relationship: Parallel (platform functionality and component functionality are related but distinct concepts)
Criteria: Descriptions of functionalities specific to a platform.
Label: Platform Functionality
Category: Technical Development

13.
Relationship: Inclusion (feature complexity is a broader concept that includes complexity of development)
Criteria: Discussions or descriptions of the complexity of software features.
Label: Feature Complexity
Category: Technical Development

14.
Relationship: Parallel (technical advice and hardware guidance are related but distinct concepts)
Criteria: Provision of technical advice or guidance on system requirements and usage.
Label: Technical Guidance
Category: Technical Development

15.
Relationship: Inclusion (download guidance is a broader concept that includes download process)
Criteria: Instructions and information on how to download software or resources.
Label: Download Guidance
Category: Technical Development

16.
Relationship: Parallel (inclusive design and accessibility are related but distinct concepts)
Criteria: Designing features to accommodate a wide range of user needs.
Label: Inclusive Design
Category: User-Centered Design

17.
Relationship: Parallel (participatory process and participatory design are related but distinct concepts)
Criteria: Involving users in design and decision-making processes.
Label: Participatory Design
Category: User-Centered Design

18.
Relationship: Parallel (usability consideration and interface design considerations are related but distinct concepts)
Criteria: Discussions or considerations related to the accessibility, usability, or user experience of the software.
Label: Usability Considerations
Category: User-Centered Design

19.
Relationship: Parallel (user experience and student experience are related but distinct concepts)
Criteria: Relates to the user's experience with the software or application.
Label: User Experience
Category: User-Centered Design

20.
Relationship: Inclusion (chemistry is a broader concept that includes designer's interest in chemistry)
Criteria: Mention of chemistry as a specific area of interest or focus.
Label: Chemistry Interest
Category: Subject Matter