You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: technical constraints
- Instances where technical limitations or requirements are discussed.
- Instances where limitations or constraints of the software are mentioned.

2.
Concepts: promote community engagement
- Instances where members of the community actively participate in discussions, ask questions, or provide feedback.
- Instances where users or designers engage in discussions that foster community interaction and participation.
- Active participation and interaction among community members, including both users and designers.
- Efforts made by designers to actively involve and communicate with the user community.

3.
Concepts: collaborative problem solving
- Moments where designers and users work together to address issues.
- Collaborative efforts between users and designers to solve issues and improve the product.
- Instances where users and designers work together to address issues or improve the software.

4.
Concepts: user engagement
- Instances where users actively participate in the conversation, showing interest or involvement in the community.
- Instances where users engage with designers through questions, feedback, or expressions of anticipation.
- Instances where users actively participate in the conversation, showing interest and involvement.

5.
Concepts: encourage participatory design
- Instances where the community contributes to the design and development of the Physics Lab by providing suggestions or feedback that influence the development process.
- Instances where designers seek or consider user input in the design and development process.
- Instances where users are invited to participate in the design process or provide input.
- Instances where users and designers collaboratively discuss features and usability, reflecting a user-centered design approach.
- The involvement of users in the design and development process, contributing their insights and needs.
- Encouragement by designers for users to contribute ideas, feedback, and suggestions for the development of Physics Lab.
- Active involvement of users in the design process to ensure the product meets their needs and preferences.
- The involvement of users in the design process to ensure the product meets their needs and preferences.
- Instances where users and designers collaboratively discuss or work on design improvements.

6.
Concepts: user feedback integration
- Instances where user feedback is acknowledged and incorporated into the design process.
- Instances where user feedback is actively sought and incorporated into the design process.

7.
Concepts: user response
- Input and suggestions provided by users regarding the design and functionality of the product.
- Instances where users provide feedback or ask questions that influence the design process.
- Instances where users provide feedback or suggestions to improve the software.
- Instances where users provide suggestions or feedback on features and functionalities.
- Instances where users provide feedback or ask questions about the app's development and updates.

8.
Concepts: role identification
- Instances where users or designers identify their roles, which can help understand the community structure and the roles within it.
- Instances where participants identify their roles or expertise, contributing to the problem-solving process.
- Identifying roles within the community, such as designers, teachers, or other users.

9.
Concepts: informal communication
- Instances where the tone of the conversation is casual or informal, indicating the nature of the community's communication style.
- Casual and non-technical interactions among community members, including humor and personal remarks.

10.
Concepts: designer responsiveness
- Instances where designers respond to user queries or engage with user comments, indicating active communication between designers and users.
- Instances where designers respond to user inquiries, suggestions, or feedback.
- Instances where designers respond to user feedback or suggestions.
- Instances where designers acknowledge user feedback and discuss potential solutions or updates.
- Designers responding to user feedback and addressing their concerns or suggestions.
- Instances where designers respond to user queries or feedback, showing attentiveness to user needs.

11.
Concepts: user requests
- Instances where users request new features or improvements.
- Specific features or improvements requested by users.

12.
Concepts: iterative development
- Instances where designers discuss updates, new features, or bug fixes.
- The process of repeatedly refining and improving a product based on feedback and testing.
- The process of continuously improving the product based on feedback and testing.
- Instances where the design process is described as iterative, with ongoing optimizations and updates.
===
---
Definitions for each code (12 in total):
1.
Concepts: technical constraints
Relationship: Technical limitations and software requirements are interrelated as they both define the boundaries within which the community operates.
Criteria: Instances where technical limitations or requirements are discussed, highlighting the constraints of the software.
Phrase: Discuss technical limitations.

2.
Concepts: promote community engagement
Relationship: Active participation and interaction among community members are essential for fostering a vibrant community, supported by designers' efforts to involve users.
Criteria: Instances where community members actively participate in discussions and designers engage with users to foster interaction.
Phrase: Foster community interaction.

3.
Concepts: collaborative problem solving
Relationship: Collaborative efforts between users and designers are crucial for addressing issues and improving the product, emphasizing teamwork.
Criteria: Moments where designers and users work together to solve issues and enhance the software.
Phrase: Solve problems collaboratively.

4.
Concepts: user engagement
Relationship: User participation and involvement in conversations are critical indicators of a thriving community, reflecting their interest and investment.
Criteria: Instances where users actively participate in discussions, showing interest and involvement in the community.
Phrase: Engage users actively.

5.
Concepts: encourage participatory design
Relationship: User involvement in the design process is essential for creating a user-centered product, facilitated by designers' encouragement and consideration of feedback.
Criteria: Instances where the community contributes to the design process through suggestions and feedback, influencing development.
Phrase: Involve users in design.

6.
Concepts: user feedback integration
Relationship: Acknowledging and incorporating user feedback into the design process is vital for ensuring the product meets user needs.
Criteria: Instances where user feedback is actively sought and integrated into the design process.
Phrase: Integrate user feedback.

7.
Concepts: user response
Relationship: User input and suggestions are critical for informing the design process and improving the product's functionality.
Criteria: Instances where users provide feedback or suggestions that influence the design and functionality of the product.
Phrase: Gather user feedback.

8.
Concepts: role identification
Relationship: Identifying roles within the community helps clarify the structure and dynamics of interactions among participants.
Criteria: Instances where users or designers identify their roles, contributing to the community's problem-solving process.
Phrase: Identify community roles.

9.
Concepts: informal communication
Relationship: Casual and non-technical interactions among community members foster a friendly and approachable communication style.
Criteria: Instances where the tone of the conversation is casual, indicating the nature of the community's communication style.
Phrase: Engage in casual conversation.

10.
Concepts: designer responsiveness
Relationship: Active communication between designers and users is essential for addressing user needs and fostering a collaborative environment.
Criteria: Instances where designers respond to user queries and feedback, showing attentiveness to user needs.
Phrase: Respond to user inquiries.

11.
Concepts: user requests
Relationship: User requests for new features or improvements highlight the community's needs and desires for the product's evolution.
Criteria: Instances where users request specific features or improvements to the product.
Phrase: Request new features.

12.
Concepts: iterative development
Relationship: The process of continuously refining the product based on feedback and testing is fundamental to effective design and improvement.
Criteria: Instances where designers discuss updates and the iterative process of refining the product based on user feedback.
Phrase: Refine through iteration.
---