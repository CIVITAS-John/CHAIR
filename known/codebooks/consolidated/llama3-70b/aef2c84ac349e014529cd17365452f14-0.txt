You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: usability need, indicating user needs, community need
- A user highlights a need for improved usability in the software.
- A user implies potential needs or requirements for the software.
- A user expresses a need or desire for a specific feature or functionality in the software.

2.
Concepts: user tips, suggest practical use case
- A user shares a tip or suggestion for using the software.
- A user suggests a practical use case or feature for the software.

3.
Concepts: share user experience, provide specific feedback
- A user shares their experience or opinion about the software.
- A user provides specific, detailed feedback on a particular aspect of the software.

4.
Concepts: request new features, request additional experiments
- Users make requests for new features or functionality.
- A user requests additional experiments or features in the software.

5.
Concepts: providing additional suggestions, suggest educational enhancements
- A user provides additional suggestions or refinements.
- A user suggests new features or enhancements to improve the educational experience.

6.
Concepts: expressed interest, interest in platform development
- A user expresses interest in the software or a feature.
- A user expresses interest in the development or updates of the platform.

7.
Concepts: suggestion justification, user feedback with justification
- Providing reasons or justification for a suggestion or request.
- Providing feedback or suggestions with justifications or explanations.

8.
Concepts: giving a reason, explaining reasons for a request
- A user provides a reason for their action or decision.
- A user explains the reasons behind their request.

9.
Concepts: providing community context, providing context or explaining question context
- A user provides context about their situation or community.
- Users provide context or explain the intention behind their question.

10.
Concepts: provide platform-specific information, platform-specific communication
- Updates or information are specific to a particular platform.
- The designer provides information specific to a particular platform (e.g., PC, iOS, Android).

11.
Concepts: technical issue, technical inquiry
- User reports or discusses a technical issue or problem with the platform.
- Instances where users ask technical questions about the platform, indicating areas of user interest or potential issues.

12.
Concepts: requesting assistance, technical support request
- A user requests assistance or help with the software.
- Requests for technical assistance or guidance.

13.
Concepts: guidance seeking, request for help
- Seeking guidance or direction from others.
- Requesting assistance or guidance from others.

14.
Concepts: request for resources, requesting user manuals or resources
- User asks for resources or information.
- Users request user manuals or access to resources related to the software.

15.
Concepts: asking a question, information seeking
- A user asks a question or seeks information from others in the online community.
- Users asking questions to gain knowledge or resources related to the software.

16.
Concepts: platform question, ask a question about the app
- User asks a question about the platform or its features.
- A user asks a question about the app, including its features or functionality.

17.
Concepts: inquiring about usage, inquiring about access to features or resources
- A user asks for guidance or instructions on how to use a specific feature or function.
- Users inquire about access to specific features or resources.

18.
Concepts: internet access issue, internet restriction
- A user explains the lack of internet access in their school.
- The user mentions restrictions or limitations imposed by schools or institutions.

19.
Concepts: educational challenges, user experience in educational contexts
- A user or designer discusses technical or infrastructural challenges in educational settings.
- User experiences and challenges in using the software within educational settings.

20.
Concepts: student engagement, sharing classroom experiences
- A user expresses enthusiasm or interest in using the software in a class setting.
- A user shares a positive experience using the software in a classroom setting.

21.
Concepts: identifying as a teacher, introduce teacher identity, teacher identity
- A user identifies as a teacher or confirms their teaching role.
- User introduces themselves as a teacher with specific grade-level and experience.
- The designer or user identifies as a teacher or educator, often sharing their experience or perspective.

22.
Concepts: identifying roles, inquiring about user identity
- A user or designer identifies their role or expertise.
- A designer inquires about a user's role or identity.

23.
Concepts: personal anecdote, sharing past incident, story sharing
- A user shares a personal anecdote or experience.
- A user shares a past experience or incident related to the platform or its use.
- User shares a personal experience or story related to the online community or physics lab.

24.
Concepts: user background, provide background information
- Information provided by users about their professional or personal background, which helps in understanding the community's composition.
- A user provides background information about themselves or their experience.

25.
Concepts: feature complexity, compare feature complexities
- Mentioning the complexity or difficulty of a feature or task.
- Comparisons or discussions about the complexity of different features.

26.
Concepts: long-term stability, feature stability
- Discussing the long-term stability or maintenance of a feature.
- A designer discusses or mentions the stability or reliability of a feature or component.

27.
Concepts: plan feature development, explanation of upcoming features
- Statements about planned or upcoming features or developments.
- Descriptions or explanations of upcoming features or functionalities.

28.
Concepts: introducing new features, explaining feature expansion, simulation enhancement
- Designer introduces a new feature or function.
- The designer discusses or announces an update or expansion of the software's features.
- The designer discusses or announces enhancements to the simulation feature.

29.
Concepts: clarify existing feature, technical clarification
- Designer explains or clarifies the functionality of an existing feature.
- A designer provides technical clarification, explanation, or details about a feature or concept.

30.
Concepts: explain features, explain feature importance
- Designers explain or provide details about features.
- A designer explains the importance, significance, or value of a feature or component.

31.
Concepts: explaining the need, acknowledge need for feature
- Designer explains the need or purpose behind a feature or development.
- The designer acknowledges the need for a specific feature or update.

32.
Concepts: limitation of the team, acknowledge limitations, highlight technical constraints, explaining platform or current limitations
- The designer expresses limitations or constraints of the development team.
- The designer acknowledges limitations or constraints, often related to technical or resource issues.
- Users or designers highlight technical constraints or limitations.
- Designers explain limitations or constraints of the platform or current version.
===
Here are the definitions for each code:

---
1.
Concepts: usability need, indicating user needs, community need
Relationship: The concepts are related as they all refer to users expressing their needs or requirements for the software.
Criteria: Users express needs or requirements for the software, indicating usability issues or community needs.
Phrase: Expressing usability needs.

2.
Concepts: user tips, suggest practical use case
Relationship: The concepts are related as they both involve users providing suggestions or ideas for using the software.
Criteria: Users share tips or suggest practical use cases for the software.
Phrase: Sharing user tips.

3.
Concepts: share user experience, provide specific feedback
Relationship: The concepts are related as they both involve users providing information about their experience with the software.
Criteria: Users share their experience or provide specific feedback on the software.
Phrase: Sharing user experiences.

4.
Concepts: request new features, request additional experiments
Relationship: The concepts are related as they both involve users making requests for new or additional features.
Criteria: Users request new features or additional experiments in the software.
Phrase: Requesting new features.

5.
Concepts: providing additional suggestions, suggest educational enhancements
Relationship: The concepts are related as they both involve users providing suggestions for improving the software.
Criteria: Users provide additional suggestions or suggest educational enhancements for the software.
Phrase: Providing additional suggestions.

6.
Concepts: expressed interest, interest in platform development
Relationship: The concepts are related as they both involve users expressing interest in the software or its development.
Criteria: Users express interest in the software or its development.
Phrase: Expressing interest.

7.
Concepts: suggestion justification, user feedback with justification
Relationship: The concepts are related as they both involve users providing reasons or explanations for their suggestions or feedback.
Criteria: Users provide suggestions or feedback with justifications or explanations.
Phrase: Providing justified feedback.

8.
Concepts: giving a reason, explaining reasons for a request
Relationship: The concepts are related as they both involve users providing explanations for their requests or actions.
Criteria: Users provide reasons or explanations for their requests or actions.
Phrase: Explaining reasons.

9.
Concepts: providing community context, providing context or explaining question context
Relationship: The concepts are related as they both involve users providing context or explanations for their questions or situations.
Criteria: Users provide context or explain the intention behind their questions.
Phrase: Providing community context.

10.
Concepts: provide platform-specific information, platform-specific communication
Relationship: The concepts are related as they both involve providing information specific to a particular platform.
Criteria: Updates or information are specific to a particular platform.
Phrase: Providing platform-specific information.

11.
Concepts: technical issue, technical inquiry
Relationship: The concepts are related as they both involve users discussing or inquiring about technical issues with the platform.
Criteria: Users report or discuss technical issues or ask technical questions about the platform.
Phrase: Reporting technical issues.

12.
Concepts: requesting assistance, technical support request
Relationship: The concepts are related as they both involve users requesting help or assistance with the software.
Criteria: Users request assistance or technical support with the software.
Phrase: Requesting technical assistance.

13.
Concepts: guidance seeking, request for help
Relationship: The concepts are related as they both involve users seeking guidance or direction from others.
Criteria: Users seek guidance or request help from others.
Phrase: Seeking guidance.

14.
Concepts: request for resources, requesting user manuals or resources
Relationship: The concepts are related as they both involve users requesting resources or information.
Criteria: Users request resources or information related to the software.
Phrase: Requesting resources.

15.
Concepts: asking a question, information seeking
Relationship: The concepts are related as they both involve users seeking information or asking questions.
Criteria: Users ask questions or seek information from others in the online community.
Phrase: Asking questions.

16.
Concepts: platform question, ask a question about the app
Relationship: The concepts are related as they both involve users asking questions about the platform or its features.
Criteria: Users ask questions about the platform or its features.
Phrase: Asking platform questions.

17.
Concepts: inquiring about usage, inquiring about access to features or resources
Relationship: The concepts are related as they both involve users inquiring about how to use specific features or access resources.
Criteria: Users inquire about how to use specific features or access resources.
Phrase: Inquiring about usage.

18.
Concepts: internet access issue, internet restriction
Relationship: The concepts are related as they both involve users discussing limitations or restrictions related to internet access.
Criteria: Users discuss limitations or restrictions related to internet access.
Phrase: Discussing internet access issues.

19.
Concepts: educational challenges, user experience in educational contexts
Relationship: The concepts are related as they both involve users discussing challenges or experiences related to using the software in educational settings.
Criteria: Users discuss technical or infrastructural challenges in educational settings.
Phrase: Discussing educational challenges.

20.
Concepts: student engagement, sharing classroom experiences
Relationship: The concepts are related as they both involve users sharing positive experiences or enthusiasm for using the software in educational settings.
Criteria: Users share positive experiences or enthusiasm for using the software in educational settings.
Phrase: Sharing classroom experiences.

21.
Concepts: identifying as a teacher, introduce teacher identity, teacher identity
Relationship: The concepts are related as they all involve users identifying as teachers or educators.
Criteria: Users identify as teachers or educators, often sharing their experience or perspective.
Phrase: Identifying as a teacher.

22.
Concepts: identifying roles, inquiring about user identity
Relationship: The concepts are related as they both involve users identifying their roles or inquiring about others' roles.
Criteria: Users identify their roles or inquire about others' roles.
Phrase: Identifying roles.

23.
Concepts: personal anecdote, sharing past incident, story sharing
Relationship: The concepts are related as they all involve users sharing personal experiences or stories.
Criteria: Users share personal anecdotes or experiences related to the platform or its use.
Phrase: Sharing personal anecdotes.

24.
Concepts: user background, provide background information
Relationship: The concepts are related as they both involve users providing information about their professional or personal background.
Criteria: Users provide background information about themselves or their experience.
Phrase: Providing background information.

25.
Concepts: feature complexity, compare feature complexities
Relationship: The concepts are related as they both involve discussing the complexity of features or tasks.
Criteria: Users discuss or compare the complexity of different features.
Phrase: Discussing feature complexity.

26.
Concepts: long-term stability, feature stability
Relationship: The concepts are related as they both involve discussing the stability or reliability of features.
Criteria: Designers discuss or mention the stability or reliability of features or components.
Phrase: Discussing feature stability.

27.
Concepts: plan feature development, explanation of upcoming features
Relationship: The concepts are related as they both involve designers discussing planned or upcoming features.
Criteria: Designers discuss or explain planned or upcoming features or developments.
Phrase: Planning feature development.

28.
Concepts: introducing new features, explaining feature expansion, simulation enhancement
Relationship: The concepts are related as they all involve designers introducing or explaining new features or updates.
Criteria: Designers introduce or explain new features, updates, or enhancements to the simulation feature.
Phrase: Introducing new features.

29.
Concepts: clarify existing feature, technical clarification
Relationship: The concepts are related as they both involve designers explaining or clarifying the functionality of existing features.
Criteria: Designers explain or clarify the functionality of existing features.
Phrase: Clarifying existing features.

30.
Concepts: explain features, explain feature importance
Relationship: The concepts are related as they both involve designers explaining features or their importance.
Criteria: Designers explain or provide details about features or their importance.
Phrase: Explaining features.

31.
Concepts: explaining the need, acknowledge need for feature
Relationship: The concepts are related as they both involve designers explaining or acknowledging the need for a feature or development.
Criteria: Designers explain or acknowledge the need for a specific feature or update.
Phrase: Explaining the need.

32.
Concepts: limitation of the team, acknowledge limitations, highlight technical constraints, explaining platform or current limitations
Relationship: The concepts are related as they all involve designers discussing limitations or constraints related to the development team or platform.
Criteria: Designers express limitations or constraints, often related to technical or resource issues.
Phrase: Acknowledging limitations.