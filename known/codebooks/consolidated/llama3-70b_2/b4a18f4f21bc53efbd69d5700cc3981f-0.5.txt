You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (12 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
12. 
Concepts: {Repeat the input 12}
Relationship: {What is logical relationship between concepts in code 12, or N/A if not applicable}
Criteria: {Who did what, and how for code 12}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: ask questions, ask follow-up questions
- Users ask questions to seek information or clarification.
- Users ask follow-up questions.

2.
Concepts: acknowledgment, acknowledge resources
- Expressing acknowledgment, gratitude, or appreciation for help or support.
- Users acknowledge or express gratitude for resources or help.

3.
Concepts: confirmation/agreement of collaboration, confirming agreements and understanding
- Confirming or agreeing to collaborate with users or stakeholders.
- Users or designers express agreement or confirmation with statements or ideas and acknowledge understanding of concepts or issues.

4.
Concepts: discuss implementation, discuss practical application
- Users discuss implementing the Physics Lab in educational settings.
- Instances where the practical application of the software in educational settings is discussed.

5.
Concepts: explain functionality, providing technical explanations and details
- Designers explain component functionality or introduce new features.
- Designers provide technical details or specifications about the system or its features.

6.
Concepts: clarify updates, inform about updates
- Designers provide information about updates, releases, or bug fixes.
- Designers inform about upcoming features or updates.

7.
Concepts: promise updates, providing update previews and timelines
- Designers promise or commit to future updates.
- Designers provide previews of upcoming updates or features and share release timelines or update frequencies.

8.
Concepts: software update process, discussing internal software updates
- The designer mentions the process of updating software or fixing issues.
- Designers discuss internal updates or changes to the software.

9.
Concepts: user communication, provide update notifications
- Communicating updates, releases, or other information about the Physics Lab.
- The designer notifies the group or users about updates, new releases, or changes in the Physics Lab.

10.
Concepts: discussing feature implementation, acknowledgment and implementation
- Designers discuss implementing or planning features or functionality.
- Designers acknowledging user feedback and discussing plans to implement suggested features.

11.
Concepts: outline development priorities, prioritizing and setting development goals
- Outlining development priorities or goals for the system.
- Designers outline or prioritize feature development and set goals or targets for software development or feature implementation.

12.
Concepts: respond to the feature request, acknowledging feedback and requests
- Designer responds to a feature request or suggestion.
- Users acknowledge or respond to feature requests or feedback.
===
Here are the definitions for each code:

---
1.
Concepts: ask questions, ask follow-up questions
Relationship: Sequential, as asking follow-up questions is a natural consequence of asking initial questions.
Criteria: Users seek information or clarification by asking questions and follow-up questions.
Phrase: Seeking clarification through questioning.

2.
Concepts: acknowledgment, acknowledge resources
Relationship: Associative, as acknowledgment is often expressed in response to receiving resources or help.
Criteria: Users express gratitude or appreciation for help or support by acknowledging resources.
Phrase: Expressing gratitude for support.

3.
Concepts: confirmation/agreement of collaboration, confirming agreements and understanding
Relationship: Causal, as confirmation leads to agreement, and agreement implies understanding.
Criteria: Users or designers confirm agreements and express understanding of concepts or issues.
Phrase: Confirming collaboration agreements.

4.
Concepts: discuss implementation, discuss practical application
Relationship: Associative, as discussing implementation implies discussing practical application.
Criteria: Users discuss implementing the Physics Lab in educational settings, focusing on practical application.
Phrase: Discussing practical implementation.

5.
Concepts: explain functionality, providing technical explanations and details
Relationship: Elaborative, as explaining functionality involves providing technical details.
Criteria: Designers explain component functionality, providing technical details or specifications.
Phrase: Providing technical explanations.

6.
Concepts: clarify updates, inform about updates
Relationship: Elaborative, as clarifying updates involves informing about updates.
Criteria: Designers provide information about updates, releases, or bug fixes.
Phrase: Informing about updates.

7.
Concepts: promise updates, providing update previews and timelines
Relationship: Causal, as promising updates leads to providing previews and timelines.
Criteria: Designers promise future updates, providing previews and release timelines.
Phrase: Promising future updates.

8.
Concepts: software update process, discussing internal software updates
Relationship: Associative, as discussing the update process implies discussing internal updates.
Criteria: Designers discuss the process of updating software or fixing issues.
Phrase: Discussing software updates.

9.
Concepts: user communication, provide update notifications
Relationship: Causal, as communicating updates leads to providing notifications.
Criteria: Designers communicate updates, releases, or other information, providing notifications.
Phrase: Notifying users about updates.

10.
Concepts: discussing feature implementation, acknowledgment and implementation
Relationship: Causal, as discussing implementation leads to acknowledging and implementing features.
Criteria: Designers discuss implementing or planning features, acknowledging user feedback.
Phrase: Discussing feature implementation plans.

11.
Concepts: outline development priorities, prioritizing and setting development goals
Relationship: Elaborative, as outlining priorities involves setting development goals.
Criteria: Designers outline development priorities, setting goals or targets for software development.
Phrase: Outlining development priorities.

12.
Concepts: respond to the feature request, acknowledging feedback and requests
Relationship: Causal, as responding to requests leads to acknowledging feedback.
Criteria: Designers respond to feature requests or suggestions, acknowledging user feedback.
Phrase: Responding to feature requests.