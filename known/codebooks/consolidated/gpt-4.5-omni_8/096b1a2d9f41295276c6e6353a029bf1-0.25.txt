You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (64 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
64. 
Concepts: {Repeat the input 64}
Relationship: {What is logical relationship between concepts in code 64, or N/A if not applicable}
Criteria: {Who did what, and how for code 64}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: list upcoming features, multi-language support
- A team member lists features that will be included or added to the software.
- A team member lists new features, updates, and improvements in a new version.

2.
Concepts: update planning, software update process
- A team member discusses plans for future updates.
- A team member describes the process or timeline for software updates.

3.
Concepts: release process, share info on app release
- A designer discusses the process of releasing a version of the application.
- A designer shares information about the release status of an application.

4.
Concepts: update on review status, update on ios review status
- A designer updates the community on the review status of the software.
- A team member provides an update on the review status of the iOS version.

5.
Concepts: general announcements, developer announcements
- Developers make general announcements to the community.
- Announcements made by the developer regarding new features, components, adjustments, and bug fixes.

6.
Concepts: instruction and updates, software updates and downloads
- Designers providing updates and instructions to help users understand and use the software effectively.
- A designer informs users about software updates and download options.

7.
Concepts: provide update notes, providing version details
- Designers provide notes and details on version updates.
- Designers clarify the type or version of the software and provide detailed information about its status and features.

8.
Concepts: communicating release schedules, communicating project progress
- Designers communicate updates and timelines for software releases.
- Designers provide updates and communicate the progress of the project, including upcoming releases.

9.
Concepts: development update, development update information
- Information shared by designers about the current status, updates, and future plans for the Physics Lab software.
- Designer shares detailed information about a development update.

10.
Concepts: preview updates, share visual updates
- Designers preview upcoming updates and new features.
- Designers provide or share visual updates or previews.

11.
Concepts: share development plans, share future development plan
- A designer shares the development plans with the community.
- Sharing information about future development plans.

12.
Concepts: sending resources, direct users to resources
- A designer sends resources or information to the community.
- A designer directs users to resources or download locations.

13.
Concepts: access information, answer about access
- A designer provides access information, such as download links or development plans.
- A designer or user provides information on how to access or download the software.

14.
Concepts: private messaging, request private message
- A designer requests private messaging for detailed discussions.
- A team member requests that a user send a private message for more detailed communication.

15.
Concepts: group communication, platform communication
- A designer communicates with the group about the availability of a new version.
- A designer provides platform-specific communication, such as identifying the version available in the group.

16.
Concepts: platform specific update, platform-specific information
- A designer provides updates specific to different platforms (e.g., Apple, Android).
- A designer provides information specific to a platform, such as version details or download instructions.

17.
Concepts: user adjustment, confirm system compatibility
- A user confirms the compatibility of their system with the software.
- A designer confirms the compatibility of a particular software version with a specific system.

18.
Concepts: compatibility assurance, discuss system compatibility
- Assuring users about the compatibility of the software with different systems.
- A discussion about the compatibility of the software with different operating systems or hardware.

19.
Concepts: speculate on compatibility, consider future compatibility
- A designer speculates on compatibility or system requirements.
- A designer considers the need for future compatibility with different or older operating systems.

20.
Concepts: system requirements, technical consideration
- A designer discusses the system requirements for the platform.
- A designer discusses technical considerations for the software.

21.
Concepts: explaining system limitations, highlight technical constraints
- Designers explain the limitations of a feature or function due to system constraints.
- Instances where technical limitations or requirements are discussed or highlighted.

22.
Concepts: feature complexity, compare feature complexities
- A designer discusses the complexity of a feature and the time required for its development.
- A designer compares the complexities of different features.

23.
Concepts: raise concerns, security concern
- A user expresses or raises concerns about an update or new feature.
- User expresses a security concern related to the software's use.

24.
Concepts: technical issue, system limitations
- A user mentions a technical issue related to their computer system.
- A user mentions limitations or issues related to their computer system.

25.
Concepts: outdated technology, sharing info about old computer systems in school
- A user mentions the outdated technology used in their school.
- A user mentions issues related to old computer systems in their school.

26.
Concepts: problem inquiry, troubleshooting, engage in troubleshooting
- A team member asks users about any problems they encountered.
- A designer asks users about problems they encountered, and users respond with troubleshooting information.
- A user engages in troubleshooting or problem-solving.

27.
Concepts: share workaround, usability workaround
- A designer shares a workaround for a known issue.
- Providing workarounds for usability issues.

28.
Concepts: long-term planning, discuss feature stability
- Developers discuss long-term plans or features that will ensure stability and improvement.
- Designers discuss the stability of a feature and its long-term benefits.

29.
Concepts: reassure users, answer to a question, reassurance
- Reassuring users about upcoming features or fixes.
- A designer reassures a user about the progress or completion of a feature.
- Instances where designers reassure users about the progress and express gratitude or encouragement.

30.
Concepts: promise future feature, assure feature realization
- Promises to implement a feature at a later date.
- Designers assure users that a feature will be realized and optimized in the future.

31.
Concepts: discuss future interests, future planning and development, outlining future design plans
- A designer discusses further interests or shares potential future directions or projects.
- A designer discusses future planning and development activities.
- Designers discuss future plans, updates, or compatibility considerations and outline future design plans.

32.
Concepts: experience reflection, reflect on past experiences
- Developers reflect on their past experiences or actions.
- Designers reflect on past experiences or previous attempts to address issues.

33.
Concepts: memory aid, memory concern
- Designer mentions the need to gather opinions to aid memory.
- A designer expresses concern about remembering all user feedback and plans to gather opinions again.

34.
Concepts: promise to invite feedback, promise future consultation
- Promising to invite feedback from the group.
- Promising future consultation with the group.

35.
Concepts: consulting the community, announce future consultation
- Designers consult the community for opinions or feedback on specific design elements.
- Designers announce plans to consult the community before starting new projects.

36.
Concepts: progress updates, communication about progress and plans, communicate ongoing work
- Updates on the progress of ongoing work.
- Communicating progress and future plans.
- Communicating ongoing work or tasks being addressed.

37.
Concepts: project planning, project management
- A person discusses the process of planning or organizing a project.
- Developers discuss project management and prioritization of tasks.

38.
Concepts: prioritization, development prioritization, decision-making
- Statements indicating the order in which tasks or features will be developed.
- Instances where designers discuss the prioritization of different features or sections to be developed.
- A designer outlines the prioritization of different sections of the software.

39.
Concepts: subject focus, explain focus areas
- A designer discusses the main focus of the subject or platform.
- A designer explains the focus areas of the software.

40.
Concepts: outline development priorities, current focus explanation
- A designer outlines the priorities for development.
- A designer explains the current focus of development and what needs to be completed first.

41.
Concepts: discussing technical details, discuss design and features
- Discussing technical details of features and components.
- Discussing the details or implications of a design or feature.

42.
Concepts: discuss future updates, discuss feature improvements
- Discussions about potential future developments and directions for the product.
- Discussing improvements or changes to the software's features or components.

43.
Concepts: subject expansion, subject specific tools
- Users and designers discuss the expansion of subjects covered by the software.
- Designers discuss subject-specific tools or features to be added.

44.
Concepts: avatar customization, image and avatar management
- A designer discusses the customization of avatars.
- Designers and users discuss image or avatar management.

45.
Concepts: discussing usability, discuss user interface and design
- Designers discuss the usability of the software and the need for specific input methods.
- A designer discusses aspects of the user interface and instructional design.

46.
Concepts: visual and functional design, interface layout decisions
- Discussions about the visual and functional aspects of the software.
- Discussions about the placement or arrangement of elements within the software interface.

47.
Concepts: developer transparency, provide development transparency
- Developers openly discuss technical details and design choices in a transparent manner.
- Instances where designers provide detailed information about development processes, challenges, and progress.

48.
Concepts: design principles, explain design philosophy
- A designer discusses the principles guiding the design.
- The underlying principles and approaches guiding the design and development of the product.

49.
Concepts: explanation, explain design rationale, development process explanation
- A designer provides an explanation or clarification.
- A designer explains the rationale behind design and development decisions.
- A designer explains the development process and compatibility considerations.

50.
Concepts: explaining the need, explain feature importance
- A designer explains the need for a particular feature or development effort.
- A designer explains the importance of a feature.

51.
Concepts: explain complexity, explaining new feature implementation
- Designers explain the complexity of certain features or updates.
- Designers explain new features and discuss their implementation and optimization process.

52.
Concepts: visual reference sharing, using images to help demonstration
- A designer shares a visual reference, such as an image, to clarify a point.
- A team member uses an image to clarify or demonstrate a point.

53.
Concepts: ensure proper operation, provide feature guidance
- Designers ensure users understand how to properly operate features.
- Designers provide guidance or instructions on how to use features.

54.
Concepts: highlight practicality, address usability and functionality
- A user or designer emphasizes the practical usability of the software.
- A designer addresses the usability and specific functionality of the software.

55.
Concepts: balance user needs, catering to user needs
- A designer suggests balancing different user needs.
- A designer emphasizes the importance of catering to user needs.

56.
Concepts: consider local export, feature acknowledgement
- A designer considers adding local export functionality.
- A designer acknowledges the need for a specific feature, such as local export.

57.
Concepts: manual editing, manual adjustment
- A designer mentions the possibility of manual editing within the software.
- Designer mentions the ability to manually adjust settings or layout.

58.
Concepts: seek efficiency, emphasize optimization
- A designer seeks to improve efficiency or simplicity.
- A designer emphasizes the importance of optimization.

59.
Concepts: feature expansion, simulation enhancement
- A designer mentions the expansion or addition of features.
- A designer describes enhancements to the simulation features.

60.
Concepts: suggest simplification, discuss design refinement
- Designers suggest simplifying or refining features.
- Designers discuss simplifying and refining the design for better usability.

61.
Concepts: feature adjustment, design adaptation
- A designer discusses adjustments needed for a feature.
- Designer discusses the need to adapt the design for better functionality.

62.
Concepts: network policies, discussing internet restrictions
- Discussions about network policies or restrictions in educational settings.
- Users discuss restrictions on internet access in schools and explain the reasons for these restrictions.

63.
Concepts: context, classroom environment
- Users provide context about their teaching environment and technology.
- A user describes the classroom environment or conditions.

64.
Concepts: school needs, mention school initiative
- Users discuss the needs of their school related to the software.
- Users mention school initiatives or projects related to the software.
===
---
Definitions for each code (64 in total):
1.
Concepts: list upcoming features, multi-language support
Relationship: Both involve listing new features and updates.
Criteria: A team member lists upcoming features, including multi-language support, for the software.
Phrase: Listing upcoming features

2.
Concepts: update planning, software update process
Relationship: Both involve discussing plans and processes for updates.
Criteria: A team member discusses plans and the process for future software updates.
Phrase: Planning software updates

3.
Concepts: release process, share info on app release
Relationship: Both involve sharing information about the release process.
Criteria: A designer discusses and shares information about the application release process.
Phrase: Sharing release information

4.
Concepts: update on review status, update on ios review status
Relationship: Both involve providing updates on review statuses.
Criteria: A team member updates the community on the review status of the software, including the iOS version.
Phrase: Updating review status

5.
Concepts: general announcements, developer announcements
Relationship: Both involve making announcements to the community.
Criteria: Developers make general announcements regarding new features, components, adjustments, and bug fixes.
Phrase: Making developer announcements

6.
Concepts: instruction and updates, software updates and downloads
Relationship: Both involve providing updates and instructions.
Criteria: Designers provide updates and instructions to help users understand and use the software effectively.
Phrase: Providing updates and instructions

7.
Concepts: provide update notes, providing version details
Relationship: Both involve providing detailed information on updates.
Criteria: Designers provide notes and details on version updates and clarify the type or version of the software.
Phrase: Providing update notes

8.
Concepts: communicating release schedules, communicating project progress
Relationship: Both involve communication about timelines and progress.
Criteria: Designers communicate updates and timelines for software releases and project progress.
Phrase: Communicating project updates

9.
Concepts: development update, development update information
Relationship: Both involve sharing information about development updates.
Criteria: Designers share detailed information about the current status, updates, and future plans for the Physics Lab software.
Phrase: Sharing development updates

10.
Concepts: preview updates, share visual updates
Relationship: Both involve providing previews of updates.
Criteria: Designers provide previews and visual updates of upcoming features.
Phrase: Previewing updates

11.
Concepts: share development plans, share future development plan
Relationship: Both involve sharing development plans.
Criteria: A designer shares current and future development plans with the community.
Phrase: Sharing development plans

12.
Concepts: sending resources, direct users to resources
Relationship: Both involve providing resources to users.
Criteria: A designer sends resources or directs users to resources or download locations.
Phrase: Providing resources

13.
Concepts: access information, answer about access
Relationship: Both involve providing information on accessing the software.
Criteria: A designer provides information on how to access or download the software.
Phrase: Providing access information

14.
Concepts: private messaging, request private message
Relationship: Both involve requesting private communication.
Criteria: A team member requests private messaging for detailed discussions.
Phrase: Requesting private messages

15.
Concepts: group communication, platform communication
Relationship: Both involve communication within a group or platform.
Criteria: A designer communicates with the group about the availability of a new version on a specific platform.
Phrase: Communicating within the group

16.
Concepts: platform specific update, platform-specific information
Relationship: Both involve providing platform-specific information.
Criteria: A designer provides updates and information specific to different platforms, such as version details or download instructions.
Phrase: Providing platform-specific updates

17.
Concepts: user adjustment, confirm system compatibility
Relationship: Both involve confirming system compatibility.
Criteria: A user or designer confirms the compatibility of their system with the software.
Phrase: Confirming system compatibility

18.
Concepts: compatibility assurance, discuss system compatibility
Relationship: Both involve discussing and assuring system compatibility.
Criteria: Assuring users about the compatibility of the software with different systems and discussing it.
Phrase: Discussing system compatibility

19.
Concepts: speculate on compatibility, consider future compatibility
Relationship: Both involve considering system compatibility.
Criteria: A designer speculates on and considers future compatibility with different or older operating systems.
Phrase: Considering future compatibility

20.
Concepts: system requirements, technical consideration
Relationship: Both involve discussing technical aspects and requirements.
Criteria: A designer discusses the system requirements and technical considerations for the software.
Phrase: Discussing system requirements

21.
Concepts: explaining system limitations, highlight technical constraints
Relationship: Both involve explaining limitations due to technical constraints.
Criteria: Designers explain the limitations of a feature or function due to system constraints.
Phrase: Explaining technical constraints

22.
Concepts: feature complexity, compare feature complexities
Relationship: Both involve discussing the complexity of features.
Criteria: A designer discusses and compares the complexities of different features.
Phrase: Discussing feature complexity

23.
Concepts: raise concerns, security concern
Relationship: Both involve expressing concerns.
Criteria: A user expresses concerns, including security concerns, related to the software.
Phrase: Raising concerns

24.
Concepts: technical issue, system limitations
Relationship: Both involve mentioning issues related to the system.
Criteria: A user mentions technical issues or limitations related to their computer system.
Phrase: Mentioning technical issues

25.
Concepts: outdated technology, sharing info about old computer systems in school
Relationship: Both involve discussing outdated technology.
Criteria: A user mentions issues related to outdated technology or old computer systems in their school.
Phrase: Discussing outdated technology

26.
Concepts: problem inquiry, troubleshooting, engage in troubleshooting
Relationship: Both involve inquiring about and engaging in troubleshooting.
Criteria: A team member asks users about problems they encountered, and users respond with troubleshooting information.
Phrase: Engaging in troubleshooting

27.
Concepts: share workaround, usability workaround
Relationship: Both involve providing workarounds for issues.
Criteria: A designer shares workarounds for known usability issues.
Phrase: Providing workarounds

28.
Concepts: long-term planning, discuss feature stability
Relationship: Both involve discussing long-term plans and stability.
Criteria: Developers discuss long-term plans and features that will ensure stability and improvement.
Phrase: Discussing long-term planning

29.
Concepts: reassure users, answer to a question, reassurance
Relationship: Both involve providing reassurance.
Criteria: A designer reassures users about upcoming features or fixes and answers their questions.
Phrase: Reassuring users

30.
Concepts: promise future feature, assure feature realization
Relationship: Both involve promising future features.
Criteria: Designers promise to implement and assure the realization of a feature at a later date.
Phrase: Promising future features

31.
Concepts: discuss future interests, future planning and development, outlining future design plans
Relationship: Both involve discussing future plans and interests.
Criteria: Designers discuss future interests, planning, and development activities, outlining future design plans.
Phrase: Discussing future plans

32.
Concepts: experience reflection, reflect on past experiences
Relationship: Both involve reflecting on past experiences.
Criteria: Developers reflect on their past experiences or actions.
Phrase: Reflecting on past experiences

33.
Concepts: memory aid, memory concern
Relationship: Both involve concerns about memory and gathering opinions.
Criteria: A designer mentions the need to gather opinions to aid memory and expresses concern about remembering all user feedback.
Phrase: Addressing memory concerns

34.
Concepts: promise to invite feedback, promise future consultation
Relationship: Both involve promising future feedback and consultation.
Criteria: Promising to invite feedback and future consultation with the group.
Phrase: Promising future feedback

35.
Concepts: consulting the community, announce future consultation
Relationship: Both involve consulting the community.
Criteria: Designers consult the community for opinions or feedback and announce plans for future consultation.
Phrase: Consulting the community

36.
Concepts: progress updates, communication about progress and plans, communicate ongoing work
Relationship: Both involve communicating progress and ongoing work.
Criteria: Communicating updates on the progress of ongoing work and future plans.
Phrase: Communicating progress updates

37.
Concepts: project planning, project management
Relationship: Both involve discussing project planning and management.
Criteria: A person discusses the process of planning and managing a project.
Phrase: Discussing project planning

38.
Concepts: prioritization, development prioritization, decision-making
Relationship: Both involve discussing prioritization and decision-making.
Criteria: Statements indicating the order and prioritization of tasks or features to be developed.
Phrase: Prioritizing development tasks

39.
Concepts: subject focus, explain focus areas
Relationship: Both involve discussing focus areas.
Criteria: A designer discusses and explains the main focus areas of the subject or platform.
Phrase: Discussing focus areas

40.
Concepts: outline development priorities, current focus explanation
Relationship: Both involve outlining and explaining development priorities.
Criteria: A designer outlines the priorities for development and explains the current focus.
Phrase: Outlining development priorities

41.
Concepts: discussing technical details, discuss design and features
Relationship: Both involve discussing technical and design details.
Criteria: Discussing technical details and implications of design or features.
Phrase: Discussing technical details

42.
Concepts: discuss future updates, discuss feature improvements
Relationship: Both involve discussing future updates and improvements.
Criteria: Discussing potential future developments and improvements to the software's features.
Phrase: Discussing future updates

43.
Concepts: subject expansion, subject specific tools
Relationship: Both involve discussing the expansion of subjects and tools.
Criteria: Users and designers discuss the expansion of subjects covered by the software and subject-specific tools.
Phrase: Discussing subject expansion

44.
Concepts: avatar customization, image and avatar management
Relationship: Both involve discussing customization and management of avatars.
Criteria: A designer discusses the customization and management of avatars and images.
Phrase: Discussing avatar customization

45.
Concepts: discussing usability, discuss user interface and design
Relationship: Both involve discussing usability and design.
Criteria: Designers discuss the usability of the software and aspects of the user interface and instructional design.
Phrase: Discussing usability

46.
Concepts: visual and functional design, interface layout decisions
Relationship: Both involve discussing design and layout decisions.
Criteria: Discussions about the visual and functional aspects of the software and the placement of elements within the interface.
Phrase: Discussing design and layout

47.
Concepts: developer transparency, provide development transparency
Relationship: Both involve providing transparency in development.
Criteria: Developers openly discuss technical details and design choices in a transparent manner.
Phrase: Providing development transparency

48.
Concepts: design principles, explain design philosophy
Relationship: Both involve discussing design principles and philosophy.
Criteria: A designer discusses the principles and philosophy guiding the design and development of the product.
Phrase: Discussing design principles

49.
Concepts: explanation, explain design rationale, development process explanation
Relationship: Both involve providing explanations.
Criteria: A designer provides explanations and clarifications about design rationale and the development process.
Phrase: Explaining design rationale

50.
Concepts: explaining the need, explain feature importance
Relationship: Both involve explaining the importance of features.
Criteria: A designer explains the need and importance of a particular feature or development effort.
Phrase: Explaining feature importance

51.
Concepts: explain complexity, explaining new feature implementation
Relationship: Both involve explaining complexities and implementations.
Criteria: Designers explain the complexity of certain features and their implementation process.
Phrase: Explaining feature complexity

52.
Concepts: visual reference sharing, using images to help demonstration
Relationship: Both involve using visual references for clarification.
Criteria: A designer shares a visual reference, such as an image, to clarify or demonstrate a point.
Phrase: Sharing visual references

53.
Concepts: ensure proper operation, provide feature guidance
Relationship: Both involve providing guidance on feature usage.
Criteria: Designers ensure users understand how to properly operate features and provide guidance.
Phrase: Providing feature guidance

54.
Concepts: highlight practicality, address usability and functionality
Relationship: Both involve addressing usability and functionality.
Criteria: A user or designer emphasizes the practical usability and specific functionality of the software.
Phrase: Addressing usability

55.
Concepts: balance user needs, catering to user needs
Relationship: Both involve addressing user needs.
Criteria: A designer suggests balancing and catering to different user needs.
Phrase: Balancing user needs

56.
Concepts: consider local export, feature acknowledgement
Relationship: Both involve considering and acknowledging features.
Criteria: A designer considers adding local export functionality and acknowledges the need for specific features.
Phrase: Considering feature additions

57.
Concepts: manual editing, manual adjustment
Relationship: Both involve discussing manual adjustments.
Criteria: A designer mentions the possibility of manual editing and adjustments within the software.
Phrase: Discussing manual adjustments

58.
Concepts: seek efficiency, emphasize optimization
Relationship: Both involve seeking efficiency and optimization.
Criteria: A designer seeks to improve efficiency and emphasizes the importance of optimization.
Phrase: Seeking efficiency

59.
Concepts: feature expansion, simulation enhancement
Relationship: Both involve discussing feature expansions and enhancements.
Criteria: A designer mentions the expansion of features and describes enhancements to simulation features.
Phrase: Expanding features

60.
Concepts: suggest simplification, discuss design refinement
Relationship: Both involve suggesting simplification and refinement.
Criteria: Designers suggest simplifying and refining features for better usability.
Phrase: Simplifying design

61.
Concepts: feature adjustment, design adaptation
Relationship: Both involve discussing adjustments and adaptations.
Criteria: A designer discusses adjustments needed for a feature and the need to adapt the design for better functionality.
Phrase: Adjusting features

62.
Concepts: network policies, discussing internet restrictions
Relationship: Both involve discussing network policies and restrictions.
Criteria: Discussions about network policies and restrictions on internet access in educational settings.
Phrase: Discussing network policies

63.
Concepts: context, classroom environment
Relationship: Both involve providing context about the teaching environment.
Criteria: A user describes the classroom environment and conditions related to technology.
Phrase: Describing classroom environment

64.
Concepts: school needs, mention school initiative
Relationship: Both involve discussing school needs and initiatives.
Criteria: Users discuss the needs of their school related to the software and mention school initiatives or projects.
Phrase: Discussing school needs
---