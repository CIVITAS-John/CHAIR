You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. First, determine the logical relationship between concepts. If a concept includes another, use the broader one. If concepts are parallel, try to cover both concepts.
Write clear and generalizable labels and criteria for each merged code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization.
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (13 in total):
1. {Repeat the input 1}
Relationship: {The logical relationship between concepts in input 1}
Criteria: {A sentence of consolidated criteria for code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
13. {Repeat the input 13}
Relationship: {The logical relationship between concepts in input 13}
Criteria: {A sentence of consolidated criteria for code 13}
Label: {A consolidated label of code 13}
Category: {2-4 words for code 13}
---
~~~
1. bug fixes, version release
- Information about issues that have been resolved in the software.
- Updates and announcements about the software version.

2. technical constraints, pedagogical constraints
- Discussions related to technical limitations or constraints.
- Quotes that identify potential constraints or limitations of the software in supporting learning.

3. compatibility, system compatibility
- Discussions related to the compatibility of Physics Lab with different systems or devices.
- Instances where participants discuss or provide information about system compatibility or technical requirements.

4. user suggestions, user requests
- Users providing input or suggestions for the platform.
- Instances where users make specific requests or suggestions for new features or content.

5. seeking knowledge, seeking assistance
- Users actively seeking information or guidance within the online community.
- Instances where individuals request information, clarification, or assistance from the online community.

6. user involvement, user engagement
- The extent to which users are involved in the design and development process.
- The level of active participation and interest shown by the group members in the development and use of the software.

7. user influence, user response
- Examples showing the influence of user feedback on the design process or decisions.
- Understanding how the designer responds to user requests and plans the development of the platform based on user inputs.

8. user support, technical assistance
- Designers providing support and guidance to users.
- Instances where users or designers offer or receive technical help.

9. community-influenced updates, responsive to community
- Updates or changes made to the tool that are influenced by community feedback or needs.
- The designers demonstrate responsiveness to the community's needs and feedback, and are committed to improving the tool.

10. designer's openness, collaborative design
- Designer soliciting input and responding to user feedback.
- Interactions where designers actively seek and respond to user feedback.

11. collaborative decision-making, collaborative problem-solving
- Moments where decisions are made collectively with input from multiple community members.
- Interactions where community members collectively work through issues or propose solutions.

12. development feedback, active participation
- Community members providing feedback or contributing to the development process.
- Evidence of community members actively engaging in discussions, sharing resources, or providing feedback.

13. emotional expression, emojis and informal communication
- Use of emojis to express emotions or reactions.
- Use of emojis or informal language that adds a personal touch to the interaction.
===
---
Categories: 
* Technical Development
* User Engagement
* Community Building
* Design Process

Definitions for each code:

1. bug fixes, version release
Relationship: Inclusion (version release includes bug fixes)
Criteria: Information about software updates, including resolved issues and new features.
Label: Software Updates
Category: Technical Development

2. technical constraints, pedagogical constraints
Relationship: Parallel (both types of constraints are discussed)
Criteria: Discussions about limitations or constraints affecting the software's learning support.
Label: Constraints on Learning
Category: Technical Development

3. compatibility, system compatibility
Relationship: Inclusion (system compatibility is a type of compatibility)
Criteria: Discussions about the software's compatibility with different systems or devices.
Label: System Compatibility
Category: Technical Development

4. user suggestions, user requests
Relationship: Inclusion (user requests are a type of suggestion)
Criteria: Users providing input or suggestions for the platform's development.
Label: User Feedback
Category: User Engagement

5. seeking knowledge, seeking assistance
Relationship: Inclusion (seeking assistance is a type of seeking knowledge)
Criteria: Users requesting information, guidance, or clarification within the online community.
Label: Information Seeking
Category: User Engagement

6. user involvement, user engagement
Relationship: Inclusion (user engagement is a broader concept that includes involvement)
Criteria: The level of active participation and interest shown by users in the development and use of the software.
Label: User Engagement
Category: User Engagement

7. user influence, user response
Relationship: Inclusion (user response is a type of influence)
Criteria: Examples showing the impact of user feedback on the design process or decisions.
Label: User Influence
Category: Design Process

8. user support, technical assistance
Relationship: Inclusion (technical assistance is a type of support)
Criteria: Designers or users providing guidance or technical help.
Label: Technical Support
Category: User Engagement

9. community-influenced updates, responsive to community
Relationship: Inclusion (responsive to community implies community-influenced updates)
Criteria: Updates or changes made to the tool that are influenced by community feedback or needs.
Label: Community-Driven Updates
Category: Design Process

10. designer's openness, collaborative design
Relationship: Inclusion (collaborative design implies designer's openness)
Criteria: Designers soliciting input and responding to user feedback.
Label: Collaborative Design
Category: Design Process

11. collaborative decision-making, collaborative problem-solving
Relationship: Parallel (both concepts describe collective decision-making)
Criteria: Moments where decisions are made collectively with input from multiple community members.
Label: Collaborative Decision-Making
Category: Community Building

12. development feedback, active participation
Relationship: Inclusion (active participation implies development feedback)
Criteria: Community members providing feedback or contributing to the development process.
Label: Active Contribution
Category: User Engagement

13. emotional expression, emojis and informal communication
Relationship: Inclusion (emojis and informal communication are types of emotional expression)
Criteria: Use of emojis or informal language to add a personal touch to the interaction.
Label: Emotional Expression
Category: Community Building