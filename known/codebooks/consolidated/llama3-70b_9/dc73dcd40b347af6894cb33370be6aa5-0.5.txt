You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: value clear instructions, emphasizes clear guidance
- Users value and aim for clarity in instructions and parameters.
- The user emphasizes the importance of clear explanations and guidance.

2.
Concepts: highlights need for clear instructions, recognizes importance of clear instructions
- The user highlights the need for clear instructions when working with AI.
- Recognizes the importance of clear instructions and their impact on AI's understanding.

3.
Concepts: emphasizing clarity and effort, emphasize clarity in requests, emphasizing clarity in requests
- The user emphasizes the importance of clarity and effort in seeking help or using AI.
- The interviewee emphasizes the importance of clarity in requests, suggesting that users should clearly describe their needs and tried solutions.
- The user emphasizes the importance of clarity in AI-generated code and instructions, emphasizing clarity in programming requests.

4.
Concepts: values error clarification, seeks clarity in debugging processes
- The interviewee values error clarification, highlighting the importance of transparent and helpful error messages.
- The interviewee seeks clarity in debugging processes, wanting more transparent and helpful error messages.

5.
Concepts: emphasizes the importance of feedback, reflects on importance of clear feedback, shares insights on effective communication
- Participant emphasizes the importance of feedback
- Reflects on the importance of clear feedback and error messages.
- Shares insights on effective communication, highlighting the importance of clear and specific feedback.

6.
Concepts: discusses importance of instructional writing, discussing instruction writing importance
- Participant discusses the importance of instructional writing and clear problem conceptualization.
- The participant suggests that a foundational skill for using AI interfaces is the ability to write clear instructions, discussing the importance of instruction writing.

7.
Concepts: emphasizes importance of syntax support, highlights importance of accessible explanations
- Emphasizes the importance of syntax support and error clarification.
- Highlights the importance of accessible explanations and error clarification.

8.
Concepts: calls for preparatory exercises, emphasizing preparatory exercises
- Calls for preparatory exercises to improve debugging skills before using AI.
- Emphasizes the importance of preparatory exercises for users, proposing preparatory exercises for users before using AI-driven interfaces.

9.
Concepts: foundational learning, emphasizes foundational skills
- Suggests the importance of foundational learning or prior knowledge when working with LLM-driven interfaces.
- Recognizes the need for users to develop foundational skills before using AI.

10.
Concepts: implies skill development, implies structured learning approach
- Implies that developing skills are necessary to effectively use AI tools.
- Implies the importance of a structured learning approach or exercises before using AI assistance.

11.
Concepts: emphasizes need for expertise, emphasizes need for foundational knowledge
- Emphasizes the need for expertise when working with AI-driven interfaces.
- Users emphasize the need for foundational knowledge to understand AI-generated code, recognizing the importance of expertise.

12.
Concepts: highlights user skill, highlights the need for practice
- Participant highlights the importance of user skills and expertise in working with AI-generated code.
- Participant highlights the need for practice and iterative questioning in AI-generated code.

13.
Concepts: values foundational skills, importance of foundational skills
- Values the importance of foundational skills and knowledge in programming.
- Emphasizes the need for foundational skills, such as debugging and design.

14.
Concepts: identifies skill gaps, identifying missing skills
- Critiques gaps in user skills, such as writing instructions.
- Participants highlight missing capabilities or skills, such as writing instructions for others.

15.
Concepts: debugging knowledge gaps, identifies learning needs
- Recognizes gaps in users' debugging knowledge or skills.
- Identifies areas where users need additional learning or practice, such as debugging their own code.

16.
Concepts: highlights learning gaps, emphasizes knowledge gaps
- Participants highlight learning gaps or areas where users need support.
- Highlights the importance of foundational knowledge and potential gaps in understanding.

17.
Concepts: suggests gradual learning, emphasizes the learning curve for users
- Suggests gradual learning, encouraging users to ask questions and learn incrementally.
- Emphasizes the learning curve for users, requiring iterative questioning to maximize AI capabilities.

18.
Concepts: emphasizing gradual learning, emphasizes importance of continuity in learning
- Participant emphasizes the need for gradual learning and incremental progress.
- The participant emphasizes the importance of continuity in learning.

19.
Concepts: benefit of ai - translation, use ai for language conversion
- Highlights the benefits of AI-driven interfaces for translation between programming languages.
- The participant uses AI for language conversion or translation between programming languages.

20.
Concepts: mentioning multiple language experience, lists diverse programming languages used
- Participants mention diverse language knowledge, having experience with multiple programming languages.
- Lists diverse programming languages used, highlighting the breadth of experience in computer programming.

21.
Concepts: historical context in programming, mentions prior programming experience
- The participant shares their historical context and experience in computer programming.
- The participant mentions their prior experiences in computer programming, dating back to 1964.

22.
Concepts: implying expertise, emphasizes long-term expertise, reflecting on programming experience, share knowledge from decades of practice
- Participants imply expertise in computer programming and share prior experiences, highlighting extensive programming background and experiences.
- Emphasizes the significance of long-term expertise in computer programming, citing personal experiences.
- Reflects on extensive programming experience and its impact on their approach.
- Shares knowledge and experiences gained from decades of practice in computer programming.

23.
Concepts: establishing credibility, establishes technical credibility
- Participants establish credibility as an expert in programming and AI.
- The participant establishes their credibility in technical discussions.

24.
Concepts: highlights personal expertise, reflects on personal expertise
- Highlights their personal expertise or ability to effectively use AI tools.
- Reflects on personal expertise, expressing confidence in their abilities.

25.
Concepts: advocating for collaborative coding, advocates for clear coding practices
- Participant promotes the idea of collaborative coding and its benefits.
- The participant advocates for clear and accessible coding practices.

26.
Concepts: seeks collaborative coding, emphasizes collaborative coding
- Interviewees seek collaborative coding experiences or pair programming opportunities.
- Interviewees emphasize collaborative coding practices and processes.

27.
Concepts: stating a coding task, specify coding tasks clearly
- Participants state a simple coding task or request, clearly articulating a specific task.
- Users specify coding tasks clearly and establish the context for coding tasks, such as providing clear instructions.

28.
Concepts: suggests incremental coding, emphasizes need for incremental coding
- Suggests incremental coding and debugging to avoid errors.
- Participant emphasizes the need for incremental coding, breaking down code into smaller, manageable chunks.

29.
Concepts: values iterative improvement, emphasizes iterative refinement
- Values iterative improvement and refinement in coding
- Emphasizes the importance of iterative refinement or improvement.

30.
Concepts: thoughtful coding approaches, values thoughtful design
- Appreciating thoughtful coding approaches.
- Participants value thoughtful design and best practices in code creation.

31.
Concepts: focusing on details, emphasizes precision
- Participant focuses on details and takes a meticulous approach to coding.
- Participants emphasize the importance of precision and accuracy in code writing.

32.
Concepts: seek specific syntax, aims to enhance understanding of code
- Participants seek specific syntax structures or code snippets.
- Aims to understand code structures and syntax.
===
Here are the definitions for each code:

---
1.
Concepts: value clear instructions, emphasizes clear guidance
Relationship: The concepts are related in that they both highlight the importance of clear instructions and guidance.
Criteria: Users value and emphasize clear instructions and guidance when working with AI-driven interfaces.
Phrase: Valuing clear guidance.

2.
Concepts: highlights need for clear instructions, recognizes importance of clear instructions
Relationship: The concepts are related in that they both recognize the importance of clear instructions.
Criteria: Users highlight and recognize the need for clear instructions when working with AI-driven interfaces.
Phrase: Recognizing the need for clear instructions.

3.
Concepts: emphasizing clarity and effort, emphasize clarity in requests, emphasizing clarity in requests
Relationship: The concepts are related in that they all emphasize the importance of clarity in requests and interactions with AI.
Criteria: Users emphasize the importance of clarity and effort in seeking help or using AI-driven interfaces.
Phrase: Emphasizing clarity in requests.

4.
Concepts: values error clarification, seeks clarity in debugging processes
Relationship: The concepts are related in that they both highlight the importance of clarity in error messages and debugging processes.
Criteria: Users value and seek clarity in error messages and debugging processes when working with AI-driven interfaces.
Phrase: Valuing error clarification.

5.
Concepts: emphasizes the importance of feedback, reflects on importance of clear feedback, shares insights on effective communication
Relationship: The concepts are related in that they all highlight the importance of feedback and effective communication.
Criteria: Participants emphasize the importance of feedback, reflect on the importance of clear feedback, and share insights on effective communication.
Phrase: Emphasizing the importance of feedback.

6.
Concepts: discusses importance of instructional writing, discussing instruction writing importance
Relationship: The concepts are related in that they both discuss the importance of instructional writing.
Criteria: Participants discuss the importance of instructional writing and clear problem conceptualization.
Phrase: Discussing instructional writing importance.

7.
Concepts: emphasizes importance of syntax support, highlights importance of accessible explanations
Relationship: The concepts are related in that they both highlight the importance of syntax support and accessible explanations.
Criteria: Users emphasize the importance of syntax support and accessible explanations when working with AI-driven interfaces.
Phrase: Emphasizing syntax support.

8.
Concepts: calls for preparatory exercises, emphasizing preparatory exercises
Relationship: The concepts are related in that they both call for and emphasize the importance of preparatory exercises.
Criteria: Users call for and emphasize the importance of preparatory exercises to improve debugging skills before using AI-driven interfaces.
Phrase: Calling for preparatory exercises.

9.
Concepts: foundational learning, emphasizes foundational skills
Relationship: The concepts are related in that they both highlight the importance of foundational learning and skills.
Criteria: Users suggest the importance of foundational learning and skills when working with LLM-driven interfaces.
Phrase: Emphasizing foundational skills.

10.
Concepts: implies skill development, implies structured learning approach
Relationship: The concepts are related in that they both imply the importance of skill development and structured learning approaches.
Criteria: Users imply the importance of developing skills and a structured learning approach when working with AI-driven interfaces.
Phrase: Implying skill development.

11.
Concepts: emphasizes need for expertise, emphasizes need for foundational knowledge
Relationship: The concepts are related in that they both emphasize the importance of expertise and foundational knowledge.
Criteria: Users emphasize the need for expertise and foundational knowledge when working with AI-driven interfaces.
Phrase: Emphasizing the need for expertise.

12.
Concepts: highlights user skill, highlights the need for practice
Relationship: The concepts are related in that they both highlight the importance of user skills and practice.
Criteria: Participants highlight the importance of user skills and practice when working with AI-generated code.
Phrase: Highlighting user skills.

13.
Concepts: values foundational skills, importance of foundational skills
Relationship: The concepts are related in that they both value and emphasize the importance of foundational skills.
Criteria: Users value and emphasize the importance of foundational skills in programming.
Phrase: Valuing foundational skills.

14.
Concepts: identifies skill gaps, identifying missing skills
Relationship: The concepts are related in that they both identify gaps in user skills.
Criteria: Users identify gaps in user skills, such as writing instructions.
Phrase: Identifying skill gaps.

15.
Concepts: debugging knowledge gaps, identifies learning needs
Relationship: The concepts are related in that they both identify gaps in debugging knowledge and learning needs.
Criteria: Users recognize gaps in debugging knowledge and identify areas where users need additional learning or practice.
Phrase: Identifying learning needs.

16.
Concepts: highlights learning gaps, emphasizes knowledge gaps
Relationship: The concepts are related in that they both highlight gaps in learning and knowledge.
Criteria: Participants highlight learning gaps or areas where users need support.
Phrase: Highlighting learning gaps.

17.
Concepts: suggests gradual learning, emphasizes the learning curve for users
Relationship: The concepts are related in that they both suggest gradual learning and emphasize the learning curve for users.
Criteria: Users suggest gradual learning and emphasize the learning curve for users when working with AI-driven interfaces.
Phrase: Suggesting gradual learning.

18.
Concepts: emphasizing gradual learning, emphasizes importance of continuity in learning
Relationship: The concepts are related in that they both emphasize the importance of gradual learning and continuity in learning.
Criteria: Participants emphasize the importance of gradual learning and continuity in learning.
Phrase: Emphasizing gradual learning.

19.
Concepts: benefit of ai - translation, use ai for language conversion
Relationship: The concepts are related in that they both highlight the benefits of AI-driven interfaces for translation.
Criteria: Users highlight the benefits of AI-driven interfaces for translation between programming languages.
Phrase: Highlighting AI translation benefits.

20.
Concepts: mentioning multiple language experience, lists diverse programming languages used
Relationship: The concepts are related in that they both mention diverse programming language experience.
Criteria: Participants mention diverse language knowledge, having experience with multiple programming languages.
Phrase: Mentioning multiple language experience.

21.
Concepts: historical context in programming, mentions prior programming experience
Relationship: The concepts are related in that they both provide historical context and mention prior programming experience.
Criteria: Participants share their historical context and experience in computer programming.
Phrase: Sharing historical context.

22.
Concepts: implying expertise, emphasizes long-term expertise, reflecting on programming experience, share knowledge from decades of practice
Relationship: The concepts are related in that they all imply expertise and reflect on extensive programming experience.
Criteria: Participants imply expertise, emphasize long-term expertise, and share knowledge gained from decades of practice.
Phrase: Implying expertise.

23.
Concepts: establishing credibility, establishes technical credibility
Relationship: The concepts are related in that they both establish credibility in technical discussions.
Criteria: Participants establish credibility as an expert in programming and AI.
Phrase: Establishing credibility.

24.
Concepts: highlights personal expertise, reflects on personal expertise
Relationship: The concepts are related in that they both highlight and reflect on personal expertise.
Criteria: Participants highlight their personal expertise and reflect on their abilities.
Phrase: Highlighting personal expertise.

25.
Concepts: advocating for collaborative coding, advocates for clear coding practices
Relationship: The concepts are related in that they both advocate for collaborative coding and clear coding practices.
Criteria: Participants promote collaborative coding and advocate for clear and accessible coding practices.
Phrase: Advocating for collaborative coding.

26.
Concepts: seeks collaborative coding, emphasizes collaborative coding
Relationship: The concepts are related in that they both seek and emphasize collaborative coding practices.
Criteria: Interviewees seek collaborative coding experiences and emphasize collaborative coding practices.
Phrase: Seeking collaborative coding.

27.
Concepts: stating a coding task, specify coding tasks clearly
Relationship: The concepts are related in that they both state and specify coding tasks clearly.
Criteria: Participants state a simple coding task or request, clearly articulating a specific task.
Phrase: Stating a coding task.

28.
Concepts: suggests incremental coding, emphasizes need for incremental coding
Relationship: The concepts are related in that they both suggest and emphasize the need for incremental coding.
Criteria: Users suggest and emphasize the need for incremental coding and debugging to avoid errors.
Phrase: Suggesting incremental coding.

29.
Concepts: values iterative improvement, emphasizes iterative refinement
Relationship: The concepts are related in that they both value and emphasize iterative improvement and refinement.
Criteria: Users value and emphasize the importance of iterative improvement and refinement in coding.
Phrase: Valuing iterative improvement.

30.
Concepts: thoughtful coding approaches, values thoughtful design
Relationship: The concepts are related in that they both value thoughtful coding approaches and design.
Criteria: Participants appreciate thoughtful coding approaches and value thoughtful design and best practices in code creation.
Phrase: Valuing thoughtful design.

31.
Concepts: focusing on details, emphasizes precision
Relationship: The concepts are related in that they both focus on details and emphasize precision.
Criteria: Participants focus on details and emphasize the importance of precision and accuracy in code writing.
Phrase: Focusing on details.

32.
Concepts: seek specific syntax, aims to enhance understanding of code
Relationship: The concepts are related in that they both seek specific syntax and aim to understand code structures.
Criteria: Participants seek specific syntax structures or code snippets and aim to understand code structures and syntax.
Phrase: Seeking specific syntax.