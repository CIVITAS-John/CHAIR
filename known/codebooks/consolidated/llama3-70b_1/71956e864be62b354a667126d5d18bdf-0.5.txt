You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: request for technical support, requesting technical assistance
- User requests technical support or guidance for a specific issue.
- Technical assistance or guidance is requested to resolve an issue.
- A user asks for guidance on uploading a specific type of avatar.

2.
Concepts: system compatibility concerns, expressing concern about system compatibility
- Considering or discussing system compatibility issues for older systems.
- Users express concerns about system compatibility.

3.
Concepts: suggests system compatibility, mentioning operating system compatibility
- The user suggests or implies that a specific system or configuration should be compatible with the software.
- A user mentions compatibility or suitability of a specific operating system.

4.
Concepts: clarifying compatibility, system compatibility clarification
- Information is provided about the compatibility of the software with different systems or devices.
- Clarifying system compatibility or requirements for a product or tool.

5.
Concepts: clarifying platform compatibility, answer about compatibility
- Designer clarifies platform compatibility.
- A designer answers a question about compatibility with a specific system or platform.

6.
Concepts: confirming system compatibility, confirming platform compatibility
- Designers verify if the software is compatible with specific systems or versions.
- Designers confirm the compatibility of the platform with specific systems.

7.
Concepts: compatibility confirmation, confirming technical compatibility
- Designer confirms compatibility or functionality of a feature.
- The designer confirms technical compatibility or specifications.

8.
Concepts: theorizing compatibility, theoretical compatibility
- Designers theorize or speculate about the compatibility of Physics Lab with different systems or devices.
- A designer states that the Physics Lab software is theoretically compatible with certain systems or devices.

9.
Concepts: discussing compatibility, theoretical system compatibility
- Designer suggests or discusses checking the compatibility of the system with different devices or platforms.
- Designer discusses the theoretical compatibility of the system with different devices or platforms.

10.
Concepts: explains limitations, explain current version's limitation
- The speaker explains the limitations, constraints, or difficulties of implementing a feature or functionality.
- The speaker explains the limitations or constraints of the current version or feature.

11.
Concepts: technical constraint explanation, explaining technical limitations
- User explains a technical constraint or limitation.
- A user or designer explains technical limitations or constraints.

12.
Concepts: sharing design constraints, explaining design constraint
- User shares context about design constraints.
- User explains reason for design constraint.

13.
Concepts: design constraints, revealing design constraints
- Designer mentions a specific design constraint or limitation.
- A designer reveals constraints or limitations in the design process.

14.
Concepts: discusses limitations, explaining current limitations of software
- The designer or user discusses the limitations of the software or solution.
- Designer explains the current limitations of the software.

15.
Concepts: explain limitation, design constraint explanation, justifying limitations
- The designer explains the limitations or constraints of the software or a feature.
- Designers explain limitations or constraints of the software.
- Designer explains or justifies the limitations of a feature or resource.

16.
Concepts: sets boundaries, establishing technical limitations
- The designer sets boundaries, clarifies limitations, or provides context for what can or cannot be done.
- Designer specifies technical limitations or constraints.

17.
Concepts: acknowledge limitations, acknowledging technical limitations, considering limitations, limitation acknowledgment
- Designer acknowledges limitations
- Designer acknowledges or addresses a potential issue or limitation with the platform.
- The designer acknowledges limitations or potential issues with the design.
- Designer acknowledges limitations or weaknesses of a feature or tool.
- A designer acknowledges the limitations or constraints of a technical aspect.
- The designer expresses consideration or awareness of potential issues or limitations.
- A designer acknowledges limitations or constraints, such as memory limitations.

18.
Concepts: complexity explanation, explaining development complexity, explaining development challenges
- Designer explains the complexity of a feature or functionality.
- Explaining the complexity or challenges of developing specific software features.
- Designer explains or discusses the challenges or difficulties in developing a feature or functionality.

19.
Concepts: challenge highlighting, technical challenge highlight
- User highlights challenges or difficulties.
- A user highlights technical challenges or difficulties.

20.
Concepts: design challenges, highlights challenge
- Designer shares challenges or difficulties encountered during the design process.
- Designer highlights a specific challenge or limitation they are facing.

21.
Concepts: frustration, frustration expression, expresses frustration
- User or designer expresses frustration, dissatisfaction, or annoyance.
- Expressing frustration or annoyance with limitations or constraints.
- Designer expresses frustration or annoyance with limitations

22.
Concepts: product gap identification, identifying gap in existing tools
- User identifies a gap or limitation in the product.
- A user identifies a gap or limitation in existing tools or software.

23.
Concepts: highlighting software limitations, highlighting limitations
- A user highlights the limitations or shortcomings of the software.
- A user highlights limitations or restrictions, such as school network restrictions, that affect their use of the software.

24.
Concepts: indirect reject, implicit rejection
- The designer implies or explicitly states that certain tasks or features will not be prioritized or implemented.
- The designer implies or explicitly states that certain tasks or features will not be implemented, often with a tone of uncertainty or hesitation.

25.
Concepts: express uncertainty, displaying uncertainty
- User expresses uncertainty or confusion.
- Expressing uncertainty or doubt about a feature or concept.

26.
Concepts: design intentions, explaining design goals
- Explaining the intentions or goals behind a design or feature.
- A designer explains the design goals or objectives behind a feature or software.

27.
Concepts: reason provision, provide rationale
- A designer provides a reason or explanation for a decision or action.
- A user or designer provides a reason or justification for a particular decision or action.

28.
Concepts: design rationale, theoretical explanation
- A designer provides the underlying reasoning or philosophy behind a design decision.
- Designer provides a theoretical explanation or justification for a design decision or functionality.

29.
Concepts: confirming design choice, design choice clarification
- Confirming or justifying design choices or decisions.
- Designers clarify or explain design choices or decisions.

30.
Concepts: justifying decisions, explaining design choices, justifying design choices, rationalizing design choices, explaining design decisions
- Designer explains the reasoning or justification behind a decision.
- The designer explains the reasoning behind a design choice or decision.
- The designer justifies or explains the reasoning behind a feature development or design choice.
- A designer explains the reasoning behind a development decision.
- The designer explains the reasoning or thought process behind a design decision.
- Designer explains the reasoning behind a design decision or feature in the Physics Lab online community.

31.
Concepts: highlighting long-term benefits, emphasizing long-term benefits
- Designer highlights long-term benefits of feature.
- The long-term benefits or value of a feature are highlighted.

32.
Concepts: emphasize benefits, highlights benefits, highlight advantages
- Designer highlights or emphasizes the benefits of a feature or system.
- Designer highlights the benefits or advantages of a particular feature.
- Designer emphasizes the benefits or advantages of a particular feature.
===
Here are the definitions for each code:

---
1.
Concepts: request for technical support, requesting technical assistance
Relationship: The concepts are related as they both involve seeking help or guidance for a technical issue.
Criteria: A user requests technical support or guidance for a specific issue.
Phrase: Requests technical support.

2.
Concepts: system compatibility concerns, expressing concern about system compatibility
Relationship: The concepts are related as they both involve expressing worries or doubts about the compatibility of a system.
Criteria: Users express concerns about system compatibility.
Phrase: Expresses system compatibility concerns.

3.
Concepts: suggests system compatibility, mentioning operating system compatibility
Relationship: The concepts are related as they both involve suggesting or implying that a system should be compatible with the software.
Criteria: A user suggests or implies that a specific system or configuration should be compatible with the software.
Phrase: Suggests system compatibility.

4.
Concepts: clarifying compatibility, system compatibility clarification
Relationship: The concepts are related as they both involve providing information or clarification about the compatibility of a system.
Criteria: Information is provided about the compatibility of the software with different systems or devices.
Phrase: Clarifies system compatibility.

5.
Concepts: clarifying platform compatibility, answer about compatibility
Relationship: The concepts are related as they both involve providing a clear answer or explanation about the compatibility of a platform.
Criteria: A designer clarifies platform compatibility.
Phrase: Clarifies platform compatibility.

6.
Concepts: confirming system compatibility, confirming platform compatibility
Relationship: The concepts are related as they both involve verifying or confirming the compatibility of a system or platform.
Criteria: Designers verify if the software is compatible with specific systems or versions.
Phrase: Confirms system compatibility.

7.
Concepts: compatibility confirmation, confirming technical compatibility
Relationship: The concepts are related as they both involve confirming or verifying the compatibility of a feature or system.
Criteria: Designer confirms compatibility or functionality of a feature.
Phrase: Confirms technical compatibility.

8.
Concepts: theorizing compatibility, theoretical compatibility
Relationship: The concepts are related as they both involve speculating or hypothesizing about the compatibility of a system or feature.
Criteria: Designers theorize or speculate about the compatibility of Physics Lab with different systems or devices.
Phrase: Theorizes about compatibility.

9.
Concepts: discussing compatibility, theoretical system compatibility
Relationship: The concepts are related as they both involve discussing or exploring the potential compatibility of a system or feature.
Criteria: Designer suggests or discusses checking the compatibility of the system with different devices or platforms.
Phrase: Discusses theoretical compatibility.

10.
Concepts: explains limitations, explain current version's limitation
Relationship: The concepts are related as they both involve explaining or describing the limitations or constraints of a feature or system.
Criteria: The speaker explains the limitations, constraints, or difficulties of implementing a feature or functionality.
Phrase: Explains limitations.

11.
Concepts: technical constraint explanation, explaining technical limitations
Relationship: The concepts are related as they both involve explaining or describing the technical constraints or limitations of a feature or system.
Criteria: User explains a technical constraint or limitation.
Phrase: Explains technical constraints.

12.
Concepts: sharing design constraints, explaining design constraint
Relationship: The concepts are related as they both involve sharing or explaining the design constraints or limitations of a feature or system.
Criteria: User shares context about design constraints.
Phrase: Shares design constraints.

13.
Concepts: design constraints, revealing design constraints
Relationship: The concepts are related as they both involve mentioning or revealing the design constraints or limitations of a feature or system.
Criteria: Designer mentions a specific design constraint or limitation.
Phrase: Reveals design constraints.

14.
Concepts: discusses limitations, explaining current limitations of software
Relationship: The concepts are related as they both involve discussing or explaining the limitations or constraints of a feature or system.
Criteria: The designer or user discusses the limitations of the software or solution.
Phrase: Discusses limitations.

15.
Concepts: explain limitation, design constraint explanation, justifying limitations
Relationship: The concepts are related as they both involve explaining or justifying the limitations or constraints of a feature or system.
Criteria: The designer explains the limitations or constraints of the software or a feature.
Phrase: Explains limitations.

16.
Concepts: sets boundaries, establishing technical limitations
Relationship: The concepts are related as they both involve setting or establishing the boundaries or limitations of a feature or system.
Criteria: The designer sets boundaries, clarifies limitations, or provides context for what can or cannot be done.
Phrase: Sets technical boundaries.

17.
Concepts: acknowledge limitations, acknowledging technical limitations, considering limitations, limitation acknowledgment
Relationship: The concepts are related as they all involve recognizing or acknowledging the limitations or constraints of a feature or system.
Criteria: Designer acknowledges limitations or potential issues with the platform.
Phrase: Acknowledges limitations.

18.
Concepts: complexity explanation, explaining development complexity, explaining development challenges
Relationship: The concepts are related as they both involve explaining or describing the complexity or challenges of developing a feature or system.
Criteria: Designer explains the complexity of a feature or functionality.
Phrase: Explains complexity.

19.
Concepts: challenge highlighting, technical challenge highlight
Relationship: The concepts are related as they both involve highlighting or emphasizing the challenges or difficulties of a feature or system.
Criteria: User highlights challenges or difficulties.
Phrase: Highlights challenges.

20.
Concepts: design challenges, highlights challenge
Relationship: The concepts are related as they both involve sharing or highlighting the challenges or difficulties encountered during the design process.
Criteria: Designer shares challenges or difficulties encountered during the design process.
Phrase: Shares design challenges.

21.
Concepts: frustration, frustration expression, expresses frustration
Relationship: The concepts are related as they all involve expressing or feeling frustrated or dissatisfied with limitations or constraints.
Criteria: User or designer expresses frustration, dissatisfaction, or annoyance.
Phrase: Expresses frustration.

22.
Concepts: product gap identification, identifying gap in existing tools
Relationship: The concepts are related as they both involve identifying or recognizing a gap or limitation in a product or system.
Criteria: User identifies a gap or limitation in the product.
Phrase: Identifies product gap.

23.
Concepts: highlighting software limitations, highlighting limitations
Relationship: The concepts are related as they both involve highlighting or emphasizing the limitations or shortcomings of a software or system.
Criteria: A user highlights the limitations or shortcomings of the software.
Phrase: Highlights software limitations.

24.
Concepts: indirect reject, implicit rejection
Relationship: The concepts are related as they both involve implying or stating that a feature or task will not be implemented or prioritized.
Criteria: The designer implies or explicitly states that certain tasks or features will not be prioritized or implemented.
Phrase: Implies rejection.

25.
Concepts: express uncertainty, displaying uncertainty
Relationship: The concepts are related as they both involve expressing or feeling uncertain or confused about a feature or concept.
Criteria: User expresses uncertainty or confusion.
Phrase: Expresses uncertainty.

26.
Concepts: design intentions, explaining design goals
Relationship: The concepts are related as they both involve explaining or describing the intentions or goals behind a design or feature.
Criteria: Explaining the intentions or goals behind a design or feature.
Phrase: Explains design intentions.

27.
Concepts: reason provision, provide rationale
Relationship: The concepts are related as they both involve providing a reason or explanation for a decision or action.
Criteria: A designer provides a reason or explanation for a decision or action.
Phrase: Provides rationale.

28.
Concepts: design rationale, theoretical explanation
Relationship: The concepts are related as they both involve providing a theoretical explanation or justification for a design decision.
Criteria: A designer provides the underlying reasoning or philosophy behind a design decision.
Phrase: Provides design rationale.

29.
Concepts: confirming design choice, design choice clarification
Relationship: The concepts are related as they both involve confirming or clarifying design choices or decisions.
Criteria: Confirming or justifying design choices or decisions.
Phrase: Confirms design choice.

30.
Concepts: justifying decisions, explaining design choices, justifying design choices, rationalizing design choices, explaining design decisions
Relationship: The concepts are related as they all involve explaining or justifying the reasoning behind a design decision.
Criteria: Designer explains the reasoning or justification behind a decision.
Phrase: Justifies design decisions.

31.
Concepts: highlighting long-term benefits, emphasizing long-term benefits
Relationship: The concepts are related as they both involve highlighting or emphasizing the long-term benefits or value of a feature or system.
Criteria: Designer highlights long-term benefits of feature.
Phrase: Highlights long-term benefits.

32.
Concepts: emphasize benefits, highlights benefits, highlight advantages
Relationship: The concepts are related as they all involve highlighting or emphasizing the benefits or advantages of a feature or system.
Criteria: Designer highlights or emphasizes the benefits of a feature or system.
Phrase: Emphasizes benefits.