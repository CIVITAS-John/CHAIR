You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. If a sub-code includes another, use the broader one. If sub-codes are parallel, write one that covers both.
Write clear and generalizable labels and criteria for each code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization (e.g. "social interaction" instead of "interaction", "communication approach" instead of "communication").
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (10 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {Consolidated criteria of code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
10.
Relationship: {The logical relationship between sub-codes in code 10}
Criteria: {Consolidated criteria of code 10}
Label: {A consolidated label of code 10}
Category: {2-4 words for code 10}
---
~~~
1. community support, community support and membership.
- Providing support or help within the community
- Offering support or assistance to members, indicating membership or participation in the community.

2. community resource sharing, community resource support.
- Sharing information and resources within the community.
- Activities involving the distribution, sharing, and supportive use of digital resources within the community.

3. community greeting, expressive community interactions.
- Instances of greetings exchanged within the community.
- Expressions of thanks, greetings, and other friendly interactions that enhance community atmosphere.

4. teacher profile, teaching experience.
- Description of teaching experience or profession
- Describing one's prior teaching experience

5. feature planning, feature development planning.
- Describing plans for specific features
- Involves documenting development stages and planning new software features.

6. prioritization, feature prioritization.
- Prioritization of tasks or features
- Prioritization of features based on user needs and development plans.

7. feature requests, feature development inquiry.
- Requests or suggestions for new features or improvements.
- Discussions about adding new features, implementing new features, suggestions or ideas for new features.
- Enhancing software features

8. feature description, product feature details.
- Describing product features
- Detailed descriptions of software features, including technical specifications and functionalities.

9. software feedback, software feature compliment.
- Complimenting software design and functionality.
- Positive feedback specifically about a software feature's visual or functional effect.

10. continuous improvement, continuous improvement mindset.
- Emphasizing continuous improvement
- Embracing a mindset of continuous improvement.
===
Here is the output in the required format:

---
Categories: 
* Community Building
* Professional Identity
* Software Development
* Participatory Design

Definitions for each code:

1.
Relationship: Inclusive
Criteria: Providing support, help, or assistance within the community
Label: Community Support
Category: Community Building

2.
Relationship: Parallel
Criteria: Sharing information and resources within the community
Label: Resource Sharing
Category: Community Building

3.
Relationship: Inclusive
Criteria: Expressions of greetings, thanks, and friendly interactions within the community
Label: Community Interactions
Category: Community Building

4.
Relationship: Inclusive
Criteria: Describing teaching experience or profession
Label: Professional Background
Category: Professional Identity

5.
Relationship: Inclusive
Criteria: Planning and documenting software feature development stages
Label: Feature Planning
Category: Software Development

6.
Relationship: Inclusive
Criteria: Prioritizing tasks or features based on user needs and development plans
Label: Feature Prioritization
Category: Software Development

7.
Relationship: Parallel
Criteria: Requesting or suggesting new features or improvements
Label: Feature Requests
Category: Participatory Design

8.
Relationship: Inclusive
Criteria: Describing product features, including technical specifications and functionalities
Label: Feature Description
Category: Software Development

9.
Relationship: Inclusive
Criteria: Providing positive feedback about software features
Label: Software Feedback
Category: Participatory Design

10.
Relationship: Inclusive
Criteria: Emphasizing continuous improvement and embracing a growth mindset
Label: Continuous Improvement
Category: Participatory Design