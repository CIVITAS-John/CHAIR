You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (32 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
32. 
Concepts: {Repeat the input 32}
Relationship: {What is logical relationship between concepts in code 32, or N/A if not applicable}
Criteria: {Who did what, and how for code 32}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: ensuring accuracy, providing accurate information
- A designer ensures accuracy in the software or design.
- A designer provides accurate information about the software or its features.

2.
Concepts: confidence maintenance, promote software confidence
- Maintaining user confidence in the design process.
- Designer promotes confidence in the software's usability.

3.
Concepts: emphasize focus areas, project focus areas
- Emphasizing important areas or priorities
- Outlining focus areas or priorities for the project or software development

4.
Concepts: emphasizing importance, highlighting key features and importance
- A user or designer emphasizes the importance of a particular aspect or feature.
- Emphasizing the importance of a specific feature or functionality.

5.
Concepts: emphasize refinement, emphasize the scale of improvements
- The user emphasizes the importance of refinement or improvement.
- Emphasis on the significance or scope of improvements or updates.

6.
Concepts: emphasizing long-term benefits, discussed long term benefits
- Designers emphasize the importance of long-term stability or benefits.
- A designer discusses the long-term benefits or implications of a design decision.

7.
Concepts: ideal components, ideal component
- Ideal components or materials are discussed or identified.
- Designer 1 provides or mentions an ideal component in the software.

8.
Concepts: explaining the need, feature need acknowledgment
- A designer explains the need for a particular feature or development.
- Designer acknowledges the need for a specific feature or functionality.

9.
Concepts: teaching, explaining design principles
- Designer teaches or explains concepts or skills.
- Designer explains design principles or philosophies.

10.
Concepts: addressing component functionality, ensuring proper operation and functionality
- Designer addresses functionality or technical aspects of components.
- A designer ensures that users understand how to properly operate the software or a specific feature.

11.
Concepts: technical detail, providing technical insight
- Designer provides technical details about the software.
- Designer provides technical insight or explanation.

12.
Concepts: explaining component changes, describing features and components
- Designer describes detailed changes to components or software.
- Designer describes a specific feature or component.

13.
Concepts: explain simulation detail, providing simulation options
- A designer explains the details of a simulation or how it works.
- The designer provides simulation options or informs users about available simulation options.

14.
Concepts: informing users about features and design, explaining feature benefits and functionality
- Designers inform users about features and user interface design.
- Designers explain how features meet user needs or design benefits and explain the practical applications or uses of features.

15.
Concepts: intention explanation, explain follow-up intention
- User or designer explains the intention behind their question or action.
- A designer explains the intention or purpose behind a follow-up question or request.

16.
Concepts: explaining design decisions, providing rationales or explanations
- Designers explain their design priorities, rationales, and choices to users.
- Designers or users provide explanations or reasons for their actions or requests.

17.
Concepts: clarify design processes, clarifying technical details
- Designers clarify design processes to facilitate collaborative understanding.
- Designers clarify technical details, requirements, or specifications.

18.
Concepts: comprehension indication, understanding verification
- Designer indicates comprehension or understanding
- A designer verifies understanding or ensures that users comprehend information.

19.
Concepts: explain review process, clarify submission process
- A designer explains the review process for a specific platform.
- Designer explains the submission process or provides updates on the review process.

20.
Concepts: sharing research focus, informed about ongoing research, mention ongoing research
- A designer shares their research focus or ongoing research efforts.
- Designer informs users about ongoing research or development related to the software.
- A designer or moderator mentions ongoing research or development related to the community.

21.
Concepts: current efforts, explain current focus
- Designer shares current efforts or ongoing work related to the software.
- A designer explains the current focus or priorities of the development team.

22.
Concepts: sharing development insights, explaining the development process, transparent developer discussion
- Designer shares insights or behind-the-scenes information about development.
- Designer explains or discusses the development process or approach.
- A designer engages in transparent discussion about their development process or decisions.

23.
Concepts: open communication, fostering open communication
- Maintaining open and transparent communication with users
- The designer fosters open communication and feedback, encouraging users to report problems.

24.
Concepts: information sharing, share information
- A user shares information or context relevant to design or development.
- The designer or users share information, ask questions, or engage in discussions unrelated to software development.

25.
Concepts: confirm information sharing, confirming information sharing
- Designer confirms information sharing or updates within the group.
- Confirming the sharing of information or resources within the community.

26.
Concepts: share knowledge, sharing knowledge and tips
- Designer shares knowledge or information about Physics Lab or related topics.
- The designer offers special tips or shares knowledge about the software.

27.
Concepts: approving ideas, endorsing design ideas
- User expresses approval or agreement with an idea.
- Expressing support or endorsement for design ideas or suggestions.

28.
Concepts: praise idea, appreciation of plans
- Expressing praise or admiration for an idea
- User shows appreciation for plans or ideas.

29.
Concepts: praising craftsmanship, praising software quality
- Users praise and appreciate quality craftsmanship.
- Users recognize and praise software quality, expressing appreciation.

30.
Concepts: appreciate effort, effort validation
- Expressing gratitude or admiration for effort, hard work, or dedication.
- Expressing appreciation or validation for designers' or developers' efforts

31.
Concepts: praise designers, appreciation for teachers
- Expressing admiration or appreciation for designers' work, approach, or dedication.
- Designer expresses appreciation for teachers' help or support.

32.
Concepts: reinforcing positive interaction, expressing appreciation and motivation
- Users or designers express gratitude or appreciation.
- Designer expresses appreciation and motivation for improvement.
===
Here are the definitions for each code:

---
1.
Concepts: ensuring accuracy, providing accurate information
Relationship: Ensuring accuracy is a precursor to providing accurate information.
Criteria: A designer ensures accuracy and provides accurate information about the software or its features.
Phrase: Ensuring and providing accurate information.

2.
Concepts: confidence maintenance, promote software confidence
Relationship: Confidence maintenance leads to promoting software confidence.
Criteria: A designer maintains user confidence and promotes confidence in the software's usability.
Phrase: Maintaining and promoting confidence.

3.
Concepts: emphasize focus areas, project focus areas
Relationship: Emphasizing focus areas helps to outline project focus areas.
Criteria: A designer emphasizes important areas or priorities and outlines focus areas or priorities for the project or software development.
Phrase: Emphasizing and outlining focus areas.

4.
Concepts: emphasizing importance, highlighting key features and importance
Relationship: Emphasizing importance involves highlighting key features and importance.
Criteria: A user or designer emphasizes the importance of a particular aspect or feature and highlights its importance.
Phrase: Emphasizing and highlighting importance.

5.
Concepts: emphasize refinement, emphasize the scale of improvements
Relationship: Emphasizing refinement involves emphasizing the scale of improvements.
Criteria: The user emphasizes the importance of refinement or improvement and emphasizes the significance or scope of improvements or updates.
Phrase: Emphasizing refinement and improvement.

6.
Concepts: emphasizing long-term benefits, discussed long term benefits
Relationship: Emphasizing long-term benefits involves discussing long-term benefits.
Criteria: Designers emphasize the importance of long-term stability or benefits and discuss the long-term benefits or implications of a design decision.
Phrase: Emphasizing and discussing long-term benefits.

7.
Concepts: ideal components, ideal component
Relationship: Ideal components are discussed or identified as ideal components.
Criteria: Ideal components or materials are discussed or identified, and a designer provides or mentions an ideal component in the software.
Phrase: Discussing and identifying ideal components.

8.
Concepts: explaining the need, feature need acknowledgment
Relationship: Explaining the need involves acknowledging the need for a feature.
Criteria: A designer explains the need for a particular feature or development and acknowledges the need for a specific feature or functionality.
Phrase: Explaining and acknowledging the need.

9.
Concepts: teaching, explaining design principles
Relationship: Teaching involves explaining design principles.
Criteria: Designer teaches or explains concepts or skills and explains design principles or philosophies.
Phrase: Teaching and explaining design principles.

10.
Concepts: addressing component functionality, ensuring proper operation and functionality
Relationship: Addressing component functionality involves ensuring proper operation and functionality.
Criteria: Designer addresses functionality or technical aspects of components and ensures that users understand how to properly operate the software or a specific feature.
Phrase: Addressing and ensuring functionality.

11.
Concepts: technical detail, providing technical insight
Relationship: Providing technical detail involves providing technical insight.
Criteria: Designer provides technical details about the software and provides technical insight or explanation.
Phrase: Providing technical detail and insight.

12.
Concepts: explaining component changes, describing features and components
Relationship: Explaining component changes involves describing features and components.
Criteria: Designer describes detailed changes to components or software and describes a specific feature or component.
Phrase: Explaining and describing component changes.

13.
Concepts: explain simulation detail, providing simulation options
Relationship: Explaining simulation detail involves providing simulation options.
Criteria: A designer explains the details of a simulation or how it works and provides simulation options or informs users about available simulation options.
Phrase: Explaining and providing simulation details.

14.
Concepts: informing users about features and design, explaining feature benefits and functionality
Relationship: Informing users about features involves explaining feature benefits and functionality.
Criteria: Designers inform users about features and user interface design and explain how features meet user needs or design benefits and explain the practical applications or uses of features.
Phrase: Informing and explaining feature benefits.

15.
Concepts: intention explanation, explain follow-up intention
Relationship: Explaining intention involves explaining follow-up intention.
Criteria: User or designer explains the intention behind their question or action and explains the intention or purpose behind a follow-up question or request.
Phrase: Explaining and clarifying intention.

16.
Concepts: explaining design decisions, providing rationales or explanations
Relationship: Explaining design decisions involves providing rationales or explanations.
Criteria: Designers explain their design priorities, rationales, and choices to users and provide explanations or reasons for their actions or requests.
Phrase: Explaining and providing rationales.

17.
Concepts: clarify design processes, clarifying technical details
Relationship: Clarifying design processes involves clarifying technical details.
Criteria: Designers clarify design processes to facilitate collaborative understanding and clarify technical details, requirements, or specifications.
Phrase: Clarifying design processes and technical details.

18.
Concepts: comprehension indication, understanding verification
Relationship: Indicating comprehension involves verifying understanding.
Criteria: Designer indicates comprehension or understanding and verifies understanding or ensures that users comprehend information.
Phrase: Indicating and verifying comprehension.

19.
Concepts: explain review process, clarify submission process
Relationship: Explaining the review process involves clarifying the submission process.
Criteria: A designer explains the review process for a specific platform and explains the submission process or provides updates on the review process.
Phrase: Explaining and clarifying the review process.

20.
Concepts: sharing research focus, informed about ongoing research, mention ongoing research
Relationship: Sharing research focus involves informing about ongoing research.
Criteria: A designer shares their research focus or ongoing research efforts and informs users about ongoing research or development related to the software.
Phrase: Sharing and informing about ongoing research.

21.
Concepts: current efforts, explain current focus
Relationship: Sharing current efforts involves explaining the current focus.
Criteria: Designer shares current efforts or ongoing work related to the software and explains the current focus or priorities of the development team.
Phrase: Sharing and explaining current efforts.

22.
Concepts: sharing development insights, explaining the development process, transparent developer discussion
Relationship: Sharing development insights involves explaining the development process.
Criteria: Designer shares insights or behind-the-scenes information about development and explains or discusses the development process or approach.
Phrase: Sharing and explaining development insights.

23.
Concepts: open communication, fostering open communication
Relationship: Open communication involves fostering open communication.
Criteria: Maintaining open and transparent communication with users and fostering open communication and feedback, encouraging users to report problems.
Phrase: Maintaining and fostering open communication.

24.
Concepts: information sharing, share information
Relationship: Information sharing involves sharing information.
Criteria: A user shares information or context relevant to design or development and shares information, asks questions, or engages in discussions unrelated to software development.
Phrase: Sharing information.

25.
Concepts: confirm information sharing, confirming information sharing
Relationship: Confirming information sharing involves sharing information.
Criteria: Designer confirms information sharing or updates within the group and confirms the sharing of information or resources within the community.
Phrase: Confirming and sharing information.

26.
Concepts: share knowledge, sharing knowledge and tips
Relationship: Sharing knowledge involves sharing knowledge and tips.
Criteria: Designer shares knowledge or information about Physics Lab or related topics and offers special tips or shares knowledge about the software.
Phrase: Sharing knowledge and tips.

27.
Concepts: approving ideas, endorsing design ideas
Relationship: Approving ideas involves endorsing design ideas.
Criteria: User expresses approval or agreement with an idea and expresses support or endorsement for design ideas or suggestions.
Phrase: Approving and endorsing ideas.

28.
Concepts: praise idea, appreciation of plans
Relationship: Praising an idea involves appreciating plans.
Criteria: Expressing praise or admiration for an idea and showing appreciation for plans or ideas.
Phrase: Praising and appreciating ideas.

29.
Concepts: praising craftsmanship, praising software quality
Relationship: Praising craftsmanship involves praising software quality.
Criteria: Users praise and appreciate quality craftsmanship and recognize and praise software quality, expressing appreciation.
Phrase: Praising craftsmanship and software quality.

30.
Concepts: appreciate effort, effort validation
Relationship: Appreciating effort involves validating effort.
Criteria: Expressing gratitude or admiration for effort, hard work, or dedication and expressing appreciation or validation for designers' or developers' efforts.
Phrase: Appreciating and validating effort.

31.
Concepts: praise designers, appreciation for teachers
Relationship: Praising designers involves appreciating teachers.
Criteria: Expressing admiration or appreciation for designers' work, approach, or dedication and expressing appreciation for teachers' help or support.
Phrase: Praising designers and appreciating teachers.

32.
Concepts: reinforcing positive interaction, expressing appreciation and motivation
Relationship: Reinforcing positive interaction involves expressing appreciation and motivation.
Criteria: Users or designers express gratitude or appreciation and express appreciation and motivation for improvement.
Phrase: Reinforcing and expressing appreciation and motivation.