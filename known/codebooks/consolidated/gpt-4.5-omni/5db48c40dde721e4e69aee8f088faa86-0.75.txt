You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (3 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
3. 
Concepts: {Repeat the input 3}
Relationship: {What is logical relationship between concepts in code 3, or N/A if not applicable}
Criteria: {Who did what, and how for code 3}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: manually debugging ai-generated code, evaluating and correcting ai-generated code
- Users engage in manual review and debugging to fix errors in AI-generated code.
- Users evaluate, interpret, and correct mistakes in AI-generated code.

2.
Concepts: facing debugging challenges, identifying bugs in ai-generated code
- Users experience and address difficulties and frustrations in debugging AI-generated code.
- Users identify and report bugs in AI-generated code, expressing frustration over these issues.

3.
Concepts: simplicity for maintenance, preferring simple and maintainable code
- Users express the advantage of writing standard, simple code to ease maintenance and improve future understandability.
- Users value and prefer code that is simple, readable, and maintainable.
===
---
Definitions for each code (3 in total):
1.
Concepts: manually debugging ai-generated code, evaluating and correcting ai-generated code
Relationship: Users engage in a process of manual intervention to review, interpret, and fix errors in AI-generated code.
Criteria: Users manually review and debug AI-generated code to identify, evaluate, and correct errors.
Phrase: Manually debugging and correcting AI-generated code

2.
Concepts: facing debugging challenges, identifying bugs in ai-generated code
Relationship: Users encounter and address difficulties while identifying and reporting bugs in AI-generated code.
Criteria: Users face challenges and frustrations while identifying and reporting bugs in AI-generated code.
Phrase: Facing and reporting debugging challenges in AI-generated code

3.
Concepts: simplicity for maintenance, preferring simple and maintainable code
Relationship: Users favor simple, readable, and maintainable code to facilitate easier maintenance and future understandability.
Criteria: Users express a preference for simple and maintainable code to ease maintenance and improve future understandability.
Phrase: Preferring simple and maintainable code
---