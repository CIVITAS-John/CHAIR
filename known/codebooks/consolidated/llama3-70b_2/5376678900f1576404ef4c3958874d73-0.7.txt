You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (24 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
24. 
Concepts: {Repeat the input 24}
Relationship: {What is logical relationship between concepts in code 24, or N/A if not applicable}
Criteria: {Who did what, and how for code 24}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: manual ai code integration, manually incorporating ai-generated code
- Manually integrating AI-generated code into a model or program.
- The participant opts for manual AI code integration rather than running it directly.
- Manually incorporates AI-generated code into their work.

2.
Concepts: integrating ai code into models, integrating ai generated code into model
- Integrates AI code into their model and selectively copies code.
- User integrates AI-generated code into their model, selectively copying code.

3.
Concepts: selective integration of ai code, selectively integrates ai code into models
- Selectively integrates AI-generated code into their own work.
- Selectively integrates AI-generated code into models.

4.
Concepts: integrates ai suggestions, integrates ai suggestions into own coding
- Integrates AI suggestions into their work, selectively copying code.
- The participant integrates AI suggestions into their own coding process, using them as a reference.

5.
Concepts: uses ai code as reference, uses ai-generated code as a reference
- Using AI-generated code as a reference
- Uses AI-generated code as a reference for writing their own code.

6.
Concepts: selective use of ai-generated code, selectively copying ai-generated code
- The participant selectively uses AI-generated code as a reference.
- The participant selectively copies AI-generated code to the model.
- The participant selectively copies code from the AI's response to the model.
- Selectively copies code generated by the AI into their own model.

7.
Concepts: discerning ai code adoption, demonstrating discernment in code adoption, exercising discernment in ai use
- The participant selectively adopts or incorporates AI-generated code into their model.
- Participant reads and selectively copies code from the AI-generated model.
- Exercises discernment when incorporating AI suggestions, selectively copying code.

8.
Concepts: deciding to copy ai-generated code, decides to copy paste ai generated code
- Decides to copy and paste AI-generated code into their own model.
- Deciding to copy and paste AI-generated code

9.
Concepts: finds auto insertion beneficial, likes automatic placement of ai-generated code
- Appreciates the ability to automatically insert code into the model.
- Appreciating the feature of automatic placement of AI-generated code into the model.

10.
Concepts: automatic code integration, likes automatic code placement
- The participant likes the automatic code integration feature.
- The participant likes the automatic code placement feature.

11.
Concepts: valuing seamless model updates, prefers seamless model updates
- Valuing seamless model updates, desiring effortless integration of AI-generated code.
- The participant prefers seamless model updates and integration with AI-generated code.

12.
Concepts: seamless workflow integration, praises seamless integration, finding ai integration seamless
- Expresses a desire for seamless integration of AI-generated code into the model.
- The participant praises the seamless integration of AI-generated code into their workflow.
- Finds AI integration seamless, citing the ability to put generated code into the model automatically.

13.
Concepts: desires automatic code integration, desiring automatic code integration
- Desires automatic integration of AI-generated code into the model.
- The interviewee desires the ability to automatically integrate generated code into their model.

14.
Concepts: appreciates automatic code integration, appreciating automatic code integration
- Appreciates the capability to automatically integrate AI-generated code.
- Appreciating the automatic integration of generated code into a model or program.

15.
Concepts: describes ai code commenting, commenting on ai-generated code, ai-provided comments and documentation
- Describes AI's code commenting and documentation capabilities, making code easier to read and understand.
- Comments on AI-generated code, highlighting its ability to provide comments and documentation.
- Notes that AI-driven interfaces can provide comments and documentation in generated code.

16.
Concepts: code documentation, valuing comments and documentation
- Values documentation and comments in AI-generated code.
- The participant values comments and documentation in the AI-generated code.

17.
Concepts: appreciates ai code commenting and documentation, appreciating chat gpt's tendency to provide comments and documentation, appreciates chatgpt's code organization and documentation features, chatgpt's tendency to provide comments and documentation
- Expresses appreciation for ChatGPT's ability to comment on code and provide documentation.
- Appreciation for ChatGPT's commenting and documentation.
- Appreciating AI's code organization and documentation features
- The interviewee appreciates the AI's tendency to provide comments and documentation in its generated code.

18.
Concepts: ai-generated documentation, appreciating ai-generated comments, appreciates documentation
- Appreciates AI-generated documentation and comments.
- AI provides clear documentation and comments in generated code.
- Appreciation for AI-generated comments and documentation.
- The participant appreciates the AI-generated comments and documentation, which make the code easier to read.
- Appreciates the documentation and commenting features of the AI-generated code.

19.
Concepts: appreciating ai output, appreciates runnable ai output
- Finds AI output impressive and cool
- Appreciating runnable AI output

20.
Concepts: appreciates ai capabilities, appreciating ai's code generation capabilities, appreciates the ability to run ai generated code, appreciating runnable code
- Appreciates the AI's capabilities, such as running code.
- The participant appreciates the AI's code generation capabilities and ease of use.
- User appreciates the ability to run AI-generated code.
- The participant appreciates the AI's ability to generate runnable code.

21.
Concepts: praises ai code readability, highlights ai code readability
- The participant praises the AI's code readability.
- The participant highlights the readability of AI-generated code.

22.
Concepts: readable generated code, generated code readability
- Values easy-to-read generated code with comments and documentation.
- The participant notes that generated code is readable and well-documented.

23.
Concepts: easy to understand, ai-generated understandable code
- Describes the ease of understanding of AI-generated code or explanations.
- The user notes the AI's ability to produce understandable code.

24.
Concepts: ai code adaptation, using ai to adapt existing code
- Adapts AI-generated code to improve efficiency and effectiveness.
- Uses AI to adapt existing code to new purposes.
===
Here are the definitions for each code:

---
1.
Concepts: manual ai code integration, manually incorporating ai-generated code
Relationship: The concepts are related in that they describe the manual process of integrating AI-generated code into a model or program.
Criteria: The participant manually integrates AI-generated code into their work.
Phrase: Manually integrates AI-generated code.

2.
Concepts: integrating ai code into models, integrating ai generated code into model
Relationship: The concepts are related in that they describe the process of integrating AI-generated code into a model.
Criteria: The user integrates AI-generated code into their model.
Phrase: Integrates AI-generated code into models.

3.
Concepts: selective integration of ai code, selectively integrates ai code into models
Relationship: The concepts are related in that they describe the selective process of integrating AI-generated code into a model.
Criteria: The participant selectively integrates AI-generated code into their model.
Phrase: Selectively integrates AI-generated code.

4.
Concepts: integrates ai suggestions, integrates ai suggestions into own coding
Relationship: The concepts are related in that they describe the process of integrating AI suggestions into one's own coding process.
Criteria: The participant integrates AI suggestions into their own coding process.
Phrase: Integrates AI suggestions into coding.

5.
Concepts: uses ai code as reference, uses ai-generated code as a reference
Relationship: The concepts are related in that they describe using AI-generated code as a reference for writing one's own code.
Criteria: The participant uses AI-generated code as a reference.
Phrase: Uses AI-generated code as a reference.

6.
Concepts: selective use of ai-generated code, selectively copying ai-generated code
Relationship: The concepts are related in that they describe the selective use of AI-generated code.
Criteria: The participant selectively uses AI-generated code.
Phrase: Selectively uses AI-generated code.

7.
Concepts: discerning ai code adoption, demonstrating discernment in code adoption, exercising discernment in ai use
Relationship: The concepts are related in that they describe the discerning process of adopting AI-generated code.
Criteria: The participant exercises discernment when incorporating AI-generated code.
Phrase: Exercises discernment in AI-generated code adoption.

8.
Concepts: deciding to copy ai-generated code, decides to copy paste ai generated code
Relationship: The concepts are related in that they describe the decision to copy AI-generated code.
Criteria: The participant decides to copy AI-generated code.
Phrase: Decides to copy AI-generated code.

9.
Concepts: finds auto insertion beneficial, likes automatic placement of ai-generated code
Relationship: The concepts are related in that they describe the appreciation for automatic code insertion.
Criteria: The participant appreciates automatic code insertion.
Phrase: Appreciates automatic code insertion.

10.
Concepts: automatic code integration, likes automatic code placement
Relationship: The concepts are related in that they describe the appreciation for automatic code integration.
Criteria: The participant likes automatic code placement.
Phrase: Likes automatic code placement.

11.
Concepts: valuing seamless model updates, prefers seamless model updates
Relationship: The concepts are related in that they describe the preference for seamless model updates.
Criteria: The participant values seamless model updates.
Phrase: Values seamless model updates.

12.
Concepts: seamless workflow integration, praises seamless integration, finding ai integration seamless
Relationship: The concepts are related in that they describe the appreciation for seamless workflow integration.
Criteria: The participant praises seamless workflow integration.
Phrase: Praises seamless workflow integration.

13.
Concepts: desires automatic code integration, desiring automatic code integration
Relationship: The concepts are related in that they describe the desire for automatic code integration.
Criteria: The participant desires automatic code integration.
Phrase: Desires automatic code integration.

14.
Concepts: appreciates automatic code integration, appreciating automatic code integration
Relationship: The concepts are related in that they describe the appreciation for automatic code integration.
Criteria: The participant appreciates automatic code integration.
Phrase: Appreciates automatic code integration.

15.
Concepts: describes ai code commenting, commenting on ai-generated code, ai-provided comments and documentation
Relationship: The concepts are related in that they describe the AI's code commenting and documentation capabilities.
Criteria: The participant describes AI-generated code commenting and documentation.
Phrase: Describes AI-generated code commenting and documentation.

16.
Concepts: code documentation, valuing comments and documentation
Relationship: The concepts are related in that they describe the importance of code documentation.
Criteria: The participant values code documentation.
Phrase: Values code documentation.

17.
Concepts: appreciates ai code commenting and documentation, appreciating chat gpt's tendency to provide comments and documentation, appreciates chatgpt's code organization and documentation features, chatgpt's tendency to provide comments and documentation
Relationship: The concepts are related in that they describe the appreciation for AI-generated code commenting and documentation.
Criteria: The participant appreciates AI-generated code commenting and documentation.
Phrase: Appreciates AI-generated code commenting and documentation.

18.
Concepts: ai-generated documentation, appreciating ai-generated comments, appreciates documentation
Relationship: The concepts are related in that they describe the appreciation for AI-generated documentation and comments.
Criteria: The participant appreciates AI-generated documentation and comments.
Phrase: Appreciates AI-generated documentation and comments.

19.
Concepts: appreciating ai output, appreciates runnable ai output
Relationship: The concepts are related in that they describe the appreciation for AI-generated output.
Criteria: The participant appreciates AI-generated output.
Phrase: Appreciates AI-generated output.

20.
Concepts: appreciates ai capabilities, appreciating ai's code generation capabilities, appreciates the ability to run ai generated code, appreciating runnable code
Relationship: The concepts are related in that they describe the appreciation for AI-generated code and its capabilities.
Criteria: The participant appreciates AI-generated code and its capabilities.
Phrase: Appreciates AI-generated code and its capabilities.

21.
Concepts: praises ai code readability, highlights ai code readability
Relationship: The concepts are related in that they describe the appreciation for AI-generated code readability.
Criteria: The participant praises AI-generated code readability.
Phrase: Praises AI-generated code readability.

22.
Concepts: readable generated code, generated code readability
Relationship: The concepts are related in that they describe the importance of readable generated code.
Criteria: The participant values readable generated code.
Phrase: Values readable generated code.

23.
Concepts: easy to understand, ai-generated understandable code
Relationship: The concepts are related in that they describe the ease of understanding of AI-generated code.
Criteria: The participant notes the ease of understanding of AI-generated code.
Phrase: Notes the ease of understanding of AI-generated code.

24.
Concepts: ai code adaptation, using ai to adapt existing code
Relationship: The concepts are related in that they describe the adaptation of AI-generated code for new purposes.
Criteria: The participant adapts AI-generated code for new purposes.
Phrase: Adapts AI-generated code for new purposes.