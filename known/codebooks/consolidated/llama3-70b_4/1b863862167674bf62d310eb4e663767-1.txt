You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: In the context of NetLogo learning and practice: What perceptions - strengths, weaknesses, and adoption plans - do interviewees perceive LLM-driven interfaces? How do they use it to support their work? What are their needs for LLM-based interfaces?
Always follow the output format:
---
Definitions for each code (9 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
9. 
Concepts: {Repeat the input 9}
Relationship: {What is logical relationship between concepts in code 9, or N/A if not applicable}
Criteria: {Who did what, and how for code 9}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: providing code commenting, providing functional and well- documented code
- AI-driven interfaces provide commented and readable code.
- AI-driven interfaces provide well-documented and functional code.

2.
Concepts: ai analysis, analyzing ai-generated code
- Analyzing code using AI-driven interfaces.
- Users analyze and evaluate AI-generated code.

3.
Concepts: natural language, interacting conversationally with ai
- Interacts with AI in a natural, conversational manner.
- Users interact with AI conversationally.

4.
Concepts: acknowledging ai errors, valuing learning from ai
- Users acknowledge AI-driven interfaces' mistakes while seeing their value.
- Users value the learning experience from interacting with AI, despite errors.

5.
Concepts: noting the lack of determinism, non-deterministic ai responses
- Users find AI responses unpredictable due to a lack of determinism.
- Criticizes AI's non-deterministic responses and lack of consistency.

6.
Concepts: expressing frustration with ai responses, expressing frustration with ai limitations
- Users experience frustration or conflict with AI-generated responses.
- Users express frustration with AI limitations and restrictive options.

7.
Concepts: using ai for debugging, debugging ai-generated code
- Users use AI for error resolution and debugging.
- Users debug AI-generated code to identify errors.

8.
Concepts: addressing novice challenges, highlights novice challenges
- Users address novice struggles in using AI-driven interfaces.
- Participants highlight challenges faced by novices and how AI might address them.

9.
Concepts: values code readability, emphasizing maintainable code
- Participants value readability and maintainability in code.
- Users emphasize maintainable code and code quality.
===
Here are the definitions for each code:

---
1.
Concepts: providing code commenting, providing functional and well-documented code
Relationship: The two concepts are interrelated as they both refer to the quality of the code provided by AI-driven interfaces.
Criteria: AI-driven interfaces provide readable, functional, and well-documented code.
Phrase: Provide well-documented code.

2.
Concepts: ai analysis, analyzing ai-generated code
Relationship: The two concepts are logically related as ai analysis involves examining the code generated by AI-driven interfaces.
Criteria: Users analyze and evaluate code generated by AI-driven interfaces.
Phrase: Analyze AI-generated code.

3.
Concepts: natural language, interacting conversationally with ai
Relationship: The two concepts are interlinked as natural language facilitates conversational interaction with AI.
Criteria: Users interact with AI-driven interfaces using natural language in a conversational manner.
Phrase: Interact conversationally with AI.

4.
Concepts: acknowledging ai errors, valuing learning from ai
Relationship: The two concepts are interconnected as acknowledging AI errors leads to valuing the learning experience from interacting with AI.
Criteria: Users acknowledge and learn from AI-driven interfaces' mistakes.
Phrase: Acknowledge AI errors.

5.
Concepts: noting the lack of determinism, non-deterministic ai responses
Relationship: The two concepts are logically related as the lack of determinism leads to non-deterministic AI responses.
Criteria: Users experience unpredictable AI responses due to a lack of determinism.
Phrase: Note non-deterministic AI responses.

6.
Concepts: expressing frustration with ai responses, expressing frustration with ai limitations
Relationship: The two concepts are interconnected as frustration with AI responses is often due to AI limitations.
Criteria: Users experience frustration with AI-generated responses and limitations.
Phrase: Express frustration with AI.

7.
Concepts: using ai for debugging, debugging ai-generated code
Relationship: The two concepts are interlinked as using AI for debugging involves debugging AI-generated code.
Criteria: Users utilize AI-driven interfaces for error resolution and code debugging.
Phrase: Debug AI-generated code.

8.
Concepts: addressing novice challenges, highlights novice challenges
Relationship: The two concepts are logically related as addressing novice challenges involves highlighting the challenges faced by novices.
Criteria: Users highlight and address challenges faced by novices in using AI-driven interfaces.
Phrase: Address novice challenges.

9.
Concepts: values code readability, emphasizing maintainable code
Relationship: The two concepts are interconnected as valuing code readability leads to emphasizing maintainable code.
Criteria: Users value and emphasize readable, maintainable code quality.
Phrase: Emphasize maintainable code.