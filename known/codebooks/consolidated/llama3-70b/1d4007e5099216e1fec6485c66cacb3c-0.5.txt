You are an expert in thematic analysis. 
Each code is a cluster of multiple qualitative sub-code. If a sub-code includes another, use the broader one. If sub-codes are parallel, write one that covers both.
Write clear and generalizable labels and criteria for each code, informed by the context, and without unnecessary specifics or examples.
Find a theory-informed category for each code. Use 2-4 words for categories and avoid over-generalization (e.g. "social interaction" instead of "interaction", "communication approach" instead of "communication").
The research question is: How did Physics Lab's online community emerge? (through the lens of learning sciences, human-computer interaction, and participatory design)
Always follow the output format:
---
Categories: 
* {Name some categories you identified from the research question and theoretical lens}

Definitions for each code (32 in total):
1.
Relationship: {The logical relationship between sub-codes in code 1}
Criteria: {Consolidated criteria of code 1}
Label: {A consolidated label of code 1}
Category: {2-4 words for code 1}
...
32.
Relationship: {The logical relationship between sub-codes in code 32}
Criteria: {Consolidated criteria of code 32}
Label: {A consolidated label of code 32}
Category: {2-4 words for code 32}
---
~~~
1. greeting, community greeting.
- Greetings exchanged within the community.
- Greeting or welcoming message, polite expression or courtesy, expressions of gratitude or appreciation
- Greeting or welcoming members of the online community

2. informal communication, light-hearted and informal interaction.
- Instances of humor and casual communication among community members.
- Light-hearted and informal interactions among community members

3. resource sharing, community resource sharing.
- Sharing information and resources within the community.
- Indicating file/resource locations, sharing resources
- Involves sharing materials and resources among community members.

4. user engagement, proactive user engagement.
- Encouraging or promoting user engagement
- User-initiated interactions that enhance engagement and participation within the community.

5. community feedback, community feedback solicitation.
- Collecting opinions or suggestions from the community
- Active engagement of the community in decision-making through feedback solicitation.

6. user-centered design, user-centric development.
- Emphasis on user feedback and involvement in design.
- Design approach prioritizing user needs and experiences
- Design processes that heavily consider user input and needs.

7. positive feedback provision, software feedback.
- Complimenting software design and functionality.
- Offering positive feedback or praise about the software's design, functionality, or user experience

8. transparency, process transparency.
- Being transparent about the development process, release timelines, or upcoming changes.
- Openness in sharing details about the development processes.

9. feature prioritization, feature sequencing and prioritization.
- Prioritization of features based on user needs and development plans.
- Strategic planning and prioritization of software development tasks based on user needs and business goals.

10. user inquiry, update inquiries.
- Asking a question or seeking information, requesting updates or information
- Instances of users inquiring about updates and sharing update information or announcements.

11. update inquiry & details, update inquiries & timelines.
- Involves inquiries about updates and providing details on new releases.
- Asking about update timing, indicating upcoming updates

12. community updates, community announcement.
- Updates and announcements regarding community activities or changes.
- Updates shared within the community about ongoing projects, new resources, or significant events.
- Announcing updates, new information to community members
- Involves exchanging greetings and sharing official messages within the community.

13. update communication, update communication details.
- Acknowledgment of update completion and communication of update schedules.
- Detailed communication regarding the timing and content of software updates.

14. update information, update confirmations.
- Announcing new versions, changes, and features in the system.
- Confirming update releases, mentioning new version availability

15. user expectations, user anticipation.
- User curiosity and expectations about updates or new features.
- User expectation or anticipation regarding the timing and impact of an update.

16. release timeline, update schedule.
- Providing information about feature timelines and release schedules.
- Outlining a schedule or timeline for updates or releases, mention of a specific version release

17. subject focus areas, physics focus.
- Mentions focus on electricity, mechanics, optics experiment types
- Focus on physics, particularly electricity and mechanics, topics or concepts related to electromagnetics

18. feature enhancement, feature development inquiry.
- Discussions about adding new features, implementing new features, suggestions or ideas for new features
- Enhancements and refinements made to software features to optimize performance and user experience.
- Inquiries and discussions about the development of new features based on user feedback.

19. feature requests, feature requests and software scope.
- Requests or suggestions for new features or improvements.
- Requesting new features, indicating desired changes
- Suggestions or requests for adding new features, functionalities, or components to the software, as well as comments on the software's focus and potential expansion.

20. feature discussion and explanation, feature design and functionality.
- Discussing or providing feedback on specific features, explaining functionality or rationale behind features.
- Discussing the design considerations and rationale behind specific software features or functionalities, as well as the specific features, functionalities, or components included in the software.

21. feature functionality, software functionality.
- Explanation of feature usage and software functionality.
- Detailed explanation and discussion on the utility and application of specific software features.
- Explaining software capabilities and discussing functionalities.

22. release notes & new features, feature list and introduction.
- Listing changes in new releases, introducing new features
- Detailed introduction of new or revised features in software updates.

23. feature stability, long term stability.
- Ensuring the stability of product features.
- Information about feature development and implementation for stability.
- Discusses aspects of a feature that contribute to the system's durability or reliability over time.
- Ensuring the long-term stability and reliability of a system or feature.

24. design explanation, design principles and rationale.
- Explanations or clarifications of design decisions, guiding principles for design.
- Stating general design principles or guidelines, providing reasoning behind design decisions or approaches.

25. simplicity, design simplicity.
- Emphasizing simplicity or minimalism in the design
- Emphasis on simplicity or ease of use in the online community.
- Emphasizing simplicity in design and simplifying the product.
- Focus on simplicity in design and user-friendly features for intuitive use.
- Principles and explanations focusing on simplicity in design

26. designer responsiveness, design response.
- Designer responses to feedback and assistance offered to users.
- Timely and effective response to user needs and feedback by designers.
- Responses to user feedback, feedback or critique on design, users' opinions or suggestions, integrating user feedback into design

27. configuration options, user customization options.
- Describing configuration options, settings, or customization capabilities available in the software.
- Options available for users to manually edit or customize software settings and features.

28. optimization, product optimization.
- Discussing the optimization of features or design elements.
- Improving or refining a process or system to achieve better results.
- Optimizing product performance and design elements for better functionality.

29. platform clarification, information clarification.
- Clarifying or distinguishing between different platforms or versions.
- Clarifying queries, specifying software version/platform

30. download instructions, technology download guidance.
- Providing instructions or steps for downloading or accessing the product.
- Instructions provided for downloading files or software.
- Providing instructions or guidance on downloading or accessing resources
- Instructions provided for downloading specific software or tools.

31. documentation requests, user queries and documentation requests.
- Requests for software documentation and seeking clarifications.
- Polite questions, inquiries, or requests for information about the software, updates, or user documentation, including requests for a user manual or other guidance materials.

32. user guidance, user manual requests.
- Involves guidance provision and inquiries about user manuals.
- Inquiries and requests for user manuals, guides, or instructional content.
===
Here is the output in the required format:

---
Categories: 
* Community Building
* Design and Development
* User Engagement
* Feature Development
* Communication and Feedback
* Physics Focus
* Resource Sharing
* User Support

Definitions for each code:

1.
Relationship: Greeting is a sub-code of community greeting.
Criteria: Instances of greetings exchanged within the community.
Label: Community Greeting
Category: Community Building

2.
Relationship: Informal communication is a sub-code of light-hearted interaction.
Criteria: Instances of humor and casual communication among community members.
Label: Light-Hearted Interaction
Category: Community Building

3.
Relationship: Resource sharing is a sub-code of community resource sharing.
Criteria: Sharing information and resources within the community.
Label: Community Resource Sharing
Category: Resource Sharing

4.
Relationship: User engagement is a sub-code of proactive user engagement.
Criteria: Encouraging or promoting user engagement.
Label: Proactive User Engagement
Category: User Engagement

5.
Relationship: Community feedback is a sub-code of community feedback solicitation.
Criteria: Collecting opinions or suggestions from the community.
Label: Community Feedback Solicitation
Category: Communication and Feedback

6.
Relationship: User-centered design is a sub-code of user-centric development.
Criteria: Emphasis on user feedback and involvement in design.
Label: User-Centric Development
Category: Design and Development

7.
Relationship: Positive feedback provision is a sub-code of software feedback.
Criteria: Complimenting software design and functionality.
Label: Software Feedback
Category: Communication and Feedback

8.
Relationship: Transparency is a sub-code of process transparency.
Criteria: Being transparent about the development process, release timelines, or upcoming changes.
Label: Process Transparency
Category: Communication and Feedback

9.
Relationship: Feature prioritization is a sub-code of feature sequencing and prioritization.
Criteria: Prioritization of features based on user needs and development plans.
Label: Feature Prioritization
Category: Feature Development

10.
Relationship: User inquiry is a sub-code of update inquiries.
Criteria: Asking a question or seeking information, requesting updates or information.
Label: Update Inquiries
Category: User Engagement

11.
Relationship: Update inquiry & details is a sub-code of update inquiries & timelines.
Criteria: Involves inquiries about updates and providing details on new releases.
Label: Update Inquiries & Timelines
Category: User Engagement

12.
Relationship: Community updates is a sub-code of community announcement.
Criteria: Updates and announcements regarding community activities or changes.
Label: Community Announcement
Category: Community Building

13.
Relationship: Update communication is a sub-code of update communication details.
Criteria: Acknowledgment of update completion and communication of update schedules.
Label: Update Communication
Category: Communication and Feedback

14.
Relationship: Update information is a sub-code of update confirmations.
Criteria: Announcing new versions, changes, and features in the system.
Label: Update Confirmations
Category: Communication and Feedback

15.
Relationship: User expectations is a sub-code of user anticipation.
Criteria: User curiosity and expectations about updates or new features.
Label: User Anticipation
Category: User Engagement

16.
Relationship: Release timeline is a sub-code of update schedule.
Criteria: Providing information about feature timelines and release schedules.
Label: Release Timeline
Category: Feature Development

17.
Relationship: Subject focus areas is a sub-code of physics focus.
Criteria: Mentions focus on electricity, mechanics, optics experiment types.
Label: Physics Focus
Category: Physics Focus

18.
Relationship: Feature enhancement is a sub-code of feature development inquiry.
Criteria: Discussions about adding new features, implementing new features, suggestions or ideas for new features.
Label: Feature Development Inquiry
Category: Feature Development

19.
Relationship: Feature requests is a sub-code of feature requests and software scope.
Criteria: Requests or suggestions for new features or improvements.
Label: Feature Requests
Category: Feature Development

20.
Relationship: Feature discussion and explanation is a sub-code of feature design and functionality.
Criteria: Discussing or providing feedback on specific features, explaining functionality or rationale behind features.
Label: Feature Design and Functionality
Category: Design and Development

21.
Relationship: Feature functionality is a sub-code of software functionality.
Criteria: Explanation of feature usage and software functionality.
Label: Software Functionality
Category: Design and Development

22.
Relationship: Release notes & new features is a sub-code of feature list and introduction.
Criteria: Listing changes in new releases, introducing new features.
Label: Feature List and Introduction
Category: Feature Development

23.
Relationship: Feature stability is a sub-code of long term stability.
Criteria: Ensuring the stability of product features.
Label: Feature Stability
Category: Design and Development

24.
Relationship: Design explanation is a sub-code of design principles and rationale.
Criteria: Explanations or clarifications of design decisions, guiding principles for design.
Label: Design Principles and Rationale
Category: Design and Development

25.
Relationship: Simplicity is a sub-code of design simplicity.
Criteria: Emphasizing simplicity or minimalism in the design.
Label: Design Simplicity
Category: Design and Development

26.
Relationship: Designer responsiveness is a sub-code of design response.
Criteria: Designer responses to feedback and assistance offered to users.
Label: Designer Responsiveness
Category: User Support

27.
Relationship: Configuration options is a sub-code of user customization options.
Criteria: Describing configuration options, settings, or customization capabilities available in the software.
Label: User Customization Options
Category: User Support

28.
Relationship: Optimization is a sub-code of product optimization.
Criteria: Discussing the optimization of features or design elements.
Label: Product Optimization
Category: Design and Development

29.
Relationship: Platform clarification is a sub-code of information clarification.
Criteria: Clarifying or distinguishing between different platforms or versions.
Label: Information Clarification
Category: User Support

30.
Relationship: Download instructions is a sub-code of technology download guidance.
Criteria: Providing instructions or steps for downloading or accessing the product.
Label: Technology Download Guidance
Category: User Support

31.
Relationship: Documentation requests is a sub-code of user queries and documentation requests.
Criteria: Requests for software documentation and seeking clarifications.
Label: User Queries and Documentation Requests
Category: User Support

32.
Relationship: User guidance is a sub-code of user manual requests.
Criteria: Involves guidance provision and inquiries about user manuals.
Label: User Manual Requests
Category: User Support