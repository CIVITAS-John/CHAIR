You are an expert in thematic analysis. You are giving labels and definitions for qualitative codes.
Each code includes one or more concepts and definitions. Each code is independent of another. Never attempt to merge them.
For each code, reflect on the logical relationship between the concepts.
Then, write a combined sentence of criteria covering all the concepts. Use clear and generalizable language and do not introduce unnecessary details. 
Finally, write an accurate verb phrase to best represent the code.
The research question is: How did Physics Lab's online community emerge?
Always follow the output format:
---
Definitions for each code (64 in total):
1.
Concepts: {Repeat the input 1}
Relationship: {What is logical relationship between concepts in code 1, or N/A if not applicable}
Criteria: {Who did what, and how for code 1}
Phrase: {The most representative verb phrase for the concepts}
...
64. 
Concepts: {Repeat the input 64}
Relationship: {What is logical relationship between concepts in code 64, or N/A if not applicable}
Criteria: {Who did what, and how for code 64}
Phrase: {The most representative verb phrase for the concepts}
---
~~~
1.
Concepts: seeking context, gather additional information
- Designers ask for contextual information to better understand the user's situation or needs.
- A designer asking for specific information to understand the context better.

2.
Concepts: ask about user needs, designer inquiry
- Designers ask about the needs and preferences of users.
- Instances where designers seek input or clarification from users to better understand their needs.

3.
Concepts: inquire about classroom internet, internet availability inquiry
- A designer asks if the classroom has internet access.
- A designer inquires about the availability of internet access in a class.

4.
Concepts: identify user needs, designer user interaction
- A designer identifies user needs by asking about their profession.
- A designer interacts with a user by asking about their profession.

5.
Concepts: teacher identity, user background inquiry, inquire about user's teaching background
- A designer asks a user about their teaching level to understand their background.
- A designer inquires about the user's background, such as their profession or educational level.
- A designer inquires about a user's teaching background to understand their needs better.

6.
Concepts: ask teachers' needs, ask for teachers' help
- Designers asking teachers about their specific needs or preferences.
- Designers ask teachers for assistance or information regarding educational content.

7.
Concepts: general announcement, community announcement, community update
- Designers make general announcements to the community.
- Designers make announcements to the community about updates or changes.
- Instances where designers provide updates or announcements about the software.

8.
Concepts: update notification, update community, inform about updates
- Designers notify the community about updates.
- A designer updates the community about changes in the next update.
- A designer informing the community about new updates or versions.

9.
Concepts: new components, announce component change
- Announcements detailing new features, components, adjustments, and bug fixes.
- Announcements about changes to existing components in the software.

10.
Concepts: new feature, announce upcoming features
- Designers announcing new features or updates.
- Designers announce upcoming features and solicit feedback.

11.
Concepts: update announcement, communication of updates
- Instances where designers provide information about upcoming updates and new features.
- Instances where designers communicate updates, release schedules, or new features to users.

12.
Concepts: updates, planned updates
- Information about changes or new features in upcoming updates.
- Information shared by designers about upcoming features or updates.

13.
Concepts: update clarification, version clarification
- Clarification about the version of the software available.
- Clarification about the version of the software being discussed.

14.
Concepts: software update, software update announcement
- A designer provides updates on the software version and its features.
- Designers provide updates about the software versions and new features.

15.
Concepts: software release, feature release, announce new version release
- Designers announcing software releases or updates.
- A designer announces the release of a new version and its updates.
- A designer announces the release of a new software version to the community.

16.
Concepts: version update announcement, announce software version update
- A participant announces a new software version update.
- A participant announces an upcoming software version update.

17.
Concepts: user communication, communicate new features and improvements
- A participant communicates updates or information about software versions and releases.
- A participant communicates new features and improvements in a software update.

18.
Concepts: version update notes, detailed update notes, version details
- A designer provides detailed notes on version updates and new features.
- A designer provides detailed information about the features and changes in a specific software version.

19.
Concepts: component update, detailed overview of update
- A designer provides detailed information about updates, new features, adjustments, and bug fixes for components.
- A designer provides a detailed overview of new features, components, adjustments, and bug fixes in an update.

20.
Concepts: platform-specific update, platform specific information
- Designers announce updates specific to different platforms.
- Designers providing platform-specific information or updates.

21.
Concepts: product update, technical updates
- Instances where designers provide information about updates or changes to the Physics Lab software.
- Instances where designers provide updates or technical changes to the Physics Lab tool.

22.
Concepts: share knowledge, sharing information for design
- Designers share knowledge or information about the software.
- A user shares information relevant to the design or use of the software.

23.
Concepts: feature prioritization, development prioritization
- Designers discuss the prioritization and implementation of new features.
- Instances where designers discuss the prioritization of different features or sections to be developed.

24.
Concepts: future planning, communication about progress and plans
- Designers discussing future planning or potential updates.
- Designers communicating about progress and future plans.

25.
Concepts: open up plans, project planning
- A designer discusses future plans or potential updates.
- A designer discusses planning for future projects.

26.
Concepts: suggest future project, discussion of further interests
- A designer suggests the possibility of a future project.
- A designer discusses further interests or potential projects.

27.
Concepts: explaining new features, explanation of upcoming features
- A designer explains new features or optimizations being made.
- A designer explains upcoming features or functionalities that will be added to the software.

28.
Concepts: confirm feature update, update on feature development
- A designer confirming that a feature update will be released soon.
- A designer provides an update on the development progress of a feature.

29.
Concepts: feature expansion, feature implementation
- A designer discusses the expansion or addition of new features.
- A designer talks about implementing a feature in the next update.

30.
Concepts: promise to add feature later, promise a future perfection of a feature
- A designer promises to add a feature at a later time.
- A designer promising that a feature will be perfected in the future.

31.
Concepts: future feature plans, list upcoming features
- A designer outlines future plans for specific features and improvements.
- A designer listing features that will be included in future updates.

32.
Concepts: transparency, development transparency
- Designers provide transparent updates about the progress and challenges of development.
- Instances where designers provide detailed information about development processes, challenges, and progress.
- Keeping the community informed about the development process and upcoming changes.

33.
Concepts: communicate progress, share info about development update
- Updates on the progress of software development or release schedules.
- Sharing information about development updates or progress.

34.
Concepts: share progress, provide progress report, communicate development progress, progress update
- A designer shares progress or updates on the software version.
- Designers provide updates on the progress of the software development.
- Designers communicate the progress of development or upcoming updates.
- Designers provide updates on the progress of software development.

35.
Concepts: indicate ongoing work, promise that the update is ongoing
- A designer indicates ongoing work on a project.
- A designer indicates that updates are in progress.

36.
Concepts: update preview, feature preview
- A designer previews upcoming updates.
- A designer previews upcoming updates with a visual.

37.
Concepts: visual update, share visual update
- A designer shares a visual update in preparation.
- A designer shares visual updates or images related to the project.

38.
Concepts: give a timeline, give a timeline for release
- Designers provide timelines for upcoming updates or releases.
- A designer provides a specific timeline for when a new version or update will be released.

39.
Concepts: development timeline, give a timeline of feature development
- Designers provide timelines for the development or release of features.
- A designer giving a timeline for when a feature will be developed.

40.
Concepts: update planning, future update plans
- A designer discusses the planning and timing of an upcoming update.
- A designer discusses future updates and the timeline for implementing new features.

41.
Concepts: update schedule, share update timeline
- A designer provides a schedule for an upcoming update.
- A designer shares the timeline for an update.

42.
Concepts: release schedule, version release management
- A designer provides the release schedule for different versions of the software.
- A designer discusses the release schedule for different versions of the software.

43.
Concepts: release process, update on release process
- A designer discussing the process of releasing the software on different platforms.
- A designer providing an update on the release process.

44.
Concepts: encouraging feedback, encouragement of user feedback, encourage user suggestions
- A designer encouraging users to provide more suggestions.
- Instances where designers encourage users to provide suggestions or feedback.
- Designers encourage users to provide suggestions.

45.
Concepts: prompting user feedback, user feedback and communication
- A designer encourages users to provide feedback and report any issues.
- A designer inviting users to provide feedback and communicate issues.

46.
Concepts: user feedback request, solicit user feedback
- A designer requests more user feedback and suggestions.
- Designers soliciting feedback or suggestions from users.

47.
Concepts: problem solving, encourage problem reporting
- Encouraging users to report problems or issues.
- Designers encouraging users to report any problems they encounter.

48.
Concepts: open communication, foster open dialogue
- A designer encourages open communication and feedback within the group.
- A designer fosters open dialogue and encourages problem reporting.

49.
Concepts: feedback, provide feedback
- Providing feedback or suggestions about the development process.
- Providing feedback or suggestions with justifications.

50.
Concepts: designer acknowledgment, acknowledgment and implementation
- Designers acknowledging user feedback and indicating future updates.
- Designers acknowledging user feedback and discussing plans to implement suggested features.

51.
Concepts: feedback loop, community feedback loop
- Processes where user feedback is solicited and incorporated into design decisions.
- The process of collecting, considering, and implementing user feedback.
- Instances where users provide feedback on the software and designers respond to it.

52.
Concepts: seeking input, elicit feedback, invite feedback, seeking feedback, request suggestions
- A designer seeks input or suggestions from the community.
- A designer elicits feedback or suggestions from the community.
- Designers invite feedback or suggestions from the community.
- Designers seek feedback or suggestions from the community regarding features or improvements.
- A designer requests suggestions or feedback from the community.

53.
Concepts: consultation, consulting community
- A designer consults the community for feedback or information.
- A designer consults the community for input or feedback.

54.
Concepts: opinion gathering, engage community in design process
- Designers gather opinions from the community before making decisions.
- Designers involve the community in the design process by seeking their input.

55.
Concepts: plan to gather feedback, confirmation of collaboration
- A designer mentions the plan to gather opinions before starting a new project phase.
- A designer confirms the plan to gather opinions before starting a new project phase.

56.
Concepts: consider user feedback, inquiring user input for future iterations, iterative development based on user feedback
- A designer considering user feedback for future updates.
- A designer inquires about user input for future iterations.
- A designer discussing updates and asking for user feedback to guide further development.

57.
Concepts: group sharing, suggest group sharing
- Designers sharing resources or information with the group.
- A designer suggests sharing information or files within a group.

58.
Concepts: community building, community interaction
- Users and designers engaging in community-building interactions.
- Instances of interaction that foster a sense of community among users and designers.

59.
Concepts: cultivating community, encouraging user interaction
- A designer encourages community participation and feedback for feature development.
- A designer encourages user interaction and feedback within the community.

60.
Concepts: offering co-designing, co-designing with users
- A designer offering to involve users in the design process.
- Involving users in the design process, allowing them to contribute ideas and make decisions.

61.
Concepts: involving users, user involvement
- Instances where designers actively involve users in the design process.
- Instances where users are involved in the design process, either through feedback or testing.

62.
Concepts: engage in problem solving, collaborative problem solving
- Designers engaging in problem-solving discussions with users.
- Moments where designers and users work together to address issues.
- Collaborative efforts between users and designers to solve issues and improve the product.
- Instances where users and designers work together to address issues or improve the software.

63.
Concepts: explain complexity, give reason for delay
- A designer explains the complexity of a task and the need for more time.
- A designer explains that a task is complex and will take more time to complete.

64.
Concepts: feature complexity, difficulty in development
- A designer discusses the complexity and timeframe of feature development.
- A designer discusses the complexity and time required for development.
===
---
Definitions for each code (64 in total):
1.
Concepts: seeking context, gather additional information
Relationship: Both concepts involve the designer's effort to understand the user's situation better.
Criteria: Designers ask for contextual information to better understand the user's situation or needs.
Phrase: Seek contextual understanding

2.
Concepts: ask about user needs, designer inquiry
Relationship: Both concepts involve designers asking questions to understand user needs.
Criteria: Designers ask about the needs and preferences of users.
Phrase: Inquire about user needs

3.
Concepts: inquire about classroom internet, internet availability inquiry
Relationship: Both concepts involve asking about internet access in a classroom setting.
Criteria: Designers ask if the classroom has internet access.
Phrase: Inquire about internet availability

4.
Concepts: identify user needs, designer user interaction
Relationship: Both concepts involve designers interacting with users to identify their needs.
Criteria: Designers identify user needs by asking about their profession.
Phrase: Identify user needs through interaction

5.
Concepts: teacher identity, user background inquiry, inquire about user's teaching background
Relationship: All concepts involve designers asking about the user's teaching background to understand their needs.
Criteria: Designers ask a user about their teaching level to understand their background.
Phrase: Inquire about teaching background

6.
Concepts: ask teachers' needs, ask for teachers' help
Relationship: Both concepts involve designers asking teachers for information or assistance.
Criteria: Designers ask teachers about their specific needs or preferences.
Phrase: Ask teachers for needs and help

7.
Concepts: general announcement, community announcement, community update
Relationship: All concepts involve designers making announcements to the community.
Criteria: Designers make general announcements to the community.
Phrase: Make community announcements

8.
Concepts: update notification, update community, inform about updates
Relationship: All concepts involve notifying the community about updates.
Criteria: Designers notify the community about updates.
Phrase: Notify community about updates

9.
Concepts: new components, announce component change
Relationship: Both concepts involve announcing changes or additions to software components.
Criteria: Designers announce new features, components, adjustments, and bug fixes.
Phrase: Announce component changes

10.
Concepts: new feature, announce upcoming features
Relationship: Both concepts involve announcing new or upcoming features.
Criteria: Designers announce new features or updates.
Phrase: Announce new features

11.
Concepts: update announcement, communication of updates
Relationship: Both concepts involve communicating updates to users.
Criteria: Designers provide information about upcoming updates and new features.
Phrase: Communicate updates

12.
Concepts: updates, planned updates
Relationship: Both concepts involve sharing information about future updates.
Criteria: Designers share information about changes or new features in upcoming updates.
Phrase: Share planned updates

13.
Concepts: update clarification, version clarification
Relationship: Both concepts involve clarifying information about software versions.
Criteria: Designers provide clarification about the version of the software available.
Phrase: Clarify software version

14.
Concepts: software update, software update announcement
Relationship: Both concepts involve providing updates on software versions and features.
Criteria: Designers provide updates on the software version and its features.
Phrase: Announce software updates

15.
Concepts: software release, feature release, announce new version release
Relationship: All concepts involve announcing the release of new software versions or features.
Criteria: Designers announce software releases or updates.
Phrase: Announce software releases

16.
Concepts: version update announcement, announce software version update
Relationship: Both concepts involve announcing new software version updates.
Criteria: Participants announce a new software version update.
Phrase: Announce version updates

17.
Concepts: user communication, communicate new features and improvements
Relationship: Both concepts involve communicating new features and improvements to users.
Criteria: Participants communicate updates or information about software versions and releases.
Phrase: Communicate new features and improvements

18.
Concepts: version update notes, detailed update notes, version details
Relationship: All concepts involve providing detailed notes on software version updates.
Criteria: Designers provide detailed notes on version updates and new features.
Phrase: Provide detailed update notes

19.
Concepts: component update, detailed overview of update
Relationship: Both concepts involve providing detailed information about software updates.
Criteria: Designers provide detailed information about updates, new features, adjustments, and bug fixes for components.
Phrase: Provide detailed update overview

20.
Concepts: platform-specific update, platform specific information
Relationship: Both concepts involve providing updates specific to different platforms.
Criteria: Designers announce updates specific to different platforms.
Phrase: Announce platform-specific updates

21.
Concepts: product update, technical updates
Relationship: Both concepts involve providing information about updates to the Physics Lab software.
Criteria: Designers provide information about updates or changes to the Physics Lab software.
Phrase: Provide product updates

22.
Concepts: share knowledge, sharing information for design
Relationship: Both concepts involve sharing information relevant to the software design.
Criteria: Designers share knowledge or information about the software.
Phrase: Share design information

23.
Concepts: feature prioritization, development prioritization
Relationship: Both concepts involve discussing the prioritization of new features.
Criteria: Designers discuss the prioritization and implementation of new features.
Phrase: Discuss feature prioritization

24.
Concepts: future planning, communication about progress and plans
Relationship: Both concepts involve discussing future plans and progress.
Criteria: Designers discuss future planning or potential updates.
Phrase: Discuss future planning

25.
Concepts: open up plans, project planning
Relationship: Both concepts involve discussing future project plans.
Criteria: Designers discuss planning for future projects.
Phrase: Discuss project planning

26.
Concepts: suggest future project, discussion of further interests
Relationship: Both concepts involve suggesting or discussing future projects.
Criteria: Designers suggest the possibility of a future project.
Phrase: Suggest future projects

27.
Concepts: explaining new features, explanation of upcoming features
Relationship: Both concepts involve explaining new or upcoming features.
Criteria: Designers explain new features or optimizations being made.
Phrase: Explain new features

28.
Concepts: confirm feature update, update on feature development
Relationship: Both concepts involve providing updates on feature development.
Criteria: Designers confirm that a feature update will be released soon.
Phrase: Confirm feature updates

29.
Concepts: feature expansion, feature implementation
Relationship: Both concepts involve discussing the expansion or implementation of features.
Criteria: Designers discuss the expansion or addition of new features.
Phrase: Discuss feature expansion

30.
Concepts: promise to add feature later, promise a future perfection of a feature
Relationship: Both concepts involve promising future feature additions or improvements.
Criteria: Designers promise to add a feature at a later time.
Phrase: Promise future feature additions

31.
Concepts: future feature plans, list upcoming features
Relationship: Both concepts involve outlining future plans for features.
Criteria: Designers outline future plans for specific features and improvements.
Phrase: Outline future feature plans

32.
Concepts: transparency, development transparency
Relationship: Both concepts involve providing transparent updates about development.
Criteria: Designers provide transparent updates about the progress and challenges of development.
Phrase: Provide development transparency

33.
Concepts: communicate progress, share info about development update
Relationship: Both concepts involve sharing information about development progress.
Criteria: Designers share information about the progress of software development or release schedules.
Phrase: Communicate development progress

34.
Concepts: share progress, provide progress report, communicate development progress, progress update
Relationship: All concepts involve providing updates on development progress.
Criteria: Designers provide updates on the progress of software development.
Phrase: Provide progress updates

35.
Concepts: indicate ongoing work, promise that the update is ongoing
Relationship: Both concepts involve indicating that work or updates are ongoing.
Criteria: Designers indicate ongoing work on a project.
Phrase: Indicate ongoing work

36.
Concepts: update preview, feature preview
Relationship: Both concepts involve previewing upcoming updates.
Criteria: Designers preview upcoming updates.
Phrase: Preview updates

37.
Concepts: visual update, share visual update
Relationship: Both concepts involve sharing visual updates.
Criteria: Designers share visual updates or images related to the project.
Phrase: Share visual updates

38.
Concepts: give a timeline, give a timeline for release
Relationship: Both concepts involve providing timelines for updates or releases.
Criteria: Designers provide timelines for upcoming updates or releases.
Phrase: Provide release timelines

39.
Concepts: development timeline, give a timeline of feature development
Relationship: Both concepts involve providing timelines for feature development.
Criteria: Designers provide timelines for the development or release of features.
Phrase: Provide development timelines

40.
Concepts: update planning, future update plans
Relationship: Both concepts involve discussing plans for future updates.
Criteria: Designers discuss the planning and timing of an upcoming update.
Phrase: Discuss update planning

41.
Concepts: update schedule, share update timeline
Relationship: Both concepts involve providing schedules or timelines for updates.
Criteria: Designers provide a schedule for an upcoming update.
Phrase: Share update schedules

42.
Concepts: release schedule, version release management
Relationship: Both concepts involve discussing the release schedule for software versions.
Criteria: Designers provide the release schedule for different versions of the software.
Phrase: Provide release schedules

43.
Concepts: release process, update on release process
Relationship: Both concepts involve discussing the process of releasing software.
Criteria: Designers discuss the process of releasing the software on different platforms.
Phrase: Discuss release process

44.
Concepts: encouraging feedback, encouragement of user feedback, encourage user suggestions
Relationship: All concepts involve encouraging users to provide feedback or suggestions.
Criteria: Designers encourage users to provide more suggestions.
Phrase: Encourage user feedback

45.
Concepts: prompting user feedback, user feedback and communication
Relationship: Both concepts involve encouraging users to provide feedback and communicate issues.
Criteria: Designers encourage users to provide feedback and report any issues.
Phrase: Prompt user feedback

46.
Concepts: user feedback request, solicit user feedback
Relationship: Both concepts involve requesting feedback from users.
Criteria: Designers request more user feedback and suggestions.
Phrase: Request user feedback

47.
Concepts: problem solving, encourage problem reporting
Relationship: Both concepts involve encouraging users to report problems.
Criteria: Designers encourage users to report problems or issues.
Phrase: Encourage problem reporting

48.
Concepts: open communication, foster open dialogue
Relationship: Both concepts involve fostering open communication and feedback.
Criteria: Designers encourage open communication and feedback within the group.
Phrase: Foster open dialogue

49.
Concepts: feedback, provide feedback
Relationship: Both concepts involve providing feedback or suggestions.
Criteria: Users provide feedback or suggestions about the development process.
Phrase: Provide feedback

50.
Concepts: designer acknowledgment, acknowledgment and implementation
Relationship: Both concepts involve designers acknowledging and discussing the implementation of user feedback.
Criteria: Designers acknowledge user feedback and indicate future updates.
Phrase: Acknowledge user feedback

51.
Concepts: feedback loop, community feedback loop
Relationship: Both concepts involve the process of collecting and incorporating user feedback.
Criteria: Designers solicit and incorporate user feedback into design decisions.
Phrase: Create feedback loop

52.
Concepts: seeking input, elicit feedback, invite feedback, seeking feedback, request suggestions
Relationship: All concepts involve seeking feedback or suggestions from the community.
Criteria: Designers seek input or suggestions from the community.
Phrase: Seek community feedback

53.
Concepts: consultation, consulting community
Relationship: Both concepts involve consulting the community for feedback or information.
Criteria: Designers consult the community for feedback or information.
Phrase: Consult community

54.
Concepts: opinion gathering, engage community in design process
Relationship: Both concepts involve gathering opinions and engaging the community in the design process.
Criteria: Designers gather opinions from the community before making decisions.
Phrase: Gather community opinions

55.
Concepts: plan to gather feedback, confirmation of collaboration
Relationship: Both concepts involve planning to gather feedback before starting a new project phase.
Criteria: Designers mention the plan to gather opinions before starting a new project phase.
Phrase: Plan to gather feedback

56.
Concepts: consider user feedback, inquiring user input for future iterations, iterative development based on user feedback
Relationship: All concepts involve considering user feedback for future development.
Criteria: Designers consider user feedback for future updates.
Phrase: Consider user feedback

57.
Concepts: group sharing, suggest group sharing
Relationship: Both concepts involve sharing resources or information within a group.
Criteria: Designers share resources or information with the group.
Phrase: Share within group

58.
Concepts: community building, community interaction
Relationship: Both concepts involve interactions that foster a sense of community.
Criteria: Users and designers engage in community-building interactions.
Phrase: Foster community interaction

59.
Concepts: cultivating community, encouraging user interaction
Relationship: Both concepts involve encouraging community participation and interaction.
Criteria: Designers encourage community participation and feedback for feature development.
Phrase: Encourage community participation

60.
Concepts: offering co-designing, co-designing with users
Relationship: Both concepts involve involving users in the design process.
Criteria: Designers offer to involve users in the design process.
Phrase: Offer co-designing

61.
Concepts: involving users, user involvement
Relationship: Both concepts involve actively involving users in the design process.
Criteria: Designers actively involve users in the design process.
Phrase: Involve users in design

62.
Concepts: engage in problem solving, collaborative problem solving
Relationship: Both concepts involve collaborative problem-solving efforts between users and designers.
Criteria: Designers engage in problem-solving discussions with users.
Phrase: Engage in collaborative problem solving

63.
Concepts: explain complexity, give reason for delay
Relationship: Both concepts involve explaining the complexity of a task and the need for more time.
Criteria: Designers explain the complexity of a task and the need for more time.
Phrase: Explain task complexity

64.
Concepts: feature complexity, difficulty in development
Relationship: Both concepts involve discussing the complexity and timeframe of feature development.
Criteria: Designers discuss the complexity and time required for development.
Phrase: Discuss feature complexity
---